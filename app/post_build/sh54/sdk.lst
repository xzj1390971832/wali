
sdk.elf:	file format ELF32-pi32

Disassembly of section .data:
g_loop_tab:
       0:	 00 01 02 00 00 01 02 03         ........
       8:	 02 01 00 00                     ....


lrc_pll_ds:
       c:	 51 07 00 00                     Q...


lowpower_usec:
      10:	 fe ff ff ff                     ....


def_cam:
      14:	 10 f0 90 30 b0 80 00 00         ...0....


key_scan.last_key:
      1c:	 ff                              .


key_scan.key_type:
      1d:	 ff                              .


key_filter.used_key:
      1e:	 ff 00                           ..


puk:
      20:	 98 36 6c f3                     .6l.


sdk_meky_check.check_count:
      24:	 a0 0f 00 00                     ....


__ctype_ptr__:
      28:	 47 da 11 00                     G...


cbuf_write:
      2c:    16 c2       	[--sp] = {rets, r6-r4} 			  ## common.c:57:0
      2e:    14 c6       	r4 = r2 			  ## common.c:57:0
      30:    0d c6       	r5 = r1 			  ## common.c:57:0
      32:    06 c6       	r6 = r0 			  ## common.c:57:0
      34:    61 e1 60 77 	call 798444 <local_irq_disable : c2f24 >			  ## common.c:59:5
      38:    30 c6       	r0 = r6 			  ## common.c:60:15
      3a:    29 c6       	r1 = r5 			  ## common.c:60:15
      3c:    22 c6       	r2 = r4 			  ## common.c:60:15
      3e:    61 e1 d0 79 	call 798522 <_cbuf_write : c2f7c >			  ## common.c:60:15
      42:    04 c6       	r4 = r0 			  ## common.c:60:15
      44:    61 e1 c0 76 	call 798424 <local_irq_enable : c2f20 >			  ## common.c:61:5
      48:    20 c6       	r0 = r4 			  ## common.c:62:5
      4a:    16 c0       	{pc, r6-r4} = [sp++] 			  ## common.c:62:5


udelay:
      4c:    01 2a       	r1 = [addr(32)]  <.GCPI160_0 : 6c >			  ## common.c:19:0
      4e:    49 4b       	r1 = [r1 + 52] 			  ## clock.c:170:12
      50:    02 2a       	r2 = [addr(32)]  <.GCPI160_1 : 70 >			  ## common.c:20:43
      52:    40 fc 11 02 	r1 = r1 / r2 			  ## common.c:20:43
      56:    07 08       	goto 14 <udelay+0x1A : 66 >
      58:    c0 d3       	r0 = r0 + -1 			  ## common.c:22:14
      5a:    02 80       	r2 = 0 
      5c:    02 08       	goto 4 <udelay+0x16 : 62 >
      5e:    00 00       	nop			  ## common.c:24:13
      60:    52 d0       	r2 = r2 + 1 			  ## common.c:23:36
      62:    11 ce       	cmp r2, r1			  ## common.c:23:9
      64:    fc 13       	if (nzcv < 0) goto -8 <udelay+0x12 : 5e >			  ## common.c:23:9
      66:    88 27       	if (r0 != 0) goto -16 <udelay+0xC : 58 >
      68:    20 00       	rts			  ## common.c:27:1
      6a:    00 00       	nop			  ## common.c:27:1


.GCPI160_0:
      6c:    60 1c 00 00     < 7264 : 0x1C60 >

.GCPI160_1:
      70:    00 12 7a 00     < 8000000 : 0x7A1200 >

delay:
      74:    fc cd       	sp += -4 			  ## common.c:11:0
      76:    00 60       	[sp] = r0 			  ## common.c:11:0
      78:    01 08       	goto 2 <delay+0x8 : 7c >			  ## common.c:11:0
      7a:    00 00       	nop			  ## common.c:13:9
      7c:    00 40       	r0 = [sp] 			  ## common.c:12:13
      7e:    c1 d3       	r1 = r0 + -1 			  ## common.c:12:13
      80:    01 60       	[sp] = r1 			  ## common.c:12:13
      82:    b8 27       	if (r0 != 0) goto -10 <delay+0x6 : 7a >			  ## common.c:12:13
      84:    04 cd       	sp += 4 
      86:    20 00       	rts			  ## common.c:15:1


pll_config:
      88:    16 c2       	[--sp] = {rets, r6-r4} 			  ## clock.c:363:0
      8a:    05 c6       	r5 = r0 			  ## clock.c:363:0
      8c:    06 2d       	r6 = [addr(80)]  <.GCPI178_1 : dc >			  ## clock.c:363:0
      8e:    31 49       	r1 = [r6 + 16] 			  ## clock.c:366:5
      90:    84 2c       	r4 = [addr(72)]  <.GCPI178_0 : d8 >			  ## clock.c:366:5
      92:    20 c6       	r0 = r4 			  ## clock.c:366:5
      94:    61 e1 20 7a 	call 798532 <xprintf : c2fdc >			  ## clock.c:366:5
      98:    61 e1 40 74 	call 798344 <local_irq_disable : c2f24 >			  ## clock.c:368:5
      9c:    f0 e2 6b 02 	[r6 + -20] |= 2 			  ## clock.c:369:18
      a0:    f0 e3 6b 20 	[r6 + -20] &= (~32) 			  ## clock.c:370:18
      a4:    50 80       	r0 = 10 			  ## clock.c:371:5
      a6:    e6 04       	call -52 <delay : 74 >			  ## clock.c:371:5
      a8:    0f ed 50 fe 	r0 = r5 + 4094 			  ## clock.c:364:12
      ac:    31 49       	r1 = [r6 + 16] 			  ## clock.c:373:5
      ae:    49 ac       	r1 = r1 >> 12 			  ## clock.c:373:5
      b0:    41 f6 10 94 	r0 <= insert(r1, p:12, l:20) 			  ## clock.c:373:5
      b4:    30 69       	[r6 + 16] = r0 			  ## clock.c:373:5
      b6:    00 e2 63 01 	[r6 + 12] |= 1 			  ## clock.c:375:18
      ba:    40 81       	r0 = 40 			  ## clock.c:377:5
      bc:    db 04       	call -74 <delay : 74 >			  ## clock.c:377:5
      be:    00 e2 63 02 	[r6 + 12] |= 2 			  ## clock.c:378:18
      c2:    a0 80       	r0 = 20 			  ## clock.c:380:5
      c4:    d7 04       	call -82 <delay : 74 >			  ## clock.c:380:5
      c6:    f0 e2 6b 20 	[r6 + -20] |= 32 			  ## clock.c:381:18
      ca:    61 e1 90 72 	call 798290 <local_irq_enable : c2f20 >			  ## clock.c:383:5
      ce:    31 49       	r1 = [r6 + 16] 			  ## clock.c:385:5
      d0:    20 c6       	r0 = r4 			  ## clock.c:385:5
      d2:    61 e1 30 78 	call 798470 <xprintf : c2fdc >			  ## clock.c:385:5
      d6:    16 c0       	{pc, r6-r4} = [sp++] 			  ## clock.c:385:5


.GCPI178_0:
      d8:    82 b4 11 00     < 1160322 : 0x11B482 >

.GCPI178_1:
      dc:    14 18 09 00     < 595988 : 0x91814 >

spi_cs:
      e0:    fc cd       	sp += -4 			  ## vm_sfc.c:128:0
      e2:    81 2a       	r1 = [addr(40)]  <.GCPI206_0 : 10c >			  ## vm_sfc.c:128:0
      e4:    00 e3 11 04 	[r1 + 4] &= (~4) 			  ## vm_sfc.c:129:19
      e8:    cb 4f       	r3 = [r1 + -4] 			  ## vm_sfc.c:129:19
      ea:    c0 f3 32 04 	r2 = r3 & (~4) 			  ## vm_sfc.c:130:53
      ee:    13 d8       	r3 |= 4			  ## vm_sfc.c:130:25
      f0:    10 20       	if (r0 == 0) goto 2 <spi_cs+0x14 : f4 >			  ## vm_sfc.c:130:25
      f2:    1a c6       	r2 = r3 			  ## vm_sfc.c:130:5
      f4:    ca 6f       	[r1 + -4] = r2 
      f6:    50 80       	r0 = 10 
      f8:    01 08       	goto 2 <spi_cs+0x1C : fc >
      fa:    00 40       	r0 = [sp] 			  ## vm_sfc.c:120:13
      fc:    00 60       	[sp] = r0 
      fe:    00 40       	r0 = [sp] 			  ## vm_sfc.c:119:13
     100:    c1 d3       	r1 = r0 + -1 			  ## vm_sfc.c:119:13
     102:    01 60       	[sp] = r1 			  ## vm_sfc.c:119:13
     104:    a8 27       	if (r0 != 0) goto -12 <spi_cs+0x1A : fa >			  ## vm_sfc.c:119:13
     106:    04 cd       	sp += 4 
     108:    20 00       	rts			  ## vm_sfc.c:132:1
     10a:    00 00       	nop			  ## vm_sfc.c:132:1


.GCPI206_0:
     10c:    4c 00 09 00     < 589900 : 0x9004C >

spi_soft_writebyte:
     110:    14 c2       	[--sp] = {rets, r4} 			  ## vm_sfc.c:963:0
     112:    89 29       	r1 = [addr(152)]  <.GCPI262_0 : 1ac >			  ## vm_sfc.c:963:0
     114:    ca 4f       	r2 = [r1 + -4] 			  ## vm_sfc.c:964:19
     116:    00 e3 11 02 	[r1 + 4] &= (~2) 			  ## vm_sfc.c:965:20
     11a:    43 a7       	r3 = r0 >> 7 			  ## vm_sfc.c:966:31
     11c:    14 c6       	r4 = r2 			  ## vm_sfc.c:966:31
     11e:    40 f6 34 21 	r4 <= insert(r3, p:1, l:1) 			  ## vm_sfc.c:966:31
     122:    cc 6f       	[r1 + -4] = r4 			  ## vm_sfc.c:966:20
     124:    f0 e2 1f 01 	[r1 + -4] |= 1 			  ## vm_sfc.c:967:21
     128:    f0 e3 1f 01 	[r1 + -4] &= (~1) 			  ## vm_sfc.c:968:21
     12c:    43 a6       	r3 = r0 >> 6 			  ## vm_sfc.c:966:56
     12e:    14 c6       	r4 = r2 			  ## vm_sfc.c:969:31
     130:    40 f6 34 21 	r4 <= insert(r3, p:1, l:1) 			  ## vm_sfc.c:969:31
     134:    cc 6f       	[r1 + -4] = r4 			  ## vm_sfc.c:969:20
     136:    f0 e2 1f 01 	[r1 + -4] |= 1 			  ## vm_sfc.c:970:21
     13a:    f0 e3 1f 01 	[r1 + -4] &= (~1) 			  ## vm_sfc.c:971:21
     13e:    43 a5       	r3 = r0 >> 5 			  ## vm_sfc.c:972:31
     140:    14 c6       	r4 = r2 			  ## vm_sfc.c:972:31
     142:    40 f6 34 21 	r4 <= insert(r3, p:1, l:1) 			  ## vm_sfc.c:972:31
     146:    cc 6f       	[r1 + -4] = r4 			  ## vm_sfc.c:972:20
     148:    f0 e2 1f 01 	[r1 + -4] |= 1 			  ## vm_sfc.c:973:21
     14c:    f0 e3 1f 01 	[r1 + -4] &= (~1) 			  ## vm_sfc.c:974:21
     150:    43 a4       	r3 = r0 >> 4 			  ## vm_sfc.c:975:31
     152:    14 c6       	r4 = r2 			  ## vm_sfc.c:975:31
     154:    40 f6 34 21 	r4 <= insert(r3, p:1, l:1) 			  ## vm_sfc.c:975:31
     158:    cc 6f       	[r1 + -4] = r4 			  ## vm_sfc.c:975:20
     15a:    f0 e2 1f 01 	[r1 + -4] |= 1 			  ## vm_sfc.c:976:21
     15e:    f0 e3 1f 01 	[r1 + -4] &= (~1) 			  ## vm_sfc.c:977:21
     162:    43 a3       	r3 = r0 >> 3 			  ## vm_sfc.c:978:31
     164:    14 c6       	r4 = r2 			  ## vm_sfc.c:978:31
     166:    40 f6 34 21 	r4 <= insert(r3, p:1, l:1) 			  ## vm_sfc.c:978:31
     16a:    cc 6f       	[r1 + -4] = r4 			  ## vm_sfc.c:978:20
     16c:    f0 e2 1f 01 	[r1 + -4] |= 1 			  ## vm_sfc.c:979:21
     170:    f0 e3 1f 01 	[r1 + -4] &= (~1) 			  ## vm_sfc.c:980:21
     174:    43 a2       	r3 = r0 >> 2 			  ## vm_sfc.c:981:31
     176:    14 c6       	r4 = r2 			  ## vm_sfc.c:981:31
     178:    40 f6 34 21 	r4 <= insert(r3, p:1, l:1) 			  ## vm_sfc.c:981:31
     17c:    cc 6f       	[r1 + -4] = r4 			  ## vm_sfc.c:981:20
     17e:    f0 e2 1f 01 	[r1 + -4] |= 1 			  ## vm_sfc.c:982:21
     182:    f0 e3 1f 01 	[r1 + -4] &= (~1) 			  ## vm_sfc.c:983:21
     186:    43 a1       	r3 = r0 >> 1 			  ## vm_sfc.c:981:51
     188:    14 c6       	r4 = r2 			  ## vm_sfc.c:984:31
     18a:    40 f6 34 21 	r4 <= insert(r3, p:1, l:1) 			  ## vm_sfc.c:984:31
     18e:    cc 6f       	[r1 + -4] = r4 			  ## vm_sfc.c:984:20
     190:    f0 e2 1f 01 	[r1 + -4] |= 1 			  ## vm_sfc.c:985:21
     194:    f0 e3 1f 01 	[r1 + -4] &= (~1) 			  ## vm_sfc.c:986:21
     198:    40 f6 02 21 	r2 <= insert(r0, p:1, l:1) 			  ## vm_sfc.c:987:31
     19c:    ca 6f       	[r1 + -4] = r2 			  ## vm_sfc.c:987:20
     19e:    f0 e2 1f 01 	[r1 + -4] |= 1 			  ## vm_sfc.c:988:21
     1a2:    f0 e3 1f 01 	[r1 + -4] &= (~1) 			  ## vm_sfc.c:989:21
     1a6:    f0 e3 1f 02 	[r1 + -4] &= (~2) 			  ## vm_sfc.c:990:20
     1aa:    14 c0       	{pc, r4} = [sp++] 			  ## vm_sfc.c:990:20


.GCPI262_0:
     1ac:    4c 00 09 00     < 589900 : 0x9004C >

norflash_exit_sleep:
     1b0:    1f c2       	[--sp] = {rets} 			  ## vm_sfc.c:1185:0
     1b2:    00 80       	r0 = 0 			  ## vm_sfc.c:1186:5
     1b4:    95 04       	call -214 <spi_cs : e0 >			  ## vm_sfc.c:1186:5
     1b6:    10 ea ab 00 	r0 = 171 			  ## vm_sfc.c:1187:5
     1ba:    aa 04       	call -172 <spi_soft_writebyte : 110 >			  ## vm_sfc.c:1187:5
     1bc:    08 80       	r0 = 1 			  ## vm_sfc.c:1188:5
     1be:    90 04       	call -224 <spi_cs : e0 >			  ## vm_sfc.c:1188:5
     1c0:    28 80       	r0 = 5 			  ## vm_sfc.c:1189:5
     1c2:    40 c4       	{rets} = [sp++] 			  ## vm_sfc.c:1189:5
     1c4:    43 0f       	goto -378 <udelay : 4c >			  ## vm_sfc.c:1189:5


ze_entry_tm:
     1c6:    1f c2       	[--sp] = {rets} 			  ## vm_sfc.c:1014:0
     1c8:    50 80       	r0 = 10 			  ## vm_sfc.c:1016:5
     1ca:    ff e1 ff f3 	call -386 <udelay : 4c >			  ## vm_sfc.c:1016:5
     1ce:    00 80       	r0 = 0 			  ## vm_sfc.c:1017:5
     1d0:    87 04       	call -242 <spi_cs : e0 >			  ## vm_sfc.c:1017:5
     1d2:    b0 81       	r0 = 54 			  ## vm_sfc.c:1018:5
     1d4:    9d 04       	call -198 <spi_soft_writebyte : 110 >			  ## vm_sfc.c:1018:5
     1d6:    08 80       	r0 = 1 			  ## vm_sfc.c:1019:5
     1d8:    83 04       	call -250 <spi_cs : e0 >			  ## vm_sfc.c:1019:5
     1da:    10 80       	r0 = 2 			  ## vm_sfc.c:1020:5
     1dc:    ff e1 6f f3 	call -404 <udelay : 4c >			  ## vm_sfc.c:1020:5
     1e0:    00 80       	r0 = 0 			  ## vm_sfc.c:1021:5
     1e2:    ff e1 df f7 	call -262 <spi_cs : e0 >			  ## vm_sfc.c:1021:5
     1e6:    10 ea d7 00 	r0 = 215 			  ## vm_sfc.c:1022:5
     1ea:    92 04       	call -220 <spi_soft_writebyte : 110 >			  ## vm_sfc.c:1022:5
     1ec:    08 80       	r0 = 1 			  ## vm_sfc.c:1023:5
     1ee:    ff e1 7f f7 	call -274 <spi_cs : e0 >			  ## vm_sfc.c:1023:5
     1f2:    10 80       	r0 = 2 			  ## vm_sfc.c:1024:5
     1f4:    ff e1 af f2 	call -428 <udelay : 4c >			  ## vm_sfc.c:1024:5
     1f8:    00 80       	r0 = 0 			  ## vm_sfc.c:1025:5
     1fa:    ff e1 1f f7 	call -286 <spi_cs : e0 >			  ## vm_sfc.c:1025:5
     1fe:    10 ea a0 00 	r0 = 160 			  ## vm_sfc.c:1026:5
     202:    86 04       	call -244 <spi_soft_writebyte : 110 >			  ## vm_sfc.c:1026:5
     204:    08 80       	r0 = 1 			  ## vm_sfc.c:1027:5
     206:    ff e1 bf f6 	call -298 <spi_cs : e0 >			  ## vm_sfc.c:1027:5
     20a:    10 80       	r0 = 2 			  ## vm_sfc.c:1028:5
     20c:    40 c4       	{rets} = [sp++] 			  ## vm_sfc.c:1028:5
     20e:    1e 0f       	goto -452 <udelay : 4c >			  ## vm_sfc.c:1028:5


check_flash_type:
     210:    16 c2       	[--sp] = {rets, r6-r4} 			  ## vm_sfc.c:1120:0
     212:    58 2d       	r0 = [addr(468)]  <.GCPI265_0 : 3e8 >			  ## vm_sfc.c:1121:21
     214:    20 e8 00 27 	r0 = [r0 + 156] 			  ## vm_sfc.c:1121:21
     218:    99 2d       	r1 = [addr(472)]  <.GCPI265_2 : 3f0 >			  ## vm_sfc.c:1121:43
     21a:    40 d4       	r0 = r0 + r1 			  ## vm_sfc.c:1121:43
     21c:    08 98       	cmp r0, 1			  ## vm_sfc.c:1121:43
     21e:    00 fb 18 0e 	if (nzcv > 0) goto 450 <check_flash_type+0x1D4 : 3e4 >			  ## vm_sfc.c:1121:43
     222:    18 2d       	r0 = [addr(464)]  <.GCPI265_3 : 3f4 >
     224:    01 48       	r1 = [r0 + 0] 			  ## vm_sfc.c:1123:33
     226:    8e f3 11 70 	r1 = r1 & 3840 			  ## vm_sfc.c:1123:43
     22a:    81 ef 10 00 	cmp r1, 256			  ## vm_sfc.c:1125:34
     22e:    05 11       	ifs (nzcv != 0) goto 10 <check_flash_type+0x2A : 23a >			  ## vm_sfc.c:1125:34
     230:    00 48       	r0 = [r0 + 0] 			  ## vm_sfc.c:1125:47
     232:    00 f4 00 08 	tst r0, 8			  ## vm_sfc.c:1125:13
     236:    00 fb 50 0d 	ifs (nzcv == 0) goto 426 <check_flash_type+0x1D4 : 3e4 >			  ## vm_sfc.c:1125:13
     23a:    a0 80       	r0 = 20 			  ## vm_sfc.c:1129:9
     23c:    ff e1 6f f0 	call -500 <udelay : 4c >			  ## vm_sfc.c:1129:9
     240:    c2 04       	call -124 <ze_entry_tm : 1c6 >			  ## vm_sfc.c:1063:5
     242:    10 80       	r0 = 2 			  ## vm_sfc.c:1066:5
     244:    ff e1 2f f0 	call -508 <udelay : 4c >			  ## vm_sfc.c:1066:5
     248:    04 80       	r4 = 0 			  ## vm_sfc.c:1066:5
     24a:    00 80       	r0 = 0 			  ## vm_sfc.c:1067:5
     24c:    ff e1 8f f4 	call -368 <spi_cs : e0 >			  ## vm_sfc.c:1067:5
     250:    78 80       	r0 = 15 			  ## vm_sfc.c:1068:5
     252:    ff e1 df f5 	call -326 <spi_soft_writebyte : 110 >			  ## vm_sfc.c:1068:5
     256:    00 80       	r0 = 0 			  ## vm_sfc.c:1069:5
     258:    ff e1 af f5 	call -332 <spi_soft_writebyte : 110 >			  ## vm_sfc.c:1069:5
     25c:    00 80       	r0 = 0 			  ## vm_sfc.c:1070:5
     25e:    ff e1 7f f5 	call -338 <spi_soft_writebyte : 110 >			  ## vm_sfc.c:1070:5
     262:    18 80       	r0 = 3 			  ## vm_sfc.c:1071:5
     264:    ff e1 4f f5 	call -344 <spi_soft_writebyte : 110 >			  ## vm_sfc.c:1071:5
     268:    00 82       	r0 = 64 			  ## vm_sfc.c:1072:5
     26a:    ff e1 1f f5 	call -350 <spi_soft_writebyte : 110 >			  ## vm_sfc.c:1072:5
     26e:    08 80       	r0 = 1 			  ## vm_sfc.c:1073:5
     270:    ff e1 6f f3 	call -404 <spi_cs : e0 >			  ## vm_sfc.c:1073:5
     274:    10 80       	r0 = 2 			  ## vm_sfc.c:1074:5
     276:    ff e1 9f ee 	call -558 <udelay : 4c >			  ## vm_sfc.c:1074:5
     27a:    d6 2f       	r6 = [addr(380)]  <.GCPI265_4 : 3f8 >
     27c:    15 2f       	r5 = [addr(368)]  <.GCPI265_1 : 3ec >
     27e:    4b 08       	goto 150 <check_flash_type+0x106 : 316 >
     280:    00 80       	r0 = 0 			  ## vm_sfc.c:1077:9
     282:    ff e1 df f2 	call -422 <spi_cs : e0 >			  ## vm_sfc.c:1077:9
     286:    30 80       	r0 = 6 			  ## vm_sfc.c:1078:9
     288:    ff e1 2f f4 	call -380 <spi_soft_writebyte : 110 >			  ## vm_sfc.c:1078:9
     28c:    08 80       	r0 = 1 			  ## vm_sfc.c:1079:9
     28e:    ff e1 7f f2 	call -434 <spi_cs : e0 >			  ## vm_sfc.c:1079:9
     292:    10 80       	r0 = 2 			  ## vm_sfc.c:1082:9
     294:    ff e1 af ed 	call -588 <udelay : 4c >			  ## vm_sfc.c:1082:9
     298:    00 80       	r0 = 0 			  ## vm_sfc.c:1083:9
     29a:    ff e1 1f f2 	call -446 <spi_cs : e0 >			  ## vm_sfc.c:1083:9
     29e:    10 80       	r0 = 2 			  ## vm_sfc.c:1084:9
     2a0:    ff e1 6f f3 	call -404 <spi_soft_writebyte : 110 >			  ## vm_sfc.c:1084:9
     2a4:    00 80       	r0 = 0 			  ## vm_sfc.c:1085:9
     2a6:    ff e1 3f f3 	call -410 <spi_soft_writebyte : 110 >			  ## vm_sfc.c:1085:9
     2aa:    00 80       	r0 = 0 			  ## vm_sfc.c:1086:9
     2ac:    ff e1 0f f3 	call -416 <spi_soft_writebyte : 110 >			  ## vm_sfc.c:1086:9
     2b0:    20 c9       	r0 = r4.b 			  ## vm_sfc.c:1087:9
     2b2:    ff e1 df f2 	call -422 <spi_soft_writebyte : 110 >			  ## vm_sfc.c:1087:9
     2b6:    00 e7 50 04 	r0 = b[r5 + r4] 			  ## vm_sfc.c:1088:9
     2ba:    ff e1 9f f2 	call -430 <spi_soft_writebyte : 110 >			  ## vm_sfc.c:1088:9
     2be:    08 80       	r0 = 1 			  ## vm_sfc.c:1090:9
     2c0:    ff e1 ef f0 	call -484 <spi_cs : e0 >			  ## vm_sfc.c:1090:9
     2c4:    10 80       	r0 = 2 			  ## vm_sfc.c:1091:9
     2c6:    ff e1 1f ec 	call -638 <udelay : 4c >			  ## vm_sfc.c:1091:9
     2ca:    00 80       	r0 = 0 			  ## vm_sfc.c:1095:9
     2cc:    ff e1 8f f0 	call -496 <spi_cs : e0 >			  ## vm_sfc.c:1095:9
     2d0:    05 08       	goto 10 <check_flash_type+0xCC : 2dc >			  ## vm_sfc.c:1095:9
     2d2:    f6 d3       	r6 = r6 + -1 			  ## vm_sfc.c:1102:34
     2d4:    03 11       	ifs (nzcv != 0) goto 6 <check_flash_type+0xCC : 2dc >
     2d6:    61 e1 70 67 	call 797934 <chip_reset : c2fc8 >			  ## vm_sfc.c:1105:17
     2da:    06 80       	r6 = 0 			  ## vm_sfc.c:1105:17
     2dc:    28 80       	r0 = 5 			  ## vm_sfc.c:1097:13
     2de:    ff e1 7f f1 	call -466 <spi_soft_writebyte : 110 >			  ## vm_sfc.c:1097:13
     2e2:    90 29       	r0 = [addr(280)]  <.GCPI265_5 : 3fc >			  ## vm_sfc.c:1097:13
     2e4:    00 e2 01 08 	[r0 + 4] |= 8 			  ## vm_sfc.c:999:20
     2e8:    41 80       	r1 = 8 
     2ea:    0a 08       	goto 20 <check_flash_type+0xF0 : 300 >
     2ec:    f0 e2 0f 01 	[r0 + -4] |= 1 			  ## vm_sfc.c:1001:25
     2f0:    03 48       	r3 = [r0 + 0] 			  ## vm_sfc.c:1003:13
     2f2:    f0 e3 0f 01 	[r0 + -4] &= (~1) 			  ## vm_sfc.c:1006:25
     2f6:    12 a1       	r2 = r2 << 1 			  ## vm_sfc.c:1002:29
     2f8:    00 f6 33 61 	r3 = uextra(r3, p:3, l:1) 			  ## vm_sfc.c:1003:13
     2fc:    1a da       	r2 |= r3 			  ## vm_sfc.c:1003:13
     2fe:    c9 d3       	r1 = r1 + -1 			  ## vm_sfc.c:1000:5
     300:    0b c9       	r3 = r1.b 			  ## vm_sfc.c:1000:19
     302:    f4 11       	ifs (nzcv != 0) goto -24 <check_flash_type+0xDC : 2ec >			  ## vm_sfc.c:1000:19
     304:    10 c9       	r0 = r2.b 			  ## vm_sfc.c:1099:27
     306:    e5 11       	ifs (nzcv != 0) goto -54 <check_flash_type+0xC2 : 2d2 >			  ## vm_sfc.c:1099:27
     308:    08 80       	r0 = 1 			  ## vm_sfc.c:1108:9
     30a:    ff e1 9f ee 	call -558 <spi_cs : e0 >			  ## vm_sfc.c:1108:9
     30e:    10 80       	r0 = 2 			  ## vm_sfc.c:1110:9
     310:    ff e1 cf e9 	call -712 <udelay : 4c >			  ## vm_sfc.c:1110:9
     314:    64 d0       	r4 = r4 + 1 			  ## vm_sfc.c:1076:28
     316:    3c 98       	cmp r4, 7			  ## vm_sfc.c:1076:5
     318:    b3 11       	ifs (nzcv != 0) goto -154 <check_flash_type+0x70 : 280 >			  ## vm_sfc.c:1076:5
     31a:    10 80       	r0 = 2 			  ## vm_sfc.c:1034:5
     31c:    ff e1 6f e9 	call -724 <udelay : 4c >			  ## vm_sfc.c:1034:5
     320:    00 80       	r0 = 0 			  ## vm_sfc.c:1035:5
     322:    ff e1 df ed 	call -582 <spi_cs : e0 >			  ## vm_sfc.c:1035:5
     326:    78 80       	r0 = 15 			  ## vm_sfc.c:1036:5
     328:    ff e1 2f ef 	call -540 <spi_soft_writebyte : 110 >			  ## vm_sfc.c:1036:5
     32c:    00 80       	r0 = 0 			  ## vm_sfc.c:1037:5
     32e:    ff e1 ff ee 	call -546 <spi_soft_writebyte : 110 >			  ## vm_sfc.c:1037:5
     332:    00 80       	r0 = 0 			  ## vm_sfc.c:1038:5
     334:    ff e1 cf ee 	call -552 <spi_soft_writebyte : 110 >			  ## vm_sfc.c:1038:5
     338:    18 80       	r0 = 3 			  ## vm_sfc.c:1039:5
     33a:    ff e1 9f ee 	call -558 <spi_soft_writebyte : 110 >			  ## vm_sfc.c:1039:5
     33e:    00 80       	r0 = 0 			  ## vm_sfc.c:1040:5
     340:    ff e1 6f ee 	call -564 <spi_soft_writebyte : 110 >			  ## vm_sfc.c:1040:5
     344:    08 80       	r0 = 1 			  ## vm_sfc.c:1041:5
     346:    ff e1 bf ec 	call -618 <spi_cs : e0 >			  ## vm_sfc.c:1041:5
     34a:    10 80       	r0 = 2 			  ## vm_sfc.c:1042:5
     34c:    ff e1 ef e7 	call -772 <udelay : 4c >			  ## vm_sfc.c:1042:5
     350:    00 80       	r0 = 0 			  ## vm_sfc.c:1043:5
     352:    ff e1 5f ec 	call -630 <spi_cs : e0 >			  ## vm_sfc.c:1043:5
     356:    78 80       	r0 = 15 			  ## vm_sfc.c:1044:5
     358:    ff e1 af ed 	call -588 <spi_soft_writebyte : 110 >			  ## vm_sfc.c:1044:5
     35c:    00 80       	r0 = 0 			  ## vm_sfc.c:1045:5
     35e:    ff e1 7f ed 	call -594 <spi_soft_writebyte : 110 >			  ## vm_sfc.c:1045:5
     362:    00 80       	r0 = 0 			  ## vm_sfc.c:1046:5
     364:    ff e1 4f ed 	call -600 <spi_soft_writebyte : 110 >			  ## vm_sfc.c:1046:5
     368:    08 80       	r0 = 1 			  ## vm_sfc.c:1047:5
     36a:    ff e1 1f ed 	call -606 <spi_soft_writebyte : 110 >			  ## vm_sfc.c:1047:5
     36e:    00 80       	r0 = 0 			  ## vm_sfc.c:1048:5
     370:    ff e1 ef ec 	call -612 <spi_soft_writebyte : 110 >			  ## vm_sfc.c:1048:5
     374:    08 80       	r0 = 1 			  ## vm_sfc.c:1049:5
     376:    ff e1 3f eb 	call -666 <spi_cs : e0 >			  ## vm_sfc.c:1049:5
     37a:    10 80       	r0 = 2 			  ## vm_sfc.c:1050:5
     37c:    ff e1 6f e6 	call -820 <udelay : 4c >			  ## vm_sfc.c:1050:5
     380:    00 80       	r0 = 0 			  ## vm_sfc.c:1051:5
     382:    ff e1 df ea 	call -678 <spi_cs : e0 >			  ## vm_sfc.c:1051:5
     386:    c0 80       	r0 = 24 			  ## vm_sfc.c:1052:5
     388:    ff e1 2f ec 	call -636 <spi_soft_writebyte : 110 >			  ## vm_sfc.c:1052:5
     38c:    08 80       	r0 = 1 			  ## vm_sfc.c:1053:5
     38e:    ff e1 7f ea 	call -690 <spi_cs : e0 >			  ## vm_sfc.c:1053:5
     392:    10 80       	r0 = 2 			  ## vm_sfc.c:1054:5
     394:    ff e1 af e5 	call -844 <udelay : 4c >			  ## vm_sfc.c:1054:5
     398:    ff e1 5f f1 	call -470 <ze_entry_tm : 1c6 >			  ## vm_sfc.c:1133:9
     39c:    00 80       	r0 = 0 			  ## vm_sfc.c:1135:9
     39e:    ff e1 ff e9 	call -706 <spi_cs : e0 >			  ## vm_sfc.c:1135:9
     3a2:    78 80       	r0 = 15 			  ## vm_sfc.c:1136:9
     3a4:    ff e1 4f eb 	call -664 <spi_soft_writebyte : 110 >			  ## vm_sfc.c:1136:9
     3a8:    00 80       	r0 = 0 			  ## vm_sfc.c:1137:9
     3aa:    ff e1 1f eb 	call -670 <spi_soft_writebyte : 110 >			  ## vm_sfc.c:1137:9
     3ae:    00 80       	r0 = 0 			  ## vm_sfc.c:1138:9
     3b0:    ff e1 ef ea 	call -676 <spi_soft_writebyte : 110 >			  ## vm_sfc.c:1138:9
     3b4:    10 80       	r0 = 2 			  ## vm_sfc.c:1139:9
     3b6:    ff e1 bf ea 	call -682 <spi_soft_writebyte : 110 >			  ## vm_sfc.c:1139:9
     3ba:    80 83       	r0 = 112 			  ## vm_sfc.c:1140:9
     3bc:    ff e1 8f ea 	call -688 <spi_soft_writebyte : 110 >			  ## vm_sfc.c:1140:9
     3c0:    08 80       	r0 = 1 			  ## vm_sfc.c:1142:9
     3c2:    ff e1 df e8 	call -742 <spi_cs : e0 >			  ## vm_sfc.c:1142:9
     3c6:    20 80       	r0 = 4 			  ## vm_sfc.c:1143:9
     3c8:    ff e1 0f e4 	call -896 <udelay : 4c >			  ## vm_sfc.c:1143:9
     3cc:    00 80       	r0 = 0 			  ## vm_sfc.c:1144:9
     3ce:    ff e1 7f e8 	call -754 <spi_cs : e0 >			  ## vm_sfc.c:1144:9
     3d2:    c0 80       	r0 = 24 			  ## vm_sfc.c:1145:9
     3d4:    ff e1 cf e9 	call -712 <spi_soft_writebyte : 110 >			  ## vm_sfc.c:1145:9
     3d8:    08 80       	r0 = 1 			  ## vm_sfc.c:1146:9
     3da:    ff e1 1f e8 	call -766 <spi_cs : e0 >			  ## vm_sfc.c:1146:9
     3de:    20 80       	r0 = 4 			  ## vm_sfc.c:1147:9
     3e0:    ff e1 4f e3 	call -920 <udelay : 4c >			  ## vm_sfc.c:1147:9
     3e4:    16 c0       	{pc, r6-r4} = [sp++] 
     3e6:    00 00       	nop


.GCPI265_0:
     3e8:    60 1d 00 00     < 7520 : 0x1D60 >

.GCPI265_1:
     3ec:    14 00 00 00     < 20 : 0x14 >

.GCPI265_2:
     3f0:    ed cd a1 ff     < 4288794093 : 0xFFA1CDED >

.GCPI265_3:
     3f4:    00 02 08 00     < 524800 : 0x80200 >

.GCPI265_4:
     3f8:    ff ff 01 00     < 131071 : 0x1FFFF >

.GCPI265_5:
     3fc:    4c 00 09 00     < 589900 : 0x9004C >

norflash_enter_4byte_addr_for_wakeup:
     400:    1f c2       	[--sp] = {rets} 			  ## vm_sfc.c:610:0
     402:    00 2a       	r0 = [addr(32)]  <.GCPI266_0 : 424 >			  ## vm_sfc.c:611:20
     404:    20 e8 00 26 	r0 = [r0 + 152] 			  ## vm_sfc.c:611:20
     408:    07 ef 00 80 	cmp r0, 16777216			  ## vm_sfc.c:611:9
     40c:    0a 19       	if (nzcv <= 0) goto 20 <norflash_enter_4byte_addr_for_wakeup+0x22 : 422 >			  ## vm_sfc.c:611:9
     40e:    00 80       	r0 = 0 			  ## vm_sfc.c:612:9
     410:    ff e1 6f e6 	call -820 <spi_cs : e0 >			  ## vm_sfc.c:612:9
     414:    10 ea b7 00 	r0 = 183 			  ## vm_sfc.c:614:9
     418:    ff e1 af e7 	call -780 <spi_soft_writebyte : 110 >			  ## vm_sfc.c:614:9
     41c:    08 80       	r0 = 1 			  ## vm_sfc.c:615:9
     41e:    ff e1 ff e5 	call -834 <spi_cs : e0 >			  ## vm_sfc.c:615:9
     422:    1f c0       	{pc} = [sp++] 


.GCPI266_0:
     424:    60 1d 00 00     < 7520 : 0x1D60 >

sfc_suspend:
     428:    14 c2       	[--sp] = {rets, r4} 			  ## clock.c:81:0
     42a:    04 c6       	r4 = r0 			  ## clock.c:81:0
     42c:    61 e1 a0 57 	call 797428 <local_irq_disable : c2f24 >			  ## clock.c:82:5
     430:    c0 2b       	r0 = [addr(60)]  <.GCPI176_0 : 46c >			  ## clock.c:85:24
     432:    00 48       	r0 = [r0 + 0] 			  ## clock.c:85:24
     434:    00 f4 00 20 	tst r0, 32			  ## clock.c:85:5
     438:    fb 10       	ifs (nzcv == 0) goto -10 <sfc_suspend+0x8 : 430 >			  ## clock.c:85:5
     43a:    40 2b       	r0 = [addr(52)]  <.GCPI176_1 : 470 >
     43c:    01 48       	r1 = [r0 + 0] 			  ## clock.c:87:20
     43e:    01 98       	cmp r1, 0			  ## clock.c:87:5
     440:    fd 1b       	ifs (nzcv < 0) goto -6 <sfc_suspend+0x14 : 43c >			  ## clock.c:87:5
     442:    01 2b       	r1 = [addr(48)]  <.GCPI176_2 : 474 >
     444:    00 e2 12 04 	[r1 + 8] |= 4 			  ## clock.c:90:18
     448:    00 e2 10 04 	[r1 + 0] |= 4 			  ## clock.c:91:19
     44c:    00 e3 00 01 	[r0 + 0] &= (~1) 			  ## clock.c:93:17
     450:    f0 e2 1e 04 	[r1 + -8] |= 4 			  ## clock.c:95:19
     454:    00 e3 10 04 	[r1 + 0] &= (~4) 			  ## clock.c:96:19
     458:    00 e3 12 04 	[r1 + 8] &= (~4) 			  ## clock.c:97:19
     45c:    34 20       	if (r4 == 0) goto 6 <sfc_suspend+0x3C : 464 >			  ## clock.c:97:19
     45e:    80 29       	r0 = [addr(24)]  <.GCPI176_3 : 478 >			  ## clock.c:100:22
     460:    00 e2 00 01 	[r0 + 0] |= 1 			  ## clock.c:100:22
     464:    61 e1 c0 55 	call 797368 <local_irq_enable : c2f20 >			  ## clock.c:103:5
     468:    14 c0       	{pc, r4} = [sp++] 			  ## clock.c:103:5
     46a:    00 00       	nop			  ## clock.c:103:5


.GCPI176_0:
     46c:    40 04 08 00     < 525376 : 0x80440 >

.GCPI176_1:
     470:    00 02 08 00     < 524800 : 0x80200 >

.GCPI176_2:
     474:    50 00 09 00     < 589904 : 0x90050 >

.GCPI176_3:
     478:    00 0c 09 00     < 592896 : 0x90C00 >

sfc_baud_set:
     47c:    14 c2       	[--sp] = {rets, r4} 			  ## clock.c:109:0
     47e:    04 c6       	r4 = r0 			  ## clock.c:109:0
     480:    61 e1 00 55 	call 797344 <local_irq_disable : c2f24 >			  ## clock.c:110:5
     484:    00 80       	r0 = 0 			  ## clock.c:111:5
     486:    d0 04       	call -96 <sfc_suspend : 428 >			  ## clock.c:111:5
     488:    c0 2a       	r0 = [addr(44)]  <.GCPI177_0 : 4b4 >			  ## clock.c:112:36
     48a:    00 4b       	r0 = [r0 + 48] 			  ## clock.c:112:36
     48c:    c1 2a       	r1 = [addr(44)]  <.GCPI177_1 : 4b8 >			  ## clock.c:112:55
     48e:    40 fc 00 01 	r0 = r0 / r1 			  ## clock.c:112:55
     492:    00 b4       	r0 = r0 << 20 			  ## clock.c:115:5
     494:    19 ee 00 80 	r0 = r0 + 1048576 			  ## clock.c:115:5
     498:    40 b4       	r0 = r0 >> 20 			  ## clock.c:115:5
     49a:    01 2a       	r1 = [addr(32)]  <.GCPI177_2 : 4bc >			  ## clock.c:115:5
     49c:    ca 4f       	r2 = [r1 + -4] 			  ## clock.c:115:5
     49e:    42 f6 02 84 	r2 <= insert(r0, p:20, l:4) 			  ## clock.c:115:5
     4a2:    ca 6f       	[r1 + -4] = r2 			  ## clock.c:115:5
     4a4:    0c 68       	[r1 + 0] = r4 			  ## clock.c:116:18
     4a6:    00 80       	r0 = 0 			  ## clock.c:117:5
     4a8:    61 e1 00 58 	call 797440 <sfc_resume : c2fac >			  ## clock.c:117:5
     4ac:    61 e1 80 53 	call 797296 <local_irq_enable : c2f20 >			  ## clock.c:118:5
     4b0:    14 c0       	{pc, r4} = [sp++] 			  ## clock.c:118:5
     4b2:    00 00       	nop			  ## clock.c:118:5


.GCPI177_0:
     4b4:    60 1c 00 00     < 7264 : 0x1C60 >

.GCPI177_1:
     4b8:    40 78 7d 01     < 25000000 : 0x17D7840 >

.GCPI177_2:
     4bc:    04 02 08 00     < 524804 : 0x80204 >

p33_or_1byte:
     4c0:    15 c2       	[--sp] = {rets, r5, r4} 			  ## p33.c:122:0
     4c2:    0c c6       	r4 = r1 			  ## p33.c:122:0
     4c4:    05 c6       	r5 = r0 			  ## p33.c:122:0
     4c6:    61 e1 d0 52 	call 797274 <local_irq_disable : c2f24 >			  ## p33.c:123:5
     4ca:    28 c6       	r0 = r5 			  ## p33.c:124:5
     4cc:    21 c6       	r1 = r4 			  ## p33.c:124:5
     4ce:    61 e1 50 53 	call 797290 <_p33_or_1byte : c2f3c >			  ## p33.c:124:5
     4d2:    61 e1 50 52 	call 797258 <local_irq_enable : c2f20 >			  ## p33.c:125:5
     4d6:    15 c0       	{pc, r5, r4} = [sp++] 			  ## p33.c:125:5


P33_CON_SET:
     4d8:    17 c2       	[--sp] = {rets, r7-r4} 			  ## p33.c:147:0
     4da:    1c c6       	r4 = r3 			  ## p33.c:147:0
     4dc:    15 c6       	r5 = r2 			  ## p33.c:147:0
     4de:    0e c6       	r6 = r1 			  ## p33.c:147:0
     4e0:    07 c6       	r7 = r0 			  ## p33.c:147:0
     4e2:    61 e1 f0 51 	call 797246 <local_irq_disable : c2f24 >			  ## p33.c:148:5
     4e6:    38 c6       	r0 = r7 			  ## p33.c:149:5
     4e8:    31 c6       	r1 = r6 			  ## p33.c:149:5
     4ea:    2a c6       	r2 = r5 			  ## p33.c:149:5
     4ec:    23 c6       	r3 = r4 			  ## p33.c:149:5
     4ee:    61 e1 b0 52 	call 797270 <_P33_CON_SET : c2f48 >			  ## p33.c:149:5
     4f2:    61 e1 50 51 	call 797226 <local_irq_enable : c2f20 >			  ## p33.c:150:5
     4f6:    17 c0       	{pc, r7-r4} = [sp++] 			  ## p33.c:150:5


p33_rx_1byte:
     4f8:    14 c2       	[--sp] = {rets, r4} 			  ## p33.c:138:0
     4fa:    04 c6       	r4 = r0 			  ## p33.c:138:0
     4fc:    61 e1 20 51 	call 797220 <local_irq_disable : c2f24 >			  ## p33.c:139:5
     500:    20 c6       	r0 = r4 			  ## p33.c:140:15
     502:    61 e1 f0 51 	call 797246 <_p33_rx_1byte : c2f44 >			  ## p33.c:140:15
     506:    04 c6       	r4 = r0 			  ## p33.c:140:15
     508:    61 e1 a0 50 	call 797204 <local_irq_enable : c2f20 >			  ## p33.c:141:5
     50c:    20 c6       	r0 = r4 			  ## p33.c:142:5
     50e:    14 c0       	{pc, r4} = [sp++] 			  ## p33.c:142:5


p33_tx_1byte:
     510:    15 c2       	[--sp] = {rets, r5, r4} 			  ## p33.c:130:0
     512:    0c c6       	r4 = r1 			  ## p33.c:130:0
     514:    05 c6       	r5 = r0 			  ## p33.c:130:0
     516:    61 e1 50 50 	call 797194 <local_irq_disable : c2f24 >			  ## p33.c:131:5
     51a:    28 c6       	r0 = r5 			  ## p33.c:132:5
     51c:    21 c6       	r1 = r4 			  ## p33.c:132:5
     51e:    61 e1 f0 50 	call 797214 <_p33_tx_1byte : c2f40 >			  ## p33.c:132:5
     522:    61 e1 d0 4f 	call 797178 <local_irq_enable : c2f20 >			  ## p33.c:133:5
     526:    15 c0       	{pc, r5, r4} = [sp++] 			  ## p33.c:133:5


spi_get_port:
     528:    c0 28       	r0 = [addr(12)]  <.GCPI144_0 : 534 >			  ## pmu_analog.c:60:0
     52a:    00 48       	r0 = [r0 + 0] 			  ## pmu_analog.c:62:22
     52c:    00 f6 00 42 	r0 = uextra(r0, p:2, l:2) 			  ## pmu_analog.c:62:34
     530:    20 00       	rts			  ## pmu_analog.c:62:5
     532:    00 00       	nop			  ## pmu_analog.c:62:5


.GCPI144_0:
     534:    80 00 09 00     < 589952 : 0x90080 >

p33_and_1byte:
     538:    15 c2       	[--sp] = {rets, r5, r4} 			  ## p33.c:114:0
     53a:    0c c6       	r4 = r1 			  ## p33.c:114:0
     53c:    05 c6       	r5 = r0 			  ## p33.c:114:0
     53e:    61 e1 10 4f 	call 797154 <local_irq_disable : c2f24 >			  ## p33.c:115:5
     542:    28 c6       	r0 = r5 			  ## p33.c:116:5
     544:    21 c6       	r1 = r4 			  ## p33.c:116:5
     546:    61 e1 70 4f 	call 797166 <_p33_and_1byte : c2f38 >			  ## p33.c:116:5
     54a:    61 e1 90 4e 	call 797138 <local_irq_enable : c2f20 >			  ## p33.c:117:5
     54e:    15 c0       	{pc, r5, r4} = [sp++] 			  ## p33.c:117:5


NV_RAM_POWER_GATE:
     550:    00 98       	cmp r0, 0			  ## p33.c:172:0
     552:    04 03       	ifs (nzcv == 0) {			  ## p33.h:331:9
     554:    98 83       		r0 = 115 
                               	} else {			  ## p33.h:331:9
     556:    90 83       		r0 = 114 
                               	}			  ## p33.h:331:9
     558:    81 80       	r1 = 16 			  ## p33.h:331:9
     55a:    b2 0f       	goto -156 <p33_or_1byte : 4c0 >			  ## p33.h:331:9


__get_lrc_hz:
     55c:    80 28       	r0 = [addr(8)]  <.GCPI254_0 : 564 >			  ## lrc_hw.c:58:0
     55e:    20 e8 00 14 	r0 = [r0 + 80] 			  ## lrc_hw.c:61:20
     562:    20 00       	rts			  ## lrc_hw.c:61:5


.GCPI254_0:
     564:    60 1c 00 00     < 7264 : 0x1C60 >

SET_WVDD_LEV:
     568:    00 a5       	r0 = r0 << 5 			  ## p33.c:159:0
     56a:    00 f3 00 17 	r0 = r0 | 23 			  ## p33.c:161:54
     56e:    01 c9       	r1 = r0.b 			  ## p33.c:161:5
     570:    a8 83       	r0 = 117 			  ## p33.c:161:5
     572:    ce 0f       	goto -100 <p33_tx_1byte : 510 >			  ## p33.c:161:5


spi_flash_port_unmount:
     574:    1f c2       	[--sp] = {rets} 			  ## pmu_analog.c:170:0
     576:    d8 04       	call -80 <spi_get_port : 528 >			  ## pmu_analog.c:171:15
     578:    49 28       	r1 = [addr(132)]  <.GCPI261_1 : 5fc >			  ## pmu_analog.c:172:29
     57a:    09 48       	r1 = [r1 + 0] 			  ## pmu_analog.c:172:29
     57c:    11 ea c1 00 	r1 = 193 			  ## pmu_analog.c:175:20
     580:    82 2f       	r2 = [addr(120)]  <.GCPI261_0 : 5f8 >			  ## pmu_analog.c:175:20
     582:    00 e7 21 01 	r1 = b[r2 + r1] 			  ## pmu_analog.c:175:20
     586:    01 98       	cmp r1, 0			  ## pmu_analog.c:175:9
     588:    81 2f       	r1 = [addr(120)]  <.GCPI261_2 : 600 >			  ## pmu_analog.c:175:9
     58a:    20 10       	ifs (nzcv == 0) goto 64 <spi_flash_port_unmount+0x58 : 5cc >			  ## pmu_analog.c:175:9
     58c:    f0 e3 1e 03 	[r1 + -8] &= (~3) 			  ## pmu_analog.c:177:25
     590:    00 e3 13 03 	[r1 + 12] &= (~3) 			  ## pmu_analog.c:178:25
     594:    f0 e3 1f 03 	[r1 + -4] &= (~3) 			  ## pmu_analog.c:179:23
     598:    00 e2 10 03 	[r1 + 0] |= 3 			  ## pmu_analog.c:180:23
     59c:    f0 e2 1d 03 	[r1 + -12] |= 3 			  ## pmu_analog.c:181:23
     5a0:    f0 e3 1e 08 	[r1 + -8] &= (~8) 			  ## pmu_analog.c:186:25
     5a4:    00 e3 13 08 	[r1 + 12] &= (~8) 			  ## pmu_analog.c:187:25
     5a8:    f0 e3 1f 08 	[r1 + -4] &= (~8) 			  ## pmu_analog.c:188:23
     5ac:    08 48       	r0 = [r1 + 0] 			  ## pmu_analog.c:189:23
     5ae:    18 d8       	r0 |= 8			  ## pmu_analog.c:189:23
     5b0:    08 68       	[r1 + 0] = r0 
     5b2:    f0 e2 1d 08 	[r1 + -12] |= 8 
     5b6:    f0 e3 1e 04 	[r1 + -8] &= (~4) 
     5ba:    00 e3 13 04 	[r1 + 12] &= (~4) 
     5be:    00 e3 10 04 	[r1 + 0] &= (~4) 
     5c2:    f0 e2 1f 04 	[r1 + -4] |= 4 
     5c6:    f0 e2 1d 04 	[r1 + -12] |= 4 
     5ca:    02 08       	goto 4 <spi_flash_port_unmount+0x5C : 5d0 >
     5cc:    00 c9       	r0 = r0.b 			  ## pmu_analog.c:201:13
     5ce:    01 10       	ifs (nzcv == 0) goto 2 <spi_flash_port_unmount+0x5E : 5d2 >			  ## pmu_analog.c:201:13
     5d0:    1f c0       	{pc} = [sp++] 
     5d2:    f0 e3 1e 03 	[r1 + -8] &= (~3) 			  ## pmu_analog.c:203:29
     5d6:    00 e3 13 03 	[r1 + 12] &= (~3) 			  ## pmu_analog.c:204:29
     5da:    f0 e3 1f 03 	[r1 + -4] &= (~3) 			  ## pmu_analog.c:205:27
     5de:    00 e3 10 03 	[r1 + 0] &= (~3) 			  ## pmu_analog.c:206:27
     5e2:    f0 e2 1d 03 	[r1 + -12] |= 3 			  ## pmu_analog.c:207:27
     5e6:    f0 e3 1e 08 	[r1 + -8] &= (~8) 			  ## pmu_analog.c:212:29
     5ea:    00 e3 13 08 	[r1 + 12] &= (~8) 			  ## pmu_analog.c:213:29
     5ee:    f0 e3 1f 08 	[r1 + -4] &= (~8) 			  ## pmu_analog.c:214:27
     5f2:    08 48       	r0 = [r1 + 0] 			  ## pmu_analog.c:215:27
     5f4:    18 db       	r0 &= (~8)			  ## pmu_analog.c:215:27
     5f6:    dc 0f       	goto -72 <spi_flash_port_unmount+0x3C : 5b0 >			  ## pmu_analog.c:215:27


.GCPI261_0:
     5f8:    cc 08 00 00     < 2252 : 0x8CC >

.GCPI261_1:
     5fc:    00 02 08 00     < 524800 : 0x80200 >

.GCPI261_2:
     600:    5c 00 09 00     < 589916 : 0x9005C >

low_power_system_down:
     604:    17 c2       	[--sp] = {rets, r7-r4} 			  ## pmu_analog.c:551:0
     606:    15 ea c1 00 	r5 = 193 			  ## pmu_analog.c:251:20
     60a:    14 28       	r4 = [addr(256)]  <.GCPI267_0 : 70c >			  ## pmu_analog.c:251:20
     60c:    00 e7 40 05 	r0 = b[r4 + r5] 			  ## pmu_analog.c:251:20
     610:    20 20       	if (r0 == 0) goto 4 <low_power_system_down+0x12 : 616 >			  ## pmu_analog.c:251:20
     612:    8a e1 30 b4 	call 1136262 <norflash_entry_sleep : 115c9c >			  ## pmu_analog.c:253:9
     616:    00 80       	r0 = 0 			  ## pmu_analog.c:257:5
     618:    ff e1 6f f0 	call -500 <sfc_suspend : 428 >			  ## pmu_analog.c:257:5
     61c:    ab 04       	call -170 <spi_flash_port_unmount : 574 >			  ## pmu_analog.c:260:5
     61e:    00 e7 40 05 	r0 = b[r4 + r5] 			  ## pmu_analog.c:263:21
     622:    00 98       	cmp r0, 0			  ## pmu_analog.c:263:9
     624:    4d 2f       	r5 = [addr(244)]  <.GCPI267_3 : 718 >			  ## pmu_analog.c:263:9
     626:    4e 2f       	r6 = [addr(244)]  <.GCPI267_4 : 71c >			  ## pmu_analog.c:263:9
     628:    02 03       	ifs (nzcv == 0) {			  ## pmu_analog.c:264:24
     62a:    f0 e3 5f 10 		[r5 + -4] &= (~16) 			  ## pmu_analog.c:264:24
     62e:    00 e3 54 10 		[r5 + 16] &= (~16) 			  ## pmu_analog.c:265:24
     632:    0c e2 60 80 		[r6 + 0] |= 16384 
                               	}			  ## pmu_analog.c:266:9
     636:    0f 80       	r7 = 1 			  ## pmu_analog.c:556:5
     638:    a0 81       	r0 = 52 			  ## pmu_analog.c:556:5
     63a:    09 80       	r1 = 1 			  ## pmu_analog.c:556:5
     63c:    ff e1 8f f6 	call -304 <p33_tx_1byte : 510 >			  ## pmu_analog.c:556:5
     640:    30 48       	r0 = [r6 + 0] 			  ## pmu_analog.c:557:17
     642:    00 f4 00 40 	tst r0, 64			  ## pmu_analog.c:557:9
     646:    10 03       	ifs (nzcv != 0) {			  ## pmu_analog.c:558:29
     648:    40 e8 47 4b 		b[r4 + 45] = r7 
                               	}			  ## pmu_analog.c:558:29
     64c:    30 48       	r0 = [r6 + 0] 			  ## pmu_analog.c:560:17
     64e:    08 80       	r0 = 1 			  ## pmu_analog.c:530:5
     650:    ff e1 ef f7 	call -260 <NV_RAM_POWER_GATE : 550 >			  ## pmu_analog.c:530:5
     654:    08 80       	r0 = 1 			  ## p33.h:331:9
     656:    41 80       	r1 = 8 			  ## p33.h:331:9
     658:    ff e1 2f f3 	call -412 <p33_or_1byte : 4c0 >			  ## p33.h:331:9
     65c:    30 80       	r0 = 6 			  ## pmu_analog.c:569:5
     65e:    39 80       	r1 = 7 			  ## pmu_analog.c:569:5
     660:    0a 80       	r2 = 1 			  ## pmu_analog.c:569:5
     662:    03 80       	r3 = 0 			  ## pmu_analog.c:569:5
     664:    ff e1 8f f3 	call -400 <P33_CON_SET : 4d8 >			  ## pmu_analog.c:569:5
     668:    00 e2 60 10 	[r6 + 0] |= 16 			  ## pmu_analog.c:571:5
     66c:    a8 81       	r0 = 53 			  ## pmu_analog.c:539:13
     66e:    ff e1 3f f4 	call -378 <p33_rx_1byte : 4f8 >			  ## pmu_analog.c:539:13
     672:    00 f4 00 01 	tst r0, 1			  ## pmu_analog.c:575:5
     676:    fa 11       	ifs (nzcv != 0) goto -12 <low_power_system_down+0x68 : 66c >			  ## pmu_analog.c:575:5
     678:    00 00       	nop			  ## pmu_analog.c:577:5
     67a:    00 00       	nop			  ## pmu_analog.c:578:5
     67c:    00 00       	nop			  ## pmu_analog.c:579:5
     67e:    30 80       	r0 = 6 			  ## pmu_analog.c:583:5
     680:    39 80       	r1 = 7 			  ## pmu_analog.c:583:5
     682:    0a 80       	r2 = 1 			  ## pmu_analog.c:583:5
     684:    0b 80       	r3 = 1 			  ## pmu_analog.c:583:5
     686:    ff e1 7f f2 	call -434 <P33_CON_SET : 4d8 >			  ## pmu_analog.c:583:5
     68a:    0c e3 60 80 	[r6 + 0] &= (~16384) 			  ## pmu_analog.c:279:5
     68e:    ff e1 bf f4 	call -362 <spi_get_port : 528 >			  ## pmu_analog.c:122:15
     692:    00 c9       	r0 = r0.b 			  ## pmu_analog.c:124:9
     694:    1e 11       	ifs (nzcv != 0) goto 60 <low_power_system_down+0xCE : 6d2 >			  ## pmu_analog.c:124:9
     696:    f0 e2 5c 04 	[r5 + -16] |= 4 			  ## pmu_analog.c:126:23
     69a:    f0 e3 5e 04 	[r5 + -8] &= (~4) 			  ## pmu_analog.c:127:23
     69e:    00 e3 50 04 	[r5 + 0] &= (~4) 			  ## pmu_analog.c:128:23
     6a2:    00 e3 51 04 	[r5 + 4] &= (~4) 			  ## pmu_analog.c:129:23
     6a6:    00 e3 50 01 	[r5 + 0] &= (~1) 			  ## pmu_analog.c:132:23
     6aa:    00 e3 51 01 	[r5 + 4] &= (~1) 			  ## pmu_analog.c:133:23
     6ae:    f0 e3 5e 01 	[r5 + -8] &= (~1) 			  ## pmu_analog.c:134:23
     6b2:    f0 e2 5f 02 	[r5 + -4] |= 2 			  ## pmu_analog.c:137:24
     6b6:    00 e3 50 02 	[r5 + 0] &= (~2) 			  ## pmu_analog.c:138:23
     6ba:    00 e3 51 02 	[r5 + 4] &= (~2) 			  ## pmu_analog.c:139:23
     6be:    f0 e3 5e 02 	[r5 + -8] &= (~2) 			  ## pmu_analog.c:140:23
     6c2:    f0 e2 5f 08 	[r5 + -4] |= 8 			  ## pmu_analog.c:143:23
     6c6:    00 e3 50 08 	[r5 + 0] &= (~8) 			  ## pmu_analog.c:144:23
     6ca:    00 e3 51 08 	[r5 + 4] &= (~8) 			  ## pmu_analog.c:145:23
     6ce:    f0 e2 5e 08 	[r5 + -8] |= 8 			  ## pmu_analog.c:146:23
     6d2:    10 ea c1 00 	r0 = 193 			  ## pmu_analog.c:282:20
     6d6:    00 e7 40 00 	r0 = b[r4 + r0] 			  ## pmu_analog.c:282:20
     6da:    30 20       	if (r0 == 0) goto 6 <low_power_system_down+0xDE : 6e2 >			  ## pmu_analog.c:282:9
     6dc:    ff e1 8f d6 	call -1328 <norflash_exit_sleep : 1b0 >			  ## pmu_analog.c:284:9
     6e0:    04 08       	goto 8 <low_power_system_down+0xE6 : 6ea >			  ## pmu_analog.c:284:9
     6e2:    ff e1 5f d9 	call -1238 <check_flash_type : 210 >			  ## pmu_analog.c:287:9
     6e6:    ff e1 bf e8 	call -746 <norflash_enter_4byte_addr_for_wakeup : 400 >			  ## pmu_analog.c:289:9
     6ea:    40 2b       	r0 = [addr(52)]  <.GCPI267_5 : 720 >			  ## pmu_analog.c:292:17
     6ec:    00 e2 00 01 	[r0 + 0] |= 1 			  ## pmu_analog.c:292:17
     6f0:    08 00       	csync			  ## pmu_analog.c:293:5
     6f2:    c4 29       	r4 = [addr(28)]  <.GCPI267_1 : 710 >			  ## pmu_analog.c:293:5
     6f4:    05 2a       	r5 = [addr(32)]  <.GCPI267_2 : 714 >			  ## pmu_analog.c:293:5
     6f6:    20 c6       	r0 = r4 			  ## pmu_analog.c:298:9
     6f8:    01 81       	r1 = 32 			  ## pmu_analog.c:298:9
     6fa:    61 e1 90 45 	call 796850 <sfc_drop_cache : c2fb0 >			  ## pmu_analog.c:298:9
     6fe:    20 c6       	r0 = r4 			  ## pmu_analog.c:299:14
     700:    29 c6       	r1 = r5 			  ## pmu_analog.c:299:14
     702:    61 e1 d0 42 	call 796762 <strcmp : c2f60 >			  ## pmu_analog.c:299:14
     706:    78 27       	if (r0 != 0) goto -18 <low_power_system_down+0xF2 : 6f6 >			  ## pmu_analog.c:299:5
     708:    08 00       	csync			  ## pmu_analog.c:301:5
     70a:    17 c0       	{pc, r7-r4} = [sp++] 			  ## pmu_analog.c:301:5


.GCPI267_0:
     70c:    cc 08 00 00     < 2252 : 0x8CC >

.GCPI267_1:
     710:    e0 64 11 00     < 1139936 : 0x1164E0 >

.GCPI267_2:
     714:    c0 09 00 00     < 2496 : 0x9C0 >

.GCPI267_3:
     718:    58 00 09 00     < 589912 : 0x90058 >

.GCPI267_4:
     71c:    80 3c 09 00     < 605312 : 0x93C80 >

.GCPI267_5:
     720:    00 02 08 00     < 524800 : 0x80200 >

delay_nus:
     724:    41 29       	r1 = [addr(20)]  <.GCPI315_0 : 738 >			  ## power_hw.c:216:0
     726:    00 e8 11 4e 	r1 = b[r1 + 57] 			  ## power_hw.c:218:16
     72a:    08 06       	r0 *= r1 			  ## power_hw.c:218:14
     72c:    02 08       	goto 4 <delay_nus+0xE : 732 >
     72e:    00 00       	nop			  ## power_hw.c:210:9
     730:    c0 d3       	r0 = r0 + -1 			  ## power_hw.c:209:13
     732:    d8 27       	if (r0 != 0) goto -6 <delay_nus+0xA : 72e >
     734:    20 00       	rts			  ## power_hw.c:219:1
     736:    00 00       	nop			  ## power_hw.c:219:1


.GCPI315_0:
     738:    cc 08 00 00     < 2252 : 0x8CC >

power_set_soft_poweroff:
     73c:    20 e4 08 42 	r8 = [addr(264)]  <.GCPI317_0 : 848 >			  ## power_hw.c:1007:0
     740:    05 80       	r5 = 0 			  ## power_hw.c:1009:24
     742:    40 e8 85 00 	b[r8 + 0] = r5 			  ## power_hw.c:1009:24
     746:    50 28       	r0 = [addr(260)]  <.GCPI317_1 : 84c >			  ## power_hw.c:1011:5
     748:    61 e1 80 44 	call 796816 <xprintf : c2fdc >			  ## power_hw.c:1011:5
     74c:    61 e1 a0 3e 	call 796628 <local_irq_disable : c2f24 >			  ## power_hw.c:1013:5
     750:    85 e1 60 49 	call 1091884 <__hw_enter_soft_poweroff : 10b080 >			  ## power_hw.c:1015:5
     754:    16 ea c1 00 	r6 = 193 			  ## power_hw.c:1015:5
     758:    8f 2f       	r7 = [addr(248)]  <.GCPI317_2 : 850 >			  ## power_hw.c:1015:5
     75a:    8c 2f       	r4 = [addr(248)]  <.GCPI317_3 : 854 >			  ## power_hw.c:1015:5
     75c:    c8 2f       	r0 = [addr(252)]  <.GCPI317_4 : 858 >
     75e:    f0 e2 0b 03 	[r0 + -20] |= 3 			  ## pmu_analog.c:618:18
     762:    f0 e3 0b 20 	[r0 + -20] &= (~32) 			  ## pmu_analog.c:619:18
     766:    49 2f       	r1 = [addr(244)]  <.GCPI317_5 : 85c >			  ## pmu_analog.c:619:18
     768:    4d 68       	[r1 + 4] = r5 			  ## pmu_analog.c:623:5
     76a:    0d 68       	[r1 + 0] = r5 			  ## pmu_analog.c:623:5
     76c:    cd 6f       	[r1 + -4] = r5 			  ## pmu_analog.c:623:5
     76e:    09 2f       	r1 = [addr(240)]  <.GCPI317_6 : 860 >			  ## pmu_analog.c:623:5
     770:    0d 68       	[r1 + 0] = r5 			  ## pmu_analog.c:626:19
     772:    0d 68       	[r1 + 0] = r5 			  ## pmu_analog.c:627:19
     774:    09 2f       	r1 = [addr(240)]  <.GCPI317_7 : 864 >			  ## pmu_analog.c:630:18
     776:    0d 68       	[r1 + 0] = r5 			  ## pmu_analog.c:630:18
     778:    c5 68       	[r0 + 12] = r5 			  ## pmu_analog.c:633:18
     77a:    05 69       	[r0 + 16] = r5 			  ## pmu_analog.c:634:18
     77c:    98 80       	r0 = 19 			  ## pmu_analog.c:636:5
     77e:    01 80       	r1 = 0 			  ## pmu_analog.c:636:5
     780:    ff e1 6f ec 	call -628 <p33_tx_1byte : 510 >			  ## pmu_analog.c:636:5
     784:    a0 80       	r0 = 20 			  ## pmu_analog.c:637:5
     786:    01 80       	r1 = 0 			  ## pmu_analog.c:637:5
     788:    ff e1 2f ec 	call -636 <p33_tx_1byte : 510 >			  ## pmu_analog.c:637:5
     78c:    00 e7 70 06 	r0 = b[r7 + r6] 			  ## pmu_analog.c:592:20
     790:    20 20       	if (r0 == 0) goto 4 <power_set_soft_poweroff+0x5A : 796 >			  ## pmu_analog.c:592:20
     792:    8a e1 30 a8 	call 1135878 <norflash_entry_sleep : 115c9c >			  ## pmu_analog.c:594:9
     796:    00 80       	r0 = 0 			  ## pmu_analog.c:598:5
     798:    ff e1 6f e4 	call -884 <sfc_suspend : 428 >			  ## pmu_analog.c:598:5
     79c:    0c e3 4c 80 	[r4 + 48] &= (~16384) 			  ## pmu_analog.c:600:20
     7a0:    ff e1 8f ee 	call -560 <spi_flash_port_unmount : 574 >			  ## pmu_analog.c:603:5
     7a4:    00 e7 70 06 	r0 = b[r7 + r6] 			  ## pmu_analog.c:605:21
     7a8:    0a 2c       	r2 = [addr(192)]  <.GCPI317_8 : 868 >			  ## pmu_analog.c:605:21
     7aa:    68 21       	if (r0 != 0) goto 44 <power_set_soft_poweroff+0x9C : 7d8 >			  ## pmu_analog.c:605:21
     7ac:    ff e1 cf eb 	call -648 <spi_get_port : 528 >			  ## pmu_analog.c:94:15
     7b0:    00 c9       	r0 = r0.b 			  ## pmu_analog.c:96:9
     7b2:    12 11       	ifs (nzcv != 0) goto 36 <power_set_soft_poweroff+0x9C : 7d8 >			  ## pmu_analog.c:96:9
     7b4:    f0 e3 2c 10 	[r2 + -16] &= (~16) 			  ## pmu_analog.c:98:23
     7b8:    f0 e3 2e 10 	[r2 + -8] &= (~16) 			  ## pmu_analog.c:99:23
     7bc:    20 83       	r0 = 100 			  ## pmu_analog.c:100:9
     7be:    b2 04       	call -156 <delay_nus : 724 >			  ## pmu_analog.c:100:9
     7c0:    00 e3 20 04 	[r2 + 0] &= (~4) 			  ## pmu_analog.c:102:23
     7c4:    f0 e3 2f 10 	[r2 + -4] &= (~16) 			  ## pmu_analog.c:104:23
     7c8:    00 e3 24 10 	[r2 + 16] &= (~16) 			  ## pmu_analog.c:105:24
     7cc:    f0 e2 2e 10 	[r2 + -8] |= 16 			  ## pmu_analog.c:106:23
     7d0:    00 e3 20 10 	[r2 + 0] &= (~16) 			  ## pmu_analog.c:107:22
     7d4:    00 e3 21 10 	[r2 + 4] &= (~16) 			  ## pmu_analog.c:108:22
     7d8:    d5 6f       	[r2 + -4] = r5 			  ## pmu_analog.c:610:19
     7da:    15 69       	[r2 + 16] = r5 			  ## pmu_analog.c:611:20
     7dc:    10 ea af 00 	r0 = 175 			  ## power_hw.c:1032:9
     7e0:    11 ea ff 00 	r1 = 255 			  ## power_hw.c:1032:9
     7e4:    ff e1 4f e9 	call -728 <p33_tx_1byte : 510 >			  ## power_hw.c:1032:9
     7e8:    48 28       	r0 = [addr(132)]  <.GCPI317_9 : 86c >			  ## power_hw.c:1032:9
     7ea:    05 6f       	[r0 + -16] = r5 			  ## power_hw.c:1034:22
     7ec:    05 69       	[r0 + 16] = r5 			  ## power_hw.c:1035:22
     7ee:    08 28       	r0 = [addr(128)]  <.GCPI317_10 : 870 >			  ## power_hw.c:1035:22
     7f0:    c5 6f       	[r0 + -4] = r5 			  ## power_hw.c:1037:22
     7f2:    05 68       	[r0 + 0] = r5 			  ## power_hw.c:1038:22
     7f4:    45 68       	[r0 + 4] = r5 			  ## power_hw.c:1039:22
     7f6:    e5 6e       	[r4 + -20] = r5 			  ## power_hw.c:1043:25
     7f8:    10 ea af 00 	r0 = 175 			  ## power_hw.c:1048:9
     7fc:    11 ea ff 00 	r1 = 255 			  ## power_hw.c:1048:9
     800:    ff e1 6f e8 	call -756 <p33_tx_1byte : 510 >			  ## power_hw.c:1048:9
     804:    10 ea 92 00 	r0 = 146 			  ## power_hw.c:1051:9
     808:    11 ea ff 00 	r1 = 255 			  ## power_hw.c:1051:9
     80c:    ff e1 0f e8 	call -768 <p33_tx_1byte : 510 >			  ## power_hw.c:1051:9
     810:    10 ea 96 00 	r0 = 150 			  ## power_hw.c:1052:9
     814:    01 82       	r1 = 64 			  ## power_hw.c:1052:9
     816:    ff e1 3f e5 	call -858 <p33_or_1byte : 4c0 >			  ## power_hw.c:1052:9
     81a:    88 80       	r0 = 17 			  ## power_hw.c:1053:9
     81c:    01 82       	r1 = 64 			  ## power_hw.c:1053:9
     81e:    ff e1 ff e4 	call -866 <p33_or_1byte : 4c0 >			  ## power_hw.c:1053:9
     822:    00 e2 4c 10 	[r4 + 48] |= 16 			  ## power_hw.c:1056:9
     826:    f0 e2 43 04 	[r4 + -52] |= 4 			  ## power_hw.c:1061:21
     82a:    00 e8 80 00 	r0 = b[r8 + 0] 			  ## power_hw.c:1063:27
     82e:    40 d0       	r0 = r0 + 1 			  ## power_hw.c:1063:27
     830:    40 e8 80 00 	b[r8 + 0] = r0 			  ## power_hw.c:1063:27
     834:    00 c9       	r0 = r0.b 			  ## power_hw.c:1063:27
     836:    28 9b       	cmp r0, 101			  ## power_hw.c:1065:13
     838:    91 13       	if (nzcv < 0) goto -222 <power_set_soft_poweroff+0x20 : 75c >			  ## power_hw.c:1065:13
     83a:    10 ea a0 00 	r0 = 160 			  ## p33.h:331:9
     83e:    81 80       	r1 = 16 			  ## p33.h:331:9
     840:    ff e1 ef e3 	call -900 <p33_or_1byte : 4c0 >			  ## p33.h:331:9
     844:    8b 0f       	goto -234 <power_set_soft_poweroff+0x20 : 75c >			  ## p33.h:331:9
     846:    00 00       	nop			  ## p33.h:331:9


.GCPI317_0:
     848:    40 19 00 00     < 6464 : 0x1940 >

.GCPI317_1:
     84c:    7c c8 11 00     < 1165436 : 0x11C87C >

.GCPI317_2:
     850:    cc 08 00 00     < 2252 : 0x8CC >

.GCPI317_3:
     854:    50 3c 09 00     < 605264 : 0x93C50 >

.GCPI317_4:
     858:    14 18 09 00     < 595988 : 0x91814 >

.GCPI317_5:
     85c:    04 1c 09 00     < 596996 : 0x91C04 >

.GCPI317_6:
     860:    40 14 09 00     < 595008 : 0x91440 >

.GCPI317_7:
     864:    00 24 09 00     < 599040 : 0x92400 >

.GCPI317_8:
     868:    58 00 09 00     < 589912 : 0x90058 >

.GCPI317_9:
     86c:    10 0c 09 00     < 592912 : 0x90C10 >

.GCPI317_10:
     870:    04 10 09 00     < 593924 : 0x91004 >

wakeup_irq_handler:
     874:    c1 c5       	[--sp] = {psr, rets, reti} 			  ## power_wakeup.c:498:0
     876:    ff e6 1f 00 	[--sp] = {r4-r0} 			  ## power_wakeup.c:498:0
     87a:    10 ea a8 00 	r0 = 168 			  ## power_wakeup.c:166:11
     87e:    ff e1 bf e3 	call -906 <p33_rx_1byte : 4f8 >			  ## power_wakeup.c:166:11
     882:    04 c6       	r4 = r0 			  ## power_wakeup.c:166:11
     884:    00 f4 40 01 	tst r4, 1			  ## power_wakeup.c:170:9
     888:    12 03       	ifs (nzcv != 0) {			  ## power_wakeup.c:172:9
     88a:    10 ea 96 00 		r0 = 150 			  ## power_wakeup.c:172:9
     88e:    01 82       		r1 = 64 			  ## power_wakeup.c:172:9
     890:    ff e1 6f e1 		call -980
                               	} <p33_or_1byte : 4c0 >			  ## power_wakeup.c:172:9
     894:    00 f4 40 02 	tst r4, 2			  ## power_wakeup.c:175:9
     898:    10 03       	ifs (nzcv != 0) {			  ## power_wakeup.c:177:19
     89a:    86 e1 50 de 		call 1104842
                               	} <__hw_power_wakeup_handler : 10e468 >			  ## power_wakeup.c:177:19
     89e:    00 f4 40 10 	tst r4, 16			  ## power_wakeup.c:181:9
     8a2:    07 11       	ifs (nzcv != 0) goto 14 <wakeup_irq_handler+0x3E : 8b2 >			  ## power_wakeup.c:181:9
     8a4:    a0 c9       	r0 = r4.b (s) 			  ## power_wakeup.c:166:11
     8a6:    f8 9f       	cmp r0, -1			  ## power_wakeup.c:186:9
     8a8:    0e 1d       	ifs (nzcv <= 0) goto 28 <wakeup_irq_handler+0x52 : 8c6 >			  ## power_wakeup.c:186:9
     8aa:    8f e6 1f 00 	{r4-r0} = [sp++] 
     8ae:    c1 c4       	{psr, rets, reti} = [sp++] 
     8b0:    30 00       	rti			  ## power_wakeup.c:500:1
     8b2:    88 80       	r0 = 17 			  ## include_lib\cpu\sh54\asm/power/p33.h:331:9
     8b4:    01 82       	r1 = 64 			  ## include_lib\cpu\sh54\asm/power/p33.h:331:9
     8b6:    ff e1 3f e0 	call -1018 <p33_or_1byte : 4c0 >			  ## include_lib\cpu\sh54\asm/power/p33.h:331:9
     8ba:    20 81       	r0 = 36 			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\cpu\sh54\power_api.c:231:5
     8bc:    00 e1 60 28 	call 1292 <putchar : dcc >			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\cpu\sh54\power_api.c:231:5
     8c0:    85 e1 20 4a 	call 1091908 <sys_softoff : 10b208 >			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\cpu\sh54\power_api.c:232:5
     8c4:    ff 0f       	goto -2 <wakeup_irq_handler+0x50 : 8c4 >			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\cpu\sh54\power_api.c:232:5
     8c6:    86 e1 30 df 	call 1104870 <wdt_isr : 10e4b0 >			  ## power_wakeup.c:189:9
     8ca:    ff 0f       	goto -2 <wakeup_irq_handler+0x56 : 8ca >			  ## power_wakeup.c:189:9


low_power_hdl:
     8cc:	 00 00 00 00 00 00 00 00         ........
     8d4:	 00 00 00 00 00 00 00 00         ........
     8dc:	 00 00 00 00 00 00 00 00         ........
     8e4:	 00 00 00 00 00 00 00 00         ........
     8ec:	 00 00 00 00 00 00 00 00         ........
     8f4:	 00 00 00 00 00 00 00 00         ........
     8fc:	 00 00 00 00 00 00 00 00         ........
     904:	 00 00 00 00 00 00 00 00         ........
     90c:	 00 00 00 00 00 00 00 00         ........
     914:	 00 00 00 00 00 00 00 00         ........
     91c:	 00 00 00 00 00 00 00 00         ........
     924:	 00 00 00 00 00 00 00 00         ........
     92c:	 00 00 00 00 00 00 00 00         ........
     934:	 00 00 00 00 00 00 00 00         ........
     93c:	 00 00 00 00 00 00 00 00         ........
     944:	 00 00 00 00 00 00 00 00         ........
     94c:	 00 00 00 00 00 00 00 00         ........
     954:	 00 00 00 00 00 00 00 00         ........
     95c:	 00 00 00 00 00 00 00 00         ........
     964:	 00 00 00 00 00 00 00 00         ........
     96c:	 00 00 00 00 00 00 00 00         ........
     974:	 00 00 00 00 00 00 00 00         ........
     97c:	 00 00 00 00 00 00 00 00         ........
     984:	 00 00 00 00 00 00 00 00         ........
     98c:	 00 00 00 00 00 00 00 00         ........
     994:	 00 00 00 00 00 00 00 00         ........
     99c:	 00 00 00 00 00 00 00 00         ........
     9a4:	 00 00 00 00 00 00 00 00         ........
     9ac:	 00 00 00 00 00 00 00 00         ........
     9b4:	 00 00 00 00 00 00 00 00         ........
     9bc:	 00 00 00 00                     ....


flash_powerup_ok_ram:
     9c0:	 66 6c 61 73 68 5f 70 6f         flash_po
     9c8:	 77 65 72 75 70 5f 6f 6b         werup_ok
     9d0:	 00 00 00 00 00 00 00 00         ........
     9d8:	 00 00 00 00 00 00 00 00         ........


_OS_ENTER_CRITICAL:
     9e0:    15 c2       	[--sp] = {rets, r5, r4} 			  ## hwi.c:203:0
     9e2:    04 c6       	r4 = r0 			  ## hwi.c:203:0
     9e4:    61 e1 e0 29 	call 795964 <local_irq_disable : c2f24 >			  ## hwi.c:204:5
     9e8:    80 2e       	r0 = [addr(104)]  <.GCPI203_0 : a50 >			  ## hwi.c:205:21
     9ea:    01 c6       	r1 = r0 			  ## hwi.c:205:21
     9ec:    24 e8 12 18 	r2 = [++ r1 = 96] 			  ## hwi.c:205:21
     9f0:    52 d0       	r2 = r2 + 1 			  ## hwi.c:205:21
     9f2:    0a 68       	[r1 + 0] = r2 			  ## hwi.c:205:21
     9f4:    09 48       	r1 = [r1 + 0] 			  ## hwi.c:206:9
     9f6:    09 98       	cmp r1, 1			  ## hwi.c:206:9
     9f8:    28 1c       	ifs (nzcv > 0) goto 80 <_OS_ENTER_CRITICAL+0x6A : a4a >			  ## hwi.c:206:9
     9fa:    01 80       	r1 = 0 
     9fc:    09 08       	goto 18 <_OS_ENTER_CRITICAL+0x30 : a10 >
     9fe:    42 2d       	r2 = [addr(84)]  <.GCPI203_1 : a54 >
     a00:    52 d4       	r2 = r2 + r1 
     a02:    13 48       	r3 = [r2 + 0] 			  ## hwi.c:31:29
     a04:    45 d4       	r5 = r0 + r1 			  ## hwi.c:31:27
     a06:    60 e8 53 35 	[r5 + 212] = r3 			  ## hwi.c:31:27
     a0a:    03 e3 20 11 	[r2 + 0] &= (~286331153) 			  ## hwi.c:32:21
     a0e:    09 d1       	r1 = r1 + 4 			  ## hwi.c:30:5
     a10:    81 98       	cmp r1, 16			  ## hwi.c:30:5
     a12:    f5 11       	ifs (nzcv != 0) goto -22 <_OS_ENTER_CRITICAL+0x1E : 9fe >			  ## hwi.c:30:5
     a14:    00 80       	r0 = 0 
     a16:    15 08       	goto 42 <_OS_ENTER_CRITICAL+0x62 : a42 >
     a18:    00 f5 41 00 	r1 = clz(r4) 			  ## hwi.c:187:9
     a1c:    01 99       	cmp r1, 32			  ## hwi.c:188:13
     a1e:    13 10       	ifs (nzcv == 0) goto 38 <_OS_ENTER_CRITICAL+0x66 : a46 >			  ## hwi.c:188:13
     a20:    20 ee 11 1f 	r1 = 31 - r1 			  ## hwi.c:190:29
     a24:    4a a1       	r2 = r1 >> 1 			  ## hwi.c:46:36
     a26:    80 f3 22 7c 	r2 = r2 & 124 			  ## hwi.c:49:5
     a2a:    83 2a       	r3 = [addr(40)]  <.GCPI203_1 : a54 >			  ## hwi.c:49:5
     a2c:    d2 d4       	r2 = r2 + r3 			  ## hwi.c:49:5
     a2e:    13 48       	r3 = [r2 + 0] 			  ## hwi.c:49:24
     a30:    0d a2       	r5 = r1 << 2 			  ## hwi.c:47:41
     a32:    80 f3 55 1c 	r5 = r5 & 28 			  ## hwi.c:47:41
     a36:    00 f1 33 05 	r3 = r3 | setbit(r5) 			  ## hwi.c:49:24
     a3a:    13 68       	[r2 + 0] = r3 			  ## hwi.c:49:24
     a3c:    c0 f1 44 01 	r4 = r4 & ~setbit(r1) 			  ## hwi.c:191:17
     a40:    40 d0       	r0 = r0 + 1 			  ## hwi.c:186:30
     a42:    f8 98       	cmp r0, 31			  ## hwi.c:186:5
     a44:    e9 19       	if (nzcv <= 0) goto -46 <_OS_ENTER_CRITICAL+0x38 : a18 >			  ## hwi.c:186:5
     a46:    00 e1 30 20 	call 1030 <enter_critical_hook : e50 >			  ## hwi.c:212:5
     a4a:    61 e1 90 26 	call 795858 <local_irq_enable : c2f20 >
     a4e:    15 c0       	{pc, r5, r4} = [sp++] 


.GCPI203_0:
     a50:    60 1c 00 00     < 7264 : 0x1C60 >

.GCPI203_1:
     a54:    00 01 08 00     < 524544 : 0x80100 >

_OS_EXIT_CRITICAL:
     a58:    1f c2       	[--sp] = {rets} 			  ## hwi.c:218:0
     a5a:    61 e1 30 26 	call 795846 <local_irq_disable : c2f24 >			  ## hwi.c:219:5
     a5e:    40 2b       	r0 = [addr(52)]  <.GCPI220_0 : a94 >			  ## hwi.c:220:15
     a60:    01 c6       	r1 = r0 			  ## hwi.c:220:15
     a62:    24 e8 12 18 	r2 = [++ r1 = 96] 			  ## hwi.c:220:15
     a66:    d2 d3       	r2 = r2 + -1 			  ## hwi.c:220:15
     a68:    0a 68       	[r1 + 0] = r2 			  ## hwi.c:220:15
     a6a:    03 10       	ifs (nzcv == 0) goto 6 <_OS_EXIT_CRITICAL+0x1A : a72 >			  ## hwi.c:220:15
     a6c:    40 c4       	{rets} = [sp++] 			  ## hwi.c:221:9
     a6e:    61 fa 70 25 	goto 795822 <local_irq_enable : c2f20 >			  ## hwi.c:221:9
     a72:    01 80       	r1 = 0 
     a74:    43 2a       	r3 = [addr(36)]  <.GCPI220_1 : a98 >			  ## hwi.c:40:21
     a76:    06 08       	goto 12 <_OS_EXIT_CRITICAL+0x2C : a84 >			  ## hwi.c:40:21
     a78:    42 d4       	r2 = r0 + r1 			  ## hwi.c:40:23
     a7a:    20 e8 22 35 	r2 = [r2 + 212] 			  ## hwi.c:40:23
     a7e:    60 e7 12 03 	[r1 + r3] = r2 			  ## hwi.c:40:21
     a82:    09 d1       	r1 = r1 + 4 			  ## hwi.c:39:5
     a84:    81 98       	cmp r1, 16			  ## hwi.c:39:5
     a86:    f8 11       	ifs (nzcv != 0) goto -16 <_OS_EXIT_CRITICAL+0x20 : a78 >			  ## hwi.c:39:5
     a88:    61 e1 a0 24 	call 795796 <local_irq_enable : c2f20 >			  ## hwi.c:225:5
     a8c:    40 c4       	{rets} = [sp++] 			  ## hwi.c:226:5
     a8e:    00 fa 50 1e 	goto 970 <exit_critical_hook : e5c >			  ## hwi.c:226:5
     a92:    00 00       	nop			  ## hwi.c:226:5


.GCPI220_0:
     a94:    60 1c 00 00     < 7264 : 0x1C60 >

.GCPI220_1:
     a98:    00 01 08 00     < 524544 : 0x80100 >

error_isr_handler:
     a9c:    ff 0f       	goto -2 <error_isr_handler : a9c >			  ## hwi.c:20:0
     a9e:    00 00       	nop


kick_decoder:
     aa0:    00 80       	r0 = 0 			  ## decoder_api.c:383:0
     aa2:    61 fa 10 24 	goto 795778 <bit_set_swi : c2f28 >			  ## decoder_api.c:384:5


dac_cbuff_active:
     aa6:    01 c6       	r1 = r0 			  ## dac_api.c:132:0
     aa8:    c8 48       	r0 = [r1 + 12] 			  ## dac_api.c:134:17
     aaa:    0e f4 00 90 	tst r0, 1152			  ## dac_api.c:134:9
     aae:    01 03       	ifs (nzcv == 0) {			  ## dac_api.c:134:9
     ab0:    08 80       		r0 = 1 			  ## dac_api.c:134:9
     ab2:    20 00       		rts
                               	}			  ## dac_api.c:142:1
     ab4:    08 48       	r0 = [r1 + 0] 			  ## dac_api.c:135:13
     ab6:    02 e5 00 06 	r0, r2 = d[r0 + 24] 			  ## dac_api.c:135:13
     aba:    43 a1       	r3 = r0 >> 1 			  ## dac_api.c:135:83
     abc:    00 80       	r0 = 0 			  ## dac_api.c:135:83
     abe:    13 ce       	cmp r2, r3			  ## dac_api.c:135:13
     ac0:    20 03       	if (nzcv >= 0) {			  ## dac_api.c:136:28
     ac2:    0e e3 13 80 		[r1 + 12] &= (~1024) 
                               	}			  ## dac_api.c:136:28
     ac6:    20 00       	rts			  ## dac_api.c:142:1


if_kick_decoder:
     ac8:    15 c2       	[--sp] = {rets, r5, r4} 			  ## decoder_mge.c:83:0
     aca:    02 48       	r2 = [r0 + 0] 			  ## decoder_mge.c:78:12
     acc:    d4 49       	r4 = [r2 + 28] 			  ## decoder_mge.c:78:12
     ace:    23 a1       	r3 = r4 << 1 			  ## decoder_mge.c:78:43
     ad0:    1d 80       	r5 = 3 			  ## decoder_mge.c:78:47
     ad2:    40 fc 33 05 	r3 = r3 / r5 			  ## decoder_mge.c:78:47
     ad6:    05 49       	r5 = [r0 + 16] 			  ## decoder_mge.c:87:22
     ad8:    25 ce       	cmp r4, r5			  ## decoder_mge.c:88:13
     ada:    2c c6       	r4 = r5 			  ## decoder_mge.c:88:13
     adc:    90 03       	if (nzcv <= 0) {			  ## decoder_mge.c:88:13
     ade:    1c c6       		r4 = r3 
                               	}			  ## decoder_mge.c:88:13
     ae0:    15 20       	if (r5 == 0) goto 2 <if_kick_decoder+0x1C : ae4 >			  ## decoder_mge.c:88:13
     ae2:    23 c6       	r3 = r4 			  ## decoder_mge.c:87:9
     ae4:    92 49       	r2 = [r2 + 24] 			  ## decoder_mge.c:92:9
     ae6:    13 ce       	cmp r2, r3			  ## decoder_mge.c:92:9
     ae8:    04 18       	if (nzcv > 0) goto 8 <if_kick_decoder+0x2A : af2 >			  ## decoder_mge.c:92:9
     aea:    0f e2 03 80 	[r0 + 12] |= 256 			  ## decoder_mge.c:93:24
     aee:    11 20       	if (r1 == 0) goto 2 <if_kick_decoder+0x2A : af2 >			  ## decoder_mge.c:93:24
     af0:    a9 01       	call r1			  ## decoder_mge.c:97:13
     af2:    15 c0       	{pc, r5, r4} = [sp++] 


audio_isr:
     af4:    c1 c5       	[--sp] = {psr, rets, reti} 			  ## audio.c:31:0
     af6:    ff e6 ff 7f 	[--sp] = {r14-r0} 			  ## audio.c:31:0
     afa:    dc cd       	sp += -36 			  ## audio.c:31:0
     afc:    20 e4 00 7f 	r0 = [addr(508)]  <.GCPI154_2 : cfc >			  ## audio.c:31:0
     b00:    01 48       	r1 = [r0 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_dac.c:53:20
     b02:    c9 c9       	r1 = r1.l (s) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_dac.c:53:29
     b04:    f9 9f       	cmp r1, -1			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_dac.c:53:9
     b06:    00 fb ec 0e 	ifs (nzcv > 0) goto 476 <audio_isr+0x1F2 : ce6 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_dac.c:53:9
     b0a:    0c e2 00 80 	[r0 + 0] |= 16384 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_dac.c:58:23
     b0e:    01 48       	r1 = [r0 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_dac.c:59:20
     b10:    00 f4 10 01 	tst r1, 1			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_dac.c:59:9
     b14:    00 fb 70 0e 	ifs (nzcv == 0) goto 462 <audio_isr+0x1F2 : ce6 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_dac.c:59:9
     b18:    d9 2d       	r1 = [addr(476)]  <.GCPI154_0 : cf4 >
     b1a:    00 ed 12 bc 	r2 = r1 + 188 
     b1e:    00 ed 13 b8 	r3 = r1 + 184 
     b22:    0c e2 00 80 	[r0 + 0] |= 16384 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_dac.c:65:23
     b26:    00 48       	r0 = [r0 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_dac.c:66:18
     b28:    0d f4 00 80 	tst r0, 4096			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_dac.c:66:18
     b2c:    10 03       	ifs (nzcv != 0) {			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_dac.c:66:18
     b2e:    1a c6       		r2 = r3 
                               	}			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_dac.c:66:18
     b30:    20 e8 29 00 	r9 = [r2 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_dac.c:66:18
     b34:    10 e8 18 30 	r8 = h[r1 + 192] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_dac.c:75:25
     b38:    00 ed fe 00 	r14 = sp + 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_dac.c:75:25
     b3c:    52 ea 00 00 	r10 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_dac.c:75:25
     b40:    b0 c6       	r0 = r14 			  ## dac_api.c:155:5
     b42:    01 80       	r1 = 0 			  ## dac_api.c:155:5
     b44:    62 80       	r2 = 12 			  ## dac_api.c:155:5
     b46:    61 e1 90 20 	call 795666 <memset : c2f5c >			  ## dac_api.c:155:5
     b4a:    c7 90       	r7 = sp + 24 			  ## dac_api.c:155:5
     b4c:    38 c6       	r0 = r7 			  ## dac_api.c:156:5
     b4e:    01 80       	r1 = 0 			  ## dac_api.c:156:5
     b50:    62 80       	r2 = 12 			  ## dac_api.c:156:5
     b52:    61 e1 30 20 	call 795654 <memset : c2f5c >			  ## dac_api.c:156:5
     b56:    66 90       	r6 = sp + 12 			  ## dac_api.c:156:5
     b58:    30 c6       	r0 = r6 			  ## dac_api.c:157:5
     b5a:    01 80       	r1 = 0 			  ## dac_api.c:157:5
     b5c:    62 80       	r2 = 12 			  ## dac_api.c:157:5
     b5e:    61 e1 d0 1f 	call 795642 <memset : c2f5c >			  ## dac_api.c:157:5
     b62:    88 c6       	r0 = r9 			  ## dac_api.c:158:5
     b64:    01 80       	r1 = 0 			  ## dac_api.c:158:5
     b66:    82 c6       	r2 = r8 			  ## dac_api.c:158:5
     b68:    61 e1 80 1f 	call 795632 <memset : c2f5c >			  ## dac_api.c:158:5
     b6c:    20 e4 0b 62 	r11 = [addr(392)]  <.GCPI154_1 : cf8 >
     b70:    9c c6       	r4 = r11 
     b72:    05 80       	r5 = 0 
     b74:    19 08       	goto 50 <audio_isr+0xB4 : ba8 >
     b76:    00 e8 b0 87 	r0 = b[r11 + 30] 			  ## dac_api.c:167:19
     b7a:    80 f1 00 05 	r0 = r0 & setbit(r5) 			  ## dac_api.c:167:30
     b7e:    10 10       	ifs (nzcv == 0) goto 32 <audio_isr+0xAC : ba0 >			  ## dac_api.c:167:30
     b80:    20 48       	r0 = [r4 + 0] 			  ## dac_api.c:170:39
     b82:    91 04       	call -222 <dac_cbuff_active : aa6 >			  ## dac_api.c:170:22
     b84:    d0 20       	if (r0 == 0) goto 26 <audio_isr+0xAC : ba0 >			  ## dac_api.c:170:22
     b86:    20 48       	r0 = [r4 + 0] 			  ## dac_api.c:173:35
     b88:    00 48       	r0 = [r0 + 0] 			  ## dac_api.c:173:53
     b8a:    31 c6       	r1 = r6 			  ## dac_api.c:173:19
     b8c:    61 e1 e0 1f 	call 795644 <cbuf_read_alloc : c2f8c >			  ## dac_api.c:173:19
     b90:    38 68       	[r7 + 0] = r0 			  ## dac_api.c:173:17
     b92:    30 48       	r0 = [r6 + 0] 			  ## dac_api.c:174:18
     b94:    58 20       	if (r0 != 0) goto 10 <audio_isr+0xAC : ba0 >			  ## dac_api.c:174:18
     b96:    d0 83       	r0 = 122 			  ## dac_api.c:175:13
     b98:    00 e1 80 11 	call 560 <putchar : dcc >			  ## dac_api.c:175:13
     b9c:    60 e8 7a 00 	[r7 + 0] = r10 			  ## dac_api.c:176:21
     ba0:    24 d1       	r4 = r4 + 4 			  ## dac_api.c:166:5
     ba2:    36 d1       	r6 = r6 + 4 			  ## dac_api.c:166:5
     ba4:    3f d1       	r7 = r7 + 4 			  ## dac_api.c:166:5
     ba6:    6d d0       	r5 = r5 + 1 			  ## dac_api.c:166:42
     ba8:    1d 98       	cmp r5, 3			  ## dac_api.c:166:5
     baa:    e5 11       	ifs (nzcv != 0) goto -54 <audio_isr+0x82 : b76 >			  ## dac_api.c:166:5
     bac:    60 f7 88 01 	r8 = r8 >> 1 			  ## dac_api.c:154:25
     bb0:    55 ea 00 00 	r13 = 0 
     bb4:    20 e4 0c 50 	r12 = [addr(320)]  <.GCPI154_1 : cf8 >
     bb8:    53 ea 00 00 	r11 = 0 
     bbc:    67 08       	goto 206 <audio_isr+0x198 : c8c >
     bbe:    07 80       	r7 = 0 
     bc0:    3f 08       	goto 126 <audio_isr+0x14C : c40 >
     bc2:    c4 90       	r4 = sp + 24 
     bc4:    20 e7 40 05 	r0 = [r4 + r5] 			  ## dac_api.c:185:22
     bc8:    a0 23       	if (r0 == 0) goto 116 <audio_isr+0x14A : c3e >			  ## dac_api.c:185:22
     bca:    00 ed fa 0c 	r10 = sp + 12 
     bce:    20 e7 a2 05 	r2 = [r10 + r5] 			  ## dac_api.c:188:22
     bd2:    00 ee a6 05 	r6 = r10 + r5 			  ## dac_api.c:188:22
     bd6:    32 22       	if (r2 == 0) goto 70 <audio_isr+0x12A : c1e >			  ## dac_api.c:188:22
     bd8:    20 e7 e1 05 	r1 = [r14 + r5] 			  ## dac_api.c:198:21
     bdc:    49 d0       	r1 = r1 + 1 			  ## dac_api.c:198:21
     bde:    60 e7 e1 05 	[r14 + r5] = r1 			  ## dac_api.c:198:21
     be2:    98 e8 03 80 	r3 = h[r0 ++= 2] (s) 			  ## dac_api.c:200:21
     be6:    60 e7 40 05 	[r4 + r5] = r0 			  ## dac_api.c:201:20
     bea:    ff d4       	r7 = r7 + r3 			  ## dac_api.c:200:18
     bec:    09 a1       	r1 = r1 << 1 			  ## dac_api.c:202:27
     bee:    0a ce       	cmp r1, r2			  ## dac_api.c:202:17
     bf0:    26 13       	if (nzcv < 0) goto 76 <audio_isr+0x14A : c3e >			  ## dac_api.c:202:17
     bf2:    20 e7 c0 05 	r0 = [r12 + r5] 			  ## dac_api.c:203:34
     bf6:    00 48       	r0 = [r0 + 0] 			  ## dac_api.c:203:52
     bf8:    61 e1 a0 1c 	call 795540 <cbuf_read_updata : c2f90 >			  ## dac_api.c:203:17
     bfc:    60 e7 ad 05 	[r10 + r5] = r13 			  ## dac_api.c:205:25
     c00:    60 e7 ed 05 	[r14 + r5] = r13 			  ## dac_api.c:206:26
     c04:    20 e7 c0 05 	r0 = [r12 + r5] 			  ## dac_api.c:207:43
     c08:    00 48       	r0 = [r0 + 0] 			  ## dac_api.c:207:61
     c0a:    31 c6       	r1 = r6 			  ## dac_api.c:207:27
     c0c:    61 e1 e0 1b 	call 795516 <cbuf_read_alloc : c2f8c >			  ## dac_api.c:207:27
     c10:    60 e7 40 05 	[r4 + r5] = r0 			  ## dac_api.c:207:25
     c14:    20 e7 a0 05 	r0 = [r10 + r5] 			  ## dac_api.c:208:26
     c18:    28 21       	if (r0 != 0) goto 36 <audio_isr+0x14A : c3e >			  ## dac_api.c:208:26
     c1a:    c8 83       	r0 = 121 			  ## dac_api.c:209:21
     c1c:    0c 08       	goto 24 <audio_isr+0x142 : c36 >			  ## dac_api.c:209:21
     c1e:    20 e7 c0 05 	r0 = [r12 + r5] 			  ## dac_api.c:189:43
     c22:    00 48       	r0 = [r0 + 0] 			  ## dac_api.c:189:61
     c24:    31 c6       	r1 = r6 			  ## dac_api.c:189:27
     c26:    61 e1 10 1b 	call 795490 <cbuf_read_alloc : c2f8c >			  ## dac_api.c:189:27
     c2a:    60 e7 40 05 	[r4 + r5] = r0 			  ## dac_api.c:189:25
     c2e:    20 e7 a0 05 	r0 = [r10 + r5] 			  ## dac_api.c:190:26
     c32:    58 20       	if (r0 != 0) goto 10 <audio_isr+0x14A : c3e >			  ## dac_api.c:190:26
     c34:    c0 83       	r0 = 120 			  ## dac_api.c:191:21
     c36:    00 e1 90 0c 	call 402 <putchar : dcc >
     c3a:    60 e7 4d 05 	[r4 + r5] = r13 
     c3e:    2d d1       	r5 = r5 + 4 			  ## dac_api.c:184:9
     c40:    65 98       	cmp r5, 12			  ## dac_api.c:184:9
     c42:    bf 11       	ifs (nzcv != 0) goto -130 <audio_isr+0xCE : bc2 >			  ## dac_api.c:184:9
     c44:    20 e8 c0 06 	r0 = [r12 + 24] 			  ## dac_api.c:215:30
     c48:    b8 20       	if (r0 != 0) goto 22 <audio_isr+0x16C : c60 >			  ## dac_api.c:215:30
     c4a:    10 e8 c0 07 	r0 = h[r12 + 28] 			  ## dac_api.c:215:70
     c4e:    11 ea ff 3f 	r1 = 16383 			  ## dac_api.c:215:13
     c52:    01 ce       	cmp r0, r1			  ## dac_api.c:215:13
     c54:    05 10       	ifs (nzcv == 0) goto 10 <audio_isr+0x16C : c60 >			  ## dac_api.c:215:13
     c56:    38 06       	r0 *= r7 			  ## dac_api.c:217:26
     c58:    c1 bf       	r1 = r0 >>> 31 			  ## dac_api.c:217:45
     c5a:    49 b2       	r1 = r1 >> 18 			  ## dac_api.c:217:45
     c5c:    40 d4       	r0 = r0 + r1 			  ## dac_api.c:217:45
     c5e:    c7 ae       	r7 = r0 >>> 14 			  ## dac_api.c:217:45
     c60:    20 f7 b0 01 	r0 = r11 << 1 			  ## dac_api.c:219:17
     c64:    90 e7 91 00 	r1 = h[r9 + r0] (s) 			  ## dac_api.c:219:17
     c68:    c9 d5       	r1 = r1 + r7 			  ## dac_api.c:219:14
     c6a:    92 ea 00 80 	r2 = -32768 			  ## dac_api.c:223:20
     c6e:    0a ce       	cmp r1, r2			  ## dac_api.c:223:20
     c70:    0a c6       	r2 = r1 			  ## dac_api.c:223:20
     c72:    d0 03       	ifs (nzcv <= 0) {			  ## dac_api.c:223:20
     c74:    92 ea 00 80 		r2 = -32768 
                               	}			  ## dac_api.c:223:20
     c78:    13 ea ff 7f 	r3 = 32767 			  ## dac_api.c:223:20
     c7c:    0c ef 10 00 	cmp r1, 32768			  ## dac_api.c:226:26
     c80:    b0 03       	ifs (nzcv < 0) {			  ## dac_api.c:226:26
     c82:    13 c6       		r3 = r2 
                               	}			  ## dac_api.c:226:26
     c84:    50 e7 93 00 	h[r9 + r0] = r3 			  ## dac_api.c:226:24
     c88:    00 ed bb 01 	r11 = r11 + 1 			  ## dac_api.c:182:48
     c8c:    05 80       	r5 = 0 
     c8e:    d8 ce       	cmp r11, r8			  ## dac_api.c:182:5
     c90:    96 11       	ifs (nzcv != 0) goto -212 <audio_isr+0xCA : bbe >			  ## dac_api.c:182:5
     c92:    c6 90       	r6 = sp + 24 
     c94:    a7 c6       	r7 = r12 
     c96:    25 08       	goto 74 <audio_isr+0x1EE : ce2 >
     c98:    00 e8 c0 87 	r0 = b[r12 + 30] 			  ## dac_api.c:235:19
     c9c:    80 f1 00 05 	r0 = r0 & setbit(r5) 			  ## dac_api.c:235:30
     ca0:    1b 10       	ifs (nzcv == 0) goto 54 <audio_isr+0x1E4 : cd8 >			  ## dac_api.c:235:30
     ca2:    30 48       	r0 = [r6 + 0] 			  ## dac_api.c:238:18
     ca4:    70 20       	if (r0 == 0) goto 14 <audio_isr+0x1C0 : cb4 >			  ## dac_api.c:238:18
     ca6:    38 48       	r0 = [r7 + 0] 			  ## dac_api.c:239:30
     ca8:    00 48       	r0 = [r0 + 0] 			  ## dac_api.c:239:48
     caa:    20 e8 e1 00 	r1 = [r14 + 0] 			  ## dac_api.c:239:56
     cae:    09 a1       	r1 = r1 << 1 			  ## dac_api.c:239:65
     cb0:    61 e1 e0 16 	call 795356 <cbuf_read_updata : c2f90 >			  ## dac_api.c:239:13
     cb4:    f9 48       	r1 = [r7 + 12] 			  ## dac_api.c:241:44
     cb6:    38 48       	r0 = [r7 + 0] 			  ## dac_api.c:241:26
     cb8:    c2 48       	r2 = [r0 + 12] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/decoder_mge/code/decoder_mge.c:235:17
     cba:    00 f4 20 01 	tst r2, 1			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/decoder_mge/code/decoder_mge.c:235:9
     cbe:    06 11       	ifs (nzcv != 0) goto 12 <audio_isr+0x1D8 : ccc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/decoder_mge/code/decoder_mge.c:235:9
     cc0:    01 48       	r1 = [r0 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/decoder_mge/code/decoder_mge.c:241:18
     cc2:    89 49       	r1 = [r1 + 24] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/decoder_mge/code/decoder_mge.c:241:18
     cc4:    99 20       	if (r1 != 0) goto 18 <audio_isr+0x1E4 : cd8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/decoder_mge/code/decoder_mge.c:241:18
     cc6:    00 e3 03 02 	[r0 + 12] &= (~2) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/decoder_mge/code/decoder_mge.c:243:28
     cca:    06 08       	goto 12 <audio_isr+0x1E4 : cd8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/decoder_mge/code/decoder_mge.c:243:28
     ccc:    c2 48       	r2 = [r0 + 12] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/decoder_mge/code/decoder_mge.c:236:27
     cce:    92 c9       	r2 = r2.b (s) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/decoder_mge/code/decoder_mge.c:236:15
     cd0:    02 98       	cmp r2, 0			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/decoder_mge/code/decoder_mge.c:236:13
     cd2:    02 1b       	ifs (nzcv < 0) goto 4 <audio_isr+0x1E4 : cd8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/decoder_mge/code/decoder_mge.c:236:13
     cd4:    ff e1 8f ef 	call -528 <if_kick_decoder : ac8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/decoder_mge/code/decoder_mge.c:238:13
     cd8:    36 d1       	r6 = r6 + 4 			  ## dac_api.c:234:5
     cda:    00 ed ee 04 	r14 = r14 + 4 			  ## dac_api.c:234:5
     cde:    3f d1       	r7 = r7 + 4 			  ## dac_api.c:234:5
     ce0:    6d d0       	r5 = r5 + 1 			  ## dac_api.c:234:42
     ce2:    1d 98       	cmp r5, 3			  ## dac_api.c:234:5
     ce4:    d9 11       	ifs (nzcv != 0) goto -78 <audio_isr+0x1A4 : c98 >			  ## dac_api.c:234:5
     ce6:    00 e1 70 02 	call 78 <audio_adc_isr : d38 >			  ## audio.c:36:5
     cea:    24 cd       	sp += 36 			  ## audio.c:36:5
     cec:    8f e6 ff 7f 	{r14-r0} = [sp++] 			  ## audio.c:36:5
     cf0:    c1 c4       	{psr, rets, reti} = [sp++] 			  ## audio.c:36:5
     cf2:    30 00       	rti			  ## audio.c:40:1


.GCPI154_0:
     cf4:    60 1c 00 00     < 7264 : 0x1C60 >

.GCPI154_1:
     cf8:    a4 25 00 00     < 9636 : 0x25A4 >

.GCPI154_2:
     cfc:    00 14 09 00     < 594944 : 0x91400 >

dec_hld_tab:
     d00:	 a8 1f 00 00 e0 1f 00 00         ........
     d08:	 c0 1e 00 00 18 1e 00 00         ........
     d10:	 50 1e 00 00 88 1e 00 00         P.......


kick_encode_api:
     d18:    08 80       	r0 = 1 			  ## encoder_api.c:43:0
     d1a:    61 fa 50 10 	goto 795146 <bit_set_swi : c2f28 >			  ## encoder_api.c:44:5


kick_sound:
     d1e:    1f c2       	[--sp] = {rets} 			  ## speak_api.c:64:0
     d20:    a0 20       	if (r0 == 0) goto 20 <kick_sound+0x18 : d36 >			  ## speak_api.c:64:0
     d22:    01 48       	r1 = [r0 + 0] 			  ## speak_api.c:66:25
     d24:    81 20       	if (r1 == 0) goto 16 <kick_sound+0x18 : d36 >			  ## speak_api.c:66:25
     d26:    89 49       	r1 = [r1 + 24] 			  ## speak_api.c:67:20
     d28:    01 9a       	cmp r1, 64			  ## speak_api.c:68:13
     d2a:    22 03       	if (nzcv >= 0) {			  ## speak_api.c:69:27
     d2c:    0f e2 03 80 		[r0 + 12] |= 256 			  ## speak_api.c:69:27
     d30:    08 80       		r0 = 1 			  ## speak_api.c:70:13
     d32:    61 e1 90 0f 		call 795122
                               	} <bit_set_swi : c2f28 >			  ## speak_api.c:70:13
     d36:    1f c0       	{pc} = [sp++] 


audio_adc_isr:
     d38:    18 c2       	[--sp] = {rets, r8-r4} 			  ## audio_adc.c:71:0
     d3a:    c8 28       	r0 = [addr(140)]  <.GCPI153_3 : dc8 >			  ## audio_adc.c:71:0
     d3c:    01 48       	r1 = [r0 + 0] 			  ## audio_adc.c:75:20
     d3e:    89 c9       	r1 = r1.b (s) 			  ## audio_adc.c:75:28
     d40:    f9 9f       	cmp r1, -1			  ## audio_adc.c:75:9
     d42:    3a 1c       	ifs (nzcv > 0) goto 116 <audio_adc_isr+0x80 : db8 >			  ## audio_adc.c:75:9
     d44:    00 e2 00 40 	[r0 + 0] |= 64 			  ## audio_adc.c:79:22
     d48:    01 48       	r1 = [r0 + 0] 			  ## audio_adc.c:81:20
     d4a:    00 f4 10 01 	tst r1, 1			  ## audio_adc.c:81:9
     d4e:    34 10       	ifs (nzcv == 0) goto 104 <audio_adc_isr+0x80 : db8 >			  ## audio_adc.c:81:9
     d50:    03 48       	r3 = [r0 + 0] 			  ## audio_adc.c:54:18
     d52:    80 2e       	r0 = [addr(104)]  <.GCPI153_0 : dbc >			  ## audio_adc.c:54:18
     d54:    00 ed 01 80 	r1 = r0 + 128 			  ## audio_adc.c:54:18
     d58:    00 ed 02 7c 	r2 = r0 + 124 			  ## audio_adc.c:54:18
     d5c:    0f f4 30 80 	tst r3, 256			  ## audio_adc.c:54:18
     d60:    10 03       	ifs (nzcv != 0) {			  ## audio_adc.c:54:18
     d62:    11 c6       		r1 = r2 
                               	}			  ## audio_adc.c:54:18
     d64:    c2 2d       	r2 = [addr(92)]  <.GCPI153_1 : dc0 >			  ## audio_adc.c:93:28
     d66:    13 50       	r3 = h[r2 + 0] 			  ## audio_adc.c:93:28
     d68:    33 20       	if (r3 == 0) goto 6 <audio_adc_isr+0x38 : d70 >			  ## audio_adc.c:93:9
     d6a:    d8 d3       	r0 = r3 + -1 			  ## audio_adc.c:94:26
     d6c:    10 70       	h[r2 + 0] = r0 			  ## audio_adc.c:94:26
     d6e:    24 08       	goto 72 <audio_adc_isr+0x80 : db8 >			  ## audio_adc.c:94:26
     d70:    20 e8 18 00 	r8 = [r1 + 0] 
     d74:    11 ea 84 00 	r1 = 132 
     d78:    00 e7 00 01 	r0 = b[r0 + r1] 
     d7c:    05 82       	r5 = 64 			  ## audio_adc.c:97:32
     d7e:    06 80       	r6 = 0 			  ## audio_adc.c:97:32
     d80:    18 20       	if (r0 != 0) goto 2 <audio_adc_isr+0x4C : d84 >			  ## audio_adc.c:97:32
     d82:    05 80       	r5 = 0 			  ## audio_adc.c:97:32
     d84:    04 2c       	r4 = [addr(64)]  <.GCPI153_2 : dc4 >
     d86:    27 c6       	r7 = r4 
     d88:    15 08       	goto 42 <audio_adc_isr+0x7C : db4 >
     d8a:    00 e8 40 04 	r0 = b[r4 + 16] 			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\lib\adc_api.c:75:19
     d8e:    80 f1 00 06 	r0 = r0 & setbit(r6) 			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\lib\adc_api.c:75:38
     d92:    0e 10       	ifs (nzcv == 0) goto 28 <audio_adc_isr+0x78 : db0 >			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\lib\adc_api.c:75:38
     d94:    38 48       	r0 = [r7 + 0] 			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\lib\adc_api.c:78:19
     d96:    c1 48       	r1 = [r0 + 12] 			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\lib\adc_api.c:78:43
     d98:    00 f4 10 01 	tst r1, 1			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\lib\adc_api.c:78:13
     d9c:    09 10       	ifs (nzcv == 0) goto 18 <audio_adc_isr+0x78 : db0 >			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\lib\adc_api.c:78:13
     d9e:    00 48       	r0 = [r0 + 0] 			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\lib\adc_api.c:81:44
     da0:    81 c6       	r1 = r8 			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\lib\adc_api.c:81:9
     da2:    2a c6       	r2 = r5 			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\lib\adc_api.c:81:9
     da4:    ff e1 2f 94 	call -3452 <cbuf_write : 2c >			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\lib\adc_api.c:81:9
     da8:    b9 48       	r1 = [r7 + 8] 			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\lib\adc_api.c:83:22
     daa:    21 20       	if (r1 == 0) goto 4 <audio_adc_isr+0x78 : db0 >			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\lib\adc_api.c:83:22
     dac:    38 48       	r0 = [r7 + 0] 			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\lib\adc_api.c:84:35
     dae:    a9 01       	call r1			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\lib\adc_api.c:84:13
     db0:    3f d1       	r7 = r7 + 4 			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\lib\adc_api.c:74:5
     db2:    76 d0       	r6 = r6 + 1 			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\lib\adc_api.c:74:42
     db4:    16 98       	cmp r6, 2			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\lib\adc_api.c:74:5
     db6:    e9 11       	ifs (nzcv != 0) goto -46 <audio_adc_isr+0x52 : d8a >			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\lib\adc_api.c:74:5
     db8:    18 c0       	{pc, r8-r4} = [sp++] 
     dba:    00 00       	nop


.GCPI153_0:
     dbc:    60 1c 00 00     < 7264 : 0x1C60 >

.GCPI153_1:
     dc0:    54 1c 00 00     < 7252 : 0x1C54 >

.GCPI153_2:
     dc4:    48 26 00 00     < 9800 : 0x2648 >

.GCPI153_3:
     dc8:    1c 14 09 00     < 594972 : 0x9141C >

putchar:
     dcc:    81 2a       	r1 = [addr(40)]  <.GCPI137_0 : df4 >			  ## uart.c:59:0
     dce:    ca 4f       	r2 = [r1 + -4] 			  ## uart.c:64:15
     dd0:    00 f4 20 01 	tst r2, 1			  ## uart.c:64:9
     dd4:    0d 10       	ifs (nzcv == 0) goto 26 <putchar+0x24 : df0 >			  ## uart.c:64:9
     dd6:    08 00       	csync			  ## uart.c:65:9
     dd8:    02 80       	r2 = 0 			  ## uart.c:65:9
     dda:    cb 4f       	r3 = [r1 + -4] 			  ## uart.c:66:23
     ddc:    db c9       	r3 = r3.l (s) 			  ## uart.c:66:38
     dde:    03 98       	cmp r3, 0			  ## uart.c:66:9
     de0:    04 1b       	ifs (nzcv < 0) goto 8 <putchar+0x1E : dea >			  ## uart.c:66:9
     de2:    52 d0       	r2 = r2 + 1 			  ## uart.c:67:14
     de4:    0c ef 20 43 	cmp r2, 49920			  ## uart.c:68:17
     de8:    f8 19       	if (nzcv <= 0) goto -16 <putchar+0xE : dda >			  ## uart.c:68:17
     dea:    fd e2 1f 00 	[r1 + -4] |= 8192 			  ## uart.c:72:19
     dee:    08 68       	[r1 + 0] = r0 			  ## uart.c:73:19
     df0:    20 00       	rts			  ## uart.c:76:1
     df2:    00 00       	nop			  ## uart.c:76:1


.GCPI137_0:
     df4:    04 08 09 00     < 591876 : 0x90804 >

put_u4hex:
     df8:    80 f3 00 0f 	r0 = r0 & 15 			  ## uart.c:92:0
     dfc:    50 98       	cmp r0, 10			  ## uart.c:95:9
     dfe:    34 03       	if (nzcv < 0) {			  ## uart.c:98:21
     e00:    00 f3 00 30 		r0 = r0 | 48 
                               	} else {			  ## uart.c:98:21
     e04:    b8 89       		r0 += 55 
                               	}			  ## uart.c:96:26
     e06:    e2 0f       	goto -60 <putchar : dcc >			  ## uart.c:96:26


printf_buf:
     e08:    17 c2       	[--sp] = {rets, r7-r4} 			  ## uart.c:210:0
     e0a:    0c c6       	r4 = r1 			  ## uart.c:210:0
     e0c:    05 c6       	r5 = r0 			  ## uart.c:210:0
     e0e:    07 80       	r7 = 0 			  ## uart.c:210:0
     e10:    0f 08       	goto 30 <printf_buf+0x28 : e30 >			  ## uart.c:210:0
     e12:    57 20       	if (r7 == 0) goto 10 <printf_buf+0x16 : e1e >			  ## uart.c:210:0
     e14:    80 f3 70 0f 	r0 = r7 & 15 			  ## uart.c:218:16
     e18:    02 11       	ifs (nzcv != 0) goto 4 <printf_buf+0x16 : e1e >			  ## uart.c:218:16
     e1a:    50 80       	r0 = 10 			  ## uart.c:222:17
     e1c:    d7 04       	call -82 <putchar : dcc >			  ## uart.c:222:17
     e1e:    00 e7 56 07 	r6 = b[r5 + r7] 			  ## uart.c:226:19
     e22:    70 a4       	r0 = r6 >> 4 			  ## uart.c:204:19
     e24:    e9 04       	call -46 <put_u4hex : df8 >			  ## uart.c:204:5
     e26:    30 c6       	r0 = r6 			  ## uart.c:205:5
     e28:    e7 04       	call -50 <put_u4hex : df8 >			  ## uart.c:205:5
     e2a:    00 81       	r0 = 32 			  ## uart.c:206:5
     e2c:    cf 04       	call -98 <putchar : dcc >			  ## uart.c:206:5
     e2e:    7f d0       	r7 = r7 + 1 			  ## uart.c:217:29
     e30:    27 ce       	cmp r4, r7			  ## uart.c:217:5
     e32:    ef 11       	ifs (nzcv != 0) goto -34 <printf_buf+0xA : e12 >			  ## uart.c:217:5
     e34:    50 80       	r0 = 10 			  ## uart.c:228:5
     e36:    ca 04       	call -108 <putchar : dcc >			  ## uart.c:228:5
     e38:    17 c0       	{pc, r7-r4} = [sp++] 			  ## uart.c:228:5
     e3a:    00 00       	nop


sfc_max_baud:
     e3c:    c0 28       	r0 = [addr(12)]  <.GCPI175_0 : e48 >			  ## clock.c:123:0
     e3e:    c1 28       	r1 = [addr(12)]  <.GCPI175_1 : e4c >			  ## clock.c:159:13
     e40:    01 6b       	[r0 + 48] = r1 			  ## clock.c:159:13
     e42:    10 80       	r0 = 2 			  ## clock.c:161:5
     e44:    20 00       	rts			  ## clock.c:161:5
     e46:    00 00       	nop			  ## clock.c:161:5


.GCPI175_0:
     e48:    60 1c 00 00     < 7264 : 0x1C60 >

.GCPI175_1:
     e4c:    00 68 89 09     < 160000000 : 0x9896800 >

enter_critical_hook:
     e50:    80 28       	r0 = [addr(8)]  <.GCPI202_0 : e58 >			  ## common.c:38:0
     e52:    09 80       	r1 = 1 			  ## tick_timer_sys.c:30:26
     e54:    01 78       	b[r0 + 0] = r1 			  ## tick_timer_sys.c:30:26
     e56:    20 00       	rts			  ## common.c:40:1


.GCPI202_0:
     e58:    2c 19 00 00     < 6444 : 0x192C >

exit_critical_hook:
     e5c:    80 28       	r0 = [addr(8)]  <.GCPI219_0 : e64 >			  ## common.c:43:0
     e5e:    01 80       	r1 = 0 			  ## tick_timer_sys.c:30:26
     e60:    01 78       	b[r0 + 0] = r1 			  ## tick_timer_sys.c:30:26
     e62:    20 00       	rts			  ## common.c:45:1


.GCPI219_0:
     e64:    2c 19 00 00     < 6444 : 0x192C >

tick_timer_isr:
     e68:    c1 c5       	[--sp] = {psr, rets, reti} 			  ## tick_timer_cpu.c:27:0
     e6a:    ff e6 7f 00 	[--sp] = {r6-r0} 			  ## tick_timer_cpu.c:27:0
     e6e:    fc cd       	sp += -4 			  ## tick_timer_cpu.c:27:0
     e70:    06 2c       	r6 = [addr(64)]  <.GCPI361_1 : eb0 >			  ## tick_timer_cpu.c:27:0
     e72:    f0 e2 6f 40 	[r6 + -4] |= 64 			  ## tick_timer_cpu.c:32:34
     e76:    40 2b       	r0 = [addr(52)]  <.GCPI361_0 : eac >			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\modules\timer\tick_timer_sys.c:35:12
     e78:    00 58       	r0 = b[r0 + 0] 			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\modules\timer\tick_timer_sys.c:35:12
     e7a:    28 21       	if (r0 != 0) goto 36 <tick_timer_isr+0x38 : ea0 >			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\modules\timer\tick_timer_sys.c:35:12
     e7c:    86 e1 e0 b3 	call 1103484 <tick_timer_loop : 10e4fc >			  ## tick_timer_cpu.c:42:5
     e80:    86 e1 70 85 	call 1101998 <get_random : 10df32 >			  ## tick_timer_cpu.c:47:20
     e84:    04 c6       	r4 = r0 			  ## tick_timer_cpu.c:47:20
     e86:    04 60       	[sp] = r4 			  ## tick_timer_cpu.c:47:13
     e88:    86 e1 60 be 	call 1103820 <sdk_meky_check : 10e658 >			  ## tick_timer_cpu.c:48:17
     e8c:    05 c6       	r5 = r0 			  ## tick_timer_cpu.c:48:17
     e8e:    00 90       	r0 = sp + 0 
     e90:    11 80       	r1 = 2 			  ## tick_timer_cpu.c:49:26
     e92:    82 e1 40 82 	call 1069128 <CRC16 : 105ede >			  ## tick_timer_cpu.c:49:26
     e96:    60 da       	r0 ^= r4 			  ## tick_timer_cpu.c:49:24
     e98:    28 ce       	cmp r5, r0			  ## tick_timer_cpu.c:49:13
     e9a:    11 03       	ifs (nzcv != 0) {			  ## tick_timer_cpu.c:50:42
     e9c:    08 80       		r0 = 1 			  ## tick_timer_cpu.c:50:42
     e9e:    70 68       		[r6 + 4] = r0 
                               	}			  ## tick_timer_cpu.c:50:42
     ea0:    04 cd       	sp += 4 
     ea2:    8f e6 7f 00 	{r6-r0} = [sp++] 
     ea6:    c1 c4       	{psr, rets, reti} = [sp++] 
     ea8:    30 00       	rti			  ## tick_timer_cpu.c:54:1
     eaa:    00 00       	nop			  ## tick_timer_cpu.c:54:1


.GCPI361_0:
     eac:    2c 19 00 00     < 6444 : 0x192C >

.GCPI361_1:
     eb0:    e4 00 08 00     < 524516 : 0x800E4 >
Disassembly of section .app_code:
_start:
  100100:    06 e1 40 e5 	call 56488 <boot_info_init : 10ddac >			  ## startup.S:29:0
  100104:    a8 c8       	r0 = icfg 			  ## startup.S:30:0
  100106:    0e f3 00 30 	r0 = r0 | 2816 			  ## startup.S:31:0
  10010a:    45 c7       	icfg = r0 			  ## startup.S:32:0
  10010c:    c7 ea 00 00 	sp.h = 0 			  ## startup.S:38:0
  100110:    47 ea e0 16 	sp.l = 5856 			  ## startup.S:39:0
  100114:    80 ea 00 00 	r0.h = 0 			  ## startup.S:43:0
  100118:    00 ea 00 17 	r0.l = 5888 			  ## startup.S:44:0
  10011c:    01 80       	r1 = 0 			  ## startup.S:45:0
  10011e:    82 ea 00 00 	r2.h = 0 			  ## startup.S:46:0
  100122:    02 ea a4 0a 	r2.l = 2724 			  ## startup.S:47:0
  100126:    b2 20       	if (r2 == 0) goto 22 <_start+0x3E : 10013e >			  ## startup.S:49:0
  100128:    02 99       	cmp r2, 32			  ## startup.S:51:0
  10012a:    29 03       	if (nzcv >= 0) {			  ## startup.S:52:0
  10012c:    03 80       		r3 = 0 			  ## startup.S:53:0
  10012e:    90 ee 22 20 		r2 = r2 - 32 
                               	} else {			  ## startup.S:54:0
  100132:    13 c6       		r3 = r2 			  ## startup.S:55:0
  100134:    02 80       		r2 = 0 
                               	}			  ## startup.S:56:0
  100136:    0b 01       	rep 2, r3 { <_start+0x3C : 10013c >			  ## startup.S:57:0
  100138:    48 e8 01 40 		b[r0 ++= 1] = r1 
                               	}			  ## startup.S:58:0
  10013c:    5a 27       	if (r2 != 0) goto -22 <_start+0x28 : 100128 >			  ## startup.S:60:0
  10013e:    80 ea 00 00 	r0.h = 0 			  ## startup.S:63:0
  100142:    00 ea 00 00 	r0.l = 0 			  ## startup.S:64:0
  100146:    81 ea 11 00 	r1.h = 17 			  ## startup.S:65:0
  10014a:    01 ea 80 dd 	r1.l = 56704 			  ## startup.S:66:0
  10014e:    82 ea 00 00 	r2.h = 0 			  ## startup.S:67:0
  100152:    02 ea b4 0e 	r2.l = 3764 			  ## startup.S:68:0
  100156:    d2 20       	if (r2 == 0) goto 26 <_start+0x72 : 100172 >			  ## startup.S:70:0
  100158:    02 99       	cmp r2, 32			  ## startup.S:72:0
  10015a:    29 03       	if (nzcv >= 0) {			  ## startup.S:73:0
  10015c:    04 80       		r4 = 0 			  ## startup.S:74:0
  10015e:    90 ee 22 20 		r2 = r2 - 32 
                               	} else {			  ## startup.S:75:0
  100162:    14 c6       		r4 = r2 			  ## startup.S:76:0
  100164:    02 80       		r2 = 0 
                               	}			  ## startup.S:77:0
  100166:    1c 01       	rep 4, r4 { <_start+0x70 : 100170 >			  ## startup.S:78:0
  100168:    08 e8 13 40 		r3 = b[r1 ++= 1] 			  ## startup.S:79:0
  10016c:    48 e8 03 40 		b[r0 ++= 1] = r3 
                               	}			  ## startup.S:80:0
  100170:    3a 27       	if (r2 != 0) goto -26 <_start+0x58 : 100158 >			  ## startup.S:82:0
  100172:    80 c6       	r0 = r8 			  ## startup.S:88:0
  100174:    39 c6       	r1 = r7 			  ## startup.S:89:0
  100176:    2a c6       	r2 = r5 			  ## startup.S:90:0
  100178:    33 c6       	r3 = r6 			  ## startup.S:91:0
  10017a:    06 fa 70 2f 	goto 50670 <c_main : 10c76c >			  ## startup.S:92:0
  10017e:    00 00       	nop


need_dcbuf_size.1342:
  100180:    10 ea 64 0c 	r0 = 3172 			  ## main.c:48:0
  100184:    20 00       	rts			  ## main.c:49:2


get_crcv:
  100186:    01 80       	r1 = 0 			  ## main.c:72:0
  100188:    02 80       	r2 = 0 			  ## main.c:72:0
  10018a:    c1 99       	cmp r1, 56			  ## main.c:75:2
  10018c:    01 03       	ifs (nzcv == 0) {			  ## main.c:79:2
  10018e:    50 c9       		r0 = r2.l 			  ## main.c:79:2
  100190:    20 00       		rts
                               	}			  ## main.c:79:2
  100192:    43 d4       	r3 = r0 + r1 			  ## main.c:77:11
  100194:    1b 50       	r3 = h[r3 + 0] 			  ## main.c:77:11
  100196:    d2 d4       	r2 = r2 + r3 			  ## main.c:77:8
  100198:    89 d0       	r1 = r1 + 2 			  ## main.c:75:2
  10019a:    f7 0f       	goto -18 <get_crcv+0x4 : 10018a >			  ## main.c:75:2


fill_buf:
  10019c:    16 c2       	[--sp] = {rets, r6-r4} 			  ## bitstream.c:219:0
  10019e:    04 c6       	r4 = r0 			  ## bitstream.c:221:31
  1001a0:    24 e8 42 46 	r2 = [++ r4 = 280] 			  ## bitstream.c:221:31
  1001a4:    e3 4f       	r3 = [r4 + -4] 			  ## bitstream.c:224:29
  1001a6:    80 f3 31 07 	r1 = r3 & 7 			  ## bitstream.c:225:20
  1001aa:    e1 6f       	[r4 + -4] = r1 			  ## bitstream.c:225:20
  1001ac:    00 ed 01 0c 	r1 = r0 + 12 			  ## bitstream.c:225:20
  1001b0:    db a3       	r3 = r3 >>> 3 			  ## bitstream.c:224:35
  1001b2:    d2 d1       	r2 = r2 + 7 			  ## bitstream.c:221:44
  1001b4:    d5 a3       	r5 = r2 >>> 3 			  ## bitstream.c:221:49
  1001b6:    02 80       	r2 = 0 
  1001b8:    05 08       	goto 10 <fill_buf+0x28 : 1001c4 >
  1001ba:    76 d4       	r6 = r6 + r1 			  ## bitstream.c:227:34
  1001bc:    36 58       	r6 = b[r6 + 0] 			  ## bitstream.c:227:34
  1001be:    40 e7 16 02 	b[r1 + r2] = r6 			  ## bitstream.c:227:32
  1001c2:    52 d0       	r2 = r2 + 1 			  ## bitstream.c:226:2
  1001c4:    9e d4       	r6 = r3 + r2 			  ## bitstream.c:226:23
  1001c6:    35 ce       	cmp r6, r5			  ## bitstream.c:226:2
  1001c8:    f8 1b       	ifs (nzcv < 0) goto -16 <fill_buf+0x1E : 1001ba >			  ## bitstream.c:226:2
  1001ca:    09 ed 02 b0 	r2 = r0 + 2480 
  1001ce:    16 5a       	r6 = b[r2 + 1] 			  ## bitstream.c:231:16
  1001d0:    ed d6       	r5 = r5 - r3 			  ## bitstream.c:228:16
  1001d2:    2f ee 50 80 	r0 = 256 - r5 			  ## bitstream.c:229:17
  1001d6:    76 20       	if (r6 == 0) goto 14 <fill_buf+0x4A : 1001e6 >
  1001d8:    e3 48       	r3 = [r4 + 12] 			  ## bitstream.c:231:48
  1001da:    fb 9f       	cmp r3, -1			  ## bitstream.c:231:6
  1001dc:    04 10       	ifs (nzcv == 0) goto 8 <fill_buf+0x4A : 1001e6 >			  ## bitstream.c:231:6
  1001de:    a6 48       	r6 = [r4 + 8] 			  ## bitstream.c:233:51
  1001e0:    9b d7       	r3 = r3 - r6 			  ## bitstream.c:233:37
  1001e2:    18 ce       	cmp r3, r0			  ## bitstream.c:234:7
  1001e4:    01 1b       	ifs (nzcv < 0) goto 2 <fill_buf+0x4C : 1001e8 >			  ## bitstream.c:234:7
  1001e6:    03 c6       	r3 = r0 
  1001e8:    00 e5 26 09 	r6, r0 = d[r2 + 36] 			  ## bitstream.c:238:58
  1001ec:    4a d5       	r2 = r1 + r5 			  ## bitstream.c:238:88
  1001ee:    a1 48       	r1 = [r4 + 8] 			  ## bitstream.c:238:76
  1001f0:    ae 01       	call r6			  ## bitstream.c:238:12
  1001f2:    a1 48       	r1 = [r4 + 8] 			  ## bitstream.c:241:23
  1001f4:    09 d4       	r1 = r1 + r0 			  ## bitstream.c:241:23
  1001f6:    a1 68       	[r4 + 8] = r1 			  ## bitstream.c:241:23
  1001f8:    40 d5       	r0 = r0 + r5 			  ## bitstream.c:242:32
  1001fa:    00 a3       	r0 = r0 << 3 			  ## bitstream.c:242:43
  1001fc:    20 68       	[r4 + 0] = r0 			  ## bitstream.c:242:27
  1001fe:    16 c0       	{pc, r6-r4} = [sp++] 			  ## bitstream.c:242:27


unaligned32_be:
  100200:    01 58       	r1 = b[r0 + 0] 			  ## bitstream.c:81:0
  100202:    02 5a       	r2 = b[r0 + 1] 			  ## bitstream.c:83:27
  100204:    41 f6 12 08 	r2 <= insert(r1, p:8, l:8) 			  ## bitstream.c:83:25
  100208:    11 b0       	r1 = r2 << 16 			  ## bitstream.c:83:33
  10020a:    02 5c       	r2 = b[r0 + 2] 			  ## bitstream.c:83:43
  10020c:    12 a8       	r2 = r2 << 8 			  ## bitstream.c:83:48
  10020e:    11 da       	r1 |= r2 			  ## bitstream.c:83:40
  100210:    00 5e       	r0 = b[r0 + 3] 			  ## bitstream.c:83:56
  100212:    08 da       	r0 |= r1 			  ## bitstream.c:84:52
  100214:    20 00       	rts			  ## bitstream.c:84:2


get_bits:
  100216:    15 c2       	[--sp] = {rets, r5, r4} 			  ## bitstream.c:124:0
  100218:    0b c6       	r3 = r1 			  ## bitstream.c:124:0
  10021a:    04 c6       	r4 = r0 			  ## bitstream.c:124:0
  10021c:    20 48       	r0 = [r4 + 0] 			  ## bitstream.c:127:3
  10021e:    a5 48       	r5 = [r4 + 8] 			  ## bitstream.c:126:2
  100220:    e9 a3       	r1 = r5 >>> 3 			  ## bitstream.c:127:3
  100222:    40 d4       	r0 = r0 + r1 			  ## bitstream.c:127:3
  100224:    ed 04       	call -38 <unaligned32_be : 100200 >			  ## bitstream.c:127:3
  100226:    e9 d4       	r1 = r5 + r3 			  ## bitstream.c:129:2
  100228:    a1 68       	[r4 + 8] = r1 			  ## bitstream.c:130:3
  10022a:    80 f3 51 07 	r1 = r5 & 7 			  ## bitstream.c:127:3
  10022e:    08 cf       	r0 <<= r1 			  ## bitstream.c:127:3
  100230:    20 ee 31 20 	r1 = 32 - r3 			  ## bitstream.c:128:9
  100234:    48 cf       	r0 >>= r1 			  ## bitstream.c:128:9
  100236:    15 c0       	{pc, r5, r4} = [sp++] 


f1a_decoder_open:
  100238:    1e c2       	[--sp] = {rets, r14-r4} 			  ## main.c:266:0
  10023a:    f8 cd       	sp += -8 			  ## main.c:266:0
  10023c:    17 c6       	r7 = r2 			  ## main.c:266:0
  10023e:    0d c6       	r5 = r1 			  ## main.c:266:0
  100240:    04 c6       	r4 = r0 			  ## main.c:266:0
  100242:    06 80       	r6 = 0 			  ## main.c:266:0
  100244:    01 80       	r1 = 0 			  ## main.c:277:2
  100246:    12 ea 64 0c 	r2 = 3172 			  ## main.c:277:2
  10024a:    e1 e1 7f 68 	call -250610 <memset : c2f5c >			  ## main.c:277:2
  10024e:    09 ed 40 d4 	r0 = r4 + 2516 			  ## main.c:278:26
  100252:    29 c6       	r1 = r5 			  ## main.c:278:2
  100254:    62 80       	r2 = 12 			  ## main.c:278:2
  100256:    e1 e1 bf 67 	call -250634 <memcpy : c2f50 >			  ## main.c:278:2
  10025a:    55 ea 01 00 	r13 = 1 
  10025e:    09 ed 4c 6c 	r12 = r4 + 2412 
  100262:    4d e5 c6 0d 	d[r12 + 52] = r6, r13 			  ## main.c:280:19
  100266:    00 ed 4b 0c 	r11 = r4 + 12 			  ## main.c:283:38
  10026a:    01 ed 45 28 	r5 = r4 + 296 
  10026e:    01 ed 49 0c 	r9 = r4 + 268 			  ## main.c:283:11
  100272:    4b e5 59 f9 	d[r5 + -28] = r9, r11 			  ## main.c:283:21
  100276:    10 ea 00 08 	r0 = 2048 			  ## main.c:285:27
  10027a:    28 6f       	[r5 + -16] = r0 			  ## main.c:285:27
  10027c:    e8 6e       	[r5 + -20] = r0 			  ## main.c:286:20
  10027e:    40 e8 4d 01 	b[r4 + 4] = r13 			  ## main.c:288:23
  100282:    00 ed 4a 10 	r10 = r4 + 16 			  ## main.c:288:23
  100286:    01 ed 48 54 	r8 = r4 + 340 			  ## main.c:288:23
  10028a:    09 ed 4e b0 	r14 = r4 + 2480 			  ## main.c:288:23
  10028e:    07 98       	cmp r7, 0			  ## main.c:288:23
  100290:    00 fb 30 09 	ifs (nzcv == 0) goto 294 <f1a_decoder_open+0x182 : 1003ba >			  ## main.c:288:23
  100294:    3e c6       	r6 = r7 			  ## main.c:293:15
  100296:    47 60       	[sp+ 4] = r7 			  ## main.c:293:15
  100298:    14 e8 67 0e 	r7 = h[++ r6 = 56] 			  ## main.c:293:15
  10029c:    40 40       	r0 = [sp+ 4] 			  ## main.c:295:9
  10029e:    ff e1 2f f7 	call -284 <get_crcv : 100186 >			  ## main.c:295:9
  1002a2:    11 ea 1c 0f 	r1 = 3868 			  ## main.c:293:7
  1002a6:    39 ce       	cmp r7, r1			  ## main.c:302:27
  1002a8:    00 fb 71 08 	ifs (nzcv != 0) goto 270 <f1a_decoder_open+0x182 : 1003ba >			  ## main.c:302:27
  1002ac:    31 54       	r1 = h[r6 + 2] 			  ## main.c:296:15
  1002ae:    08 ce       	cmp r1, r0			  ## main.c:296:15
  1002b0:    00 fb 31 08 	ifs (nzcv != 0) goto 262 <f1a_decoder_open+0x182 : 1003ba >			  ## main.c:296:15
  1002b4:    20 c6       	r0 = r4 			  ## main.c:393:3
  1002b6:    ff e1 1f f7 	call -286 <fill_buf : 10019c >			  ## main.c:393:3
  1002ba:    e0 58       	r0 = b[r4 + 12] 			  ## main.c:395:12
  1002bc:    e1 5a       	r1 = b[r4 + 13] 			  ## main.c:395:31
  1002be:    41 f6 01 08 	r1 <= insert(r0, p:8, l:8) 			  ## main.c:395:29
  1002c2:    08 a8       	r0 = r1 << 8 			  ## main.c:395:44
  1002c4:    e1 5c       	r1 = b[r4 + 14] 			  ## main.c:395:52
  1002c6:    08 da       	r0 |= r1 			  ## main.c:395:50
  1002c8:    20 e4 0c cd 	r12 = [addr(820)]  <.GCPI16_3 : 100600 >			  ## main.c:397:12
  1002cc:    44 ce       	cmp r0, r12			  ## main.c:397:7
  1002ce:    20 11       	ifs (nzcv != 0) goto 64 <f1a_decoder_open+0xD8 : 100310 >			  ## main.c:397:7
  1002d0:    00 e8 a6 80 	r6 = b[r10 + 2] 			  ## main.c:400:18
  1002d4:    00 e8 a0 00 	r0 = b[r10 + 0] 			  ## main.c:399:32
  1002d8:    00 e8 a1 40 	r1 = b[r10 + 1] 			  ## main.c:399:12
  1002dc:    12 ea 00 08 	r2 = 2048 			  ## main.c:402:22
  1002e0:    ea 6e       	[r5 + -20] = r2 			  ## main.c:402:22
  1002e2:    41 f6 10 08 	r0 <= insert(r1, p:8, l:8) 			  ## main.c:399:30
  1002e6:    80 d1       	r0 = r0 + 6 			  ## main.c:403:33
  1002e8:    80 d7       	r0 = r0 - r6 			  ## main.c:403:40
  1002ea:    a8 6f       	[r5 + -8] = r0 			  ## main.c:403:25
  1002ec:    20 c6       	r0 = r4 			  ## main.c:404:4
  1002ee:    ff e1 5f f5 	call -342 <fill_buf : 10019c >			  ## main.c:404:4
  1002f2:    00 ed 60 0b 	r0 = r6 + 11 			  ## main.c:407:9
  1002f6:    01 80       	r1 = 0 			  ## main.c:407:9
  1002f8:    05 08       	goto 10 <f1a_decoder_open+0xCC : 100304 >			  ## main.c:407:9
  1002fa:    00 e7 42 00 	r2 = b[r4 + r0] 			  ## main.c:409:26
  1002fe:    09 a8       	r1 = r1 << 8 			  ## main.c:409:18
  100300:    11 da       	r1 |= r2 			  ## main.c:409:24
  100302:    c0 d3       	r0 = r0 + -1 			  ## main.c:407:4
  100304:    1f ed 02 f4 	r2 = r0 + -12 			  ## main.c:407:36
  100308:    fa 9f       	cmp r2, -1			  ## main.c:407:4
  10030a:    f7 1c       	ifs (nzcv > 0) goto -18 <f1a_decoder_open+0xC2 : 1002fa >			  ## main.c:407:4
  10030c:    60 e8 e1 01 	[r14 + 4] = r1 			  ## main.c:411:21
  100310:    52 ea 00 08 	r10 = 2048 			  ## main.c:414:28
  100314:    60 e8 5a fc 	[r5 + -16] = r10 			  ## main.c:414:28
  100318:    60 e8 5a fb 	[r5 + -20] = r10 			  ## main.c:415:21
  10031c:    07 80       	r7 = 0 			  ## main.c:415:21
  10031e:    af 6f       	[r5 + -8] = r7 			  ## main.c:416:24
  100320:    46 40       	r6 = [sp+ 4] 			  ## main.c:416:24
  100322:    20 e8 6b 0b 	r11 = [r6 + 44] 			  ## main.c:418:26
  100326:    20 e8 59 f9 	r9 = [r5 + -28] 			  ## main.c:417:26
  10032a:    20 c6       	r0 = r4 			  ## main.c:420:3
  10032c:    ff e1 6f f3 	call -404 <fill_buf : 10019c >			  ## main.c:420:3
  100330:    00 e8 90 00 	r0 = b[r9 + 0] 			  ## main.c:421:12
  100334:    00 e8 91 40 	r1 = b[r9 + 1] 			  ## main.c:421:31
  100338:    41 f6 01 08 	r1 <= insert(r0, p:8, l:8) 			  ## main.c:421:29
  10033c:    08 a8       	r0 = r1 << 8 			  ## main.c:421:44
  10033e:    00 e8 91 80 	r1 = b[r9 + 2] 			  ## main.c:421:52
  100342:    08 da       	r0 |= r1 			  ## main.c:421:50
  100344:    44 ce       	cmp r0, r12			  ## main.c:422:7
  100346:    00 fb 11 11 	ifs (nzcv != 0) goto 546 <f1a_decoder_open+0x334 : 10056c >			  ## main.c:422:7
  10034a:    60 e9 0e 00 	[sp] = r14 
  10034e:    00 e8 9a 81 	r10 = b[r9 + 6] 			  ## main.c:425:18
  100352:    00 e8 90 01 	r0 = b[r9 + 4] 			  ## main.c:424:32
  100356:    00 e8 92 41 	r2 = b[r9 + 5] 			  ## main.c:424:12
  10035a:    c1 81       	r1 = 56 			  ## main.c:424:12
  10035c:    e9 6e       	[r5 + -20] = r1 			  ## main.c:428:22
  10035e:    41 f6 20 08 	r0 <= insert(r2, p:8, l:8) 			  ## main.c:424:30
  100362:    c0 d3       	r0 = r0 + -1 			  ## main.c:427:20
  100364:    c0 fc 0c 0a 	r12 = r0 / r10 (s) 			  ## main.c:427:25
  100368:    00 ed 90 07 	r0 = r9 + 7 			  ## main.c:426:24
  10036c:    1f ed ad ff 	r13 = r10 + -1 			  ## main.c:430:9
  100370:    20 f7 ae 03 	r14 = r10 << 3 			  ## main.c:430:9
  100374:    20 f7 a9 04 	r9 = r10 << 4 
  100378:    02 08       	goto 4 <f1a_decoder_open+0x146 : 10037e >
  10037a:    90 cb       	r0 += r10 			  ## main.c:443:25
  10037c:    7f d0       	r7 = r7 + 1 			  ## main.c:430:34
  10037e:    7c ce       	cmp r7, r12			  ## main.c:430:4
  100380:    00 fb ca 0e 	ifs (nzcv >= 0) goto 472 <f1a_decoder_open+0x324 : 10055c >			  ## main.c:430:4
  100384:    2e ee 11 00 	r1 = 2048 - r1 			  ## main.c:432:15
  100388:    49 ce       	cmp r1, r9			  ## main.c:432:9
  10038a:    04 1a       	ifs (nzcv >= 0) goto 8 <f1a_decoder_open+0x15C : 100394 >			  ## main.c:432:9
  10038c:    20 c6       	r0 = r4 			  ## main.c:434:6
  10038e:    ff e1 5f f0 	call -502 <fill_buf : 10019c >			  ## main.c:434:6
  100392:    68 4e       	r0 = [r5 + -28] 			  ## main.c:435:29
  100394:    02 80       	r2 = 0 
  100396:    a9 c6       	r1 = r13 
  100398:    05 08       	goto 10 <f1a_decoder_open+0x16C : 1003a4 >
  10039a:    00 e7 03 01 	r3 = b[r0 + r1] 			  ## main.c:440:27
  10039e:    12 a8       	r2 = r2 << 8 			  ## main.c:440:19
  1003a0:    1a da       	r2 |= r3 			  ## main.c:440:25
  1003a2:    c9 d3       	r1 = r1 + -1 			  ## main.c:438:5
  1003a4:    f9 9f       	cmp r1, -1			  ## main.c:438:5
  1003a6:    f9 1c       	ifs (nzcv > 0) goto -14 <f1a_decoder_open+0x162 : 10039a >			  ## main.c:438:5
  1003a8:    e9 4e       	r1 = [r5 + -20] 			  ## main.c:442:23
  1003aa:    b1 cb       	r1 += r14 			  ## main.c:442:23
  1003ac:    e9 6e       	[r5 + -20] = r1 			  ## main.c:442:23
  1003ae:    53 ce       	cmp r2, r11			  ## main.c:444:9
  1003b0:    e4 13       	if (nzcv < 0) goto -56 <f1a_decoder_open+0x142 : 10037a >			  ## main.c:444:9
  1003b2:    d0 d3       	r0 = r2 + -1 			  ## main.c:446:34
  1003b4:    20 e9 0e 00 	r14 = [sp] 
  1003b8:    d5 08       	goto 426 <f1a_decoder_open+0x32C : 100564 >
  1003ba:    40 e8 cd 00 	b[r12 + 0] = r13 			  ## main.c:304:24
  1003be:    20 c6       	r0 = r4 			  ## main.c:305:3
  1003c0:    ff e1 cf ee 	call -552 <fill_buf : 10019c >			  ## main.c:305:3
  1003c4:    e0 58       	r0 = b[r4 + 12] 			  ## main.c:306:12
  1003c6:    e1 5a       	r1 = b[r4 + 13] 			  ## main.c:306:31
  1003c8:    41 f6 01 08 	r1 <= insert(r0, p:8, l:8) 			  ## main.c:306:29
  1003cc:    08 a8       	r0 = r1 << 8 			  ## main.c:306:44
  1003ce:    e1 5c       	r1 = b[r4 + 14] 			  ## main.c:306:52
  1003d0:    01 da       	r1 |= r0 			  ## main.c:306:50
  1003d2:    20 e4 00 8b 	r0 = [addr(556)]  <.GCPI16_3 : 100600 >			  ## main.c:308:12
  1003d6:    08 ce       	cmp r1, r0			  ## main.c:308:7
  1003d8:    34 11       	ifs (nzcv != 0) goto 104 <f1a_decoder_open+0x20A : 100442 >			  ## main.c:308:7
  1003da:    00 e8 a7 80 	r7 = b[r10 + 2] 			  ## main.c:311:18
  1003de:    00 e8 a0 00 	r0 = b[r10 + 0] 			  ## main.c:310:32
  1003e2:    00 e8 a1 40 	r1 = b[r10 + 1] 			  ## main.c:310:12
  1003e6:    12 ea 00 08 	r2 = 2048 			  ## main.c:313:22
  1003ea:    ea 6e       	[r5 + -20] = r2 			  ## main.c:313:22
  1003ec:    41 f6 10 08 	r0 <= insert(r1, p:8, l:8) 			  ## main.c:310:30
  1003f0:    80 d1       	r0 = r0 + 6 			  ## main.c:314:33
  1003f2:    c0 d7       	r0 = r0 - r7 			  ## main.c:314:40
  1003f4:    a8 6f       	[r5 + -8] = r0 			  ## main.c:314:25
  1003f6:    20 c6       	r0 = r4 			  ## main.c:315:4
  1003f8:    ff e1 0f ed 	call -608 <fill_buf : 10019c >			  ## main.c:315:4
  1003fc:    00 ed 70 0b 	r0 = r7 + 11 			  ## main.c:318:9
  100400:    01 80       	r1 = 0 			  ## main.c:318:9
  100402:    05 08       	goto 10 <f1a_decoder_open+0x1D6 : 10040e >			  ## main.c:318:9
  100404:    00 e7 42 00 	r2 = b[r4 + r0] 			  ## main.c:320:26
  100408:    09 a8       	r1 = r1 << 8 			  ## main.c:320:18
  10040a:    11 da       	r1 |= r2 			  ## main.c:320:24
  10040c:    c0 d3       	r0 = r0 + -1 			  ## main.c:318:4
  10040e:    1f ed 02 f4 	r2 = r0 + -12 			  ## main.c:318:36
  100412:    fa 9f       	cmp r2, -1			  ## main.c:318:4
  100414:    f7 1c       	ifs (nzcv > 0) goto -18 <f1a_decoder_open+0x1CC : 100404 >			  ## main.c:318:4
  100416:    60 e8 e1 01 	[r14 + 4] = r1 			  ## main.c:322:21
  10041a:    38 a3       	r0 = r7 << 3 			  ## main.c:324:37
  10041c:    e9 4e       	r1 = [r5 + -20] 			  ## main.c:324:22
  10041e:    40 d4       	r0 = r0 + r1 			  ## main.c:324:22
  100420:    e8 6e       	[r5 + -20] = r0 			  ## main.c:324:22
  100422:    00 ee b0 07 	r0 = r11 + r7 			  ## main.c:323:24
  100426:    01 5c       	r1 = b[r0 + 2] 			  ## main.c:326:53
  100428:    00 e7 b2 07 	r2 = b[r11 + r7] 			  ## main.c:326:13
  10042c:    03 5a       	r3 = b[r0 + 1] 			  ## main.c:326:32
  10042e:    ae 4f       	r6 = [r5 + -8] 			  ## main.c:327:39
  100430:    ee 6f       	[r5 + -4] = r6 			  ## main.c:327:25
  100432:    0e 80       	r6 = 1 			  ## main.c:327:25
  100434:    40 e8 e6 00 	b[r14 + 0] = r6 			  ## main.c:328:17
  100438:    41 f6 23 08 	r3 <= insert(r2, p:8, l:8) 			  ## main.c:326:30
  10043c:    1a a8       	r2 = r3 << 8 			  ## main.c:326:45
  10043e:    11 da       	r1 |= r2 			  ## main.c:326:51
  100440:    01 08       	goto 2 <f1a_decoder_open+0x20C : 100444 >
  100442:    98 c6       	r0 = r11 
  100444:    06 80       	r6 = 0 
  100446:    da 2b       	r2 = [addr(444)]  <.GCPI16_4 : 100604 >			  ## main.c:331:12
  100448:    0a ce       	cmp r1, r2			  ## main.c:331:7
  10044a:    07 11       	ifs (nzcv != 0) goto 14 <f1a_decoder_open+0x222 : 10045a >			  ## main.c:331:7
  10044c:    09 80       	r1 = 1 			  ## main.c:333:17
  10044e:    40 e8 e1 00 	b[r14 + 0] = r1 			  ## main.c:333:17
  100452:    e9 4e       	r1 = [r5 + -20] 			  ## main.c:334:22
  100454:    01 89       	r1 += 32 			  ## main.c:334:22
  100456:    e9 6e       	[r5 + -20] = r1 			  ## main.c:334:22
  100458:    06 5e       	r6 = b[r0 + 3] 			  ## main.c:335:23
  10045a:    00 e8 c0 00 	r0 = b[r12 + 0] 			  ## main.c:337:16
  10045e:    a0 21       	if (r0 == 0) goto 52 <f1a_decoder_open+0x25C : 100494 >			  ## main.c:337:16
  100460:    88 c6       	r0 = r9 			  ## main.c:339:11
  100462:    09 80       	r1 = 1 			  ## main.c:339:11
  100464:    ff e1 7f ed 	call -594 <get_bits : 100216 >			  ## main.c:339:11
  100468:    11 ea 40 1f 	r1 = 8000 			  ## main.c:340:25
  10046c:    21 68       	[r4 + 0] = r1 			  ## main.c:340:25
  10046e:    1e 98       	cmp r6, 3			  ## main.c:342:8
  100470:    07 10       	ifs (nzcv == 0) goto 14 <f1a_decoder_open+0x248 : 100480 >			  ## main.c:342:8
  100472:    16 98       	cmp r6, 2
  100474:    08 10       	ifs (nzcv == 0) goto 16 <f1a_decoder_open+0x24E : 100486 >
  100476:    0e 98       	cmp r6, 1
  100478:    09 11       	ifs (nzcv != 0) goto 18 <f1a_decoder_open+0x254 : 10048c >
  10047a:    10 ea 00 7d 	r0 = 32000 			  ## main.c:345:26
  10047e:    09 08       	goto 18 <f1a_decoder_open+0x25A : 100492 >
  100480:    10 ea c0 5d 	r0 = 24000 			  ## main.c:353:26
  100484:    06 08       	goto 12 <f1a_decoder_open+0x25A : 100492 >
  100486:    10 ea e0 2e 	r0 = 12000 			  ## main.c:349:26
  10048a:    03 08       	goto 6 <f1a_decoder_open+0x25A : 100492 >
  10048c:    30 20       	if (r0 == 0) goto 6 <f1a_decoder_open+0x25C : 100494 >
  10048e:    10 ea 80 3e 	r0 = 16000 			  ## main.c:357:26
  100492:    20 68       	[r4 + 0] = r0 
  100494:    88 c6       	r0 = r9 			  ## main.c:365:31
  100496:    09 80       	r1 = 1 			  ## main.c:365:31
  100498:    ff e1 df eb 	call -646 <get_bits : 100216 >			  ## main.c:365:31
  10049c:    28 78       	b[r5 + 0] = r0 			  ## main.c:365:29
  10049e:    88 c6       	r0 = r9 			  ## main.c:366:16
  1004a0:    11 80       	r1 = 2 			  ## main.c:366:16
  1004a2:    ff e1 8f eb 	call -656 <get_bits : 100216 >			  ## main.c:366:16
  1004a6:    06 c6       	r6 = r0 			  ## main.c:366:16
  1004a8:    88 c6       	r0 = r9 			  ## main.c:367:17
  1004aa:    11 80       	r1 = 2 			  ## main.c:367:17
  1004ac:    ff e1 3f eb 	call -666 <get_bits : 100216 >			  ## main.c:367:17
  1004b0:    07 c6       	r7 = r0 			  ## main.c:367:17
  1004b2:    88 c6       	r0 = r9 			  ## main.c:368:29
  1004b4:    11 80       	r1 = 2 			  ## main.c:368:29
  1004b6:    ff e1 ef ea 	call -676 <get_bits : 100216 >			  ## main.c:368:29
  1004ba:    40 e8 80 40 	b[r8 + 1] = r0 			  ## main.c:368:27
  1004be:    18 80       	r0 = 3 			  ## main.c:371:7
  1004c0:    0f 98       	cmp r7, 1			  ## main.c:371:7
  1004c2:    10 03       	ifs (nzcv != 0) {			  ## main.c:371:7
  1004c4:    20 80       		r0 = 4 
                               	}			  ## main.c:371:7
  1004c6:    28 69       	[r5 + 16] = r0 			  ## main.c:370:32
  1004c8:    00 fc 70 0c 	r0 = r7 * 12 			  ## main.c:374:8
  1004cc:    91 2a       	r1 = [addr(296)]  <.GCPI16_0 : 1005f4 >			  ## main.c:374:8
  1004ce:    09 d4       	r1 = r1 + r0 			  ## main.c:374:8
  1004d0:    01 ed 4b 30 	r11 = r4 + 304 			  ## main.c:374:8
  1004d4:    01 ed 43 3c 	r3 = r4 + 316 			  ## main.c:374:8
  1004d8:    01 ed 4c 2a 	r12 = r4 + 298 
  1004dc:    04 80       	r4 = 0 
  1004de:    00 fc 60 06 	r0 = r6 * 6 
  1004e2:    52 29       	r2 = [addr(276)]  <.GCPI16_1 : 1005f8 >
  1004e4:    00 ee 2d 00 	r13 = r2 + r0 
  1004e8:    20 e4 0a 44 	r10 = [addr(272)]  <.GCPI16_2 : 1005fc >
  1004ec:    18 08       	goto 48 <f1a_decoder_open+0x2E6 : 10051e >
  1004ee:    27 a1       	r7 = r4 << 1 			  ## main.c:376:34
  1004f0:    00 ee d0 07 	r0 = r13 + r7 			  ## main.c:376:34
  1004f4:    00 50       	r0 = h[r0 + 0] 			  ## main.c:376:34
  1004f6:    50 e7 c0 07 	h[r12 + r7] = r0 			  ## main.c:376:32
  1004fa:    26 80       	r6 = 4 
  1004fc:    08 c6       	r0 = r1 
  1004fe:    1a c6       	r2 = r3 
  100500:    05 08       	goto 10 <f1a_decoder_open+0x2D4 : 10050c >
  100502:    08 e8 05 40 	r5 = b[r0 ++= 1] 			  ## main.c:378:42
  100506:    48 e8 25 40 	b[r2 ++= 1] = r5 			  ## main.c:378:40
  10050a:    f6 d3       	r6 = r6 + -1 			  ## main.c:377:4
  10050c:    ae 27       	if (r6 != 0) goto -12 <f1a_decoder_open+0x2CA : 100502 >
  10050e:    00 ee a0 07 	r0 = r10 + r7 			  ## main.c:379:28
  100512:    00 50       	r0 = h[r0 + 0] 			  ## main.c:379:28
  100514:    50 e7 b0 07 	h[r11 + r7] = r0 			  ## main.c:379:26
  100518:    09 d1       	r1 = r1 + 4 			  ## main.c:374:3
  10051a:    1b d1       	r3 = r3 + 4 			  ## main.c:374:3
  10051c:    64 d0       	r4 = r4 + 1 			  ## main.c:374:23
  10051e:    1c 98       	cmp r4, 3			  ## main.c:374:3
  100520:    e6 11       	ifs (nzcv != 0) goto -52 <f1a_decoder_open+0x2B6 : 1004ee >			  ## main.c:374:3
  100522:    88 c6       	r0 = r9 			  ## main.c:383:7
  100524:    11 80       	r1 = 2 			  ## main.c:383:7
  100526:    ff e1 6f e7 	call -788 <get_bits : 100216 >			  ## main.c:383:7
  10052a:    04 c6       	r4 = r0 			  ## main.c:383:7
  10052c:    40 e8 84 80 	b[r8 + 2] = r4 			  ## main.c:384:24
  100530:    88 c6       	r0 = r9 			  ## main.c:385:9
  100532:    21 c6       	r1 = r4 			  ## main.c:385:9
  100534:    ff e1 ff e6 	call -802 <get_bits : 100216 >			  ## main.c:385:9
  100538:    49 80       	r1 = 9 
  10053a:    40 e8 81 00 	b[r8 + 0] = r1 			  ## main.c:386:27
  10053e:    20 ee 00 09 	r0 = 9 - r0 			  ## main.c:387:53
  100542:    40 e8 80 c0 	b[r8 + 3] = r0 			  ## main.c:387:27
  100546:    88 c6       	r0 = r9 			  ## main.c:388:9
  100548:    21 c6       	r1 = r4 			  ## main.c:388:9
  10054a:    ff e1 4f e6 	call -824 <get_bits : 100216 >			  ## main.c:388:9
  10054e:    00 e8 81 00 	r1 = b[r8 + 0] 			  ## main.c:389:34
  100552:    08 d6       	r0 = r1 - r0 			  ## main.c:389:58
  100554:    40 e8 80 01 	b[r8 + 4] = r0 			  ## main.c:389:32
  100558:    00 80       	r0 = 0 			  ## main.c:389:32
  10055a:    4a 08       	goto 148 <f1a_decoder_open+0x3B8 : 1005f0 >			  ## main.c:389:32
  10055c:    20 e9 0e 00 	r14 = [sp] 
  100560:    20 e8 e0 01 	r0 = [r14 + 4] 			  ## main.c:454:37
  100564:    e8 6f       	[r5 + -4] = r0 
  100566:    46 40       	r6 = [sp+ 4] 
  100568:    52 ea 00 08 	r10 = 2048 			  ## main.c:414:28
  10056c:    60 e8 5a fc 	[r5 + -16] = r10 			  ## main.c:458:28
  100570:    60 e8 5a fb 	[r5 + -20] = r10 			  ## main.c:459:21
  100574:    08 80       	r0 = 1 			  ## main.c:459:21
  100576:    40 e8 e0 00 	b[r14 + 0] = r0 			  ## main.c:461:16
  10057a:    60 e8 e0 04 	[r14 + 16] = r0 			  ## main.c:462:23
  10057e:    30 58       	r0 = b[r6 + 0] 			  ## main.c:463:39
  100580:    28 78       	b[r5 + 0] = r0 			  ## main.c:463:29
  100582:    30 5a       	r0 = b[r6 + 1] 			  ## main.c:464:37
  100584:    40 e8 80 40 	b[r8 + 1] = r0 			  ## main.c:464:27
  100588:    30 5c       	r0 = b[r6 + 2] 			  ## main.c:465:34
  10058a:    40 e8 80 80 	b[r8 + 2] = r0 			  ## main.c:465:24
  10058e:    30 5e       	r0 = b[r6 + 3] 			  ## main.c:466:37
  100590:    40 e8 80 00 	b[r8 + 0] = r0 			  ## main.c:466:27
  100594:    70 58       	r0 = b[r6 + 4] 			  ## main.c:467:37
  100596:    40 e8 80 c0 	b[r8 + 3] = r0 			  ## main.c:467:27
  10059a:    70 5a       	r0 = b[r6 + 5] 			  ## main.c:468:42
  10059c:    40 e8 80 01 	b[r8 + 4] = r0 			  ## main.c:468:32
  1005a0:    01 ed 40 3c 	r0 = r4 + 316 			  ## main.c:469:19
  1005a4:    b1 d1       	r1 = r6 + 6 			  ## main.c:469:48
  1005a6:    62 80       	r2 = 12 			  ## main.c:469:3
  1005a8:    e1 e1 2f 4d 	call -251484 <memcpy : c2f50 >			  ## main.c:469:3
  1005ac:    01 ed 40 2a 	r0 = r4 + 298 			  ## main.c:470:19
  1005b0:    00 ed 61 12 	r1 = r6 + 18 			  ## main.c:470:44
  1005b4:    32 80       	r2 = 6 			  ## main.c:470:3
  1005b6:    e1 e1 bf 4c 	call -251498 <memcpy : c2f50 >			  ## main.c:470:3
  1005ba:    01 ed 40 30 	r0 = r4 + 304 			  ## main.c:471:19
  1005be:    00 ed 61 18 	r1 = r6 + 24 			  ## main.c:471:38
  1005c2:    32 80       	r2 = 6 			  ## main.c:471:3
  1005c4:    e1 e1 4f 4c 	call -251512 <memcpy : c2f50 >			  ## main.c:471:3
  1005c8:    30 4a       	r0 = [r6 + 32] 			  ## main.c:472:42
  1005ca:    28 69       	[r5 + 16] = r0 			  ## main.c:472:32
  1005cc:    01 e5 62 0c 	r2, r1 = d[r6 + 48] 			  ## main.c:475:27
  1005d0:    c8 a3       	r0 = r1 >>> 3 			  ## main.c:475:34
  1005d2:    d2 d1       	r2 = r2 + 7 			  ## main.c:474:41
  1005d4:    d2 a3       	r2 = r2 >>> 3 			  ## main.c:474:46
  1005d6:    80 d6       	r0 = r0 - r2 			  ## main.c:477:42
  1005d8:    f2 4a       	r2 = [r6 + 44] 			  ## main.c:477:34
  1005da:    80 d4       	r0 = r0 + r2 			  ## main.c:477:42
  1005dc:    a8 6f       	[r5 + -8] = r0 			  ## main.c:477:24
  1005de:    80 f3 11 07 	r1 = r1 & 7 			  ## main.c:478:34
  1005e2:    60 e8 e1 03 	[r14 + 12] = r1 			  ## main.c:478:18
  1005e6:    71 4a       	r1 = [r6 + 36] 			  ## main.c:479:34
  1005e8:    21 68       	[r4 + 0] = r1 			  ## main.c:479:24
  1005ea:    b1 4a       	r1 = [r6 + 40] 			  ## main.c:480:32
  1005ec:    60 e8 e1 02 	[r14 + 8] = r1 			  ## main.c:480:22
  1005f0:    08 cd       	sp += 8 
  1005f2:    1e c0       	{pc, r14-r4} = [sp++] 


.GCPI16_0:
  1005f4:    d6 1c 10 00     < 1055958 : 0x101CD6 >

.GCPI16_1:
  1005f8:    c4 1c 10 00     < 1055940 : 0x101CC4 >

.GCPI16_2:
  1005fc:    fa 1c 10 00     < 1055994 : 0x101CFA >

.GCPI16_3:
  100600:    78 31 66 00     < 6697336 : 0x663178 >

.GCPI16_4:
  100604:    41 31 46 00     < 4600129 : 0x463141 >

f1a_format_check:
  100608:    11 ea b0 09 	r1 = 2480 			  ## main.c:596:0
  10060c:    00 e7 01 01 	r1 = b[r0 + r1] 			  ## main.c:598:15
  100610:    08 80       	r0 = 1 			  ## main.c:598:15
  100612:    11 20       	if (r1 == 0) goto 2 <f1a_format_check+0xE : 100616 >
  100614:    00 80       	r0 = 0 
  100616:    00 a1       	r0 = r0 << 1 			  ## main.c:601:3
  100618:    20 00       	rts			  ## main.c:603:1


f1a_dec_confing:
  10061a:    1e c2       	[--sp] = {rets, r14-r4} 			  ## main.c:84:0
  10061c:    f4 cd       	sp += -12 			  ## main.c:84:0
  10061e:    14 c6       	r4 = r2 			  ## main.c:84:0
  100620:    05 c6       	r5 = r0 			  ## main.c:84:0
  100622:    06 80       	r6 = 0 			  ## main.c:84:0
  100624:    80 ef 10 92 	cmp r1, 146			  ## main.c:86:6
  100628:    12 10       	ifs (nzcv == 0) goto 36 <f1a_dec_confing+0x34 : 10064e >			  ## main.c:86:6
  10062a:    09 ed 59 b8 	r9 = r5 + 2488 
  10062e:    80 ef 10 90 	cmp r1, 144
  100632:    10 10       	ifs (nzcv == 0) goto 32 <f1a_dec_confing+0x3A : 100654 >
  100634:    80 ef 10 91 	cmp r1, 145
  100638:    5f 10       	ifs (nzcv == 0) goto 190 <f1a_dec_confing+0xDE : 1006f8 >
  10063a:    01 98       	cmp r1, 0
  10063c:    00 fb 81 0f 	ifs (nzcv != 0) goto 496 <f1a_dec_confing+0x216 : 100830 >
  100640:    20 58       	r0 = b[r4 + 0] 			  ## main.c:89:41
  100642:    40 e8 90 03 	b[r9 + 12] = r0 			  ## main.c:89:30
  100646:    20 5a       	r0 = b[r4 + 1] 			  ## main.c:90:39
  100648:    40 e8 90 43 	b[r9 + 13] = r0 			  ## main.c:90:28
  10064c:    f1 08       	goto 482 <f1a_dec_confing+0x216 : 100830 >			  ## main.c:90:28
  10064e:    20 48       	r0 = [r4 + 0] 			  ## main.c:212:26
  100650:    28 68       	[r5 + 0] = r0 			  ## main.c:212:24
  100652:    ee 08       	goto 476 <f1a_dec_confing+0x216 : 100830 >			  ## main.c:212:24
  100654:    27 c6       	r7 = r4 			  ## main.c:99:16
  100656:    14 e8 76 0e 	r6 = h[++ r7 = 56] 			  ## main.c:99:16
  10065a:    20 c6       	r0 = r4 			  ## main.c:101:9
  10065c:    ff e1 3f d9 	call -1242 <get_crcv : 100186 >			  ## main.c:101:9
  100660:    40 c6       	r8 = r0 			  ## main.c:101:9
  100662:    3f 54       	r7 = h[r7 + 2] 			  ## main.c:102:16
  100664:    00 ed 50 0c 	r0 = r5 + 12 			  ## main.c:107:39
  100668:    01 ed 51 28 	r1 = r5 + 296 
  10066c:    48 6e       	[r1 + -28] = r0 			  ## main.c:107:22
  10066e:    01 ed 50 0c 	r0 = r5 + 268 			  ## main.c:107:12
  100672:    81 60       	[sp+ 8] = r1 
  100674:    88 6e       	[r1 + -24] = r0 			  ## main.c:108:26
  100676:    09 ed 50 70 	r0 = r5 + 2416 			  ## main.c:110:19
  10067a:    01 80       	r1 = 0 			  ## main.c:110:3
  10067c:    42 81       	r2 = 40 			  ## main.c:110:3
  10067e:    e1 e1 df 46 	call -251686 <memset : c2f5c >			  ## main.c:110:3
  100682:    10 ea 1c 0f 	r0 = 3868 			  ## main.c:99:7
  100686:    30 ce       	cmp r6, r0			  ## main.c:113:7
  100688:    41 11       	ifs (nzcv != 0) goto 130 <f1a_dec_confing+0xF2 : 10070c >			  ## main.c:113:7
  10068a:    78 ce       	cmp r7, r8
  10068c:    3f 11       	ifs (nzcv != 0) goto 126 <f1a_dec_confing+0xF2 : 10070c >
  10068e:    28 c6       	r0 = r5 			  ## main.c:115:4
  100690:    ff e1 4f d8 	call -1272 <fill_buf : 10019c >			  ## main.c:115:4
  100694:    e8 58       	r0 = b[r5 + 12] 			  ## main.c:116:13
  100696:    e9 5a       	r1 = b[r5 + 13] 			  ## main.c:116:32
  100698:    41 f6 01 08 	r1 <= insert(r0, p:8, l:8) 			  ## main.c:116:30
  10069c:    08 a8       	r0 = r1 << 8 			  ## main.c:116:45
  10069e:    e9 5c       	r1 = b[r5 + 14] 			  ## main.c:116:53
  1006a0:    08 da       	r0 |= r1 			  ## main.c:116:51
  1006a2:    59 29       	r1 = [addr(404)]  <.GCPI20_0 : 100838 >			  ## main.c:117:13
  1006a4:    01 ce       	cmp r0, r1			  ## main.c:117:8
  1006a6:    60 e9 09 01 	[sp+ 4] = r9 			  ## main.c:117:8
  1006aa:    33 11       	ifs (nzcv != 0) goto 102 <f1a_dec_confing+0xF8 : 100712 >			  ## main.c:117:8
  1006ac:    28 c6       	r0 = r5 			  ## main.c:120:19
  1006ae:    04 e8 06 84 	r6 = b[++ r0 = 18] 			  ## main.c:120:19
  1006b2:    c1 5d       	r1 = b[r0 + -2] 			  ## main.c:119:33
  1006b4:    c0 5f       	r0 = b[r0 + -1] 			  ## main.c:119:13
  1006b6:    12 ea 00 08 	r2 = 2048 			  ## main.c:122:23
  1006ba:    83 40       	r3 = [sp+ 8] 			  ## main.c:122:23
  1006bc:    da 6e       	[r3 + -20] = r2 			  ## main.c:122:23
  1006be:    41 f6 01 08 	r1 <= insert(r0, p:8, l:8) 			  ## main.c:119:31
  1006c2:    88 d1       	r0 = r1 + 6 			  ## main.c:123:34
  1006c4:    80 d7       	r0 = r0 - r6 			  ## main.c:123:41
  1006c6:    98 6f       	[r3 + -8] = r0 			  ## main.c:123:26
  1006c8:    28 c6       	r0 = r5 			  ## main.c:124:5
  1006ca:    ff e1 7f d6 	call -1330 <fill_buf : 10019c >			  ## main.c:124:5
  1006ce:    01 ed 50 20 	r0 = r5 + 288 			  ## main.c:123:17
  1006d2:    00 60       	[sp] = r0 			  ## main.c:122:17
  1006d4:    01 ed 5a 14 	r10 = r5 + 276 			  ## main.c:122:17
  1006d8:    00 ed 60 0b 	r0 = r6 + 11 			  ## main.c:127:10
  1006dc:    01 80       	r1 = 0 			  ## main.c:127:10
  1006de:    05 08       	goto 10 <f1a_dec_confing+0xD0 : 1006ea >			  ## main.c:127:10
  1006e0:    00 e7 52 00 	r2 = b[r5 + r0] 			  ## main.c:129:27
  1006e4:    09 a8       	r1 = r1 << 8 			  ## main.c:129:19
  1006e6:    11 da       	r1 |= r2 			  ## main.c:129:25
  1006e8:    c0 d3       	r0 = r0 + -1 			  ## main.c:127:5
  1006ea:    1f ed 02 f4 	r2 = r0 + -12 			  ## main.c:127:37
  1006ee:    fa 9f       	cmp r2, -1			  ## main.c:127:5
  1006f0:    f7 1c       	ifs (nzcv > 0) goto -18 <f1a_dec_confing+0xC6 : 1006e0 >			  ## main.c:127:5
  1006f2:    60 e8 91 ff 	[r9 + -4] = r1 			  ## main.c:131:22
  1006f6:    12 08       	goto 36 <f1a_dec_confing+0x102 : 10071c >			  ## main.c:131:22
  1006f8:    09 ed 50 e0 	r0 = r5 + 2528 			  ## main.c:206:20
  1006fc:    21 c6       	r1 = r4 			  ## main.c:206:3
  1006fe:    42 80       	r2 = 8 			  ## main.c:206:3
  100700:    e1 e1 6f 42 	call -251828 <memcpy : c2f50 >			  ## main.c:206:3
  100704:    08 80       	r0 = 1 			  ## main.c:207:27
  100706:    40 e8 90 7e 	b[r9 + -7] = r0 			  ## main.c:207:27
  10070a:    92 08       	goto 292 <f1a_dec_confing+0x216 : 100830 >			  ## main.c:207:27
  10070c:    01 ed 50 20 	r0 = r5 + 288 			  ## main.c:201:22
  100710:    8e 08       	goto 284 <f1a_dec_confing+0x214 : 10082e >			  ## main.c:201:22
  100712:    01 ed 50 20 	r0 = r5 + 288 			  ## main.c:136:16
  100716:    00 60       	[sp] = r0 			  ## main.c:135:16
  100718:    01 ed 5a 14 	r10 = r5 + 276 			  ## main.c:135:16
  10071c:    10 ea 00 08 	r0 = 2048 			  ## main.c:134:29
  100720:    81 40       	r1 = [sp+ 8] 			  ## main.c:134:29
  100722:    08 6f       	[r1 + -16] = r0 			  ## main.c:134:29
  100724:    c8 6e       	[r1 + -20] = r0 			  ## main.c:135:22
  100726:    07 80       	r7 = 0 			  ## main.c:135:22
  100728:    8f 6f       	[r1 + -8] = r7 			  ## main.c:136:25
  10072a:    20 e8 4b 0b 	r11 = [r4 + 44] 			  ## main.c:138:28
  10072e:    4e 4e       	r6 = [r1 + -28] 			  ## main.c:137:27
  100730:    28 c6       	r0 = r5 			  ## main.c:139:4
  100732:    ff e1 3f d3 	call -1434 <fill_buf : 10019c >			  ## main.c:139:4
  100736:    30 58       	r0 = b[r6 + 0] 			  ## main.c:140:13
  100738:    31 5a       	r1 = b[r6 + 1] 			  ## main.c:140:32
  10073a:    41 f6 01 08 	r1 <= insert(r0, p:8, l:8) 			  ## main.c:140:30
  10073e:    08 a8       	r0 = r1 << 8 			  ## main.c:140:45
  100740:    31 5c       	r1 = b[r6 + 2] 			  ## main.c:140:53
  100742:    08 da       	r0 |= r1 			  ## main.c:140:51
  100744:    49 2f       	r1 = [addr(244)]  <.GCPI20_0 : 100838 >			  ## main.c:142:13
  100746:    01 ce       	cmp r0, r1			  ## main.c:142:8
  100748:    32 11       	ifs (nzcv != 0) goto 100 <f1a_dec_confing+0x194 : 1007ae >			  ## main.c:142:8
  10074a:    00 e8 6c 81 	r12 = b[r6 + 6] 			  ## main.c:145:19
  10074e:    70 58       	r0 = b[r6 + 4] 			  ## main.c:144:33
  100750:    72 5a       	r2 = b[r6 + 5] 			  ## main.c:144:13
  100752:    c1 81       	r1 = 56 			  ## main.c:144:13
  100754:    60 e8 a1 00 	[r10 + 0] = r1 			  ## main.c:148:23
  100758:    41 f6 20 08 	r0 <= insert(r2, p:8, l:8) 			  ## main.c:144:31
  10075c:    c0 d3       	r0 = r0 + -1 			  ## main.c:147:21
  10075e:    c0 fc 0d 0c 	r13 = r0 / r12 (s) 			  ## main.c:147:26
  100762:    f0 d1       	r0 = r6 + 7 			  ## main.c:146:25
  100764:    1f ed ce ff 	r14 = r12 + -1 			  ## main.c:150:10
  100768:    20 f7 c9 03 	r9 = r12 << 3 			  ## main.c:150:10
  10076c:    20 f7 c8 04 	r8 = r12 << 4 
  100770:    1c 08       	goto 56 <f1a_dec_confing+0x190 : 1007aa >
  100772:    2e ee 11 00 	r1 = 2048 - r1 			  ## main.c:152:16
  100776:    48 ce       	cmp r1, r8			  ## main.c:152:10
  100778:    05 1a       	ifs (nzcv >= 0) goto 10 <f1a_dec_confing+0x16A : 100784 >			  ## main.c:152:10
  10077a:    28 c6       	r0 = r5 			  ## main.c:154:7
  10077c:    ff e1 ef d0 	call -1508 <fill_buf : 10019c >			  ## main.c:154:7
  100780:    80 40       	r0 = [sp+ 8] 			  ## main.c:155:30
  100782:    40 4e       	r0 = [r0 + -28] 			  ## main.c:155:30
  100784:    02 80       	r2 = 0 
  100786:    b1 c6       	r1 = r14 
  100788:    05 08       	goto 10 <f1a_dec_confing+0x17A : 100794 >
  10078a:    00 e7 03 01 	r3 = b[r0 + r1] 			  ## main.c:160:28
  10078e:    12 a8       	r2 = r2 << 8 			  ## main.c:160:20
  100790:    1a da       	r2 |= r3 			  ## main.c:160:26
  100792:    c9 d3       	r1 = r1 + -1 			  ## main.c:158:6
  100794:    f9 9f       	cmp r1, -1			  ## main.c:158:6
  100796:    f9 1c       	ifs (nzcv > 0) goto -14 <f1a_dec_confing+0x170 : 10078a >			  ## main.c:158:6
  100798:    20 e8 a1 00 	r1 = [r10 + 0] 			  ## main.c:162:24
  10079c:    89 cb       	r1 += r9 			  ## main.c:162:24
  10079e:    60 e8 a1 00 	[r10 + 0] = r1 			  ## main.c:162:24
  1007a2:    53 ce       	cmp r2, r11			  ## main.c:164:10
  1007a4:    07 12       	if (nzcv >= 0) goto 14 <f1a_dec_confing+0x19A : 1007b4 >			  ## main.c:164:10
  1007a6:    a0 cb       	r0 += r12 			  ## main.c:163:26
  1007a8:    7f d0       	r7 = r7 + 1 			  ## main.c:150:35
  1007aa:    7d ce       	cmp r7, r13			  ## main.c:150:5
  1007ac:    e2 1b       	ifs (nzcv < 0) goto -60 <f1a_dec_confing+0x158 : 100772 >			  ## main.c:150:5
  1007ae:    46 40       	r6 = [sp+ 4] 
  1007b0:    f0 4f       	r0 = [r6 + -4] 			  ## main.c:174:37
  1007b2:    02 08       	goto 4 <f1a_dec_confing+0x19E : 1007b8 >			  ## main.c:174:37
  1007b4:    d0 d3       	r0 = r2 + -1 			  ## main.c:166:35
  1007b6:    46 40       	r6 = [sp+ 4] 
  1007b8:    87 40       	r7 = [sp+ 8] 
  1007ba:    f8 6f       	[r7 + -4] = r0 
  1007bc:    00 e5 42 0c 	r2, r0 = d[r4 + 48] 			  ## main.c:179:29
  1007c0:    c1 a3       	r1 = r0 >>> 3 			  ## main.c:179:36
  1007c2:    d2 d1       	r2 = r2 + 7 			  ## main.c:178:43
  1007c4:    d2 a3       	r2 = r2 >>> 3 			  ## main.c:178:48
  1007c6:    89 d6       	r1 = r1 - r2 			  ## main.c:181:44
  1007c8:    e2 4a       	r2 = [r4 + 44] 			  ## main.c:181:36
  1007ca:    89 d4       	r1 = r1 + r2 			  ## main.c:181:44
  1007cc:    b9 6f       	[r7 + -8] = r1 			  ## main.c:181:25
  1007ce:    80 f3 00 07 	r0 = r0 & 7 			  ## main.c:182:36
  1007d2:    70 68       	[r6 + 4] = r0 			  ## main.c:182:19
  1007d4:    08 80       	r0 = 1 			  ## main.c:182:19
  1007d6:    b0 68       	[r6 + 8] = r0 			  ## main.c:183:24
  1007d8:    10 ea 00 08 	r0 = 2048 			  ## main.c:184:29
  1007dc:    38 6f       	[r7 + -16] = r0 			  ## main.c:184:29
  1007de:    f8 6e       	[r7 + -20] = r0 			  ## main.c:185:22
  1007e0:    20 58       	r0 = b[r4 + 0] 			  ## main.c:187:41
  1007e2:    38 78       	b[r7 + 0] = r0 			  ## main.c:187:30
  1007e4:    20 5a       	r0 = b[r4 + 1] 			  ## main.c:188:39
  1007e6:    01 ed 51 54 	r1 = r5 + 340 			  ## main.c:188:39
  1007ea:    08 7a       	b[r1 + 1] = r0 			  ## main.c:188:28
  1007ec:    20 5c       	r0 = b[r4 + 2] 			  ## main.c:189:36
  1007ee:    08 7c       	b[r1 + 2] = r0 			  ## main.c:189:25
  1007f0:    20 5e       	r0 = b[r4 + 3] 			  ## main.c:190:39
  1007f2:    08 78       	b[r1 + 0] = r0 			  ## main.c:190:28
  1007f4:    60 58       	r0 = b[r4 + 4] 			  ## main.c:191:39
  1007f6:    08 7e       	b[r1 + 3] = r0 			  ## main.c:191:28
  1007f8:    60 5a       	r0 = b[r4 + 5] 			  ## main.c:192:44
  1007fa:    48 78       	b[r1 + 4] = r0 			  ## main.c:192:33
  1007fc:    01 ed 50 3c 	r0 = r5 + 316 			  ## main.c:193:20
  100800:    a1 d1       	r1 = r4 + 6 			  ## main.c:193:50
  100802:    62 80       	r2 = 12 			  ## main.c:193:4
  100804:    e1 e1 4f 3a 	call -252088 <memcpy : c2f50 >			  ## main.c:193:4
  100808:    01 ed 50 2a 	r0 = r5 + 298 			  ## main.c:194:20
  10080c:    00 ed 41 12 	r1 = r4 + 18 			  ## main.c:194:46
  100810:    32 80       	r2 = 6 			  ## main.c:194:4
  100812:    e1 e1 df 39 	call -252102 <memcpy : c2f50 >			  ## main.c:194:4
  100816:    01 ed 50 30 	r0 = r5 + 304 			  ## main.c:195:20
  10081a:    00 ed 41 18 	r1 = r4 + 24 			  ## main.c:195:40
  10081e:    32 80       	r2 = 6 			  ## main.c:195:4
  100820:    e1 e1 6f 39 	call -252116 <memcpy : c2f50 >			  ## main.c:195:4
  100824:    20 4a       	r0 = [r4 + 32] 			  ## main.c:196:44
  100826:    38 69       	[r7 + 16] = r0 			  ## main.c:196:33
  100828:    a0 4a       	r0 = [r4 + 40] 			  ## main.c:198:34
  10082a:    30 68       	[r6 + 0] = r0 			  ## main.c:198:23
  10082c:    00 40       	r0 = [sp] 			  ## main.c:198:23
  10082e:    06 48       	r6 = [r0 + 0] 			  ## main.c:201:22
  100830:    30 c6       	r0 = r6 			  ## main.c:215:1
  100832:    0c cd       	sp += 12 			  ## main.c:215:1
  100834:    1e c0       	{pc, r14-r4} = [sp++] 			  ## main.c:215:1
  100836:    00 00       	nop			  ## main.c:215:1


.GCPI20_0:
  100838:    78 31 66 00     < 6697336 : 0x663178 >

get_dec_info:
  10083c:    02 48       	r2 = [r0 + 0] 			  ## main.c:60:0
  10083e:    09 ed 01 c8 	r1 = r0 + 2504 			  ## main.c:62:34
  100842:    0a 70       	h[r1 + 0] = r2 			  ## main.c:62:23
  100844:    42 58       	r2 = b[r0 + 4] 			  ## main.c:63:26
  100846:    4a 68       	[r1 + 4] = r2 			  ## main.c:63:24
  100848:    80 48       	r0 = [r0 + 8] 			  ## main.c:64:34
  10084a:    12 ea e8 03 	r2 = 1000 			  ## main.c:64:43
  10084e:    40 fc 00 02 	r0 = r0 / r2 			  ## main.c:64:43
  100852:    08 74       	h[r1 + 2] = r0 			  ## main.c:64:23
  100854:    08 4f       	r0 = [r1 + -16] 			  ## main.c:65:42
  100856:    88 68       	[r1 + 8] = r0 			  ## main.c:65:31
  100858:    08 c6       	r0 = r1 			  ## main.c:67:2
  10085a:    20 00       	rts			  ## main.c:67:2


get_play_time:
  10085c:    11 ea b8 09 	r1 = 2488 			  ## main.c:259:0
  100860:    20 e7 00 01 	r0 = [r0 + r1] 			  ## main.c:261:18
  100864:    20 00       	rts			  ## main.c:261:2


get_bp_info:
  100866:    15 c2       	[--sp] = {rets, r5, r4} 			  ## main.c:220:0
  100868:    05 c6       	r5 = r0 			  ## main.c:220:0
  10086a:    01 ed 50 28 	r0 = r5 + 296 			  ## main.c:224:46
  10086e:    00 58       	r0 = b[r0 + 0] 			  ## main.c:224:46
  100870:    09 ed 54 e8 	r4 = r5 + 2536 			  ## main.c:224:46
  100874:    20 78       	b[r4 + 0] = r0 			  ## main.c:224:35
  100876:    01 ed 50 55 	r0 = r5 + 341 			  ## main.c:225:44
  10087a:    00 58       	r0 = b[r0 + 0] 			  ## main.c:225:44
  10087c:    20 7a       	b[r4 + 1] = r0 			  ## main.c:225:33
  10087e:    01 ed 50 56 	r0 = r5 + 342 			  ## main.c:226:41
  100882:    00 58       	r0 = b[r0 + 0] 			  ## main.c:226:41
  100884:    20 7c       	b[r4 + 2] = r0 			  ## main.c:226:30
  100886:    01 ed 50 54 	r0 = r5 + 340 			  ## main.c:227:44
  10088a:    00 58       	r0 = b[r0 + 0] 			  ## main.c:227:44
  10088c:    20 7e       	b[r4 + 3] = r0 			  ## main.c:227:33
  10088e:    01 ed 50 57 	r0 = r5 + 343 			  ## main.c:228:44
  100892:    00 58       	r0 = b[r0 + 0] 			  ## main.c:228:44
  100894:    60 78       	b[r4 + 4] = r0 			  ## main.c:228:33
  100896:    01 ed 50 58 	r0 = r5 + 344 			  ## main.c:229:49
  10089a:    00 58       	r0 = b[r0 + 0] 			  ## main.c:229:49
  10089c:    60 7a       	b[r4 + 5] = r0 			  ## main.c:229:38
  10089e:    09 ed 50 ee 	r0 = r5 + 2542 			  ## main.c:230:25
  1008a2:    01 ed 51 3c 	r1 = r5 + 316 			  ## main.c:230:55
  1008a6:    62 80       	r2 = 12 			  ## main.c:230:2
  1008a8:    e1 e1 2f 35 	call -252252 <memcpy : c2f50 >			  ## main.c:230:2
  1008ac:    09 ed 50 fa 	r0 = r5 + 2554 			  ## main.c:231:25
  1008b0:    01 ed 51 2a 	r1 = r5 + 298 			  ## main.c:231:51
  1008b4:    32 80       	r2 = 6 			  ## main.c:231:2
  1008b6:    e1 e1 bf 34 	call -252266 <memcpy : c2f50 >			  ## main.c:231:2
  1008ba:    0a ed 50 00 	r0 = r5 + 2560 			  ## main.c:232:25
  1008be:    01 ed 51 30 	r1 = r5 + 304 			  ## main.c:232:45
  1008c2:    32 80       	r2 = 6 			  ## main.c:232:2
  1008c4:    e1 e1 4f 34 	call -252280 <memcpy : c2f50 >			  ## main.c:232:2
  1008c8:    28 c6       	r0 = r5 			  ## main.c:233:49
  1008ca:    24 e8 01 4e 	r1 = [++ r0 = 312] 			  ## main.c:233:49
  1008ce:    21 6a       	[r4 + 32] = r1 			  ## main.c:233:38
  1008d0:    29 48       	r1 = [r5 + 0] 			  ## main.c:235:40
  1008d2:    61 6a       	[r4 + 36] = r1 			  ## main.c:235:29
  1008d4:    a1 4d       	r1 = [r4 + -40] 			  ## main.c:236:15
  1008d6:    82 4e       	r2 = [r0 + -24] 			  ## main.c:236:15
  1008d8:    e2 6a       	[r4 + 44] = r2 			  ## main.c:236:15
  1008da:    01 98       	cmp r1, 0			  ## main.c:236:6
  1008dc:    09 03       	ifs (nzcv == 0) {			  ## main.c:245:46
  1008de:    01 4e       		r1 = [r0 + -32] 			  ## main.c:245:46
  1008e0:    10 ea 14 01 		r0 = 276 
                               	} else {			  ## main.c:245:46
  1008e4:    10 ea bc 09 		r0 = 2492 			  ## main.c:245:46
  1008e8:    01 80       		r1 = 0 
                               	}			  ## main.c:245:46
  1008ea:    61 6b       	[r4 + 52] = r1 			  ## main.c:245:46
  1008ec:    20 e7 50 00 	r0 = [r5 + r0] 			  ## main.c:245:46
  1008f0:    20 6b       	[r4 + 48] = r0 			  ## main.c:245:46
  1008f2:    20 4d       	r0 = [r4 + -48] 			  ## main.c:249:38
  1008f4:    a0 6a       	[r4 + 40] = r0 			  ## main.c:249:27
  1008f6:    10 ea 1c 0f 	r0 = 3868 			  ## main.c:251:25
  1008fa:    0a ed 55 20 	r5 = r5 + 2592 			  ## main.c:251:25
  1008fe:    28 70       	h[r5 + 0] = r0 			  ## main.c:251:25
  100900:    20 c6       	r0 = r4 			  ## main.c:252:24
  100902:    ff e1 0f c4 	call -1920 <get_crcv : 100186 >			  ## main.c:252:24
  100906:    28 74       	h[r5 + 2] = r0 			  ## main.c:252:22
  100908:    20 c6       	r0 = r4 			  ## main.c:254:2
  10090a:    15 c0       	{pc, r5, r4} = [sp++] 			  ## main.c:254:2


need_bpbuf_size.1343:
  10090c:    e0 81       	r0 = 60 			  ## main.c:54:0
  10090e:    20 00       	rts			  ## main.c:55:2


av_clip_int16:
  100910:    11 ea ff 7f 	r1 = 32767 			  ## wmadec.c:544:0
  100914:    01 ce       	cmp r0, r1			  ## wmadec.c:546:6
  100916:    a0 03       	ifs (nzcv >= 0) {			  ## wmadec.c:546:6
  100918:    10 ea ff 7f 		r0 = 32767 
                               	}			  ## wmadec.c:546:6
  10091c:    91 ea 00 80 	r1 = -32768 			  ## wmadec.c:548:6
  100920:    01 ce       	cmp r0, r1			  ## wmadec.c:548:6
  100922:    d0 03       	ifs (nzcv <= 0) {			  ## wmadec.c:548:6
  100924:    90 ea 00 80 		r0 = -32768 
                               	}			  ## wmadec.c:548:6
  100928:    c0 c9       	r0 = r0.l (s) 			  ## wmadec.c:550:2
  10092a:    20 00       	rts			  ## wmadec.c:550:2


wma_window:
  10092c:    1e c2       	[--sp] = {rets, r14-r4} 			  ## wmadec.c:559:0
  10092e:    30 c5       	[--sp] = {macch, maccl} 			  ## wmadec.c:559:0
  100930:    d4 cd       	sp += -44 			  ## wmadec.c:559:0
  100932:    80 62       	[sp+ 40] = r0 			  ## wmadec.c:559:0
  100934:    01 ed 00 58 	r0 = r0 + 344 			  ## wmadec.c:559:0
  100938:    c2 5f       	r2 = b[r0 + -1] 			  ## wmadec.c:567:20
  10093a:    09 80       	r1 = 1 			  ## wmadec.c:566:22
  10093c:    00 f7 1a 02 	r10 = r1 << r2 			  ## wmadec.c:567:17
  100940:    02 58       	r2 = b[r0 + 0] 			  ## wmadec.c:568:25
  100942:    00 f7 13 02 	r3 = r1 << r2 			  ## wmadec.c:568:22
  100946:    da a1       	r2 = r3 >>> 1 			  ## wmadec.c:577:36
  100948:    40 ee a2 02 	r2 = r10 - r2 			  ## wmadec.c:577:18
  10094c:    e0 f7 ab 01 	r11 = r10 >>> 1 			  ## wmadec.c:575:18
  100950:    5a ce       	cmp r3, r10			  ## wmadec.c:574:6
  100952:    d0 03       	ifs (nzcv <= 0) {			  ## wmadec.c:574:6
  100954:    53 c6       		r11 = r2 
                               	}			  ## wmadec.c:574:6
  100956:    00 5a       	r0 = b[r0 + 1] 			  ## wmadec.c:566:25
  100958:    00 f7 10 00 	r0 = r1 << r0 			  ## wmadec.c:566:22
  10095c:    42 ce       	cmp r0, r10
  10095e:    a0 03       	ifs (nzcv >= 0) {
  100960:    90 c6       		r0 = r10 
                               	}
  100962:    83 42       	r3 = [sp+ 40] 
  100964:    09 ed 36 a0 	r6 = r3 + 2464 
  100968:    b1 58       	r1 = b[r6 + 8] 			  ## wmadec.c:579:13
  10096a:    19 98       	cmp r1, 3			  ## wmadec.c:579:2
  10096c:    1b 18       	if (nzcv > 0) goto 54 <.GJTIE405_0_0_+0x20 : 1009a4 >			  ## wmadec.c:579:2
  10096e:    c2 a1       	r2 = r0 >>> 1 
  100970:    0c ed 30 24 	r0 = r3 + 3108 			  ## wmadec.c:562:19
  100974:    40 62       	[sp+ 36] = r0 
  100976:    08 a1       	r0 = r1 << 1 
  100978:    42 61       	[sp+ 20] = r2 
  10097a:    b8 01       	tbh [r0]


.GJTIL405_0_0_:
  10097c:    04 00     < 4 : 0x4 >
  10097e:    16 00     < 22 : 0x16 >
  100980:    a8 00     < 168 : 0xA8 >
  100982:    36 01     < 310 : 0x136 >
  100984:    60 e9 0b 01 	[sp+ 4] = r11 
  100988:    60 e9 0a 02 	[sp+ 8] = r10 
  10098c:    08 80       	r0 = 1 			  ## wmadec.c:581:21
  10098e:    b0 78       	b[r6 + 8] = r0 			  ## wmadec.c:581:21
  100990:    10 ea ff ff 	r0 = 65535 			  ## wmadec.c:582:21
  100994:    00 ee 29 00 	r9 = r2 + r0 			  ## wmadec.c:582:21
  100998:    50 e8 69 82 	h[r6 + 10] = r9 			  ## wmadec.c:582:16
  10099c:    01 80       	r1 = 0 			  ## wmadec.c:583:12
  10099e:    f1 70       	h[r6 + 12] = r1 			  ## wmadec.c:583:12
  1009a0:    f1 74       	h[r6 + 14] = r1 			  ## wmadec.c:584:14
  1009a2:    08 08       	goto 16 <.GJTIE405_0_0_+0x30 : 1009b4 >			  ## wmadec.c:584:14
  1009a4:    00 80       	r0 = 0 
  1009a6:    7c 09       	goto 760 <.GJTIE405_0_0_+0x31C : 100ca0 >
  1009a8:    60 e9 0b 01 	[sp+ 4] = r11 
  1009ac:    60 e9 0a 02 	[sp+ 8] = r10 
  1009b0:    10 e8 69 82 	r9 = h[r6 + 10] 
  1009b4:    11 a1       	r1 = r2 << 1 			  ## wmadec.c:588:36
  1009b6:    13 c6       	r3 = r2 			  ## wmadec.c:588:36
  1009b8:    12 ea 00 04 	r2 = 1024 			  ## wmadec.c:588:30
  1009bc:    c0 fc 20 01 	r0 = r2 / r1 (s) 			  ## wmadec.c:588:30
  1009c0:    c0 ec 97 00 	r7 = r9.l (s) 			  ## wmadec.c:587:16
  1009c4:    da d3       	r2 = r3 + -1 			  ## wmadec.c:587:10
  1009c6:    02 60       	[sp] = r2 			  ## wmadec.c:587:10
  1009c8:    d2 d7       	r2 = r2 - r7 			  ## wmadec.c:587:14
  1009ca:    02 06       	r2 *= r0 			  ## wmadec.c:591:16
  1009cc:    13 ea ff 03 	r3 = 1023 			  ## wmadec.c:592:45
  1009d0:    40 ee 3e 02 	r14 = r3 - r2 			  ## wmadec.c:592:45
  1009d4:    13 a2       	r3 = r2 << 2 			  ## wmadec.c:593:8
  1009d6:    14 ea fc 0f 	r4 = 4092 			  ## wmadec.c:593:8
  1009da:    e5 d6       	r5 = r4 - r3 			  ## wmadec.c:593:8
  1009dc:    54 d0       	r4 = r2 + 1 			  ## wmadec.c:591:27
  1009de:    00 ed 3a 04 	r10 = r3 + 4 			  ## wmadec.c:593:8
  1009e2:    3a a1       	r2 = r7 << 1 			  ## wmadec.c:593:8
  1009e4:    0a ed 11 22 	r1 = r1 + 2594 			  ## wmadec.c:593:8
  1009e8:    89 d6       	r1 = r1 - r2 			  ## wmadec.c:593:8
  1009ea:    83 42       	r3 = [sp+ 40] 			  ## wmadec.c:593:8
  1009ec:    00 ee 3c 01 	r12 = r3 + r1 			  ## wmadec.c:593:8
  1009f0:    00 61       	[sp+ 16] = r0 			  ## wmadec.c:593:8
  1009f2:    00 a2       	r0 = r0 << 2 			  ## wmadec.c:593:8
  1009f4:    c0 60       	[sp+ 12] = r0 			  ## wmadec.c:593:8
  1009f6:    39 a2       	r1 = r7 << 2 			  ## wmadec.c:593:8
  1009f8:    c9 d4       	r1 = r1 + r3 			  ## wmadec.c:593:8
  1009fa:    01 ed 18 64 	r8 = r1 + 356 			  ## wmadec.c:593:8
  1009fe:    1f ed 9d ff 	r13 = r9 + -1 			  ## wmadec.c:593:8
  100a02:    09 ed 30 d4 	r0 = r3 + 2516 			  ## wmadec.c:593:8
  100a06:    00 62       	[sp+ 32] = r0 			  ## wmadec.c:593:8
  100a08:    09 ed 30 dc 	r0 = r3 + 2524 			  ## wmadec.c:593:8
  100a0c:    c0 61       	[sp+ 28] = r0 			  ## wmadec.c:593:8
  100a0e:    09 ed 30 9c 	r0 = r3 + 2460 			  ## wmadec.c:593:8
  100a12:    80 61       	[sp+ 24] = r0 			  ## wmadec.c:593:8
  100a14:    20 e4 02 a4 	r2 = [addr(656)]  <.GCPI405_0 : 100ca8 >			  ## wmadec.c:593:8
  100a18:    53 ea 24 0c 	r11 = 3108 			  ## wmadec.c:630:30
  100a1c:    49 08       	goto 146 <.GJTIE405_0_0_+0x12C : 100ab0 >
  100a1e:    04 98       	cmp r4, 0			  ## wmadec.c:599:4
  100a20:    10 c6       	r0 = r2 			  ## wmadec.c:599:4
  100a22:    a0 03       	ifs (nzcv >= 0) {			  ## wmadec.c:599:4
  100a24:    20 e4 00 a1 		r0 = [addr(644)] 
                               	} <.GCPI405_1 : 100cac >			  ## wmadec.c:599:4
  100a28:    20 e7 00 0a 	r0 = [r0 + r10] 			  ## wmadec.c:599:4
  100a2c:    90 e8 c1 00 	r1 = h[r12 + 0] (s) 			  ## wmadec.c:621:4
  100a30:    09 a1       	r1 = r1 << 1 			  ## wmadec.c:621:4
  100a32:    c8 06       	macc = r1 * r0 (s) 			  ## wmadec.c:621:4
  100a34:    80 ef e0 00 	cmp r14, 0			  ## wmadec.c:605:8
  100a38:    51 c6       	r9 = r2 			  ## wmadec.c:605:8
  100a3a:    10 c6       	r0 = r2 			  ## wmadec.c:605:8
  100a3c:    a0 03       	ifs (nzcv >= 0) {			  ## wmadec.c:605:8
  100a3e:    20 e4 00 9b 		r0 = [addr(620)] 
                               	} <.GCPI405_1 : 100cac >			  ## wmadec.c:605:8
  100a42:    20 e7 00 05 	r0 = [r0 + r5] 			  ## wmadec.c:605:8
  100a46:    20 e8 81 00 	r1 = [r8 + 0] 			  ## wmadec.c:622:4
  100a4a:    c8 07       	macc -= r1 * r0 (s) 			  ## wmadec.c:622:4
  100a4c:    2b ea 00 00 	r0 = 131072 			  ## wmadec.c:623:4
  100a50:    09 80       	r1 = 1 			  ## wmadec.c:623:4
  100a52:    88 07       	macc += r1 * r0 (s) 			  ## wmadec.c:623:4
  100a54:    c0 f9 00 12 	r0 = macc >>> 18 			  ## wmadec.c:624:4
  100a58:    b1 4f       	r1 = [r6 + -8] 			  ## wmadec.c:626:19
  100a5a:    49 d0       	r1 = r1 + 1 			  ## wmadec.c:626:19
  100a5c:    b1 6f       	[r6 + -8] = r1 			  ## wmadec.c:626:19
  100a5e:    ff e1 7f f5 	call -338 <av_clip_int16 : 100910 >			  ## wmadec.c:630:32
  100a62:    f1 59       	r1 = b[r6 + -4] 			  ## wmadec.c:630:26
  100a64:    4a d0       	r2 = r1 + 1 			  ## wmadec.c:630:26
  100a66:    f2 79       	b[r6 + -4] = r2 			  ## wmadec.c:630:26
  100a68:    09 a1       	r1 = r1 << 1 			  ## wmadec.c:630:4
  100a6a:    c9 d4       	r1 = r1 + r3 			  ## wmadec.c:630:4
  100a6c:    50 e7 10 0b 	h[r1 + r11] = r0 			  ## wmadec.c:630:30
  100a70:    10 c9       	r0 = r2.b 			  ## wmadec.c:630:26
  100a72:    00 99       	cmp r0, 32			  ## wmadec.c:632:8
  100a74:    0e 11       	ifs (nzcv != 0) goto 28 <.GJTIE405_0_0_+0x10E : 100a92 >			  ## wmadec.c:632:8
  100a76:    00 42       	r0 = [sp+ 32] 			  ## wmadec.c:635:49
  100a78:    00 48       	r0 = [r0 + 0] 			  ## wmadec.c:635:49
  100a7a:    c1 41       	r1 = [sp+ 28] 			  ## wmadec.c:635:28
  100a7c:    0b 48       	r3 = [r1 + 0] 			  ## wmadec.c:635:28
  100a7e:    41 42       	r1 = [sp+ 36] 			  ## wmadec.c:635:14
  100a80:    02 82       	r2 = 64 			  ## wmadec.c:635:14
  100a82:    ab 01       	call r3			  ## wmadec.c:635:14
  100a84:    83 42       	r3 = [sp+ 40] 			  ## wmadec.c:635:14
  100a86:    81 41       	r1 = [sp+ 24] 			  ## wmadec.c:636:20
  100a88:    02 80       	r2 = 0 			  ## wmadec.c:636:20
  100a8a:    0a 78       	b[r1 + 0] = r2 			  ## wmadec.c:636:20
  100a8c:    f8 99       	cmp r0, 63			  ## wmadec.c:637:9
  100a8e:    00 fb 8d 0a 	ifs (nzcv <= 0) goto 336 <.GJTIE405_0_0_+0x25E : 100be2 >			  ## wmadec.c:637:9
  100a92:    00 41       	r0 = [sp+ 16] 
  100a94:    40 ee ee 00 	r14 = r14 - r0 			  ## wmadec.c:615:24
  100a98:    24 d4       	r4 = r4 + r0 			  ## wmadec.c:614:24
  100a9a:    c0 40       	r0 = [sp+ 12] 
  100a9c:    2d d6       	r5 = r5 - r0 			  ## wmadec.c:593:3
  100a9e:    42 cb       	r10 += r0 			  ## wmadec.c:593:3
  100aa0:    1f ed 88 fc 	r8 = r8 + -4 			  ## wmadec.c:593:3
  100aa4:    1f ed dd ff 	r13 = r13 + -1 			  ## wmadec.c:593:3
  100aa8:    00 ed cc 02 	r12 = r12 + 2 			  ## wmadec.c:593:3
  100aac:    ff d3       	r7 = r7 + -1 			  ## wmadec.c:593:35
  100aae:    8a c6       	r2 = r9 
  100ab0:    07 98       	cmp r7, 0			  ## wmadec.c:593:3
  100ab2:    b5 1a       	ifs (nzcv >= 0) goto -150 <.GJTIE405_0_0_+0x9A : 100a1e >			  ## wmadec.c:593:3
  100ab4:    10 80       	r0 = 2 			  ## wmadec.c:647:15
  100ab6:    b0 78       	b[r6 + 8] = r0 			  ## wmadec.c:647:15
  100ab8:    56 ea 00 00 	r14 = 0 			  ## wmadec.c:647:15
  100abc:    50 e8 6e 82 	h[r6 + 10] = r14 			  ## wmadec.c:648:16
  100ac0:    42 41       	r2 = [sp+ 20] 			  ## wmadec.c:648:16
  100ac2:    04 40       	r4 = [sp] 			  ## wmadec.c:648:16
  100ac4:    1d c6       	r5 = r3 
  100ac6:    20 e9 0b 04 	r11 = [sp+ 16] 
  100aca:    16 08       	goto 44 <.GJTIE405_0_0_+0x174 : 100af8 >
  100acc:    60 e9 0b 01 	[sp+ 4] = r11 
  100ad0:    60 e9 0a 02 	[sp+ 8] = r10 
  100ad4:    90 e8 6e 82 	r14 = h[r6 + 10] (s) 			  ## wmadec.c:579:2
  100ad8:    10 a1       	r0 = r2 << 1 			  ## wmadec.c:651:36
  100ada:    11 ea 00 04 	r1 = 1024 			  ## wmadec.c:651:30
  100ade:    1d c6       	r5 = r3 			  ## wmadec.c:651:30
  100ae0:    c0 fc 1b 00 	r11 = r1 / r0 (s) 			  ## wmadec.c:651:30
  100ae4:    09 ed 50 d4 	r0 = r5 + 2516 
  100ae8:    00 62       	[sp+ 32] = r0 
  100aea:    09 ed 50 dc 	r0 = r5 + 2524 
  100aee:    c0 61       	[sp+ 28] = r0 
  100af0:    09 ed 50 9c 	r0 = r5 + 2460 
  100af4:    80 61       	[sp+ 24] = r0 
  100af6:    d4 d3       	r4 = r2 + -1 
  100af8:    00 ee e0 02 	r0 = r14 + r2 			  ## wmadec.c:650:10
  100afc:    80 fc 00 0b 	r0 = r0 * r11 			  ## wmadec.c:652:16
  100b00:    11 ea ff 03 	r1 = 1023 			  ## wmadec.c:653:45
  100b04:    40 ee 18 00 	r8 = r1 - r0 			  ## wmadec.c:653:45
  100b08:    20 f7 e1 01 	r1 = r14 << 1 			  ## wmadec.c:657:8
  100b0c:    22 a1       	r2 = r4 << 1 			  ## wmadec.c:657:8
  100b0e:    0a ed 22 24 	r2 = r2 + 2596 			  ## wmadec.c:657:8
  100b12:    51 d6       	r1 = r2 - r1 			  ## wmadec.c:657:8
  100b14:    00 ee 5a 01 	r10 = r5 + r1 			  ## wmadec.c:657:8
  100b18:    01 a2       	r1 = r0 << 2 			  ## wmadec.c:657:8
  100b1a:    12 ea fc 0f 	r2 = 4092 			  ## wmadec.c:657:8
  100b1e:    40 ee 2c 01 	r12 = r2 - r1 			  ## wmadec.c:657:8
  100b22:    20 f7 e2 02 	r2 = r14 << 2 			  ## wmadec.c:657:8
  100b26:    52 d5       	r2 = r2 + r5 			  ## wmadec.c:657:8
  100b28:    01 ed 24 64 	r4 = r2 + 356 			  ## wmadec.c:657:8
  100b2c:    42 41       	r2 = [sp+ 20] 			  ## wmadec.c:657:8
  100b2e:    45 d0       	r5 = r0 + 1 			  ## wmadec.c:652:27
  100b30:    0f d1       	r7 = r1 + 4 			  ## wmadec.c:657:8
  100b32:    00 ed ed 01 	r13 = r14 + 1 			  ## wmadec.c:657:8
  100b36:    20 f7 b0 02 	r0 = r11 << 2 			  ## wmadec.c:657:8
  100b3a:    00 61       	[sp+ 16] = r0 
  100b3c:    51 ea 24 0c 	r9 = 3108 			  ## wmadec.c:695:30
  100b40:    45 08       	goto 138 <.GJTIE405_0_0_+0x248 : 100bcc >			  ## wmadec.c:695:30
  100b42:    80 ef 80 00 	cmp r8, 0			  ## wmadec.c:674:8
  100b46:    a4 03       	ifs (nzcv >= 0) {			  ## wmadec.c:674:8
  100b48:    50 2e       		r0 = [addr(356)] 
                               	} else { <.GCPI405_1 : 100cac >			  ## wmadec.c:674:8
  100b4a:    d0 2d       		r0 = [addr(348)] 
                               	} <.GCPI405_0 : 100ca8 >			  ## wmadec.c:674:8
  100b4c:    20 e7 00 0c 	r0 = [r0 + r12] 			  ## wmadec.c:674:8
  100b50:    21 48       	r1 = [r4 + 0] 			  ## wmadec.c:686:4
  100b52:    c8 06       	macc = r1 * r0 (s) 			  ## wmadec.c:686:4
  100b54:    05 98       	cmp r5, 0			  ## wmadec.c:668:4
  100b56:    a4 03       	ifs (nzcv >= 0) {			  ## wmadec.c:668:4
  100b58:    50 2d       		r0 = [addr(340)] 
                               	} else { <.GCPI405_1 : 100cac >			  ## wmadec.c:668:4
  100b5a:    d0 2c       		r0 = [addr(332)] 
                               	} <.GCPI405_0 : 100ca8 >			  ## wmadec.c:668:4
  100b5c:    20 e7 00 07 	r0 = [r0 + r7] 			  ## wmadec.c:668:4
  100b60:    90 e8 a1 00 	r1 = h[r10 + 0] (s) 			  ## wmadec.c:687:4
  100b64:    09 a1       	r1 = r1 << 1 			  ## wmadec.c:687:4
  100b66:    88 07       	macc += r1 * r0 (s) 			  ## wmadec.c:687:4
  100b68:    2b ea 00 00 	r0 = 131072 			  ## wmadec.c:688:4
  100b6c:    09 80       	r1 = 1 			  ## wmadec.c:688:4
  100b6e:    88 07       	macc += r1 * r0 (s) 			  ## wmadec.c:688:4
  100b70:    c0 f9 00 12 	r0 = macc >>> 18 			  ## wmadec.c:689:4
  100b74:    b1 4f       	r1 = [r6 + -8] 			  ## wmadec.c:691:19
  100b76:    49 d0       	r1 = r1 + 1 			  ## wmadec.c:691:19
  100b78:    b1 6f       	[r6 + -8] = r1 			  ## wmadec.c:691:19
  100b7a:    ff e1 9f ec 	call -622 <av_clip_int16 : 100910 >			  ## wmadec.c:695:32
  100b7e:    f1 59       	r1 = b[r6 + -4] 			  ## wmadec.c:695:26
  100b80:    4a d0       	r2 = r1 + 1 			  ## wmadec.c:695:26
  100b82:    f2 79       	b[r6 + -4] = r2 			  ## wmadec.c:695:26
  100b84:    09 a1       	r1 = r1 << 1 			  ## wmadec.c:695:4
  100b86:    83 42       	r3 = [sp+ 40] 			  ## wmadec.c:695:4
  100b88:    c9 d4       	r1 = r1 + r3 			  ## wmadec.c:695:4
  100b8a:    50 e7 10 09 	h[r1 + r9] = r0 			  ## wmadec.c:695:30
  100b8e:    10 c9       	r0 = r2.b 			  ## wmadec.c:695:26
  100b90:    00 99       	cmp r0, 32			  ## wmadec.c:697:8
  100b92:    0d 11       	ifs (nzcv != 0) goto 26 <.GJTIE405_0_0_+0x22A : 100bae >			  ## wmadec.c:697:8
  100b94:    00 42       	r0 = [sp+ 32] 			  ## wmadec.c:700:49
  100b96:    00 48       	r0 = [r0 + 0] 			  ## wmadec.c:700:49
  100b98:    c1 41       	r1 = [sp+ 28] 			  ## wmadec.c:700:28
  100b9a:    0b 48       	r3 = [r1 + 0] 			  ## wmadec.c:700:28
  100b9c:    41 42       	r1 = [sp+ 36] 			  ## wmadec.c:700:14
  100b9e:    02 82       	r2 = 64 			  ## wmadec.c:700:14
  100ba0:    ab 01       	call r3			  ## wmadec.c:700:14
  100ba2:    83 42       	r3 = [sp+ 40] 			  ## wmadec.c:700:14
  100ba4:    81 41       	r1 = [sp+ 24] 			  ## wmadec.c:701:20
  100ba6:    02 80       	r2 = 0 			  ## wmadec.c:701:20
  100ba8:    0a 78       	b[r1 + 0] = r2 			  ## wmadec.c:701:20
  100baa:    f8 99       	cmp r0, 63			  ## wmadec.c:702:9
  100bac:    1a 1d       	ifs (nzcv <= 0) goto 52 <.GJTIE405_0_0_+0x25E : 100be2 >			  ## wmadec.c:702:9
  100bae:    40 ee 88 0b 	r8 = r8 - r11 			  ## wmadec.c:684:24
  100bb2:    9d cb       	r5 += r11 			  ## wmadec.c:683:24
  100bb4:    00 41       	r0 = [sp+ 16] 
  100bb6:    40 ee cc 00 	r12 = r12 - r0 			  ## wmadec.c:657:3
  100bba:    3f d4       	r7 = r7 + r0 			  ## wmadec.c:657:3
  100bbc:    24 d1       	r4 = r4 + 4 			  ## wmadec.c:657:3
  100bbe:    1f ed aa fe 	r10 = r10 + -2 			  ## wmadec.c:657:3
  100bc2:    00 ed dd 01 	r13 = r13 + 1 			  ## wmadec.c:657:3
  100bc6:    00 ed ee 01 	r14 = r14 + 1 			  ## wmadec.c:657:35
  100bca:    42 41       	r2 = [sp+ 20] 
  100bcc:    56 ce       	cmp r2, r14			  ## wmadec.c:657:3
  100bce:    b9 1c       	ifs (nzcv > 0) goto -142 <.GJTIE405_0_0_+0x1BE : 100b42 >			  ## wmadec.c:657:3
  100bd0:    18 80       	r0 = 3 			  ## wmadec.c:711:15
  100bd2:    b0 78       	b[r6 + 8] = r0 			  ## wmadec.c:711:15
  100bd4:    b2 74       	h[r6 + 10] = r2 			  ## wmadec.c:712:16
  100bd6:    20 e9 0a 02 	r10 = [sp+ 8] 			  ## wmadec.c:712:16
  100bda:    20 e9 0b 01 	r11 = [sp+ 4] 			  ## wmadec.c:712:16
  100bde:    83 42       	r3 = [sp+ 40] 
  100be0:    0d 08       	goto 26 <.GJTIE405_0_0_+0x278 : 100bfc >
  100be2:    50 e8 6d 82 	h[r6 + 10] = r13 
  100be6:    53 08       	goto 166 <.GJTIE405_0_0_+0x30A : 100c8e >
  100be8:    b2 54       	r2 = h[r6 + 10] 
  100bea:    09 ed 30 d4 	r0 = r3 + 2516 
  100bee:    00 62       	[sp+ 32] = r0 
  100bf0:    09 ed 30 dc 	r0 = r3 + 2524 
  100bf4:    c0 61       	[sp+ 28] = r0 
  100bf6:    09 ed 30 9c 	r0 = r3 + 2460 
  100bfa:    80 61       	[sp+ 24] = r0 			  ## wmadec.c:579:2
  100bfc:    d4 c9       	r4 = r2.l (s) 			  ## wmadec.c:714:12
  100bfe:    20 a2       	r0 = r4 << 2 			  ## wmadec.c:714:8
  100c00:    c0 d4       	r0 = r0 + r3 			  ## wmadec.c:714:8
  100c02:    01 ed 05 64 	r5 = r0 + 356 			  ## wmadec.c:714:8
  100c06:    57 d0       	r7 = r2 + 1 			  ## wmadec.c:714:8
  100c08:    50 ea 24 0c 	r8 = 3108 			  ## wmadec.c:714:8
  100c0c:    51 ea 00 00 	r9 = 0 			  ## wmadec.c:714:8
  100c10:    20 08       	goto 64 <.GJTIE405_0_0_+0x2CE : 100c52 >			  ## wmadec.c:714:8
  100c12:    b0 4f       	r0 = [r6 + -8] 			  ## wmadec.c:717:19
  100c14:    41 d0       	r1 = r0 + 1 			  ## wmadec.c:717:19
  100c16:    28 48       	r0 = [r5 + 0] 			  ## wmadec.c:716:10
  100c18:    b1 6f       	[r6 + -8] = r1 			  ## wmadec.c:717:19
  100c1a:    ff e1 9f e7 	call -782 <av_clip_int16 : 100910 >			  ## wmadec.c:721:32
  100c1e:    f1 59       	r1 = b[r6 + -4] 			  ## wmadec.c:721:26
  100c20:    4a d0       	r2 = r1 + 1 			  ## wmadec.c:721:26
  100c22:    f2 79       	b[r6 + -4] = r2 			  ## wmadec.c:721:26
  100c24:    09 a1       	r1 = r1 << 1 			  ## wmadec.c:721:4
  100c26:    c9 d4       	r1 = r1 + r3 			  ## wmadec.c:721:4
  100c28:    50 e7 10 08 	h[r1 + r8] = r0 			  ## wmadec.c:721:30
  100c2c:    10 c9       	r0 = r2.b 			  ## wmadec.c:721:26
  100c2e:    00 99       	cmp r0, 32			  ## wmadec.c:722:8
  100c30:    0d 11       	ifs (nzcv != 0) goto 26 <.GJTIE405_0_0_+0x2C8 : 100c4c >			  ## wmadec.c:722:8
  100c32:    00 42       	r0 = [sp+ 32] 			  ## wmadec.c:725:49
  100c34:    00 48       	r0 = [r0 + 0] 			  ## wmadec.c:725:49
  100c36:    c1 41       	r1 = [sp+ 28] 			  ## wmadec.c:725:28
  100c38:    0b 48       	r3 = [r1 + 0] 			  ## wmadec.c:725:28
  100c3a:    41 42       	r1 = [sp+ 36] 			  ## wmadec.c:725:14
  100c3c:    02 82       	r2 = 64 			  ## wmadec.c:725:14
  100c3e:    ab 01       	call r3			  ## wmadec.c:725:14
  100c40:    83 42       	r3 = [sp+ 40] 			  ## wmadec.c:725:14
  100c42:    81 41       	r1 = [sp+ 24] 			  ## wmadec.c:726:20
  100c44:    40 e8 19 00 	b[r1 + 0] = r9 			  ## wmadec.c:726:20
  100c48:    f8 99       	cmp r0, 63			  ## wmadec.c:727:9
  100c4a:    20 1d       	ifs (nzcv <= 0) goto 64 <.GJTIE405_0_0_+0x308 : 100c8c >			  ## wmadec.c:727:9
  100c4c:    7f d0       	r7 = r7 + 1 			  ## wmadec.c:714:3
  100c4e:    2d d1       	r5 = r5 + 4 			  ## wmadec.c:714:3
  100c50:    64 d0       	r4 = r4 + 1 			  ## wmadec.c:714:35
  100c52:    63 ce       	cmp r4, r11			  ## wmadec.c:714:3
  100c54:    de 1b       	ifs (nzcv < 0) goto -68 <.GJTIE405_0_0_+0x28E : 100c12 >			  ## wmadec.c:714:3
  100c56:    00 80       	r0 = 0 			  ## wmadec.c:737:15
  100c58:    b0 78       	b[r6 + 8] = r0 			  ## wmadec.c:737:15
  100c5a:    0a ed 32 24 	r2 = r3 + 2596 			  ## wmadec.c:739:3
  100c5e:    09 08       	goto 18 <.GJTIE405_0_0_+0x2EE : 100c72 >			  ## wmadec.c:739:3
  100c60:    28 e8 50 01 	r0 = [r5 ++= 4] 			  ## wmadec.c:741:35
  100c64:    40 d0       	r0 = r0 + 1 			  ## wmadec.c:741:47
  100c66:    c0 a1       	r0 = r0 >>> 1 			  ## wmadec.c:741:52
  100c68:    ff e1 2f e5 	call -860 <av_clip_int16 : 100910 >			  ## wmadec.c:741:20
  100c6c:    58 e8 20 80 	h[r2 ++= 2] = r0 			  ## wmadec.c:741:18
  100c70:    64 d0       	r4 = r4 + 1 			  ## wmadec.c:739:26
  100c72:    62 ce       	cmp r4, r10			  ## wmadec.c:739:3
  100c74:    f5 1b       	ifs (nzcv < 0) goto -22 <.GJTIE405_0_0_+0x2DC : 100c60 >			  ## wmadec.c:739:3
  100c76:    b1 4f       	r1 = [r6 + -8] 			  ## wmadec.c:743:10
  100c78:    1a 48       	r2 = [r3 + 0] 			  ## wmadec.c:743:29
  100c7a:    00 80       	r0 = 0 			  ## wmadec.c:743:29
  100c7c:    0a ce       	cmp r1, r2			  ## wmadec.c:743:7
  100c7e:    10 13       	if (nzcv < 0) goto 32 <.GJTIE405_0_0_+0x31C : 100ca0 >			  ## wmadec.c:743:7
  100c80:    b3 49       	r3 = [r6 + 24] 			  ## wmadec.c:745:16
  100c82:    5b d0       	r3 = r3 + 1 			  ## wmadec.c:745:16
  100c84:    b3 69       	[r6 + 24] = r3 			  ## wmadec.c:745:16
  100c86:    89 d6       	r1 = r1 - r2 			  ## wmadec.c:746:20
  100c88:    b1 6f       	[r6 + -8] = r1 			  ## wmadec.c:746:20
  100c8a:    0a 08       	goto 20 <.GJTIE405_0_0_+0x31C : 100ca0 >			  ## wmadec.c:746:20
  100c8c:    b7 74       	h[r6 + 10] = r7 			  ## wmadec.c:729:19
  100c8e:    09 ed 31 ae 	r1 = r3 + 2478 
  100c92:    09 50       	r1 = h[r1 + 0] 
  100c94:    09 d4       	r1 = r1 + r0 
  100c96:    f1 74       	h[r6 + 14] = r1 
  100c98:    20 ee 00 40 	r0 = 64 - r0 
  100c9c:    f0 70       	h[r6 + 12] = r0 
  100c9e:    08 80       	r0 = 1 
  100ca0:    2c cd       	sp += 44 
  100ca2:    30 c4       	{macch, maccl} = [sp++] 
  100ca4:    1e c0       	{pc, r14-r4} = [sp++] 
  100ca6:    00 00       	nop


.GCPI405_0:
  100ca8:    cc d7 11 00     < 1169356 : 0x11D7CC >

.GCPI405_1:
  100cac:    28 1d 10 00     < 1056040 : 0x101D28 >

findFileEnd:
  100cb0:    1b c2       	[--sp] = {rets, r11-r4} 			  ## wmadec.c:66:0
  100cb2:    f8 cd       	sp += -8 			  ## wmadec.c:66:0
  100cb4:    41 60       	[sp+ 4] = r1 			  ## wmadec.c:66:0
  100cb6:    11 ea 00 08 	r1 = 2048 			  ## wmadec.c:71:21
  100cba:    06 c6       	r6 = r0 			  ## wmadec.c:71:21
  100cbc:    64 e8 61 46 	[++ r6 = 280] = r1 			  ## wmadec.c:71:21
  100cc0:    f1 6f       	[r6 + -4] = r1 			  ## wmadec.c:72:14
  100cc2:    07 80       	r7 = 0 			  ## wmadec.c:72:14
  100cc4:    b7 68       	[r6 + 8] = r7 			  ## wmadec.c:73:17
  100cc6:    75 4f       	r5 = [r6 + -12] 			  ## wmadec.c:74:29
  100cc8:    00 60       	[sp] = r0 
  100cca:    ff e1 7f a6 	call -2866 <fill_buf : 10019c >			  ## wmadec.c:75:2
  100cce:    28 58       	r0 = b[r5 + 0] 			  ## wmadec.c:76:10
  100cd0:    29 5a       	r1 = b[r5 + 1] 			  ## wmadec.c:76:29
  100cd2:    41 f6 01 08 	r1 <= insert(r0, p:8, l:8) 			  ## wmadec.c:76:27
  100cd6:    08 a8       	r0 = r1 << 8 			  ## wmadec.c:76:42
  100cd8:    29 5c       	r1 = b[r5 + 2] 			  ## wmadec.c:76:50
  100cda:    08 da       	r0 |= r1 			  ## wmadec.c:76:48
  100cdc:    c9 28       	r1 = [addr(140)]  <.GCPI406_0 : 100d68 >			  ## wmadec.c:77:10
  100cde:    01 ce       	cmp r0, r1			  ## wmadec.c:77:6
  100ce0:    40 11       	ifs (nzcv != 0) goto 128 <findFileEnd+0xB2 : 100d62 >			  ## wmadec.c:77:6
  100ce2:    00 e8 5b 81 	r11 = b[r5 + 6] 			  ## wmadec.c:80:17
  100ce6:    68 58       	r0 = b[r5 + 4] 			  ## wmadec.c:79:30
  100ce8:    6a 5a       	r2 = b[r5 + 5] 			  ## wmadec.c:79:10
  100cea:    c1 81       	r1 = 56 			  ## wmadec.c:79:10
  100cec:    f1 6f       	[r6 + -4] = r1 			  ## wmadec.c:83:15
  100cee:    41 f6 20 08 	r0 <= insert(r2, p:8, l:8) 			  ## wmadec.c:79:28
  100cf2:    c0 d3       	r0 = r0 + -1 			  ## wmadec.c:82:18
  100cf4:    c0 fc 08 0b 	r8 = r0 / r11 (s) 			  ## wmadec.c:82:23
  100cf8:    ea d1       	r2 = r5 + 7 			  ## wmadec.c:81:23
  100cfa:    20 f7 b9 03 	r9 = r11 << 3 
  100cfe:    1f ed b5 ff 	r5 = r11 + -1 
  100d02:    20 f7 ba 04 	r10 = r11 << 4 
  100d06:    78 ce       	cmp r7, r8			  ## wmadec.c:85:3
  100d08:    2c 1a       	ifs (nzcv >= 0) goto 88 <findFileEnd+0xB2 : 100d62 >			  ## wmadec.c:85:3
  100d0a:    2e ee 10 00 	r0 = 2048 - r1 			  ## wmadec.c:87:14
  100d0e:    42 ce       	cmp r0, r10			  ## wmadec.c:87:8
  100d10:    04 1a       	ifs (nzcv >= 0) goto 8 <findFileEnd+0x6A : 100d1a >			  ## wmadec.c:87:8
  100d12:    00 40       	r0 = [sp] 			  ## wmadec.c:89:5
  100d14:    ff e1 2f a4 	call -2940 <fill_buf : 10019c >			  ## wmadec.c:89:5
  100d18:    72 4f       	r2 = [r6 + -12] 			  ## wmadec.c:90:22
  100d1a:    10 c6       	r0 = r2 
  100d1c:    03 80       	r3 = 0 
  100d1e:    29 c6       	r1 = r5 
  100d20:    05 08       	goto 10 <findFileEnd+0x7C : 100d2c >
  100d22:    00 e7 02 01 	r2 = b[r0 + r1] 			  ## wmadec.c:95:24
  100d26:    1b a8       	r3 = r3 << 8 			  ## wmadec.c:95:16
  100d28:    13 da       	r3 |= r2 			  ## wmadec.c:95:22
  100d2a:    c9 d3       	r1 = r1 + -1 			  ## wmadec.c:93:43
  100d2c:    f9 9f       	cmp r1, -1			  ## wmadec.c:93:4
  100d2e:    f9 1c       	ifs (nzcv > 0) goto -14 <findFileEnd+0x72 : 100d22 >			  ## wmadec.c:93:4
  100d30:    f1 4f       	r1 = [r6 + -4] 			  ## wmadec.c:97:16
  100d32:    89 cb       	r1 += r9 			  ## wmadec.c:97:16
  100d34:    f1 6f       	[r6 + -4] = r1 			  ## wmadec.c:97:16
  100d36:    00 ee 02 0b 	r2 = r0 + r11 			  ## wmadec.c:98:24
  100d3a:    7f d0       	r7 = r7 + 1 			  ## wmadec.c:85:33
  100d3c:    44 40       	r4 = [sp+ 4] 			  ## wmadec.c:99:8
  100d3e:    1c ce       	cmp r3, r4			  ## wmadec.c:99:8
  100d40:    e2 13       	if (nzcv < 0) goto -60 <findFileEnd+0x56 : 100d06 >			  ## wmadec.c:99:8
  100d42:    b3 68       	[r6 + 8] = r3 			  ## wmadec.c:101:20
  100d44:    20 f7 b1 01 	r1 = r11 << 1 			  ## wmadec.c:103:10
  100d48:    40 d4       	r0 = r0 + r1 			  ## wmadec.c:103:10
  100d4a:    c0 d3       	r0 = r0 + -1 			  ## wmadec.c:103:10
  100d4c:    01 80       	r1 = 0 			  ## wmadec.c:103:10
  100d4e:    05 08       	goto 10 <findFileEnd+0xAA : 100d5a >			  ## wmadec.c:103:10
  100d50:    09 a8       	r1 = r1 << 8 			  ## wmadec.c:105:17
  100d52:    08 e8 02 ff 	r2 = b[r0 ++= -1] 			  ## wmadec.c:105:25
  100d56:    11 da       	r1 |= r2 			  ## wmadec.c:105:23
  100d58:    ed d3       	r5 = r5 + -1 			  ## wmadec.c:103:44
  100d5a:    fd 9f       	cmp r5, -1			  ## wmadec.c:103:5
  100d5c:    f9 1c       	ifs (nzcv > 0) goto -14 <findFileEnd+0xA0 : 100d50 >			  ## wmadec.c:103:5
  100d5e:    c8 d3       	r0 = r1 + -1 			  ## wmadec.c:107:26
  100d60:    f0 68       	[r6 + 12] = r0 			  ## wmadec.c:107:20
  100d62:    08 cd       	sp += 8 
  100d64:    1b c0       	{pc, r11-r4} = [sp++] 
  100d66:    00 00       	nop


.GCPI406_0:
  100d68:    78 31 66 00     < 6697336 : 0x663178 >

f1a_decoder_again_open:
  100d6c:    1d c2       	[--sp] = {rets, r13-r4} 			  ## main.c:490:0
  100d6e:    05 c6       	r5 = r0 			  ## main.c:490:0
  100d70:    00 ed 50 0c 	r0 = r5 + 12 			  ## main.c:496:38
  100d74:    01 ed 56 28 	r6 = r5 + 296 
  100d78:    01 ed 59 0c 	r9 = r5 + 268 			  ## main.c:496:11
  100d7c:    40 e5 69 f9 	d[r6 + -28] = r9, r0 			  ## main.c:496:21
  100d80:    10 ea 00 08 	r0 = 2048 			  ## main.c:498:27
  100d84:    30 6f       	[r6 + -16] = r0 			  ## main.c:498:27
  100d86:    f0 6e       	[r6 + -20] = r0 			  ## main.c:499:20
  100d88:    50 ea 01 00 	r8 = 1 			  ## main.c:499:20
  100d8c:    40 e8 58 01 	b[r5 + 4] = r8 			  ## main.c:524:23
  100d90:    09 ed 57 6c 	r7 = r5 + 2412 			  ## main.c:524:23
  100d94:    40 e8 78 00 	b[r7 + 0] = r8 			  ## main.c:527:23
  100d98:    28 c6       	r0 = r5 			  ## main.c:528:2
  100d9a:    ff e1 ff 9f 	call -3074 <fill_buf : 10019c >			  ## main.c:528:2
  100d9e:    e8 58       	r0 = b[r5 + 12] 			  ## main.c:529:10
  100da0:    e9 5a       	r1 = b[r5 + 13] 			  ## main.c:529:29
  100da2:    41 f6 01 08 	r1 <= insert(r0, p:8, l:8) 			  ## main.c:529:27
  100da6:    08 a8       	r0 = r1 << 8 			  ## main.c:529:42
  100da8:    e9 5c       	r1 = b[r5 + 14] 			  ## main.c:529:50
  100daa:    08 da       	r0 |= r1 			  ## main.c:529:48
  100dac:    04 80       	r4 = 0 
  100dae:    91 29       	r1 = [addr(280)]  <.GCPI407_3 : 100ec8 >			  ## main.c:531:10
  100db0:    01 ce       	cmp r0, r1			  ## main.c:531:6
  100db2:    07 11       	ifs (nzcv != 0) goto 14 <f1a_decoder_again_open+0x56 : 100dc2 >			  ## main.c:531:6
  100db4:    09 ed 50 b0 	r0 = r5 + 2480 
  100db8:    40 e8 08 00 	b[r0 + 0] = r8 			  ## main.c:533:16
  100dbc:    00 81       	r0 = 32 			  ## main.c:534:21
  100dbe:    f0 6e       	[r6 + -20] = r0 			  ## main.c:534:21
  100dc0:    ec 5e       	r4 = b[r5 + 15] 			  ## main.c:535:22
  100dc2:    38 58       	r0 = b[r7 + 0] 			  ## main.c:537:15
  100dc4:    a0 21       	if (r0 == 0) goto 52 <f1a_decoder_again_open+0x8E : 100dfa >			  ## main.c:537:15
  100dc6:    88 c6       	r0 = r9 			  ## main.c:539:9
  100dc8:    09 80       	r1 = 1 			  ## main.c:539:9
  100dca:    ff e1 4f a2 	call -3000 <get_bits : 100216 >			  ## main.c:539:9
  100dce:    11 ea 40 1f 	r1 = 8000 			  ## main.c:540:24
  100dd2:    29 68       	[r5 + 0] = r1 			  ## main.c:540:24
  100dd4:    1c 98       	cmp r4, 3			  ## main.c:542:7
  100dd6:    07 10       	ifs (nzcv == 0) goto 14 <f1a_decoder_again_open+0x7A : 100de6 >			  ## main.c:542:7
  100dd8:    14 98       	cmp r4, 2
  100dda:    08 10       	ifs (nzcv == 0) goto 16 <f1a_decoder_again_open+0x80 : 100dec >
  100ddc:    0c 98       	cmp r4, 1
  100dde:    09 11       	ifs (nzcv != 0) goto 18 <f1a_decoder_again_open+0x86 : 100df2 >
  100de0:    10 ea 00 7d 	r0 = 32000 			  ## main.c:545:25
  100de4:    09 08       	goto 18 <f1a_decoder_again_open+0x8C : 100df8 >
  100de6:    10 ea c0 5d 	r0 = 24000 			  ## main.c:553:25
  100dea:    06 08       	goto 12 <f1a_decoder_again_open+0x8C : 100df8 >
  100dec:    10 ea e0 2e 	r0 = 12000 			  ## main.c:549:25
  100df0:    03 08       	goto 6 <f1a_decoder_again_open+0x8C : 100df8 >
  100df2:    30 20       	if (r0 == 0) goto 6 <f1a_decoder_again_open+0x8E : 100dfa >
  100df4:    10 ea 80 3e 	r0 = 16000 			  ## main.c:557:25
  100df8:    28 68       	[r5 + 0] = r0 
  100dfa:    88 c6       	r0 = r9 			  ## main.c:565:30
  100dfc:    09 80       	r1 = 1 			  ## main.c:565:30
  100dfe:    ff e1 af a0 	call -3052 <get_bits : 100216 >			  ## main.c:565:30
  100e02:    30 78       	b[r6 + 0] = r0 			  ## main.c:565:28
  100e04:    88 c6       	r0 = r9 			  ## main.c:566:15
  100e06:    11 80       	r1 = 2 			  ## main.c:566:15
  100e08:    ff e1 5f a0 	call -3062 <get_bits : 100216 >			  ## main.c:566:15
  100e0c:    40 c6       	r8 = r0 			  ## main.c:566:15
  100e0e:    88 c6       	r0 = r9 			  ## main.c:567:16
  100e10:    11 80       	r1 = 2 			  ## main.c:567:16
  100e12:    ff e1 0f a0 	call -3072 <get_bits : 100216 >			  ## main.c:567:16
  100e16:    07 c6       	r7 = r0 			  ## main.c:567:16
  100e18:    88 c6       	r0 = r9 			  ## main.c:568:28
  100e1a:    11 80       	r1 = 2 			  ## main.c:568:28
  100e1c:    ff e1 bf 9f 	call -3082 <get_bits : 100216 >			  ## main.c:568:28
  100e20:    01 ed 5a 54 	r10 = r5 + 340 			  ## main.c:568:28
  100e24:    40 e8 a0 40 	b[r10 + 1] = r0 			  ## main.c:568:26
  100e28:    18 80       	r0 = 3 			  ## main.c:571:6
  100e2a:    0f 98       	cmp r7, 1			  ## main.c:571:6
  100e2c:    10 03       	ifs (nzcv != 0) {			  ## main.c:571:6
  100e2e:    20 80       		r0 = 4 
                               	}			  ## main.c:571:6
  100e30:    30 69       	[r6 + 16] = r0 			  ## main.c:570:31
  100e32:    00 fc 70 0c 	r0 = r7 * 12 			  ## main.c:574:7
  100e36:    49 28       	r1 = [addr(132)]  <.GCPI407_0 : 100ebc >			  ## main.c:574:7
  100e38:    09 d4       	r1 = r1 + r0 			  ## main.c:574:7
  100e3a:    01 ed 5b 30 	r11 = r5 + 304 			  ## main.c:574:7
  100e3e:    01 ed 53 3c 	r3 = r5 + 316 			  ## main.c:574:7
  100e42:    01 ed 5c 2a 	r12 = r5 + 298 
  100e46:    05 80       	r5 = 0 
  100e48:    00 fc 80 06 	r0 = r8 * 6 
  100e4c:    42 2f       	r2 = [addr(116)]  <.GCPI407_1 : 100ec0 >
  100e4e:    00 ee 2d 00 	r13 = r2 + r0 
  100e52:    20 e4 08 1c 	r8 = [addr(112)]  <.GCPI407_2 : 100ec4 >
  100e56:    18 08       	goto 48 <f1a_decoder_again_open+0x11C : 100e88 >
  100e58:    2c a1       	r4 = r5 << 1 			  ## main.c:576:33
  100e5a:    00 ee d0 04 	r0 = r13 + r4 			  ## main.c:576:33
  100e5e:    00 50       	r0 = h[r0 + 0] 			  ## main.c:576:33
  100e60:    50 e7 c0 04 	h[r12 + r4] = r0 			  ## main.c:576:31
  100e64:    27 80       	r7 = 4 
  100e66:    08 c6       	r0 = r1 
  100e68:    1a c6       	r2 = r3 
  100e6a:    05 08       	goto 10 <f1a_decoder_again_open+0x10A : 100e76 >
  100e6c:    08 e8 06 40 	r6 = b[r0 ++= 1] 			  ## main.c:578:41
  100e70:    48 e8 26 40 	b[r2 ++= 1] = r6 			  ## main.c:578:39
  100e74:    ff d3       	r7 = r7 + -1 			  ## main.c:577:3
  100e76:    af 27       	if (r7 != 0) goto -12 <f1a_decoder_again_open+0x100 : 100e6c >
  100e78:    00 ee 80 04 	r0 = r8 + r4 			  ## main.c:579:27
  100e7c:    00 50       	r0 = h[r0 + 0] 			  ## main.c:579:27
  100e7e:    50 e7 b0 04 	h[r11 + r4] = r0 			  ## main.c:579:25
  100e82:    09 d1       	r1 = r1 + 4 			  ## main.c:574:2
  100e84:    1b d1       	r3 = r3 + 4 			  ## main.c:574:2
  100e86:    6d d0       	r5 = r5 + 1 			  ## main.c:574:22
  100e88:    1d 98       	cmp r5, 3			  ## main.c:574:2
  100e8a:    e6 11       	ifs (nzcv != 0) goto -52 <f1a_decoder_again_open+0xEC : 100e58 >			  ## main.c:574:2
  100e8c:    88 c6       	r0 = r9 			  ## main.c:583:6
  100e8e:    11 80       	r1 = 2 			  ## main.c:583:6
  100e90:    ff e1 1f 9c 	call -3198 <get_bits : 100216 >			  ## main.c:583:6
  100e94:    05 c6       	r5 = r0 			  ## main.c:583:6
  100e96:    40 e8 a5 80 	b[r10 + 2] = r5 			  ## main.c:584:23
  100e9a:    88 c6       	r0 = r9 			  ## main.c:585:8
  100e9c:    29 c6       	r1 = r5 			  ## main.c:585:8
  100e9e:    ff e1 af 9b 	call -3212 <get_bits : 100216 >			  ## main.c:585:8
  100ea2:    48 80       	r0 = 9 			  ## main.c:586:26
  100ea4:    40 e8 a0 00 	b[r10 + 0] = r0 			  ## main.c:586:26
  100ea8:    88 c6       	r0 = r9 			  ## main.c:588:8
  100eaa:    29 c6       	r1 = r5 			  ## main.c:588:8
  100eac:    ff e1 3f 9b 	call -3226 <get_bits : 100216 >			  ## main.c:588:8
  100eb0:    00 e8 a1 00 	r1 = b[r10 + 0] 			  ## main.c:589:33
  100eb4:    08 d6       	r0 = r1 - r0 			  ## main.c:589:57
  100eb6:    40 e8 a0 01 	b[r10 + 4] = r0 			  ## main.c:589:31
  100eba:    1d c0       	{pc, r13-r4} = [sp++] 			  ## main.c:589:31


.GCPI407_0:
  100ebc:    d6 1c 10 00     < 1055958 : 0x101CD6 >

.GCPI407_1:
  100ec0:    c4 1c 10 00     < 1055940 : 0x101CC4 >

.GCPI407_2:
  100ec4:    fa 1c 10 00     < 1055994 : 0x101CFA >

.GCPI407_3:
  100ec8:    41 31 46 00     < 4600129 : 0x463141 >

huffdec:
  100ecc:    17 c2       	[--sp] = {rets, r7-r4} 			  ## bitstream.c:180:0
  100ece:    0c c6       	r4 = r1 			  ## bitstream.c:180:0
  100ed0:    03 c6       	r3 = r0 			  ## bitstream.c:180:0
  100ed2:    1e 48       	r6 = [r3 + 0] 			  ## bitstream.c:187:3
  100ed4:    9d 48       	r5 = [r3 + 8] 			  ## bitstream.c:186:2
  100ed6:    e8 a3       	r0 = r5 >>> 3 			  ## bitstream.c:187:3
  100ed8:    80 d5       	r0 = r0 + r6 			  ## bitstream.c:187:3
  100eda:    ff e1 1f 99 	call -3294 <unaligned32_be : 100200 >			  ## bitstream.c:187:3
  100ede:    80 f3 51 07 	r1 = r5 & 7 			  ## bitstream.c:187:3
  100ee2:    08 cf       	r0 <<= r1 			  ## bitstream.c:187:3
  100ee4:    40 bc       	r0 = r0 >> 28 			  ## bitstream.c:193:10
  100ee6:    00 a1       	r0 = r0 << 1 			  ## bitstream.c:191:10
  100ee8:    24 d4       	r4 = r4 + r0 			  ## bitstream.c:193:10
  100eea:    20 80       	r0 = 4 
  100eec:    12 08       	goto 36 <huffdec+0x46 : 100f12 >
  100eee:    2d d4       	r5 = r5 + r0 			  ## bitstream.c:196:3
  100ef0:    e8 a3       	r0 = r5 >>> 3 			  ## bitstream.c:197:4
  100ef2:    80 d5       	r0 = r0 + r6 			  ## bitstream.c:197:4
  100ef4:    ff e1 4f 98 	call -3320 <unaligned32_be : 100200 >			  ## bitstream.c:197:4
  100ef8:    80 f3 51 07 	r1 = r5 & 7 			  ## bitstream.c:197:4
  100efc:    08 cf       	r0 <<= r1 			  ## bitstream.c:197:4
  100efe:    00 f6 71 42 	r1 = uextra(r7, p:2, l:2) 			  ## bitstream.c:199:17
  100f02:    20 ee 12 1f 	r2 = 31 - r1 			  ## bitstream.c:200:11
  100f06:    50 cf       	r0 >>= r2 			  ## bitstream.c:200:11
  100f08:    7a a4       	r2 = r7 >> 4 			  ## bitstream.c:202:17
  100f0a:    80 d4       	r0 = r0 + r2 			  ## bitstream.c:202:24
  100f0c:    00 a1       	r0 = r0 << 1 			  ## bitstream.c:202:8
  100f0e:    24 d4       	r4 = r4 + r0 			  ## bitstream.c:202:8
  100f10:    48 d0       	r0 = r1 + 1 			  ## bitstream.c:199:22
  100f12:    27 50       	r7 = h[r4 + 0] 			  ## bitstream.c:194:16
  100f14:    00 f4 70 03 	tst r7, 3			  ## bitstream.c:194:2
  100f18:    ea 10       	ifs (nzcv == 0) goto -44 <huffdec+0x22 : 100eee >			  ## bitstream.c:194:2
  100f1a:    00 f6 70 42 	r0 = uextra(r7, p:2, l:2) 			  ## bitstream.c:206:2
  100f1e:    40 d5       	r0 = r0 + r5 			  ## bitstream.c:206:2
  100f20:    40 d0       	r0 = r0 + 1 			  ## bitstream.c:206:2
  100f22:    98 68       	[r3 + 8] = r0 			  ## bitstream.c:207:3
  100f24:    23 50       	r3 = h[r4 + 0] 			  ## bitstream.c:210:17
  100f26:    58 a4       	r0 = r3 >> 4 			  ## bitstream.c:210:17
  100f28:    19 ae       	r1 = r3 << 14 			  ## bitstream.c:214:23
  100f2a:    02 80       	r2 = 0 			  ## bitstream.c:214:23
  100f2c:    0e f4 00 60 	tst r0, 3584			  ## bitstream.c:211:26
  100f30:    10 03       	ifs (nzcv != 0) {			  ## bitstream.c:211:26
  100f32:    0a c6       		r2 = r1 
                               	}			  ## bitstream.c:211:26
  100f34:    80 f3 33 03 	r3 = r3 & 3 			  ## bitstream.c:211:12
  100f38:    0b 98       	cmp r3, 1			  ## bitstream.c:211:26
  100f3a:    10 03       	ifs (nzcv != 0) {			  ## bitstream.c:211:26
  100f3c:    0a c6       		r2 = r1 
                               	}			  ## bitstream.c:211:26
  100f3e:    10 da       	r0 |= r2 			  ## bitstream.c:211:26
  100f40:    11 ea ff cf 	r1 = 53247 			  ## bitstream.c:215:1
  100f44:    88 da       	r0 &= r1 			  ## bitstream.c:215:1
  100f46:    17 c0       	{pc, r7-r4} = [sp++] 			  ## bitstream.c:215:1


normdata:
  100f48:    16 c2       	[--sp] = {rets, r6-r4} 			  ## wmadec.c:116:0
  100f4a:    03 48       	r3 = [r0 + 0] 			  ## wmadec.c:120:6
  100f4c:    43 21       	if (r3 == 0) goto 40 <normdata+0x2E : 100f76 >			  ## wmadec.c:120:6
  100f4e:    0a 80       	r2 = 1 
  100f50:    fb 9f       	cmp r3, -1			  ## wmadec.c:126:6
  100f52:    d2 03       	ifs (nzcv <= 0) {			  ## wmadec.c:129:14
  100f54:    9b dc       		r3 = -r3 			  ## wmadec.c:129:14
  100f56:    03 68       		[r0 + 0] = r3 			  ## wmadec.c:129:12
  100f58:    fa 87       		r2 = -1 
                               	}			  ## wmadec.c:129:12
  100f5a:    00 f5 34 00 	r4 = clz(r3) 			  ## wmadec.c:145:2
  100f5e:    20 ee 43 08 	r3 = 8 - r4 			  ## wmadec.c:154:15
  100f62:    05 48       	r5 = [r0 + 0] 
  100f64:    c0 f7 54 03 	r4 = r5 >>> r3 			  ## wmadec.c:156:25
  100f68:    9e dc       	r6 = -r3 			  ## wmadec.c:158:29
  100f6a:    35 cf       	r5 <<= r6 			  ## wmadec.c:158:25
  100f6c:    03 98       	cmp r3, 0			  ## wmadec.c:155:6
  100f6e:    d0 03       	ifs (nzcv <= 0) {			  ## wmadec.c:155:6
  100f70:    2c c6       		r4 = r5 
                               	}			  ## wmadec.c:155:6
  100f72:    22 06       	r2 *= r4 			  ## wmadec.c:160:19
  100f74:    02 08       	goto 4 <normdata+0x32 : 100f7a >
  100f76:    93 87       	r3 = -14 
  100f78:    0a 80       	r2 = 1 
  100f7a:    02 68       	[r0 + 0] = r2 
  100f7c:    08 48       	r0 = [r1 + 0] 
  100f7e:    c0 d4       	r0 = r0 + r3 
  100f80:    08 68       	[r1 + 0] = r0 			  ## wmadec.c:123:11
  100f82:    16 c0       	{pc, r6-r4} = [sp++] 			  ## wmadec.c:123:11


wma_lsp_to_curve:
  100f84:    1e c2       	[--sp] = {rets, r14-r4} 			  ## wmadec.c:261:0
  100f86:    30 c5       	[--sp] = {macch, maccl} 			  ## wmadec.c:261:0
  100f88:    1d ed ff c8 	sp = sp + -568 			  ## wmadec.c:261:0
  100f8c:    c2 61       	[sp+ 28] = r2 			  ## wmadec.c:261:0
  100f8e:    0c c6       	r4 = r1 			  ## wmadec.c:261:0
  100f90:    05 80       	r5 = 0 			  ## wmadec.c:261:0
  100f92:    60 e9 05 89 	[sp+ 548] = r5 			  ## wmadec.c:267:6
  100f96:    60 e9 05 88 	[sp+ 544] = r5 			  ## wmadec.c:267:17
  100f9a:    24 e8 01 57 	r1 = [++ r0 = 348] 			  ## wmadec.c:270:21
  100f9e:    80 61       	[sp+ 24] = r0 
  100fa0:    40 80       	r0 = 8 
  100fa2:    81 ef 10 00 	cmp r1, 256			  ## wmadec.c:279:6
  100fa6:    10 03       	ifs (nzcv != 0) {			  ## wmadec.c:279:6
  100fa8:    80 80       		r0 = 16 
                               	}			  ## wmadec.c:279:6
  100faa:    22 80       	r2 = 4 			  ## wmadec.c:279:6
  100fac:    02 61       	[sp+ 16] = r2 			  ## wmadec.c:279:6
  100fae:    82 ef 10 00 	cmp r1, 512			  ## wmadec.c:279:6
  100fb2:    10 03       	ifs (nzcv != 0) {			  ## wmadec.c:279:6
  100fb4:    00 61       		[sp+ 16] = r0 
                               	}			  ## wmadec.c:279:6
  100fb6:    c0 41       	r0 = [sp+ 28] 
  100fb8:    00 ed 02 0c 	r2 = r0 + 12 			  ## wmadec.c:289:7
  100fbc:    c2 60       	[sp+ 12] = r2 			  ## wmadec.c:289:7
  100fbe:    40 88       	r0 += 8 			  ## wmadec.c:289:7
  100fc0:    80 60       	[sp+ 8] = r0 			  ## wmadec.c:270:31
  100fc2:    c8 a1       	r0 = r1 >>> 1 			  ## wmadec.c:270:31
  100fc4:    40 60       	[sp+ 4] = r0 
  100fc6:    fe 83       	r6 = 127 
  100fc8:    28 ea 0e 00 	r14 = 8388608 
  100fcc:    55 ea 01 00 	r13 = 1 
  100fd0:    07 80       	r7 = 0 			  ## wmadec.c:327:13
  100fd2:    53 ea 00 00 	r11 = 0 			  ## wmadec.c:327:13
  100fd6:    04 60       	[sp] = r4 			  ## wmadec.c:327:13
  100fd8:    15 09       	goto 554 <wma_lsp_to_curve+0x280 : 101204 >			  ## wmadec.c:327:13
  100fda:    00 80       	r0 = 0 
  100fdc:    60 e9 00 89 	[sp+ 548] = r0 			  ## wmadec.c:291:9
  100fe0:    02 80       	r2 = 0 			  ## wmadec.c:291:9
  100fe2:    60 e9 00 88 	[sp+ 544] = r0 			  ## wmadec.c:292:9
  100fe6:    05 98       	cmp r5, 0			  ## wmadec.c:292:9
  100fe8:    a4 03       	ifs (nzcv >= 0) {			  ## wmadec.c:292:9
  100fea:    20 e4 00 c1 		r0 = [addr(772)] 
                               	} else { <.GCPI410_3 : 1012f0 >			  ## wmadec.c:292:9
  100fee:    20 e4 00 bf 		r0 = [addr(764)] 
                               	} <.GCPI410_2 : 1012ec >			  ## wmadec.c:292:9
  100ff2:    29 a2       	r1 = r5 << 2 			  ## wmadec.c:292:9
  100ff4:    20 e7 00 01 	r0 = [r0 + r1] 			  ## wmadec.c:292:9
  100ff8:    41 40       	r1 = [sp+ 4] 			  ## wmadec.c:294:7
  100ffa:    99 ce       	cmp r11, r1			  ## wmadec.c:294:7
  100ffc:    aa 03       	ifs (nzcv >= 0) {			  ## wmadec.c:305:13
  100ffe:    01 41       		r1 = [sp+ 16] 			  ## wmadec.c:305:13
  101000:    6d d6       		r5 = r5 - r1 			  ## wmadec.c:305:13
  101002:    80 dc       		r0 = -r0 
                               	} else {
  101004:    01 41       		r1 = [sp+ 16] 			  ## wmadec.c:319:13
  101006:    6d d4       		r5 = r5 + r1 
                               	}			  ## wmadec.c:319:13
  101008:    c1 41       	r1 = [sp+ 28] 			  ## wmadec.c:321:16
  10100a:    09 48       	r1 = [r1 + 0] 			  ## wmadec.c:321:16
  10100c:    20 f7 09 06 	r9 = r0 << 6 			  ## wmadec.c:321:16
  101010:    00 ee 90 01 	r0 = r9 + r1 			  ## wmadec.c:321:14
  101014:    60 e9 00 8c 	[sp+ 560] = r0 			  ## wmadec.c:321:10
  101018:    60 e9 02 89 	[sp+ 548] = r2 			  ## wmadec.c:322:9
  10101c:    11 80       	r1 = 2 
  10101e:    82 40       	r2 = [sp+ 8] 
  101020:    0b 08       	goto 22 <wma_lsp_to_curve+0xB4 : 101038 >
  101022:    28 e8 23 02 	r3 = [r2 ++= 8] 			  ## wmadec.c:327:19
  101026:    00 ee 38 09 	r8 = r3 + r9 			  ## wmadec.c:327:17
  10102a:    80 fd 80 00 	macc = r0 * r8 (s) 			  ## wmadec.c:331:4
  10102e:    a0 fd ed 00 	macc += r13 * r14 (s) 			  ## wmadec.c:332:4
  101032:    89 d0       	r1 = r1 + 2 			  ## wmadec.c:324:25
  101034:    c0 f9 00 18 	r0 = macc >>> 24 			  ## wmadec.c:333:4
  101038:    41 98       	cmp r1, 8			  ## wmadec.c:324:3
  10103a:    f3 1d       	ifs (nzcv <= 0) goto -26 <wma_lsp_to_curve+0x9E : 101022 >			  ## wmadec.c:324:3
  10103c:    60 e9 08 8b 	[sp+ 556] = r8 			  ## wmadec.c:327:13
  101040:    60 e9 00 8c 	[sp+ 560] = r0 			  ## wmadec.c:333:4
  101044:    02 ed f0 30 	r0 = sp + 560 			  ## wmadec.c:333:4
  101048:    02 ed f1 24 	r1 = sp + 548 
  10104c:    ff e1 cf f7 	call -264 <normdata : 100f48 >			  ## wmadec.c:337:3
  101050:    20 e9 00 89 	r0 = [sp+ 548] 			  ## wmadec.c:339:7
  101054:    00 9f       	cmp r0, -32			  ## wmadec.c:339:7
  101056:    47 61       	[sp+ 20] = r7 			  ## wmadec.c:339:7
  101058:    b7 03       	ifs (nzcv < 0) {
  10105a:    09 80       		r1 = 1 
  10105c:    60 e9 01 8c 		[sp+ 560] = r1 			  ## wmadec.c:341:11
  101060:    00 87       		r0 = -32 			  ## wmadec.c:341:11
  101062:    60 e9 00 89 		[sp+ 548] = r0 
                               	} else {			  ## wmadec.c:342:10
  101066:    20 e9 01 8c 		r1 = [sp+ 560] 
                               	}			  ## wmadec.c:342:10
  10106a:    00 a1       	r0 = r0 << 1 			  ## wmadec.c:345:13
  10106c:    60 e9 00 89 	[sp+ 548] = r0 			  ## wmadec.c:345:9
  101070:    c9 06       	macc = r1 * r1 (s) 			  ## wmadec.c:347:3
  101072:    a0 fd ed 00 	macc += r13 * r14 (s) 			  ## wmadec.c:348:3
  101076:    c0 f9 00 18 	r0 = macc >>> 24 			  ## wmadec.c:349:3
  10107a:    60 e9 00 8c 	[sp+ 560] = r0 			  ## wmadec.c:349:3
  10107e:    04 80       	r4 = 0 			  ## wmadec.c:349:3
  101080:    60 e9 04 8a 	[sp+ 552] = r4 			  ## wmadec.c:351:12
  101084:    17 ee 90 80 	r0 = r9 + 16777216 			  ## wmadec.c:352:30
  101088:    60 e9 00 8b 	[sp+ 556] = r0 			  ## wmadec.c:352:13
  10108c:    02 ed f0 30 	r0 = sp + 560 			  ## wmadec.c:352:13
  101090:    02 ed f1 24 	r1 = sp + 548 
  101094:    ff e1 8f f5 	call -336 <normdata : 100f48 >			  ## wmadec.c:353:4
  101098:    02 ed f0 2c 	r0 = sp + 556 
  10109c:    02 ed f1 28 	r1 = sp + 552 
  1010a0:    ff e1 2f f5 	call -348 <normdata : 100f48 >			  ## wmadec.c:354:4
  1010a4:    20 e9 00 8b 	r0 = [sp+ 556] 			  ## wmadec.c:356:4
  1010a8:    20 e9 01 8c 	r1 = [sp+ 560] 			  ## wmadec.c:356:4
  1010ac:    c8 06       	macc = r1 * r0 (s) 			  ## wmadec.c:356:4
  1010ae:    a0 fd ed 00 	macc += r13 * r14 (s) 			  ## wmadec.c:357:4
  1010b2:    c0 f9 0a 18 	r10 = macc >>> 24 			  ## wmadec.c:358:4
  1010b6:    60 e9 0a 8c 	[sp+ 560] = r10 			  ## wmadec.c:358:4
  1010ba:    20 e9 01 8a 	r1 = [sp+ 552] 			  ## wmadec.c:359:13
  1010be:    20 e9 02 89 	r2 = [sp+ 548] 			  ## wmadec.c:359:10
  1010c2:    00 ee 2c 01 	r12 = r2 + r1 			  ## wmadec.c:359:10
  1010c6:    60 e9 0c 89 	[sp+ 548] = r12 			  ## wmadec.c:359:10
  1010ca:    c1 41       	r1 = [sp+ 28] 			  ## wmadec.c:362:16
  1010cc:    49 48       	r1 = [r1 + 4] 			  ## wmadec.c:362:16
  1010ce:    89 cb       	r1 += r9 			  ## wmadec.c:362:14
  1010d0:    60 e9 01 8d 	[sp+ 564] = r1 			  ## wmadec.c:362:10
  1010d4:    07 80       	r7 = 0 			  ## wmadec.c:362:10
  1010d6:    60 e9 04 88 	[sp+ 544] = r4 			  ## wmadec.c:363:9
  1010da:    1a 80       	r2 = 3 			  ## wmadec.c:363:9
  1010dc:    c3 40       	r3 = [sp+ 12] 
  1010de:    04 40       	r4 = [sp] 
  1010e0:    09 08       	goto 18 <wma_lsp_to_curve+0x170 : 1010f4 >
  1010e2:    28 e8 30 02 	r0 = [r3 ++= 8] 			  ## wmadec.c:368:19
  1010e6:    88 cb       	r0 += r9 			  ## wmadec.c:368:17
  1010e8:    c8 06       	macc = r1 * r0 (s) 			  ## wmadec.c:372:4
  1010ea:    a0 fd ed 00 	macc += r13 * r14 (s) 			  ## wmadec.c:373:4
  1010ee:    92 d0       	r2 = r2 + 2 			  ## wmadec.c:365:25
  1010f0:    c0 f9 01 18 	r1 = macc >>> 24 			  ## wmadec.c:374:4
  1010f4:    4a 98       	cmp r2, 9			  ## wmadec.c:365:3
  1010f6:    f5 1d       	ifs (nzcv <= 0) goto -22 <wma_lsp_to_curve+0x15E : 1010e2 >			  ## wmadec.c:365:3
  1010f8:    60 e9 00 8b 	[sp+ 556] = r0 			  ## wmadec.c:368:13
  1010fc:    60 e9 01 8d 	[sp+ 564] = r1 			  ## wmadec.c:374:4
  101100:    02 ed f0 34 	r0 = sp + 564 			  ## wmadec.c:374:4
  101104:    02 ed f1 20 	r1 = sp + 544 
  101108:    ff e1 ef f1 	call -452 <normdata : 100f48 >			  ## wmadec.c:377:3
  10110c:    20 e9 00 88 	r0 = [sp+ 544] 			  ## wmadec.c:378:7
  101110:    00 9f       	cmp r0, -32			  ## wmadec.c:378:7
  101112:    b7 03       	ifs (nzcv < 0) {
  101114:    09 80       		r1 = 1 
  101116:    60 e9 01 8d 		[sp+ 564] = r1 			  ## wmadec.c:380:11
  10111a:    00 87       		r0 = -32 			  ## wmadec.c:380:11
  10111c:    60 e9 00 88 		[sp+ 544] = r0 
                               	} else {			  ## wmadec.c:381:10
  101120:    20 e9 01 8d 		r1 = [sp+ 564] 
                               	}			  ## wmadec.c:381:10
  101124:    00 a1       	r0 = r0 << 1 			  ## wmadec.c:384:13
  101126:    60 e9 00 88 	[sp+ 544] = r0 			  ## wmadec.c:384:9
  10112a:    c9 06       	macc = r1 * r1 (s) 			  ## wmadec.c:386:3
  10112c:    a0 fd ed 00 	macc += r13 * r14 (s) 			  ## wmadec.c:387:3
  101130:    c0 f9 00 18 	r0 = macc >>> 24 			  ## wmadec.c:388:3
  101134:    60 e9 00 8d 	[sp+ 564] = r0 			  ## wmadec.c:388:3
  101138:    60 e9 07 8a 	[sp+ 552] = r7 			  ## wmadec.c:390:12
  10113c:    27 ee 90 80 	r0 = 16777216 - r9 			  ## wmadec.c:391:30
  101140:    60 e9 00 8b 	[sp+ 556] = r0 			  ## wmadec.c:391:13
  101144:    02 ed f0 34 	r0 = sp + 564 			  ## wmadec.c:391:13
  101148:    02 ed f1 20 	r1 = sp + 544 
  10114c:    ff e1 cf ef 	call -520 <normdata : 100f48 >			  ## wmadec.c:392:4
  101150:    02 ed f0 2c 	r0 = sp + 556 
  101154:    02 ed f1 28 	r1 = sp + 552 
  101158:    ff e1 6f ef 	call -532 <normdata : 100f48 >			  ## wmadec.c:393:4
  10115c:    20 e9 08 8b 	r8 = [sp+ 556] 			  ## wmadec.c:395:4
  101160:    20 e9 00 8d 	r0 = [sp+ 564] 			  ## wmadec.c:395:4
  101164:    80 fd 80 00 	macc = r0 * r8 (s) 			  ## wmadec.c:395:4
  101168:    a0 fd ed 00 	macc += r13 * r14 (s) 			  ## wmadec.c:396:4
  10116c:    c0 f9 00 18 	r0 = macc >>> 24 			  ## wmadec.c:397:4
  101170:    60 e9 00 8d 	[sp+ 564] = r0 			  ## wmadec.c:397:4
  101174:    20 e9 01 8a 	r1 = [sp+ 552] 			  ## wmadec.c:398:13
  101178:    20 e9 02 88 	r2 = [sp+ 544] 			  ## wmadec.c:398:10
  10117c:    89 d4       	r1 = r1 + r2 			  ## wmadec.c:398:10
  10117e:    60 e9 01 88 	[sp+ 544] = r1 			  ## wmadec.c:398:10
  101182:    a1 ce       	cmp r12, r1			  ## wmadec.c:401:7
  101184:    0d 1a       	ifs (nzcv >= 0) goto 26 <wma_lsp_to_curve+0x21C : 1011a0 >			  ## wmadec.c:401:7
  101186:    40 ee 12 0c 	r2 = r1 - r12 			  ## wmadec.c:403:36
  10118a:    d3 d3       	r3 = r2 + -1 			  ## wmadec.c:403:44
  10118c:    00 f7 d3 03 	r3 = r13 << r3 			  ## wmadec.c:403:26
  101190:    93 cb       	r3 += r10 			  ## wmadec.c:403:21
  101192:    c0 f7 3a 02 	r10 = r3 >>> r2 			  ## wmadec.c:403:51
  101196:    60 e9 0a 8c 	[sp+ 560] = r10 			  ## wmadec.c:403:11
  10119a:    60 e9 01 89 	[sp+ 548] = r1 			  ## wmadec.c:404:10
  10119e:    0b 08       	goto 22 <wma_lsp_to_curve+0x232 : 1011b6 >			  ## wmadec.c:404:10
  1011a0:    a1 ce       	cmp r12, r1			  ## wmadec.c:408:8
  1011a2:    09 1d       	ifs (nzcv <= 0) goto 18 <wma_lsp_to_curve+0x232 : 1011b6 >			  ## wmadec.c:408:8
  1011a4:    40 ee c1 01 	r1 = r12 - r1 			  ## wmadec.c:409:37
  1011a8:    ca d3       	r2 = r1 + -1 			  ## wmadec.c:409:45
  1011aa:    00 f7 d2 02 	r2 = r13 << r2 			  ## wmadec.c:409:27
  1011ae:    80 d4       	r0 = r0 + r2 			  ## wmadec.c:409:22
  1011b0:    c8 cf       	r0 >>>= r1 			  ## wmadec.c:409:52
  1011b2:    60 e9 00 8d 	[sp+ 564] = r0 			  ## wmadec.c:409:12
  1011b6:    90 cb       	r0 += r10 			  ## wmadec.c:414:20
  1011b8:    60 e9 00 8c 	[sp+ 560] = r0 			  ## wmadec.c:414:10
  1011bc:    02 ed f0 30 	r0 = sp + 560 			  ## wmadec.c:414:10
  1011c0:    02 ed f1 24 	r1 = sp + 548 
  1011c4:    ff e1 0f ec 	call -640 <normdata : 100f48 >			  ## wmadec.c:415:3
  1011c8:    20 e9 00 89 	r0 = [sp+ 548] 			  ## wmadec.c:417:8
  1011cc:    06 ce       	cmp r0, r6			  ## wmadec.c:417:25
  1011ce:    03 1a       	ifs (nzcv >= 0) goto 6 <wma_lsp_to_curve+0x252 : 1011d6 >			  ## wmadec.c:417:25
  1011d0:    20 e9 01 8c 	r1 = [sp+ 560] 
  1011d4:    07 08       	goto 14 <wma_lsp_to_curve+0x260 : 1011e4 >
  1011d6:    20 e9 01 8c 	r1 = [sp+ 560] 			  ## wmadec.c:417:52
  1011da:    06 ce       	cmp r0, r6			  ## wmadec.c:417:48
  1011dc:    11 11       	ifs (nzcv != 0) goto 34 <wma_lsp_to_curve+0x27C : 101200 >			  ## wmadec.c:417:48
  1011de:    47 41       	r7 = [sp+ 20] 
  1011e0:    0f ce       	cmp r1, r7
  1011e2:    02 1a       	ifs (nzcv >= 0) goto 4 <wma_lsp_to_curve+0x264 : 1011e8 >
  1011e4:    06 c6       	r6 = r0 
  1011e6:    0f c6       	r7 = r1 
  1011e8:    20 f7 b2 02 	r2 = r11 << 2 			  ## wmadec.c:423:3
  1011ec:    60 e7 41 02 	[r4 + r2] = r1 			  ## wmadec.c:423:10
  1011f0:    01 91       	r1 = sp + 32 			  ## wmadec.c:423:10
  1011f2:    40 e7 10 0b 	b[r1 + r11] = r0 			  ## wmadec.c:424:17
  1011f6:    00 ed bb 01 	r11 = r11 + 1 			  ## wmadec.c:289:33
  1011fa:    80 41       	r0 = [sp+ 24] 
  1011fc:    01 48       	r1 = [r0 + 0] 
  1011fe:    02 08       	goto 4 <wma_lsp_to_curve+0x280 : 101204 >
  101200:    47 41       	r7 = [sp+ 20] 
  101202:    f2 0f       	goto -28 <wma_lsp_to_curve+0x264 : 1011e8 >
  101204:    99 ce       	cmp r11, r1			  ## wmadec.c:289:2
  101206:    ff fb 8b ee 	ifs (nzcv < 0) goto -560 <wma_lsp_to_curve+0x56 : 100fda >			  ## wmadec.c:289:2
  10120a:    76 c6       	r14 = r6 
  10120c:    07 98       	cmp r7, 0
  10120e:    65 10       	ifs (nzcv == 0) goto 202 <wma_lsp_to_curve+0x356 : 1012da >
  101210:    54 ea 00 00 	r12 = 0 
  101214:    28 ea 02 00 	r2 = 8388608 
  101218:    bb 80       	r3 = 23 
  10121a:    0d 80       	r5 = 1 
  10121c:    08 08       	goto 16 <wma_lsp_to_curve+0x2AA : 10122e >
  10121e:    17 ce       	cmp r2, r7			  ## wmadec.c:438:8
  101220:    a2 03       	ifs (nzcv >= 0) {			  ## wmadec.c:440:23
  101222:    d2 d7       		r2 = r2 - r7 			  ## wmadec.c:440:23
  101224:    00 f7 50 03 		r0 = r5 << r3 			  ## wmadec.c:441:30
  101228:    44 cb       		r12 += r0 
                               	}			  ## wmadec.c:441:25
  10122a:    db d3       	r3 = r3 + -1 			  ## wmadec.c:444:22
  10122c:    12 a1       	r2 = r2 << 1 			  ## wmadec.c:443:23
  10122e:    fb 9f       	cmp r3, -1			  ## wmadec.c:436:3
  101230:    f6 1c       	ifs (nzcv > 0) goto -20 <wma_lsp_to_curve+0x29A : 10121e >			  ## wmadec.c:436:3
  101232:    02 80       	r2 = 0 
  101234:    28 ea 08 00 	r8 = 8388608 
  101238:    53 ea 01 00 	r11 = 1 
  10123c:    00 ed fd 20 	r13 = sp + 32 
  101240:    20 e4 09 28 	r9 = [addr(160)]  <.GCPI410_0 : 1012e4 >
  101244:    20 e4 0a 28 	r10 = [addr(160)]  <.GCPI410_1 : 1012e8 >
  101248:    46 08       	goto 140 <wma_lsp_to_curve+0x352 : 1012d6 >
  10124a:    20 48       	r0 = [r4 + 0] 			  ## wmadec.c:454:4
  10124c:    80 fd c0 00 	macc = r0 * r12 (s) 			  ## wmadec.c:454:4
  101250:    a0 fd 8b 00 	macc += r11 * r8 (s) 			  ## wmadec.c:455:4
  101254:    c0 f9 00 18 	r0 = macc >>> 24 			  ## wmadec.c:456:4
  101258:    80 e7 d7 02 	r7 = b[r13 + r2] (s) 			  ## wmadec.c:458:24
  10125c:    c3 aa       	r3 = r0 >>> 10 			  ## wmadec.c:459:20
  10125e:    23 68       	[r4 + 0] = r3 			  ## wmadec.c:459:11
  101260:    1a 10       	ifs (nzcv == 0) goto 52 <wma_lsp_to_curve+0x312 : 101296 >
  101262:    09 80       	r1 = 1 
  101264:    fb 9f       	cmp r3, -1			  ## wmadec.c:175:6
  101266:    d2 03       	ifs (nzcv <= 0) {			  ## wmadec.c:178:14
  101268:    9b dc       		r3 = -r3 			  ## wmadec.c:178:14
  10126a:    23 68       		[r4 + 0] = r3 			  ## wmadec.c:178:12
  10126c:    f9 87       		r1 = -1 
                               	}			  ## wmadec.c:178:12
  10126e:    40 ee 77 0e 	r7 = r7 - r14 			  ## wmadec.c:458:22
  101272:    00 f5 30 00 	r0 = clz(r3) 			  ## wmadec.c:194:2
  101276:    20 ee 03 1a 	r3 = 26 - r0 			  ## wmadec.c:203:16
  10127a:    20 48       	r0 = [r4 + 0] 
  10127c:    c0 f7 05 03 	r5 = r0 >>> r3 			  ## wmadec.c:205:25
  101280:    26 c6       	r6 = r4 			  ## wmadec.c:205:25
  101282:    9c dc       	r4 = -r3 			  ## wmadec.c:207:29
  101284:    20 cf       	r0 <<= r4 			  ## wmadec.c:207:25
  101286:    03 98       	cmp r3, 0			  ## wmadec.c:204:6
  101288:    d0 03       	ifs (nzcv <= 0) {			  ## wmadec.c:204:6
  10128a:    05 c6       		r5 = r0 
                               	}			  ## wmadec.c:204:6
  10128c:    29 06       	r1 *= r5 			  ## wmadec.c:209:19
  10128e:    31 68       	[r6 + 0] = r1 			  ## wmadec.c:209:12
  101290:    db d5       	r3 = r3 + r7 			  ## wmadec.c:210:20
  101292:    34 c6       	r4 = r6 
  101294:    02 08       	goto 4 <wma_lsp_to_curve+0x316 : 10129a >
  101296:    01 80       	r1 = 0 
  101298:    03 80       	r3 = 0 
  10129a:    98 dc       	r0 = -r3 			  ## wmadec.c:462:11
  10129c:    43 a2       	r3 = r0 >> 2 			  ## wmadec.c:463:31
  10129e:    40 e7 d3 02 	b[r13 + r2] = r3 			  ## wmadec.c:463:18
  1012a2:    80 f3 00 03 	r0 = r0 & 3 			  ## wmadec.c:462:21
  1012a6:    00 a2       	r0 = r0 << 2 			  ## wmadec.c:470:11
  1012a8:    20 e7 90 00 	r0 = [r9 + r0] 			  ## wmadec.c:470:11
  1012ac:    09 a2       	r1 = r1 << 2 			  ## wmadec.c:465:24
  1012ae:    91 cb       	r1 += r10 			  ## wmadec.c:465:11
  1012b0:    20 e8 11 e0 	r1 = [r1 + -128] 			  ## wmadec.c:465:11
  1012b4:    c8 06       	macc = r1 * r0 (s) 			  ## wmadec.c:472:4
  1012b6:    98 c9       	r0 = r3.b (s) 			  ## wmadec.c:473:4
  1012b8:    20 ee 01 10 	r1 = 16 - r0 			  ## wmadec.c:473:4
  1012bc:    00 f7 b1 01 	r1 = r11 << r1 			  ## wmadec.c:473:4
  1012c0:    a0 fd 1b 00 	macc += r11 * r1 (s) 			  ## wmadec.c:473:4
  1012c4:    20 ee 00 11 	r0 = 17 - r0 			  ## wmadec.c:474:4
  1012c8:    80 f9 00 00 	r0 = macc >>> r0 			  ## wmadec.c:474:4
  1012cc:    68 e8 40 01 	[r4 ++= 4] = r0 			  ## wmadec.c:474:4
  1012d0:    52 d0       	r2 = r2 + 1 			  ## wmadec.c:450:34
  1012d2:    80 41       	r0 = [sp+ 24] 
  1012d4:    01 48       	r1 = [r0 + 0] 
  1012d6:    11 ce       	cmp r2, r1			  ## wmadec.c:450:3
  1012d8:    b8 1b       	ifs (nzcv < 0) goto -144 <wma_lsp_to_curve+0x2C6 : 10124a >			  ## wmadec.c:450:3
  1012da:    02 ed ff 38 	sp = sp + 568 
  1012de:    30 c4       	{macch, maccl} = [sp++] 
  1012e0:    1e c0       	{pc, r14-r4} = [sp++] 
  1012e2:    00 00       	nop


.GCPI410_0:
  1012e4:    ac 2f 10 00     < 1060780 : 0x102FAC >

.GCPI410_1:
  1012e8:    bc 2f 10 00     < 1060796 : 0x102FBC >

.GCPI410_2:
  1012ec:    cc d7 11 00     < 1169356 : 0x11D7CC >

.GCPI410_3:
  1012f0:    28 1d 10 00     < 1056040 : 0x101D28 >

f1a_decoder_run:
  1012f4:    1e c2       	[--sp] = {rets, r14-r4} 			  ## wmadec.c:1118:0
  1012f6:    30 c5       	[--sp] = {macch, maccl} 			  ## wmadec.c:1118:0
  1012f8:    bc cd       	sp += -68 			  ## wmadec.c:1118:0
  1012fa:    09 ed 08 6c 	r8 = r0 + 2412 			  ## wmadec.c:1118:0
  1012fe:    90 e8 82 10 	r2 = h[r8 + 64] (s) 			  ## wmadec.c:1121:9
  101302:    c0 61       	[sp+ 28] = r0 			  ## wmadec.c:1121:9
  101304:    09 ed 09 ac 	r9 = r0 + 2476 
  101308:    0a 98       	cmp r2, 1			  ## wmadec.c:1121:6
  10130a:    28 1b       	ifs (nzcv < 0) goto 80 <f1a_decoder_run+0x68 : 10135c >			  ## wmadec.c:1121:6
  10130c:    20 e8 90 0a 	r0 = [r9 + 40] 			  ## wmadec.c:1125:47
  101310:    20 e8 93 0c 	r3 = [r9 + 48] 			  ## wmadec.c:1125:26
  101314:    10 e8 91 80 	r1 = h[r9 + 2] 			  ## wmadec.c:1125:54
  101318:    c4 41       	r4 = [sp+ 28] 
  10131a:    09 d5       	r1 = r1 + r4 			  ## wmadec.c:1123:46
  10131c:    0c ed 11 24 	r1 = r1 + 3108 			  ## wmadec.c:1125:54
  101320:    ab 01       	call r3			  ## wmadec.c:1125:12
  101322:    90 e8 81 10 	r1 = h[r8 + 64] (s) 			  ## wmadec.c:1126:16
  101326:    01 ce       	cmp r0, r1			  ## wmadec.c:1126:7
  101328:    0d 1a       	ifs (nzcv >= 0) goto 26 <f1a_decoder_run+0x50 : 101344 >			  ## wmadec.c:1126:7
  10132a:    49 c9       	r1 = r1.l 			  ## wmadec.c:1126:19
  10132c:    09 ed 42 ae 	r2 = r4 + 2478 			  ## wmadec.c:1128:15
  101330:    12 50       	r2 = h[r2 + 0] 			  ## wmadec.c:1128:15
  101332:    12 d4       	r2 = r2 + r0 			  ## wmadec.c:1128:15
  101334:    50 e8 92 80 	h[r9 + 2] = r2 			  ## wmadec.c:1128:15
  101338:    08 d6       	r0 = r1 - r0 			  ## wmadec.c:1129:24
  10133a:    50 e8 90 00 	h[r9 + 0] = r0 			  ## wmadec.c:1129:13
  10133e:    05 80       	r5 = 0 
  101340:    00 fa c0 49 	goto 2360 <f1a_decoder_run+0x988 : 101c7c >
  101344:    05 80       	r5 = 0 
  101346:    60 e8 95 00 	[r9 + 0] = r5 			  ## wmadec.c:1132:12
  10134a:    00 e8 90 3f 	r0 = b[r9 + -4] 			  ## wmadec.c:1134:10
  10134e:    60 20       	if (r0 == 0) goto 12 <f1a_decoder_run+0x68 : 10135c >
  101350:    c0 41       	r0 = [sp+ 28] 			  ## wmadec.c:1136:8
  101352:    ff e1 bf ae 	call -2602 <wma_window : 10092c >			  ## wmadec.c:1136:8
  101356:    00 98       	cmp r0, 0			  ## wmadec.c:1136:8
  101358:    00 fb 01 49 	ifs (nzcv != 0) goto 2336 <f1a_decoder_run+0x988 : 101c7c >			  ## wmadec.c:1136:8
  10135c:    c4 41       	r4 = [sp+ 28] 
  10135e:    20 c6       	r0 = r4 			  ## wmadec.c:1143:2
  101360:    ff e1 cf 71 	call -4552 <fill_buf : 10019c >			  ## wmadec.c:1143:2
  101364:    00 e8 90 41 	r0 = b[r9 + 5] 			  ## wmadec.c:1144:9
  101368:    01 ed 4c 28 	r12 = r4 + 296 			  ## wmadec.c:1144:9
  10136c:    60 21       	if (r0 == 0) goto 44 <f1a_decoder_run+0xA6 : 10139a >			  ## wmadec.c:1144:6
  10136e:    01 e5 c0 fe 	r0, r1 = d[r12 + -8] 			  ## wmadec.c:1146:15
  101372:    08 ce       	cmp r1, r0			  ## wmadec.c:1146:43
  101374:    04 13       	if (nzcv < 0) goto 8 <f1a_decoder_run+0x8A : 10137e >			  ## wmadec.c:1146:43
  101376:    20 e8 c0 fc 	r0 = [r12 + -16] 			  ## wmadec.c:1146:53
  10137a:    48 98       	cmp r0, 9			  ## wmadec.c:1146:72
  10137c:    03 1b       	ifs (nzcv < 0) goto 6 <f1a_decoder_run+0x90 : 101384 >			  ## wmadec.c:1146:72
  10137e:    00 e8 80 00 	r0 = b[r8 + 0] 			  ## wmadec.c:1146:79
  101382:    40 23       	if (r0 == 0) goto 104 <f1a_decoder_run+0xF8 : 1013ec >			  ## wmadec.c:1146:79
  101384:    00 e8 90 81 	r0 = b[r9 + 6] 			  ## wmadec.c:1148:11
  101388:    f0 20       	if (r0 == 0) goto 30 <f1a_decoder_run+0xB4 : 1013a8 >			  ## wmadec.c:1148:8
  10138a:    c0 41       	r0 = [sp+ 28] 			  ## wmadec.c:1150:5
  10138c:    ff e1 0f c9 	call -1760 <findFileEnd : 100cb0 >			  ## wmadec.c:1150:5
  101390:    20 e8 90 02 	r0 = [r9 + 8] 			  ## wmadec.c:1151:30
  101394:    20 e8 c1 fe 	r1 = [r12 + -8] 			  ## wmadec.c:1151:15
  101398:    22 08       	goto 68 <f1a_decoder_run+0xEA : 1013de >			  ## wmadec.c:1151:15
  10139a:    20 e8 c0 fc 	r0 = [r12 + -16] 			  ## wmadec.c:1174:13
  10139e:    05 82       	r5 = 64 			  ## wmadec.c:1174:13
  1013a0:    48 98       	cmp r0, 9			  ## wmadec.c:1174:7
  1013a2:    24 1a       	ifs (nzcv >= 0) goto 72 <f1a_decoder_run+0xF8 : 1013ec >			  ## wmadec.c:1174:7
  1013a4:    00 fa a0 46 	goto 2260 <f1a_decoder_run+0x988 : 101c7c >			  ## wmadec.c:1174:7
  1013a8:    c0 41       	r0 = [sp+ 28] 
  1013aa:    01 ed 05 24 	r5 = r0 + 292 			  ## wmadec.c:1146:33
  1013ae:    01 ed 01 20 	r1 = r0 + 288 			  ## wmadec.c:1146:15
  1013b2:    00 e5 93 0d 	r3, r0 = d[r9 + 52] 			  ## wmadec.c:1157:49
  1013b6:    2a c6       	r2 = r5 			  ## wmadec.c:1157:5
  1013b8:    ab 01       	call r3			  ## wmadec.c:1157:5
  1013ba:    20 e8 c1 fe 	r1 = [r12 + -8] 			  ## wmadec.c:1159:15
  1013be:    f9 9f       	cmp r1, -1			  ## wmadec.c:1159:9
  1013c0:    00 fb b0 46 	ifs (nzcv == 0) goto 2262 <f1a_decoder_run+0x9A6 : 101c9a >			  ## wmadec.c:1159:9
  1013c4:    28 48       	r0 = [r5 + 0] 			  ## wmadec.c:1161:15
  1013c6:    f8 9f       	cmp r0, -1			  ## wmadec.c:1161:9
  1013c8:    08 11       	ifs (nzcv != 0) goto 16 <f1a_decoder_run+0xE6 : 1013da >			  ## wmadec.c:1161:9
  1013ca:    c0 41       	r0 = [sp+ 28] 			  ## wmadec.c:1163:6
  1013cc:    ff e1 0f c7 	call -1824 <findFileEnd : 100cb0 >			  ## wmadec.c:1163:6
  1013d0:    08 80       	r0 = 1 			  ## wmadec.c:1164:22
  1013d2:    40 e8 90 81 	b[r9 + 6] = r0 			  ## wmadec.c:1164:22
  1013d6:    20 e8 c1 fe 	r1 = [r12 + -8] 			  ## wmadec.c:1164:22
  1013da:    20 e8 90 02 	r0 = [r9 + 8] 			  ## wmadec.c:1166:30
  1013de:    05 82       	r5 = 64 
  1013e0:    08 ce       	cmp r1, r0
  1013e2:    00 fb b2 44 	if (nzcv >= 0) goto 2198 <f1a_decoder_run+0x988 : 101c7c >
  1013e6:    c0 41       	r0 = [sp+ 28] 
  1013e8:    ff e1 0f cc 	call -1664 <f1a_decoder_again_open : 100d6c >
  1013ec:    00 80       	r0 = 0 
  1013ee:    40 e8 80 00 	b[r8 + 0] = r0 			  ## wmadec.c:1180:17
  1013f2:    20 e8 91 05 	r1 = [r9 + 20] 			  ## wmadec.c:1181:9
  1013f6:    61 20       	if (r1 == 0) goto 12 <f1a_decoder_run+0x110 : 101404 >			  ## wmadec.c:1181:9
  1013f8:    60 e8 90 05 	[r9 + 20] = r0 			  ## wmadec.c:1183:17
  1013fc:    20 e8 90 04 	r0 = [r9 + 16] 			  ## wmadec.c:1184:20
  101400:    60 e8 c0 fb 	[r12 + -20] = r0 			  ## wmadec.c:1184:15
  101404:    20 e8 80 ff 	r0 = [r8 + -4] 			  ## wmadec.c:772:16
  101408:    40 d0       	r0 = r0 + 1 			  ## wmadec.c:772:16
  10140a:    60 e8 80 ff 	[r8 + -4] = r0 			  ## wmadec.c:772:16
  10140e:    c5 41       	r5 = [sp+ 28] 			  ## wmadec.c:772:16
  101410:    01 ed 5a 58 	r10 = r5 + 344 			  ## wmadec.c:772:16
  101414:    00 e8 a1 bf 	r1 = b[r10 + -2] 			  ## wmadec.c:774:6
  101418:    01 ed 50 57 	r0 = r5 + 343 			  ## wmadec.c:777:30
  10141c:    00 58       	r0 = b[r0 + 0] 			  ## wmadec.c:777:30
  10141e:    40 e8 a0 40 	b[r10 + 1] = r0 			  ## wmadec.c:777:25
  101422:    00 e8 a0 00 	r0 = b[r10 + 0] 			  ## wmadec.c:778:25
  101426:    40 e8 a0 ff 	b[r10 + -1] = r0 			  ## wmadec.c:778:20
  10142a:    01 ed 5b 0c 	r11 = r5 + 268 			  ## wmadec.c:779:19
  10142e:    98 c6       	r0 = r11 			  ## wmadec.c:779:6
  101430:    ff e1 1f 6f 	call -4638 <get_bits : 100216 >			  ## wmadec.c:779:6
  101434:    01 ed 51 54 	r1 = r5 + 340 			  ## wmadec.c:781:30
  101438:    09 58       	r1 = b[r1 + 0] 			  ## wmadec.c:781:27
  10143a:    08 d6       	r0 = r1 - r0 			  ## wmadec.c:781:45
  10143c:    40 e8 a0 00 	b[r10 + 0] = r0 			  ## wmadec.c:781:25
  101440:    00 e8 a0 ff 	r0 = b[r10 + -1] 			  ## wmadec.c:784:22
  101444:    0c 80       	r4 = 1 			  ## wmadec.c:772:16
  101446:    00 f7 40 00 	r0 = r4 << r0 			  ## wmadec.c:784:19
  10144a:    60 e8 c0 0d 	[r12 + 52] = r0 			  ## wmadec.c:784:15
  10144e:    98 c6       	r0 = r11 			  ## wmadec.c:787:6
  101450:    09 80       	r1 = 1 			  ## wmadec.c:787:6
  101452:    ff e1 0f 6e 	call -4672 <get_bits : 100216 >			  ## wmadec.c:787:6
  101456:    40 e8 a0 02 	b[r10 + 8] = r0 			  ## wmadec.c:788:19
  10145a:    60 e9 09 02 	[sp+ 8] = r9 			  ## wmadec.c:795:6
  10145e:    00 98       	cmp r0, 0			  ## wmadec.c:795:6
  101460:    00 fb e0 3f 	ifs (nzcv == 0) goto 2044 <f1a_decoder_run+0x96C : 101c60 >			  ## wmadec.c:795:6
  101464:    00 e8 a6 ff 	r6 = b[r10 + -1] 			  ## wmadec.c:791:30
  101468:    00 e8 ad 3f 	r13 = b[r10 + -4] 			  ## wmadec.c:791:10
  10146c:    40 ee d5 06 	r5 = r13 - r6 			  ## wmadec.c:791:28
  101470:    98 c6       	r0 = r11 			  ## wmadec.c:804:7
  101472:    39 80       	r1 = 7 			  ## wmadec.c:804:7
  101474:    ff e1 ff 6c 	call -4706 <get_bits : 100216 >			  ## wmadec.c:804:7
  101478:    24 d4       	r4 = r4 + r0 			  ## wmadec.c:805:14
  10147a:    f8 9b       	cmp r0, 127			  ## wmadec.c:806:7
  10147c:    f9 10       	ifs (nzcv == 0) goto -14 <f1a_decoder_run+0x17C : 101470 >			  ## wmadec.c:806:7
  10147e:    68 80       	r0 = 13 
  101480:    7c 98       	cmp r4, 15			  ## wmadec.c:216:6
  101482:    0a 1b       	ifs (nzcv < 0) goto 20 <f1a_decoder_run+0x1A4 : 101498 >			  ## wmadec.c:216:6
  101484:    60 80       	r0 = 12 
  101486:    04 99       	cmp r4, 32			  ## wmadec.c:217:11
  101488:    07 1b       	ifs (nzcv < 0) goto 14 <f1a_decoder_run+0x1A4 : 101498 >			  ## wmadec.c:217:11
  10148a:    58 80       	r0 = 11 
  10148c:    44 99       	cmp r4, 40			  ## wmadec.c:218:11
  10148e:    04 1b       	ifs (nzcv < 0) goto 8 <f1a_decoder_run+0x1A4 : 101498 >			  ## wmadec.c:218:11
  101490:    50 80       	r0 = 10 			  ## wmadec.c:219:28
  101492:    6c 99       	cmp r4, 45			  ## wmadec.c:219:28
  101494:    a0 03       	ifs (nzcv >= 0) {			  ## wmadec.c:219:28
  101496:    48 80       		r0 = 9 
                               	}			  ## wmadec.c:219:28
  101498:    c0 60       	[sp+ 12] = r0 
  10149a:    45 62       	[sp+ 36] = r5 
  10149c:    28 a1       	r0 = r5 << 1 			  ## wmadec.c:814:13
  10149e:    c1 41       	r1 = [sp+ 28] 			  ## wmadec.c:814:13
  1014a0:    00 ee 1e 00 	r14 = r1 + r0 			  ## wmadec.c:814:13
  1014a4:    10 ea 30 01 	r0 = 304 			  ## wmadec.c:814:13
  1014a8:    90 e7 e0 00 	r0 = h[r14 + r0] (s) 			  ## wmadec.c:814:13
  1014ac:    00 62       	[sp+ 32] = r0 			  ## wmadec.c:817:9
  1014ae:    00 e8 c0 00 	r0 = b[r12 + 0] 			  ## wmadec.c:817:9
  1014b2:    00 98       	cmp r0, 0			  ## wmadec.c:817:9
  1014b4:    54 10       	ifs (nzcv == 0) goto 168 <f1a_decoder_run+0x26A : 10155e >			  ## wmadec.c:817:9
  1014b6:    00 e8 a0 02 	r0 = b[r10 + 8] 			  ## wmadec.c:820:10
  1014ba:    00 98       	cmp r0, 0			  ## wmadec.c:820:10
  1014bc:    50 10       	ifs (nzcv == 0) goto 160 <f1a_decoder_run+0x26A : 10155e >			  ## wmadec.c:820:10
  1014be:    60 e9 0a 04 	[sp+ 16] = r10 
  1014c2:    30 a2       	r0 = r6 << 2 			  ## wmadec.c:823:9
  1014c4:    20 f7 d1 02 	r1 = r13 << 2 			  ## wmadec.c:823:9
  1014c8:    01 ed 11 3c 	r1 = r1 + 316 			  ## wmadec.c:823:9
  1014cc:    08 d6       	r0 = r1 - r0 			  ## wmadec.c:823:9
  1014ce:    c1 41       	r1 = [sp+ 28] 			  ## wmadec.c:823:9
  1014d0:    00 ee 1a 00 	r10 = r1 + r0 			  ## wmadec.c:823:9
  1014d4:    01 ed 1d 48 	r13 = r1 + 328 			  ## wmadec.c:823:9
  1014d8:    60 e9 0c 0d 	[sp+ 52] = r12 			  ## wmadec.c:823:9
  1014dc:    20 e8 c6 04 	r6 = [r12 + 16] 			  ## wmadec.c:822:11
  1014e0:    07 80       	r7 = 0 
  1014e2:    05 42       	r5 = [sp+ 32] 
  1014e4:    0b 08       	goto 22 <f1a_decoder_run+0x208 : 1014fc >
  1014e6:    98 c6       	r0 = r11 			  ## wmadec.c:824:9
  1014e8:    09 80       	r1 = 1 			  ## wmadec.c:824:9
  1014ea:    ff e1 4f 69 	call -4824 <get_bits : 100216 >			  ## wmadec.c:824:9
  1014ee:    40 e7 d0 07 	b[r13 + r7] = r0 			  ## wmadec.c:825:27
  1014f2:    30 20       	if (r0 == 0) goto 6 <f1a_decoder_run+0x206 : 1014fa >			  ## wmadec.c:825:27
  1014f4:    80 e7 a0 07 	r0 = b[r10 + r7] (s) 			  ## wmadec.c:828:18
  1014f8:    2d d6       	r5 = r5 - r0 			  ## wmadec.c:828:15
  1014fa:    7f d0       	r7 = r7 + 1 			  ## wmadec.c:823:24
  1014fc:    3e ce       	cmp r7, r6			  ## wmadec.c:823:4
  1014fe:    f3 1b       	ifs (nzcv < 0) goto -26 <f1a_decoder_run+0x1F2 : 1014e6 >			  ## wmadec.c:823:4
  101500:    05 62       	[sp+ 32] = r5 
  101502:    00 41       	r0 = [sp+ 16] 			  ## wmadec.c:832:10
  101504:    80 58       	r0 = b[r0 + 8] 			  ## wmadec.c:832:10
  101506:    70 22       	if (r0 == 0) goto 78 <f1a_decoder_run+0x262 : 101556 >			  ## wmadec.c:832:10
  101508:    c0 41       	r0 = [sp+ 28] 			  ## wmadec.c:837:9
  10150a:    01 ed 05 4c 	r5 = r0 + 332 			  ## wmadec.c:837:9
  10150e:    40 43       	r0 = [sp+ 52] 			  ## wmadec.c:835:11
  101510:    20 e8 0a 04 	r10 = [r0 + 16] 			  ## wmadec.c:835:11
  101514:    07 80       	r7 = 0 
  101516:    24 ea 06 00 	r6 = 2147483648 
  10151a:    20 e4 19 e1 	r9 = [addr(1924)]  <.GCPI411_0 : 101ca0 >
  10151e:    19 08       	goto 50 <f1a_decoder_run+0x25E : 101552 >
  101520:    00 e7 d0 07 	r0 = b[r13 + r7] 			  ## wmadec.c:838:9
  101524:    40 21       	if (r0 == 0) goto 40 <f1a_decoder_run+0x25A : 10154e >			  ## wmadec.c:838:9
  101526:    98 c6       	r0 = r11 			  ## wmadec.c:843:15
  101528:    04 ef 60 00 	cmp r6, 2147483648			  ## wmadec.c:839:10
  10152c:    06 11       	ifs (nzcv != 0) goto 12 <f1a_decoder_run+0x246 : 10153a >			  ## wmadec.c:839:10
  10152e:    39 80       	r1 = 7 			  ## wmadec.c:840:13
  101530:    ff e1 1f 67 	call -4894 <get_bits : 100216 >			  ## wmadec.c:840:13
  101534:    1f ed 06 ed 	r6 = r0 + -19 			  ## wmadec.c:840:33
  101538:    06 08       	goto 12 <f1a_decoder_run+0x252 : 101546 >
  10153a:    89 c6       	r1 = r9 			  ## wmadec.c:843:15
  10153c:    ff e1 6f cc 	call -1652 <huffdec : 100ecc >			  ## wmadec.c:843:15
  101540:    80 d5       	r0 = r0 + r6 			  ## wmadec.c:846:20
  101542:    1f ed 06 ee 	r6 = r0 + -18 			  ## wmadec.c:846:11
  101546:    06 98       	cmp r6, 0			  ## wmadec.c:848:10
  101548:    d0 03       	ifs (nzcv <= 0) {			  ## wmadec.c:848:10
  10154a:    06 80       		r6 = 0 
                               	}			  ## wmadec.c:848:10
  10154c:    2e 70       	h[r5 + 0] = r6 			  ## wmadec.c:850:29
  10154e:    ad d0       	r5 = r5 + 2 			  ## wmadec.c:837:4
  101550:    7f d0       	r7 = r7 + 1 			  ## wmadec.c:837:24
  101552:    7a ce       	cmp r7, r10			  ## wmadec.c:837:4
  101554:    e5 1b       	ifs (nzcv < 0) goto -54 <f1a_decoder_run+0x22C : 101520 >			  ## wmadec.c:837:4
  101556:    20 e9 0c 0d 	r12 = [sp+ 52] 
  10155a:    20 e9 0a 04 	r10 = [sp+ 16] 
  10155e:    00 e8 a0 3f 	r0 = b[r10 + -4] 			  ## wmadec.c:858:31
  101562:    00 e8 a1 ff 	r1 = b[r10 + -1] 			  ## wmadec.c:858:10
  101566:    08 ce       	cmp r1, r0			  ## wmadec.c:858:47
  101568:    07 10       	ifs (nzcv == 0) goto 14 <f1a_decoder_run+0x284 : 101578 >			  ## wmadec.c:858:47
  10156a:    98 c6       	r0 = r11 			  ## wmadec.c:858:50
  10156c:    09 80       	r1 = 1 			  ## wmadec.c:858:50
  10156e:    ff e1 2f 65 	call -4956 <get_bits : 100216 >			  ## wmadec.c:858:50
  101572:    00 98       	cmp r0, 0			  ## wmadec.c:858:50
  101574:    00 fb 60 38 	ifs (nzcv == 0) goto 1804 <f1a_decoder_run+0x990 : 101c84 >			  ## wmadec.c:858:50
  101578:    00 e8 a0 02 	r0 = b[r10 + 8] 			  ## wmadec.c:860:10
  10157c:    00 98       	cmp r0, 0			  ## wmadec.c:860:10
  10157e:    00 fb 70 37 	ifs (nzcv == 0) goto 1774 <f1a_decoder_run+0x97C : 101c70 >			  ## wmadec.c:860:10
  101582:    e1 c6       	r9 = r12 
  101584:    c0 41       	r0 = [sp+ 28] 
  101586:    09 ed 05 70 	r5 = r0 + 2416 			  ## wmadec.c:516:11
  10158a:    06 80       	r6 = 0 			  ## wmadec.c:516:11
  10158c:    20 e4 17 c5 	r7 = [addr(1812)]  <.GCPI411_1 : 101ca4 >			  ## wmadec.c:516:11
  101590:    12 08       	goto 36 <f1a_decoder_run+0x2C2 : 1015b6 >			  ## wmadec.c:516:11
  101592:    19 80       	r1 = 3 			  ## wmadec.c:519:14
  101594:    3e 98       	cmp r6, 7			  ## wmadec.c:519:14
  101596:    18 80       	r0 = 3 			  ## wmadec.c:519:14
  101598:    d0 03       	ifs (nzcv <= 0) {			  ## wmadec.c:519:14
  10159a:    20 80       		r0 = 4 
                               	}			  ## wmadec.c:519:14
  10159c:    16 20       	if (r6 == 0) goto 2 <f1a_decoder_run+0x2AC : 1015a0 >			  ## wmadec.c:519:14
  10159e:    01 c6       	r1 = r0 			  ## wmadec.c:519:14
  1015a0:    98 c6       	r0 = r11 			  ## wmadec.c:525:10
  1015a2:    ff e1 8f 63 	call -5008 <get_bits : 100216 >			  ## wmadec.c:525:10
  1015a6:    00 a2       	r0 = r0 << 2 			  ## wmadec.c:528:21
  1015a8:    20 e7 70 00 	r0 = [r7 + r0] 			  ## wmadec.c:528:21
  1015ac:    68 e8 50 01 	[r5 ++= 4] = r0 			  ## wmadec.c:528:19
  1015b0:    07 8a       	r7 += 64 			  ## wmadec.c:517:2
  1015b2:    76 d0       	r6 = r6 + 1 			  ## wmadec.c:517:33
  1015b4:    c0 41       	r0 = [sp+ 28] 
  1015b6:    56 98       	cmp r6, 10			  ## wmadec.c:517:2
  1015b8:    ec 11       	ifs (nzcv != 0) goto -40 <f1a_decoder_run+0x29E : 101592 >			  ## wmadec.c:517:2
  1015ba:    01 ed 01 64 	r1 = r0 + 356 			  ## wmadec.c:532:22
  1015be:    09 ed 02 70 	r2 = r0 + 2416 			  ## wmadec.c:532:32
  1015c2:    ff e1 ff cd 	call -1602 <wma_lsp_to_curve : 100f84 >			  ## wmadec.c:532:2
  1015c6:    cc c6       	r12 = r9 			  ## wmadec.c:532:2
  1015c8:    00 e8 a0 02 	r0 = b[r10 + 8] 			  ## wmadec.c:875:9
  1015cc:    00 98       	cmp r0, 0			  ## wmadec.c:875:9
  1015ce:    00 fb f0 34 	ifs (nzcv == 0) goto 1694 <f1a_decoder_run+0x97C : 101c70 >			  ## wmadec.c:875:9
  1015d2:    01 ed e0 30 	r0 = r14 + 304 			  ## wmadec.c:814:13
  1015d6:    c0 62       	[sp+ 44] = r0 			  ## wmadec.c:894:10
  1015d8:    20 e8 c3 0d 	r3 = [r12 + 52] 			  ## wmadec.c:894:10
  1015dc:    20 80       	r0 = 4 			  ## wmadec.c:896:7
  1015de:    09 80       	r1 = 1 			  ## wmadec.c:896:7
  1015e0:    c1 63       	[sp+ 60] = r1 			  ## wmadec.c:896:7
  1015e2:    80 ef 30 80 	cmp r3, 128			  ## wmadec.c:896:7
  1015e6:    10 03       	ifs (nzcv != 0) {			  ## wmadec.c:896:7
  1015e8:    08 80       		r0 = 1 
                               	}			  ## wmadec.c:896:7
  1015ea:    60 e9 0a 04 	[sp+ 16] = r10 			  ## wmadec.c:896:7
  1015ee:    11 80       	r1 = 2 			  ## wmadec.c:896:7
  1015f0:    01 63       	[sp+ 48] = r1 			  ## wmadec.c:896:7
  1015f2:    81 ef 30 00 	cmp r3, 256			  ## wmadec.c:896:7
  1015f6:    10 03       	ifs (nzcv != 0) {			  ## wmadec.c:896:7
  1015f8:    00 63       		[sp+ 48] = r0 
                               	}			  ## wmadec.c:896:7
  1015fa:    10 ea 2a 01 	r0 = 298 			  ## wmadec.c:905:14
  1015fe:    90 e7 e0 00 	r0 = h[r14 + r0] (s) 			  ## wmadec.c:905:14
  101602:    00 64       	[sp+ 64] = r0 			  ## wmadec.c:901:24
  101604:    a0 80       	r0 = 20 			  ## wmadec.c:901:24
  101606:    c0 fc 4d 00 	r13 = r4 / r0 (s) 			  ## wmadec.c:901:24
  10160a:    60 87       	r0 = -20 			  ## wmadec.c:902:26
  10160c:    80 fc 00 0d 	r0 = r0 * r13 			  ## wmadec.c:902:26
  101610:    07 d5       	r7 = r0 + r4 			  ## wmadec.c:902:26
  101612:    02 80       	r2 = 0 
  101614:    52 ea 64 01 	r10 = 356 
  101618:    0d 80       	r5 = 1 
  10161a:    56 ea 00 00 	r14 = 0 
  10161e:    00 80       	r0 = 0 
  101620:    01 80       	r1 = 0 
  101622:    81 61       	[sp+ 24] = r1 
  101624:    01 80       	r1 = 0 
  101626:    81 62       	[sp+ 40] = r1 
  101628:    01 80       	r1 = 0 
  10162a:    81 63       	[sp+ 56] = r1 
  10162c:    60 e9 0c 0d 	[sp+ 52] = r12 
  101630:    4d 09       	goto 666 <f1a_decoder_run+0x5D8 : 1018cc >
  101632:    02 98       	cmp r2, 0
  101634:    4e 10       	ifs (nzcv == 0) goto 156 <f1a_decoder_run+0x3DE : 1016d2 >
  101636:    51 c6       	r9 = r2 
  101638:    20 e8 81 0d 	r1 = [r8 + 52] 			  ## wmadec.c:961:19
  10163c:    20 e4 12 9f 	r2 = [addr(1660)]  <.GCPI411_7 : 101cbc >			  ## wmadec.c:961:27
  101640:    11 06       	r1 *= r2 			  ## wmadec.c:961:27
  101642:    4b d0       	r3 = r1 + 1 			  ## wmadec.c:961:36
  101644:    59 c9       	r1 = r3.l 			  ## wmadec.c:962:43
  101646:    60 e8 81 0d 	[r8 + 52] = r1 			  ## wmadec.c:962:15
  10164a:    20 e8 86 0e 	r6 = [r8 + 56] 			  ## wmadec.c:963:22
  10164e:    32 06       	r2 *= r6 			  ## wmadec.c:963:30
  101650:    5b b0       	r3 = r3 >> 16 			  ## wmadec.c:961:41
  101652:    d2 d4       	r2 = r2 + r3 			  ## wmadec.c:963:40
  101654:    52 c9       	r2 = r2.l 			  ## wmadec.c:963:52
  101656:    60 e8 82 0e 	[r8 + 56] = r2 			  ## wmadec.c:963:15
  10165a:    20 e8 83 fe 	r3 = [r8 + -8] 			  ## wmadec.c:964:19
  10165e:    5b d0       	r3 = r3 + 1 			  ## wmadec.c:964:19
  101660:    60 e8 83 fe 	[r8 + -8] = r3 			  ## wmadec.c:964:19
  101664:    0d ef 30 00 	cmp r3, 8192			  ## wmadec.c:965:8
  101668:    a3 03       	ifs (nzcv >= 0) {			  ## wmadec.c:965:8
  10166a:    09 80       		r1 = 1 			  ## wmadec.c:965:8
  10166c:    02 80       		r2 = 0 			  ## wmadec.c:965:8
  10166e:    41 e5 82 0d 		d[r8 + 52] = r2, r1 			  ## wmadec.c:967:16
  101672:    60 e8 82 fe 		[r8 + -8] = r2 
                               	}			  ## wmadec.c:969:20
  101676:    12 b0       	r2 = r2 << 16 			  ## wmadec.c:971:24
  101678:    11 da       	r1 |= r2 			  ## wmadec.c:971:31
  10167a:    c9 a8       	r1 = r1 >>> 8 			  ## wmadec.c:973:4
  10167c:    20 e4 12 90 	r2 = [addr(1600)]  <.GCPI411_8 : 101cc0 >			  ## wmadec.c:973:4
  101680:    ca 06       	macc = r1 * r2 (s) 			  ## wmadec.c:973:4
  101682:    c0 f9 02 23 	r2 = macc >>> 35 			  ## wmadec.c:975:4
  101686:    00 e8 c3 00 	r3 = b[r12 + 0] 			  ## wmadec.c:977:11
  10168a:    01 80       	r1 = 0 			  ## wmadec.c:977:11
  10168c:    13 20       	if (r3 == 0) goto 2 <f1a_decoder_run+0x39C : 101690 >			  ## wmadec.c:977:11
  10168e:    11 c6       	r1 = r2 			  ## wmadec.c:977:8
  101690:    02 44       	r2 = [sp+ 64] 			  ## wmadec.c:982:8
  101692:    b2 ce       	cmp r14, r2			  ## wmadec.c:982:8
  101694:    58 1b       	ifs (nzcv < 0) goto 176 <f1a_decoder_run+0x452 : 101746 >
  101696:    c2 42       	r2 = [sp+ 44] 			  ## wmadec.c:984:14
  101698:    90 e8 22 00 	r2 = h[r2 + 0] (s) 			  ## wmadec.c:984:14
  10169c:    b2 ce       	cmp r14, r2			  ## wmadec.c:984:9
  10169e:    3c 1a       	ifs (nzcv >= 0) goto 120 <f1a_decoder_run+0x424 : 101718 >			  ## wmadec.c:984:9
  1016a0:    42 42       	r2 = [sp+ 36] 			  ## wmadec.c:992:28
  1016a2:    12 a2       	r2 = r2 << 2 			  ## wmadec.c:992:28
  1016a4:    c6 41       	r6 = [sp+ 28] 			  ## wmadec.c:992:28
  1016a6:    92 d5       	r2 = r2 + r6 			  ## wmadec.c:992:28
  1016a8:    87 42       	r7 = [sp+ 40] 
  1016aa:    d2 d5       	r2 = r2 + r7 			  ## wmadec.c:992:28
  1016ac:    13 ea 3c 01 	r3 = 316 			  ## wmadec.c:992:28
  1016b0:    80 e7 23 03 	r3 = b[r2 + r3] (s) 			  ## wmadec.c:992:28
  1016b4:    f2 d5       	r2 = r6 + r7 			  ## wmadec.c:993:10
  1016b6:    15 ea 48 01 	r5 = 328 			  ## wmadec.c:993:10
  1016ba:    00 e7 22 05 	r2 = b[r2 + r5] 			  ## wmadec.c:993:10
  1016be:    32 23       	if (r2 == 0) goto 102 <f1a_decoder_run+0x432 : 101726 >			  ## wmadec.c:993:10
  1016c0:    3a a1       	r2 = r7 << 1 			  ## wmadec.c:996:18
  1016c2:    92 d5       	r2 = r2 + r6 			  ## wmadec.c:996:18
  1016c4:    15 ea 4c 01 	r5 = 332 			  ## wmadec.c:996:18
  1016c8:    90 e7 22 05 	r2 = h[r2 + r5] (s) 			  ## wmadec.c:996:18
  1016cc:    06 80       	r6 = 0 
  1016ce:    c6 63       	[sp+ 60] = r6 
  1016d0:    2d 08       	goto 90 <f1a_decoder_run+0x438 : 10172c >
  1016d2:    51 ea 00 00 	r9 = 0 
  1016d6:    b0 ce       	cmp r14, r0			  ## wmadec.c:911:33
  1016d8:    af 11       	ifs (nzcv != 0) goto -162 <f1a_decoder_run+0x344 : 101638 >
  1016da:    81 43       	r1 = [sp+ 56] 
  1016dc:    01 98       	cmp r1, 0
  1016de:    ac 11       	ifs (nzcv != 0) goto -168 <f1a_decoder_run+0x344 : 101638 >
  1016e0:    00 e5 c1 fb 	r1, r0 = d[r12 + -20] 			  ## wmadec.c:913:36
  1016e4:    08 d6       	r0 = r1 - r0 			  ## wmadec.c:913:28
  1016e6:    f8 99       	cmp r0, 63			  ## wmadec.c:913:9
  1016e8:    08 1c       	ifs (nzcv > 0) goto 16 <f1a_decoder_run+0x406 : 1016fa >			  ## wmadec.c:913:9
  1016ea:    c0 41       	r0 = [sp+ 28] 			  ## wmadec.c:915:6
  1016ec:    ff e1 6f 55 	call -5460 <fill_buf : 10019c >			  ## wmadec.c:915:6
  1016f0:    20 e8 c0 fc 	r0 = [r12 + -16] 			  ## wmadec.c:916:16
  1016f4:    48 98       	cmp r0, 9			  ## wmadec.c:916:10
  1016f6:    ff fb 2b e2 	ifs (nzcv < 0) goto -956 <f1a_decoder_run+0x4A : 10133e >			  ## wmadec.c:916:10
  1016fa:    98 c6       	r0 = r11 			  ## wmadec.c:921:13
  1016fc:    20 e4 11 6c 	r1 = [addr(1456)]  <.GCPI411_4 : 101cb0 >			  ## wmadec.c:921:13
  101700:    ff e1 4f be 	call -2104 <huffdec : 100ecc >			  ## wmadec.c:921:13
  101704:    00 98       	cmp r0, 0			  ## wmadec.c:922:9
  101706:    00 fb 50 0a 	ifs (nzcv == 0) goto 330 <f1a_decoder_run+0x560 : 101854 >			  ## wmadec.c:922:9
  10170a:    08 98       	cmp r0, 1
  10170c:    00 fb f1 0a 	ifs (nzcv != 0) goto 350 <f1a_decoder_run+0x57A : 10186e >
  101710:    08 80       	r0 = 1 
  101712:    80 63       	[sp+ 56] = r0 
  101714:    b0 c6       	r0 = r14 
  101716:    90 0f       	goto -224 <f1a_decoder_run+0x344 : 101638 >
  101718:    20 e8 c2 0d 	r2 = [r12 + 52] 			  ## wmadec.c:986:20
  10171c:    02 64       	[sp+ 64] = r2 			  ## wmadec.c:986:20
  10171e:    02 80       	r2 = 0 			  ## wmadec.c:986:20
  101720:    c2 63       	[sp+ 60] = r2 			  ## wmadec.c:986:20
  101722:    22 c6       	r2 = r4 			  ## wmadec.c:986:20
  101724:    09 08       	goto 18 <f1a_decoder_run+0x444 : 101738 >			  ## wmadec.c:986:20
  101726:    0a 80       	r2 = 1 
  101728:    c2 63       	[sp+ 60] = r2 
  10172a:    22 c6       	r2 = r4 
  10172c:    0d 80       	r5 = 1 
  10172e:    06 44       	r6 = [sp+ 64] 			  ## wmadec.c:992:26
  101730:    f6 d4       	r6 = r6 + r3 			  ## wmadec.c:992:26
  101732:    06 64       	[sp+ 64] = r6 			  ## wmadec.c:1003:17
  101734:    7f d0       	r7 = r7 + 1 			  ## wmadec.c:1003:17
  101736:    87 62       	[sp+ 40] = r7 
  101738:    a3 80       	r3 = 20 			  ## wmadec.c:1005:24
  10173a:    c0 fc 2d 03 	r13 = r2 / r3 (s) 			  ## wmadec.c:1005:24
  10173e:    63 87       	r3 = -20 			  ## wmadec.c:1006:26
  101740:    80 fc 33 0d 	r3 = r3 * r13 			  ## wmadec.c:1006:26
  101744:    9f d4       	r7 = r3 + r2 			  ## wmadec.c:1006:26
  101746:    c2 41       	r2 = [sp+ 28] 			  ## wmadec.c:1009:4
  101748:    20 e7 22 0a 	r2 = [r2 + r10] 			  ## wmadec.c:1009:4
  10174c:    3b a2       	r3 = r7 << 2 			  ## wmadec.c:1009:4
  10174e:    20 e4 16 59 	r6 = [addr(1380)]  <.GCPI411_5 : 101cb4 >			  ## wmadec.c:1009:4
  101752:    20 e7 63 03 	r3 = [r6 + r3] 			  ## wmadec.c:1009:4
  101756:    d3 06       	macc = r2 * r3 (s) 			  ## wmadec.c:1009:4
  101758:    2b ea 02 00 	r2 = 131072 			  ## wmadec.c:1010:4
  10175c:    aa 07       	macc += r5 * r2 (s) 			  ## wmadec.c:1010:4
  10175e:    c0 f9 02 12 	r2 = macc >>> 18 			  ## wmadec.c:1011:4
  101762:    20 f7 d3 02 	r3 = r13 << 2 			  ## wmadec.c:1031:5
  101766:    20 e4 16 54 	r6 = [addr(1360)]  <.GCPI411_6 : 101cb8 >			  ## wmadec.c:1031:5
  10176a:    80 ef d0 05 	cmp r13, 5			  ## wmadec.c:1014:8
  10176e:    0d 1c       	ifs (nzcv > 0) goto 26 <f1a_decoder_run+0x496 : 10178a >			  ## wmadec.c:1014:8
  101770:    20 e7 66 03 	r6 = [r6 + r3] 
  101774:    80 ef d0 00 	cmp r13, 0			  ## wmadec.c:1016:9
  101778:    11 10       	ifs (nzcv == 0) goto 34 <f1a_decoder_run+0x4A8 : 10179c >			  ## wmadec.c:1016:9
  10177a:    d6 06       	macc = r2 * r6 (s) 			  ## wmadec.c:1023:6
  10177c:    da d3       	r2 = r3 + -1 			  ## wmadec.c:1024:6
  10177e:    00 f7 52 02 	r2 = r5 << r2 			  ## wmadec.c:1024:6
  101782:    aa 07       	macc += r5 * r2 (s) 			  ## wmadec.c:1024:6
  101784:    80 f9 03 03 	r3 = macc >>> r3 			  ## wmadec.c:1025:6
  101788:    0b 08       	goto 22 <f1a_decoder_run+0x4AC : 1017a0 >
  10178a:    20 e7 63 03 	r3 = [r6 + r3] 			  ## wmadec.c:1031:5
  10178e:    d3 06       	macc = r2 * r3 (s) 			  ## wmadec.c:1031:5
  101790:    29 ea 02 00 	r2 = 2097152 			  ## wmadec.c:1032:5
  101794:    aa 07       	macc += r5 * r2 (s) 			  ## wmadec.c:1032:5
  101796:    c0 f9 03 16 	r3 = macc >>> 22 			  ## wmadec.c:1033:5
  10179a:    02 08       	goto 4 <f1a_decoder_run+0x4AC : 1017a0 >
  10179c:    80 fc 63 02 	r3 = r6 * r2 			  ## wmadec.c:1018:20
  1017a0:    c2 43       	r2 = [sp+ 60] 			  ## wmadec.c:1037:8
  1017a2:    c2 22       	if (r2 == 0) goto 88 <f1a_decoder_run+0x508 : 1017fc >			  ## wmadec.c:1037:8
  1017a4:    7c c6       	r12 = r7 
  1017a6:    0a 80       	r2 = 1 
  1017a8:    b0 ce       	cmp r14, r0			  ## wmadec.c:1039:12
  1017aa:    0e 80       	r6 = 1 			  ## wmadec.c:1039:12
  1017ac:    10 03       	ifs (nzcv != 0) {			  ## wmadec.c:1039:12
  1017ae:    06 80       		r6 = 0 
                               	}			  ## wmadec.c:1039:12
  1017b0:    87 43       	r7 = [sp+ 56] 			  ## wmadec.c:1039:35
  1017b2:    17 20       	if (r7 == 0) goto 2 <f1a_decoder_run+0x4C2 : 1017b6 >
  1017b4:    02 80       	r2 = 0 			  ## wmadec.c:1039:35
  1017b6:    96 da       	r6 &= r2 			  ## wmadec.c:1039:18
  1017b8:    00 f4 60 01 	tst r6, 1			  ## wmadec.c:1039:18
  1017bc:    02 80       	r2 = 0 			  ## wmadec.c:1039:18
  1017be:    00 03       	ifs (nzcv == 0) {			  ## wmadec.c:1039:18
  1017c0:    8a c6       		r2 = r9 
                               	}			  ## wmadec.c:1039:18
  1017c2:    80 d5       	r0 = r0 + r6 			  ## wmadec.c:1039:18
  1017c4:    00 f4 60 01 	tst r6, 1			  ## wmadec.c:1039:18
  1017c8:    a7 c6       	r7 = r12 			  ## wmadec.c:1039:18
  1017ca:    00 03       	ifs (nzcv == 0) {			  ## wmadec.c:1039:18
  1017cc:    51 ea 00 00 		r9 = 0 
                               	}			  ## wmadec.c:1039:18
  1017d0:    00 ed 96 80 	r6 = r9 + 128 			  ## wmadec.c:1048:26
  1017d4:    81 ef 60 00 	cmp r6, 256			  ## wmadec.c:1048:26
  1017d8:    20 e9 0c 0d 	r12 = [sp+ 52] 
  1017dc:    20 19       	if (nzcv <= 0) goto 64 <f1a_decoder_run+0x52A : 10181e >			  ## wmadec.c:1048:26
  1017de:    01 43       	r1 = [sp+ 48] 			  ## wmadec.c:1050:6
  1017e0:    19 06       	r1 *= r3 			  ## wmadec.c:1050:6
  1017e2:    20 f7 93 06 	r3 = r9 << 6 			  ## wmadec.c:1050:6
  1017e6:    d9 06       	macc = r3 * r1 (s) 			  ## wmadec.c:1050:6
  1017e8:    20 f7 d1 02 	r1 = r13 << 2 			  ## wmadec.c:1051:6
  1017ec:    20 ee 13 1d 	r3 = 29 - r1 			  ## wmadec.c:1051:6
  1017f0:    00 f7 53 03 	r3 = r5 << r3 			  ## wmadec.c:1051:6
  1017f4:    ab 07       	macc += r5 * r3 (s) 			  ## wmadec.c:1051:6
  1017f6:    20 ee 11 1e 	r1 = 30 - r1 			  ## wmadec.c:1052:6
  1017fa:    20 08       	goto 64 <f1a_decoder_run+0x548 : 10183c >			  ## wmadec.c:1052:6
  1017fc:    02 43       	r2 = [sp+ 48] 			  ## wmadec.c:1064:5
  1017fe:    1a 06       	r2 *= r3 			  ## wmadec.c:1064:5
  101800:    ca 06       	macc = r1 * r2 (s) 			  ## wmadec.c:1064:5
  101802:    20 f7 d1 02 	r1 = r13 << 2 			  ## wmadec.c:1065:5
  101806:    20 ee 12 24 	r2 = 36 - r1 			  ## wmadec.c:1065:5
  10180a:    00 f7 52 02 	r2 = r5 << r2 			  ## wmadec.c:1065:5
  10180e:    aa 07       	macc += r5 * r2 (s) 			  ## wmadec.c:1065:5
  101810:    40 d0       	r0 = r0 + 1 			  ## wmadec.c:1063:6
  101812:    20 ee 11 25 	r1 = 37 - r1 			  ## wmadec.c:1066:5
  101816:    8a c6       	r2 = r9 			  ## wmadec.c:1066:5
  101818:    20 e9 0c 0d 	r12 = [sp+ 52] 			  ## wmadec.c:1066:5
  10181c:    0f 08       	goto 30 <f1a_decoder_run+0x548 : 10183c >			  ## wmadec.c:1066:5
  10181e:    06 43       	r6 = [sp+ 48] 			  ## wmadec.c:1056:6
  101820:    33 06       	r3 *= r6 			  ## wmadec.c:1056:6
  101822:    20 f7 96 0d 	r6 = r9 << 13 			  ## wmadec.c:1056:6
  101826:    89 d5       	r1 = r1 + r6 			  ## wmadec.c:1056:6
  101828:    cb 06       	macc = r1 * r3 (s) 			  ## wmadec.c:1056:6
  10182a:    20 f7 d1 02 	r1 = r13 << 2 			  ## wmadec.c:1057:6
  10182e:    20 ee 13 24 	r3 = 36 - r1 			  ## wmadec.c:1057:6
  101832:    00 f7 53 03 	r3 = r5 << r3 			  ## wmadec.c:1057:6
  101836:    ab 07       	macc += r5 * r3 (s) 			  ## wmadec.c:1057:6
  101838:    20 ee 11 25 	r1 = 37 - r1 			  ## wmadec.c:1058:6
  10183c:    80 f9 01 01 	r1 = macc >>> r1 			  ## wmadec.c:1058:6
  101840:    c3 41       	r3 = [sp+ 28] 			  ## wmadec.c:1058:6
  101842:    60 e7 31 0a 	[r3 + r10] = r1 			  ## wmadec.c:1058:6
  101846:    00 ed aa 04 	r10 = r10 + 4 			  ## wmadec.c:909:3
  10184a:    00 ed ee 01 	r14 = r14 + 1 			  ## wmadec.c:909:34
  10184e:    20 e8 c3 0d 	r3 = [r12 + 52] 
  101852:    3c 08       	goto 120 <f1a_decoder_run+0x5D8 : 1018cc >
  101854:    47 61       	[sp+ 20] = r7 
  101856:    98 c6       	r0 = r11 			  ## wmadec.c:928:14
  101858:    c1 40       	r1 = [sp+ 12] 			  ## wmadec.c:928:14
  10185a:    ff e1 cf 4d 	call -5704 <get_bits : 100216 >			  ## wmadec.c:928:14
  10185e:    07 c6       	r7 = r0 			  ## wmadec.c:928:14
  101860:    00 41       	r0 = [sp+ 16] 			  ## wmadec.c:929:29
  101862:    c1 59       	r1 = b[r0 + -4] 			  ## wmadec.c:929:29
  101864:    98 c6       	r0 = r11 			  ## wmadec.c:929:12
  101866:    ff e1 6f 4d 	call -5716 <get_bits : 100216 >			  ## wmadec.c:929:12
  10186a:    06 c6       	r6 = r0 			  ## wmadec.c:929:12
  10186c:    18 08       	goto 48 <f1a_decoder_run+0x5AA : 10189e >
  10186e:    41 ae       	r1 = r0 >> 14 			  ## wmadec.c:933:10
  101870:    11 98       	cmp r1, 2			  ## wmadec.c:933:10
  101872:    47 61       	[sp+ 20] = r7 			  ## wmadec.c:933:10
  101874:    07 10       	ifs (nzcv == 0) goto 14 <f1a_decoder_run+0x590 : 101884 >			  ## wmadec.c:933:10
  101876:    09 98       	cmp r1, 1
  101878:    09 11       	ifs (nzcv != 0) goto 18 <f1a_decoder_run+0x598 : 10188c >
  10187a:    13 ea ff 01 	r3 = 511 
  10187e:    39 80       	r1 = 7 
  101880:    4a 80       	r2 = 9 
  101882:    08 08       	goto 16 <f1a_decoder_run+0x5A0 : 101894 >
  101884:    f9 81       	r1 = 63 
  101886:    32 80       	r2 = 6 
  101888:    fb 81       	r3 = 63 
  10188a:    04 08       	goto 8 <f1a_decoder_run+0x5A0 : 101894 >
  10188c:    3b 80       	r3 = 7 
  10188e:    11 ea ff 01 	r1 = 511 
  101892:    1a 80       	r2 = 3 
  101894:    80 f0 36 00 	r6 = r3 & r0 
  101898:    50 cf       	r0 >>= r2 
  10189a:    80 f0 07 01 	r7 = r0 & r1 
  10189e:    08 80       	r0 = 1 
  1018a0:    80 63       	[sp+ 56] = r0 			  ## wmadec.c:949:13
  1018a2:    98 c6       	r0 = r11 			  ## wmadec.c:949:13
  1018a4:    09 80       	r1 = 1 			  ## wmadec.c:949:13
  1018a6:    ff e1 6f 4b 	call -5780 <get_bits : 100216 >			  ## wmadec.c:949:13
  1018aa:    81 41       	r1 = [sp+ 24] 			  ## wmadec.c:953:8
  1018ac:    89 d5       	r1 = r1 + r6 			  ## wmadec.c:953:8
  1018ae:    4a d0       	r2 = r1 + 1 			  ## wmadec.c:954:12
  1018b0:    01 42       	r1 = [sp+ 32] 			  ## wmadec.c:955:10
  1018b2:    82 61       	[sp+ 24] = r2 			  ## wmadec.c:955:10
  1018b4:    11 ce       	cmp r2, r1			  ## wmadec.c:955:10
  1018b6:    b1 03       	ifs (nzcv < 0) {			  ## wmadec.c:955:10
  1018b8:    01 80       		r1 = 0 			  ## wmadec.c:955:10
  1018ba:    81 63       		[sp+ 56] = r1 
                               	}			  ## wmadec.c:955:10
  1018bc:    30 ee 79 00 	r9 = -r7 			  ## wmadec.c:951:15
  1018c0:    10 20       	if (r0 == 0) goto 2 <f1a_decoder_run+0x5D0 : 1018c4 >
  1018c2:    79 c6       	r9 = r7 			  ## wmadec.c:950:10
  1018c4:    00 ee 60 0e 	r0 = r6 + r14 			  ## wmadec.c:952:8
  1018c8:    47 41       	r7 = [sp+ 20] 
  1018ca:    b6 0e       	goto -660 <f1a_decoder_run+0x344 : 101638 >
  1018cc:    b3 ce       	cmp r14, r3			  ## wmadec.c:909:3
  1018ce:    ff fb 0b eb 	ifs (nzcv < 0) goto -672 <f1a_decoder_run+0x33E : 101632 >
  1018d2:    00 41       	r0 = [sp+ 16] 			  ## wmadec.c:1082:9
  1018d4:    80 58       	r0 = b[r0 + 8] 			  ## wmadec.c:1082:9
  1018d6:    00 98       	cmp r0, 0			  ## wmadec.c:1082:9
  1018d8:    00 fb a0 1c 	ifs (nzcv == 0) goto 916 <f1a_decoder_run+0x97C : 101c70 >			  ## wmadec.c:1082:9
  1018dc:    18 a1       	r0 = r3 << 1 			  ## mdct.c:221:44
  1018de:    11 ea 00 0c 	r1 = 3072 			  ## mdct.c:223:37
  1018e2:    c0 fc 18 00 	r8 = r1 / r0 (s) 			  ## mdct.c:223:37
  1018e6:    11 ea 00 04 	r1 = 1024 			  ## mdct.c:222:37
  1018ea:    c0 fc 19 00 	r9 = r1 / r0 (s) 			  ## mdct.c:222:37
  1018ee:    11 ea 00 10 	r1 = 4096 			  ## mdct.c:221:39
  1018f2:    c0 fc 15 00 	r5 = r1 / r0 (s) 			  ## mdct.c:221:39
  1018f6:    18 a2       	r0 = r3 << 2 			  ## mdct.c:226:7
  1018f8:    c1 41       	r1 = [sp+ 28] 			  ## mdct.c:226:7
  1018fa:    40 d4       	r0 = r0 + r1 			  ## mdct.c:226:7
  1018fc:    00 60       	[sp] = r0 			  ## mdct.c:226:7
  1018fe:    01 ed 0c 60 	r12 = r0 + 352 			  ## mdct.c:226:7
  101902:    58 bf       	r0 = r3 >> 31 
  101904:    43 60       	[sp+ 4] = r3 
  101906:    c0 d4       	r0 = r0 + r3 
  101908:    c0 a1       	r0 = r0 >>> 1 
  10190a:    40 61       	[sp+ 20] = r0 
  10190c:    08 c6       	r0 = r1 
  10190e:    01 ed 0b 68 	r11 = r0 + 360 			  ## mdct.c:226:7
  101912:    02 80       	r2 = 0 			  ## mdct.c:226:7
  101914:    52 ea 01 00 	r10 = 1 			  ## mdct.c:226:7
  101918:    20 e4 04 e3 	r4 = [addr(908)]  <.GCPI411_2 : 101ca8 >			  ## mdct.c:226:7
  10191c:    20 e4 0d e3 	r13 = [addr(908)]  <.GCPI411_3 : 101cac >			  ## mdct.c:226:7
  101920:    09 80       	r1 = 1 			  ## mdct.c:226:7
  101922:    81 61       	[sp+ 24] = r1 			  ## mdct.c:226:7
  101924:    75 08       	goto 234 <f1a_decoder_run+0x71C : 101a10 >			  ## mdct.c:226:7
  101926:    02 64       	[sp+ 64] = r2 
  101928:    2e ee 91 80 	r1 = 1024 - r9 			  ## mdct.c:243:25
  10192c:    01 98       	cmp r1, 0			  ## mdct.c:244:7
  10192e:    20 c6       	r0 = r4 			  ## mdct.c:244:7
  101930:    a0 03       	ifs (nzcv >= 0) {			  ## mdct.c:244:7
  101932:    a8 c6       		r0 = r13 
                               	}			  ## mdct.c:244:7
  101934:    09 a2       	r1 = r1 << 2 			  ## mdct.c:244:7
  101936:    80 ef 90 00 	cmp r9, 0			  ## mdct.c:237:3
  10193a:    22 c6       	r2 = r4 			  ## mdct.c:237:3
  10193c:    a0 03       	ifs (nzcv >= 0) {			  ## mdct.c:237:3
  10193e:    aa c6       		r2 = r13 
                               	}			  ## mdct.c:237:3
  101940:    ab c6       	r3 = r13 			  ## mdct.c:237:3
  101942:    20 e7 00 01 	r0 = [r0 + r1] 			  ## mdct.c:237:3
  101946:    20 f7 91 02 	r1 = r9 << 2 
  10194a:    20 e7 21 01 	r1 = [r2 + r1] 
  10194e:    82 41       	r2 = [sp+ 24] 
  101950:    80 fc 16 02 	r6 = r1 * r2 
  101954:    2c c6       	r4 = r5 
  101956:    61 cb       	r9 += r4 			  ## mdct.c:256:14
  101958:    07 e5 cd ff 	r13, r7 = d[r12 + -4] 			  ## mdct.c:232:7
  10195c:    01 e5 be ff 	r14, r1 = d[r11 + -4] 			  ## mdct.c:231:7
  101960:    84 ef 90 00 	cmp r9, 1024			  ## mdct.c:257:7
  101964:    a3 03       	ifs (nzcv >= 0) {			  ## mdct.c:260:14
  101966:    92 dc       		r2 = -r2 			  ## mdct.c:260:14
  101968:    82 61       		[sp+ 24] = r2 
  10196a:    a4 dc       		r4 = -r4 			  ## mdct.c:259:19
  10196c:    25 c6       		r5 = r4 
                               	}
  10196e:    ce 06       	macc = r1 * r6 (s) 			  ## mdct.c:263:3
  101970:    a0 fd 0d 00 	macc += r13 * r0 (s) 			  ## mdct.c:264:3
  101974:    2a ea 02 80 	r2 = 262144 			  ## mdct.c:264:3
  101978:    a0 fd 2a 00 	macc += r10 * r2 (s) 			  ## mdct.c:265:3
  10197c:    c0 f9 0a 13 	r10 = macc >>> 19 			  ## mdct.c:266:3
  101980:    60 e8 ba ff 	[r11 + -4] = r10 			  ## mdct.c:266:3
  101984:    52 ea 01 00 	r10 = 1 			  ## mdct.c:266:3
  101988:    80 fd 6d 00 	macc = r13 * r6 (s) 			  ## mdct.c:268:3
  10198c:    c8 07       	macc -= r1 * r0 (s) 			  ## mdct.c:269:3
  10198e:    a0 fd 2a 00 	macc += r10 * r2 (s) 			  ## mdct.c:270:3
  101992:    c0 f9 00 13 	r0 = macc >>> 19 			  ## mdct.c:271:3
  101996:    60 e8 b0 00 	[r11 + 0] = r0 			  ## mdct.c:271:3
  10199a:    2e ee 81 80 	r1 = 1024 - r8 			  ## mdct.c:283:25
  10199e:    01 98       	cmp r1, 0			  ## mdct.c:284:7
  1019a0:    20 e4 04 c1 	r4 = [addr(772)]  <.GCPI411_2 : 101ca8 >			  ## mdct.c:284:7
  1019a4:    20 c6       	r0 = r4 			  ## mdct.c:284:7
  1019a6:    5d c6       	r13 = r3 			  ## mdct.c:284:7
  1019a8:    a0 03       	ifs (nzcv >= 0) {			  ## mdct.c:284:7
  1019aa:    a8 c6       		r0 = r13 
                               	}			  ## mdct.c:284:7
  1019ac:    09 a2       	r1 = r1 << 2 			  ## mdct.c:284:7
  1019ae:    80 ef 80 00 	cmp r8, 0			  ## mdct.c:277:3
  1019b2:    26 c6       	r6 = r4 			  ## mdct.c:277:3
  1019b4:    a0 03       	ifs (nzcv >= 0) {			  ## mdct.c:277:3
  1019b6:    ae c6       		r6 = r13 
                               	}			  ## mdct.c:277:3
  1019b8:    20 e7 00 01 	r0 = [r0 + r1] 			  ## mdct.c:277:3
  1019bc:    20 f7 81 02 	r1 = r8 << 2 
  1019c0:    20 e7 61 01 	r1 = [r6 + r1] 
  1019c4:    82 41       	r2 = [sp+ 24] 
  1019c6:    80 fc 16 02 	r6 = r1 * r2 
  1019ca:    11 c6       	r1 = r2 
  1019cc:    68 cb       	r8 += r5 			  ## mdct.c:296:14
  1019ce:    84 ef 80 00 	cmp r8, 1024			  ## mdct.c:297:7
  1019d2:    a2 03       	ifs (nzcv >= 0) {			  ## mdct.c:300:14
  1019d4:    89 dc       		r1 = -r1 			  ## mdct.c:300:14
  1019d6:    81 61       		[sp+ 24] = r1 
  1019d8:    ad dc       		r5 = -r5 
                               	}			  ## mdct.c:299:19
  1019da:    02 44       	r2 = [sp+ 64] 
  1019dc:    80 fd 6e 00 	macc = r14 * r6 (s) 			  ## mdct.c:303:3
  1019e0:    b8 07       	macc += r7 * r0 (s) 			  ## mdct.c:304:3
  1019e2:    2a ea 03 80 	r3 = 262144 			  ## mdct.c:304:3
  1019e6:    a0 fd 3a 00 	macc += r10 * r3 (s) 			  ## mdct.c:305:3
  1019ea:    c0 f9 01 13 	r1 = macc >>> 19 			  ## mdct.c:306:3
  1019ee:    60 e8 c1 ff 	[r12 + -4] = r1 			  ## mdct.c:306:3
  1019f2:    80 fd 0e 00 	macc = r14 * r0 (s) 			  ## mdct.c:308:3
  1019f6:    fe 07       	macc -= r7 * r6 (s) 			  ## mdct.c:309:3
  1019f8:    a0 fd 3a 00 	macc += r10 * r3 (s) 			  ## mdct.c:310:3
  1019fc:    c0 f9 00 13 	r0 = macc >>> 19 			  ## mdct.c:311:3
  101a00:    60 e8 c0 00 	[r12 + 0] = r0 			  ## mdct.c:311:3
  101a04:    1f ed cc f8 	r12 = r12 + -8 			  ## mdct.c:226:2
  101a08:    00 ed bb 08 	r11 = r11 + 8 			  ## mdct.c:226:2
  101a0c:    92 d0       	r2 = r2 + 2 			  ## mdct.c:226:31
  101a0e:    c0 41       	r0 = [sp+ 28] 
  101a10:    41 41       	r1 = [sp+ 20] 			  ## mdct.c:226:2
  101a12:    11 ce       	cmp r2, r1			  ## mdct.c:226:2
  101a14:    88 1b       	ifs (nzcv < 0) goto -240 <f1a_decoder_run+0x632 : 101926 >			  ## mdct.c:226:2
  101a16:    01 41       	r1 = [sp+ 16] 			  ## mdct.c:100:16
  101a18:    ca 5f       	r2 = b[r1 + -1] 			  ## mdct.c:100:16
  101a1a:    01 ed 01 68 	r1 = r0 + 360 			  ## mdct.c:104:7
  101a1e:    c1 60       	[sp+ 12] = r1 			  ## mdct.c:102:15
  101a20:    41 43       	r1 = [sp+ 52] 			  ## mdct.c:102:15
  101a22:    49 4b       	r1 = [r1 + 52] 			  ## mdct.c:102:15
  101a24:    01 61       	[sp+ 16] = r1 
  101a26:    0b 80       	r3 = 1 
  101a28:    7c 08       	goto 248 <f1a_decoder_run+0x82E : 101b22 >
  101a2a:    10 ea 00 10 	r0 = 4096 
  101a2e:    50 cf       	r0 >>= r2 
  101a30:    80 62       	[sp+ 40] = r0 			  ## mdct.c:106:19
  101a32:    00 f7 31 02 	r1 = r3 << r2 			  ## mdct.c:106:19
  101a36:    00 41       	r0 = [sp+ 16] 
  101a38:    40 d6       	r0 = r0 - r1 
  101a3a:    00 63       	[sp+ 48] = r0 			  ## mdct.c:108:8
  101a3c:    20 f7 19 02 	r9 = r1 << 2 			  ## mdct.c:108:8
  101a40:    41 62       	[sp+ 36] = r1 
  101a42:    08 a1       	r0 = r1 << 1 
  101a44:    00 62       	[sp+ 32] = r0 
  101a46:    52 ea 00 00 	r10 = 0 
  101a4a:    20 e9 0d 03 	r13 = [sp+ 12] 
  101a4e:    c2 62       	[sp+ 44] = r2 
  101a50:    64 08       	goto 200 <f1a_decoder_run+0x826 : 101b1a >
  101a52:    40 42       	r0 = [sp+ 36] 
  101a54:    90 cb       	r0 += r10 
  101a56:    c0 63       	[sp+ 60] = r0 
  101a58:    53 ea 00 00 	r11 = 0 
  101a5c:    54 ea 01 00 	r12 = 1 
  101a60:    60 e9 0d 0d 	[sp+ 52] = r13 
  101a64:    80 42       	r0 = [sp+ 40] 
  101a66:    00 64       	[sp+ 64] = r0 
  101a68:    60 e9 0a 0e 	[sp+ 56] = r10 
  101a6c:    4a 08       	goto 148 <f1a_decoder_run+0x80E : 101b02 >
  101a6e:    20 e7 d8 09 	r8 = [r13 + r9] 			  ## mdct.c:126:9
  101a72:    00 ee d4 09 	r4 = r13 + r9 			  ## mdct.c:124:9
  101a76:    20 e8 4e ff 	r14 = [r4 + -4] 			  ## mdct.c:124:9
  101a7a:    01 e5 d7 ff 	r7, r1 = d[r13 + -4] 			  ## mdct.c:123:9
  101a7e:    00 ee e3 01 	r3 = r14 + r1 			  ## mdct.c:128:22
  101a82:    60 e8 d3 ff 	[r13 + -4] = r3 			  ## mdct.c:128:17
  101a86:    00 ee 83 07 	r3 = r8 + r7 			  ## mdct.c:129:26
  101a8a:    60 e8 d3 00 	[r13 + 0] = r3 			  ## mdct.c:129:21
  101a8e:    2e ee b6 80 	r6 = 1024 - r11 			  ## mdct.c:139:27
  101a92:    06 98       	cmp r6, 0			  ## mdct.c:140:9
  101a94:    a4 03       	ifs (nzcv >= 0) {			  ## mdct.c:140:9
  101a96:    20 e4 05 85 		r5 = [addr(532)] 
                               	} else { <.GCPI411_3 : 101cac >			  ## mdct.c:140:9
  101a9a:    20 e4 05 83 		r5 = [addr(524)] 
                               	} <.GCPI411_2 : 101ca8 >			  ## mdct.c:140:9
  101a9e:    36 a2       	r6 = r6 << 2 			  ## mdct.c:140:9
  101aa0:    80 ef b0 00 	cmp r11, 0			  ## mdct.c:133:5
  101aa4:    20 e4 03 80 	r3 = [addr(512)]  <.GCPI411_2 : 101ca8 >			  ## mdct.c:133:5
  101aa8:    00 44       	r0 = [sp+ 64] 			  ## mdct.c:133:5
  101aaa:    a0 03       	ifs (nzcv >= 0) {			  ## mdct.c:133:5
  101aac:    20 e4 03 7f 		r3 = [addr(508)] 
                               	} <.GCPI411_3 : 101cac >			  ## mdct.c:133:5
  101ab0:    20 e7 55 06 	r5 = [r5 + r6] 			  ## mdct.c:133:5
  101ab4:    20 f7 b6 02 	r6 = r11 << 2 
  101ab8:    20 e7 33 06 	r3 = [r3 + r6] 
  101abc:    80 fc 36 0c 	r6 = r3 * r12 
  101ac0:    43 cb       	r11 += r0 			  ## mdct.c:151:14
  101ac2:    84 ef b0 00 	cmp r11, 1024			  ## mdct.c:152:9
  101ac6:    a2 03       	ifs (nzcv >= 0) {			  ## mdct.c:155:16
  101ac8:    30 ee cc 00 		r12 = -r12 			  ## mdct.c:155:16
  101acc:    80 dc       		r0 = -r0 			  ## mdct.c:154:16
  101ace:    00 64       		[sp+ 64] = r0 
                               	}
  101ad0:    40 ee 11 0e 	r1 = r1 - r14 			  ## mdct.c:158:5
  101ad4:    ce 06       	macc = r1 * r6 (s) 			  ## mdct.c:158:5
  101ad6:    40 ee 73 08 	r3 = r7 - r8 			  ## mdct.c:159:5
  101ada:    9d 07       	macc += r3 * r5 (s) 			  ## mdct.c:159:5
  101adc:    0a 80       	r2 = 1 			  ## mdct.c:159:5
  101ade:    2b ea 00 00 	r0 = 131072 
  101ae2:    90 07       	macc += r2 * r0 (s) 			  ## mdct.c:160:5
  101ae4:    c0 f9 07 12 	r7 = macc >>> 18 			  ## mdct.c:161:5
  101ae8:    e7 6f       	[r4 + -4] = r7 			  ## mdct.c:161:5
  101aea:    de 06       	macc = r3 * r6 (s) 			  ## mdct.c:163:5
  101aec:    cd 07       	macc -= r1 * r5 (s) 			  ## mdct.c:164:5
  101aee:    0b 80       	r3 = 1 			  ## mdct.c:164:5
  101af0:    90 07       	macc += r2 * r0 (s) 			  ## mdct.c:165:5
  101af2:    c0 f9 01 12 	r1 = macc >>> 18 			  ## mdct.c:166:5
  101af6:    60 e7 91 0d 	[r9 + r13] = r1 			  ## mdct.c:166:5
  101afa:    00 ed dd 08 	r13 = r13 + 8 			  ## mdct.c:117:4
  101afe:    00 ed aa 02 	r10 = r10 + 2 			  ## mdct.c:117:38
  101b02:    c0 43       	r0 = [sp+ 60] 			  ## mdct.c:117:4
  101b04:    90 ce       	cmp r10, r0			  ## mdct.c:117:4
  101b06:    b3 1b       	ifs (nzcv < 0) goto -154 <f1a_decoder_run+0x77A : 101a6e >			  ## mdct.c:117:4
  101b08:    00 42       	r0 = [sp+ 32] 
  101b0a:    20 e9 0a 0e 	r10 = [sp+ 56] 
  101b0e:    42 cb       	r10 += r0 			  ## mdct.c:108:39
  101b10:    01 a2       	r1 = r0 << 2 			  ## mdct.c:108:3
  101b12:    20 e9 0d 0d 	r13 = [sp+ 52] 			  ## mdct.c:108:3
  101b16:    4d cb       	r13 += r1 			  ## mdct.c:108:3
  101b18:    c2 42       	r2 = [sp+ 44] 			  ## mdct.c:108:3
  101b1a:    00 43       	r0 = [sp+ 48] 			  ## mdct.c:108:3
  101b1c:    90 ce       	cmp r10, r0			  ## mdct.c:108:3
  101b1e:    99 1b       	ifs (nzcv < 0) goto -206 <f1a_decoder_run+0x75E : 101a52 >			  ## mdct.c:108:3
  101b20:    c0 41       	r0 = [sp+ 28] 
  101b22:    d2 d3       	r2 = r2 + -1 
  101b24:    02 98       	cmp r2, 0			  ## mdct.c:104:2
  101b26:    81 1c       	ifs (nzcv > 0) goto -254 <f1a_decoder_run+0x736 : 101a2a >			  ## mdct.c:104:2
  101b28:    01 ed 00 70 	r0 = r0 + 368 			  ## mdct.c:101:6
  101b2c:    01 41       	r1 = [sp+ 16] 			  ## mdct.c:101:6
  101b2e:    c9 a1       	r1 = r1 >>> 1 			  ## mdct.c:101:6
  101b30:    12 80       	r2 = 2 			  ## mdct.c:101:6
  101b32:    03 80       	r3 = 0 
  101b34:    11 08       	goto 34 <f1a_decoder_run+0x864 : 101b58 >
  101b36:    0b ca       	r3 += r1 (brev) 			  ## mdct.c:180:3
  101b38:    1a ce       	cmp r3, r2			  ## mdct.c:181:7
  101b3a:    0c 1d       	ifs (nzcv <= 0) goto 24 <f1a_decoder_run+0x860 : 101b54 >			  ## mdct.c:181:7
  101b3c:    05 e5 04 ff 	r4, r5 = d[r0 + -4] 			  ## mdct.c:179:7
  101b40:    1e a2       	r6 = r3 << 2 			  ## mdct.c:183:18
  101b42:    c7 41       	r7 = [sp+ 28] 			  ## mdct.c:183:18
  101b44:    f6 d5       	r6 = r6 + r7 			  ## mdct.c:183:18
  101b46:    24 e8 67 59 	r7 = [++ r6 = 356] 			  ## mdct.c:183:18
  101b4a:    c7 6f       	[r0 + -4] = r7 			  ## mdct.c:183:16
  101b4c:    77 48       	r7 = [r6 + 4] 			  ## mdct.c:184:22
  101b4e:    07 68       	[r0 + 0] = r7 			  ## mdct.c:184:20
  101b50:    45 e5 64 00 	d[r6 + 0] = r4, r5 			  ## mdct.c:185:16
  101b54:    40 88       	r0 += 8 			  ## mdct.c:175:2
  101b56:    92 d0       	r2 = r2 + 2 			  ## mdct.c:175:29
  101b58:    04 41       	r4 = [sp+ 16] 			  ## mdct.c:175:2
  101b5a:    14 ce       	cmp r2, r4			  ## mdct.c:175:2
  101b5c:    ec 1b       	ifs (nzcv < 0) goto -40 <f1a_decoder_run+0x842 : 101b36 >			  ## mdct.c:175:2
  101b5e:    10 ea 00 08 	r0 = 2048 			  ## mdct.c:318:39
  101b62:    41 40       	r1 = [sp+ 4] 			  ## mdct.c:318:39
  101b64:    c0 fc 02 01 	r2 = r0 / r1 (s) 			  ## mdct.c:318:39
  101b68:    00 40       	r0 = [sp] 			  ## mdct.c:322:7
  101b6a:    01 ed 0c 60 	r12 = r0 + 352 			  ## mdct.c:322:7
  101b6e:    c0 41       	r0 = [sp+ 28] 			  ## mdct.c:322:7
  101b70:    01 ed 09 68 	r9 = r0 + 360 			  ## mdct.c:322:7
  101b74:    00 80       	r0 = 0 			  ## mdct.c:322:7
  101b76:    14 2b       	r4 = [addr(304)]  <.GCPI411_2 : 101ca8 >			  ## mdct.c:322:7
  101b78:    20 e4 0d 4c 	r13 = [addr(304)]  <.GCPI411_3 : 101cac >			  ## mdct.c:322:7
  101b7c:    2a ea 0a 80 	r10 = 262144 			  ## mdct.c:322:7
  101b80:    13 c6       	r3 = r2 			  ## mdct.c:322:7
  101b82:    05 80       	r5 = 0 			  ## mdct.c:322:7
  101b84:    69 08       	goto 210 <f1a_decoder_run+0x964 : 101c58 >			  ## mdct.c:322:7
  101b86:    05 64       	[sp+ 64] = r5 
  101b88:    2e ee 05 80 	r5 = 1024 - r0 			  ## mdct.c:339:25
  101b8c:    05 98       	cmp r5, 0			  ## mdct.c:340:7
  101b8e:    21 c6       	r1 = r4 			  ## mdct.c:340:7
  101b90:    a0 03       	ifs (nzcv >= 0) {			  ## mdct.c:340:7
  101b92:    a9 c6       		r1 = r13 
                               	}			  ## mdct.c:340:7
  101b94:    2d a2       	r5 = r5 << 2 			  ## mdct.c:340:7
  101b96:    00 98       	cmp r0, 0			  ## mdct.c:333:3
  101b98:    26 c6       	r6 = r4 			  ## mdct.c:333:3
  101b9a:    a0 03       	ifs (nzcv >= 0) {			  ## mdct.c:333:3
  101b9c:    ae c6       		r6 = r13 
                               	}			  ## mdct.c:333:3
  101b9e:    20 e7 17 05 	r7 = [r1 + r5] 			  ## mdct.c:333:3
  101ba2:    01 a2       	r1 = r0 << 2 
  101ba4:    20 e7 61 01 	r1 = [r6 + r1] 
  101ba8:    86 41       	r6 = [sp+ 24] 
  101baa:    80 fc 15 06 	r5 = r1 * r6 
  101bae:    1c c6       	r4 = r3 
  101bb0:    00 d5       	r0 = r0 + r4 			  ## mdct.c:352:14
  101bb2:    0e e5 cb ff 	r11, r14 = d[r12 + -4] 			  ## mdct.c:328:7
  101bb6:    08 e5 91 ff 	r1, r8 = d[r9 + -4] 			  ## mdct.c:326:7
  101bba:    84 ef 00 00 	cmp r0, 1024			  ## mdct.c:353:7
  101bbe:    a3 03       	ifs (nzcv >= 0) {			  ## mdct.c:356:14
  101bc0:    b6 dc       		r6 = -r6 			  ## mdct.c:356:14
  101bc2:    86 61       		[sp+ 24] = r6 
  101bc4:    a4 dc       		r4 = -r4 			  ## mdct.c:355:19
  101bc6:    23 c6       		r3 = r4 
                               	}
  101bc8:    80 fd 58 00 	macc = r8 * r5 (s) 			  ## mdct.c:359:3
  101bcc:    8f 07       	macc += r1 * r7 (s) 			  ## mdct.c:360:3
  101bce:    0c 80       	r4 = 1 			  ## mdct.c:360:3
  101bd0:    a0 fd a4 00 	macc += r4 * r10 (s) 			  ## mdct.c:361:3
  101bd4:    c0 f9 0a 13 	r10 = macc >>> 19 			  ## mdct.c:362:3
  101bd8:    60 e8 ca 00 	[r12 + 0] = r10 			  ## mdct.c:362:3
  101bdc:    2a ea 0a 80 	r10 = 262144 			  ## mdct.c:362:3
  101be0:    80 fd 78 00 	macc = r8 * r7 (s) 			  ## mdct.c:364:3
  101be4:    cd 07       	macc -= r1 * r5 (s) 			  ## mdct.c:365:3
  101be6:    a0 fd a4 00 	macc += r4 * r10 (s) 			  ## mdct.c:366:3
  101bea:    c0 f9 01 13 	r1 = macc >>> 19 			  ## mdct.c:367:3
  101bee:    60 e8 91 ff 	[r9 + -4] = r1 			  ## mdct.c:367:3
  101bf2:    2e ee 25 80 	r5 = 1024 - r2 			  ## mdct.c:378:25
  101bf6:    05 98       	cmp r5, 0			  ## mdct.c:379:7
  101bf8:    0c 2b       	r4 = [addr(176)]  <.GCPI411_2 : 101ca8 >			  ## mdct.c:379:7
  101bfa:    21 c6       	r1 = r4 			  ## mdct.c:379:7
  101bfc:    a0 03       	ifs (nzcv >= 0) {			  ## mdct.c:379:7
  101bfe:    a9 c6       		r1 = r13 
                               	}			  ## mdct.c:379:7
  101c00:    2d a2       	r5 = r5 << 2 			  ## mdct.c:379:7
  101c02:    02 98       	cmp r2, 0			  ## mdct.c:372:3
  101c04:    27 c6       	r7 = r4 			  ## mdct.c:372:3
  101c06:    a0 03       	ifs (nzcv >= 0) {			  ## mdct.c:372:3
  101c08:    af c6       		r7 = r13 
                               	}			  ## mdct.c:372:3
  101c0a:    20 e7 15 05 	r5 = [r1 + r5] 			  ## mdct.c:372:3
  101c0e:    11 a2       	r1 = r2 << 2 
  101c10:    20 e7 71 01 	r1 = [r7 + r1] 
  101c14:    86 41       	r6 = [sp+ 24] 
  101c16:    31 06       	r1 *= r6 
  101c18:    d2 d4       	r2 = r2 + r3 			  ## mdct.c:391:14
  101c1a:    84 ef 20 00 	cmp r2, 1024			  ## mdct.c:392:7
  101c1e:    a2 03       	ifs (nzcv >= 0) {			  ## mdct.c:395:14
  101c20:    b6 dc       		r6 = -r6 			  ## mdct.c:395:14
  101c22:    86 61       		[sp+ 24] = r6 
  101c24:    9b dc       		r3 = -r3 
                               	}			  ## mdct.c:394:19
  101c26:    80 fd 1e 00 	macc = r14 * r1 (s) 			  ## mdct.c:399:3
  101c2a:    b0 fd 5b 00 	macc -= r11 * r5 (s) 			  ## mdct.c:400:3
  101c2e:    0e 80       	r6 = 1 			  ## mdct.c:400:3
  101c30:    a0 fd a6 00 	macc += r6 * r10 (s) 			  ## mdct.c:401:3
  101c34:    c0 f9 07 13 	r7 = macc >>> 19 			  ## mdct.c:402:3
  101c38:    60 e8 c7 ff 	[r12 + -4] = r7 			  ## mdct.c:402:3
  101c3c:    80 fd 1b 00 	macc = r11 * r1 (s) 			  ## mdct.c:404:3
  101c40:    a0 fd 5e 00 	macc += r14 * r5 (s) 			  ## mdct.c:405:3
  101c44:    a0 fd a6 00 	macc += r6 * r10 (s) 			  ## mdct.c:406:3
  101c48:    c0 f9 01 13 	r1 = macc >>> 19 			  ## mdct.c:407:3
  101c4c:    68 e8 91 02 	[r9 ++= 8] = r1 			  ## mdct.c:407:3
  101c50:    1f ed cc f8 	r12 = r12 + -8 			  ## mdct.c:322:2
  101c54:    05 44       	r5 = [sp+ 64] 			  ## mdct.c:322:2
  101c56:    ad d0       	r5 = r5 + 2 			  ## mdct.c:322:31
  101c58:    41 41       	r1 = [sp+ 20] 			  ## mdct.c:322:2
  101c5a:    29 ce       	cmp r5, r1			  ## mdct.c:322:2
  101c5c:    94 1b       	ifs (nzcv < 0) goto -216 <f1a_decoder_run+0x892 : 101b86 >			  ## mdct.c:322:2
  101c5e:    08 08       	goto 16 <f1a_decoder_run+0x97C : 101c70 >			  ## mdct.c:322:2
  101c60:    20 e8 c1 0d 	r1 = [r12 + 52] 			  ## wmadec.c:797:26
  101c64:    01 ed 50 64 	r0 = r5 + 356 			  ## wmadec.c:797:10
  101c68:    0a a2       	r2 = r1 << 2 			  ## wmadec.c:797:36
  101c6a:    01 80       	r1 = 0 			  ## wmadec.c:797:3
  101c6c:    e0 e1 6f 97 	call -257300 <memset : c2f5c >			  ## wmadec.c:797:3
  101c70:    05 80       	r5 = 0 
  101c72:    80 40       	r0 = [sp+ 8] 			  ## wmadec.c:1089:14
  101c74:    c5 79       	b[r0 + -4] = r5 			  ## wmadec.c:1089:14
  101c76:    c0 41       	r0 = [sp+ 28] 			  ## wmadec.c:1090:2
  101c78:    ff e1 8f 65 	call -4944 <wma_window : 10092c >			  ## wmadec.c:1090:2
  101c7c:    28 c6       	r0 = r5 			  ## wmadec.c:1227:1
  101c7e:    44 cd       	sp += 68 			  ## wmadec.c:1227:1
  101c80:    30 c4       	{macch, maccl} = [sp++] 			  ## wmadec.c:1227:1
  101c82:    1e c0       	{pc, r14-r4} = [sp++] 			  ## wmadec.c:1227:1
  101c84:    00 e8 a0 02 	r0 = b[r10 + 8] 			  ## wmadec.c:867:10
  101c88:    30 27       	if (r0 == 0) goto -26 <f1a_decoder_run+0x97C : 101c70 >			  ## wmadec.c:867:10
  101c8a:    c0 41       	r0 = [sp+ 28] 
  101c8c:    01 ed 01 64 	r1 = r0 + 356 			  ## wmadec.c:869:24
  101c90:    09 ed 02 70 	r2 = r0 + 2416 			  ## wmadec.c:869:34
  101c94:    ff e1 6f 97 	call -3348 <wma_lsp_to_curve : 100f84 >			  ## wmadec.c:869:4
  101c98:    97 0c       	goto -1746 <f1a_decoder_run+0x2D4 : 1015c8 >			  ## wmadec.c:869:4
  101c9a:    8d 82       	r5 = 81 
  101c9c:    ef 0f       	goto -34 <f1a_decoder_run+0x988 : 101c7c >
  101c9e:    00 00       	nop


.GCPI411_0:
  101ca0:    60 36 10 00     < 1062496 : 0x103660 >

.GCPI411_1:
  101ca4:    2c 2d 10 00     < 1060140 : 0x102D2C >

.GCPI411_2:
  101ca8:    cc d7 11 00     < 1169356 : 0x11D7CC >

.GCPI411_3:
  101cac:    28 1d 10 00     < 1056040 : 0x101D28 >

.GCPI411_4:
  101cb0:    ac 30 10 00     < 1061036 : 0x1030AC >

.GCPI411_5:
  101cb4:    5c 30 10 00     < 1060956 : 0x10305C >

.GCPI411_6:
  101cb8:    40 30 10 00     < 1060928 : 0x103040 >

.GCPI411_7:
  101cbc:    2f cb 04 00     < 314159 : 0x4CB2F >

.GCPI411_8:
  101cc0:    ef 78 23 00     < 2324719 : 0x2378EF >

high_band_start:
  101cc4:	 00 01 80 00 40 00 4d 01         ....@.M.
  101ccc:	 a6 00 53 00 00 02 00 01         ..S.....
  101cd4:	 80 00                           ..


hight_bands:
  101cd6:	 28 30 3c 3e 14 18 1c 21         (0<>...!
  101cde:	 0c 0c 0c 10 0b 3c 3e 00         .....<>.
  101ce6:	 06 1c 21 00 05 0c 10 00         ..!.....
  101cee:	 18 3c 44 3a 0c 1c 24 1d         .<D:..$.
  101cf6:	 08 0c 14 0c                     ....


coefs_end:
  101cfa:	 d2 01 e9 00 74 00               ....t.


f1a_decoder_ops:
  101d00:	 fd c3 11 00 38 02 10 00         ....8...
  101d08:	 08 06 10 00 f4 12 10 00         ........
  101d10:	 3c 08 10 00 5c 08 10 00         <...\...
  101d18:	 66 08 10 00 80 01 10 00         f.......
  101d20:	 0c 09 10 00 1a 06 10 00         ........


wma_cos_tab:
  101d28:	 00 00 04 00 00 00 04 00         ........
  101d30:	 ff ff 03 00 fe ff 03 00         ........
  101d38:	 fc ff 03 00 f9 ff 03 00         ........
  101d40:	 f5 ff 03 00 f1 ff 03 00         ........
  101d48:	 ed ff 03 00 e8 ff 03 00         ........
  101d50:	 e2 ff 03 00 db ff 03 00         ........
  101d58:	 d4 ff 03 00 cc ff 03 00         ........
  101d60:	 c4 ff 03 00 bb ff 03 00         ........
  101d68:	 b1 ff 03 00 a8 ff 03 00         ........
  101d70:	 9d ff 03 00 91 ff 03 00         ........
  101d78:	 86 ff 03 00 79 ff 03 00         ....y...
  101d80:	 6b ff 03 00 5d ff 03 00         k...]...
  101d88:	 4f ff 03 00 40 ff 03 00         O...@...
  101d90:	 30 ff 03 00 20 ff 03 00         0... ...
  101d98:	 0f ff 03 00 fd fe 03 00         ........
  101da0:	 eb fe 03 00 d8 fe 03 00         ........
  101da8:	 c4 fe 03 00 b1 fe 03 00         ........
  101db0:	 9c fe 03 00 87 fe 03 00         ........
  101db8:	 71 fe 03 00 5a fe 03 00         q...Z...
  101dc0:	 43 fe 03 00 2b fe 03 00         C...+...
  101dc8:	 13 fe 03 00 fa fd 03 00         ........
  101dd0:	 e1 fd 03 00 c6 fd 03 00         ........
  101dd8:	 ac fd 03 00 90 fd 03 00         ........
  101de0:	 74 fd 03 00 58 fd 03 00         t...X...
  101de8:	 3a fd 03 00 1c fd 03 00         :.......
  101df0:	 fe fc 03 00 df fc 03 00         ........
  101df8:	 bf fc 03 00 9f fc 03 00         ........
  101e00:	 7d fc 03 00 5c fc 03 00         }...\...
  101e08:	 3a fc 03 00 17 fc 03 00         :.......
  101e10:	 f4 fb 03 00 d0 fb 03 00         ........
  101e18:	 ab fb 03 00 86 fb 03 00         ........
  101e20:	 60 fb 03 00 39 fb 03 00         `...9...
  101e28:	 12 fb 03 00 eb fa 03 00         ........
  101e30:	 c2 fa 03 00 99 fa 03 00         ........
  101e38:	 70 fa 03 00 45 fa 03 00         p...E...
  101e40:	 1a fa 03 00 ef f9 03 00         ........
  101e48:	 c3 f9 03 00 97 f9 03 00         ........
  101e50:	 69 f9 03 00 3b f9 03 00         i...;...
  101e58:	 0d f9 03 00 de f8 03 00         ........
  101e60:	 ae f8 03 00 7e f8 03 00         ....~...
  101e68:	 4d f8 03 00 1c f8 03 00         M.......
  101e70:	 ea f7 03 00 b7 f7 03 00         ........
  101e78:	 84 f7 03 00 4f f7 03 00         ....O...
  101e80:	 1b f7 03 00 e6 f6 03 00         ........
  101e88:	 b0 f6 03 00 79 f6 03 00         ....y...
  101e90:	 42 f6 03 00 0b f6 03 00         B.......
  101e98:	 d3 f5 03 00 9a f5 03 00         ........
  101ea0:	 60 f5 03 00 26 f5 03 00         `...&...
  101ea8:	 eb f4 03 00 b0 f4 03 00         ........
  101eb0:	 74 f4 03 00 37 f4 03 00         t...7...
  101eb8:	 fa f3 03 00 bc f3 03 00         ........
  101ec0:	 7e f3 03 00 3f f3 03 00         ~...?...
  101ec8:	 00 f3 03 00 bf f2 03 00         ........
  101ed0:	 7f f2 03 00 3d f2 03 00         ....=...
  101ed8:	 fb f1 03 00 b9 f1 03 00         ........
  101ee0:	 75 f1 03 00 32 f1 03 00         u...2...
  101ee8:	 ed f0 03 00 a8 f0 03 00         ........
  101ef0:	 62 f0 03 00 1c f0 03 00         b.......
  101ef8:	 d5 ef 03 00 8e ef 03 00         ........
  101f00:	 46 ef 03 00 fd ee 03 00         F.......
  101f08:	 b4 ee 03 00 6a ee 03 00         ....j...
  101f10:	 1f ee 03 00 d4 ed 03 00         ........
  101f18:	 88 ed 03 00 3c ed 03 00         ....<...
  101f20:	 ef ec 03 00 a2 ec 03 00         ........
  101f28:	 53 ec 03 00 05 ec 03 00         S.......
  101f30:	 b5 eb 03 00 65 eb 03 00         ....e...
  101f38:	 15 eb 03 00 c3 ea 03 00         ........
  101f40:	 72 ea 03 00 1f ea 03 00         r.......
  101f48:	 cc e9 03 00 79 e9 03 00         ....y...
  101f50:	 24 e9 03 00 d0 e8 03 00         $.......
  101f58:	 7b e8 03 00 25 e8 03 00         {...%...
  101f60:	 ce e7 03 00 77 e7 03 00         ....w...
  101f68:	 1e e7 03 00 c6 e6 03 00         ........
  101f70:	 6d e6 03 00 14 e6 03 00         m.......
  101f78:	 ba e5 03 00 5e e5 03 00         ....^...
  101f80:	 03 e5 03 00 a7 e4 03 00         ........
  101f88:	 4b e4 03 00 ed e3 03 00         K.......
  101f90:	 8f e3 03 00 31 e3 03 00         ....1...
  101f98:	 d2 e2 03 00 73 e2 03 00         ....s...
  101fa0:	 12 e2 03 00 b1 e1 03 00         ........
  101fa8:	 50 e1 03 00 ee e0 03 00         P.......
  101fb0:	 8c e0 03 00 28 e0 03 00         ....(...
  101fb8:	 c5 df 03 00 60 df 03 00         ....`...
  101fc0:	 fb de 03 00 95 de 03 00         ........
  101fc8:	 2f de 03 00 c9 dd 03 00         /.......
  101fd0:	 61 dd 03 00 f9 dc 03 00         a.......
  101fd8:	 91 dc 03 00 28 dc 03 00         ....(...
  101fe0:	 be db 03 00 53 db 03 00         ....S...
  101fe8:	 e8 da 03 00 7d da 03 00         ....}...
  101ff0:	 11 da 03 00 a4 d9 03 00         ........
  101ff8:	 37 d9 03 00 c9 d8 03 00         7.......
  102000:	 5a d8 03 00 eb d7 03 00         Z.......
  102008:	 7c d7 03 00 0c d7 03 00         |.......
  102010:	 9a d6 03 00 29 d6 03 00         ....)...
  102018:	 b7 d5 03 00 44 d5 03 00         ....D...
  102020:	 d1 d4 03 00 5d d4 03 00         ....]...
  102028:	 e8 d3 03 00 74 d3 03 00         ....t...
  102030:	 fe d2 03 00 88 d2 03 00         ........
  102038:	 11 d2 03 00 9a d1 03 00         ........
  102040:	 22 d1 03 00 a9 d0 03 00         ".......
  102048:	 30 d0 03 00 b6 cf 03 00         0.......
  102050:	 3c cf 03 00 c1 ce 03 00         <.......
  102058:	 46 ce 03 00 c9 cd 03 00         F.......
  102060:	 4d cd 03 00 cf cc 03 00         M.......
  102068:	 51 cc 03 00 d3 cb 03 00         Q.......
  102070:	 54 cb 03 00 d5 ca 03 00         T.......
  102078:	 54 ca 03 00 d4 c9 03 00         T.......
  102080:	 53 c9 03 00 d0 c8 03 00         S.......
  102088:	 4e c8 03 00 cb c7 03 00         N.......
  102090:	 47 c7 03 00 c3 c6 03 00         G.......
  102098:	 3e c6 03 00 b9 c5 03 00         >.......
  1020a0:	 32 c5 03 00 ac c4 03 00         2.......
  1020a8:	 24 c4 03 00 9d c3 03 00         $.......
  1020b0:	 15 c3 03 00 8c c2 03 00         ........
  1020b8:	 02 c2 03 00 78 c1 03 00         ....x...
  1020c0:	 ee c0 03 00 62 c0 03 00         ....b...
  1020c8:	 d7 bf 03 00 4a bf 03 00         ....J...
  1020d0:	 bd be 03 00 30 be 03 00         ....0...
  1020d8:	 a1 bd 03 00 13 bd 03 00         ........
  1020e0:	 83 bc 03 00 f3 bb 03 00         ........
  1020e8:	 62 bb 03 00 d2 ba 03 00         b.......
  1020f0:	 40 ba 03 00 ae b9 03 00         @.......
  1020f8:	 1b b9 03 00 88 b8 03 00         ........
  102100:	 f4 b7 03 00 5f b7 03 00         ...._...
  102108:	 cb b6 03 00 35 b6 03 00         ....5...
  102110:	 9f b5 03 00 08 b5 03 00         ........
  102118:	 71 b4 03 00 d9 b3 03 00         q.......
  102120:	 40 b3 03 00 a8 b2 03 00         @.......
  102128:	 0d b2 03 00 74 b1 03 00         ....t...
  102130:	 d9 b0 03 00 3d b0 03 00         ....=...
  102138:	 a1 af 03 00 05 af 03 00         ........
  102140:	 68 ae 03 00 cb ad 03 00         h.......
  102148:	 2c ad 03 00 8e ac 03 00         ,.......
  102150:	 ef ab 03 00 4f ab 03 00         ....O...
  102158:	 ae aa 03 00 0d aa 03 00         ........
  102160:	 6b a9 03 00 ca a8 03 00         k.......
  102168:	 27 a8 03 00 84 a7 03 00         '.......
  102170:	 e0 a6 03 00 3c a6 03 00         ....<...
  102178:	 97 a5 03 00 f1 a4 03 00         ........
  102180:	 4b a4 03 00 a5 a3 03 00         K.......
  102188:	 fe a2 03 00 56 a2 03 00         ....V...
  102190:	 ad a1 03 00 05 a1 03 00         ........
  102198:	 5b a0 03 00 b1 9f 03 00         [.......
  1021a0:	 07 9f 03 00 5b 9e 03 00         ....[...
  1021a8:	 af 9d 03 00 04 9d 03 00         ........
  1021b0:	 57 9c 03 00 aa 9b 03 00         W.......
  1021b8:	 fc 9a 03 00 4d 9a 03 00         ....M...
  1021c0:	 9e 99 03 00 ee 98 03 00         ........
  1021c8:	 3e 98 03 00 8e 97 03 00         >.......
  1021d0:	 dd 96 03 00 2b 96 03 00         ....+...
  1021d8:	 79 95 03 00 c6 94 03 00         y.......
  1021e0:	 12 94 03 00 5e 93 03 00         ....^...
  1021e8:	 a9 92 03 00 f5 91 03 00         ........
  1021f0:	 3f 91 03 00 89 90 03 00         ?.......
  1021f8:	 d2 8f 03 00 1b 8f 03 00         ........
  102200:	 63 8e 03 00 ab 8d 03 00         c.......
  102208:	 f2 8c 03 00 38 8c 03 00         ....8...
  102210:	 7e 8b 03 00 c4 8a 03 00         ~.......
  102218:	 09 8a 03 00 4d 89 03 00         ....M...
  102220:	 91 88 03 00 d4 87 03 00         ........
  102228:	 16 87 03 00 59 86 03 00         ....Y...
  102230:	 9a 85 03 00 dc 84 03 00         ........
  102238:	 1c 84 03 00 5c 83 03 00         ....\...
  102240:	 9c 82 03 00 da 81 03 00         ........
  102248:	 19 81 03 00 57 80 03 00         ....W...
  102250:	 94 7f 03 00 d1 7e 03 00         .....~..
  102258:	 0d 7e 03 00 49 7d 03 00         .~..I}..
  102260:	 84 7c 03 00 be 7b 03 00         .|...{..
  102268:	 f8 7a 03 00 32 7a 03 00         .z..2z..
  102270:	 6b 79 03 00 a4 78 03 00         ky...x..
  102278:	 dc 77 03 00 13 77 03 00         .w...w..
  102280:	 4a 76 03 00 80 75 03 00         Jv...u..
  102288:	 b6 74 03 00 eb 73 03 00         .t...s..
  102290:	 20 73 03 00 54 72 03 00          s..Tr..
  102298:	 88 71 03 00 bb 70 03 00         .q...p..
  1022a0:	 ed 6f 03 00 20 6f 03 00         .o.. o..
  1022a8:	 50 6e 03 00 82 6d 03 00         Pn...m..
  1022b0:	 b2 6c 03 00 e2 6b 03 00         .l...k..
  1022b8:	 12 6b 03 00 40 6a 03 00         .k..@j..
  1022c0:	 6f 69 03 00 9d 68 03 00         oi...h..
  1022c8:	 ca 67 03 00 f7 66 03 00         .g...f..
  1022d0:	 23 66 03 00 4f 65 03 00         #f..Oe..
  1022d8:	 7a 64 03 00 a5 63 03 00         zd...c..
  1022e0:	 cf 62 03 00 f8 61 03 00         .b...a..
  1022e8:	 21 61 03 00 4a 60 03 00         !a..J`..
  1022f0:	 72 5f 03 00 9a 5e 03 00         r_...^..
  1022f8:	 c1 5d 03 00 e8 5c 03 00         .]...\..
  102300:	 0e 5c 03 00 33 5b 03 00         .\..3[..
  102308:	 58 5a 03 00 7d 59 03 00         XZ..}Y..
  102310:	 a1 58 03 00 c4 57 03 00         .X...W..
  102318:	 e7 56 03 00 09 56 03 00         .V...V..
  102320:	 2b 55 03 00 4c 54 03 00         +U..LT..
  102328:	 6d 53 03 00 8e 52 03 00         mS...R..
  102330:	 ad 51 03 00 cd 50 03 00         .Q...P..
  102338:	 eb 4f 03 00 0a 4f 03 00         .O...O..
  102340:	 27 4e 03 00 45 4d 03 00         'N..EM..
  102348:	 62 4c 03 00 7e 4b 03 00         bL..~K..
  102350:	 9a 4a 03 00 b5 49 03 00         .J...I..
  102358:	 cf 48 03 00 ea 47 03 00         .H...G..
  102360:	 04 47 03 00 1d 46 03 00         .G...F..
  102368:	 35 45 03 00 4d 44 03 00         5E..MD..
  102370:	 65 43 03 00 7c 42 03 00         eC..|B..
  102378:	 93 41 03 00 a9 40 03 00         .A...@..
  102380:	 bf 3f 03 00 d4 3e 03 00         .?...>..
  102388:	 e9 3d 03 00 fd 3c 03 00         .=...<..
  102390:	 11 3c 03 00 24 3b 03 00         .<..$;..
  102398:	 37 3a 03 00 49 39 03 00         7:..I9..
  1023a0:	 5b 38 03 00 6c 37 03 00         [8..l7..
  1023a8:	 7c 36 03 00 8d 35 03 00         |6...5..
  1023b0:	 9d 34 03 00 ac 33 03 00         .4...3..
  1023b8:	 bb 32 03 00 c9 31 03 00         .2...1..
  1023c0:	 d7 30 03 00 e4 2f 03 00         .0.../..
  1023c8:	 f1 2e 03 00 fd 2d 03 00         .....-..
  1023d0:	 08 2d 03 00 14 2c 03 00         .-...,..
  1023d8:	 1f 2b 03 00 29 2a 03 00         .+..)*..
  1023e0:	 33 29 03 00 3c 28 03 00         3)..<(..
  1023e8:	 44 27 03 00 4d 26 03 00         D'..M&..
  1023f0:	 55 25 03 00 5c 24 03 00         U%..\$..
  1023f8:	 63 23 03 00 69 22 03 00         c#..i"..
  102400:	 70 21 03 00 75 20 03 00         p!..u ..
  102408:	 7a 1f 03 00 7f 1e 03 00         z.......
  102410:	 82 1d 03 00 86 1c 03 00         ........
  102418:	 89 1b 03 00 8c 1a 03 00         ........
  102420:	 8e 19 03 00 8f 18 03 00         ........
  102428:	 90 17 03 00 91 16 03 00         ........
  102430:	 92 15 03 00 91 14 03 00         ........
  102438:	 91 13 03 00 8f 12 03 00         ........
  102440:	 8e 11 03 00 8b 10 03 00         ........
  102448:	 89 0f 03 00 85 0e 03 00         ........
  102450:	 82 0d 03 00 7e 0c 03 00         ....~...
  102458:	 7a 0b 03 00 74 0a 03 00         z...t...
  102460:	 6f 09 03 00 69 08 03 00         o...i...
  102468:	 62 07 03 00 5b 06 03 00         b...[...
  102470:	 54 05 03 00 4c 04 03 00         T...L...
  102478:	 44 03 03 00 3b 02 03 00         D...;...
  102480:	 32 01 03 00 28 00 03 00         2...(...
  102488:	 1e ff 02 00 13 fe 02 00         ........
  102490:	 08 fd 02 00 fd fb 02 00         ........
  102498:	 f1 fa 02 00 e4 f9 02 00         ........
  1024a0:	 d8 f8 02 00 ca f7 02 00         ........
  1024a8:	 bc f6 02 00 ae f5 02 00         ........
  1024b0:	 9f f4 02 00 90 f3 02 00         ........
  1024b8:	 80 f2 02 00 70 f1 02 00         ....p...
  1024c0:	 60 f0 02 00 4f ef 02 00         `...O...
  1024c8:	 3d ee 02 00 2b ed 02 00         =...+...
  1024d0:	 19 ec 02 00 06 eb 02 00         ........
  1024d8:	 f3 e9 02 00 df e8 02 00         ........
  1024e0:	 cb e7 02 00 b7 e6 02 00         ........
  1024e8:	 a1 e5 02 00 8c e4 02 00         ........
  1024f0:	 76 e3 02 00 60 e2 02 00         v...`...
  1024f8:	 49 e1 02 00 32 e0 02 00         I...2...
  102500:	 1a df 02 00 02 de 02 00         ........
  102508:	 e9 dc 02 00 d0 db 02 00         ........
  102510:	 b7 da 02 00 9d d9 02 00         ........
  102518:	 82 d8 02 00 68 d7 02 00         ....h...
  102520:	 4c d6 02 00 31 d5 02 00         L...1...
  102528:	 14 d4 02 00 f8 d2 02 00         ........
  102530:	 db d1 02 00 bd d0 02 00         ........
  102538:	 a0 cf 02 00 81 ce 02 00         ........
  102540:	 62 cd 02 00 43 cc 02 00         b...C...
  102548:	 24 cb 02 00 04 ca 02 00         $.......
  102550:	 e3 c8 02 00 c2 c7 02 00         ........
  102558:	 a1 c6 02 00 7f c5 02 00         ........
  102560:	 5d c4 02 00 3b c3 02 00         ]...;...
  102568:	 17 c2 02 00 f4 c0 02 00         ........
  102570:	 d0 bf 02 00 ac be 02 00         ........
  102578:	 87 bd 02 00 62 bc 02 00         ....b...
  102580:	 3c bb 02 00 16 ba 02 00         <.......
  102588:	 f0 b8 02 00 c9 b7 02 00         ........
  102590:	 a2 b6 02 00 7a b5 02 00         ....z...
  102598:	 52 b4 02 00 2a b3 02 00         R...*...
  1025a0:	 00 b2 02 00 d7 b0 02 00         ........
  1025a8:	 ad af 02 00 84 ae 02 00         ........
  1025b0:	 59 ad 02 00 2e ac 02 00         Y.......
  1025b8:	 03 ab 02 00 d7 a9 02 00         ........
  1025c0:	 ab a8 02 00 7e a7 02 00         ....~...
  1025c8:	 51 a6 02 00 23 a5 02 00         Q...#...
  1025d0:	 f6 a3 02 00 c7 a2 02 00         ........
  1025d8:	 99 a1 02 00 6a a0 02 00         ....j...
  1025e0:	 3a 9f 02 00 0a 9e 02 00         :.......
  1025e8:	 d9 9c 02 00 a9 9b 02 00         ........
  1025f0:	 78 9a 02 00 46 99 02 00         x...F...
  1025f8:	 14 98 02 00 e2 96 02 00         ........
  102600:	 af 95 02 00 7c 94 02 00         ....|...
  102608:	 49 93 02 00 15 92 02 00         I.......
  102610:	 e1 90 02 00 ac 8f 02 00         ........
  102618:	 77 8e 02 00 41 8d 02 00         w...A...
  102620:	 0c 8c 02 00 d5 8a 02 00         ........
  102628:	 9e 89 02 00 68 88 02 00         ....h...
  102630:	 30 87 02 00 f8 85 02 00         0.......
  102638:	 c0 84 02 00 88 83 02 00         ........
  102640:	 4f 82 02 00 15 81 02 00         O.......
  102648:	 dc 7f 02 00 a1 7e 02 00         .....~..
  102650:	 67 7d 02 00 2c 7c 02 00         g}..,|..
  102658:	 f1 7a 02 00 b5 79 02 00         .z...y..
  102660:	 79 78 02 00 3d 77 02 00         yx..=w..
  102668:	 ff 75 02 00 c2 74 02 00         .u...t..
  102670:	 85 73 02 00 47 72 02 00         .s..Gr..
  102678:	 09 71 02 00 ca 6f 02 00         .q...o..
  102680:	 8b 6e 02 00 4b 6d 02 00         .n..Km..
  102688:	 0c 6c 02 00 cb 6a 02 00         .l...j..
  102690:	 8b 69 02 00 4a 68 02 00         .i..Jh..
  102698:	 09 67 02 00 c7 65 02 00         .g...e..
  1026a0:	 85 64 02 00 43 63 02 00         .d..Cc..
  1026a8:	 ff 61 02 00 bc 60 02 00         .a...`..
  1026b0:	 78 5f 02 00 34 5e 02 00         x_..4^..
  1026b8:	 f0 5c 02 00 ab 5b 02 00         .\...[..
  1026c0:	 67 5a 02 00 21 59 02 00         gZ..!Y..
  1026c8:	 db 57 02 00 95 56 02 00         .W...V..
  1026d0:	 4f 55 02 00 08 54 02 00         OU...T..
  1026d8:	 c1 52 02 00 7a 51 02 00         .R..zQ..
  1026e0:	 32 50 02 00 e9 4e 02 00         2P...N..
  1026e8:	 a1 4d 02 00 58 4c 02 00         .M..XL..
  1026f0:	 0f 4b 02 00 c5 49 02 00         .K...I..
  1026f8:	 7b 48 02 00 31 47 02 00         {H..1G..
  102700:	 e6 45 02 00 9b 44 02 00         .E...D..
  102708:	 50 43 02 00 04 42 02 00         PC...B..
  102710:	 b8 40 02 00 6b 3f 02 00         .@..k?..
  102718:	 1f 3e 02 00 d2 3c 02 00         .>...<..
  102720:	 84 3b 02 00 36 3a 02 00         .;..6:..
  102728:	 e7 38 02 00 99 37 02 00         .8...7..
  102730:	 4a 36 02 00 fb 34 02 00         J6...4..
  102738:	 ac 33 02 00 5c 32 02 00         .3..\2..
  102740:	 0b 31 02 00 bb 2f 02 00         .1.../..
  102748:	 6a 2e 02 00 19 2d 02 00         j....-..
  102750:	 c7 2b 02 00 75 2a 02 00         .+..u*..
  102758:	 23 29 02 00 d1 27 02 00         #)...'..
  102760:	 7e 26 02 00 2a 25 02 00         ~&..*%..
  102768:	 d6 23 02 00 83 22 02 00         .#..."..
  102770:	 2e 21 02 00 da 1f 02 00         .!......
  102778:	 85 1e 02 00 30 1d 02 00         ....0...
  102780:	 da 1b 02 00 85 1a 02 00         ........
  102788:	 2e 19 02 00 d8 17 02 00         ........
  102790:	 81 16 02 00 2a 15 02 00         ....*...
  102798:	 d2 13 02 00 7b 12 02 00         ....{...
  1027a0:	 22 11 02 00 ca 0f 02 00         ".......
  1027a8:	 71 0e 02 00 18 0d 02 00         q.......
  1027b0:	 bf 0b 02 00 65 0a 02 00         ....e...
  1027b8:	 0b 09 02 00 b1 07 02 00         ........
  1027c0:	 56 06 02 00 fb 04 02 00         V.......
  1027c8:	 a0 03 02 00 44 02 02 00         ....D...
  1027d0:	 e8 00 02 00 8c ff 01 00         ........
  1027d8:	 30 fe 01 00 d3 fc 01 00         0.......
  1027e0:	 76 fb 01 00 18 fa 01 00         v.......
  1027e8:	 ba f8 01 00 5d f7 01 00         ....]...
  1027f0:	 fe f5 01 00 a0 f4 01 00         ........
  1027f8:	 41 f3 01 00 e1 f1 01 00         A.......
  102800:	 82 f0 01 00 22 ef 01 00         ...."...
  102808:	 c2 ed 01 00 61 ec 01 00         ....a...
  102810:	 01 eb 01 00 a0 e9 01 00         ........
  102818:	 3f e8 01 00 dd e6 01 00         ?.......
  102820:	 7b e5 01 00 19 e4 01 00         {.......
  102828:	 b6 e2 01 00 53 e1 01 00         ....S...
  102830:	 f0 df 01 00 8d de 01 00         ........
  102838:	 29 dd 01 00 c5 db 01 00         ).......
  102840:	 61 da 01 00 fd d8 01 00         a.......
  102848:	 98 d7 01 00 33 d6 01 00         ....3...
  102850:	 cd d4 01 00 68 d3 01 00         ....h...
  102858:	 02 d2 01 00 9c d0 01 00         ........
  102860:	 35 cf 01 00 cf cd 01 00         5.......
  102868:	 67 cc 01 00 00 cb 01 00         g.......
  102870:	 98 c9 01 00 30 c8 01 00         ....0...
  102878:	 c8 c6 01 00 60 c5 01 00         ....`...
  102880:	 f7 c3 01 00 8e c2 01 00         ........
  102888:	 25 c1 01 00 bc bf 01 00         %.......
  102890:	 51 be 01 00 e8 bc 01 00         Q.......
  102898:	 7e bb 01 00 13 ba 01 00         ~.......
  1028a0:	 a8 b8 01 00 3d b7 01 00         ....=...
  1028a8:	 d1 b5 01 00 66 b4 01 00         ....f...
  1028b0:	 fa b2 01 00 8e b1 01 00         ........
  1028b8:	 21 b0 01 00 b5 ae 01 00         !.......
  1028c0:	 48 ad 01 00 db ab 01 00         H.......
  1028c8:	 6d aa 01 00 00 a9 01 00         m.......
  1028d0:	 92 a7 01 00 23 a6 01 00         ....#...
  1028d8:	 b5 a4 01 00 46 a3 01 00         ....F...
  1028e0:	 d7 a1 01 00 68 a0 01 00         ....h...
  1028e8:	 f8 9e 01 00 88 9d 01 00         ........
  1028f0:	 19 9c 01 00 a8 9a 01 00         ........
  1028f8:	 38 99 01 00 c7 97 01 00         8.......
  102900:	 56 96 01 00 e5 94 01 00         V.......
  102908:	 73 93 01 00 02 92 01 00         s.......
  102910:	 90 90 01 00 1d 8f 01 00         ........
  102918:	 ab 8d 01 00 39 8c 01 00         ....9...
  102920:	 c5 8a 01 00 52 89 01 00         ....R...
  102928:	 de 87 01 00 6b 86 01 00         ....k...
  102930:	 f7 84 01 00 83 83 01 00         ........
  102938:	 0f 82 01 00 9a 80 01 00         ........
  102940:	 25 7f 01 00 b0 7d 01 00         %....}..
  102948:	 3b 7c 01 00 c6 7a 01 00         ;|...z..
  102950:	 50 79 01 00 da 77 01 00         Py...w..
  102958:	 64 76 01 00 ee 74 01 00         dv...t..
  102960:	 77 73 01 00 00 72 01 00         ws...r..
  102968:	 88 70 01 00 11 6f 01 00         .p...o..
  102970:	 9a 6d 01 00 22 6c 01 00         .m.."l..
  102978:	 aa 6a 01 00 32 69 01 00         .j..2i..
  102980:	 ba 67 01 00 41 66 01 00         .g..Af..
  102988:	 c8 64 01 00 4f 63 01 00         .d..Oc..
  102990:	 d6 61 01 00 5d 60 01 00         .a..]`..
  102998:	 e3 5e 01 00 69 5d 01 00         .^..i]..
  1029a0:	 ef 5b 01 00 75 5a 01 00         .[..uZ..
  1029a8:	 fa 58 01 00 7f 57 01 00         .X...W..
  1029b0:	 05 56 01 00 8a 54 01 00         .V...T..
  1029b8:	 0e 53 01 00 93 51 01 00         .S...Q..
  1029c0:	 17 50 01 00 9b 4e 01 00         .P...N..
  1029c8:	 1f 4d 01 00 a2 4b 01 00         .M...K..
  1029d0:	 26 4a 01 00 a9 48 01 00         &J...H..
  1029d8:	 2c 47 01 00 af 45 01 00         ,G...E..
  1029e0:	 32 44 01 00 b4 42 01 00         2D...B..
  1029e8:	 36 41 01 00 b8 3f 01 00         6A...?..
  1029f0:	 3a 3e 01 00 bc 3c 01 00         :>...<..
  1029f8:	 3e 3b 01 00 bf 39 01 00         >;...9..
  102a00:	 40 38 01 00 c1 36 01 00         @8...6..
  102a08:	 42 35 01 00 c2 33 01 00         B5...3..
  102a10:	 42 32 01 00 c3 30 01 00         B2...0..
  102a18:	 43 2f 01 00 c2 2d 01 00         C/...-..
  102a20:	 42 2c 01 00 c2 2a 01 00         B,...*..
  102a28:	 40 29 01 00 c0 27 01 00         @)...'..
  102a30:	 3f 26 01 00 be 24 01 00         ?&...$..
  102a38:	 3c 23 01 00 ba 21 01 00         <#...!..
  102a40:	 39 20 01 00 b7 1e 01 00         9 ......
  102a48:	 35 1d 01 00 b3 1b 01 00         5.......
  102a50:	 30 1a 01 00 ad 18 01 00         0.......
  102a58:	 2b 17 01 00 a8 15 01 00         +.......
  102a60:	 24 14 01 00 a1 12 01 00         $.......
  102a68:	 1d 11 01 00 9a 0f 01 00         ........
  102a70:	 16 0e 01 00 92 0c 01 00         ........
  102a78:	 0e 0b 01 00 8a 09 01 00         ........
  102a80:	 06 08 01 00 81 06 01 00         ........
  102a88:	 fc 04 01 00 77 03 01 00         ....w...
  102a90:	 f2 01 01 00 6d 00 01 00         ....m...
  102a98:	 e8 fe 00 00 62 fd 00 00         ....b...
  102aa0:	 dc fb 00 00 56 fa 00 00         ....V...
  102aa8:	 d0 f8 00 00 4a f7 00 00         ....J...
  102ab0:	 c4 f5 00 00 3d f4 00 00         ....=...
  102ab8:	 b7 f2 00 00 30 f1 00 00         ....0...
  102ac0:	 a9 ef 00 00 22 ee 00 00         ...."...
  102ac8:	 9b ec 00 00 14 eb 00 00         ........
  102ad0:	 8c e9 00 00 04 e8 00 00         ........
  102ad8:	 7d e6 00 00 f5 e4 00 00         }.......
  102ae0:	 6d e3 00 00 e5 e1 00 00         m.......
  102ae8:	 5c e0 00 00 d4 de 00 00         \.......
  102af0:	 4c dd 00 00 c3 db 00 00         L.......
  102af8:	 3a da 00 00 b1 d8 00 00         :.......
  102b00:	 28 d7 00 00 9f d5 00 00         (.......
  102b08:	 15 d4 00 00 8c d2 00 00         ........
  102b10:	 03 d1 00 00 79 cf 00 00         ....y...
  102b18:	 ef cd 00 00 65 cc 00 00         ....e...
  102b20:	 db ca 00 00 51 c9 00 00         ....Q...
  102b28:	 c6 c7 00 00 3c c6 00 00         ....<...
  102b30:	 b1 c4 00 00 26 c3 00 00         ....&...
  102b38:	 9c c1 00 00 11 c0 00 00         ........
  102b40:	 85 be 00 00 fb bc 00 00         ........
  102b48:	 6f bb 00 00 e4 b9 00 00         o.......
  102b50:	 58 b8 00 00 cd b6 00 00         X.......
  102b58:	 41 b5 00 00 b6 b3 00 00         A.......
  102b60:	 29 b2 00 00 9d b0 00 00         ).......
  102b68:	 11 af 00 00 85 ad 00 00         ........
  102b70:	 f9 ab 00 00 6c aa 00 00         ....l...
  102b78:	 e0 a8 00 00 53 a7 00 00         ....S...
  102b80:	 c6 a5 00 00 39 a4 00 00         ....9...
  102b88:	 ac a2 00 00 1f a1 00 00         ........
  102b90:	 92 9f 00 00 05 9e 00 00         ........
  102b98:	 77 9c 00 00 ea 9a 00 00         w.......
  102ba0:	 5c 99 00 00 cf 97 00 00         \.......
  102ba8:	 41 96 00 00 b3 94 00 00         A.......
  102bb0:	 25 93 00 00 98 91 00 00         %.......
  102bb8:	 09 90 00 00 7b 8e 00 00         ....{...
  102bc0:	 ed 8c 00 00 5e 8b 00 00         ....^...
  102bc8:	 d0 89 00 00 42 88 00 00         ....B...
  102bd0:	 b3 86 00 00 25 85 00 00         ....%...
  102bd8:	 96 83 00 00 07 82 00 00         ........
  102be0:	 78 80 00 00 e9 7e 00 00         x....~..
  102be8:	 59 7d 00 00 ca 7b 00 00         Y}...{..
  102bf0:	 3b 7a 00 00 ac 78 00 00         ;z...x..
  102bf8:	 1d 77 00 00 8d 75 00 00         .w...u..
  102c00:	 fe 73 00 00 6e 72 00 00         .s..nr..
  102c08:	 df 70 00 00 4f 6f 00 00         .p..Oo..
  102c10:	 bf 6d 00 00 2f 6c 00 00         .m../l..
  102c18:	 a0 6a 00 00 0f 69 00 00         .j...i..
  102c20:	 7f 67 00 00 ef 65 00 00         .g...e..
  102c28:	 5f 64 00 00 cf 62 00 00         _d...b..
  102c30:	 3f 61 00 00 ae 5f 00 00         ?a..._..
  102c38:	 1e 5e 00 00 8d 5c 00 00         .^...\..
  102c40:	 fd 5a 00 00 6d 59 00 00         .Z..mY..
  102c48:	 dc 57 00 00 4b 56 00 00         .W..KV..
  102c50:	 ba 54 00 00 2a 53 00 00         .T..*S..
  102c58:	 99 51 00 00 08 50 00 00         .Q...P..
  102c60:	 77 4e 00 00 e6 4c 00 00         wN...L..
  102c68:	 55 4b 00 00 c4 49 00 00         UK...I..
  102c70:	 33 48 00 00 a2 46 00 00         3H...F..
  102c78:	 11 45 00 00 80 43 00 00         .E...C..
  102c80:	 ee 41 00 00 5d 40 00 00         .A..]@..
  102c88:	 cc 3e 00 00 3a 3d 00 00         .>..:=..
  102c90:	 a9 3b 00 00 17 3a 00 00         .;...:..
  102c98:	 86 38 00 00 f4 36 00 00         .8...6..
  102ca0:	 63 35 00 00 d1 33 00 00         c5...3..
  102ca8:	 3f 32 00 00 ad 30 00 00         ?2...0..
  102cb0:	 1c 2f 00 00 8a 2d 00 00         ./...-..
  102cb8:	 f8 2b 00 00 67 2a 00 00         .+..g*..
  102cc0:	 d5 28 00 00 43 27 00 00         .(..C'..
  102cc8:	 b1 25 00 00 20 24 00 00         .%.. $..
  102cd0:	 8d 22 00 00 fc 20 00 00         ."... ..
  102cd8:	 6a 1f 00 00 d8 1d 00 00         j.......
  102ce0:	 46 1c 00 00 b4 1a 00 00         F.......
  102ce8:	 21 19 00 00 8f 17 00 00         !.......
  102cf0:	 fd 15 00 00 6b 14 00 00         ....k...
  102cf8:	 d9 12 00 00 47 11 00 00         ....G...
  102d00:	 b5 0f 00 00 23 0e 00 00         ....#...
  102d08:	 91 0c 00 00 ff 0a 00 00         ........
  102d10:	 6d 09 00 00 db 07 00 00         m.......
  102d18:	 49 06 00 00 b7 04 00 00         I.......
  102d20:	 25 03 00 00 93 01 00 00         %.......
  102d28:	 00 00 00 00                     ....


ff_wma_lsp_codebook_tab:
  102d2c:	 3c 9f 01 ff 83 a1 02 ff         <.......
  102d34:	 63 9c 03 ff 54 c9 04 ff         c...T...
  102d3c:	 d1 59 06 ff 98 87 08 ff         .Y......
  102d44:	 22 e1 0b ff cd ac 11 ff         ".......
  102d4c:	 00 00 00 00 00 00 00 00         ........
  102d54:	 00 00 00 00 00 00 00 00         ........
  102d5c:	 00 00 00 00 00 00 00 00         ........
  102d64:	 00 00 00 00 00 00 00 00         ........
  102d6c:	 d8 81 03 ff 75 03 05 ff         ....u...
  102d74:	 1a 6c 06 ff 96 ed 07 ff         .l......
  102d7c:	 29 94 09 ff c7 81 0b ff         ).......
  102d84:	 54 c8 0d ff c1 72 10 ff         T....r..
  102d8c:	 ce c1 13 ff 9c dc 17 ff         ........
  102d94:	 7a a5 1c ff 76 38 22 ff         z...v8".
  102d9c:	 f9 13 29 ff f4 f8 31 ff         ..)...1.
  102da4:	 28 f0 3e ff 1b 9b 55 ff         (.>...U.
  102dac:	 04 a9 0c ff 72 4d 11 ff         ....rM..
  102db4:	 11 39 15 ff 6b 62 19 ff         .9..kb..
  102dbc:	 43 e3 1d ff 86 cb 22 ff         C.....".
  102dc4:	 01 51 28 ff 44 6a 2e ff         .Q(.Dj..
  102dcc:	 32 1e 35 ff c0 b3 3d ff         2.5...=.
  102dd4:	 f0 16 48 ff 11 8b 54 ff         ..H...T.
  102ddc:	 f1 0d 61 ff 62 4e 70 ff         ..a.bNp.
  102de4:	 18 29 84 ff e3 37 a1 ff         .)...7..
  102dec:	 0e 83 1d ff f5 2f 29 ff         ...../).
  102df4:	 c3 44 33 ff 43 71 3b ff         .D3.Cq;.
  102dfc:	 c5 3c 43 ff 3e 40 4b ff         .<C.>@K.
  102e04:	 e5 d3 53 ff 5c 01 5d ff         ..S.\.].
  102e0c:	 88 4a 67 ff 24 80 73 ff         .Jg.$.s.
  102e14:	 0e 83 81 ff 65 55 90 ff         ....eU..
  102e1c:	 b4 ce a0 ff 28 7f b3 ff         ....(...
  102e24:	 83 be c8 ff 4c fd e8 ff         ....L...
  102e2c:	 62 69 48 ff a8 fd 56 ff         biH...V.
  102e34:	 79 06 65 ff cd 75 72 ff         y.e..ur.
  102e3c:	 e9 47 7f ff b3 5e 8c ff         .G...^..
  102e44:	 46 0a 99 ff e1 7d a5 ff         F....}..
  102e4c:	 27 a7 b2 ff f3 3c c0 ff         '....<..
  102e54:	 2d b5 ce ff a5 4d dd ff         -....M..
  102e5c:	 fc 8e ed ff e9 b7 ff ff         ........
  102e64:	 84 68 15 00 30 47 2f 00         .h..0G/.
  102e6c:	 36 22 80 ff 36 3d 94 ff         6"..6=..
  102e74:	 65 6f a5 ff 2b e1 b5 ff         eo..+...
  102e7c:	 d2 c4 c3 ff a7 ae d0 ff         ........
  102e84:	 76 a9 dd ff e6 07 ea ff         v.......
  102e8c:	 f4 c5 f6 ff af eb 03 00         ........
  102e94:	 75 3f b3 00 45 2a 20 00         u?..E* .
  102e9c:	 49 a2 2f 00 74 60 41 00         I./.t`A.
  102ea4:	 5f 0e 53 00 54 cb 66 00         _.S.T.f.
  102eac:	 80 0f de ff 29 eb f7 ff         ....)...
  102eb4:	 2d 5b 0b 00 3a 03 1b 00         -[..:...
  102ebc:	 e3 c4 27 00 79 ca 32 00         ..'.y.2.
  102ec4:	 2a 72 3c 00 82 55 45 00         *r<..UE.
  102ecc:	 3c a6 4e 00 60 3f 58 00         <.N.`?X.
  102ed4:	 cd 05 62 00 82 04 6d 00         ..b...m.
  102edc:	 4d f8 79 00 c5 56 88 00         M.y..V..
  102ee4:	 fb 40 9a 00 9a 26 b0 00         .@...&..
  102eec:	 31 0b 45 00 48 6d 5e 00         1.E.Hm^.
  102ef4:	 0a 2f 71 00 59 6e 81 00         ./q.Yn..
  102efc:	 4f 23 91 00 a8 57 a2 00         O#...W..
  102f04:	 53 d0 b5 00 4d 67 cf 00         S...Mg..
  102f0c:	 d6 00 8d 00 d9 22 95 00         ....."..
  102f14:	 0a d2 0e 00 31 ee a6 00         ....1...
  102f1c:	 8b 35 b0 00 0e f9 bb 00         .5......
  102f24:	 d2 c2 c9 00 b2 9f d5 00         ........
  102f2c:	 1b 69 31 00 29 b1 47 00         .i1.).G.
  102f34:	 7c bb 55 00 fd 50 61 00         |.U..Pa.
  102f3c:	 a9 52 6b 00 a1 4f 74 00         .Rk..Ot.
  102f44:	 eb ae 7c 00 c7 ba 84 00         ..|.....
  102f4c:	 00 00 00 00 00 00 00 00         ........
  102f54:	 00 00 00 00 00 00 00 00         ........
  102f5c:	 00 00 00 00 00 00 00 00         ........
  102f64:	 00 00 00 00 00 00 00 00         ........
  102f6c:	 98 dd c7 00 88 68 d4 00         .....h..
  102f74:	 ee 0a dd 00 72 a8 e3 00         ....r...
  102f7c:	 47 38 e9 00 92 5c ee 00         G8...\..
  102f84:	 43 90 f3 00 c0 5e f9 00         C....^..
  102f8c:	 00 00 00 00 00 00 00 00         ........
  102f94:	 00 00 00 00 00 00 00 00         ........
  102f9c:	 00 00 00 00 00 00 00 00         ........
  102fa4:	 00 00 00 00 00 00 00 00         ........


pow_res_tab:
  102fac:	 00 00 04 00 bf c1 04 00         ........
  102fb4:	 28 a8 05 00 28 ba 06 00         (...(...


pow_4_tab:
  102fbc:	 a0 e8 1a 00 d5 b3 1a 00         ........
  102fc4:	 01 81 1a 00 03 50 1a 00         .....P..
  102fcc:	 bd 20 1a 00 15 f3 19 00         . ......
  102fd4:	 f0 c6 19 00 39 9c 19 00         ....9...
  102fdc:	 dc 72 19 00 c4 4a 19 00         .r...J..
  102fe4:	 e0 23 19 00 20 fe 18 00         .#.. ...
  102fec:	 76 d9 18 00 d2 b5 18 00         v.......
  102ff4:	 28 93 18 00 6c 71 18 00         (...lq..
  102ffc:	 93 50 18 00 92 30 18 00         .P...0..
  103004:	 5f 11 18 00 f2 f2 17 00         _.......
  10300c:	 41 d5 17 00 45 b8 17 00         A...E...
  103014:	 f5 9b 17 00 4c 80 17 00         ....L...
  10301c:	 42 65 17 00 d0 4a 17 00         Be...J..
  103024:	 f2 30 17 00 a0 17 17 00         .0......
  10302c:	 d7 fe 16 00 90 e6 16 00         ........
  103034:	 c7 ce 16 00 78 b7 16 00         ....x...
  10303c:	 9e a0 16 00                     ....


pow10_bit_tab:
  103040:	 01 00 00 00 0a 00 00 00         ........
  103048:	 64 00 00 00 e8 03 00 00         d.......
  103050:	 10 27 00 00 a0 86 01 00         .'......
  103058:	 90 d0 03 00                     ....


pow20_tab:
  10305c:	 00 00 01 00 3c 1f 01 00         ....<...
  103064:	 48 42 01 00 9c 69 01 00         HB...i..
  10306c:	 bb 95 01 00 3d c7 01 00         ....=...
  103074:	 c9 fe 01 00 1c 3d 02 00         .....=..
  10307c:	 0a 83 02 00 81 d1 02 00         ........
  103084:	 8b 29 03 00 52 8c 03 00         .)..R...
  10308c:	 27 fb 03 00 82 77 04 00         '....w..
  103094:	 0a 03 05 00 98 9f 05 00         ........
  10309c:	 40 4f 06 00 57 14 07 00         @O..W...
  1030a4:	 7a f1 07 00 9a e9 08 00         z.......


coef4_huff_tab:
  1030ac:	 05 20 05 20 05 20 05 20         . . . . 
  1030b4:	 0d 40 b0 00 2d 20 b4 00         .@..- ..
  1030bc:	 19 20 19 20 c0 00 d0 00         . . ....
  1030c4:	 e8 00 3d 20 40 01 58 01         ..= @.X.
  1030cc:	 41 20 b0 01 c0 01 d4 01         A ......
  1030d4:	 15 00 05 80 01 60 d0 01         .....`..
  1030dc:	 e0 01 51 20 e8 01 29 40         ..Q ..)@
  1030e4:	 95 20 95 20 20 02 30 02         . .  .0.
  1030ec:	 e9 20 38 02 a0 02 61 20         . 8...a 
  1030f4:	 a8 02 10 03 20 03 09 21         .... ..!
  1030fc:	 b5 20 b5 20 00 03 10 03         . . ....
  103104:	 20 03 71 20 20 03 c1 20          .q  .. 
  10310c:	 28 03 35 40 80 03 25 21         (.5@..%!
  103114:	 11 40 78 03 81 20 d0 03         .@x.. ..
  10311c:	 49 60 0a 2c b5 21 b5 21         I`.,.!.!
  103124:	 a4 03 d4 03 00 04 a9 40         .......@
  10312c:	 00 04 41 21 00 04 41 40         ..A!..A@
  103134:	 19 22 b9 40 c5 21 c5 21         .".@.!.!
  10313c:	 c0 03 d0 03 e0 03 c9 40         .......@
  103144:	 e0 03 a1 20 e0 03 f4 03         ... ....
  10314c:	 20 04 29 22 28 04 90 04          .)"(...
  103154:	 d5 21 d5 21 51 21 74 04         .!.!Q!t.
  10315c:	 61 21 90 04 a0 04 02 20         a!..... 
  103164:	 a4 04 51 40 c0 04 01 a0         ..Q@....
  10316c:	 11 21 b0 04 19 c0 79 22         .!....y"
  103174:	 85 40 85 40 80 04 90 04         .@.@....
  10317c:	 a0 04 b4 04 11 80 d0 04         ........
  103184:	 e8 04 29 60 40 05 99 21         ..)`@..!
  10318c:	 40 05 a9 21 35 21 35 21         @..!5!5!
  103194:	 d1 20 10 05 95 41 10 05         . ...A..
  10319c:	 06 44 10 05 20 05 16 20         .D.. .. 
  1031a4:	 a5 41 10 05 f1 40 10 05         .A...@..
  1031ac:	 61 40 10 05 02 24 18 05         a@...$..
  1031b4:	 80 05 01 41 80 05 02 3c         ...A...<
  1031bc:	 84 05 21 41 f1 20 01 c0         ..!A. ..
  1031c4:	 80 05 21 a0 15 23 b5 60         ..!..#.`
  1031cc:	 64 05 90 05 a0 05 11 e0         d.......
  1031d4:	 55 23 55 23 80 05 b9 61         U#U#...a
  1031dc:	 1a 2c 70 05 29 42 59 61         .,p.)BYa
  1031e4:	 31 41 50 05 35 22 06 30         1AP.5".0
  1031ec:	 40 05 50 05 60 05 71 40         @.P.`.q@
  1031f4:	 60 05 02 28 64 05 98 05         `..(d...
  1031fc:	 65 22 d5 40 11 60 d0 05         e".@.`..
  103204:	 e0 05 81 21 e0 05 51 41         ...!..QA
  10320c:	 e0 05 02 40 c1 22 b1 22         ...@."."
  103214:	 c0 05 f5 41 75 80 b0 05         ...Au...
  10321c:	 c0 05 11 a0 c0 05 d9 22         ......."
  103224:	 59 80 b0 05 69 41 e9 22         Y...iA."
  10322c:	 06 34 06 34 84 05 f1 21         .4.4...!
  103234:	 a0 05 91 40 a8 05 01 e0         ...@....
  10323c:	 f1 60 f8 05 60 06 b1 23         .`..`..#
  103244:	 60 06 31 c0 60 06 21 61         `.1.`.!a
  10324c:	 31 a0 50 06 60 06 21 80         1.P.`.!.
  103254:	 09 23 29 c0 40 06 50 06         .#).@.P.
  10325c:	 60 06 74 06 95 22 95 22         `.t.."."
  103264:	 c1 60 74 06 c1 41 90 06         .`t..A..
  10326c:	 a0 06 05 42 06 58 94 06         ...B.X..
  103274:	 21 23 01 00 95 24 05 81         !#...$..
  10327c:	 80 06 f5 80 80 06 91 80         ........
  103284:	 02 48 7c 06 60 07 c1 a0         .H|.`...
  10328c:	 32 20 50 07 61 80 d1 60         2 P.a..`
  103294:	 40 07 71 60 40 07 41 80         @.q`@.A.
  10329c:	 51 60 30 07 41 22 30 07         Q`0.A"0.
  1032a4:	 16 24 30 07 d5 41 35 23         .$0..A5#
  1032ac:	 28 07 94 07 c4 07 49 61         (.....Ia
  1032b4:	 75 23 75 23 c0 07 0a 64         u#u#...d
  1032bc:	 71 21 b0 07 cc 07 e1 21         q!.....!
  1032c4:	 91 23 94 08 c0 08 e1 60         .#.....`
  1032cc:	 31 42 41 c0 a4 08 02 60         1BA....`
  1032d4:	 e1 40 b0 08 51 a0 b0 08         .@..Q...
  1032dc:	 e1 41 b0 08 c4 08 b5 41         .A.....A
  1032e4:	 75 41 d4 08 02 38 f0 08         uA...8..
  1032ec:	 00 09 14 09 39 80 30 09         ....9.0.
  1032f4:	 89 22 69 60 05 22 05 22         ."i`."."
  1032fc:	 d9 25 99 c1 f9 42 c9 25         .%...B.%
  103304:	 6a 20 79 a1 0a a8 f9 c0         j y.....
  10330c:	 02 6c 70 08 51 24 31 e0         .lp.Q$1.
  103314:	 81 24 58 08 02 54 b8 08         .$X..T..
  10331c:	 24 09 11 41 c1 23 38 09         $..A.#8.
  103324:	 81 80 90 09 e1 23 31 61         .....#1a
  10332c:	 80 09 15 81 06 70 70 09         .....pp.
  103334:	 45 e0 55 42 45 24 75 61         E.UBE$ua
  10333c:	 a1 80 3c 09 20 0a f1 61         ..<. ..a
  103344:	 f5 81 a5 c0 e5 a0 85 62         .......b
  10334c:	 b1 a0 d0 09 a1 a0 91 42         .......B
  103354:	 6d a1 dd 43 9d 82 3d 44         m..C..=D
  10335c:	 bd 42 0e 9c 4e 24 9d e0         .B..N$..
  103364:	 bd e0 6d c1 8d c0 ed a1         ..m.....
  10336c:	 b9 81 b9 81 39 a1 39 a1         ....9.9.
  103374:	 a1 81 11 a1 52 20 94 08         ....R ..
  10337c:	 cc 08 61 23 41 23 90 09         ..a#A#..
  103384:	 a0 09 a1 22 a8 09 41 41         ..."..AA
  10338c:	 61 42 71 42 49 26 39 82         aBqBI&9.
  103394:	 39 26 1a 4c 29 43 0a c0         9&.L)C..
  10339c:	 09 a2 b9 43 60 09 95 25         ...C`..%
  1033a4:	 06 94 06 98 95 62 75 81         .....bu.
  1033ac:	 d5 c0 45 a1 21 81 f0 08         ..E.!...
  1033b4:	 00 09 31 60 6d 61 1e 30         ..1`ma.0
  1033bc:	 e0 08 0e 5c 0a 4c 0a 4c         ...\.L.L
  1033c4:	 c8 08 34 09 60 09 9d 61         ..4.`..a
  1033cc:	 0d 24 50 09 89 23 89 23         .$P..#.#
  1033d4:	 40 09 6d 24 40 09 50 09         @.m$@.P.
  1033dc:	 06 74 c5 24 81 42 30 09         .t.$.B0.
  1033e4:	 40 09 50 09 06 b8 16 44         @.P....D
  1033ec:	 81 60 f1 22 d1 80 10 09         .`."....
  1033f4:	 31 24 11 24 00 09 25 24         1$.$..%$
  1033fc:	 04 09 55 c0 06 68 45 42         ..U..hEB
  103404:	 00 09 a5 24 00 09 81 41         ...$...A
  10340c:	 a1 60 f0 08 00 09 a5 23         .`.....#
  103414:	 00 09 06 50 00 09 91 60         ...P...`
  10341c:	 11 62 02 84 29 e1 39 e1         .b..).9.
  103424:	 ba 20 0b 22 0a d8 79 c1         . ."..y.
  10342c:	 09 44 0a cc 60 08 09 a1         .D..`...
  103434:	 69 25 d9 81 29 82 2a 30         i%..).*0
  10343c:	 49 c1 4a 28 04 08 34 08         I.J(..4.
  103444:	 16 28 05 61 75 c0 75 c0         .(.au.u.
  10344c:	 d9 e0 39 c1 0a ac 29 26         ..9...)&
  103454:	 f9 a1 89 e0 c0 07 81 a0         ........
  10345c:	 c1 81 21 62 21 25 51 e0         ..!b!%Q.
  103464:	 80 07 90 07 a0 07 b0 07         ........
  10346c:	 dd c1 0e d0 3d a2 fd e0         ....=...
  103474:	 1d 44 0f 21 dd 26 1d 26         .D.!.&.&
  10347c:	 09 c1 09 c1 59 62 59 62         ....YbYb
  103484:	 00 07 02 90 00 07 21 c1         ......!.
  10348c:	 a5 26 d5 62 66 24 e5 c1         .&.bf$..
  103494:	 c0 06 d0 06 8d 43 cd 43         .....C.C
  10349c:	 1d e1 ed 43 ed e0 9d 43         ...C...C
  1034a4:	 7d a2 0d 26 cd c1 9e 20         }..&... 
  1034ac:	 0e e0 ae 20 bd a1 0e b0         ... ....
  1034b4:	 04 06 81 61 20 06 41 a0         ...a .A.
  1034bc:	 20 06 30 06 d9 61 2a 24          .0..a*$
  1034c4:	 f5 23 f5 23 99 a0 0a 7c         .#.#...|
  1034cc:	 11 82 01 82 21 a1 42 20         ....!.B 
  1034d4:	 a8 05 51 22 91 81 f4 05         ..Q"....
  1034dc:	 49 e1 69 82 a9 c1 f9 43         I.i....C
  1034e4:	 f9 26 0a c8 0a bc a9 43         .&.....C
  1034ec:	 b5 c0 75 e0 75 82 95 a1         ..u.u...
  1034f4:	 60 05 61 e0 60 05 41 81         `.a.`.A.
  1034fc:	 d1 a0 71 62 31 62 a1 e0         ..qb1b..
  103504:	 51 25 32 24 12 34 f4 04         Q%2$.4..
  10350c:	 21 a2 a1 a1 02 b4 02 a0         !.......
  103514:	 e0 04 02 78 d1 24 d0 04         ...x.$..
  10351c:	 26 2c 85 82 f5 25 55 a1         &,...%U.
  103524:	 a0 04 e1 24 a0 04 d1 23         ...$...#
  10352c:	 11 61 98 04 71 24 a1 61         .a..q$.a
  103534:	 e1 80 d4 04 21 e0 f0 04         ....!...
  10353c:	 b1 26 41 82 e0 04 85 81         .&A.....
  103544:	 f5 24 05 25 35 25 f5 a0         .$.%5%..
  10354c:	 15 25 16 40 02 88 12 3c         .%.@...<
  103554:	 60 04 82 24 61 e1 71 e1         `..$a.q.
  10355c:	 81 e1 71 26 61 a2 b1 62         ..q&a..b
  103564:	 52 24 02 a4 83 22 d0 03         R$..."..
  10356c:	 51 e1 c2 20 02 f0 c1 26         Q.. ...&
  103574:	 a0 03 c5 a1 05 43 90 03         .....C..
  10357c:	 61 a0 94 03 b1 25 41 62         a....%Ab
  103584:	 71 25 02 8c c9 61 70 03         q%...ap.
  10358c:	 80 03 90 03 19 42 2a 20         .....B* 
  103594:	 b9 80 70 03 80 03 76 20         ..p...v 
  10359c:	 a5 e1 26 38 41 25 71 43         ..&8A%qC
  1035a4:	 61 62 30 03 55 c1 f5 c1         ab0.U...
  1035ac:	 85 a1 85 c1 e1 42 41 43         .....BAC
  1035b4:	 61 81 d1 a1 d1 42 b4 02         a....B..
  1035bc:	 e0 02 c1 80 e0 02 f0 02         ........
  1035c4:	 00 03 10 03 1a 48 19 c1         .....H..
  1035cc:	 59 43 99 c0 e5 c0 35 43         YC....5C
  1035d4:	 c5 c0 b0 02 c0 02 71 a0         ......q.
  1035dc:	 c1 e0 11 43 51 a2 41 a2         ...CQ.A.
  1035e4:	 02 fc e1 62 32 28 22 34         ...b2("4
  1035ec:	 02 d4 30 02 c5 42 e5 25         ..0..B.%
  1035f4:	 85 25 a5 25 b1 24 f0 01         .%.%.$..
  1035fc:	 61 c0 02 80 e1 61 d0 01         a....a..
  103604:	 12 38 31 81 02 c4 83 20         .81.... 
  10360c:	 02 f8 90 01 b5 c1 65 26         ......e&
  103614:	 15 a2 06 e4 22 28 54 01         ...."(T.
  10361c:	 81 26 92 24 82 20 91 e1         .&.$. ..
  103624:	 51 26 02 dc 01 63 e1 26         Q&...c.&
  10362c:	 01 27 01 e1 01 62 51 81         .'...bQ.
  103634:	 91 26 83 21 e1 81 61 43         .&.!..aC
  10363c:	 a1 42 74 00 02 f4 90 00         .Bt.....
  103644:	 f5 62 07 20 e6 20 06 e8         .b. . ..
  10364c:	 55 82 c5 62 25 44 a5 62         U..b%D.b
  103654:	 03 23 10 00 20 00 d2 20         .#.. .. 
  10365c:	 02 ec 72 24                     ..r$


hgain_huff_tab:
  103660:	 00 01 cd 00 00 01 2d 01         ......-.
  103668:	 0d 01 f0 00 bd 00 3d 01         ......=.
  103670:	 e9 00 e9 00 f9 00 f9 00         ........
  103678:	 d9 00 d9 00 19 01 19 01         ........
  103680:	 68 00 a1 00 41 01 b0 00         h...A...
  103688:	 51 01 91 00 a4 00 d0 00         Q.......
  103690:	 79 01 79 00 d9 01 a9 01         y.y.....
  103698:	 85 01 85 01 61 01 70 00         ....a.p.
  1036a0:	 95 01 25 00 b5 01 05 00         ..%.....
  1036a8:	 f1 01 e1 01 81 00 14 00         ........
  1036b0:	 40 00 45 00 65 00 c5 01         @.E.e...
  1036b8:	 11 02 18 00 09 02 59 00         ......Y.
  1036c0:	 29 02 39 02 49 02 39 00         ).9.I.9.
  1036c8:	 15 00 15 00                     ....


lib_update_version:
  1036cc:	 7c 4f 94 0a 55 50 44 41         |O..UPDA
  1036d4:	 54 45 2d 40 32 30 32 31         TE-@2021
  1036dc:	 30 38 31 36 2d 24 39 63         0816-$9c
  1036e4:	 38 39 61 65 30 00               89ae0.


_VERSION_END:
  1036ea:    00 00       	nop


emu_msg:
  1036ec:	 5e 3c 10 00 5e 3c 10 00         ^<..^<..
  1036f4:	 5e 3c 10 00 5e 3c 10 00         ^<..^<..
  1036fc:	 5e 3c 10 00 5e 3c 10 00         ^<..^<..
  103704:	 5e 3c 10 00 5e 3c 10 00         ^<..^<..
  10370c:	 5e 3c 10 00 5e 3c 10 00         ^<..^<..
  103714:	 5e 3c 10 00 5e 3c 10 00         ^<..^<..
  10371c:	 5e 3c 10 00 5e 3c 10 00         ^<..^<..
  103724:	 5e 3c 10 00 5e 3c 10 00         ^<..^<..
  10372c:	 67 3c 10 00 5e 3c 10 00         g<..^<..
  103734:	 5e 3c 10 00 5e 3c 10 00         ^<..^<..
  10373c:	 5e 3c 10 00 5e 3c 10 00         ^<..^<..
  103744:	 5e 3c 10 00 5e 3c 10 00         ^<..^<..
  10374c:	 5e 3c 10 00 5e 3c 10 00         ^<..^<..
  103754:	 5e 3c 10 00 5e 3c 10 00         ^<..^<..
  10375c:	 5e 3c 10 00 75 3c 10 00         ^<..u<..
  103764:	 7e 3c 10 00 88 3c 10 00         ~<...<..


emu_init:
  10376c:    00 2b       	r0 = [addr(48)]  <.GCPI182_0 : 10379c >			  ## debug.c:64:0
  10376e:    23 ea 01 5a 	r1 = 1515870810 			  ## debug.c:65:5
  103772:    c1 68       	[r0 + 12] = r1 			  ## debug.c:65:5
  103774:    81 68       	[r0 + 8] = r1 			  ## debug.c:65:5
  103776:    41 68       	[r0 + 4] = r1 			  ## debug.c:65:5
  103778:    01 68       	[r0 + 0] = r1 			  ## debug.c:65:5
  10377a:    40 2a       	r0 = [addr(36)]  <.GCPI182_1 : 1037a0 >			  ## debug.c:66:5
  10377c:    c1 68       	[r0 + 12] = r1 			  ## debug.c:66:5
  10377e:    81 68       	[r0 + 8] = r1 			  ## debug.c:66:5
  103780:    41 68       	[r0 + 4] = r1 			  ## debug.c:66:5
  103782:    01 68       	[r0 + 0] = r1 			  ## debug.c:66:5
  103784:    00 2a       	r0 = [addr(32)]  <.GCPI182_2 : 1037a4 >			  ## debug.c:66:5
  103786:    f0 e2 0f 01 	[r0 + -4] |= 1 			  ## debug.c:67:33
  10378a:    f0 e2 0f 02 	[r0 + -4] |= 2 			  ## debug.c:68:33
  10378e:    f0 e2 0f 04 	[r0 + -4] |= 4 			  ## debug.c:69:33
  103792:    fc e2 0f 00 	[r0 + -4] |= 32768 			  ## debug.c:70:33
  103796:    01 80       	r1 = 0 			  ## debug.c:70:33
  103798:    01 68       	[r0 + 0] = r1 			  ## debug.c:71:33
  10379a:    20 00       	rts			  ## debug.c:72:1


.GCPI182_0:
  10379c:    c0 0e 00 00     < 3776 : 0xEC0 >

.GCPI182_1:
  1037a0:    e0 16 00 00     < 5856 : 0x16E0 >

.GCPI182_2:
  1037a4:    d4 00 08 00     < 524500 : 0x800D4 >

exception_analyze:
  1037a8:    fc cd       	sp += -4 			  ## debug.c:77:0
  1037aa:    04 c6       	r4 = r0 			  ## debug.c:77:0
  1037ac:    24 e8 08 15 	r8 = [++ r0 = 84] 			  ## debug.c:86:29
  1037b0:    0a e5 09 fe 	r9, r10 = d[r0 + -8] 			  ## debug.c:85:29
  1037b4:    0b e5 0c fc 	r12, r11 = d[r0 + -16] 			  ## debug.c:83:29
  1037b8:    c5 4e       	r5 = [r0 + -20] 			  ## debug.c:81:29
  1037ba:    20 e8 4d 0f 	r13 = [r4 + 60] 			  ## debug.c:80:29
  1037be:    90 2c       	r0 = [addr(328)]  <.GCPI354_0 : 103908 >			  ## debug.c:87:9
  1037c0:    d1 2c       	r1 = [addr(332)]  <.GCPI354_1 : 10390c >			  ## debug.c:87:9
  1037c2:    ba 82       	r2 = 87 			  ## debug.c:87:9
  1037c4:    df e1 af c0 	call -264172 <xprintf : c2fdc >			  ## debug.c:87:9
  1037c8:    96 2c       	r6 = [addr(328)]  <.GCPI354_2 : 103910 >			  ## debug.c:88:9
  1037ca:    31 48       	r1 = [r6 + 0] 			  ## debug.c:88:9
  1037cc:    90 2c       	r0 = [addr(328)]  <.GCPI354_3 : 103914 >			  ## debug.c:88:9
  1037ce:    df e1 5f c0 	call -264182 <xprintf : c2fdc >			  ## debug.c:88:9
  1037d2:    30 48       	r0 = [r6 + 0] 			  ## debug.c:89:13
  1037d4:    03 ef 00 5a 	cmp r0, 1515870810			  ## debug.c:89:13
  1037d8:    11 03       	ifs (nzcv != 0) {			  ## debug.c:90:13
  1037da:    d0 2b       		r0 = [addr(316)]  <.GCPI354_4 : 103918 >			  ## debug.c:90:13
  1037dc:    df e1 ef bf 		call -264196
                               	} <xprintf : c2fdc >			  ## debug.c:90:13
  1037e0:    20 e4 0e 4e 	r14 = [addr(312)]  <.GCPI354_5 : 10391c >			  ## debug.c:92:9
  1037e4:    20 e8 e1 00 	r1 = [r14 + 0] 			  ## debug.c:92:9
  1037e8:    90 2b       	r0 = [addr(312)]  <.GCPI354_6 : 103920 >			  ## debug.c:92:9
  1037ea:    df e1 7f bf 	call -264210 <xprintf : c2fdc >			  ## debug.c:92:9
  1037ee:    20 e8 e0 00 	r0 = [r14 + 0] 			  ## debug.c:93:13
  1037f2:    03 ef 00 5a 	cmp r0, 1515870810			  ## debug.c:93:13
  1037f6:    11 03       	ifs (nzcv != 0) {			  ## debug.c:94:13
  1037f8:    d0 2a       		r0 = [addr(300)]  <.GCPI354_7 : 103924 >			  ## debug.c:94:13
  1037fa:    df e1 ff be 		call -264226
                               	} <xprintf : c2fdc >			  ## debug.c:94:13
  1037fe:    90 2a       	r0 = [addr(296)]  <.GCPI354_8 : 103928 >			  ## debug.c:96:9
  103800:    a9 c6       	r1 = r13 			  ## debug.c:96:9
  103802:    df e1 bf be 	call -264234 <xprintf : c2fdc >			  ## debug.c:96:9
  103806:    50 2a       	r0 = [addr(292)]  <.GCPI354_9 : 10392c >			  ## debug.c:97:9
  103808:    29 c6       	r1 = r5 			  ## debug.c:97:9
  10380a:    df e1 7f be 	call -264242 <xprintf : c2fdc >			  ## debug.c:97:9
  10380e:    10 2a       	r0 = [addr(288)]  <.GCPI354_10 : 103930 >			  ## debug.c:98:9
  103810:    99 c6       	r1 = r11 			  ## debug.c:98:9
  103812:    df e1 3f be 	call -264250 <xprintf : c2fdc >			  ## debug.c:98:9
  103816:    d0 29       	r0 = [addr(284)]  <.GCPI354_11 : 103934 >			  ## debug.c:99:9
  103818:    a1 c6       	r1 = r12 			  ## debug.c:99:9
  10381a:    df e1 ff bd 	call -264258 <xprintf : c2fdc >			  ## debug.c:99:9
  10381e:    90 29       	r0 = [addr(280)]  <.GCPI354_12 : 103938 >			  ## debug.c:100:9
  103820:    91 c6       	r1 = r10 			  ## debug.c:100:9
  103822:    df e1 bf bd 	call -264266 <xprintf : c2fdc >			  ## debug.c:100:9
  103826:    50 29       	r0 = [addr(276)]  <.GCPI354_13 : 10393c >			  ## debug.c:101:9
  103828:    89 c6       	r1 = r9 			  ## debug.c:101:9
  10382a:    df e1 7f bd 	call -264274 <xprintf : c2fdc >			  ## debug.c:101:9
  10382e:    10 29       	r0 = [addr(272)]  <.GCPI354_14 : 103940 >			  ## debug.c:102:9
  103830:    81 c6       	r1 = r8 			  ## debug.c:102:9
  103832:    df e1 3f bd 	call -264282 <xprintf : c2fdc >			  ## debug.c:102:9
  103836:    d0 28       	r0 = [addr(268)]  <.GCPI354_15 : 103944 >			  ## debug.c:103:9
  103838:    04 60       	[sp] = r4 			  ## debug.c:103:9
  10383a:    21 c6       	r1 = r4 			  ## debug.c:103:9
  10383c:    df e1 ef bc 	call -264292 <xprintf : c2fdc >			  ## debug.c:103:9
  103840:    90 28       	r0 = [addr(264)]  <.GCPI354_16 : 103948 >			  ## debug.c:105:9
  103842:    df e1 bf bc 	call -264298 <xprintf : c2fdc >			  ## debug.c:105:9
  103846:    1f ed d0 e0 	r0 = r13 + -32 			  ## debug.c:106:9
  10384a:    01 82       	r1 = 64 			  ## debug.c:106:9
  10384c:    7e e1 cf ad 	call -1059400 <printf_buf : e08 >			  ## debug.c:106:9
  103850:    50 80       	r0 = 10 			  ## debug.c:107:9
  103852:    7e e1 bf ab 	call -1059466 <putchar : dcc >			  ## debug.c:107:9
  103856:    48 2f       	r0 = [addr(244)]  <.GCPI354_17 : 10394c >			  ## debug.c:108:9
  103858:    df e1 0f bc 	call -264320 <xprintf : c2fdc >			  ## debug.c:108:9
  10385c:    1f ed b0 e0 	r0 = r11 + -32 			  ## debug.c:109:9
  103860:    01 82       	r1 = 64 			  ## debug.c:109:9
  103862:    7e e1 1f ad 	call -1059422 <printf_buf : e08 >			  ## debug.c:109:9
  103866:    50 80       	r0 = 10 			  ## debug.c:110:9
  103868:    7e e1 0f ab 	call -1059488 <putchar : dcc >			  ## debug.c:110:9
  10386c:    14 28       	r4 = [addr(256)]  <.GCPI354_25 : 10396c >			  ## debug.c:110:9
  10386e:    e1 4f       	r1 = [r4 + -4] 			  ## debug.c:111:9
  103870:    08 2e       	r0 = [addr(224)]  <.GCPI354_18 : 103950 >			  ## debug.c:111:9
  103872:    df e1 3f bb 	call -264346 <xprintf : c2fdc >			  ## debug.c:111:9
  103876:    21 48       	r1 = [r4 + 0] 			  ## debug.c:112:9
  103878:    c8 2d       	r0 = [addr(220)]  <.GCPI354_19 : 103954 >			  ## debug.c:112:9
  10387a:    df e1 ff ba 	call -264354 <xprintf : c2fdc >			  ## debug.c:112:9
  10387e:    88 2d       	r0 = [addr(216)]  <.GCPI354_20 : 103958 >			  ## debug.c:112:9
  103880:    00 ed 07 7c 	r7 = r0 + 124 			  ## debug.c:112:9
  103884:    05 80       	r5 = 0 			  ## debug.c:112:9
  103886:    20 e4 08 35 	r8 = [addr(212)]  <.GCPI354_21 : 10395c >
  10388a:    0b 08       	goto 22 <exception_analyze+0xFA : 1038a2 >
  10388c:    20 48       	r0 = [r4 + 0] 			  ## debug.c:114:37
  10388e:    80 f1 00 05 	r0 = r0 & setbit(r5) 			  ## debug.c:114:45
  103892:    05 10       	ifs (nzcv == 0) goto 10 <exception_analyze+0xF6 : 10389e >			  ## debug.c:114:45
  103894:    3a 48       	r2 = [r7 + 0] 			  ## debug.c:115:17
  103896:    80 c6       	r0 = r8 			  ## debug.c:115:17
  103898:    29 c6       	r1 = r5 			  ## debug.c:115:17
  10389a:    df e1 ff b9 	call -264386 <xprintf : c2fdc >			  ## debug.c:115:17
  10389e:    3f d3       	r7 = r7 + -4 			  ## debug.c:113:9
  1038a0:    6d d0       	r5 = r5 + 1 			  ## debug.c:113:30
  1038a2:    05 99       	cmp r5, 32			  ## debug.c:113:9
  1038a4:    f3 11       	ifs (nzcv != 0) goto -26 <exception_analyze+0xE4 : 10388c >			  ## debug.c:113:9
  1038a6:    05 80       	r5 = 0 
  1038a8:    8c 2b       	r4 = [addr(184)]  <.GCPI354_22 : 103960 >
  1038aa:    07 40       	r7 = [sp] 
  1038ac:    07 08       	goto 14 <exception_analyze+0x114 : 1038bc >
  1038ae:    28 e8 72 01 	r2 = [r7 ++= 4] 			  ## debug.c:119:13
  1038b2:    20 c6       	r0 = r4 			  ## debug.c:119:13
  1038b4:    29 c6       	r1 = r5 			  ## debug.c:119:13
  1038b6:    df e1 1f b9 	call -264414 <xprintf : c2fdc >			  ## debug.c:119:13
  1038ba:    6d d0       	r5 = r5 + 1 			  ## debug.c:118:29
  1038bc:    7d 98       	cmp r5, 15			  ## debug.c:118:9
  1038be:    f7 11       	ifs (nzcv != 0) goto -18 <exception_analyze+0x106 : 1038ae >			  ## debug.c:118:9
  1038c0:    04 80       	r4 = 0 
  1038c2:    0d 2a       	r5 = [addr(160)]  <.GCPI354_23 : 103964 >
  1038c4:    0a 08       	goto 20 <exception_analyze+0x132 : 1038da >
  1038c6:    32 48       	r2 = [r6 + 0] 			  ## debug.c:122:17
  1038c8:    03 ef 20 5a 	cmp r2, 1515870810			  ## debug.c:122:17
  1038cc:    12 03       	ifs (nzcv != 0) {			  ## debug.c:123:17
  1038ce:    28 c6       		r0 = r5 			  ## debug.c:123:17
  1038d0:    21 c6       		r1 = r4 			  ## debug.c:123:17
  1038d2:    df e1 3f b8 		call -264442
                               	} <xprintf : c2fdc >			  ## debug.c:123:17
  1038d6:    36 d1       	r6 = r6 + 4 			  ## debug.c:121:9
  1038d8:    64 d0       	r4 = r4 + 1 			  ## debug.c:121:53
  1038da:    24 98       	cmp r4, 4			  ## debug.c:121:9
  1038dc:    f4 11       	ifs (nzcv != 0) goto -24 <exception_analyze+0x11E : 1038c6 >			  ## debug.c:121:9
  1038de:    04 80       	r4 = 0 
  1038e0:    8d 28       	r5 = [addr(136)]  <.GCPI354_24 : 103968 >
  1038e2:    0c 08       	goto 24 <exception_analyze+0x154 : 1038fc >
  1038e4:    20 e8 e2 00 	r2 = [r14 + 0] 			  ## debug.c:126:17
  1038e8:    03 ef 20 5a 	cmp r2, 1515870810			  ## debug.c:126:17
  1038ec:    12 03       	ifs (nzcv != 0) {			  ## debug.c:127:17
  1038ee:    28 c6       		r0 = r5 			  ## debug.c:127:17
  1038f0:    21 c6       		r1 = r4 			  ## debug.c:127:17
  1038f2:    df e1 3f b7 		call -264474
                               	} <xprintf : c2fdc >			  ## debug.c:127:17
  1038f6:    00 ed ee 04 	r14 = r14 + 4 			  ## debug.c:125:9
  1038fa:    64 d0       	r4 = r4 + 1 			  ## debug.c:125:54
  1038fc:    24 98       	cmp r4, 4			  ## debug.c:125:9
  1038fe:    f2 11       	ifs (nzcv != 0) goto -28 <exception_analyze+0x13C : 1038e4 >			  ## debug.c:125:9
  103900:    01 e1 c0 e4 	call 15512 <wdt_clear : 10759c >			  ## debug.c:131:13
  103904:    fd 0f       	goto -6 <exception_analyze+0x158 : 103900 >			  ## debug.c:130:9
  103906:    00 00       	nop			  ## debug.c:130:9


.GCPI354_0:
  103908:    70 39 10 00     < 1063280 : 0x103970 >

.GCPI354_1:
  10390c:    a5 39 10 00     < 1063333 : 0x1039A5 >

.GCPI354_2:
  103910:    c0 0e 00 00     < 3776 : 0xEC0 >

.GCPI354_3:
  103914:    b7 39 10 00     < 1063351 : 0x1039B7 >

.GCPI354_4:
  103918:    df 39 10 00     < 1063391 : 0x1039DF >

.GCPI354_5:
  10391c:    e0 16 00 00     < 5856 : 0x16E0 >

.GCPI354_6:
  103920:    06 3a 10 00     < 1063430 : 0x103A06 >

.GCPI354_7:
  103924:    2f 3a 10 00     < 1063471 : 0x103A2F >

.GCPI354_8:
  103928:    57 3a 10 00     < 1063511 : 0x103A57 >

.GCPI354_9:
  10392c:    75 3a 10 00     < 1063541 : 0x103A75 >

.GCPI354_10:
  103930:    93 3a 10 00     < 1063571 : 0x103A93 >

.GCPI354_11:
  103934:    b1 3a 10 00     < 1063601 : 0x103AB1 >

.GCPI354_12:
  103938:    cf 3a 10 00     < 1063631 : 0x103ACF >

.GCPI354_13:
  10393c:    ed 3a 10 00     < 1063661 : 0x103AED >

.GCPI354_14:
  103940:    0b 3b 10 00     < 1063691 : 0x103B0B >

.GCPI354_15:
  103944:    29 3b 10 00     < 1063721 : 0x103B29 >

.GCPI354_16:
  103948:    47 3b 10 00     < 1063751 : 0x103B47 >

.GCPI354_17:
  10394c:    63 3b 10 00     < 1063779 : 0x103B63 >

.GCPI354_18:
  103950:    7f 3b 10 00     < 1063807 : 0x103B7F >

.GCPI354_19:
  103954:    a0 3b 10 00     < 1063840 : 0x103BA0 >

.GCPI354_20:
  103958:    ec 36 10 00     < 1062636 : 0x1036EC >

.GCPI354_21:
  10395c:    c1 3b 10 00     < 1063873 : 0x103BC1 >

.GCPI354_22:
  103960:    ee 3b 10 00     < 1063918 : 0x103BEE >

.GCPI354_23:
  103964:    0b 3c 10 00     < 1063947 : 0x103C0B >

.GCPI354_24:
  103968:    34 3c 10 00     < 1063988 : 0x103C34 >

.GCPI354_25:
  10396c:    d4 00 08 00     < 524500 : 0x800D4 >


.GCPI354_25:
  103970:    3c 45       	r4 = [sp+ -48] 
  103972:    72 72       	h[r6 + -28] = r2 
  103974:    6f 72       	h[r5 + -28] = r7 
  103976:    3e 20       	if (r6 != 0) goto 6 <.GCPI354_25+0x12 : 10397e >
  103978:    5b 44       	r3 = [sp+ 452] 
  10397a:    45 42       	r5 = [sp+ 36] 
  10397c:    55 47       	r5 = [sp+ 372] 
  10397e:    5d 0a       	goto 1210 <get_dec_info.1400+0x1C : 103e3a >
  103980:    2d 2d       	r5 = [addr(-304)]  <exception_analyze+0xA8 : 103850 >
  103982:    2d 2d       	r5 = [addr(-304)]  <exception_analyze+0xAC : 103854 >
  103984:    2d 45       	r5 = [sp+ -304] 
  103986:    72 72       	h[r6 + -28] = r2 
  103988:    3a 20       	if (r2 != 0) goto 6 <.GCPI354_25+0x24 : 103990 >
  10398a:    66 75       	h[r4 + 22] = r6 
  10398c:    6e 63       	[sp+ -332] = r6 
  10398e:    74 69       	[r6 + 20] = r4 
  103990:    6f 6e       	[r5 + -28] = r7 
  103992:    3a 25       	if (r2 != 0) goto -90 <.GCPI354_12+0x2 : 10393a >
  103994:    73 28       	r3 = [addr(-252)]  <exception_analyze+0xF0 : 103898 >
  103996:    29 20       	if (r1 != 0) goto 4 <.GCPI354_25+0x30 : 10399c >
  103998:    40 6c       	[r0 + -60] = r0 
  10399a:    69 6e       	[r5 + -28] = r1 
  10399c:    65 3a       	[r2++] = {r6, r5, r2, r0} 
  10399e:    25 64       	[sp+ -448] = r5 
  1039a0:    20 0a       	goto 1088 <check_ext_api+0x5A : 103de2 >
  1039a2:    0d 0a       	goto 1050 <check_ext_api+0x36 : 103dbe >
  1039a4:    00 65       	[sp+ 80] = r0 
  1039a6:    78 63       	[sp+ -76] = r0 
  1039a8:    65 70       	h[r4 + 4] = r5 
  1039aa:    74 69       	[r6 + 20] = r4 
  1039ac:    6f 6e       	[r5 + -28] = r7 
  1039ae:    5f 61       	[sp+ 404] = r7 
  1039b0:    6e 61       	[sp+ -364] = r6 
  1039b2:    6c 79       	b[r5 + -12] = r4 
  1039b4:    7a 65       	[sp+ -44] = r2 
  1039b6:    00           <unknown instruction>
  1039b7:    3c 45       	r4 = [sp+ -48] 
  1039b9:    72 72       	h[r6 + -28] = r2 
  1039bb:    6f 72       	h[r5 + -28] = r7 
  1039bd:    3e 20       	if (r6 != 0) goto 6 <.GCPI354_25+0x58 : 1039c4 >
  1039bf:    5b 44       	r3 = [sp+ 452] 
  1039c1:    45 42       	r5 = [sp+ 36] 
  1039c3:    55 47       	r5 = [sp+ 372] 
  1039c5:    5d 73       	h[r3 + -12] = r5 
  1039c7:    74 61       	[sp+ -236] = r4 
  1039c9:    63 6b       	[r4 + 52] = r3 
  1039cb:    5f 6d       	[r3 + -44] = r7 
  1039cd:    61 67       	[sp+ -396] = r1 
  1039cf:    69 63       	[sp+ -332] = r1 
  1039d1:    5b 30       	{r6, r4, r3, r1, r0} = [r0++] 
  1039d3:    5d 3a       	[r2++] = {r6, r4-r2, r0} 
  1039d5:    30 78       	b[r6 + 0] = r0 
  1039d7:    25 30       	{r5, r2, r0} = [r0++] 
  1039d9:    38 78       	b[r7 + 0] = r0 
  1039db:    0a 0d       	goto -1516 <coef4_huff_tab+0x344 : 1033f0 >
  1039dd:    0a 00       	illeg
  1039df:    3c 45       	r4 = [sp+ -48] 
  1039e1:    72 72       	h[r6 + -28] = r2 
  1039e3:    6f 72       	h[r5 + -28] = r7 
  1039e5:    3e 20       	if (r6 != 0) goto 6 <.GCPI354_25+0x80 : 1039ec >
  1039e7:    5b 44       	r3 = [sp+ 452] 
  1039e9:    45 42       	r5 = [sp+ 36] 
  1039eb:    55 47       	r5 = [sp+ 372] 
  1039ed:    5d 53       	r5 = h[r3 + -12] 
  1039ef:    74 61       	[sp+ -236] = r4 
  1039f1:    63 6b       	[r4 + 52] = r3 
  1039f3:    20 4d       	r0 = [r4 + -48] 
  1039f5:    61 67       	[sp+ -396] = r1 
  1039f7:    69 63       	[sp+ -332] = r1 
  1039f9:    20 64       	[sp+ -448] = r0 
  1039fb:    65 73       	h[r4 + -12] = r5 
  1039fd:    74 6f       	[r6 + -12] = r4 
  1039ff:    72 79       	b[r6 + -12] = r2 
  103a01:    21 0a       	goto 1090 <get_dec_info.1400+0x26 : 103e44 >
  103a03:    0d 0a       	goto 1050 <get_dec_info.1400 : 103e1e >
  103a05:    00           <unknown instruction>
  103a06:    3c 45       	r4 = [sp+ -48] 
  103a08:    72 72       	h[r6 + -28] = r2 
  103a0a:    6f 72       	h[r5 + -28] = r7 
  103a0c:    3e 20       	if (r6 != 0) goto 6 <.GCPI354_25+0xA8 : 103a14 >
  103a0e:    5b 44       	r3 = [sp+ 452] 
  103a10:    45 42       	r5 = [sp+ 36] 
  103a12:    55 47       	r5 = [sp+ 372] 
  103a14:    5d 73       	h[r3 + -12] = r5 
  103a16:    74 61       	[sp+ -236] = r4 
  103a18:    63 6b       	[r4 + 52] = r3 
  103a1a:    5f 6d       	[r3 + -44] = r7 
  103a1c:    61 67       	[sp+ -396] = r1 
  103a1e:    69 63       	[sp+ -332] = r1 
  103a20:    30 5b       	r0 = b[r6 + -15] 
  103a22:    30 5d       	r0 = b[r6 + -14] 
  103a24:    3a 30       	{r5-r3, r1} = [r0++] 
  103a26:    78 25       	if (r0 != 0) goto -82 <.GCPI354_25+0x6A : 1039d6 >
  103a28:    30 38       	[r0++] = {r5, r4} 
  103a2a:    78 0a       	goto 1264 <a_decode_api+0x6C : 103f1c >
  103a2c:    0d 0a       	goto 1050 <get_bp_info.1402+0x2 : 103e48 >
  103a2e:    00           <unknown instruction>
  103a2f:    3c 45       	r4 = [sp+ -48] 
  103a31:    72 72       	h[r6 + -28] = r2 
  103a33:    6f 72       	h[r5 + -28] = r7 
  103a35:    3e 20       	if (r6 != 0) goto 6 <.GCPI354_25+0xD0 : 103a3c >
  103a37:    5b 44       	r3 = [sp+ 452] 
  103a39:    45 42       	r5 = [sp+ 36] 
  103a3b:    55 47       	r5 = [sp+ 372] 
  103a3d:    5d 53       	r5 = h[r3 + -12] 
  103a3f:    74 61       	[sp+ -236] = r4 
  103a41:    63 6b       	[r4 + 52] = r3 
  103a43:    20 4d       	r0 = [r4 + -48] 
  103a45:    61 67       	[sp+ -396] = r1 
  103a47:    69 63       	[sp+ -332] = r1 
  103a49:    30 20       	if (r0 == 0) goto 6 <.GCPI354_25+0xE4 : 103a50 >
  103a4b:    64 65       	[sp+ -428] = r4 
  103a4d:    73 74       	h[r6 + 6] = r3 
  103a4f:    6f 72       	h[r5 + -28] = r7 
  103a51:    79 21       	if (r1 != 0) goto 46 <.GCPI354_25+0x114 : 103a80 >
  103a53:    0a 0d       	goto -1516 <coef4_huff_tab+0x3BC : 103468 >
  103a55:    0a 00       	illeg
  103a57:    3c 45       	r4 = [sp+ -48] 
  103a59:    72 72       	h[r6 + -28] = r2 
  103a5b:    6f 72       	h[r5 + -28] = r7 
  103a5d:    3e 20       	if (r6 != 0) goto 6 <.GCPI354_25+0xF8 : 103a64 >
  103a5f:    5b 44       	r3 = [sp+ 452] 
  103a61:    45 42       	r5 = [sp+ 36] 
  103a63:    55 47       	r5 = [sp+ 372] 
  103a65:    5d 72       	h[r3 + -28] = r5 
  103a67:    65 74       	h[r4 + 6] = r5 
  103a69:    69 20       	if (r1 != 0) goto 12 <.GCPI354_25+0x10A : 103a76 >
  103a6b:    30 78       	b[r6 + 0] = r0 
  103a6d:    25 30       	{r5, r2, r0} = [r0++] 
  103a6f:    38 78       	b[r7 + 0] = r0 
  103a71:    0a 0d       	goto -1516 <coef4_huff_tab+0x3DA : 103486 >
  103a73:    0a 00       	illeg
  103a75:    3c 45       	r4 = [sp+ -48] 
  103a77:    72 72       	h[r6 + -28] = r2 
  103a79:    6f 72       	h[r5 + -28] = r7 
  103a7b:    3e 20       	if (r6 != 0) goto 6 <.GCPI354_25+0x116 : 103a82 >
  103a7d:    5b 44       	r3 = [sp+ 452] 
  103a7f:    45 42       	r5 = [sp+ 36] 
  103a81:    55 47       	r5 = [sp+ 372] 
  103a83:    5d 72       	h[r3 + -28] = r5 
  103a85:    65 74       	h[r4 + 6] = r5 
  103a87:    65 20       	if (r5 == 0) goto 12 <.GCPI354_25+0x128 : 103a94 >
  103a89:    30 78       	b[r6 + 0] = r0 
  103a8b:    25 30       	{r5, r2, r0} = [r0++] 
  103a8d:    38 78       	b[r7 + 0] = r0 
  103a8f:    0a 0d       	goto -1516 <coef4_huff_tab+0x3F8 : 1034a4 >
  103a91:    0a 00       	illeg
  103a93:    3c 45       	r4 = [sp+ -48] 
  103a95:    72 72       	h[r6 + -28] = r2 
  103a97:    6f 72       	h[r5 + -28] = r7 
  103a99:    3e 20       	if (r6 != 0) goto 6 <.GCPI354_25+0x134 : 103aa0 >
  103a9b:    5b 44       	r3 = [sp+ 452] 
  103a9d:    45 42       	r5 = [sp+ 36] 
  103a9f:    55 47       	r5 = [sp+ 372] 
  103aa1:    5d 72       	h[r3 + -28] = r5 
  103aa3:    65 74       	h[r4 + 6] = r5 
  103aa5:    73 20       	if (r3 == 0) goto 14 <.GCPI354_25+0x148 : 103ab4 >
  103aa7:    30 78       	b[r6 + 0] = r0 
  103aa9:    25 30       	{r5, r2, r0} = [r0++] 
  103aab:    38 78       	b[r7 + 0] = r0 
  103aad:    0a 0d       	goto -1516 <coef4_huff_tab+0x416 : 1034c2 >
  103aaf:    0a 00       	illeg
  103ab1:    3c 45       	r4 = [sp+ -48] 
  103ab3:    72 72       	h[r6 + -28] = r2 
  103ab5:    6f 72       	h[r5 + -28] = r7 
  103ab7:    3e 20       	if (r6 != 0) goto 6 <.GCPI354_25+0x152 : 103abe >
  103ab9:    5b 44       	r3 = [sp+ 452] 
  103abb:    45 42       	r5 = [sp+ 36] 
  103abd:    55 47       	r5 = [sp+ 372] 
  103abf:    5d 70       	h[r3 + 4] = r5 
  103ac1:    73 72       	h[r6 + -28] = r3 
  103ac3:    20 20       	if (r0 == 0) goto 4 <.GCPI354_25+0x15C : 103ac8 >
  103ac5:    30 78       	b[r6 + 0] = r0 
  103ac7:    25 30       	{r5, r2, r0} = [r0++] 
  103ac9:    38 78       	b[r7 + 0] = r0 
  103acb:    0a 0d       	goto -1516 <coef4_huff_tab+0x434 : 1034e0 >
  103acd:    0a 00       	illeg
  103acf:    3c 45       	r4 = [sp+ -48] 
  103ad1:    72 72       	h[r6 + -28] = r2 
  103ad3:    6f 72       	h[r5 + -28] = r7 
  103ad5:    3e 20       	if (r6 != 0) goto 6 <.GCPI354_25+0x170 : 103adc >
  103ad7:    5b 44       	r3 = [sp+ 452] 
  103ad9:    45 42       	r5 = [sp+ 36] 
  103adb:    55 47       	r5 = [sp+ 372] 
  103add:    5d 73       	h[r3 + -12] = r5 
  103adf:    73 70       	h[r6 + 4] = r3 
  103ae1:    20 20       	if (r0 == 0) goto 4 <.GCPI354_25+0x17A : 103ae6 >
  103ae3:    30 78       	b[r6 + 0] = r0 
  103ae5:    25 30       	{r5, r2, r0} = [r0++] 
  103ae7:    38 78       	b[r7 + 0] = r0 
  103ae9:    0a 0d       	goto -1516 <coef4_huff_tab+0x452 : 1034fe >
  103aeb:    0a 00       	illeg
  103aed:    3c 45       	r4 = [sp+ -48] 
  103aef:    72 72       	h[r6 + -28] = r2 
  103af1:    6f 72       	h[r5 + -28] = r7 
  103af3:    3e 20       	if (r6 != 0) goto 6 <.GCPI354_25+0x18E : 103afa >
  103af5:    5b 44       	r3 = [sp+ 452] 
  103af7:    45 42       	r5 = [sp+ 36] 
  103af9:    55 47       	r5 = [sp+ 372] 
  103afb:    5d 69       	[r3 + 20] = r5 
  103afd:    63 66       	[sp+ -412] = r3 
  103aff:    67 20       	if (r7 == 0) goto 12 <.GCPI354_25+0x1A0 : 103b0c >
  103b01:    30 78       	b[r6 + 0] = r0 
  103b03:    25 30       	{r5, r2, r0} = [r0++] 
  103b05:    38 78       	b[r7 + 0] = r0 
  103b07:    0a 0d       	goto -1516 <coef4_huff_tab+0x470 : 10351c >
  103b09:    0a 00       	illeg
  103b0b:    3c 45       	r4 = [sp+ -48] 
  103b0d:    72 72       	h[r6 + -28] = r2 
  103b0f:    6f 72       	h[r5 + -28] = r7 
  103b11:    3e 20       	if (r6 != 0) goto 6 <.GCPI354_25+0x1AC : 103b18 >
  103b13:    5b 44       	r3 = [sp+ 452] 
  103b15:    45 42       	r5 = [sp+ 36] 
  103b17:    55 47       	r5 = [sp+ 372] 
  103b19:    5d 75       	h[r3 + 22] = r5 
  103b1b:    73 70       	h[r6 + 4] = r3 
  103b1d:    20 20       	if (r0 == 0) goto 4 <.GCPI354_25+0x1B6 : 103b22 >
  103b1f:    30 78       	b[r6 + 0] = r0 
  103b21:    25 30       	{r5, r2, r0} = [r0++] 
  103b23:    38 78       	b[r7 + 0] = r0 
  103b25:    0a 0d       	goto -1516 <coef4_huff_tab+0x48E : 10353a >
  103b27:    0a 00       	illeg
  103b29:    3c 45       	r4 = [sp+ -48] 
  103b2b:    72 72       	h[r6 + -28] = r2 
  103b2d:    6f 72       	h[r5 + -28] = r7 
  103b2f:    3e 20       	if (r6 != 0) goto 6 <.GCPI354_25+0x1CA : 103b36 >
  103b31:    5b 44       	r3 = [sp+ 452] 
  103b33:    45 42       	r5 = [sp+ 36] 
  103b35:    55 47       	r5 = [sp+ 372] 
  103b37:    5d 20       	if (r5 != 0) goto 10 <.GCPI354_25+0x1D6 : 103b42 >
  103b39:    73 70       	h[r6 + 4] = r3 
  103b3b:    20 20       	if (r0 == 0) goto 4 <.GCPI354_25+0x1D4 : 103b40 >
  103b3d:    30 78       	b[r6 + 0] = r0 
  103b3f:    25 30       	{r5, r2, r0} = [r0++] 
  103b41:    38 78       	b[r7 + 0] = r0 
  103b43:    0a 0d       	goto -1516 <coef4_huff_tab+0x4AC : 103558 >
  103b45:    0a 00       	illeg
  103b47:    3c 45       	r4 = [sp+ -48] 
  103b49:    72 72       	h[r6 + -28] = r2 
  103b4b:    6f 72       	h[r5 + -28] = r7 
  103b4d:    3e 20       	if (r6 != 0) goto 6 <.GCPI354_25+0x1E8 : 103b54 >
  103b4f:    5b 44       	r3 = [sp+ 452] 
  103b51:    45 42       	r5 = [sp+ 36] 
  103b53:    55 47       	r5 = [sp+ 372] 
  103b55:    5d 2d       	r5 = [addr(468)]  <ima_decoder_open+0x78 : 103d28 >
  103b57:    2d 2d       	r5 = [addr(-304)]  <.GCPI354_25+0xBC : 103a28 >
  103b59:    72 65       	[sp+ -172] = r2 
  103b5b:    74 69       	[r6 + 20] = r4 
  103b5d:    2d 2d       	r5 = [addr(-304)]  <.GCPI354_25+0xC0 : 103a2c >
  103b5f:    2d 0d       	goto -1446 <coef4_huff_tab+0x50E : 1035ba >
  103b61:    0a 00       	illeg
  103b63:    3c 45       	r4 = [sp+ -48] 
  103b65:    72 72       	h[r6 + -28] = r2 
  103b67:    6f 72       	h[r5 + -28] = r7 
  103b69:    3e 20       	if (r6 != 0) goto 6 <.GCPI354_25+0x204 : 103b70 >
  103b6b:    5b 44       	r3 = [sp+ 452] 
  103b6d:    45 42       	r5 = [sp+ 36] 
  103b6f:    55 47       	r5 = [sp+ 372] 
  103b71:    5d 2d       	r5 = [addr(468)]  <.GJTIE2_0_0_+0x8 : 103d44 >
  103b73:    2d 2d       	r5 = [addr(-304)]  <.GCPI354_25+0xD8 : 103a44 >
  103b75:    72 65       	[sp+ -172] = r2 
  103b77:    74 73       	h[r6 + -12] = r4 
  103b79:    2d 2d       	r5 = [addr(-304)]  <.GCPI354_25+0xDC : 103a48 >
  103b7b:    2d 0d       	goto -1446 <coef4_huff_tab+0x52A : 1035d6 >
  103b7d:    0a 00       	illeg
  103b7f:    3c 45       	r4 = [sp+ -48] 
  103b81:    72 72       	h[r6 + -28] = r2 
  103b83:    6f 72       	h[r5 + -28] = r7 
  103b85:    3e 20       	if (r6 != 0) goto 6 <.GCPI354_25+0x220 : 103b8c >
  103b87:    5b 44       	r3 = [sp+ 452] 
  103b89:    45 42       	r5 = [sp+ 36] 
  103b8b:    55 47       	r5 = [sp+ 372] 
  103b8d:    5d 45       	r5 = [sp+ 468] 
  103b8f:    4d 55       	r5 = h[r1 + 22] 
  103b91:    5f 43       	r7 = [sp+ 436] 
  103b93:    4f 4e       	r7 = [r1 + -28] 
  103b95:    3a 30       	{r5-r3, r1} = [r0++] 
  103b97:    78 25       	if (r0 != 0) goto -82 <.GCPI354_25+0x1DA : 103b46 >
  103b99:    30 38       	[r0++] = {r5, r4} 
  103b9b:    78 0a       	goto 1264 <f1a_decode_index+0x6A : 10408c >
  103b9d:    0d 0a       	goto 1050 <.GCPI9_8 : 103fb8 >
  103b9f:    00           <unknown instruction>
  103ba0:    3c 45       	r4 = [sp+ -48] 
  103ba2:    72 72       	h[r6 + -28] = r2 
  103ba4:    6f 72       	h[r5 + -28] = r7 
  103ba6:    3e 20       	if (r6 != 0) goto 6 <.GCPI354_25+0x242 : 103bae >
  103ba8:    5b 44       	r3 = [sp+ 452] 
  103baa:    45 42       	r5 = [sp+ 36] 
  103bac:    55 47       	r5 = [sp+ 372] 
  103bae:    5d 45       	r5 = [sp+ 468] 
  103bb0:    4d 55       	r5 = h[r1 + 22] 
  103bb2:    5f 4d       	r7 = [r3 + -44] 
  103bb4:    53 47       	r3 = [sp+ 372] 
  103bb6:    3a 30       	{r5-r3, r1} = [r0++] 
  103bb8:    78 25       	if (r0 != 0) goto -82 <.GCPI354_25+0x1FC : 103b68 >
  103bba:    30 38       	[r0++] = {r5, r4} 
  103bbc:    78 0a       	goto 1264 <f1a_decode_index+0x8C : 1040ae >
  103bbe:    0d 0a       	goto 1050 <.GCPI9_16+0x2 : 103fda >
  103bc0:    00           <unknown instruction>
  103bc1:    3c 45       	r4 = [sp+ -48] 
  103bc3:    72 72       	h[r6 + -28] = r2 
  103bc5:    6f 72       	h[r5 + -28] = r7 
  103bc7:    3e 20       	if (r6 != 0) goto 6 <.GCPI354_25+0x262 : 103bce >
  103bc9:    5b 44       	r3 = [sp+ 452] 
  103bcb:    45 42       	r5 = [sp+ 36] 
  103bcd:    55 47       	r5 = [sp+ 372] 
  103bcf:    5d 2d       	r5 = [addr(468)]  <check_ext_api+0x1C : 103da4 >
  103bd1:    2d 2d       	r5 = [addr(-304)]  <.GCPI354_25+0x134 : 103aa0 >
  103bd3:    2d 2d       	r5 = [addr(-304)]  <.GCPI354_25+0x138 : 103aa4 >
  103bd5:    2d 45       	r5 = [sp+ -304] 
  103bd7:    4d 55       	r5 = h[r1 + 22] 
  103bd9:    65 72       	h[r4 + -28] = r5 
  103bdb:    72 20       	if (r2 == 0) goto 14 <.GCPI354_25+0x27E : 103bea >
  103bdd:    6d 73       	h[r5 + -12] = r5 
  103bdf:    67 25       	if (r7 == 0) goto -84 <.GCPI354_25+0x220 : 103b8c >
  103be1:    64 3a       	[r2++] = {r6, r5, r2} 
  103be3:    25 73       	h[r4 + -16] = r5 
  103be5:    2d 2d       	r5 = [addr(-304)]  <.GCPI354_25+0x148 : 103ab4 >
  103be7:    2d 2d       	r5 = [addr(-304)]  <.GCPI354_25+0x14C : 103ab8 >
  103be9:    2d 0a       	goto 1114 <f1a_decode_index+0x22 : 104044 >
  103beb:    0d 0a       	goto 1050 <vfs_seek+0xE : 104006 >
  103bed:    00           <unknown instruction>
  103bee:    3c 45       	r4 = [sp+ -48] 
  103bf0:    72 72       	h[r6 + -28] = r2 
  103bf2:    6f 72       	h[r5 + -28] = r7 
  103bf4:    3e 20       	if (r6 != 0) goto 6 <.GCPI354_25+0x290 : 103bfc >
  103bf6:    5b 44       	r3 = [sp+ 452] 
  103bf8:    45 42       	r5 = [sp+ 36] 
  103bfa:    55 47       	r5 = [sp+ 372] 
  103bfc:    5d 72       	h[r3 + -28] = r5 
  103bfe:    25 64       	[sp+ -448] = r5 
  103c00:    3a 30       	{r5-r3, r1} = [r0++] 
  103c02:    78 25       	if (r0 != 0) goto -82 <.GCPI354_25+0x246 : 103bb2 >
  103c04:    30 38       	[r0++] = {r5, r4} 
  103c06:    78 0a       	goto 1264 <f1a_decode_index+0xD6 : 1040f8 >
  103c08:    0d 0a       	goto 1050 <f1a_decode_index+0x2 : 104024 >
  103c0a:    00           <unknown instruction>
  103c0b:    3c 45       	r4 = [sp+ -48] 
  103c0d:    72 72       	h[r6 + -28] = r2 
  103c0f:    6f 72       	h[r5 + -28] = r7 
  103c11:    3e 20       	if (r6 != 0) goto 6 <.GCPI354_25+0x2AC : 103c18 >
  103c13:    5b 44       	r3 = [sp+ 452] 
  103c15:    45 42       	r5 = [sp+ 36] 
  103c17:    55 47       	r5 = [sp+ 372] 
  103c19:    5d 73       	h[r3 + -12] = r5 
  103c1b:    74 61       	[sp+ -236] = r4 
  103c1d:    63 6b       	[r4 + 52] = r3 
  103c1f:    5f 6d       	[r3 + -44] = r7 
  103c21:    61 67       	[sp+ -396] = r1 
  103c23:    69 63       	[sp+ -332] = r1 
  103c25:    5b 25       	if (r3 != 0) goto -86 <.GCPI354_25+0x264 : 103bd0 >
  103c27:    64 5d       	r4 = b[r4 + -10] 
  103c29:    3d 30       	{r5-r2, r0} = [r0++] 
  103c2b:    78 25       	if (r0 != 0) goto -82 <.GCPI354_25+0x26E : 103bda >
  103c2d:    30 38       	[r0++] = {r5, r4} 
  103c2f:    78 0a       	goto 1264 <f1a_decode_index+0xFE : 104120 >
  103c31:    0d 0a       	goto 1050 <f1a_decode_index+0x2A : 10404c >
  103c33:    00           <unknown instruction>
  103c34:    3c 45       	r4 = [sp+ -48] 
  103c36:    72 72       	h[r6 + -28] = r2 
  103c38:    6f 72       	h[r5 + -28] = r7 
  103c3a:    3e 20       	if (r6 != 0) goto 6 <.GCPI354_25+0x2D6 : 103c42 >
  103c3c:    5b 44       	r3 = [sp+ 452] 
  103c3e:    45 42       	r5 = [sp+ 36] 
  103c40:    55 47       	r5 = [sp+ 372] 
  103c42:    5d 73       	h[r3 + -12] = r5 
  103c44:    74 61       	[sp+ -236] = r4 
  103c46:    63 6b       	[r4 + 52] = r3 
  103c48:    5f 6d       	[r3 + -44] = r7 
  103c4a:    61 67       	[sp+ -396] = r1 
  103c4c:    69 63       	[sp+ -332] = r1 
  103c4e:    30 5b       	r0 = b[r6 + -15] 
  103c50:    25 64       	[sp+ -448] = r5 
  103c52:    5d 3d       	[r5++] = {r6, r4-r2, r0} 
  103c54:    30 78       	b[r6 + 0] = r0 
  103c56:    25 30       	{r5, r2, r0} = [r0++] 
  103c58:    38 78       	b[r7 + 0] = r0 
  103c5a:    0a 0d       	goto -1516 <hgain_huff_tab+0x10 : 103670 >
  103c5c:    0a 00       	illeg
  103c5e:    72 65       	[sp+ -172] = r2 
  103c60:    73 65       	[sp+ -172] = r3 
  103c62:    72 76       	h[r6 + -26] = r2 
  103c64:    65 64       	[sp+ -444] = r5 
  103c66:    00 62       	[sp+ 32] = r0 
  103c68:    61 6e       	[r4 + -28] = r1 
  103c6a:    6b 65       	[sp+ -300] = r3 
  103c6c:    78 63       	[sp+ -76] = r0 
  103c6e:    70 74       	h[r6 + 6] = r0 
  103c70:    5f 65       	[sp+ 468] = r7 
  103c72:    72 72       	h[r6 + -28] = r2 
  103c74:    00 64       	[sp+ 64] = r0 
  103c76:    69 76       	h[r5 + -26] = r1 
  103c78:    30 5f       	r0 = b[r6 + -13] 
  103c7a:    65 72       	h[r4 + -28] = r5 
  103c7c:    72 00       	sti r2
  103c7e:    69 6c       	[r5 + -60] = r1 
  103c80:    6c 65       	[sp+ -300] = r4 
  103c82:    67 5f       	r7 = b[r4 + -9] 
  103c84:    65 72       	h[r4 + -28] = r5 
  103c86:    72 00       	sti r2
  103c88:    6d 69       	[r5 + 20] = r5 
  103c8a:    73 61       	[sp+ -236] = r3 
  103c8c:    6c 69       	[r5 + 20] = r4 
  103c8e:    67 6e       	[r4 + -28] = r7 
  103c90:    5f 65       	[sp+ 468] = r7 
  103c92:    72 72       	h[r6 + -28] = r2 
  103c94:    00 00       	nop
  103c96:    00 00       	nop


get_crcv.1396:
  103c98:    01 80       	r1 = 0 			  ## testmain.c:30:0
  103c9a:    02 80       	r2 = 0 			  ## testmain.c:30:0
  103c9c:    a1 98       	cmp r1, 20			  ## testmain.c:33:2
  103c9e:    01 03       	ifs (nzcv == 0) {			  ## testmain.c:37:2
  103ca0:    50 c9       		r0 = r2.l 			  ## testmain.c:37:2
  103ca2:    20 00       		rts
                               	}			  ## testmain.c:37:2
  103ca4:    43 d4       	r3 = r0 + r1 			  ## testmain.c:35:11
  103ca6:    1b 50       	r3 = h[r3 + 0] 			  ## testmain.c:35:11
  103ca8:    d2 d4       	r2 = r2 + r3 			  ## testmain.c:35:8
  103caa:    89 d0       	r1 = r1 + 2 			  ## testmain.c:33:2
  103cac:    f7 0f       	goto -18 <get_crcv.1396+0x4 : 103c9c >			  ## testmain.c:33:2
  103cae:    00 00       	nop			  ## testmain.c:33:2


ima_decoder_open:
  103cb0:    17 c2       	[--sp] = {rets, r7-r4} 			  ## testmain.c:93:0
  103cb2:    15 c6       	r5 = r2 			  ## testmain.c:93:0
  103cb4:    0e c6       	r6 = r1 			  ## testmain.c:93:0
  103cb6:    04 c6       	r4 = r0 			  ## testmain.c:93:0
  103cb8:    01 80       	r1 = 0 			  ## testmain.c:106:2
  103cba:    12 ea e4 00 	r2 = 228 			  ## testmain.c:106:2
  103cbe:    df e1 df 94 	call -265574 <memset : c2f5c >			  ## testmain.c:106:2
  103cc2:    00 ed 40 c0 	r0 = r4 + 192 			  ## testmain.c:107:26
  103cc6:    31 c6       	r1 = r6 			  ## testmain.c:107:2
  103cc8:    62 80       	r2 = 12 			  ## testmain.c:107:2
  103cca:    df e1 1f 94 	call -265598 <memcpy : c2f50 >			  ## testmain.c:107:2
  103cce:    00 ed 46 88 	r6 = r4 + 136 
  103cd2:    b4 69       	[r6 + 24] = r4 			  ## testmain.c:109:21
  103cd4:    08 80       	r0 = 1 			  ## testmain.c:110:19
  103cd6:    b0 79       	b[r6 + -8] = r0 			  ## testmain.c:110:19
  103cd8:    75 21       	if (r5 == 0) goto 46 <ima_decoder_open+0x58 : 103d08 >			  ## testmain.c:110:19
  103cda:    6f 51       	r7 = h[r5 + 20] 			  ## testmain.c:114:15
  103cdc:    28 c6       	r0 = r5 			  ## testmain.c:116:9
  103cde:    dc 04       	call -72 <get_crcv.1396 : 103c98 >			  ## testmain.c:116:9
  103ce0:    11 ea 4d 41 	r1 = 16717 			  ## testmain.c:114:7
  103ce4:    39 ce       	cmp r7, r1			  ## testmain.c:121:27
  103ce6:    10 11       	ifs (nzcv != 0) goto 32 <ima_decoder_open+0x58 : 103d08 >			  ## testmain.c:121:27
  103ce8:    69 55       	r1 = h[r5 + 22] 			  ## testmain.c:117:15
  103cea:    08 ce       	cmp r1, r0			  ## testmain.c:117:15
  103cec:    0d 11       	ifs (nzcv != 0) goto 26 <ima_decoder_open+0x58 : 103d08 >			  ## testmain.c:117:15
  103cee:    08 80       	r0 = 1 			  ## testmain.c:146:21
  103cf0:    b0 7c       	b[r6 + 10] = r0 			  ## testmain.c:146:21
  103cf2:    a8 50       	r0 = h[r5 + 8] 			  ## testmain.c:147:34
  103cf4:    b0 77       	h[r6 + -6] = r0 			  ## testmain.c:147:24
  103cf6:    28 49       	r0 = [r5 + 16] 			  ## testmain.c:148:34
  103cf8:    30 6a       	[r6 + 32] = r0 			  ## testmain.c:148:24
  103cfa:    e8 48       	r0 = [r5 + 12] 			  ## testmain.c:149:32
  103cfc:    30 68       	[r6 + 0] = r0 			  ## testmain.c:149:22
  103cfe:    28 48       	r0 = [r5 + 0] 			  ## testmain.c:150:35
  103d00:    70 6a       	[r6 + 36] = r0 			  ## testmain.c:150:25
  103d02:    68 48       	r0 = [r5 + 4] 			  ## testmain.c:151:37
  103d04:    b0 6a       	[r6 + 40] = r0 			  ## testmain.c:151:27
  103d06:    2b 08       	goto 86 <.GJTIE2_0_0_+0x22 : 103d5e >			  ## testmain.c:151:27
  103d08:    15 ea 40 1f 	r5 = 8000 			  ## testmain.c:123:24
  103d0c:    b5 77       	h[r6 + -6] = r5 			  ## testmain.c:123:24
  103d0e:    31 4a       	r1 = [r6 + 32] 			  ## testmain.c:124:78
  103d10:    00 e5 67 0e 	r7, r0 = d[r6 + 56] 			  ## testmain.c:124:60
  103d14:    22 c6       	r2 = r4 			  ## testmain.c:124:14
  103d16:    23 80       	r3 = 4 			  ## testmain.c:124:14
  103d18:    af 01       	call r7			  ## testmain.c:124:14
  103d1a:    20 58       	r0 = b[r4 + 0] 			  ## testmain.c:126:11
  103d1c:    21 5a       	r1 = b[r4 + 1] 			  ## testmain.c:126:29
  103d1e:    41 f6 01 08 	r1 <= insert(r0, p:8, l:8) 			  ## testmain.c:126:27
  103d22:    08 a8       	r0 = r1 << 8 			  ## testmain.c:126:41
  103d24:    21 5c       	r1 = b[r4 + 2] 			  ## testmain.c:126:49
  103d26:    08 da       	r0 |= r1 			  ## testmain.c:126:47
  103d28:    c1 2b       	r1 = [addr(60)]  <.GCPI2_0 : 103d64 >			  ## testmain.c:127:11
  103d2a:    01 ce       	cmp r0, r1			  ## testmain.c:127:7
  103d2c:    18 11       	ifs (nzcv != 0) goto 48 <.GJTIE2_0_0_+0x22 : 103d5e >			  ## testmain.c:127:7
  103d2e:    20 5e       	r0 = b[r4 + 3] 			  ## testmain.c:129:19
  103d30:    20 98       	cmp r0, 4			  ## testmain.c:130:8
  103d32:    10 18       	if (nzcv > 0) goto 32 <.GJTIE2_0_0_+0x18 : 103d54 >			  ## testmain.c:130:8
  103d34:    b0 01       	tbb [r0]


.GJTIS2_0_0_:
  103d36:    0e     < 14 : 0xE >
  103d37:    03     < 3 : 0x3 >
  103d38:    06     < 6 : 0x6 >
  103d39:    09     < 9 : 0x9 >
  103d3a:    0c     < 12 : 0xC >
  103d3b:    00     < 0 : 0x0 >
  103d3c:    15 ea 80 3e 	r5 = 16000 
  103d40:    08 08       	goto 16 <.GJTIE2_0_0_+0x16 : 103d52 >
  103d42:    15 ea 00 7d 	r5 = 32000 
  103d46:    05 08       	goto 10 <.GJTIE2_0_0_+0x16 : 103d52 >
  103d48:    15 ea e0 2e 	r5 = 12000 
  103d4c:    02 08       	goto 4 <.GJTIE2_0_0_+0x16 : 103d52 >
  103d4e:    15 ea c0 5d 	r5 = 24000 
  103d52:    b5 77       	h[r6 + -6] = r5 
  103d54:    30 4a       	r0 = [r6 + 32] 			  ## testmain.c:140:25
  103d56:    00 d1       	r0 = r0 + 4 			  ## testmain.c:140:25
  103d58:    30 6a       	[r6 + 32] = r0 			  ## testmain.c:140:25
  103d5a:    08 80       	r0 = 1 			  ## testmain.c:141:22
  103d5c:    b0 7c       	b[r6 + 10] = r0 			  ## testmain.c:141:22
  103d5e:    00 80       	r0 = 0 			  ## testmain.c:154:2
  103d60:    17 c0       	{pc, r7-r4} = [sp++] 			  ## testmain.c:154:2
  103d62:    00 00       	nop			  ## testmain.c:154:2


.GCPI2_0:
  103d64:    56 41 57 00     < 5718358 : 0x574156 >

vfs_file_name:
  103d68:    1f c2       	[--sp] = {rets} 			  ## vfs.c:342:0
  103d6a:    b0 20       	if (r0 == 0) goto 22 <vfs_file_name+0x1A : 103d82 >			  ## vfs.c:342:0
  103d6c:    01 48       	r1 = [r0 + 0] 			  ## vfs.c:348:20
  103d6e:    91 20       	if (r1 == 0) goto 18 <vfs_file_name+0x1A : 103d82 >
  103d70:    20 e8 13 11 	r3 = [r1 + 68] 			  ## vfs.c:349:58
  103d74:    63 20       	if (r3 == 0) goto 12 <vfs_file_name+0x1A : 103d82 >			  ## vfs.c:349:58
  103d76:    40 48       	r0 = [r0 + 4] 			  ## vfs.c:351:35
  103d78:    c1 28       	r1 = [addr(12)]  <.GCPI3_0 : 103d84 >			  ## vfs.c:351:16
  103d7a:    00 ed 11 c4 	r1 = r1 + 196 			  ## vfs.c:351:16
  103d7e:    82 80       	r2 = 16 			  ## vfs.c:351:16
  103d80:    ab 01       	call r3			  ## vfs.c:351:16
  103d82:    1f c0       	{pc} = [sp++] 


.GCPI3_0:
  103d84:    60 1c 00 00     < 7264 : 0x1C60 >

check_ext_api:
  103d88:    1b c2       	[--sp] = {rets, r11-r4} 			  ## decoder_mge.c:57:0
  103d8a:    82 2f       	r2 = [addr(120)]  <.GCPI4_0 : 103e04 >			  ## decoder_mge.c:57:0
  103d8c:    12 48       	r2 = [r2 + 0] 			  ## decoder_mge.c:57:0
  103d8e:    53 d0       	r3 = r2 + 1 			  ## decoder_mge.c:57:0
  103d90:    53 ea 00 00 	r11 = 0 			  ## decoder_mge.c:57:0
  103d94:    20 e4 09 1c 	r9 = [addr(112)]  <.GCPI4_1 : 103e08 >			  ## decoder_mge.c:57:0
  103d98:    52 ea c4 00 	r10 = 196 			  ## decoder_mge.c:57:0
  103d9c:    00 ee 98 01 	r8 = r9 + r1 			  ## decoder_mge.c:57:0
  103da0:    02 80       	r2 = 0 			  ## decoder_mge.c:57:0
  103da2:    80 ef b0 13 	cmp r11, 19			  ## decoder_mge.c:61:5
  103da6:    2b 18       	if (nzcv > 0) goto 86 <check_ext_api+0x76 : 103dfe >			  ## decoder_mge.c:61:5
  103da8:    11 ce       	cmp r2, r1			  ## decoder_mge.c:47:5
  103daa:    28 12       	if (nzcv >= 0) goto 80 <check_ext_api+0x74 : 103dfc >			  ## decoder_mge.c:47:5
  103dac:    80 e7 05 02 	r5 = b[r0 + r2] (s) 			  ## decoder_mge.c:48:34
  103db0:    1f ed 57 e0 	r7 = r5 + -32 			  ## decoder_mge.c:48:34
  103db4:    00 e7 36 05 	r6 = b[r3 + r5] 			  ## decoder_mge.c:48:34
  103db8:    c0 f3 66 fc 	r6 = r6 & (~252) 			  ## decoder_mge.c:48:34
  103dbc:    16 98       	cmp r6, 2			  ## decoder_mge.c:48:34
  103dbe:    10 03       	ifs (nzcv != 0) {			  ## decoder_mge.c:48:34
  103dc0:    2f c6       		r7 = r5 
                               	}			  ## decoder_mge.c:48:34
  103dc2:    00 ee 95 02 	r5 = r9 + r2 			  ## decoder_mge.c:48:13
  103dc6:    9d cb       	r5 += r11 			  ## decoder_mge.c:48:13
  103dc8:    80 e7 55 0a 	r5 = b[r5 + r10] (s) 			  ## decoder_mge.c:48:13
  103dcc:    1f ed 56 e0 	r6 = r5 + -32 			  ## decoder_mge.c:48:13
  103dd0:    00 e7 34 05 	r4 = b[r3 + r5] 			  ## decoder_mge.c:48:13
  103dd4:    c0 f3 44 fc 	r4 = r4 & (~252) 			  ## decoder_mge.c:48:13
  103dd8:    14 98       	cmp r4, 2			  ## decoder_mge.c:48:13
  103dda:    10 03       	ifs (nzcv != 0) {			  ## decoder_mge.c:48:13
  103ddc:    2e c6       		r6 = r5 
                               	}			  ## decoder_mge.c:48:13
  103dde:    52 d0       	r2 = r2 + 1 			  ## decoder_mge.c:47:27
  103de0:    37 ce       	cmp r6, r7			  ## decoder_mge.c:48:13
  103de2:    e2 10       	ifs (nzcv == 0) goto -60 <check_ext_api+0x20 : 103da8 >			  ## decoder_mge.c:48:13
  103de4:    00 e7 84 0a 	r4 = b[r8 + r10] 			  ## decoder_mge.c:65:22
  103de8:    02 80       	r2 = 0 			  ## decoder_mge.c:65:22
  103dea:    94 20       	if (r4 == 0) goto 18 <check_ext_api+0x76 : 103dfe >			  ## decoder_mge.c:65:22
  103dec:    00 ee 94 0b 	r4 = r9 + r11 			  ## decoder_mge.c:65:46
  103df0:    00 e7 44 0a 	r4 = b[r4 + r10] 			  ## decoder_mge.c:65:46
  103df4:    00 ed bb 01 	r11 = r11 + 1 			  ## decoder_mge.c:68:10
  103df8:    3c 25       	if (r4 != 0) goto -90 <check_ext_api+0x18 : 103da0 >
  103dfa:    01 08       	goto 2 <check_ext_api+0x76 : 103dfe >
  103dfc:    0a 80       	r2 = 1 
  103dfe:    10 c6       	r0 = r2 			  ## decoder_mge.c:72:1
  103e00:    1b c0       	{pc, r11-r4} = [sp++] 			  ## decoder_mge.c:72:1
  103e02:    00 00       	nop			  ## decoder_mge.c:72:1


.GCPI4_0:
  103e04:    28 00 00 00     < 40 : 0x28 >

.GCPI4_1:
  103e08:    60 1c 00 00     < 7264 : 0x1C60 >

ima_format_check:
  103e0c:    11 ea 92 00 	r1 = 146 			  ## testmain.c:159:0
  103e10:    00 e7 01 01 	r1 = b[r0 + r1] 			  ## testmain.c:161:15
  103e14:    00 80       	r0 = 0 			  ## testmain.c:161:15
  103e16:    09 98       	cmp r1, 1			  ## testmain.c:162:3
  103e18:    10 03       	ifs (nzcv != 0) {			  ## testmain.c:162:3
  103e1a:    10 80       		r0 = 2 
                               	}			  ## testmain.c:162:3
  103e1c:    20 00       	rts			  ## testmain.c:166:1


get_dec_info.1400:
  103e1e:    14 c2       	[--sp] = {rets, r4} 			  ## testmain.c:19:0
  103e20:    00 ed 02 80 	r2 = r0 + 128 			  ## testmain.c:19:0
  103e24:    13 54       	r3 = h[r2 + 2] 			  ## testmain.c:21:34
  103e26:    00 ed 01 b4 	r1 = r0 + 180 			  ## testmain.c:21:11
  103e2a:    54 e8 03 2d 	h[++ r0 = 180] = r3 			  ## testmain.c:21:23
  103e2e:    13 58       	r3 = b[r2 + 0] 			  ## testmain.c:22:26
  103e30:    93 6b       	[r2 + 56] = r3 			  ## testmain.c:22:24
  103e32:    53 50       	r3 = h[r2 + 4] 			  ## testmain.c:23:34
  103e34:    14 ea e8 03 	r4 = 1000 			  ## testmain.c:23:43
  103e38:    40 fc 33 04 	r3 = r3 / r4 			  ## testmain.c:23:43
  103e3c:    03 74       	h[r0 + 2] = r3 			  ## testmain.c:23:23
  103e3e:    90 48       	r0 = [r2 + 8] 			  ## testmain.c:24:42
  103e40:    d0 6b       	[r2 + 60] = r0 			  ## testmain.c:24:31
  103e42:    08 c6       	r0 = r1 			  ## testmain.c:26:2
  103e44:    14 c0       	{pc, r4} = [sp++] 			  ## testmain.c:26:2


get_bp_info.1402:
  103e46:    15 c2       	[--sp] = {rets, r5, r4} 			  ## testmain.c:70:0
  103e48:    01 c6       	r1 = r0 			  ## testmain.c:74:38
  103e4a:    24 e8 12 22 	r2 = [++ r1 = 136] 			  ## testmain.c:74:38
  103e4e:    05 c6       	r5 = r0 			  ## testmain.c:74:27
  103e50:    64 e8 52 36 	[++ r5 = 216] = r2 			  ## testmain.c:74:27
  103e54:    0a 4a       	r2 = [r1 + 32] 			  ## testmain.c:75:40
  103e56:    6a 68       	[r5 + 4] = r2 			  ## testmain.c:75:26
  103e58:    8a 57       	r2 = h[r1 + -6] 			  ## testmain.c:76:40
  103e5a:    ea 73       	h[r5 + -4] = r2 			  ## testmain.c:76:29
  103e5c:    4a 4a       	r2 = [r1 + 36] 			  ## testmain.c:77:42
  103e5e:    6a 6f       	[r5 + -12] = r2 			  ## testmain.c:77:24
  103e60:    89 4a       	r1 = [r1 + 40] 			  ## testmain.c:78:44
  103e62:    a9 6f       	[r5 + -8] = r1 			  ## testmain.c:78:26
  103e64:    11 ea 4d 41 	r1 = 16717 			  ## testmain.c:80:25
  103e68:    a9 70       	h[r5 + 8] = r1 			  ## testmain.c:80:25
  103e6a:    00 ed 04 cc 	r4 = r0 + 204 			  ## testmain.c:74:11
  103e6e:    20 c6       	r0 = r4 			  ## testmain.c:81:24
  103e70:    ff e1 2f f1 	call -476 <get_crcv.1396 : 103c98 >			  ## testmain.c:81:24
  103e74:    a8 74       	h[r5 + 10] = r0 			  ## testmain.c:81:22
  103e76:    20 c6       	r0 = r4 			  ## testmain.c:82:2
  103e78:    15 c0       	{pc, r5, r4} = [sp++] 			  ## testmain.c:82:2


regist_dac_channel:
  103e7a:    18 c2       	[--sp] = {rets, r8-r4} 			  ## dac_api.c:298:0
  103e7c:    02 2b       	r2 = [addr(48)]  <.GCPI8_0 : 103eac >			  ## dac_api.c:298:0
  103e7e:    13 d3       	r3 = r2 + -4 			  ## dac_api.c:298:0
  103e80:    00 e8 24 87 	r4 = b[r2 + 30] 			  ## dac_api.c:298:0
  103e84:    07 80       	r7 = 0 			  ## dac_api.c:298:0
  103e86:    50 ea 01 00 	r8 = 1 			  ## dac_api.c:298:0
  103e8a:    3e c6       	r6 = r7 			  ## dac_api.c:298:0
  103e8c:    16 98       	cmp r6, 2			  ## dac_api.c:300:5
  103e8e:    0d 18       	if (nzcv > 0) goto 26 <regist_dac_channel+0x30 : 103eaa >			  ## dac_api.c:300:5
  103e90:    80 f1 45 06 	r5 = r4 & setbit(r6) 			  ## dac_api.c:301:24
  103e94:    1b d1       	r3 = r3 + 4 			  ## dac_api.c:301:13
  103e96:    77 d0       	r7 = r6 + 1 			  ## dac_api.c:300:42
  103e98:    8d 27       	if (r5 != 0) goto -16 <regist_dac_channel+0x10 : 103e8a >			  ## dac_api.c:300:42
  103e9a:    00 f7 84 06 	r4 = r8 << r6 			  ## dac_api.c:301:26
  103e9e:    d9 68       	[r3 + 12] = r1 			  ## dac_api.c:305:25
  103ea0:    18 68       	[r3 + 0] = r0 			  ## dac_api.c:306:26
  103ea2:    04 e8 20 87 	r0 = b[++ r2 = 30] 			  ## dac_api.c:307:20
  103ea6:    20 da       	r0 |= r4 			  ## dac_api.c:307:20
  103ea8:    10 78       	b[r2 + 0] = r0 			  ## dac_api.c:307:20
  103eaa:    18 c0       	{pc, r8-r4} = [sp++] 


.GCPI8_0:
  103eac:    a4 25 00 00     < 9636 : 0x25A4 >

a_decode_api:
  103eb0:    18 c2       	[--sp] = {rets, r8-r4} 			  ## a_api.c:63:0
  103eb2:    fc cd       	sp += -4 			  ## a_api.c:63:0
  103eb4:    01 60       	[sp] = r1 			  ## a_api.c:63:0
  103eb6:    06 c6       	r6 = r0 			  ## a_api.c:63:0
  103eb8:    08 2e       	r0 = [addr(224)]  <.GCPI9_0 : 103f98 >			  ## a_api.c:68:5
  103eba:    df e1 ff 88 	call -265954 <xprintf : c2fdc >			  ## a_api.c:68:5
  103ebe:    20 e4 08 37 	r8 = [addr(220)]  <.GCPI9_1 : 103f9c >			  ## a_api.c:69:5
  103ec2:    00 ed 85 b8 	r5 = r8 + 184 			  ## a_api.c:69:5
  103ec6:    28 c6       	r0 = r5 			  ## a_api.c:69:5
  103ec8:    01 80       	r1 = 0 			  ## a_api.c:69:5
  103eca:    c2 81       	r2 = 56 			  ## a_api.c:69:5
  103ecc:    df e1 6f 84 	call -266100 <memset : c2f5c >			  ## a_api.c:69:5
  103ed0:    18 80       	r0 = 3 			  ## a_api.c:70:20
  103ed2:    00 ed 84 ec 	r4 = r8 + 236 			  ## a_api.c:70:20
  103ed6:    20 7a       	b[r4 + 1] = r0 			  ## a_api.c:70:20
  103ed8:    8f 2c       	r7 = [addr(200)]  <.GCPI9_2 : 103fa0 >			  ## a_api.c:78:5
  103eda:    89 2c       	r1 = [addr(200)]  <.GCPI9_3 : 103fa4 >			  ## a_api.c:78:5
  103edc:    38 c6       	r0 = r7 			  ## a_api.c:78:5
  103ede:    12 ea 00 05 	r2 = 1280 			  ## a_api.c:78:5
  103ee2:    df e1 7f 85 	call -266066 <cbuf_init : c2f94 >			  ## a_api.c:78:5
  103ee6:    e6 6c       	[r4 + -52] = r6 			  ## a_api.c:80:28
  103ee8:    67 6e       	[r4 + -28] = r7 			  ## a_api.c:81:28
  103eea:    10 ea 80 04 	r0 = 1152 			  ## a_api.c:82:28
  103eee:    60 6f       	[r4 + -12] = r0 			  ## a_api.c:82:28
  103ef0:    88 2b       	r0 = [addr(184)]  <.GCPI9_4 : 103fa8 >			  ## a_api.c:83:28
  103ef2:    60 6d       	[r4 + -44] = r0 			  ## a_api.c:83:28
  103ef4:    89 2b       	r1 = [addr(184)]  <.GCPI9_5 : 103fac >			  ## a_api.c:84:28
  103ef6:    21 6d       	[r4 + -48] = r1 			  ## a_api.c:84:28
  103ef8:    89 2b       	r1 = [addr(184)]  <.GCPI9_6 : 103fb0 >			  ## a_api.c:85:28
  103efa:    e1 6d       	[r4 + -36] = r1 			  ## a_api.c:85:28
  103efc:    89 2b       	r1 = [addr(184)]  <.GCPI9_7 : 103fb4 >			  ## a_api.c:86:28
  103efe:    a1 6d       	[r4 + -40] = r1 			  ## a_api.c:86:28
  103f00:    89 2b       	r1 = [addr(184)]  <.GCPI9_8 : 103fb8 >			  ## a_api.c:91:5
  103f02:    02 80       	r2 = 0 			  ## a_api.c:91:5
  103f04:    ff e1 4f ed 	call -600 <ima_decoder_open : 103cb0 >			  ## a_api.c:91:5
  103f08:    30 c6       	r0 = r6 			  ## a_api.c:94:20
  103f0a:    ff e1 df f2 	call -422 <vfs_file_name : 103d68 >			  ## a_api.c:94:20
  103f0e:    c8 2a       	r0 = [addr(172)]  <.GCPI9_9 : 103fbc >			  ## a_api.c:95:5
  103f10:    00 ed 01 c4 	r1 = r0 + 196 			  ## a_api.c:95:5
  103f14:    c8 2a       	r0 = [addr(172)]  <.GCPI9_10 : 103fc0 >			  ## a_api.c:95:5
  103f16:    df e1 1f 86 	call -266046 <xprintf : c2fdc >			  ## a_api.c:95:5
  103f1a:    88 2a       	r0 = [addr(168)]  <.GCPI9_11 : 103fc4 >			  ## a_api.c:96:9
  103f1c:    11 80       	r1 = 2 			  ## a_api.c:96:9
  103f1e:    ff e1 3f f3 	call -410 <check_ext_api : 103d88 >			  ## a_api.c:96:9
  103f22:    60 20       	if (r0 == 0) goto 12 <a_decode_api+0x80 : 103f30 >			  ## a_api.c:96:9
  103f24:    48 2a       	r0 = [addr(164)]  <.GCPI9_12 : 103fc8 >			  ## a_api.c:97:9
  103f26:    df e1 9f 85 	call -266062 <xprintf : c2fdc >			  ## a_api.c:97:9
  103f2a:    16 ea 40 1f 	r6 = 8000 
  103f2e:    0a 08       	goto 20 <a_decode_api+0x94 : 103f44 >
  103f30:    c8 29       	r0 = [addr(156)]  <.GCPI9_13 : 103fcc >			  ## a_api.c:100:16
  103f32:    11 80       	r1 = 2 			  ## a_api.c:100:16
  103f34:    ff e1 8f f2 	call -432 <check_ext_api : 103d88 >			  ## a_api.c:100:16
  103f38:    c0 21       	if (r0 == 0) goto 56 <a_decode_api+0xC2 : 103f72 >			  ## a_api.c:100:16
  103f3a:    48 29       	r0 = [addr(148)]  <.GCPI9_14 : 103fd0 >			  ## a_api.c:101:9
  103f3c:    df e1 ef 84 	call -266084 <xprintf : c2fdc >			  ## a_api.c:101:9
  103f40:    16 ea 80 3e 	r6 = 16000 
  103f44:    40 2e       	r0 = [addr(100)]  <.GCPI9_4 : 103fa8 >			  ## a_api.c:113:35
  103f46:    ff e1 ef f7 	call -260 <get_bp_info.1402 : 103e46 >			  ## a_api.c:113:35
  103f4a:    01 c6       	r1 = r0 			  ## a_api.c:113:35
  103f4c:    80 2e       	r0 = [addr(104)]  <.GCPI9_7 : 103fb4 >			  ## a_api.c:113:5
  103f4e:    c2 80       	r2 = 24 			  ## a_api.c:113:5
  103f50:    df e1 ef 7f 	call -266244 <memcpy : c2f50 >			  ## a_api.c:113:5
  103f54:    00 ed 80 d0 	r0 = r8 + 208 			  ## a_api.c:114:5
  103f58:    49 28       	r1 = [addr(132)]  <.GCPI9_17 : 103fdc >			  ## a_api.c:114:5
  103f5a:    8f 04       	call -226 <regist_dac_channel : 103e7a >			  ## a_api.c:114:5
  103f5c:    48 28       	r0 = [addr(132)]  <.GCPI9_18 : 103fe0 >			  ## a_api.c:116:5
  103f5e:    31 c6       	r1 = r6 			  ## a_api.c:116:5
  103f60:    df e1 cf 83 	call -266120 <xprintf : c2fdc >			  ## a_api.c:116:5
  103f64:    60 e8 86 33 	[r8 + 204] = r6 			  ## a_api.c:117:18
  103f68:    00 40       	r0 = [sp] 			  ## a_api.c:118:12
  103f6a:    05 68       	[r0 + 0] = r5 			  ## a_api.c:118:12
  103f6c:    00 80       	r0 = 0 			  ## a_api.c:118:12
  103f6e:    04 cd       	sp += 4 
  103f70:    18 c0       	{pc, r8-r4} = [sp++] 
  103f72:    00 2e       	r0 = [addr(96)]  <.GCPI9_15 : 103fd4 >			  ## a_api.c:105:9
  103f74:    df e1 2f 83 	call -266140 <xprintf : c2fdc >			  ## a_api.c:105:9
  103f78:    00 2b       	r0 = [addr(48)]  <.GCPI9_4 : 103fa8 >			  ## a_api.c:107:13
  103f7a:    ff e1 7f f4 	call -370 <ima_format_check : 103e0c >			  ## a_api.c:107:13
  103f7e:    60 20       	if (r0 == 0) goto 12 <a_decode_api+0xDC : 103f8c >			  ## a_api.c:107:13
  103f80:    80 2d       	r0 = [addr(88)]  <.GCPI9_16 : 103fd8 >			  ## a_api.c:108:13
  103f82:    df e1 bf 82 	call -266154 <xprintf : c2fdc >			  ## a_api.c:108:13
  103f86:    10 ea 22 90 	r0 = 36898 			  ## a_api.c:108:13
  103f8a:    f1 0f       	goto -30 <a_decode_api+0xBE : 103f6e >			  ## a_api.c:108:13
  103f8c:    c0 29       	r0 = [addr(28)]  <.GCPI9_4 : 103fa8 >			  ## a_api.c:111:13
  103f8e:    ff e1 6f f4 	call -372 <get_dec_info.1400 : 103e1e >			  ## a_api.c:111:13
  103f92:    06 50       	r6 = h[r0 + 0] 			  ## a_api.c:111:13
  103f94:    d7 0f       	goto -82 <a_decode_api+0x94 : 103f44 >
  103f96:    00 00       	nop


.GCPI9_0:
  103f98:    8e a8 11 00     < 1157262 : 0x11A88E >

.GCPI9_1:
  103f9c:    60 1d 00 00     < 7520 : 0x1D60 >

.GCPI9_2:
  103fa0:    f4 33 00 00     < 13300 : 0x33F4 >

.GCPI9_3:
  103fa4:    14 34 00 00     < 13332 : 0x3414 >

.GCPI9_4:
  103fa8:    c0 20 00 00     < 8384 : 0x20C0 >

.GCPI9_5:
  103fac:    b4 9a 11 00     < 1153716 : 0x119AB4 >

.GCPI9_6:
  103fb0:    b0 5f 11 00     < 1138608 : 0x115FB0 >

.GCPI9_7:
  103fb4:    14 39 00 00     < 14612 : 0x3914 >

.GCPI9_8:
  103fb8:    e4 5f 11 00     < 1138660 : 0x115FE4 >

.GCPI9_9:
  103fbc:    60 1c 00 00     < 7264 : 0x1C60 >

.GCPI9_10:
  103fc0:    ac a8 11 00     < 1157292 : 0x11A8AC >

.GCPI9_11:
  103fc4:    f0 5f 11 00     < 1138672 : 0x115FF0 >

.GCPI9_12:
  103fc8:    d4 a8 11 00     < 1157332 : 0x11A8D4 >

.GCPI9_13:
  103fcc:    f3 5f 11 00     < 1138675 : 0x115FF3 >

.GCPI9_14:
  103fd0:    f6 a8 11 00     < 1157366 : 0x11A8F6 >

.GCPI9_15:
  103fd4:    18 a9 11 00     < 1157400 : 0x11A918 >

.GCPI9_16:
  103fd8:    3a a9 11 00     < 1157434 : 0x11A93A >

.GCPI9_17:
  103fdc:    a0 0a 00 00     < 2720 : 0xAA0 >

.GCPI9_18:
  103fe0:    c0 ac 11 00     < 1158336 : 0x11ACC0 >

a_buff_api:
  103fe4:    c1 28       	r1 = [addr(12)]  <.GCPI10_0 : 103ff0 >			  ## a_api.c:125:0
  103fe6:    01 68       	[r0 + 0] = r1 			  ## a_api.c:126:22
  103fe8:    c1 28       	r1 = [addr(12)]  <.GCPI10_1 : 103ff4 >			  ## a_api.c:127:22
  103fea:    41 68       	[r0 + 4] = r1 			  ## a_api.c:127:22
  103fec:    00 80       	r0 = 0 			  ## a_api.c:128:5
  103fee:    20 00       	rts			  ## a_api.c:128:5


.GCPI10_0:
  103ff0:    f4 33 00 00     < 13300 : 0x33F4 >

.GCPI10_1:
  103ff4:    2c 39 00 00     < 14636 : 0x392C >

vfs_seek:
  103ff8:    1f c2       	[--sp] = {rets} 			  ## vfs.c:282:0
  103ffa:    70 20       	if (r0 == 0) goto 14 <vfs_seek+0x12 : 10400a >			  ## vfs.c:282:0
  103ffc:    02 48       	r2 = [r0 + 0] 			  ## vfs.c:288:20
  103ffe:    52 20       	if (r2 == 0) goto 10 <vfs_seek+0x12 : 10400a >
  104000:    93 4a       	r3 = [r2 + 40] 			  ## vfs.c:289:58
  104002:    33 20       	if (r3 == 0) goto 6 <vfs_seek+0x12 : 10400a >			  ## vfs.c:289:58
  104004:    40 48       	r0 = [r0 + 4] 			  ## vfs.c:291:34
  104006:    02 80       	r2 = 0 			  ## vfs.c:291:15
  104008:    ab 01       	call r3			  ## vfs.c:291:15
  10400a:    1f c0       	{pc} = [sp++] 


vfs_read:
  10400c:    14 c2       	[--sp] = {rets, r4} 			  ## vfs.c:250:0
  10400e:    03 c6       	r3 = r0 			  ## vfs.c:250:0
  104010:    00 80       	r0 = 0 			  ## vfs.c:250:0
  104012:    63 20       	if (r3 == 0) goto 12 <vfs_read+0x14 : 104020 >			  ## vfs.c:250:0
  104014:    1c 48       	r4 = [r3 + 0] 			  ## vfs.c:256:20
  104016:    44 20       	if (r4 == 0) goto 8 <vfs_read+0x14 : 104020 >
  104018:    24 4a       	r4 = [r4 + 32] 			  ## vfs.c:257:58
  10401a:    24 20       	if (r4 == 0) goto 4 <vfs_read+0x14 : 104020 >
  10401c:    58 48       	r0 = [r3 + 4] 			  ## vfs.c:259:34
  10401e:    ac 01       	call r4			  ## vfs.c:259:15
  104020:    14 c0       	{pc, r4} = [sp++] 


f1a_decode_index:
  104022:    1e c2       	[--sp] = {rets, r14-r4} 			  ## f1a_api.c:86:0
  104024:    ec cd       	sp += -20 			  ## f1a_api.c:86:0
  104026:    1d c6       	r5 = r3 			  ## f1a_api.c:86:0
  104028:    16 c6       	r6 = r2 			  ## f1a_api.c:86:0
  10402a:    0c c6       	r4 = r1 			  ## f1a_api.c:86:0
  10402c:    07 c6       	r7 = r0 			  ## f1a_api.c:86:0
  10402e:    20 e4 00 ae 	r0 = [addr(696)]  <.GCPI22_0 : 1042e8 >			  ## f1a_api.c:92:5
  104032:    df e1 3f 7d 	call -266330 <xprintf : c2fdc >			  ## f1a_api.c:92:5
  104036:    10 ea 00 90 	r0 = 36864 			  ## f1a_api.c:92:5
  10403a:    0c 98       	cmp r4, 1			  ## f1a_api.c:100:9
  10403c:    00 fb 68 08 	if (nzcv > 0) goto 268 <f1a_decode_index+0x12A : 10414c >			  ## f1a_api.c:100:9
  104040:    c7 60       	[sp+ 12] = r7 
  104042:    86 60       	[sp+ 8] = r6 
  104044:    00 fc 40 38 	r0 = r4 * 56 			  ## f1a_api.c:111:18
  104048:    20 e4 06 a8 	r6 = [addr(672)]  <.GCPI22_1 : 1042ec >			  ## f1a_api.c:111:18
  10404c:    00 ee 6c 00 	r12 = r6 + r0 			  ## f1a_api.c:111:18
  104050:    df e1 8f 76 	call -266544 <local_irq_disable : c2f24 >			  ## f1a_api.c:114:5
  104054:    00 ed cb 58 	r11 = r12 + 88 			  ## f1a_api.c:111:18
  104058:    07 80       	r7 = 0 
  10405a:    98 c6       	r0 = r11 			  ## f1a_api.c:115:5
  10405c:    01 80       	r1 = 0 			  ## f1a_api.c:115:5
  10405e:    c2 81       	r2 = 56 			  ## f1a_api.c:115:5
  104060:    df e1 cf 77 	call -266504 <memset : c2f5c >			  ## f1a_api.c:115:5
  104064:    df e1 cf 75 	call -266568 <local_irq_enable : c2f20 >			  ## f1a_api.c:116:5
  104068:    00 ed 60 8c 	r0 = r6 + 140 			  ## f1a_api.c:116:5
  10406c:    07 7a       	b[r0 + 1] = r7 			  ## f1a_api.c:119:25
  10406e:    08 80       	r0 = 1 			  ## f1a_api.c:121:25
  104070:    00 ed 61 c4 	r1 = r6 + 196 			  ## f1a_api.c:121:25
  104074:    08 7a       	b[r1 + 1] = r0 			  ## f1a_api.c:121:25
  104076:    fe e1 3f 08 	call -16122 <need_dcbuf_size.1342 : 100180 >			  ## f1a_api.c:124:16
  10407a:    01 c6       	r1 = r0 			  ## f1a_api.c:124:16
  10407c:    10 ea 65 0c 	r0 = 3173 			  ## f1a_api.c:125:9
  104080:    08 ce       	cmp r1, r0			  ## f1a_api.c:125:9
  104082:    07 13       	if (nzcv < 0) goto 14 <f1a_decode_index+0x70 : 104092 >			  ## f1a_api.c:125:9
  104084:    20 e4 00 ae 	r0 = [addr(696)]  <.GCPI22_22 : 104340 >			  ## f1a_api.c:126:9
  104088:    df e1 8f 7a 	call -266416 <xprintf : c2fdc >			  ## f1a_api.c:126:9
  10408c:    10 ea 01 90 	r0 = 36865 
  104090:    5d 08       	goto 186 <f1a_decode_index+0x12A : 10414c >
  104092:    46 44       	r6 = [sp+ 68] 
  104094:    05 ed 68 20 	r8 = r6 + 1312 			  ## f1a_api.c:109:15
  104098:    00 ed 61 20 	r1 = r6 + 32 			  ## f1a_api.c:108:15
  10409c:    30 c6       	r0 = r6 			  ## f1a_api.c:130:5
  10409e:    12 ea 00 05 	r2 = 1280 			  ## f1a_api.c:130:5
  1040a2:    df e1 7f 77 	call -266514 <cbuf_init : c2f94 >			  ## f1a_api.c:130:5
  1040a6:    c0 40       	r0 = [sp+ 12] 
  1040a8:    60 e8 b0 00 	[r11 + 0] = r0 			  ## f1a_api.c:134:23
  1040ac:    a7 c6       	r7 = r12 			  ## f1a_api.c:135:29
  1040ae:    64 e8 76 1c 	[++ r7 = 112] = r6 			  ## f1a_api.c:135:29
  1040b2:    11 ea 80 04 	r1 = 1152 			  ## f1a_api.c:136:29
  1040b6:    39 69       	[r7 + 16] = r1 			  ## f1a_api.c:136:29
  1040b8:    60 e8 78 fc 	[r7 + -16] = r8 			  ## f1a_api.c:137:23
  1040bc:    20 e4 01 8c 	r1 = [addr(560)]  <.GCPI22_2 : 1042f0 >			  ## f1a_api.c:138:24
  1040c0:    f9 6e       	[r7 + -20] = r1 			  ## f1a_api.c:138:24
  1040c2:    00 fc 42 0a 	r2 = r4 * 10 			  ## f1a_api.c:139:35
  1040c6:    20 e4 01 8b 	r1 = [addr(556)]  <.GCPI22_3 : 1042f4 >			  ## f1a_api.c:139:35
  1040ca:    89 d4       	r1 = r1 + r2 			  ## f1a_api.c:139:35
  1040cc:    45 e5 71 fd 	d[r7 + -12] = r1, r5 			  ## f1a_api.c:139:26
  1040d0:    ff e1 af e4 	call -876 <vfs_file_name : 103d68 >			  ## f1a_api.c:147:20
  1040d4:    20 e4 00 88 	r0 = [addr(544)]  <.GCPI22_4 : 1042f8 >			  ## f1a_api.c:148:5
  1040d8:    00 ed 01 c4 	r1 = r0 + 196 			  ## f1a_api.c:148:5
  1040dc:    20 e4 00 87 	r0 = [addr(540)]  <.GCPI22_5 : 1042fc >			  ## f1a_api.c:148:5
  1040e0:    df e1 cf 77 	call -266504 <xprintf : c2fdc >			  ## f1a_api.c:148:5
  1040e4:    00 fc 40 0c 	r0 = r4 * 12 			  ## f1a_api.c:112:25
  1040e8:    20 e4 01 85 	r1 = [addr(532)]  <.GCPI22_6 : 104300 >			  ## f1a_api.c:112:25
  1040ec:    09 d4       	r1 = r1 + r0 			  ## f1a_api.c:112:25
  1040ee:    80 c6       	r0 = r8 			  ## f1a_api.c:149:17
  1040f0:    2a c6       	r2 = r5 			  ## f1a_api.c:149:17
  1040f2:    fe e1 1f 0a 	call -16062 <f1a_decoder_open : 100238 >			  ## f1a_api.c:149:17
  1040f6:    41 c6       	r9 = r0 			  ## f1a_api.c:149:17
  1040f8:    20 e4 00 82 	r0 = [addr(520)]  <.GCPI22_7 : 104304 >			  ## f1a_api.c:150:9
  1040fc:    21 80       	r1 = 4 			  ## f1a_api.c:150:9
  1040fe:    ff e1 3f e4 	call -890 <check_ext_api : 103d88 >			  ## f1a_api.c:150:9
  104102:    0d 83       	r5 = 97 			  ## f1a_api.c:150:9
  104104:    78 20       	if (r0 != 0) goto 14 <f1a_decode_index+0xF2 : 104114 >
  104106:    20 e4 00 80 	r0 = [addr(512)]  <.GCPI22_8 : 104308 >			  ## f1a_api.c:152:16
  10410a:    21 80       	r1 = 4 			  ## f1a_api.c:152:16
  10410c:    ff e1 cf e3 	call -904 <check_ext_api : 103d88 >			  ## f1a_api.c:152:16
  104110:    15 83       	r5 = 98 			  ## f1a_api.c:152:16
  104112:    e0 21       	if (r0 == 0) goto 60 <f1a_decode_index+0x12E : 104150 >			  ## f1a_api.c:152:16
  104114:    20 e4 00 84 	r0 = [addr(528)]  <.GCPI22_16 : 104328 >			  ## f1a_api.c:176:5
  104118:    29 c6       	r1 = r5 			  ## f1a_api.c:176:5
  10411a:    df e1 ff 75 	call -266562 <xprintf : c2fdc >			  ## f1a_api.c:176:5
  10411e:    20 e4 01 83 	r1 = [addr(524)]  <.GCPI22_17 : 10432c >			  ## f1a_api.c:178:5
  104122:    38 c6       	r0 = r7 			  ## f1a_api.c:178:5
  104124:    ff e1 9f ea 	call -686 <regist_dac_channel : 103e7a >			  ## f1a_api.c:178:5
  104128:    14 ea 00 7d 	r4 = 32000 			  ## f1a_api.c:178:5
  10412c:    15 9b       	cmp r5, 98			  ## f1a_api.c:182:9
  10412e:    04 10       	ifs (nzcv == 0) goto 8 <f1a_decode_index+0x116 : 104138 >			  ## f1a_api.c:182:9
  104130:    80 c6       	r0 = r8 			  ## f1a_api.c:185:13
  104132:    fe e1 3f 38 	call -14586 <get_dec_info : 10083c >			  ## f1a_api.c:185:13
  104136:    04 50       	r4 = h[r0 + 0] 			  ## f1a_api.c:185:13
  104138:    98 2f       	r0 = [addr(504)]  <.GCPI22_18 : 104330 >			  ## f1a_api.c:187:5
  10413a:    21 c6       	r1 = r4 			  ## f1a_api.c:187:5
  10413c:    df e1 ef 74 	call -266596 <xprintf : c2fdc >			  ## f1a_api.c:187:5
  104140:    60 e8 c4 1b 	[r12 + 108] = r4 			  ## f1a_api.c:190:19
  104144:    80 40       	r0 = [sp+ 8] 			  ## f1a_api.c:191:12
  104146:    60 e8 0b 00 	[r0 + 0] = r11 			  ## f1a_api.c:191:12
  10414a:    00 80       	r0 = 0 			  ## f1a_api.c:191:12
  10414c:    14 cd       	sp += 20 
  10414e:    1e c0       	{pc, r14-r4} = [sp++] 
  104150:    d8 2b       	r0 = [addr(444)]  <.GCPI22_9 : 10430c >			  ## f1a_api.c:154:16
  104152:    21 80       	r1 = 4 			  ## f1a_api.c:154:16
  104154:    ff e1 8f e1 	call -976 <check_ext_api : 103d88 >			  ## f1a_api.c:154:16
  104158:    b0 20       	if (r0 == 0) goto 22 <f1a_decode_index+0x14E : 104170 >			  ## f1a_api.c:154:16
  10415a:    80 c6       	r0 = r8 			  ## f1a_api.c:156:13
  10415c:    fe e1 4f 25 	call -15192 <f1a_format_check : 100608 >			  ## f1a_api.c:156:13
  104160:    00 98       	cmp r0, 0			  ## f1a_api.c:156:13
  104162:    65 10       	ifs (nzcv == 0) goto 202 <f1a_decode_index+0x20C : 10422e >			  ## f1a_api.c:156:13
  104164:    d8 2a       	r0 = [addr(428)]  <.GCPI22_10 : 104310 >			  ## f1a_api.c:157:13
  104166:    df e1 9f 73 	call -266638 <xprintf : c2fdc >
  10416a:    10 ea 02 90 	r0 = 36866 
  10416e:    ee 0f       	goto -36 <f1a_decode_index+0x12A : 10414c >
  104170:    58 2a       	r0 = [addr(420)]  <.GCPI22_11 : 104314 >			  ## f1a_api.c:160:16
  104172:    21 80       	r1 = 4 			  ## f1a_api.c:160:16
  104174:    ff e1 8f e0 	call -1008 <check_ext_api : 103d88 >			  ## f1a_api.c:160:16
  104178:    00 98       	cmp r0, 0			  ## f1a_api.c:160:16
  10417a:    5b 10       	ifs (nzcv == 0) goto 182 <f1a_decode_index+0x210 : 104232 >			  ## f1a_api.c:160:16
  10417c:    20 c9       	r0 = r4.b 			  ## f1a_api.c:162:75
  10417e:    0e 80       	r6 = 1 			  ## f1x_parsing.c:146:9
  104180:    01 11       	ifs (nzcv != 0) goto 2 <f1a_decode_index+0x162 : 104184 >
  104182:    06 80       	r6 = 0 			  ## f1x_parsing.c:146:9
  104184:    00 fc 60 38 	r0 = r6 * 56 			  ## f1x_parsing.c:149:14
  104188:    19 29       	r1 = [addr(400)]  <.GCPI22_12 : 104318 >			  ## f1x_parsing.c:149:14
  10418a:    00 ee 1a 00 	r10 = r1 + r0 			  ## f1x_parsing.c:149:14
  10418e:    90 c6       	r0 = r10 			  ## f1x_parsing.c:150:5
  104190:    01 80       	r1 = 0 			  ## f1x_parsing.c:150:5
  104192:    c2 81       	r2 = 56 			  ## f1x_parsing.c:150:5
  104194:    df e1 2f 6e 	call -266812 <memset : c2f5c >			  ## f1x_parsing.c:150:5
  104198:    80 80       	r0 = 16 
  10419a:    f9 87       	r1 = -1 
  10419c:    03 08       	goto 6 <f1a_decode_index+0x182 : 1041a4 >
  10419e:    60 e7 a1 00 	[r10 + r0] = r1 			  ## f1x_parsing.c:152:24
  1041a2:    00 d1       	r0 = r0 + 4 			  ## f1x_parsing.c:151:5
  1041a4:    c0 99       	cmp r0, 56			  ## f1x_parsing.c:151:5
  1041a6:    fb 11       	ifs (nzcv != 0) goto -10 <f1a_decode_index+0x17C : 10419e >			  ## f1x_parsing.c:151:5
  1041a8:    00 ed a0 03 	r0 = r10 + 3 			  ## f1x_parsing.c:156:13
  1041ac:    11 2f       	r1 = [addr(368)]  <.GCPI22_13 : 10431c >			  ## f1x_parsing.c:156:5
  1041ae:    52 80       	r2 = 10 			  ## f1x_parsing.c:156:5
  1041b0:    df e1 ef 6c 	call -266852 <memcpy : c2f50 >			  ## f1x_parsing.c:156:5
  1041b4:    c4 40       	r4 = [sp+ 12] 
  1041b6:    20 c6       	r0 = r4 			  ## f1x_parsing.c:98:5
  1041b8:    21 80       	r1 = 4 			  ## f1x_parsing.c:98:5
  1041ba:    ff e1 df f1 	call -454 <vfs_seek : 103ff8 >			  ## f1x_parsing.c:98:5
  1041be:    81 90       	r1 = sp + 16 			  ## f1x_parsing.c:98:5
  1041c0:    20 c6       	r0 = r4 			  ## f1x_parsing.c:101:14
  1041c2:    12 80       	r2 = 2 			  ## f1x_parsing.c:101:14
  1041c4:    ff e1 2f f2 	call -444 <vfs_read : 10400c >			  ## f1x_parsing.c:101:14
  1041c8:    11 ea 61 90 	r1 = 36961 			  ## f1x_parsing.c:101:14
  1041cc:    10 98       	cmp r0, 2			  ## f1x_parsing.c:101:9
  1041ce:    26 11       	ifs (nzcv != 0) goto 76 <f1a_decode_index+0x1FA : 10421c >			  ## f1x_parsing.c:101:9
  1041d0:    00 e9 4d 04 	r13 = b[sp+ 17] 			  ## f1x_parsing.c:102:29
  1041d4:    00 e9 05 04 	r5 = b[sp+ 16] 			  ## f1x_parsing.c:102:17
  1041d8:    00 ed fe 10 	r14 = sp + 16 			  ## f1x_parsing.c:102:17
  1041dc:    20 c6       	r0 = r4 			  ## f1x_parsing.c:107:14
  1041de:    b1 c6       	r1 = r14 			  ## f1x_parsing.c:107:14
  1041e0:    0a 80       	r2 = 1 			  ## f1x_parsing.c:107:14
  1041e2:    ff e1 3f f1 	call -474 <vfs_read : 10400c >			  ## f1x_parsing.c:107:14
  1041e6:    11 ea 62 90 	r1 = 36962 			  ## f1x_parsing.c:107:14
  1041ea:    08 98       	cmp r0, 1			  ## f1x_parsing.c:107:9
  1041ec:    17 11       	ifs (nzcv != 0) goto 46 <f1a_decode_index+0x1FA : 10421c >			  ## f1x_parsing.c:107:9
  1041ee:    41 f6 d5 08 	r5 <= insert(r13, p:8, l:8) 			  ## f1x_parsing.c:102:26
  1041f2:    11 ea 63 90 	r1 = 36963 
  1041f6:    12 10       	ifs (nzcv == 0) goto 36 <f1a_decode_index+0x1FA : 10421c >
  1041f8:    00 e9 04 04 	r4 = b[sp+ 16] 			  ## f1x_parsing.c:109:20
  1041fc:    f4 20       	if (r4 == 0) goto 30 <f1a_decode_index+0x1FA : 10421c >
  1041fe:    11 ea 65 90 	r1 = 36965 
  104202:    24 98       	cmp r4, 4			  ## f1x_parsing.c:113:13
  104204:    0b 18       	if (nzcv > 0) goto 22 <f1a_decode_index+0x1FA : 10421c >			  ## f1x_parsing.c:113:13
  104206:    e8 d3       	r0 = r5 + -1 			  ## f1x_parsing.c:116:15
  104208:    11 ea 64 90 	r1 = 36964 
  10420c:    04 ce       	cmp r0, r4			  ## f1x_parsing.c:117:33
  10420e:    06 13       	if (nzcv < 0) goto 12 <f1a_decode_index+0x1FA : 10421c >			  ## f1x_parsing.c:117:33
  104210:    40 fc 02 04 	r2 = r0 / r4 			  ## f1x_parsing.c:117:49
  104214:    42 60       	[sp+ 4] = r2 			  ## f1x_parsing.c:117:49
  104216:    22 06       	r2 *= r4 			  ## f1x_parsing.c:117:49
  104218:    80 d6       	r0 = r0 - r2 			  ## f1x_parsing.c:117:49
  10421a:    11 10       	ifs (nzcv == 0) goto 34 <f1a_decode_index+0x21C : 10423e >
  10421c:    90 29       	r0 = [addr(280)]  <.GCPI22_19 : 104334 >			  ## f1x_parsing.c:160:9
  10421e:    df e1 df 6d 	call -266822 <xprintf : c2fdc >			  ## f1x_parsing.c:160:9
  104222:    50 29       	r0 = [addr(276)]  <.GCPI22_20 : 104338 >			  ## f1a_api.c:164:13
  104224:    df e1 af 6d 	call -266828 <xprintf : c2fdc >			  ## f1a_api.c:164:13
  104228:    10 ea 66 90 	r0 = 36966 			  ## f1a_api.c:164:13
  10422c:    8f 0f       	goto -226 <f1a_decode_index+0x12A : 10414c >			  ## f1a_api.c:164:13
  10422e:    1d 83       	r5 = 99 
  104230:    71 0f       	goto -286 <f1a_decode_index+0xF2 : 104114 >
  104232:    90 28       	r0 = [addr(264)]  <.GCPI22_21 : 10433c >			  ## f1a_api.c:173:9
  104234:    df e1 2f 6d 	call -266844 <xprintf : c2fdc >			  ## f1a_api.c:173:9
  104238:    10 ea 03 90 	r0 = 36867 			  ## f1a_api.c:173:9
  10423c:    87 0f       	goto -242 <f1a_decode_index+0x12A : 10414c >			  ## f1a_api.c:173:9
  10423e:    06 60       	[sp] = r6 
  104240:    05 80       	r5 = 0 
  104242:    23 08       	goto 70 <f1a_decode_index+0x268 : 10428a >
  104244:    40 40       	r0 = [sp+ 4] 			  ## f1x_parsing.c:129:13
  104246:    28 ce       	cmp r5, r0			  ## f1x_parsing.c:129:13
  104248:    1b 12       	if (nzcv >= 0) goto 54 <f1a_decode_index+0x25E : 104280 >			  ## f1x_parsing.c:129:13
  10424a:    c0 40       	r0 = [sp+ 12] 			  ## f1x_parsing.c:130:13
  10424c:    b1 c6       	r1 = r14 			  ## f1x_parsing.c:130:13
  10424e:    26 c6       	r6 = r4 			  ## f1x_parsing.c:130:13
  104250:    32 c6       	r2 = r6 			  ## f1x_parsing.c:130:13
  104252:    ff e1 bf ed 	call -586 <vfs_read : 10400c >			  ## f1x_parsing.c:130:13
  104256:    28 a2       	r0 = r5 << 2 			  ## f1x_parsing.c:131:13
  104258:    90 cb       	r0 += r10 			  ## f1x_parsing.c:131:13
  10425a:    01 80       	r1 = 0 			  ## f1x_parsing.c:131:13
  10425c:    64 e8 01 04 	[++ r0 = 16] = r1 			  ## f1x_parsing.c:131:21
  104260:    32 c6       	r2 = r6 			  ## f1x_parsing.c:133:25
  104262:    b3 c6       	r3 = r14 			  ## f1x_parsing.c:133:25
  104264:    55 ea 00 00 	r13 = 0 			  ## f1x_parsing.c:133:25
  104268:    09 08       	goto 18 <f1a_decode_index+0x25A : 10427c >			  ## f1x_parsing.c:133:25
  10426a:    08 e8 36 40 	r6 = b[r3 ++= 1] 			  ## f1x_parsing.c:133:28
  10426e:    0e cf       	r6 <<= r1 			  ## f1x_parsing.c:133:37
  104270:    00 f0 dd 06 	r13 = r13 | r6 			  ## f1x_parsing.c:133:25
  104274:    60 e8 0d 00 	[r0 + 0] = r13 			  ## f1x_parsing.c:133:25
  104278:    d2 d3       	r2 = r2 + -1 			  ## f1x_parsing.c:132:13
  10427a:    41 88       	r1 += 8 			  ## f1x_parsing.c:132:13
  10427c:    6a 27       	if (r2 != 0) goto -20 <f1a_decode_index+0x248 : 10426a >
  10427e:    04 08       	goto 8 <f1a_decode_index+0x266 : 104288 >
  104280:    28 a2       	r0 = r5 << 2 			  ## f1x_parsing.c:136:13
  104282:    90 cb       	r0 += r10 			  ## f1x_parsing.c:136:13
  104284:    f9 87       	r1 = -1 			  ## f1x_parsing.c:136:21
  104286:    01 69       	[r0 + 16] = r1 			  ## f1x_parsing.c:136:21
  104288:    6d d0       	r5 = r5 + 1 			  ## f1x_parsing.c:128:31
  10428a:    55 98       	cmp r5, 10			  ## f1x_parsing.c:128:5
  10428c:    db 11       	ifs (nzcv != 0) goto -74 <f1a_decode_index+0x222 : 104244 >			  ## f1x_parsing.c:128:5
  10428e:    10 ea ff ff 	r0 = 65535 			  ## f1x_parsing.c:163:18
  104292:    50 e8 a0 00 	h[r10 + 0] = r0 			  ## f1x_parsing.c:163:18
  104296:    80 ef 90 00 	cmp r9, 0			  ## f1x_parsing.c:164:9
  10429a:    13 10       	ifs (nzcv == 0) goto 38 <f1a_decode_index+0x2A0 : 1042c2 >			  ## f1x_parsing.c:164:9
  10429c:    00 ed a1 14 	r1 = r10 + 20 			  ## f1x_parsing.c:165:18
  1042a0:    00 80       	r0 = 0 			  ## f1x_parsing.c:165:18
  1042a2:    02 80       	r2 = 0 			  ## f1x_parsing.c:165:18
  1042a4:    09 08       	goto 18 <f1a_decode_index+0x296 : 1042b8 >			  ## f1x_parsing.c:165:18
  1042a6:    cb 4f       	r3 = [r1 + -4] 			  ## f1x_parsing.c:166:26
  1042a8:    59 ce       	cmp r3, r9			  ## f1x_parsing.c:166:42
  1042aa:    03 18       	if (nzcv > 0) goto 6 <f1a_decode_index+0x290 : 1042b2 >			  ## f1x_parsing.c:166:42
  1042ac:    0b 48       	r3 = [r1 + 0] 			  ## f1x_parsing.c:166:53
  1042ae:    59 ce       	cmp r3, r9			  ## f1x_parsing.c:166:17
  1042b0:    06 18       	if (nzcv > 0) goto 12 <f1a_decode_index+0x29C : 1042be >			  ## f1x_parsing.c:166:17
  1042b2:    52 d0       	r2 = r2 + 1 
  1042b4:    09 d1       	r1 = r1 + 4 			  ## f1x_parsing.c:165:18
  1042b6:    40 d0       	r0 = r0 + 1 			  ## f1x_parsing.c:165:18
  1042b8:    3a 98       	cmp r2, 7			  ## f1x_parsing.c:165:9
  1042ba:    f5 19       	if (nzcv <= 0) goto -22 <f1a_decode_index+0x284 : 1042a6 >			  ## f1x_parsing.c:165:9
  1042bc:    02 08       	goto 4 <f1a_decode_index+0x2A0 : 1042c2 >			  ## f1x_parsing.c:165:9
  1042be:    50 e8 a0 00 	h[r10 + 0] = r0 			  ## f1x_parsing.c:167:30
  1042c2:    00 40       	r0 = [sp] 			  ## f1x_parsing.c:173:21
  1042c4:    00 a3       	r0 = r0 << 3 			  ## f1x_parsing.c:173:21
  1042c6:    81 2d       	r1 = [addr(88)]  <.GCPI22_14 : 104320 >			  ## f1x_parsing.c:173:21
  1042c8:    0a d4       	r2 = r1 + r0 			  ## f1x_parsing.c:173:21
  1042ca:    ab 10       	ifs (nzcv == 0) goto -170 <f1a_decode_index+0x200 : 104222 >			  ## f1x_parsing.c:173:21
  1042cc:    80 c6       	r0 = r8 			  ## f1a_api.c:167:9
  1042ce:    11 ea 91 00 	r1 = 145 			  ## f1a_api.c:167:9
  1042d2:    fe e1 2f 1a 	call -15548 <f1a_dec_confing : 10061a >			  ## f1a_api.c:167:9
  1042d6:    80 c6       	r0 = r8 			  ## f1a_api.c:168:13
  1042d8:    fe e1 6f 19 	call -15572 <f1a_format_check : 100608 >			  ## f1a_api.c:168:13
  1042dc:    20 20       	if (r0 == 0) goto 4 <f1a_decode_index+0x2C0 : 1042e2 >			  ## f1a_api.c:168:13
  1042de:    40 2c       	r0 = [addr(68)]  <.GCPI22_15 : 104324 >			  ## f1a_api.c:169:13
  1042e0:    42 0f       	goto -380 <f1a_decode_index+0x144 : 104166 >			  ## f1a_api.c:169:13
  1042e2:    c5 83       	r5 = 120 
  1042e4:    17 0f       	goto -466 <f1a_decode_index+0xF2 : 104114 >
  1042e6:    00 00       	nop


.GCPI22_0:
  1042e8:    65 a9 11 00     < 1157477 : 0x11A965 >

.GCPI22_1:
  1042ec:    50 1f 00 00     < 8016 : 0x1F50 >

.GCPI22_2:
  1042f0:    00 1d 10 00     < 1056000 : 0x101D00 >

.GCPI22_3:
  1042f4:    ba 5f 11 00     < 1138618 : 0x115FBA >

.GCPI22_4:
  1042f8:    60 1c 00 00     < 7264 : 0x1C60 >

.GCPI22_5:
  1042fc:    ac a9 11 00     < 1157548 : 0x11A9AC >

.GCPI22_6:
  104300:    f8 5f 11 00     < 1138680 : 0x115FF8 >

.GCPI22_7:
  104304:    10 60 11 00     < 1138704 : 0x116010 >

.GCPI22_8:
  104308:    15 60 11 00     < 1138709 : 0x116015 >

.GCPI22_9:
  10430c:    1a 60 11 00     < 1138714 : 0x11601A >

.GCPI22_10:
  104310:    cc a9 11 00     < 1157580 : 0x11A9CC >

.GCPI22_11:
  104314:    1f 60 11 00     < 1138719 : 0x11601F >

.GCPI22_12:
  104318:    b0 4a 00 00     < 19120 : 0x4AB0 >

.GCPI22_13:
  10431c:    00 00 00 00     < 0 : 0x0 >

.GCPI22_14:
  104320:    24 60 11 00     < 1138724 : 0x116024 >

.GCPI22_15:
  104324:    0a aa 11 00     < 1157642 : 0x11AA0A >

.GCPI22_16:
  104328:    4c aa 11 00     < 1157708 : 0x11AA4C >

.GCPI22_17:
  10432c:    a0 0a 00 00     < 2720 : 0xAA0 >

.GCPI22_18:
  104330:    c0 ac 11 00     < 1158336 : 0x11ACC0 >

.GCPI22_19:
  104334:    6c aa 11 00     < 1157740 : 0x11AA6C >

.GCPI22_20:
  104338:    ee a9 11 00     < 1157614 : 0x11A9EE >

.GCPI22_21:
  10433c:    2c aa 11 00     < 1157676 : 0x11AA2C >

.GCPI22_22:
  104340:    85 a9 11 00     < 1157509 : 0x11A985 >

f1a_decode_api_1:
  104344:    1f c2       	[--sp] = {rets} 			  ## f1a_api.c:202:0
  104346:    fc cd       	sp += -4 			  ## f1a_api.c:202:0
  104348:    13 c6       	r3 = r2 			  ## f1a_api.c:202:0
  10434a:    0a c6       	r2 = r1 			  ## f1a_api.c:202:0
  10434c:    01 29       	r1 = [addr(16)]  <.GCPI23_0 : 10435c >			  ## f1a_api.c:203:12
  10434e:    01 60       	[sp] = r1 			  ## f1a_api.c:203:12
  104350:    01 80       	r1 = 0 			  ## f1a_api.c:203:12
  104352:    ff e1 6f e6 	call -820 <f1a_decode_index : 104022 >			  ## f1a_api.c:203:12
  104356:    04 cd       	sp += 4 
  104358:    1f c0       	{pc} = [sp++] 
  10435a:    00 00       	nop


.GCPI23_0:
  10435c:    2c 39 00 00     < 14636 : 0x392C >

f1a_decode_api_2:
  104360:    1f c2       	[--sp] = {rets} 			  ## f1a_api.c:207:0
  104362:    fc cd       	sp += -4 			  ## f1a_api.c:207:0
  104364:    13 c6       	r3 = r2 			  ## f1a_api.c:207:0
  104366:    0a c6       	r2 = r1 			  ## f1a_api.c:207:0
  104368:    01 29       	r1 = [addr(16)]  <.GCPI24_0 : 104378 >			  ## f1a_api.c:209:12
  10436a:    01 60       	[sp] = r1 			  ## f1a_api.c:209:12
  10436c:    09 80       	r1 = 1 			  ## f1a_api.c:209:12
  10436e:    ff e1 8f e5 	call -848 <f1a_decode_index : 104022 >			  ## f1a_api.c:209:12
  104372:    04 cd       	sp += 4 
  104374:    1f c0       	{pc} = [sp++] 
  104376:    00 00       	nop


.GCPI24_0:
  104378:    20 4b 00 00     < 19232 : 0x4B20 >

f1a_1_buff_api:
  10437c:    c1 28       	r1 = [addr(12)]  <.GCPI25_0 : 104388 >			  ## f1a_api.c:222:0
  10437e:    01 68       	[r0 + 0] = r1 			  ## f1a_api.c:223:22
  104380:    c1 28       	r1 = [addr(12)]  <.GCPI25_1 : 10438c >			  ## f1a_api.c:224:22
  104382:    41 68       	[r0 + 4] = r1 			  ## f1a_api.c:224:22
  104384:    00 80       	r0 = 0 			  ## f1a_api.c:225:5
  104386:    20 00       	rts			  ## f1a_api.c:225:5


.GCPI25_0:
  104388:    2c 39 00 00     < 14636 : 0x392C >

.GCPI25_1:
  10438c:    20 4b 00 00     < 19232 : 0x4B20 >

f1a_2_buff_api:
  104390:    c1 28       	r1 = [addr(12)]  <.GCPI26_0 : 10439c >			  ## f1a_api.c:229:0
  104392:    01 68       	[r0 + 0] = r1 			  ## f1a_api.c:230:22
  104394:    c1 28       	r1 = [addr(12)]  <.GCPI26_1 : 1043a0 >			  ## f1a_api.c:231:22
  104396:    41 68       	[r0 + 4] = r1 			  ## f1a_api.c:231:22
  104398:    00 80       	r0 = 0 			  ## f1a_api.c:232:5
  10439a:    20 00       	rts			  ## f1a_api.c:232:5


.GCPI26_0:
  10439c:    20 4b 00 00     < 19232 : 0x4B20 >

.GCPI26_1:
  1043a0:    a4 5c 00 00     < 23716 : 0x5CA4 >

set_play_file:
  1043a4:    16 c2       	[--sp] = {rets, r6-r4} 			  ## f1x_parsing.c:32:0
  1043a6:    03 50       	r3 = h[r0 + 0] 			  ## f1x_parsing.c:34:29
  1043a8:    14 ea ff ff 	r4 = 65535 			  ## f1x_parsing.c:34:29
  1043ac:    1c ce       	cmp r3, r4			  ## f1x_parsing.c:34:9
  1043ae:    11 10       	ifs (nzcv == 0) goto 34 <set_play_file+0x2E : 1043d2 >			  ## f1x_parsing.c:34:9
  1043b0:    c5 d0       	r5 = r0 + 3 			  ## f1x_parsing.c:35:28
  1043b2:    00 e7 56 03 	r6 = b[r5 + r3] 			  ## f1x_parsing.c:35:21
  1043b6:    04 5c       	r4 = b[r0 + 2] 			  ## f1x_parsing.c:35:21
  1043b8:    80 ef 60 ff 	cmp r6, 255			  ## f1x_parsing.c:35:13
  1043bc:    16 03       	ifs (nzcv != 0) {			  ## f1x_parsing.c:36:23
  1043be:    64 d0       		r4 = r4 + 1 			  ## f1x_parsing.c:36:23
  1043c0:    04 7c       		b[r0 + 2] = r4 			  ## f1x_parsing.c:36:23
  1043c2:    00 e7 55 03 		r5 = b[r5 + r3] 
                               	} else {			  ## f1x_parsing.c:36:23
  1043c6:    15 ea ff 00 		r5 = 255 
                               	}			  ## f1x_parsing.c:36:23
  1043ca:    24 c9       	r4 = r4.b 			  ## f1x_parsing.c:41:71
  1043cc:    2c ce       	cmp r5, r4			  ## f1x_parsing.c:41:9
  1043ce:    1c c6       	r4 = r3 			  ## f1x_parsing.c:41:9
  1043d0:    0c 18       	if (nzcv > 0) goto 24 <set_play_file+0x46 : 1043ea >			  ## f1x_parsing.c:41:9
  1043d2:    63 d0       	r3 = r4 + 1 			  ## f1x_parsing.c:43:25
  1043d4:    5d c9       	r5 = r3.l 			  ## f1x_parsing.c:43:25
  1043d6:    55 98       	cmp r5, 10			  ## f1x_parsing.c:46:17
  1043d8:    1c 12       	if (nzcv >= 0) goto 56 <set_play_file+0x6E : 104412 >			  ## f1x_parsing.c:46:17
  1043da:    44 d5       	r4 = r0 + r5 
  1043dc:    24 5e       	r4 = b[r4 + 3] 			  ## f1x_parsing.c:51:22
  1043de:    04 98       	cmp r4, 0			  ## f1x_parsing.c:51:17
  1043e0:    1c c6       	r4 = r3 			  ## f1x_parsing.c:43:25
  1043e2:    f7 10       	ifs (nzcv == 0) goto -18 <set_play_file+0x2E : 1043d2 >			  ## f1x_parsing.c:43:25
  1043e4:    03 70       	h[r0 + 0] = r3 			  ## f1x_parsing.c:43:25
  1043e6:    04 80       	r4 = 0 			  ## f1x_parsing.c:52:28
  1043e8:    04 7c       	b[r0 + 2] = r4 			  ## f1x_parsing.c:52:28
  1043ea:    00 ed 04 10 	r4 = r0 + 16 			  ## f1x_parsing.c:57:24
  1043ee:    58 c9       	r0 = r3.l 			  ## f1x_parsing.c:57:17
  1043f0:    03 a2       	r3 = r0 << 2 			  ## f1x_parsing.c:57:17
  1043f2:    20 e7 43 03 	r3 = [r4 + r3] 			  ## f1x_parsing.c:57:17
  1043f6:    0b 68       	[r1 + 0] = r3 			  ## f1x_parsing.c:57:15
  1043f8:    41 d0       	r1 = r0 + 1 			  ## f1x_parsing.c:59:23
  1043fa:    00 80       	r0 = 0 
  1043fc:    fb 87       	r3 = -1 
  1043fe:    49 98       	cmp r1, 9			  ## f1x_parsing.c:59:9
  104400:    0d 18       	if (nzcv > 0) goto 26 <set_play_file+0x78 : 10441c >			  ## f1x_parsing.c:59:9
  104402:    09 a2       	r1 = r1 << 2 			  ## f1x_parsing.c:62:14
  104404:    20 e7 43 01 	r3 = [r4 + r1] 			  ## f1x_parsing.c:62:14
  104408:    59 d0       	r1 = r3 + 1 			  ## f1x_parsing.c:62:45
  10440a:    11 98       	cmp r1, 2			  ## f1x_parsing.c:62:45
  10440c:    20 03       	if (nzcv >= 0) {			  ## f1x_parsing.c:63:53
  10440e:    db d3       		r3 = r3 + -1 
                               	}			  ## f1x_parsing.c:63:53
  104410:    05 08       	goto 10 <set_play_file+0x78 : 10441c >			  ## f1x_parsing.c:63:53
  104412:    63 d0       	r3 = r4 + 1 			  ## f1x_parsing.c:43:25
  104414:    03 70       	h[r0 + 0] = r3 			  ## f1x_parsing.c:43:25
  104416:    fb 87       	r3 = -1 			  ## f1x_parsing.c:43:25
  104418:    0b 68       	[r1 + 0] = r3 			  ## f1x_parsing.c:47:27
  10441a:    f8 87       	r0 = -1 			  ## f1x_parsing.c:47:27
  10441c:    13 68       	[r2 + 0] = r3 
  10441e:    16 c0       	{pc, r6-r4} = [sp++] 


midi_open:
  104420:    17 c2       	[--sp] = {rets, r7-r4} 			  ## midi_dec.c:604:0
  104422:    15 c6       	r5 = r2 			  ## midi_dec.c:604:0
  104424:    0e c6       	r6 = r1 			  ## midi_dec.c:604:0
  104426:    04 c6       	r4 = r0 			  ## midi_dec.c:604:0
  104428:    07 80       	r7 = 0 			  ## midi_dec.c:604:0
  10442a:    01 80       	r1 = 0 			  ## midi_dec.c:607:2
  10442c:    12 ea ec 07 	r2 = 2028 			  ## midi_dec.c:607:2
  104430:    df e1 4f 59 	call -267480 <memset : c2f5c >			  ## midi_dec.c:607:2
  104434:    02 ed 40 c8 	r0 = r4 + 712 			  ## midi_dec.c:608:28
  104438:    31 c6       	r1 = r6 			  ## midi_dec.c:608:2
  10443a:    62 80       	r2 = 12 			  ## midi_dec.c:608:2
  10443c:    df e1 8f 58 	call -267504 <memcpy : c2f50 >			  ## midi_dec.c:608:2
  104440:    11 80       	r1 = 2 			  ## midi_dec.c:612:20
  104442:    05 ed 40 b8 	r0 = r4 + 1464 			  ## midi_dec.c:612:20
  104446:    41 68       	[r0 + 4] = r1 			  ## midi_dec.c:612:20
  104448:    12 ea 00 04 	r2 = 1024 			  ## midi_dec.c:613:28
  10444c:    03 ed 41 30 	r1 = r4 + 816 			  ## midi_dec.c:613:28
  104450:    0a 70       	h[r1 + 0] = r2 			  ## midi_dec.c:613:28
  104452:    07 ed 42 9a 	r2 = r4 + 1946 
  104456:    13 ea 00 80 	r3 = 32768 
  10445a:    50 e7 23 07 	h[r2 + r7] = r3 			  ## midi_dec.c:616:31
  10445e:    bf d0       	r7 = r7 + 2 			  ## midi_dec.c:614:20
  104460:    07 99       	cmp r7, 32			  ## midi_dec.c:614:2
  104462:    fb 11       	ifs (nzcv != 0) goto -10 <midi_open+0x3A : 10445a >			  ## midi_dec.c:614:2
  104464:    25 ea 02 00 	r2 = 536870912 			  ## midi_dec.c:618:30
  104468:    07 ed 43 c0 	r3 = r4 + 1984 			  ## midi_dec.c:618:30
  10446c:    1a 68       	[r3 + 0] = r2 			  ## midi_dec.c:618:30
  10446e:    2a ea 02 c0 	r2 = 393216 			  ## midi_dec.c:620:23
  104472:    8a 6c       	[r1 + -56] = r2 			  ## midi_dec.c:620:23
  104474:    85 20       	if (r5 == 0) goto 16 <midi_open+0x66 : 104486 >			  ## midi_dec.c:620:23
  104476:    09 80       	r1 = 1 			  ## midi_dec.c:624:24
  104478:    01 78       	b[r0 + 0] = r1 			  ## midi_dec.c:624:24
  10447a:    05 ed 40 b0 	r0 = r4 + 1456 			  ## midi_dec.c:625:24
  10447e:    29 c6       	r1 = r5 			  ## midi_dec.c:625:3
  104480:    42 80       	r2 = 8 			  ## midi_dec.c:625:3
  104482:    df e1 5f 56 	call -267574 <memcpy : c2f50 >			  ## midi_dec.c:625:3
  104486:    07 ed 40 ec 	r0 = r4 + 2028 			  ## midi_dec.c:627:26
  10448a:    04 ed 41 ec 	r1 = r4 + 1260 			  ## midi_dec.c:627:26
  10448e:    08 68       	[r1 + 0] = r0 			  ## midi_dec.c:628:28
  104490:    01 80       	r1 = 0 			  ## midi_dec.c:629:2
  104492:    12 ea 00 07 	r2 = 1792 			  ## midi_dec.c:629:2
  104496:    df e1 1f 56 	call -267582 <memset : c2f5c >			  ## midi_dec.c:629:2
  10449a:    00 80       	r0 = 0 			  ## midi_dec.c:631:2
  10449c:    17 c0       	{pc, r7-r4} = [sp++] 			  ## midi_dec.c:631:2


midi_inputdata:
  10449e:    19 c2       	[--sp] = {rets, r9-r4} 			  ## midi_dec.c:635:0
  1044a0:    fc cd       	sp += -4 			  ## midi_dec.c:635:0
  1044a2:    0a c6       	r2 = r1 			  ## midi_dec.c:635:0
  1044a4:    05 c6       	r5 = r0 			  ## midi_dec.c:635:0
  1044a6:    02 ed 57 d8 	r7 = r5 + 728 			  ## midi_dec.c:635:0
  1044aa:    7e 4e       	r6 = [r7 + -28] 			  ## midi_dec.c:638:11
  1044ac:    32 ce       	cmp r6, r2			  ## midi_dec.c:638:6
  1044ae:    18 12       	if (nzcv >= 0) goto 48 <midi_inputdata+0x42 : 1044e0 >			  ## midi_dec.c:638:6
  1044b0:    02 60       	[sp] = r2 
  1044b2:    96 22       	if (r6 == 0) goto 82 <midi_inputdata+0x68 : 104506 >
  1044b4:    00 e5 71 fa 	r1, r0 = d[r7 + -24] 			  ## midi_dec.c:649:43
  1044b8:    0a d4       	r2 = r1 + r0 			  ## midi_dec.c:649:30
  1044ba:    13 5e       	r3 = b[r2 + 3] 			  ## midi_dec.c:649:11
  1044bc:    1b b8       	r3 = r3 << 24 			  ## midi_dec.c:649:55
  1044be:    14 5c       	r4 = b[r2 + 2] 			  ## midi_dec.c:649:65
  1044c0:    24 b0       	r4 = r4 << 16 			  ## midi_dec.c:649:109
  1044c2:    23 da       	r3 |= r4 			  ## midi_dec.c:649:62
  1044c4:    12 5a       	r2 = b[r2 + 1] 			  ## midi_dec.c:649:119
  1044c6:    12 a8       	r2 = r2 << 8 			  ## midi_dec.c:649:163
  1044c8:    1a da       	r2 |= r3 			  ## midi_dec.c:649:116
  1044ca:    00 e7 10 00 	r0 = b[r1 + r0] 			  ## midi_dec.c:649:171
  1044ce:    10 da       	r0 |= r2 			  ## midi_dec.c:649:169
  1044d0:    31 a3       	r1 = r6 << 3 			  ## midi_dec.c:650:36
  1044d2:    0a 80       	r2 = 1 			  ## midi_dec.c:649:158
  1044d4:    00 f7 21 01 	r1 = r2 << r1 			  ## midi_dec.c:650:20
  1044d8:    c9 d3       	r1 = r1 + -1 			  ## midi_dec.c:650:42
  1044da:    80 f0 08 01 	r8 = r0 & r1 			  ## midi_dec.c:650:14
  1044de:    15 08       	goto 42 <midi_inputdata+0x6C : 10450a >
  1044e0:    00 e5 71 fa 	r1, r0 = d[r7 + -24] 			  ## midi_dec.c:640:42
  1044e4:    00 e7 15 00 	r5 = b[r1 + r0] 			  ## midi_dec.c:640:170
  1044e8:    09 d4       	r1 = r1 + r0 			  ## midi_dec.c:640:29
  1044ea:    0b 5a       	r3 = b[r1 + 1] 			  ## midi_dec.c:640:118
  1044ec:    0c 5c       	r4 = b[r1 + 2] 			  ## midi_dec.c:640:64
  1044ee:    09 5e       	r1 = b[r1 + 3] 			  ## midi_dec.c:640:10
  1044f0:    80 d4       	r0 = r0 + r2 			  ## midi_dec.c:641:15
  1044f2:    b8 6e       	[r7 + -24] = r0 			  ## midi_dec.c:641:15
  1044f4:    b0 d6       	r0 = r6 - r2 			  ## midi_dec.c:642:29
  1044f6:    78 6e       	[r7 + -28] = r0 			  ## midi_dec.c:642:15
  1044f8:    08 b8       	r0 = r1 << 24 			  ## midi_dec.c:640:54
  1044fa:    21 b0       	r1 = r4 << 16 			  ## midi_dec.c:640:108
  1044fc:    08 da       	r0 |= r1 			  ## midi_dec.c:640:61
  1044fe:    19 a8       	r1 = r3 << 8 			  ## midi_dec.c:640:162
  104500:    08 da       	r0 |= r1 			  ## midi_dec.c:640:115
  104502:    28 da       	r0 |= r5 			  ## midi_dec.c:640:168
  104504:    34 08       	goto 104 <midi_inputdata+0xD0 : 10456e >
  104506:    50 ea 00 00 	r8 = 0 
  10450a:    fd 6e       	[r7 + -20] = r5 			  ## midi_dec.c:654:33
  10450c:    03 ed 54 38 	r4 = r5 + 824 			  ## midi_dec.c:654:33
  104510:    21 48       	r1 = [r4 + 0] 			  ## midi_dec.c:655:76
  104512:    00 e5 79 fc 	r9, r0 = d[r7 + -16] 			  ## midi_dec.c:655:57
  104516:    2a c6       	r2 = r5 			  ## midi_dec.c:655:11
  104518:    13 ea 00 02 	r3 = 512 			  ## midi_dec.c:655:11
  10451c:    e9 01       	call r9			  ## midi_dec.c:655:11
  10451e:    78 6e       	[r7 + -28] = r0 			  ## midi_dec.c:656:15
  104520:    01 40       	r1 = [sp] 			  ## midi_dec.c:653:16
  104522:    89 d7       	r1 = r1 - r6 			  ## midi_dec.c:653:16
  104524:    28 20       	if (r0 != 0) goto 4 <midi_inputdata+0x8C : 10452a >
  104526:    02 82       	r2 = 64 			  ## midi_dec.c:659:21
  104528:    3a 78       	b[r7 + 0] = r2 			  ## midi_dec.c:659:21
  10452a:    22 48       	r2 = [r4 + 0] 			  ## midi_dec.c:661:25
  10452c:    12 d4       	r2 = r2 + r0 			  ## midi_dec.c:661:25
  10452e:    22 68       	[r4 + 0] = r2 			  ## midi_dec.c:661:25
  104530:    02 80       	r2 = 0 			  ## midi_dec.c:661:25
  104532:    ba 6e       	[r7 + -24] = r2 			  ## midi_dec.c:666:15
  104534:    fa 4e       	r2 = [r7 + -20] 			  ## midi_dec.c:667:31
  104536:    00 e8 29 00 	r9 = b[r2 + 0] 			  ## midi_dec.c:667:172
  10453a:    14 5a       	r4 = b[r2 + 1] 			  ## midi_dec.c:667:120
  10453c:    13 5c       	r3 = b[r2 + 2] 			  ## midi_dec.c:667:66
  10453e:    12 5e       	r2 = b[r2 + 3] 			  ## midi_dec.c:667:12
  104540:    40 d6       	r0 = r0 - r1 			  ## midi_dec.c:670:29
  104542:    40 e5 71 f9 	d[r7 + -28] = r1, r0 			  ## midi_dec.c:669:15
  104546:    10 b8       	r0 = r2 << 24 			  ## midi_dec.c:667:56
  104548:    19 b0       	r1 = r3 << 16 			  ## midi_dec.c:667:110
  10454a:    08 da       	r0 |= r1 			  ## midi_dec.c:667:63
  10454c:    21 a8       	r1 = r4 << 8 			  ## midi_dec.c:667:164
  10454e:    08 da       	r0 |= r1 			  ## midi_dec.c:667:117
  104550:    00 f0 00 09 	r0 = r0 | r9 			  ## midi_dec.c:667:170
  104554:    31 a3       	r1 = r6 << 3 			  ## midi_dec.c:668:40
  104556:    08 cf       	r0 <<= r1 			  ## midi_dec.c:668:22
  104558:    00 f0 00 08 	r0 = r0 | r8 			  ## midi_dec.c:668:13
  10455c:    06 ed 51 40 	r1 = r5 + 1600 
  104560:    09 5a       	r1 = b[r1 + 1] 			  ## midi_dec.c:671:20
  104562:    41 20       	if (r1 == 0) goto 8 <midi_inputdata+0xCE : 10456c >
  104564:    09 80       	r1 = 1 			  ## midi_dec.c:673:32
  104566:    06 ed 52 70 	r2 = r5 + 1648 			  ## midi_dec.c:673:32
  10456a:    11 7a       	b[r2 + 1] = r1 			  ## midi_dec.c:673:32
  10456c:    02 40       	r2 = [sp] 
  10456e:    1a 98       	cmp r2, 3			  ## midi_dec.c:676:6
  104570:    06 18       	if (nzcv > 0) goto 12 <midi_inputdata+0xE0 : 10457e >			  ## midi_dec.c:676:6
  104572:    11 a3       	r1 = r2 << 3 			  ## midi_dec.c:678:23
  104574:    0a 80       	r2 = 1 			  ## midi_dec.c:678:12
  104576:    00 f7 21 01 	r1 = r2 << r1 			  ## midi_dec.c:678:12
  10457a:    c9 d3       	r1 = r1 + -1 			  ## midi_dec.c:678:29
  10457c:    88 da       	r0 &= r1 			  ## midi_dec.c:679:13
  10457e:    04 cd       	sp += 4 
  104580:    19 c0       	{pc, r9-r4} = [sp++] 


MIDI_FORMAT_CHECK:
  104582:    1a c2       	[--sp] = {rets, r10-r4} 			  ## midi_dec.c:714:0
  104584:    04 c6       	r4 = r0 			  ## midi_dec.c:714:0
  104586:    21 80       	r1 = 4 			  ## midi_dec.c:721:16
  104588:    8a 04       	call -236 <midi_inputdata : 10449e >			  ## midi_dec.c:721:16
  10458a:    51 ea 02 00 	r9 = 2 
  10458e:    51 29       	r1 = [addr(276)]  <.GCPI30_1 : 1046a4 >			  ## midi_dec.c:723:18
  104590:    01 ce       	cmp r0, r1			  ## midi_dec.c:723:6
  104592:    00 fb 21 08 	ifs (nzcv != 0) goto 260 <MIDI_FORMAT_CHECK+0x118 : 10469a >			  ## midi_dec.c:723:6
  104596:    20 c6       	r0 = r4 			  ## midi_dec.c:727:17
  104598:    21 80       	r1 = 4 			  ## midi_dec.c:727:17
  10459a:    81 04       	call -254 <midi_inputdata : 10449e >			  ## midi_dec.c:727:17
  10459c:    06 ef 00 c0 	cmp r0, 100663296			  ## midi_dec.c:728:6
  1045a0:    7c 11       	ifs (nzcv != 0) goto 248 <MIDI_FORMAT_CHECK+0x118 : 10469a >			  ## midi_dec.c:728:6
  1045a2:    15 80       	r5 = 2 
  1045a4:    20 c6       	r0 = r4 			  ## midi_dec.c:732:37
  1045a6:    11 80       	r1 = 2 			  ## midi_dec.c:732:37
  1045a8:    ff e1 9f f7 	call -270 <midi_inputdata : 10449e >			  ## midi_dec.c:732:37
  1045ac:    01 80       	r1 = 0 
  1045ae:    09 a8       	r1 = r1 << 8 			  ## midi_dec.c:705:34
  1045b0:    02 c9       	r2 = r0.b 			  ## midi_dec.c:705:48
  1045b2:    11 da       	r1 |= r2 			  ## midi_dec.c:705:40
  1045b4:    ed d3       	r5 = r5 + -1 			  ## midi_dec.c:703:16
  1045b6:    40 a8       	r0 = r0 >> 8 			  ## midi_dec.c:706:15
  1045b8:    ad 27       	if (r5 != 0) goto -12 <MIDI_FORMAT_CHECK+0x2C : 1045ae >			  ## midi_dec.c:703:2
  1045ba:    02 ed 4a f4 	r10 = r4 + 756 
  1045be:    50 e8 a1 ff 	h[r10 + -2] = r1 			  ## midi_dec.c:732:22
  1045c2:    15 80       	r5 = 2 			  ## midi_dec.c:732:22
  1045c4:    20 c6       	r0 = r4 			  ## midi_dec.c:733:37
  1045c6:    11 80       	r1 = 2 			  ## midi_dec.c:733:37
  1045c8:    ff e1 9f f6 	call -302 <midi_inputdata : 10449e >			  ## midi_dec.c:733:37
  1045cc:    01 80       	r1 = 0 
  1045ce:    09 a8       	r1 = r1 << 8 			  ## midi_dec.c:705:34
  1045d0:    02 c9       	r2 = r0.b 			  ## midi_dec.c:705:48
  1045d2:    11 da       	r1 |= r2 			  ## midi_dec.c:705:40
  1045d4:    ed d3       	r5 = r5 + -1 			  ## midi_dec.c:703:16
  1045d6:    40 a8       	r0 = r0 >> 8 			  ## midi_dec.c:706:15
  1045d8:    ad 27       	if (r5 != 0) goto -12 <MIDI_FORMAT_CHECK+0x4C : 1045ce >			  ## midi_dec.c:703:2
  1045da:    50 e8 a1 00 	h[r10 + 0] = r1 			  ## midi_dec.c:733:22
  1045de:    15 80       	r5 = 2 			  ## midi_dec.c:733:22
  1045e0:    20 c6       	r0 = r4 			  ## midi_dec.c:734:36
  1045e2:    11 80       	r1 = 2 			  ## midi_dec.c:734:36
  1045e4:    ff e1 bf f5 	call -330 <midi_inputdata : 10449e >			  ## midi_dec.c:734:36
  1045e8:    01 80       	r1 = 0 
  1045ea:    09 a8       	r1 = r1 << 8 			  ## midi_dec.c:705:34
  1045ec:    02 c9       	r2 = r0.b 			  ## midi_dec.c:705:48
  1045ee:    11 da       	r1 |= r2 			  ## midi_dec.c:705:40
  1045f0:    ed d3       	r5 = r5 + -1 			  ## midi_dec.c:703:16
  1045f2:    40 a8       	r0 = r0 >> 8 			  ## midi_dec.c:706:15
  1045f4:    ad 27       	if (r5 != 0) goto -12 <MIDI_FORMAT_CHECK+0x68 : 1045ea >			  ## midi_dec.c:703:2
  1045f6:    50 e8 a1 80 	h[r10 + 2] = r1 			  ## midi_dec.c:734:21
  1045fa:    48 c9       	r0 = r1.l 			  ## midi_dec.c:736:6
  1045fc:    f8 98       	cmp r0, 31			  ## midi_dec.c:736:6
  1045fe:    22 03       	if (nzcv >= 0) {			  ## midi_dec.c:738:25
  104600:    10 80       		r0 = 2 			  ## midi_dec.c:738:25
  104602:    06 ed 42 38 		r2 = r4 + 1592 			  ## midi_dec.c:738:25
  104606:    10 68       		[r2 + 0] = r0 
                               	}			  ## midi_dec.c:738:25
  104608:    c8 c9       	r0 = r1.l (s) 			  ## midi_dec.c:738:25
  10460a:    51 ea 02 00 	r9 = 2 			  ## midi_dec.c:738:25
  10460e:    00 98       	cmp r0, 0			  ## midi_dec.c:740:6
  104610:    44 1b       	ifs (nzcv < 0) goto 136 <MIDI_FORMAT_CHECK+0x118 : 10469a >			  ## midi_dec.c:740:6
  104612:    10 e8 a0 00 	r0 = h[r10 + 0] 			  ## midi_dec.c:747:19
  104616:    88 98       	cmp r0, 17			  ## midi_dec.c:747:6
  104618:    21 03       	if (nzcv >= 0) {			  ## midi_dec.c:749:23
  10461a:    80 80       		r0 = 16 			  ## midi_dec.c:749:23
  10461c:    50 e8 a0 00 		h[r10 + 0] = r0 
                               	}			  ## midi_dec.c:749:23
  104620:    03 ed 48 3c 	r8 = r4 + 828 			  ## midi_dec.c:749:23
  104624:    07 80       	r7 = 0 			  ## midi_dec.c:749:23
  104626:    05 80       	r5 = 0 			  ## midi_dec.c:749:23
  104628:    23 08       	goto 70 <MIDI_FORMAT_CHECK+0xEE : 104670 >			  ## midi_dec.c:749:23
  10462a:    20 c6       	r0 = r4 			  ## midi_dec.c:774:17
  10462c:    21 80       	r1 = 4 			  ## midi_dec.c:774:17
  10462e:    ff e1 6f f3 	call -404 <midi_inputdata : 10449e >			  ## midi_dec.c:774:17
  104632:    41 2f       	r1 = [addr(116)]  <.GCPI30_2 : 1046a8 >			  ## midi_dec.c:775:19
  104634:    01 ce       	cmp r0, r1			  ## midi_dec.c:775:7
  104636:    04 10       	ifs (nzcv == 0) goto 8 <MIDI_FORMAT_CHECK+0xBE : 104640 >			  ## midi_dec.c:775:7
  104638:    6d d0       	r5 = r5 + 1 			  ## midi_dec.c:777:11
  10463a:    45 99       	cmp r5, 40			  ## midi_dec.c:779:8
  10463c:    19 1d       	ifs (nzcv <= 0) goto 50 <MIDI_FORMAT_CHECK+0xEE : 104670 >			  ## midi_dec.c:779:8
  10463e:    2d 08       	goto 90 <MIDI_FORMAT_CHECK+0x118 : 10469a >			  ## midi_dec.c:779:8
  104640:    26 80       	r6 = 4 
  104642:    20 c6       	r0 = r4 			  ## midi_dec.c:786:49
  104644:    21 80       	r1 = 4 			  ## midi_dec.c:786:49
  104646:    ff e1 af f2 	call -428 <midi_inputdata : 10449e >			  ## midi_dec.c:786:49
  10464a:    01 80       	r1 = 0 
  10464c:    09 a8       	r1 = r1 << 8 			  ## midi_dec.c:705:34
  10464e:    02 c9       	r2 = r0.b 			  ## midi_dec.c:705:48
  104650:    11 da       	r1 |= r2 			  ## midi_dec.c:705:40
  104652:    f6 d3       	r6 = r6 + -1 			  ## midi_dec.c:703:16
  104654:    40 a8       	r0 = r0 >> 8 			  ## midi_dec.c:706:15
  104656:    ae 27       	if (r6 != 0) goto -12 <MIDI_FORMAT_CHECK+0xCA : 10464c >			  ## midi_dec.c:703:2
  104658:    38 a2       	r0 = r7 << 2 			  ## midi_dec.c:786:3
  10465a:    60 e7 81 00 	[r8 + r0] = r1 			  ## midi_dec.c:786:34
  10465e:    45 99       	cmp r5, 40			  ## midi_dec.c:789:7
  104660:    1c 1c       	ifs (nzcv > 0) goto 56 <MIDI_FORMAT_CHECK+0x118 : 10469a >			  ## midi_dec.c:789:7
  104662:    03 ed 40 d4 	r0 = r4 + 980 
  104666:    01 48       	r1 = [r0 + 0] 			  ## midi_dec.c:794:29
  104668:    00 f1 11 07 	r1 = r1 | setbit(r7) 			  ## midi_dec.c:794:29
  10466c:    01 68       	[r0 + 0] = r1 			  ## midi_dec.c:794:29
  10466e:    7f d0       	r7 = r7 + 1 			  ## midi_dec.c:795:9
  104670:    10 e8 a0 00 	r0 = h[r10 + 0] 			  ## midi_dec.c:752:18
  104674:    38 ce       	cmp r7, r0			  ## midi_dec.c:752:2
  104676:    d9 13       	if (nzcv < 0) goto -78 <MIDI_FORMAT_CHECK+0xA8 : 10462a >			  ## midi_dec.c:752:2
  104678:    20 e8 a0 0b 	r0 = [r10 + 44] 			  ## midi_dec.c:799:56
  10467c:    00 a2       	r0 = r0 << 2 			  ## midi_dec.c:799:29
  10467e:    01 2a       	r1 = [addr(32)]  <.GCPI30_0 : 1046a0 >			  ## midi_dec.c:799:29
  104680:    20 e7 10 00 	r0 = [r1 + r0] 			  ## midi_dec.c:799:29
  104684:    04 ed 41 e0 	r1 = r4 + 1248 			  ## midi_dec.c:799:29
  104688:    08 70       	h[r1 + 0] = r0 			  ## midi_dec.c:799:27
  10468a:    08 80       	r0 = 1 			  ## midi_dec.c:799:27
  10468c:    48 68       	[r1 + 4] = r0 			  ## midi_dec.c:800:28
  10468e:    08 74       	h[r1 + 2] = r0 			  ## midi_dec.c:801:27
  104690:    07 ed 41 98 	r1 = r4 + 1944 			  ## midi_dec.c:801:27
  104694:    08 78       	b[r1 + 0] = r0 			  ## midi_dec.c:809:29
  104696:    51 ea 00 00 	r9 = 0 			  ## midi_dec.c:809:29
  10469a:    88 c6       	r0 = r9 			  ## midi_dec.c:812:1
  10469c:    1a c0       	{pc, r10-r4} = [sp++] 			  ## midi_dec.c:812:1
  10469e:    00 00       	nop			  ## midi_dec.c:812:1


.GCPI30_0:
  1046a0:    54 99 11 00     < 1153364 : 0x119954 >

.GCPI30_1:
  1046a4:    4d 54 68 64     < 1684558925 : 0x6468544D >

.GCPI30_2:
  1046a8:    4d 54 72 6b     < 1802654797 : 0x6B72544D >

dac_sr_read:
  1046ac:    00 2a       	r0 = [addr(32)]  <.GCPI31_1 : 1046cc >			  ## audio_dac.c:159:0
  1046ae:    00 48       	r0 = [r0 + 0] 			  ## audio_dac.c:161:24
  1046b0:    40 a1       	r0 = r0 >> 1 			  ## audio_dac.c:162:5
  1046b2:    c0 d0       	r0 = r0 + 3 			  ## audio_dac.c:162:5
  1046b4:    80 f3 00 07 	r0 = r0 & 7 			  ## audio_dac.c:162:5
  1046b8:    28 98       	cmp r0, 5			  ## audio_dac.c:162:5
  1046ba:    8c 03       	if (nzcv > 0) {			  ## audio_dac.c:179:5
  1046bc:    00 80       		r0 = 0 
                               	} else {			  ## audio_dac.c:179:5
  1046be:    00 a2       		r0 = r0 << 2 			  ## audio_dac.c:162:5
  1046c0:    81 28       		r1 = [addr(8)]  <.GCPI31_0 : 1046c8 >			  ## audio_dac.c:162:5
  1046c2:    20 e7 10 00 		r0 = [r1 + r0] 
                               	}			  ## audio_dac.c:162:5
  1046c6:    20 00       	rts			  ## audio_dac.c:162:5


.GCPI31_0:
  1046c8:    70 65 11 00     < 1140080 : 0x116570 >

.GCPI31_1:
  1046cc:    00 14 09 00     < 594944 : 0x91400 >

midi_play_set_tempo:
  1046d0:    17 c2       	[--sp] = {rets, r7-r4} 			  ## midi_dec.c:126:0
  1046d2:    30 c5       	[--sp] = {macch, maccl} 			  ## midi_dec.c:126:0
  1046d4:    0a c6       	r2 = r1 			  ## midi_dec.c:129:41
  1046d6:    18 e8 23 80 	r3 = h[r2 ++= 2] 			  ## midi_dec.c:129:41
  1046da:    03 ed 04 30 	r4 = r0 + 816 			  ## midi_dec.c:129:41
  1046de:    23 70       	h[r4 + 0] = r3 			  ## midi_dec.c:129:28
  1046e0:    a4 4c       	r4 = [r4 + -56] 			  ## midi_dec.c:130:2
  1046e2:    e3 06       	macc = r4 * r3 (s) 			  ## midi_dec.c:130:2
  1046e4:    c0 f9 03 0a 	r3 = macc >>> 10 			  ## midi_dec.c:130:2
  1046e8:    06 ed 04 30 	r4 = r0 + 1584 			  ## midi_dec.c:130:2
  1046ec:    23 68       	[r4 + 0] = r3 			  ## midi_dec.c:130:2
  1046ee:    07 ed 03 9a 	r3 = r0 + 1946 
  1046f2:    04 80       	r4 = 0 
  1046f4:    15 ea ff 07 	r5 = 2047 
  1046f8:    16 ea 58 7f 	r6 = 32600 
  1046fc:    10 e7 27 04 	r7 = h[r2 + r4] 			  ## midi_dec.c:133:15
  104700:    af da       	r7 &= r5 			  ## midi_dec.c:135:49
  104702:    00 fc 77 a8 	r7 = r7 * 168 			  ## midi_dec.c:135:47
  104706:    7f aa       	r7 = r7 >> 10 			  ## midi_dec.c:135:60
  104708:    bf d5       	r7 = r7 + r6 			  ## midi_dec.c:135:39
  10470a:    0c ef 70 00 	cmp r7, 32768			  ## midi_dec.c:136:7
  10470e:    20 03       	if (nzcv >= 0) {			  ## midi_dec.c:136:7
  104710:    17 ea 00 80 		r7 = 32768 
                               	}			  ## midi_dec.c:136:7
  104714:    50 e7 37 04 	h[r3 + r4] = r7 			  ## midi_dec.c:135:31
  104718:    a4 d0       	r4 = r4 + 2 			  ## midi_dec.c:131:20
  10471a:    04 99       	cmp r4, 32			  ## midi_dec.c:131:2
  10471c:    ef 11       	ifs (nzcv != 0) goto -34 <midi_play_set_tempo+0x2C : 1046fc >			  ## midi_dec.c:131:2
  10471e:    49 4a       	r1 = [r1 + 36] 			  ## midi_dec.c:142:43
  104720:    07 ed 00 c0 	r0 = r0 + 1984 
  104724:    01 68       	[r0 + 0] = r1 			  ## midi_dec.c:142:30
  104726:    30 c4       	{macch, maccl} = [sp++] 			  ## midi_dec.c:142:30
  104728:    17 c0       	{pc, r7-r4} = [sp++] 			  ## midi_dec.c:142:30


midi_play_ctrl_on:
  10472a:    0a c9       	r2 = r1.b 			  ## midi_dec.c:1646:0
  10472c:    06 ed 01 2c 	r1 = r0 + 1580 			  ## midi_dec.c:1646:0
  104730:    ca 6f       	[r1 + -4] = r2 			  ## midi_dec.c:1649:25
  104732:    03 80       	r3 = 0 			  ## midi_dec.c:1650:26
  104734:    0b 7c       	b[r1 + 2] = r3 			  ## midi_dec.c:1650:26
  104736:    0b 7a       	b[r1 + 1] = r3 			  ## midi_dec.c:1651:23
  104738:    0a 98       	cmp r2, 1			  ## midi_dec.c:1653:55
  10473a:    09 11       	ifs (nzcv != 0) goto 18 <midi_play_ctrl_on+0x24 : 10474e >			  ## midi_dec.c:1653:55
  10473c:    07 ed 00 c0 	r0 = r0 + 1984 
  104740:    82 5a       	r2 = b[r0 + 9] 			  ## midi_dec.c:1653:72
  104742:    0a 98       	cmp r2, 1			  ## midi_dec.c:1653:6
  104744:    03 03       	ifs (nzcv == 0) {			  ## midi_dec.c:1655:24
  104746:    0a 80       		r2 = 1 			  ## midi_dec.c:1655:24
  104748:    0a 7a       		b[r1 + 1] = r2 			  ## midi_dec.c:1655:24
  10474a:    0a 7c       		b[r1 + 2] = r2 			  ## midi_dec.c:1656:27
  10474c:    c2 79       		b[r0 + -4] = r2 
                               	}			  ## midi_dec.c:1657:29
  10474e:    20 00       	rts			  ## midi_dec.c:1659:1


midi_switch_control:
  104750:    16 c2       	[--sp] = {rets, r6-r4} 			  ## midi_dec.c:199:0
  104752:    80 f3 12 01 	r2 = r1 & 1 			  ## midi_dec.c:202:6
  104756:    05 ed 03 e8 	r3 = r0 + 1512 			  ## midi_dec.c:202:6
  10475a:    9a 7f       	b[r3 + -5] = r2 			  ## midi_dec.c:202:6
  10475c:    0a c9       	r2 = r1.b 			  ## midi_dec.c:202:6
  10475e:    00 f6 24 21 	r4 = uextra(r2, p:1, l:1) 			  ## midi_dec.c:210:6
  104762:    5c 78       	b[r3 + 4] = r4 			  ## midi_dec.c:210:6
  104764:    00 f6 24 41 	r4 = uextra(r2, p:2, l:1) 			  ## midi_dec.c:218:6
  104768:    06 ed 05 40 	r5 = r0 + 1600 			  ## midi_dec.c:218:6
  10476c:    ec 79       	b[r5 + -4] = r4 			  ## midi_dec.c:218:6
  10476e:    00 f6 24 61 	r4 = uextra(r2, p:3, l:1) 			  ## midi_dec.c:226:6
  104772:    ec 7d       	b[r5 + -2] = r4 			  ## midi_dec.c:226:6
  104774:    04 80       	r4 = 0 			  ## midi_dec.c:236:32
  104776:    2c 7a       	b[r5 + 1] = r4 			  ## midi_dec.c:236:32
  104778:    00 f6 24 a1 	r4 = uextra(r2, p:5, l:1) 			  ## midi_dec.c:246:6
  10477c:    9c 7d       	b[r3 + -6] = r4 			  ## midi_dec.c:246:6
  10477e:    00 f6 24 c1 	r4 = uextra(r2, p:6, l:1) 			  ## midi_dec.c:254:6
  104782:    03 ed 06 28 	r6 = r0 + 808 			  ## midi_dec.c:254:6
  104786:    34 7a       	b[r6 + 1] = r4 			  ## midi_dec.c:254:6
  104788:    52 a7       	r2 = r2 >> 7 			  ## midi_dec.c:263:6
  10478a:    ea 7b       	b[r5 + -3] = r2 			  ## midi_dec.c:263:6
  10478c:    01 f6 12 01 	r2 = uextra(r1, p:8, l:1) 			  ## midi_dec.c:271:6
  104790:    2a 7e       	b[r5 + 3] = r2 			  ## midi_dec.c:271:6
  104792:    01 f6 12 21 	r2 = uextra(r1, p:9, l:1) 			  ## midi_dec.c:279:6
  104796:    5a 7a       	b[r3 + 5] = r2 			  ## midi_dec.c:279:6
  104798:    01 f6 12 41 	r2 = uextra(r1, p:10, l:1) 			  ## midi_dec.c:287:6
  10479c:    2a 7c       	b[r5 + 2] = r2 			  ## midi_dec.c:287:6
  10479e:    01 f6 12 61 	r2 = uextra(r1, p:11, l:1) 			  ## midi_dec.c:295:6
  1047a2:    6a 7a       	b[r5 + 5] = r2 			  ## midi_dec.c:295:6
  1047a4:    01 f6 11 a1 	r1 = uextra(r1, p:13, l:1) 			  ## midi_dec.c:303:6
  1047a8:    07 ed 00 bc 	r0 = r0 + 1980 			  ## midi_dec.c:303:6
  1047ac:    01 7a       	b[r0 + 1] = r1 			  ## midi_dec.c:303:6
  1047ae:    16 c0       	{pc, r6-r4} = [sp++] 			  ## midi_dec.c:303:6


midi_tone_init:
  1047b0:    19 c2       	[--sp] = {rets, r9-r4} 			  ## midi_dec.c:329:0
  1047b2:    0d c6       	r5 = r1 			  ## midi_dec.c:333:6
  1047b4:    18 e8 56 80 	r6 = h[r5 ++= 2] 			  ## midi_dec.c:333:6
  1047b8:    17 ea cd ab 	r7 = 43981 			  ## midi_dec.c:333:19
  1047bc:    37 ce       	cmp r6, r7			  ## midi_dec.c:333:6
  1047be:    10 03       	ifs (nzcv != 0) {			  ## midi_dec.c:333:6
  1047c0:    0d c6       		r5 = r1 
                               	}			  ## midi_dec.c:333:6
  1047c2:    02 ed 08 ec 	r8 = r0 + 748 			  ## midi_dec.c:333:6
  1047c6:    60 e8 85 fe 	[r8 + -8] = r5 			  ## midi_dec.c:333:6
  1047ca:    09 80       	r1 = 1 			  ## midi_dec.c:333:6
  1047cc:    04 80       	r4 = 0 
  1047ce:    37 ce       	cmp r6, r7			  ## midi_dec.c:333:19
  1047d0:    10 03       	ifs (nzcv != 0) {			  ## midi_dec.c:333:19
  1047d2:    01 80       		r1 = 0 
                               	}			  ## midi_dec.c:333:19
  1047d4:    07 ed 06 c4 	r6 = r0 + 1988 			  ## midi_dec.c:333:19
  1047d8:    31 68       	[r6 + 0] = r1 			  ## midi_dec.c:333:19
  1047da:    11 c9       	r1 = r2.b 			  ## midi_dec.c:344:29
  1047dc:    60 e8 81 0d 	[r8 + 52] = r1 			  ## midi_dec.c:344:27
  1047e0:    d9 c9       	r1 = r3.l (s) 			  ## midi_dec.c:344:27
  1047e2:    41 98       	cmp r1, 8			  ## midi_dec.c:346:6
  1047e4:    a0 03       	ifs (nzcv >= 0) {			  ## midi_dec.c:346:6
  1047e6:    43 80       		r3 = 8 
                               	}			  ## midi_dec.c:346:6
  1047e8:    50 e8 83 01 	h[r8 + 4] = r3 			  ## midi_dec.c:345:31
  1047ec:    29 50       	r1 = h[r5 + 0] 			  ## midi_dec.c:355:27
  1047ee:    50 e8 81 7f 	h[r8 + -4] = r1 			  ## midi_dec.c:355:25
  1047f2:    01 ed 52 02 	r2 = r5 + 258 			  ## midi_dec.c:356:45
  1047f6:    60 e8 82 00 	[r8 + 0] = r2 			  ## midi_dec.c:356:25
  1047fa:    0a a1       	r2 = r1 << 1 			  ## midi_dec.c:357:104
  1047fc:    52 d5       	r2 = r2 + r5 			  ## midi_dec.c:333:6
  1047fe:    01 ed 23 02 	r3 = r2 + 258 			  ## midi_dec.c:357:49
  104802:    09 a7       	r1 = r1 << 7 			  ## midi_dec.c:358:65
  104804:    c9 d4       	r1 = r1 + r3 			  ## midi_dec.c:358:59
  104806:    41 e5 83 fc 	d[r8 + -16] = r3, r1 			  ## midi_dec.c:357:29
  10480a:    04 ed 02 18 	r2 = r0 + 1048 			  ## midi_dec.c:357:29
  10480e:    13 6c       	[r2 + -64] = r3 			  ## midi_dec.c:359:32
  104810:    14 70       	h[r2 + 0] = r4 			  ## midi_dec.c:360:36
  104812:    53 6c       	[r2 + -60] = r3 			  ## midi_dec.c:364:35
  104814:    14 74       	h[r2 + 2] = r4 			  ## midi_dec.c:365:39
  104816:    03 ed 05 e0 	r5 = r0 + 992 			  ## midi_dec.c:362:2
  10481a:    04 ed 06 1c 	r6 = r0 + 1052 			  ## midi_dec.c:362:2
  10481e:    03 08       	goto 6 <midi_tone_init+0x76 : 104826 >			  ## midi_dec.c:362:2
  104820:    13 4c       	r3 = [r2 + -64] 
  104822:    b6 d0       	r6 = r6 + 2 			  ## midi_dec.c:362:2
  104824:    24 d1       	r4 = r4 + 4 			  ## midi_dec.c:362:2
  104826:    60 e7 53 04 	[r5 + r4] = r3 			  ## midi_dec.c:364:35
  10482a:    11 50       	r1 = h[r2 + 0] 			  ## midi_dec.c:365:41
  10482c:    31 70       	h[r6 + 0] = r1 			  ## midi_dec.c:365:39
  10482e:    a4 99       	cmp r4, 52			  ## midi_dec.c:362:2
  104830:    f7 11       	ifs (nzcv != 0) goto -18 <midi_tone_init+0x70 : 104820 >			  ## midi_dec.c:362:2
  104832:    11 ea 80 00 	r1 = 128 			  ## midi_dec.c:368:27
  104836:    04 ed 03 40 	r3 = r0 + 1088 			  ## midi_dec.c:368:27
  10483a:    19 7a       	b[r3 + 1] = r1 			  ## midi_dec.c:368:27
  10483c:    20 e8 81 00 	r1 = [r8 + 0] 			  ## midi_dec.c:369:51
  104840:    20 e8 84 fe 	r4 = [r8 + -8] 			  ## midi_dec.c:369:74
  104844:    00 ed 44 80 	r4 = r4 + 128 			  ## midi_dec.c:369:74
  104848:    25 5c       	r5 = b[r4 + 2] 			  ## midi_dec.c:369:38
  10484a:    2d a1       	r5 = r5 << 1 			  ## midi_dec.c:369:38
  10484c:    49 d5       	r1 = r1 + r5 			  ## midi_dec.c:369:38
  10484e:    09 50       	r1 = h[r1 + 0] 			  ## midi_dec.c:369:38
  104850:    99 76       	h[r3 + -22] = r1 			  ## midi_dec.c:369:36
  104852:    20 e8 81 fd 	r1 = [r8 + -12] 			  ## midi_dec.c:370:56
  104856:    23 5c       	r3 = b[r4 + 2] 			  ## midi_dec.c:370:70
  104858:    1b a7       	r3 = r3 << 7 			  ## midi_dec.c:370:105
  10485a:    c9 d4       	r1 = r1 + r3 			  ## midi_dec.c:370:43
  10485c:    51 6e       	[r2 + -28] = r1 			  ## midi_dec.c:370:32
  10485e:    04 ed 02 49 	r2 = r0 + 1097 			  ## midi_dec.c:371:2
  104862:    06 ed 03 08 	r3 = r0 + 1544 			  ## midi_dec.c:371:2
  104866:    04 80       	r4 = 0 			  ## midi_dec.c:371:2
  104868:    51 ea 64 00 	r9 = 100 			  ## midi_dec.c:371:2
  10486c:    fe 83       	r6 = 127 			  ## midi_dec.c:371:2
  10486e:    07 82       	r7 = 64 			  ## midi_dec.c:371:2
  104870:    11 ea 00 01 	r1 = 256 			  ## midi_dec.c:371:2
  104874:    15 d5       	r5 = r2 + r4 			  ## midi_dec.c:373:56
  104876:    40 e8 59 40 	b[r5 + 1] = r9 			  ## midi_dec.c:373:56
  10487a:    40 e7 26 04 	b[r2 + r4] = r6 			  ## midi_dec.c:374:57
  10487e:    6f 7a       	b[r5 + 5] = r7 			  ## midi_dec.c:375:56
  104880:    58 e8 31 80 	h[r3 ++= 2] = r1 			  ## midi_dec.c:376:33
  104884:    e4 d1       	r4 = r4 + 7 			  ## midi_dec.c:371:20
  104886:    84 9b       	cmp r4, 112			  ## midi_dec.c:371:2
  104888:    f5 11       	ifs (nzcv != 0) goto -22 <midi_tone_init+0xC4 : 104874 >			  ## midi_dec.c:371:2
  10488a:    20 e8 81 0d 	r1 = [r8 + 52] 			  ## midi_dec.c:378:56
  10488e:    09 a2       	r1 = r1 << 2 			  ## midi_dec.c:378:29
  104890:    42 29       	r2 = [addr(20)]  <.GCPI35_0 : 1048a4 >			  ## midi_dec.c:378:29
  104892:    20 e7 21 01 	r1 = [r2 + r1] 			  ## midi_dec.c:378:29
  104896:    04 ed 00 e0 	r0 = r0 + 1248 			  ## midi_dec.c:378:29
  10489a:    01 70       	h[r0 + 0] = r1 			  ## midi_dec.c:378:27
  10489c:    09 80       	r1 = 1 			  ## midi_dec.c:378:27
  10489e:    41 68       	[r0 + 4] = r1 			  ## midi_dec.c:379:28
  1048a0:    01 74       	h[r0 + 2] = r1 			  ## midi_dec.c:380:27
  1048a2:    19 c0       	{pc, r9-r4} = [sp++] 			  ## midi_dec.c:380:27


.GCPI35_0:
  1048a4:    54 99 11 00     < 1153364 : 0x119954 >

midi_save_bk_fun:
  1048a8:    15 c2       	[--sp] = {rets, r5, r4} 			  ## midi_dec.c:169:0
  1048aa:    04 c6       	r4 = r0 			  ## midi_dec.c:169:0
  1048ac:    06 ed 45 70 	r5 = r4 + 1648 			  ## midi_dec.c:169:0
  1048b0:    a8 48       	r0 = [r5 + 8] 			  ## midi_dec.c:170:23
  1048b2:    29 58       	r1 = b[r5 + 0] 			  ## midi_dec.c:170:10
  1048b4:    00 fc 11 a8 	r1 = r1 * 168 			  ## midi_dec.c:170:10
  1048b8:    40 d4       	r0 = r0 + r1 			  ## midi_dec.c:170:10
  1048ba:    03 ed 41 38 	r1 = r4 + 824 			  ## midi_dec.c:170:75
  1048be:    12 ea a0 00 	r2 = 160 			  ## midi_dec.c:170:2
  1048c2:    df e1 5f 34 	call -268662 <memcpy : c2f50 >			  ## midi_dec.c:170:2
  1048c6:    a8 48       	r0 = [r5 + 8] 			  ## midi_dec.c:171:15
  1048c8:    29 58       	r1 = b[r5 + 0] 			  ## midi_dec.c:171:41
  1048ca:    00 fc 12 a8 	r2 = r1 * 168 			  ## midi_dec.c:171:52
  1048ce:    80 d4       	r0 = r0 + r2 			  ## midi_dec.c:171:52
  1048d0:    02 ed 42 bc 	r2 = r4 + 700 			  ## midi_dec.c:171:52
  1048d4:    53 48       	r3 = [r2 + 4] 			  ## midi_dec.c:171:83
  1048d6:    64 e8 03 29 	[++ r0 = 164] = r3 			  ## midi_dec.c:171:59
  1048da:    12 48       	r2 = [r2 + 0] 			  ## midi_dec.c:172:83
  1048dc:    c2 6f       	[r0 + -4] = r2 			  ## midi_dec.c:172:59
  1048de:    28 5a       	r0 = b[r5 + 1] 			  ## midi_dec.c:176:32
  1048e0:    06 ed 42 72 	r2 = r4 + 1650 			  ## midi_dec.c:174:44
  1048e4:    12 50       	r2 = h[r2 + 0] 			  ## midi_dec.c:174:44
  1048e6:    12 a1       	r2 = r2 << 1 			  ## midi_dec.c:174:58
  1048e8:    12 c9       	r2 = r2.b 			  ## midi_dec.c:175:29
  1048ea:    10 da       	r0 |= r2 			  ## midi_dec.c:176:29
  1048ec:    28 74       	h[r5 + 2] = r0 			  ## midi_dec.c:176:29
  1048ee:    00 80       	r0 = 0 			  ## midi_dec.c:181:30
  1048f0:    28 7a       	b[r5 + 1] = r0 			  ## midi_dec.c:181:30
  1048f2:    49 d0       	r1 = r1 + 1 			  ## midi_dec.c:183:24
  1048f4:    0a c9       	r2 = r1.b 			  ## midi_dec.c:183:24
  1048f6:    3a 98       	cmp r2, 7			  ## midi_dec.c:184:6
  1048f8:    90 03       	if (nzcv <= 0) {			  ## midi_dec.c:184:6
  1048fa:    08 c6       		r0 = r1 
                               	}			  ## midi_dec.c:184:6
  1048fc:    28 78       	b[r5 + 0] = r0 			  ## midi_dec.c:183:24
  1048fe:    15 c0       	{pc, r5, r4} = [sp++] 			  ## midi_dec.c:183:24


midi_dec_confing:
  104900:    1c c2       	[--sp] = {rets, r12-r4} 			  ## midi_dec.c:384:0
  104902:    15 c6       	r5 = r2 			  ## midi_dec.c:384:0
  104904:    04 c6       	r4 = r0 			  ## midi_dec.c:384:0
  104906:    1f ed 10 60 	r0 = r1 + -160 			  ## midi_dec.c:388:6
  10490a:    68 98       	cmp r0, 13			  ## midi_dec.c:388:6
  10490c:    00 fb 38 18 	if (nzcv > 0) goto 774 <.GJTIE37_0_0_+0x2CA : 104c16 >			  ## midi_dec.c:388:6
  104910:    01 a1       	r1 = r0 << 1 
  104912:    02 ed 48 d8 	r8 = r4 + 728 
  104916:    03 ed 4c 2c 	r12 = r4 + 812 
  10491a:    06 ed 4b 34 	r11 = r4 + 1588 
  10491e:    06 ed 49 70 	r9 = r4 + 1648 
  104922:    07 ed 4a 94 	r10 = r4 + 1940 
  104926:    07 ed 46 c0 	r6 = r4 + 1984 
  10492a:    05 ed 47 ec 	r7 = r4 + 1516 
  10492e:    b9 01       	tbh [r1]


.GJTIL37_0_0_:
  104930:    0e 00     < 14 : 0xE >
  104932:    4c 00     < 76 : 0x4C >
  104934:    66 00     < 102 : 0x66 >
  104936:    6b 00     < 107 : 0x6B >
  104938:    80 00     < 128 : 0x80 >
  10493a:    a4 00     < 164 : 0xA4 >
  10493c:    a9 00     < 169 : 0xA9 >
  10493e:    ae 00     < 174 : 0xAE >
  104940:    48 01     < 328 : 0x148 >
  104942:    4f 01     < 335 : 0x14F >
  104944:    60 01     < 352 : 0x160 >
  104946:    65 01     < 357 : 0x165 >
  104948:    68 01     < 360 : 0x168 >
  10494a:    6d 01     < 365 : 0x16D >
  10494c:    00 e8 b0 43 	r0 = b[r11 + 13] 			  ## midi_dec.c:391:20
  104950:    00 98       	cmp r0, 0			  ## midi_dec.c:391:20
  104952:    00 fb 00 16 	ifs (nzcv == 0) goto 704 <.GJTIE37_0_0_+0x2CA : 104c16 >			  ## midi_dec.c:391:20
  104956:    00 e8 90 00 	r0 = b[r9 + 0] 			  ## midi_dec.c:400:17
  10495a:    80 e8 51 00 	r1 = b[r5 + 0] (s) 			  ## midi_dec.c:396:22
  10495e:    41 98       	cmp r1, 8			  ## midi_dec.c:397:8
  104960:    a0 03       	ifs (nzcv >= 0) {			  ## midi_dec.c:397:8
  104962:    41 80       		r1 = 8 
                               	}			  ## midi_dec.c:397:8
  104964:    41 d6       	r1 = r0 - r1 			  ## midi_dec.c:400:40
  104966:    00 ed 10 08 	r0 = r1 + 8 			  ## midi_dec.c:402:21
  10496a:    01 98       	cmp r1, 0			  ## midi_dec.c:401:8
  10496c:    a0 03       	ifs (nzcv >= 0) {			  ## midi_dec.c:401:8
  10496e:    08 c6       		r0 = r1 
                               	}			  ## midi_dec.c:401:8
  104970:    00 fc 00 a8 	r0 = r0 * 168 			  ## midi_dec.c:422:15
  104974:    20 e8 91 02 	r1 = [r9 + 8] 			  ## midi_dec.c:422:28
  104978:    0d d4       	r5 = r1 + r0 			  ## midi_dec.c:422:15
  10497a:    03 ed 40 38 	r0 = r4 + 824 			  ## midi_dec.c:423:25
  10497e:    29 c6       	r1 = r5 			  ## midi_dec.c:423:4
  104980:    12 ea a0 00 	r2 = 160 			  ## midi_dec.c:423:4
  104984:    df e1 4f 2e 	call -268856 <memcpy : c2f50 >			  ## midi_dec.c:423:4
  104988:    20 e8 50 28 	r0 = [r5 + 160] 			  ## midi_dec.c:424:38
  10498c:    20 e8 c1 03 	r1 = [r12 + 12] 			  ## midi_dec.c:424:26
  104990:    08 d6       	r0 = r1 - r0 			  ## midi_dec.c:424:26
  104992:    60 e8 c0 03 	[r12 + 12] = r0 			  ## midi_dec.c:424:26
  104996:    00 80       	r0 = 0 			  ## midi_dec.c:424:26
  104998:    60 e8 80 fa 	[r8 + -24] = r0 			  ## midi_dec.c:425:33
  10499c:    60 e8 80 f9 	[r8 + -28] = r0 			  ## midi_dec.c:426:33
  1049a0:    40 e8 b0 c2 	b[r11 + 11] = r0 			  ## midi_dec.c:436:30
  1049a4:    03 ed 41 d0 	r1 = r4 + 976 			  ## midi_dec.c:436:30
  1049a8:    09 48       	r1 = [r1 + 0] 			  ## midi_dec.c:437:21
  1049aa:    89 20       	if (r1 != 0) goto 16 <.GJTIE37_0_0_+0x70 : 1049bc >			  ## midi_dec.c:437:21
  1049ac:    00 80       	r0 = 0 
  1049ae:    60 e8 b0 01 	[r11 + 4] = r0 			  ## midi_dec.c:439:27
  1049b2:    10 e8 81 87 	r1 = h[r8 + 30] 			  ## midi_dec.c:440:22
  1049b6:    10 80       	r0 = 2 			  ## midi_dec.c:440:22
  1049b8:    f9 98       	cmp r1, 31			  ## midi_dec.c:440:9
  1049ba:    02 13       	if (nzcv < 0) goto 4 <.GJTIE37_0_0_+0x74 : 1049c0 >			  ## midi_dec.c:440:9
  1049bc:    60 e8 b0 01 	[r11 + 4] = r0 
  1049c0:    00 80       	r0 = 0 			  ## midi_dec.c:450:21
  1049c2:    40 e8 80 00 	b[r8 + 0] = r0 			  ## midi_dec.c:450:21
  1049c6:    27 09       	goto 590 <.GJTIE37_0_0_+0x2CA : 104c16 >			  ## midi_dec.c:450:21
  1049c8:    28 58       	r0 = b[r5 + 0] 			  ## midi_dec.c:459:33
  1049ca:    40 e8 c0 3f 	b[r12 + -4] = r0 			  ## midi_dec.c:459:24
  1049ce:    29 5a       	r1 = b[r5 + 1] 			  ## midi_dec.c:460:38
  1049d0:    40 e8 a1 41 	b[r10 + 5] = r1 			  ## midi_dec.c:460:29
  1049d4:    29 54       	r1 = h[r5 + 2] 			  ## midi_dec.c:461:38
  1049d6:    39 74       	h[r7 + 2] = r1 			  ## midi_dec.c:461:29
  1049d8:    20 e8 81 05 	r1 = [r8 + 20] 			  ## midi_dec.c:464:53
  1049dc:    20 e8 82 03 	r2 = [r8 + 12] 			  ## midi_dec.c:463:29
  1049e0:    80 d4       	r0 = r0 + r2 			  ## midi_dec.c:463:29
  1049e2:    00 5c       	r0 = b[r0 + 2] 			  ## midi_dec.c:463:16
  1049e4:    02 a1       	r2 = r0 << 1 			  ## midi_dec.c:464:40
  1049e6:    89 d4       	r1 = r1 + r2 			  ## midi_dec.c:464:40
  1049e8:    09 50       	r1 = h[r1 + 0] 			  ## midi_dec.c:464:40
  1049ea:    50 e8 c1 ff 	h[r12 + -2] = r1 			  ## midi_dec.c:464:38
  1049ee:    20 e8 81 02 	r1 = [r8 + 8] 			  ## midi_dec.c:465:67
  1049f2:    00 a7       	r0 = r0 << 7 			  ## midi_dec.c:465:92
  1049f4:    40 d4       	r0 = r0 + r1 			  ## midi_dec.c:465:54
  1049f6:    60 e8 c0 00 	[r12 + 0] = r0 			  ## midi_dec.c:465:34
  1049fa:    0d 09       	goto 538 <.GJTIE37_0_0_+0x2CA : 104c16 >			  ## midi_dec.c:465:34
  1049fc:    20 c6       	r0 = r4 			  ## midi_dec.c:471:3
  1049fe:    29 c6       	r1 = r5 			  ## midi_dec.c:471:3
  104a00:    ff e1 6f e6 	call -820 <midi_play_set_tempo : 1046d0 >			  ## midi_dec.c:471:3
  104a04:    08 09       	goto 528 <.GJTIE37_0_0_+0x2CA : 104c16 >			  ## midi_dec.c:471:3
  104a06:    00 e8 b0 be 	r0 = b[r11 + -6] 			  ## midi_dec.c:148:19
  104a0a:    38 20       	if (r0 != 0) goto 6 <.GJTIE37_0_0_+0xC6 : 104a12 >			  ## midi_dec.c:148:19
  104a0c:    08 80       	r0 = 1 			  ## midi_dec.c:150:27
  104a0e:    40 e8 b0 be 	b[r11 + -6] = r0 			  ## midi_dec.c:150:27
  104a12:    00 e8 b0 7e 	r0 = b[r11 + -7] 			  ## midi_dec.c:152:19
  104a16:    70 20       	if (r0 == 0) goto 14 <.GJTIE37_0_0_+0xDA : 104a26 >			  ## midi_dec.c:152:19
  104a18:    00 80       	r0 = 0 			  ## midi_dec.c:154:24
  104a1a:    40 e8 b0 7e 	b[r11 + -7] = r0 			  ## midi_dec.c:154:24
  104a1e:    40 e8 a0 7f 	b[r10 + -3] = r0 			  ## midi_dec.c:158:30
  104a22:    40 e8 a0 bf 	b[r10 + -2] = r0 			  ## midi_dec.c:159:23
  104a26:    00 80       	r0 = 0 
  104a28:    60 e8 a0 00 	[r10 + 0] = r0 			  ## midi_dec.c:162:27
  104a2c:    f0 79       	b[r6 + -4] = r0 			  ## midi_dec.c:163:28
  104a2e:    f3 08       	goto 486 <.GJTIE37_0_0_+0x2CA : 104c16 >			  ## midi_dec.c:163:28
  104a30:    20 e8 b0 fd 	r0 = [r11 + -12] 			  ## midi_dec.c:481:21
  104a34:    08 98       	cmp r0, 1			  ## midi_dec.c:481:56
  104a36:    1b 11       	ifs (nzcv != 0) goto 54 <.GJTIE37_0_0_+0x122 : 104a6e >			  ## midi_dec.c:481:56
  104a38:    00 e8 b0 7e 	r0 = b[r11 + -7] 			  ## midi_dec.c:481:73
  104a3c:    10 98       	cmp r0, 2			  ## midi_dec.c:481:7
  104a3e:    17 11       	ifs (nzcv != 0) goto 46 <.GJTIE37_0_0_+0x122 : 104a6e >			  ## midi_dec.c:481:7
  104a40:    03 ed 40 38 	r0 = r4 + 824 			  ## midi_dec.c:483:25
  104a44:    06 ed 41 7c 	r1 = r4 + 1660 			  ## midi_dec.c:483:49
  104a48:    12 ea a0 00 	r2 = 160 			  ## midi_dec.c:483:4
  104a4c:    df e1 0f 28 	call -269056 <memcpy : c2f50 >			  ## midi_dec.c:483:4
  104a50:    07 ed 40 1c 	r0 = r4 + 1820 			  ## midi_dec.c:483:4
  104a54:    00 48       	r0 = [r0 + 0] 			  ## midi_dec.c:484:57
  104a56:    20 e8 c1 03 	r1 = [r12 + 12] 			  ## midi_dec.c:484:26
  104a5a:    08 d6       	r0 = r1 - r0 			  ## midi_dec.c:484:26
  104a5c:    60 e8 c0 03 	[r12 + 12] = r0 			  ## midi_dec.c:484:26
  104a60:    00 80       	r0 = 0 			  ## midi_dec.c:484:26
  104a62:    60 e8 80 fa 	[r8 + -24] = r0 			  ## midi_dec.c:485:33
  104a66:    60 e8 80 f9 	[r8 + -28] = r0 			  ## midi_dec.c:486:33
  104a6a:    40 e8 90 01 	b[r9 + 4] = r0 			  ## midi_dec.c:487:29
  104a6e:    29 58       	r1 = b[r5 + 0] 			  ## midi_dec.c:489:3
  104a70:    20 c6       	r0 = r4 			  ## midi_dec.c:489:3
  104a72:    ff e1 af e5 	call -844 <midi_play_ctrl_on : 10472a >			  ## midi_dec.c:489:3
  104a76:    cf 08       	goto 414 <.GJTIE37_0_0_+0x2CA : 104c16 >			  ## midi_dec.c:489:3
  104a78:    29 48       	r1 = [r5 + 0] 			  ## midi_dec.c:493:18
  104a7a:    20 c6       	r0 = r4 			  ## midi_dec.c:494:3
  104a7c:    ff e1 8f e6 	call -816 <midi_switch_control : 104750 >			  ## midi_dec.c:494:3
  104a80:    ca 08       	goto 404 <.GJTIE37_0_0_+0x2CA : 104c16 >
  104a82:    05 ed 40 c0 	r0 = r4 + 1472 			  ## midi_dec.c:499:30
  104a86:    29 c6       	r1 = r5 			  ## midi_dec.c:499:3
  104a88:    12 81       	r2 = 34 			  ## midi_dec.c:499:3
  104a8a:    c3 08       	goto 390 <.GJTIE37_0_0_+0x2C6 : 104c12 >			  ## midi_dec.c:499:3
  104a8c:    6b 54       	r3 = h[r5 + 6] 			  ## midi_dec.c:517:3
  104a8e:    6a 58       	r2 = b[r5 + 4] 			  ## midi_dec.c:517:3
  104a90:    29 48       	r1 = [r5 + 0] 			  ## midi_dec.c:517:3
  104a92:    20 c6       	r0 = r4 			  ## midi_dec.c:517:3
  104a94:    ff e1 cf e8 	call -744 <midi_tone_init : 1047b0 >			  ## midi_dec.c:517:3
  104a98:    00 ed 50 88 	r0 = r5 + 136 			  ## midi_dec.c:519:37
  104a9c:    00 58       	r0 = b[r0 + 0] 			  ## midi_dec.c:519:47
  104a9e:    b0 7a       	b[r6 + 9] = r0 			  ## midi_dec.c:519:25
  104aa0:    00 ed 50 89 	r0 = r5 + 137 			  ## midi_dec.c:520:48
  104aa4:    00 58       	r0 = b[r0 + 0] 			  ## midi_dec.c:520:48
  104aa6:    b0 78       	b[r6 + 8] = r0 			  ## midi_dec.c:520:26
  104aa8:    05 ed 40 c0 	r0 = r4 + 1472 			  ## midi_dec.c:522:30
  104aac:    00 ed 51 34 	r1 = r5 + 52 			  ## midi_dec.c:522:51
  104ab0:    12 81       	r2 = 34 			  ## midi_dec.c:522:3
  104ab2:    df e1 df 24 	call -269158 <memcpy : c2f50 >			  ## midi_dec.c:522:3
  104ab6:    06 ed 40 46 	r0 = r4 + 1606 			  ## midi_dec.c:523:30
  104aba:    00 ed 51 98 	r1 = r5 + 152 			  ## midi_dec.c:523:58
  104abe:    82 80       	r2 = 16 			  ## midi_dec.c:523:3
  104ac0:    df e1 6f 24 	call -269172 <memcpy : c2f50 >			  ## midi_dec.c:523:3
  104ac4:    05 ed 40 e4 	r0 = r4 + 1508 			  ## midi_dec.c:524:30
  104ac8:    00 ed 51 5c 	r1 = r5 + 92 			  ## midi_dec.c:524:54
  104acc:    42 80       	r2 = 8 			  ## midi_dec.c:524:3
  104ace:    df e1 ff 23 	call -269186 <memcpy : c2f50 >			  ## midi_dec.c:524:3
  104ad2:    05 ed 40 f4 	r0 = r4 + 1524 			  ## midi_dec.c:525:30
  104ad6:    00 ed 51 64 	r1 = r5 + 100 			  ## midi_dec.c:525:56
  104ada:    42 80       	r2 = 8 			  ## midi_dec.c:525:3
  104adc:    df e1 8f 23 	call -269200 <memcpy : c2f50 >			  ## midi_dec.c:525:3
  104ae0:    06 ed 40 58 	r0 = r4 + 1624 			  ## midi_dec.c:526:30
  104ae4:    00 ed 51 6c 	r1 = r5 + 108 			  ## midi_dec.c:526:55
  104ae8:    42 80       	r2 = 8 			  ## midi_dec.c:526:3
  104aea:    df e1 1f 23 	call -269214 <memcpy : c2f50 >			  ## midi_dec.c:526:3
  104aee:    06 ed 40 60 	r0 = r4 + 1632 			  ## midi_dec.c:527:30
  104af2:    00 ed 51 74 	r1 = r5 + 116 			  ## midi_dec.c:527:54
  104af6:    42 80       	r2 = 8 			  ## midi_dec.c:527:3
  104af8:    df e1 af 22 	call -269228 <memcpy : c2f50 >			  ## midi_dec.c:527:3
  104afc:    05 ed 40 fc 	r0 = r4 + 1532 			  ## midi_dec.c:528:30
  104b00:    00 ed 51 8c 	r1 = r5 + 140 			  ## midi_dec.c:528:61
  104b04:    62 80       	r2 = 12 			  ## midi_dec.c:528:3
  104b06:    df e1 3f 22 	call -269242 <memcpy : c2f50 >			  ## midi_dec.c:528:3
  104b0a:    07 ed 40 e0 	r0 = r4 + 2016 			  ## midi_dec.c:529:30
  104b0e:    00 ed 51 7c 	r1 = r5 + 124 			  ## midi_dec.c:529:54
  104b12:    62 80       	r2 = 12 			  ## midi_dec.c:529:3
  104b14:    df e1 cf 21 	call -269256 <memcpy : c2f50 >			  ## midi_dec.c:529:3
  104b18:    a9 58       	r1 = b[r5 + 8] 			  ## midi_dec.c:531:3
  104b1a:    20 c6       	r0 = r4 			  ## midi_dec.c:531:3
  104b1c:    ff e1 5f e0 	call -1014 <midi_play_ctrl_on : 10472a >			  ## midi_dec.c:531:3
  104b20:    00 ed 51 0c 	r1 = r5 + 12 			  ## midi_dec.c:533:67
  104b24:    20 c6       	r0 = r4 			  ## midi_dec.c:533:3
  104b26:    ff e1 3f dd 	call -1114 <midi_play_set_tempo : 1046d0 >			  ## midi_dec.c:533:3
  104b2a:    29 c6       	r1 = r5 			  ## midi_dec.c:535:46
  104b2c:    04 e8 10 95 	r0 = b[++ r1 = 86] 			  ## midi_dec.c:535:46
  104b30:    40 e8 c0 3f 	b[r12 + -4] = r0 			  ## midi_dec.c:535:24
  104b34:    0a 54       	r2 = h[r1 + 2] 			  ## midi_dec.c:536:51
  104b36:    3a 74       	h[r7 + 2] = r2 			  ## midi_dec.c:536:29
  104b38:    0a 5a       	r2 = b[r1 + 1] 			  ## midi_dec.c:537:51
  104b3a:    40 e8 a2 41 	b[r10 + 5] = r2 			  ## midi_dec.c:537:29
  104b3e:    49 58       	r1 = b[r1 + 4] 			  ## midi_dec.c:538:32
  104b40:    81 98       	cmp r1, 16			  ## midi_dec.c:538:7
  104b42:    92 03       	if (nzcv <= 0) {			  ## midi_dec.c:540:25
  104b44:    40 e8 c1 c1 		b[r12 + 7] = r1 			  ## midi_dec.c:540:25
  104b48:    09 80       		r1 = 1 			  ## midi_dec.c:541:27
  104b4a:    40 e8 c1 81 		b[r12 + 6] = r1 
                               	}			  ## midi_dec.c:541:27
  104b4e:    20 e8 81 05 	r1 = [r8 + 20] 			  ## midi_dec.c:545:53
  104b52:    20 e8 82 03 	r2 = [r8 + 12] 			  ## midi_dec.c:544:29
  104b56:    80 d4       	r0 = r0 + r2 			  ## midi_dec.c:544:29
  104b58:    00 5c       	r0 = b[r0 + 2] 			  ## midi_dec.c:544:16
  104b5a:    02 a1       	r2 = r0 << 1 			  ## midi_dec.c:545:40
  104b5c:    89 d4       	r1 = r1 + r2 			  ## midi_dec.c:545:40
  104b5e:    09 50       	r1 = h[r1 + 0] 			  ## midi_dec.c:545:40
  104b60:    50 e8 c1 ff 	h[r12 + -2] = r1 			  ## midi_dec.c:545:38
  104b64:    20 e8 81 02 	r1 = [r8 + 8] 			  ## midi_dec.c:546:67
  104b68:    00 a7       	r0 = r0 << 7 			  ## midi_dec.c:546:92
  104b6a:    40 d4       	r0 = r0 + r1 			  ## midi_dec.c:546:54
  104b6c:    60 e8 c0 00 	[r12 + 0] = r0 			  ## midi_dec.c:546:34
  104b70:    20 e8 51 43 	r1 = [r5 + 268] 			  ## midi_dec.c:548:43
  104b74:    20 c6       	r0 = r4 			  ## midi_dec.c:548:3
  104b76:    ff e1 bf de 	call -1066 <midi_switch_control : 104750 >			  ## midi_dec.c:548:3
  104b7a:    00 e8 b0 43 	r0 = b[r11 + 13] 			  ## midi_dec.c:550:20
  104b7e:    40 21       	if (r0 == 0) goto 40 <.GJTIE37_0_0_+0x25C : 104ba8 >
  104b80:    90 e8 80 06 	r0 = h[r8 + 24] (s) 			  ## midi_dec.c:552:21
  104b84:    58 98       	cmp r0, 11			  ## midi_dec.c:552:8
  104b86:    a1 03       	ifs (nzcv >= 0) {			  ## midi_dec.c:553:34
  104b88:    50 80       		r0 = 10 			  ## midi_dec.c:553:34
  104b8a:    50 e8 80 06 		h[r8 + 24] = r0 
                               	}			  ## midi_dec.c:553:34
  104b8e:    04 ed 40 ec 	r0 = r4 + 1260 			  ## midi_dec.c:553:34
  104b92:    00 48       	r0 = [r0 + 0] 			  ## midi_dec.c:554:70
  104b94:    08 ed 00 c0 	r0 = r0 + 2240 			  ## midi_dec.c:554:57
  104b98:    60 e8 90 02 	[r9 + 8] = r0 			  ## midi_dec.c:554:30
  104b9c:    46 80       	r6 = 8 
  104b9e:    20 c6       	r0 = r4 			  ## midi_dec.c:557:5
  104ba0:    ff e1 2f e8 	call -764 <midi_save_bk_fun : 1048a8 >			  ## midi_dec.c:557:5
  104ba4:    f6 d3       	r6 = r6 + -1 			  ## midi_dec.c:555:32
  104ba6:    fb 11       	ifs (nzcv != 0) goto -10 <.GJTIE37_0_0_+0x252 : 104b9e >			  ## midi_dec.c:555:32
  104ba8:    07 ed 40 24 	r0 = r4 + 1828 			  ## midi_dec.c:562:30
  104bac:    00 ed 51 a8 	r1 = r5 + 168 			  ## midi_dec.c:562:57
  104bb0:    22 83       	r2 = 100 			  ## midi_dec.c:562:3
  104bb2:    df e1 df 1c 	call -269414 <memcpy : c2f50 >			  ## midi_dec.c:562:3
  104bb6:    20 e8 a0 fb 	r0 = [r10 + -20] 			  ## midi_dec.c:563:70
  104bba:    60 e8 a0 fe 	[r10 + -8] = r0 			  ## midi_dec.c:563:31
  104bbe:    2b 08       	goto 86 <.GJTIE37_0_0_+0x2CA : 104c16 >			  ## midi_dec.c:563:31
  104bc0:    6b 54       	r3 = h[r5 + 6] 			  ## midi_dec.c:570:3
  104bc2:    6a 58       	r2 = b[r5 + 4] 			  ## midi_dec.c:570:3
  104bc4:    29 48       	r1 = [r5 + 0] 			  ## midi_dec.c:570:3
  104bc6:    20 c6       	r0 = r4 			  ## midi_dec.c:570:3
  104bc8:    ff e1 2f df 	call -1052 <midi_tone_init : 1047b0 >			  ## midi_dec.c:570:3
  104bcc:    24 08       	goto 72 <.GJTIE37_0_0_+0x2CA : 104c16 >			  ## midi_dec.c:570:3
  104bce:    28 5a       	r0 = b[r5 + 1] 			  ## midi_dec.c:575:34
  104bd0:    b0 78       	b[r6 + 8] = r0 			  ## midi_dec.c:575:26
  104bd2:    28 58       	r0 = b[r5 + 0] 			  ## midi_dec.c:576:33
  104bd4:    b0 7a       	b[r6 + 9] = r0 			  ## midi_dec.c:576:25
  104bd6:    08 98       	cmp r0, 1			  ## midi_dec.c:577:56
  104bd8:    1e 11       	ifs (nzcv != 0) goto 60 <.GJTIE37_0_0_+0x2CA : 104c16 >			  ## midi_dec.c:577:56
  104bda:    20 e8 b0 fd 	r0 = [r11 + -12] 			  ## midi_dec.c:577:21
  104bde:    08 98       	cmp r0, 1			  ## midi_dec.c:577:21
  104be0:    1a 11       	ifs (nzcv != 0) goto 52 <.GJTIE37_0_0_+0x2CA : 104c16 >			  ## midi_dec.c:577:21
  104be2:    08 80       	r0 = 1 			  ## midi_dec.c:579:25
  104be4:    40 e8 b0 7e 	b[r11 + -7] = r0 			  ## midi_dec.c:579:25
  104be8:    40 e8 b0 be 	b[r11 + -6] = r0 			  ## midi_dec.c:580:28
  104bec:    f0 79       	b[r6 + -4] = r0 			  ## midi_dec.c:581:30
  104bee:    13 08       	goto 38 <.GJTIE37_0_0_+0x2CA : 104c16 >			  ## midi_dec.c:581:30
  104bf0:    06 ed 40 46 	r0 = r4 + 1606 			  ## midi_dec.c:587:24
  104bf4:    29 c6       	r1 = r5 			  ## midi_dec.c:587:3
  104bf6:    82 80       	r2 = 16 			  ## midi_dec.c:587:3
  104bf8:    0c 08       	goto 24 <.GJTIE37_0_0_+0x2C6 : 104c12 >			  ## midi_dec.c:587:3
  104bfa:    05 ed 40 f4 	r0 = r4 + 1524 			  ## midi_dec.c:504:30
  104bfe:    07 08       	goto 14 <.GJTIE37_0_0_+0x2C2 : 104c0e >			  ## midi_dec.c:504:30
  104c00:    05 ed 40 fc 	r0 = r4 + 1532 			  ## midi_dec.c:509:30
  104c04:    29 c6       	r1 = r5 			  ## midi_dec.c:509:3
  104c06:    62 80       	r2 = 12 			  ## midi_dec.c:509:3
  104c08:    04 08       	goto 8 <.GJTIE37_0_0_+0x2C6 : 104c12 >			  ## midi_dec.c:509:3
  104c0a:    06 ed 40 68 	r0 = r4 + 1640 			  ## midi_dec.c:592:24
  104c0e:    29 c6       	r1 = r5 
  104c10:    42 80       	r2 = 8 
  104c12:    df e1 df 19 	call -269510 <memcpy : c2f50 >
  104c16:    00 80       	r0 = 0 			  ## midi_dec.c:595:2
  104c18:    1c c0       	{pc, r12-r4} = [sp++] 			  ## midi_dec.c:595:2


midi_decode_api:
  104c1a:    18 c2       	[--sp] = {rets, r8-r4} 			  ## midi_api.c:88:0
  104c1c:    fc cd       	sp += -4 			  ## midi_api.c:88:0
  104c1e:    0c c6       	r4 = r1 			  ## midi_api.c:88:0
  104c20:    06 c6       	r6 = r0 			  ## midi_api.c:88:0
  104c22:    58 29       	r0 = [addr(404)]  <.GCPI38_0 : 104db8 >			  ## midi_api.c:92:5
  104c24:    df e1 af 1d 	call -269388 <xprintf : c2fdc >			  ## midi_api.c:92:5
  104c28:    20 e4 08 64 	r8 = [addr(400)]  <.GCPI38_1 : 104dbc >			  ## midi_api.c:93:10
  104c2c:    20 e8 80 06 	r0 = [r8 + 24] 			  ## midi_api.c:93:10
  104c30:    00 98       	cmp r0, 0			  ## midi_api.c:93:10
  104c32:    00 fb b0 0b 	ifs (nzcv == 0) goto 374 <midi_decode_api+0x192 : 104dac >			  ## midi_api.c:93:10
  104c36:    04 60       	[sp] = r4 
  104c38:    df e1 4f 17 	call -269592 <local_irq_disable : c2f24 >			  ## midi_api.c:97:5
  104c3c:    5d 28       	r5 = [addr(388)]  <.GCPI38_2 : 104dc0 >			  ## midi_api.c:98:5
  104c3e:    04 80       	r4 = 0 			  ## midi_api.c:98:5
  104c40:    28 c6       	r0 = r5 			  ## midi_api.c:98:5
  104c42:    01 80       	r1 = 0 			  ## midi_api.c:98:5
  104c44:    c2 81       	r2 = 56 			  ## midi_api.c:98:5
  104c46:    df e1 9f 18 	call -269550 <memset : c2f5c >			  ## midi_api.c:98:5
  104c4a:    df e1 9f 16 	call -269614 <local_irq_enable : c2f20 >			  ## midi_api.c:99:5
  104c4e:    20 80       	r0 = 4 			  ## midi_api.c:99:5
  104c50:    40 e8 50 4d 	b[r5 + 53] = r0 			  ## midi_api.c:101:23
  104c54:    10 2f       	r0 = [addr(368)]  <.GCPI38_3 : 104dc4 >			  ## midi_api.c:105:5
  104c56:    11 ea ec 0e 	r1 = 3820 			  ## midi_api.c:105:5
  104c5a:    df e1 ff 1b 	call -269442 <xprintf : c2fdc >			  ## midi_api.c:105:5
  104c5e:    97 2e       	r7 = [addr(360)]  <.GCPI38_4 : 104dc8 >			  ## midi_api.c:110:5
  104c60:    d1 2e       	r1 = [addr(364)]  <.GCPI38_5 : 104dcc >			  ## midi_api.c:110:5
  104c62:    38 c6       	r0 = r7 			  ## midi_api.c:110:5
  104c64:    12 ea 00 05 	r2 = 1280 			  ## midi_api.c:110:5
  104c68:    df e1 4f 19 	call -269528 <cbuf_init : c2f94 >			  ## midi_api.c:110:5
  104c6c:    30 c6       	r0 = r6 			  ## midi_api.c:112:20
  104c6e:    ff e1 bf 87 	call -3850 <vfs_file_name : 103d68 >			  ## midi_api.c:112:20
  104c72:    00 ed 81 c4 	r1 = r8 + 196 			  ## midi_api.c:114:5
  104c76:    90 2d       	r0 = [addr(344)]  <.GCPI38_6 : 104dd0 >			  ## midi_api.c:114:5
  104c78:    df e1 0f 1b 	call -269472 <xprintf : c2fdc >			  ## midi_api.c:114:5
  104c7c:    2e 68       	[r5 + 0] = r6 			  ## midi_api.c:116:25
  104c7e:    af 69       	[r5 + 24] = r7 			  ## midi_api.c:117:31
  104c80:    56 2d       	r6 = [addr(340)]  <.GCPI38_7 : 104dd4 >			  ## midi_api.c:118:25
  104c82:    ae 68       	[r5 + 8] = r6 			  ## midi_api.c:118:25
  104c84:    50 2d       	r0 = [addr(340)]  <.GCPI38_8 : 104dd8 >			  ## midi_api.c:119:26
  104c86:    68 68       	[r5 + 4] = r0 			  ## midi_api.c:119:26
  104c88:    50 2d       	r0 = [addr(340)]  <.GCPI38_9 : 104ddc >			  ## midi_api.c:120:28
  104c8a:    28 69       	[r5 + 16] = r0 			  ## midi_api.c:120:28
  104c8c:    51 2d       	r1 = [addr(340)]  <.GCPI38_10 : 104de0 >			  ## midi_api.c:123:5
  104c8e:    30 c6       	r0 = r6 			  ## midi_api.c:123:5
  104c90:    02 80       	r2 = 0 			  ## midi_api.c:123:5
  104c92:    ff e1 5f bc 	call -2166 <midi_open : 104420 >			  ## midi_api.c:123:5
  104c96:    30 c6       	r0 = r6 			  ## midi_api.c:124:9
  104c98:    ff e1 3f c7 	call -1818 <MIDI_FORMAT_CHECK : 104582 >			  ## midi_api.c:124:9
  104c9c:    17 ea 12 90 	r7 = 36882 			  ## midi_api.c:124:9
  104ca0:    00 98       	cmp r0, 0			  ## midi_api.c:124:9
  104ca2:    00 fb 51 08 	ifs (nzcv != 0) goto 266 <midi_decode_api+0x196 : 104db0 >			  ## midi_api.c:124:9
  104ca6:    ff e1 1f d0 	call -1534 <dac_sr_read : 1046ac >			  ## midi_api.c:128:10
  104caa:    01 c6       	r1 = r0 			  ## midi_api.c:128:10
  104cac:    69 69       	[r5 + 20] = r1 			  ## midi_api.c:129:21
  104cae:    57 2b       	r7 = [addr(308)]  <.GCPI38_11 : 104de4 >			  ## midi_api.c:133:26
  104cb0:    40 80       	r0 = 8 			  ## midi_api.c:133:26
  104cb2:    78 74       	h[r7 + 6] = r0 			  ## midi_api.c:133:26
  104cb4:    50 2b       	r0 = [addr(308)]  <.GCPI38_12 : 104de8 >			  ## midi_api.c:133:26
  104cb6:    02 80       	r2 = 0 
  104cb8:    06 08       	goto 12 <midi_decode_api+0xAC : 104cc6 >
  104cba:    03 48       	r3 = [r0 + 0] 			  ## midi_api.c:72:19
  104cbc:    19 ce       	cmp r3, r1			  ## midi_api.c:72:13
  104cbe:    09 10       	ifs (nzcv == 0) goto 18 <midi_decode_api+0xB8 : 104cd2 >			  ## midi_api.c:72:13
  104cc0:    00 d1       	r0 = r0 + 4 			  ## midi_api.c:71:5
  104cc2:    64 d0       	r4 = r4 + 1 			  ## midi_api.c:71:5
  104cc4:    52 d0       	r2 = r2 + 1 			  ## midi_api.c:71:72
  104cc6:    42 98       	cmp r2, 8			  ## midi_api.c:71:5
  104cc8:    f8 19       	if (nzcv <= 0) goto -16 <midi_decode_api+0xA0 : 104cba >			  ## midi_api.c:71:5
  104cca:    10 2a       	r0 = [addr(288)]  <.GCPI38_13 : 104dec >			  ## midi_api.c:77:5
  104ccc:    df e1 6f 18 	call -269556 <xprintf : c2fdc >			  ## midi_api.c:77:5
  104cd0:    04 80       	r4 = 0 
  104cd2:    7c 78       	b[r7 + 4] = r4 			  ## midi_api.c:134:29
  104cd4:    20 e8 80 06 	r0 = [r8 + 24] 			  ## midi_api.c:135:33
  104cd8:    38 68       	[r7 + 0] = r0 			  ## midi_api.c:135:25
  104cda:    56 29       	r6 = [addr(276)]  <.GCPI38_14 : 104df0 >			  ## midi_api.c:137:5
  104cdc:    04 80       	r4 = 0 
  104cde:    30 c6       	r0 = r6 			  ## midi_api.c:137:5
  104ce0:    01 80       	r1 = 0 			  ## midi_api.c:137:5
  104ce2:    12 ea 10 01 	r2 = 272 			  ## midi_api.c:137:5
  104ce6:    df e1 9f 13 	call -269710 <memset : c2f5c >			  ## midi_api.c:137:5
  104cea:    00 e5 71 00 	r1, r0 = d[r7 + 0] 			  ## midi_api.c:138:27
  104cee:    40 e5 61 00 	d[r6 + 0] = r1, r0 			  ## midi_api.c:138:27
  104cf2:    b4 78       	b[r6 + 8] = r4 			  ## midi_config.c:96:31
  104cf4:    10 ea 12 04 	r0 = 1042 			  ## midi_config.c:99:37
  104cf8:    f0 70       	h[r6 + 12] = r0 			  ## midi_config.c:99:37
  104cfa:    10 ea 00 fc 	r0 = 64512 			  ## midi_config.c:99:37
  104cfe:    03 08       	goto 6 <midi_decode_api+0xEC : 104d06 >			  ## midi_config.c:99:37
  104d00:    31 d5       	r1 = r6 + r4 			  ## midi_config.c:101:44
  104d02:    c8 74       	h[r1 + 14] = r0 			  ## midi_config.c:101:44
  104d04:    a4 d0       	r4 = r4 + 2 			  ## midi_config.c:100:5
  104d06:    04 99       	cmp r4, 32			  ## midi_config.c:100:5
  104d08:    fb 11       	ifs (nzcv != 0) goto -10 <midi_decode_api+0xE6 : 104d00 >			  ## midi_config.c:100:5
  104d0a:    25 ea 00 00 	r0 = 536870912 			  ## midi_config.c:103:42
  104d0e:    30 6b       	[r6 + 48] = r0 			  ## midi_config.c:103:42
  104d10:    88 80       	r0 = 17 			  ## midi_config.c:106:35
  104d12:    40 e8 60 96 	b[r6 + 90] = r0 			  ## midi_config.c:106:35
  104d16:    00 80       	r0 = 0 
  104d18:    11 ea 00 10 	r1 = 4096 
  104d1c:    04 40       	r4 = [sp] 
  104d1e:    04 08       	goto 8 <midi_decode_api+0x10E : 104d28 >
  104d20:    32 d4       	r2 = r6 + r0 			  ## midi_config.c:110:39
  104d22:    50 e8 21 0d 	h[r2 + 52] = r1 			  ## midi_config.c:110:39
  104d26:    80 d0       	r0 = r0 + 2 			  ## midi_config.c:109:5
  104d28:    00 99       	cmp r0, 32			  ## midi_config.c:109:5
  104d2a:    fa 11       	ifs (nzcv != 0) goto -12 <midi_decode_api+0x106 : 104d20 >			  ## midi_config.c:109:5
  104d2c:    00 80       	r0 = 0 
  104d2e:    00 ed 61 88 	r1 = r6 + 136 
  104d32:    08 78       	b[r1 + 0] = r0 			  ## midi_config.c:114:42
  104d34:    08 7a       	b[r1 + 1] = r0 			  ## midi_config.c:115:36
  104d36:    31 c6       	r1 = r6 			  ## midi_config.c:118:31
  104d38:    44 e8 10 95 	b[++ r1 = 86] = r0 			  ## midi_config.c:118:31
  104d3c:    12 ea 00 04 	r2 = 1024 			  ## midi_config.c:119:33
  104d40:    0a 74       	h[r1 + 2] = r2 			  ## midi_config.c:119:33
  104d42:    08 7a       	b[r1 + 1] = r0 			  ## midi_config.c:120:39
  104d44:    11 ea 98 00 	r1 = 152 			  ## midi_config.c:120:39
  104d48:    62 80       	r2 = 12 			  ## midi_config.c:120:39
  104d4a:    04 08       	goto 8 <midi_decode_api+0x13A : 104d54 >			  ## midi_config.c:120:39
  104d4c:    33 d4       	r3 = r6 + r0 			  ## midi_config.c:124:46
  104d4e:    40 e7 32 01 	b[r3 + r1] = r2 			  ## midi_config.c:124:46
  104d52:    40 d0       	r0 = r0 + 1 			  ## midi_config.c:123:44
  104d54:    80 98       	cmp r0, 16			  ## midi_config.c:123:5
  104d56:    fa 11       	ifs (nzcv != 0) goto -12 <midi_decode_api+0x132 : 104d4c >			  ## midi_config.c:123:5
  104d58:    07 80       	r7 = 0 
  104d5a:    00 ed 60 90 	r0 = r6 + 144 
  104d5e:    21 82       	r1 = 68 			  ## midi_config.c:129:32
  104d60:    47 e5 01 fb 	d[r0 + -20] = r1, r7 			  ## midi_config.c:128:31
  104d64:    09 29       	r1 = [addr(144)]  <.GCPI38_15 : 104df4 >			  ## midi_config.c:130:44
  104d66:    41 6f       	[r0 + -12] = r1 			  ## midi_config.c:130:44
  104d68:    c7 6c       	[r0 + -52] = r7 			  ## midi_config.c:133:31
  104d6a:    c9 28       	r1 = [addr(140)]  <.GCPI38_16 : 104df8 >			  ## midi_config.c:134:39
  104d6c:    41 e5 07 f4 	d[r0 + -48] = r7, r1 			  ## midi_config.c:134:39
  104d70:    c9 28       	r1 = [addr(140)]  <.GCPI38_17 : 104dfc >			  ## midi_config.c:137:43
  104d72:    81 6d       	[r0 + -40] = r1 			  ## midi_config.c:137:43
  104d74:    c7 6f       	[r0 + -4] = r7 			  ## midi_config.c:139:38
  104d76:    09 80       	r1 = 1 			  ## midi_config.c:140:49
  104d78:    01 78       	b[r0 + 0] = r1 			  ## midi_config.c:140:49
  104d7a:    49 28       	r1 = [addr(132)]  <.GCPI38_18 : 104e00 >			  ## midi_config.c:141:53
  104d7c:    41 68       	[r0 + 4] = r1 			  ## midi_config.c:141:53
  104d7e:    47 6e       	[r0 + -28] = r7 			  ## midi_config.c:143:31
  104d80:    49 28       	r1 = [addr(132)]  <.GCPI38_19 : 104e04 >			  ## midi_config.c:144:39
  104d82:    81 6e       	[r0 + -24] = r1 			  ## midi_config.c:144:39
  104d84:    c7 6d       	[r0 + -36] = r7 			  ## midi_config.c:146:32
  104d86:    09 28       	r1 = [addr(128)]  <.GCPI38_20 : 104e08 >			  ## midi_config.c:147:43
  104d88:    01 6e       	[r0 + -32] = r1 			  ## midi_config.c:147:43
  104d8a:    10 ea a7 03 	r0 = 935 			  ## midi_config.c:150:28
  104d8e:    60 e8 60 43 	[r6 + 268] = r0 			  ## midi_config.c:150:28
  104d92:    00 2c       	r0 = [addr(64)]  <.GCPI38_7 : 104dd4 >			  ## midi_api.c:140:5
  104d94:    11 ea a7 00 	r1 = 167 			  ## midi_api.c:140:5
  104d98:    32 c6       	r2 = r6 			  ## midi_api.c:140:5
  104d9a:    ff e1 1f db 	call -1182 <midi_dec_confing : 104900 >			  ## midi_api.c:140:5
  104d9e:    25 68       	[r4 + 0] = r5 			  ## midi_api.c:143:12
  104da0:    00 ed 50 18 	r0 = r5 + 24 			  ## midi_api.c:145:5
  104da4:    81 2e       	r1 = [addr(104)]  <.GCPI38_21 : 104e0c >			  ## midi_api.c:145:5
  104da6:    ff e1 8f 86 	call -3888 <regist_dac_channel : 103e7a >			  ## midi_api.c:145:5
  104daa:    02 08       	goto 4 <midi_decode_api+0x196 : 104db0 >			  ## midi_api.c:145:5
  104dac:    17 ea 14 90 	r7 = 36884 
  104db0:    38 c6       	r0 = r7 			  ## midi_api.c:148:1
  104db2:    04 cd       	sp += 4 			  ## midi_api.c:148:1
  104db4:    18 c0       	{pc, r8-r4} = [sp++] 			  ## midi_api.c:148:1
  104db6:    00 00       	nop			  ## midi_api.c:148:1


.GCPI38_0:
  104db8:    90 aa 11 00     < 1157776 : 0x11AA90 >

.GCPI38_1:
  104dbc:    60 1c 00 00     < 7264 : 0x1C60 >

.GCPI38_2:
  104dc0:    50 1e 00 00     < 7760 : 0x1E50 >

.GCPI38_3:
  104dc4:    b2 aa 11 00     < 1157810 : 0x11AAB2 >

.GCPI38_4:
  104dc8:    3c 3a 00 00     < 14908 : 0x3A3C >

.GCPI38_5:
  104dcc:    5c 3a 00 00     < 14940 : 0x3A5C >

.GCPI38_6:
  104dd0:    36 ac 11 00     < 1158198 : 0x11AC36 >

.GCPI38_7:
  104dd4:    5c 3f 00 00     < 16220 : 0x3F5C >

.GCPI38_8:
  104dd8:    74 96 11 00     < 1152628 : 0x119674 >

.GCPI38_9:
  104ddc:    ce 5f 11 00     < 1138638 : 0x115FCE >

.GCPI38_10:
  104de0:    34 60 11 00     < 1138740 : 0x116034 >

.GCPI38_11:
  104de4:    48 4e 00 00     < 20040 : 0x4E48 >

.GCPI38_12:
  104de8:    54 99 11 00     < 1153364 : 0x119954 >

.GCPI38_13:
  104dec:    de aa 11 00     < 1157854 : 0x11AADE >

.GCPI38_14:
  104df0:    2c 39 00 00     < 14636 : 0x392C >

.GCPI38_15:
  104df4:    bc dc 10 00     < 1105084 : 0x10DCBC >

.GCPI38_16:
  104df8:    b8 dc 10 00     < 1105080 : 0x10DCB8 >

.GCPI38_17:
  104dfc:    ac dc 10 00     < 1105068 : 0x10DCAC >

.GCPI38_18:
  104e00:    b0 dc 10 00     < 1105072 : 0x10DCB0 >

.GCPI38_19:
  104e04:    b4 dc 10 00     < 1105076 : 0x10DCB4 >

.GCPI38_20:
  104e08:    a8 dc 10 00     < 1105064 : 0x10DCA8 >

.GCPI38_21:
  104e0c:    a0 0a 00 00     < 2720 : 0xAA0 >

midi_buff_api:
  104e10:    c1 28       	r1 = [addr(12)]  <.GCPI39_0 : 104e1c >			  ## midi_api.c:184:0
  104e12:    01 68       	[r0 + 0] = r1 			  ## midi_api.c:185:22
  104e14:    c1 28       	r1 = [addr(12)]  <.GCPI39_1 : 104e20 >			  ## midi_api.c:186:22
  104e16:    41 68       	[r0 + 4] = r1 			  ## midi_api.c:186:22
  104e18:    00 80       	r0 = 0 			  ## midi_api.c:187:5
  104e1a:    20 00       	rts			  ## midi_api.c:187:5


.GCPI39_0:
  104e1c:    2c 39 00 00     < 14636 : 0x392C >

.GCPI39_1:
  104e20:    a8 4e 00 00     < 20136 : 0x4EA8 >

midi_ctrl_open:
  104e24:    19 c2       	[--sp] = {rets, r9-r4} 			  ## midi_ctrl_api.c:135:0
  104e26:    30 c5       	[--sp] = {macch, maccl} 			  ## midi_ctrl_api.c:135:0
  104e28:    f8 cd       	sp += -8 			  ## midi_ctrl_api.c:135:0
  104e2a:    16 c6       	r6 = r2 			  ## midi_ctrl_api.c:135:0
  104e2c:    0f c6       	r7 = r1 			  ## midi_ctrl_api.c:135:0
  104e2e:    04 c6       	r4 = r0 			  ## midi_ctrl_api.c:135:0
  104e30:    05 80       	r5 = 0 			  ## midi_ctrl_api.c:135:0
  104e32:    01 80       	r1 = 0 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:50:2
  104e34:    12 ea ec 07 	r2 = 2028 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:50:2
  104e38:    df e1 0f 09 	call -270048 <memset : c2f5c >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:50:2
  104e3c:    20 c6       	r0 = r4 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:52:2
  104e3e:    07 60       	[sp] = r7 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:52:2
  104e40:    39 c6       	r1 = r7 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:52:2
  104e42:    82 80       	r2 = 16 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:52:2
  104e44:    df e1 4f 08 	call -270072 <memcpy : c2f50 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:52:2
  104e48:    33 48       	r3 = [r6 + 0] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:55:32
  104e4a:    1a c6       	r2 = r3 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:56:6
  104e4c:    18 e8 20 80 	r0 = h[r2 ++= 2] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:56:6
  104e50:    11 ea cd ab 	r1 = 43981 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:56:19
  104e54:    01 ce       	cmp r0, r1			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:56:6
  104e56:    10 03       	ifs (nzcv != 0) {			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:56:6
  104e58:    1a c6       		r2 = r3 
                               	}			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:56:6
  104e5a:    02 ed 49 ec 	r9 = r4 + 748 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:56:6
  104e5e:    60 e8 92 fe 	[r9 + -8] = r2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:56:6
  104e62:    0a 80       	r2 = 1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:56:19
  104e64:    01 ce       	cmp r0, r1			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:56:19
  104e66:    10 03       	ifs (nzcv != 0) {			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:56:19
  104e68:    02 80       		r2 = 0 
                               	}			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:56:19
  104e6a:    07 ed 47 c4 	r7 = r4 + 1988 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:56:19
  104e6e:    3a 68       	[r7 + 0] = r2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:56:19
  104e70:    70 58       	r0 = b[r6 + 4] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:67:29
  104e72:    60 e8 90 0d 	[r9 + 52] = r0 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:67:27
  104e76:    90 e8 60 81 	r0 = h[r6 + 6] (s) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:68:45
  104e7a:    40 98       	cmp r0, 8			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:69:6
  104e7c:    a0 03       	ifs (nzcv >= 0) {			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:69:6
  104e7e:    40 80       		r0 = 8 
                               	}			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:69:6
  104e80:    50 e8 90 01 	h[r9 + 4] = r0 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:68:31
  104e84:    10 ea 00 04 	r0 = 1024 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:72:28
  104e88:    03 ed 48 30 	r8 = r4 + 816 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:72:28
  104e8c:    50 e8 80 00 	h[r8 + 0] = r0 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:72:28
  104e90:    07 ed 40 9a 	r0 = r4 + 1946 
  104e94:    11 ea 00 80 	r1 = 32768 
  104e98:    50 e7 01 05 	h[r0 + r5] = r1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:75:31
  104e9c:    ad d0       	r5 = r5 + 2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:73:20
  104e9e:    05 99       	cmp r5, 32			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:73:2
  104ea0:    fb 11       	ifs (nzcv != 0) goto -10 <midi_ctrl_open+0x74 : 104e98 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:73:2
  104ea2:    25 ea 00 00 	r0 = 536870912 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:77:30
  104ea6:    f8 6f       	[r7 + -4] = r0 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:77:30
  104ea8:    20 e8 90 fe 	r0 = [r9 + -8] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:79:59
  104eac:    01 50       	r1 = h[r0 + 0] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:79:27
  104eae:    50 e8 91 7f 	h[r9 + -4] = r1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:79:25
  104eb2:    01 ed 02 02 	r2 = r0 + 258 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:80:45
  104eb6:    60 e8 92 00 	[r9 + 0] = r2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:80:25
  104eba:    0a a1       	r2 = r1 << 1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:81:104
  104ebc:    80 d4       	r0 = r0 + r2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:79:59
  104ebe:    01 ed 05 02 	r5 = r0 + 258 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:81:49
  104ec2:    08 a7       	r0 = r1 << 7 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:82:65
  104ec4:    40 d5       	r0 = r0 + r5 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:82:59
  104ec6:    40 e5 95 fc 	d[r9 + -16] = r5, r0 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:81:29
  104eca:    04 ed 42 18 	r2 = r4 + 1048 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:81:29
  104ece:    15 6c       	[r2 + -64] = r5 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:83:32
  104ed0:    03 80       	r3 = 0 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:83:32
  104ed2:    13 70       	h[r2 + 0] = r3 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:84:36
  104ed4:    55 6c       	[r2 + -60] = r5 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:89:35
  104ed6:    13 74       	h[r2 + 2] = r3 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:90:39
  104ed8:    03 ed 46 e0 	r6 = r4 + 992 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:87:2
  104edc:    04 ed 41 1c 	r1 = r4 + 1052 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:87:2
  104ee0:    03 08       	goto 6 <midi_ctrl_open+0xC4 : 104ee8 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:87:2
  104ee2:    15 4c       	r5 = [r2 + -64] 
  104ee4:    89 d0       	r1 = r1 + 2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:87:2
  104ee6:    1b d1       	r3 = r3 + 4 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:87:2
  104ee8:    60 e7 65 03 	[r6 + r3] = r5 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:89:35
  104eec:    10 50       	r0 = h[r2 + 0] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:90:41
  104eee:    08 70       	h[r1 + 0] = r0 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:90:39
  104ef0:    a3 99       	cmp r3, 52			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:87:2
  104ef2:    f7 11       	ifs (nzcv != 0) goto -18 <midi_ctrl_open+0xBE : 104ee2 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:87:2
  104ef4:    04 ed 42 49 	r2 = r4 + 1097 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:94:2
  104ef8:    44 60       	[sp+ 4] = r4 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:94:2
  104efa:    06 ed 41 08 	r1 = r4 + 1544 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:94:2
  104efe:    03 80       	r3 = 0 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:94:2
  104f00:    fd 83       	r5 = 127 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:94:2
  104f02:    06 82       	r6 = 64 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:94:2
  104f04:    10 ea 00 01 	r0 = 256 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:94:2
  104f08:    d4 d4       	r4 = r2 + r3 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:96:56
  104f0a:    25 7a       	b[r4 + 1] = r5 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:96:56
  104f0c:    40 e7 25 03 	b[r2 + r3] = r5 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:97:57
  104f10:    66 7a       	b[r4 + 5] = r6 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:98:56
  104f12:    58 e8 10 80 	h[r1 ++= 2] = r0 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:99:33
  104f16:    db d1       	r3 = r3 + 7 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:94:20
  104f18:    83 9b       	cmp r3, 112			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:94:2
  104f1a:    f6 11       	ifs (nzcv != 0) goto -20 <midi_ctrl_open+0xE4 : 104f08 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:94:2
  104f1c:    20 e8 90 0d 	r0 = [r9 + 52] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:102:83
  104f20:    00 a2       	r0 = r0 << 2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:102:56
  104f22:    81 2e       	r1 = [addr(104)]  <.GCPI40_0 : 104f8c >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:102:56
  104f24:    20 e7 10 00 	r0 = [r1 + r0] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:102:56
  104f28:    00 a7       	r0 = r0 << 7 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:102:96
  104f2a:    11 ea 16 0c 	r1 = 3094 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:102:131
  104f2e:    c0 fc 00 01 	r0 = r0 / r1 (s) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:102:131
  104f32:    01 40       	r1 = [sp] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:102:42
  104f34:    49 48       	r1 = [r1 + 4] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:102:42
  104f36:    49 a2       	r1 = r1 >> 2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:102:48
  104f38:    08 06       	r0 *= r1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:102:53
  104f3a:    60 e8 90 03 	[r9 + 12] = r0 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:102:23
  104f3e:    0d 80       	r5 = 1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:102:23
  104f40:    50 e8 95 02 	h[r9 + 8] = r5 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:103:22
  104f44:    10 e8 81 00 	r1 = h[r8 + 0] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:105:2
  104f48:    c1 06       	macc = r0 * r1 (s) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:105:2
  104f4a:    c0 f9 00 0a 	r0 = macc >>> 10 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:105:2
  104f4e:    44 40       	r4 = [sp+ 4] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:105:2
  104f50:    06 ed 41 30 	r1 = r4 + 1584 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:105:2
  104f54:    08 68       	[r1 + 0] = r0 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:105:2
  104f56:    07 ed 40 ec 	r0 = r4 + 2028 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:107:26
  104f5a:    04 ed 41 ec 	r1 = r4 + 1260 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:107:26
  104f5e:    08 68       	[r1 + 0] = r0 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:108:28
  104f60:    01 80       	r1 = 0 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:109:2
  104f62:    12 ea 00 07 	r2 = 1792 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:109:2
  104f66:    de e1 9f ff 	call -270350 <memset : c2f5c >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:109:2
  104f6a:    0e ed 41 ec 	r1 = r4 + 3820 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:110:12
  104f6e:    b9 68       	[r7 + 8] = r1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:111:24
  104f70:    10 ea ff 00 	r0 = 255 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:114:28
  104f74:    08 78       	b[r1 + 0] = r0 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:114:28
  104f76:    02 08       	goto 4 <midi_ctrl_open+0x158 : 104f7c >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:114:28
  104f78:    b9 48       	r1 = [r7 + 8] 
  104f7a:    6d d0       	r5 = r5 + 1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:112:61
  104f7c:    40 e7 10 05 	b[r1 + r5] = r0 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:114:28
  104f80:    fd 9b       	cmp r5, 127			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:112:2
  104f82:    fa 11       	ifs (nzcv != 0) goto -12 <midi_ctrl_open+0x154 : 104f78 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:112:2
  104f84:    00 80       	r0 = 0 			  ## midi_ctrl_api.c:137:5
  104f86:    08 cd       	sp += 8 			  ## midi_ctrl_api.c:137:5
  104f88:    30 c4       	{macch, maccl} = [sp++] 			  ## midi_ctrl_api.c:137:5
  104f8a:    19 c0       	{pc, r9-r4} = [sp++] 			  ## midi_ctrl_api.c:137:5


.GCPI40_0:
  104f8c:    54 99 11 00     < 1153364 : 0x119954 >

midi_ctrl_decode_api:
  104f90:    19 c2       	[--sp] = {rets, r9-r4} 			  ## midi_ctrl_api.c:47:0
  104f92:    0c c6       	r4 = r1 			  ## midi_ctrl_api.c:47:0
  104f94:    15 ea 15 90 	r5 = 36885 			  ## midi_ctrl_api.c:47:0
  104f98:    00 98       	cmp r0, 0			  ## midi_ctrl_api.c:47:0
  104f9a:    4b 11       	ifs (nzcv != 0) goto 150 <midi_ctrl_decode_api+0xA2 : 105032 >			  ## midi_ctrl_api.c:47:0
  104f9c:    20 e4 09 26 	r9 = [addr(152)]  <.GCPI41_0 : 105038 >			  ## midi_ctrl_api.c:57:10
  104fa0:    20 e8 90 07 	r0 = [r9 + 28] 			  ## midi_ctrl_api.c:57:10
  104fa4:    00 98       	cmp r0, 0
  104fa6:    43 10       	ifs (nzcv == 0) goto 134 <midi_ctrl_decode_api+0x9E : 10502e >
  104fa8:    de e1 cf fb 	call -270472 <local_irq_disable : c2f24 >			  ## midi_ctrl_api.c:61:5
  104fac:    0e 29       	r6 = [addr(144)]  <.GCPI41_1 : 10503c >			  ## midi_ctrl_api.c:62:5
  104fae:    00 ed 67 38 	r7 = r6 + 56 			  ## midi_ctrl_api.c:62:5
  104fb2:    05 80       	r5 = 0 			  ## midi_ctrl_api.c:62:5
  104fb4:    38 c6       	r0 = r7 			  ## midi_ctrl_api.c:62:5
  104fb6:    01 80       	r1 = 0 			  ## midi_ctrl_api.c:62:5
  104fb8:    c2 81       	r2 = 56 			  ## midi_ctrl_api.c:62:5
  104fba:    de e1 ff fc 	call -270434 <memset : c2f5c >			  ## midi_ctrl_api.c:62:5
  104fbe:    de e1 ff fa 	call -270498 <local_irq_enable : c2f20 >			  ## midi_ctrl_api.c:63:5
  104fc2:    28 80       	r0 = 5 			  ## midi_ctrl_api.c:65:28
  104fc4:    40 e8 60 5b 	b[r6 + 109] = r0 			  ## midi_ctrl_api.c:65:28
  104fc8:    80 2f       	r0 = [addr(120)]  <.GCPI41_2 : 105040 >			  ## midi_ctrl_api.c:68:5
  104fca:    11 ea 6c 0f 	r1 = 3948 			  ## midi_ctrl_api.c:68:5
  104fce:    df e1 5f 00 	call -270326 <xprintf : c2fdc >			  ## midi_ctrl_api.c:68:5
  104fd2:    20 e4 08 1c 	r8 = [addr(112)]  <.GCPI41_3 : 105044 >			  ## midi_ctrl_api.c:73:5
  104fd6:    01 2f       	r1 = [addr(112)]  <.GCPI41_4 : 105048 >			  ## midi_ctrl_api.c:73:5
  104fd8:    80 c6       	r0 = r8 			  ## midi_ctrl_api.c:73:5
  104fda:    12 ea 00 05 	r2 = 1280 			  ## midi_ctrl_api.c:73:5
  104fde:    de e1 9f fd 	call -270414 <cbuf_init : c2f94 >			  ## midi_ctrl_api.c:73:5
  104fe2:    10 ea 00 7d 	r0 = 32000 			  ## midi_ctrl_api.c:75:26
  104fe6:    60 e8 60 13 	[r6 + 76] = r0 			  ## midi_ctrl_api.c:75:26
  104fea:    b5 6b       	[r6 + 56] = r5 			  ## midi_ctrl_api.c:76:30
  104fec:    64 e8 68 14 	[++ r6 = 80] = r8 			  ## midi_ctrl_api.c:77:36
  104ff0:    c0 2d       	r0 = [addr(92)]  <.GCPI41_5 : 10504c >			  ## midi_ctrl_api.c:78:30
  104ff2:    30 6f       	[r6 + -16] = r0 			  ## midi_ctrl_api.c:78:30
  104ff4:    c1 2d       	r1 = [addr(92)]  <.GCPI41_6 : 105050 >			  ## midi_ctrl_api.c:79:31
  104ff6:    f1 6e       	[r6 + -20] = r1 			  ## midi_ctrl_api.c:79:31
  104ff8:    c1 2d       	r1 = [addr(92)]  <.GCPI41_7 : 105054 >			  ## midi_ctrl_api.c:80:33
  104ffa:    b1 6f       	[r6 + -8] = r1 			  ## midi_ctrl_api.c:80:33
  104ffc:    c2 2d       	r2 = [addr(92)]  <.GCPI41_8 : 105058 >			  ## midi_ctrl_api.c:82:31
  104ffe:    41 80       	r1 = 8 			  ## midi_ctrl_api.c:82:31
  105000:    51 74       	h[r2 + 6] = r1 			  ## midi_ctrl_api.c:82:31
  105002:    11 80       	r1 = 2 			  ## midi_ctrl_api.c:83:34
  105004:    51 78       	b[r2 + 4] = r1 			  ## midi_ctrl_api.c:83:34
  105006:    20 e8 91 07 	r1 = [r9 + 28] 			  ## midi_ctrl_api.c:84:38
  10500a:    11 68       	[r2 + 0] = r1 			  ## midi_ctrl_api.c:84:30
  10500c:    01 2d       	r1 = [addr(80)]  <.GCPI41_9 : 10505c >			  ## midi_ctrl_api.c:86:28
  10500e:    03 2d       	r3 = [addr(80)]  <.GCPI41_10 : 105060 >			  ## midi_ctrl_api.c:86:28
  105010:    cb 68       	[r1 + 12] = r3 			  ## midi_ctrl_api.c:86:28
  105012:    13 ea e8 03 	r3 = 1000 			  ## midi_ctrl_api.c:87:27
  105016:    4b 68       	[r1 + 4] = r3 			  ## midi_ctrl_api.c:87:27
  105018:    0b 80       	r3 = 1 			  ## midi_ctrl_api.c:88:31
  10501a:    0b 78       	b[r1 + 0] = r3 			  ## midi_ctrl_api.c:88:31
  10501c:    8f 68       	[r1 + 8] = r7 			  ## midi_ctrl_api.c:89:26
  10501e:    ff e1 1f f0 	call -510 <midi_ctrl_open : 104e24 >			  ## midi_ctrl_api.c:93:5
  105022:    27 68       	[r4 + 0] = r7 			  ## midi_ctrl_api.c:96:12
  105024:    01 2c       	r1 = [addr(64)]  <.GCPI41_11 : 105064 >			  ## midi_ctrl_api.c:98:5
  105026:    30 c6       	r0 = r6 			  ## midi_ctrl_api.c:98:5
  105028:    ff e1 7f 72 	call -4530 <regist_dac_channel : 103e7a >			  ## midi_ctrl_api.c:98:5
  10502c:    02 08       	goto 4 <midi_ctrl_decode_api+0xA2 : 105032 >
  10502e:    15 ea 14 90 	r5 = 36884 
  105032:    28 c6       	r0 = r5 			  ## midi_ctrl_api.c:101:1
  105034:    19 c0       	{pc, r9-r4} = [sp++] 			  ## midi_ctrl_api.c:101:1
  105036:    00 00       	nop			  ## midi_ctrl_api.c:101:1


.GCPI41_0:
  105038:    60 1c 00 00     < 7264 : 0x1C60 >

.GCPI41_1:
  10503c:    50 1e 00 00     < 7760 : 0x1E50 >

.GCPI41_2:
  105040:    68 ab 11 00     < 1157992 : 0x11AB68 >

.GCPI41_3:
  105044:    a8 4e 00 00     < 20136 : 0x4EA8 >

.GCPI41_4:
  105048:    c8 4e 00 00     < 20168 : 0x4EC8 >

.GCPI41_5:
  10504c:    c8 53 00 00     < 21448 : 0x53C8 >

.GCPI41_6:
  105050:    40 60 11 00     < 1138752 : 0x116040 >

.GCPI41_7:
  105054:    ce 5f 11 00     < 1138638 : 0x115FCE >

.GCPI41_8:
  105058:    34 63 00 00     < 25396 : 0x6334 >

.GCPI41_9:
  10505c:    3c 63 00 00     < 25404 : 0x633C >

.GCPI41_10:
  105060:    b8 5e 10 00     < 1072824 : 0x105EB8 >

.GCPI41_11:
  105064:    a0 0a 00 00     < 2720 : 0xAA0 >

midi_ctrl_need_dcbuf_size:
  105068:    10 ea 6c 0f 	r0 = 3948 			  ## midi_ctrl_api.c:161:0
  10506c:    20 00       	rts			  ## midi_ctrl_api.c:163:5


midi_ctrl_format_check:
  10506e:    00 80       	r0 = 0 			  ## midi_ctrl_api.c:140:0
  105070:    20 00       	rts			  ## midi_ctrl_api.c:141:5


G711_alaw2linear:
  105072:    40 f3 02 55 	r2 = r0 ^ 85 			  ## midi_synth.c:359:0
  105076:    51 a4       	r1 = r2 >> 4 			  ## midi_synth.c:366:42
  105078:    80 f3 11 07 	r1 = r1 & 7 			  ## midi_synth.c:367:2
  10507c:    12 a4       	r2 = r2 << 4 			  ## midi_synth.c:365:6
  10507e:    12 c9       	r2 = r2.b 			  ## midi_synth.c:365:6
  105080:    09 98       	cmp r1, 1			  ## midi_synth.c:367:2
  105082:    0a 10       	ifs (nzcv == 0) goto 20 <G711_alaw2linear+0x26 : 105098 >			  ## midi_synth.c:367:2
  105084:    01 98       	cmp r1, 0
  105086:    16 03       	ifs (nzcv != 0) {			  ## midi_synth.c:376:5
  105088:    0f f3 22 84 		r2 = r2 | 264 			  ## midi_synth.c:376:5
  10508c:    c9 d3       		r1 = r1 + -1 			  ## midi_synth.c:377:13
  10508e:    00 f7 21 01 		r1 = r2 << r1 
                               	} else {			  ## midi_synth.c:377:5
  105092:    00 f3 21 08 		r1 = r2 | 8 
                               	}			  ## midi_synth.c:370:5
  105096:    02 08       	goto 4 <G711_alaw2linear+0x2A : 10509c >			  ## midi_synth.c:370:5
  105098:    0f f3 21 84 	r1 = r2 | 264 			  ## midi_synth.c:373:5
  10509c:    82 c9       	r2 = r0.b (s) 			  ## midi_synth.c:380:17
  10509e:    88 dc       	r0 = -r1 			  ## midi_synth.c:380:40
  1050a0:    02 98       	cmp r2, 0			  ## midi_synth.c:380:10
  1050a2:    a0 03       	ifs (nzcv >= 0) {			  ## midi_synth.c:380:10
  1050a4:    01 c6       		r1 = r0 
                               	}			  ## midi_synth.c:380:10
  1050a6:    c8 c9       	r0 = r1.l (s) 			  ## midi_synth.c:380:2
  1050a8:    20 00       	rts			  ## midi_synth.c:380:2


get_char_nbit:
  1050aa:    00 fc 12 06 	r2 = r1 * 6 			  ## midi_synth.c:310:0
  1050ae:    53 a3       	r3 = r2 >> 3 			  ## midi_synth.c:313:24
  1050b0:    00 e7 01 03 	r1 = b[r0 + r3] 			  ## midi_synth.c:314:17
  1050b4:    c0 d4       	r0 = r0 + r3 
  1050b6:    00 5a       	r0 = b[r0 + 1] 			  ## midi_synth.c:314:48
  1050b8:    41 f6 01 08 	r1 <= insert(r0, p:8, l:8) 			  ## midi_synth.c:314:45
  1050bc:    00 f4 20 06 	tst r2, 6			  ## midi_synth.c:317:6
  1050c0:    12 03       	ifs (nzcv != 0) {			  ## midi_synth.c:316:14
  1050c2:    80 f3 20 06 		r0 = r2 & 6 			  ## midi_synth.c:316:14
  1050c6:    49 c9       		r1 = r1.l 			  ## midi_synth.c:319:13
  1050c8:    41 cf       		r1 >>= r0 
                               	}			  ## midi_synth.c:319:21
  1050ca:    80 f6 10 06 	r0 = sextra(r1, p:0, l:6) 			  ## midi_synth.c:324:12
  1050ce:    20 00       	rts			  ## midi_synth.c:326:2


adpcm_decoder_unit0:
  1050d0:    15 c2       	[--sp] = {rets, r5, r4} 			  ## midi_synth.c:415:0
  1050d2:    13 48       	r3 = [r2 + 0] 			  ## midi_synth.c:420:10
  1050d4:    03 06       	r3 *= r0 			  ## midi_synth.c:422:17
  1050d6:    0c 48       	r4 = [r1 + 0] 			  ## midi_synth.c:427:11
  1050d8:    e4 d4       	r4 = r4 + r3 			  ## midi_synth.c:427:11
  1050da:    0c 68       	[r1 + 0] = r4 			  ## midi_synth.c:427:11
  1050dc:    13 ea ff 7f 	r3 = 32767 			  ## midi_synth.c:427:11
  1050e0:    0c ef 40 00 	cmp r4, 32768			  ## midi_synth.c:428:6
  1050e4:    05 1a       	ifs (nzcv >= 0) goto 10 <adpcm_decoder_unit0+0x20 : 1050f0 >			  ## midi_synth.c:428:6
  1050e6:    93 ea 00 80 	r3 = -32768 
  1050ea:    05 2f       	r5 = [addr(112)]  <.GCPI46_2 : 10515c >			  ## midi_synth.c:430:11
  1050ec:    25 ce       	cmp r4, r5			  ## midi_synth.c:430:11
  1050ee:    01 1c       	ifs (nzcv > 0) goto 2 <adpcm_decoder_unit0+0x22 : 1050f2 >			  ## midi_synth.c:430:11
  1050f0:    0b 68       	[r1 + 0] = r3 
  1050f2:    c1 a7       	r1 = r0 >>> 7 			  ## midi_synth.c:433:12
  1050f4:    40 d4       	r0 = r0 + r1 			  ## midi_synth.c:433:12
  1050f6:    48 da       	r0 ^= r1 			  ## midi_synth.c:433:12
  1050f8:    80 c9       	r0 = r0.b (s) 			  ## midi_synth.c:433:12
  1050fa:    08 98       	cmp r0, 1			  ## midi_synth.c:439:6
  1050fc:    08 1b       	ifs (nzcv < 0) goto 16 <adpcm_decoder_unit0+0x3E : 10510e >			  ## midi_synth.c:439:6
  1050fe:    11 48       	r1 = [r2 + 0] 
  105100:    80 98       	cmp r0, 16			  ## midi_synth.c:441:7
  105102:    0f 1b       	ifs (nzcv < 0) goto 30 <adpcm_decoder_unit0+0x52 : 105122 >			  ## midi_synth.c:441:7
  105104:    00 a2       	r0 = r0 << 2 			  ## midi_synth.c:443:39
  105106:    03 2d       	r3 = [addr(80)]  <.GCPI46_1 : 105158 >			  ## midi_synth.c:443:23
  105108:    c0 d4       	r0 = r0 + r3 			  ## midi_synth.c:443:23
  10510a:    40 4c       	r0 = [r0 + -60] 			  ## midi_synth.c:443:23
  10510c:    16 08       	goto 44 <adpcm_decoder_unit0+0x6A : 10513a >			  ## midi_synth.c:443:23
  10510e:    11 48       	r1 = [r2 + 0] 
  105110:    80 9f       	cmp r0, -16			  ## midi_synth.c:454:7
  105112:    0e 1c       	ifs (nzcv > 0) goto 28 <adpcm_decoder_unit0+0x60 : 105130 >			  ## midi_synth.c:454:7
  105114:    8b 87       	r3 = -15 			  ## midi_synth.c:456:38
  105116:    18 d6       	r0 = r3 - r0 			  ## midi_synth.c:456:38
  105118:    00 a2       	r0 = r0 << 2 			  ## midi_synth.c:456:23
  10511a:    c3 2b       	r3 = [addr(60)]  <.GCPI46_1 : 105158 >			  ## midi_synth.c:456:23
  10511c:    20 e7 30 00 	r0 = [r3 + r0] 			  ## midi_synth.c:456:23
  105120:    0c 08       	goto 24 <adpcm_decoder_unit0+0x6A : 10513a >			  ## midi_synth.c:456:23
  105122:    20 ee 00 0f 	r0 = 15 - r0 			  ## midi_synth.c:447:50
  105126:    00 a1       	r0 = r0 << 1 			  ## midi_synth.c:447:23
  105128:    c3 2a       	r3 = [addr(44)]  <.GCPI46_0 : 105154 >			  ## midi_synth.c:447:23
  10512a:    90 e7 30 00 	r0 = h[r3 + r0] (s) 			  ## midi_synth.c:447:23
  10512e:    05 08       	goto 10 <adpcm_decoder_unit0+0x6A : 10513a >			  ## midi_synth.c:447:23
  105130:    00 a1       	r0 = r0 << 1 			  ## midi_synth.c:460:50
  105132:    03 2a       	r3 = [addr(32)]  <.GCPI46_0 : 105154 >			  ## midi_synth.c:460:23
  105134:    c0 d4       	r0 = r0 + r3 			  ## midi_synth.c:460:23
  105136:    90 e8 00 87 	r0 = h[r0 + 30] (s) 			  ## midi_synth.c:460:23
  10513a:    08 06       	r0 *= r1 
  10513c:    c1 ae       	r1 = r0 >>> 14 
  10513e:    11 68       	[r2 + 0] = r1 
  105140:    20 80       	r0 = 4 
  105142:    21 98       	cmp r1, 4			  ## midi_synth.c:464:6
  105144:    05 1b       	ifs (nzcv < 0) goto 10 <adpcm_decoder_unit0+0x80 : 105150 >			  ## midi_synth.c:464:6
  105146:    10 ea 00 10 	r0 = 4096 
  10514a:    0d ef 10 80 	cmp r1, 4096			  ## midi_synth.c:468:11
  10514e:    01 1d       	ifs (nzcv <= 0) goto 2 <adpcm_decoder_unit0+0x82 : 105152 >			  ## midi_synth.c:468:11
  105150:    10 68       	[r2 + 0] = r0 
  105152:    15 c0       	{pc, r5, r4} = [sp++] 


.GCPI46_0:
  105154:    b0 98 11 00     < 1153200 : 0x1198B0 >

.GCPI46_1:
  105158:    5c 97 11 00     < 1152860 : 0x11975C >

.GCPI46_2:
  10515c:    ff 7f ff ff     < 4294934527 : 0xFFFF7FFF >

adpcm_decoder_unit4bit:
  105160:    16 c2       	[--sp] = {rets, r6-r4} 			  ## midi_synth.c:500:0
  105162:    13 48       	r3 = [r2 + 0] 			  ## midi_synth.c:505:24
  105164:    1b a1       	r3 = r3 << 1 			  ## midi_synth.c:505:9
  105166:    44 2e       	r4 = [addr(100)]  <.GCPI47_0 : 1051cc >			  ## midi_synth.c:505:9
  105168:    90 e7 43 03 	r3 = h[r4 + r3] (s) 			  ## midi_synth.c:505:9
  10516c:    80 f6 04 41 	r4 = sextra(r0, p:2, l:1) 			  ## midi_synth.c:508:12
  105170:    9c da       	r4 &= r3 			  ## midi_synth.c:508:6
  105172:    dd a3       	r5 = r3 >>> 3 			  ## midi_synth.c:511:18
  105174:    64 d5       	r4 = r4 + r5 			  ## midi_synth.c:509:6
  105176:    dd a1       	r5 = r3 >>> 1 			  ## midi_synth.c:509:33
  105178:    80 f6 06 21 	r6 = sextra(r0, p:1, l:1) 			  ## midi_synth.c:509:12
  10517c:    b5 da       	r5 &= r6 			  ## midi_synth.c:509:6
  10517e:    64 d5       	r4 = r4 + r5 			  ## midi_synth.c:510:6
  105180:    db a2       	r3 = r3 >>> 2 			  ## midi_synth.c:510:33
  105182:    80 f3 05 01 	r5 = r0 & 1 			  ## midi_synth.c:510:12
  105186:    ad dc       	r5 = -r5 			  ## midi_synth.c:510:12
  105188:    ab da       	r3 &= r5 			  ## midi_synth.c:510:6
  10518a:    e4 d4       	r4 = r4 + r3 			  ## midi_synth.c:511:9
  10518c:    a3 dc       	r3 = -r4 			  ## midi_synth.c:513:6
  10518e:    00 f4 00 08 	tst r0, 8			  ## midi_synth.c:513:6
  105192:    00 03       	ifs (nzcv == 0) {			  ## midi_synth.c:513:6
  105194:    23 c6       		r3 = r4 
                               	}			  ## midi_synth.c:513:6
  105196:    0c 48       	r4 = [r1 + 0] 			  ## midi_synth.c:513:6
  105198:    e4 d4       	r4 = r4 + r3 			  ## midi_synth.c:513:6
  10519a:    0c 68       	[r1 + 0] = r4 			  ## midi_synth.c:513:6
  10519c:    13 ea ff 7f 	r3 = 32767 			  ## midi_synth.c:513:6
  1051a0:    0c ef 40 00 	cmp r4, 32768			  ## midi_synth.c:519:6
  1051a4:    05 1a       	ifs (nzcv >= 0) goto 10 <adpcm_decoder_unit4bit+0x50 : 1051b0 >			  ## midi_synth.c:519:6
  1051a6:    93 ea 00 80 	r3 = -32768 
  1051aa:    85 2a       	r5 = [addr(40)]  <.GCPI47_2 : 1051d4 >			  ## midi_synth.c:521:11
  1051ac:    25 ce       	cmp r4, r5			  ## midi_synth.c:521:11
  1051ae:    01 1c       	ifs (nzcv > 0) goto 2 <adpcm_decoder_unit4bit+0x52 : 1051b2 >			  ## midi_synth.c:521:11
  1051b0:    0b 68       	[r1 + 0] = r3 
  1051b2:    c1 29       	r1 = [addr(28)]  <.GCPI47_1 : 1051d0 >			  ## midi_synth.c:525:14
  1051b4:    80 e7 10 00 	r0 = b[r1 + r0] (s) 			  ## midi_synth.c:525:14
  1051b8:    11 48       	r1 = [r2 + 0] 			  ## midi_synth.c:525:11
  1051ba:    40 d4       	r0 = r0 + r1 			  ## midi_synth.c:525:11
  1051bc:    00 98       	cmp r0, 0			  ## midi_synth.c:526:6
  1051be:    d0 03       	ifs (nzcv <= 0) {			  ## midi_synth.c:526:6
  1051c0:    00 80       		r0 = 0 
                               	}			  ## midi_synth.c:526:6
  1051c2:    c0 9a       	cmp r0, 88			  ## midi_synth.c:528:6
  1051c4:    a0 03       	ifs (nzcv >= 0) {			  ## midi_synth.c:528:6
  1051c6:    c0 82       		r0 = 88 
                               	}			  ## midi_synth.c:528:6
  1051c8:    10 68       	[r2 + 0] = r0 			  ## midi_synth.c:525:11
  1051ca:    16 c0       	{pc, r6-r4} = [sp++] 			  ## midi_synth.c:525:11


.GCPI47_0:
  1051cc:    a8 96 11 00     < 1152680 : 0x1196A8 >

.GCPI47_1:
  1051d0:    80 d9 11 00     < 1169792 : 0x11D980 >

.GCPI47_2:
  1051d4:    ff 7f ff ff     < 4294934527 : 0xFFFF7FFF >

midi_gen_sample:
  1051d8:    1e c2       	[--sp] = {rets, r14-r4} 			  ## midi_synth.c:597:0
  1051da:    30 c5       	[--sp] = {macch, maccl} 			  ## midi_synth.c:597:0
  1051dc:    a8 cd       	sp += -88 			  ## midi_synth.c:597:0
  1051de:    c2 62       	[sp+ 44] = r2 			  ## midi_synth.c:597:0
  1051e0:    04 ed 02 ec 	r2 = r0 + 1260 			  ## midi_synth.c:597:0
  1051e4:    20 e8 2b 00 	r11 = [r2 + 0] 			  ## midi_synth.c:604:39
  1051e8:    00 fc 1c e0 	r12 = r1 * 224 			  ## midi_synth.c:606:23
  1051ec:    00 ee b5 0c 	r5 = r11 + r12 			  ## midi_synth.c:606:23
  1051f0:    c5 63       	[sp+ 60] = r5 			  ## midi_synth.c:606:23
  1051f2:    04 e8 53 c1 	r3 = b[++ r5 = 7] 			  ## midi_synth.c:623:16
  1051f6:    8a 80       	r2 = 17 			  ## midi_synth.c:611:41
  1051f8:    20 e7 52 02 	r2 = [r5 + r2] 			  ## midi_synth.c:611:41
  1051fc:    c2 64       	[sp+ 76] = r2 			  ## midi_synth.c:606:23
  1051fe:    aa 81       	r2 = 53 			  ## midi_synth.c:606:23
  105200:    20 e7 52 02 	r2 = [r5 + r2] 			  ## midi_synth.c:606:23
  105204:    82 62       	[sp+ 40] = r2 
  105206:    80 63       	[sp+ 56] = r0 
  105208:    03 ed 09 3c 	r9 = r0 + 828 			  ## midi_synth.c:616:47
  10520c:    03 21       	if (r3 == 0) goto 32 <midi_gen_sample+0x56 : 10522e >
  10520e:    98 c9       	r0 = r3.b (s) 			  ## midi_synth.c:623:16
  105210:    1a a1       	r2 = r3 << 1 			  ## midi_synth.c:631:21
  105212:    80 f3 2a 0e 	r10 = r2 & 14 			  ## midi_synth.c:631:21
  105216:    30 ee a2 00 	r2 = -r10 			  ## midi_synth.c:635:14
  10521a:    42 63       	[sp+ 52] = r2 			  ## midi_synth.c:633:7
  10521c:    00 98       	cmp r0, 0			  ## midi_synth.c:633:7
  10521e:    a0 03       	ifs (nzcv >= 0) {			  ## midi_synth.c:633:7
  105220:    60 e9 0a 0d 		[sp+ 52] = r10 
                               	}			  ## midi_synth.c:633:7
  105224:    08 a1       	r0 = r1 << 1 			  ## midi_synth.c:625:19
  105226:    88 cb       	r0 += r9 			  ## midi_synth.c:625:19
  105228:    00 f6 32 64 	r2 = uextra(r3, p:3, l:4) 			  ## midi_synth.c:629:24
  10522c:    06 08       	goto 12 <midi_gen_sample+0x62 : 10523a >			  ## midi_synth.c:629:24
  10522e:    00 80       	r0 = 0 
  105230:    40 63       	[sp+ 52] = r0 
  105232:    88 c6       	r0 = r9 
  105234:    52 ea 00 00 	r10 = 0 
  105238:    02 80       	r2 = 0 
  10523a:    82 61       	[sp+ 24] = r2 
  10523c:    c6 43       	r6 = [sp+ 60] 
  10523e:    74 58       	r4 = b[r6 + 4] 			  ## midi_synth.c:644:12
  105240:    00 fc 42 07 	r2 = r4 * 7 			  ## midi_synth.c:644:12
  105244:    87 43       	r7 = [sp+ 56] 			  ## midi_synth.c:644:12
  105246:    d2 d5       	r2 = r2 + r7 			  ## midi_synth.c:644:12
  105248:    13 ea 4a 04 	r3 = 1098 			  ## midi_synth.c:644:12
  10524c:    00 e7 22 03 	r2 = b[r2 + r3] 			  ## midi_synth.c:644:12
  105250:    02 63       	[sp+ 48] = r2 
  105252:    05 ed 72 e0 	r2 = r7 + 1504 
  105256:    13 5c       	r3 = b[r2 + 2] 			  ## midi_synth.c:645:19
  105258:    36 49       	r6 = [r6 + 16] 			  ## midi_synth.c:641:30
  10525a:    46 62       	[sp+ 36] = r6 
  10525c:    06 50       	r6 = h[r0 + 0] 
  10525e:    23 21       	if (r3 == 0) goto 36 <midi_gen_sample+0xAC : 105284 >
  105260:    10 58       	r0 = b[r2 + 0] 			  ## midi_synth.c:647:27
  105262:    58 20       	if (r0 != 0) goto 10 <midi_gen_sample+0x96 : 10526e >			  ## midi_synth.c:647:27
  105264:    10 ea b8 00 	r0 = 184 			  ## midi_synth.c:653:62
  105268:    c2 43       	r2 = [sp+ 60] 			  ## midi_synth.c:653:25
  10526a:    00 e7 24 00 	r4 = b[r2 + r0] 			  ## midi_synth.c:653:25
  10526e:    20 a1       	r0 = r4 << 1 
  105270:    82 43       	r2 = [sp+ 56] 
  105272:    80 d4       	r0 = r0 + r2 
  105274:    12 ea c0 05 	r2 = 1472 
  105278:    10 e7 00 02 	r0 = h[r0 + r2] 
  10527c:    02 43       	r2 = [sp+ 48] 
  10527e:    10 06       	r0 *= r2 
  105280:    40 ac       	r0 = r0 >> 12 
  105282:    00 63       	[sp+ 48] = r0 
  105284:    c2 43       	r2 = [sp+ 60] 			  ## midi_synth.c:657:32
  105286:    24 e8 28 05 	r8 = [++ r2 = 20] 			  ## midi_synth.c:657:32
  10528a:    50 59       	r0 = b[r2 + -12] 			  ## midi_synth.c:659:16
  10528c:    c1 60       	[sp+ 12] = r1 			  ## midi_synth.c:659:6
  10528e:    85 60       	[sp+ 8] = r5 			  ## midi_synth.c:659:6
  105290:    60 e9 09 01 	[sp+ 4] = r9 			  ## midi_synth.c:659:6
  105294:    60 e9 0a 00 	[sp] = r10 			  ## midi_synth.c:659:6
  105298:    06 64       	[sp+ 64] = r6 			  ## midi_synth.c:659:6
  10529a:    02 61       	[sp+ 16] = r2 			  ## midi_synth.c:659:6
  10529c:    00 98       	cmp r0, 0			  ## midi_synth.c:659:6
  10529e:    00 fb 00 12 	ifs (nzcv == 0) goto 576 <midi_gen_sample+0x30A : 1054e2 >			  ## midi_synth.c:659:6
  1052a2:    c0 42       	r0 = [sp+ 44] 			  ## midi_synth.c:661:3
  1052a4:    08 98       	cmp r0, 1			  ## midi_synth.c:661:3
  1052a6:    00 fb bb 1d 	ifs (nzcv < 0) goto 950 <midi_gen_sample+0x488 : 105660 >			  ## midi_synth.c:661:3
  1052aa:    c0 43       	r0 = [sp+ 60] 
  1052ac:    00 ed 01 30 	r1 = r0 + 48 
  1052b0:    01 65       	[sp+ 80] = r1 
  1052b2:    00 ed 01 b4 	r1 = r0 + 180 
  1052b6:    41 64       	[sp+ 68] = r1 
  1052b8:    00 ed 06 b6 	r6 = r0 + 182 
  1052bc:    00 ed 01 2c 	r1 = r0 + 44 
  1052c0:    41 65       	[sp+ 84] = r1 
  1052c2:    00 ed 0a b0 	r10 = r0 + 176 
  1052c6:    00 ed 05 ac 	r5 = r0 + 172 
  1052ca:    00 ed 09 aa 	r9 = r0 + 170 
  1052ce:    00 ed 0b a8 	r11 = r0 + 168 
  1052d2:    00 ed 01 1d 	r1 = r0 + 29 
  1052d6:    01 62       	[sp+ 32] = r1 
  1052d8:    00 ed 0c 34 	r12 = r0 + 52 
  1052dc:    80 41       	r0 = [sp+ 24] 
  1052de:    20 ee 00 10 	r0 = 16 - r0 
  1052e2:    00 ad       	r0 = r0 << 13 
  1052e4:    40 61       	[sp+ 20] = r0 
  1052e6:    55 ea 00 00 	r13 = 0 
  1052ea:    86 64       	[sp+ 72] = r6 
  1052ec:    20 e8 c0 00 	r0 = [r12 + 0] 			  ## midi_synth.c:665:33
  1052f0:    e0 f7 8e 0d 	r14 = r8 >>> 13 			  ## midi_synth.c:665:33
  1052f4:    b0 ce       	cmp r14, r0			  ## midi_synth.c:665:4
  1052f6:    03 1a       	ifs (nzcv >= 0) goto 6 <midi_gen_sample+0x126 : 1052fe >			  ## midi_synth.c:665:4
  1052f8:    87 c6       	r7 = r8 
  1052fa:    c4 44       	r4 = [sp+ 76] 
  1052fc:    0e 08       	goto 28 <midi_gen_sample+0x142 : 10531a >
  1052fe:    01 45       	r1 = [sp+ 80] 
  105300:    09 48       	r1 = [r1 + 0] 
  105302:    09 ad       	r1 = r1 << 13 
  105304:    8a dc       	r2 = -r1 			  ## midi_synth.c:665:4
  105306:    c4 44       	r4 = [sp+ 76] 			  ## midi_synth.c:665:4
  105308:    40 ee 87 01 	r7 = r8 - r1 			  ## midi_synth.c:667:17
  10530c:    00 ee 23 08 	r3 = r2 + r8 
  105310:    e0 f7 3e 0d 	r14 = r3 >>> 13 
  105314:    b0 ce       	cmp r14, r0			  ## midi_synth.c:665:4
  105316:    78 c6       	r8 = r7 			  ## midi_synth.c:665:4
  105318:    f7 1a       	ifs (nzcv >= 0) goto -18 <midi_gen_sample+0x130 : 105308 >			  ## midi_synth.c:665:4
  10531a:    10 ea ff 1f 	r0 = 8191 
  10531e:    80 f0 72 00 	r2 = r7 & r0 
  105322:    00 42       	r0 = [sp+ 32] 			  ## midi_synth.c:672:18
  105324:    00 58       	r0 = b[r0 + 0] 			  ## midi_synth.c:672:18
  105326:    08 98       	cmp r0, 1			  ## midi_synth.c:672:8
  105328:    48 10       	ifs (nzcv == 0) goto 144 <midi_gen_sample+0x1E2 : 1053ba >			  ## midi_synth.c:672:8
  10532a:    10 98       	cmp r0, 2
  10532c:    20 e9 08 11 	r8 = [sp+ 68] 
  105330:    4c 10       	ifs (nzcv == 0) goto 152 <midi_gen_sample+0x1F2 : 1053ca >
  105332:    18 98       	cmp r0, 3
  105334:    00 fb 91 08 	ifs (nzcv != 0) goto 274 <midi_gen_sample+0x272 : 10544a >
  105338:    c2 61       	[sp+ 28] = r2 
  10533a:    90 e8 b0 00 	r0 = h[r11 + 0] (s) 			  ## midi_synth.c:708:24
  10533e:    b0 ce       	cmp r14, r0			  ## midi_synth.c:708:5
  105340:    7e 10       	ifs (nzcv == 0) goto 252 <midi_gen_sample+0x266 : 10543e >			  ## midi_synth.c:708:5
  105342:    40 c9       	r0 = r0.l 			  ## midi_synth.c:708:34
  105344:    29 48       	r1 = [r5 + 0] 			  ## midi_synth.c:710:36
  105346:    50 e8 91 00 	h[r9 + 0] = r1 			  ## midi_synth.c:710:24
  10534a:    c2 c9       	r2 = r0.l (s) 			  ## midi_synth.c:711:69
  10534c:    d0 a1       	r0 = r2 >>> 1 			  ## midi_synth.c:333:24
  10534e:    00 e7 41 00 	r1 = b[r4 + r0] 			  ## midi_synth.c:334:12
  105352:    48 a4       	r0 = r1 >> 4 			  ## midi_synth.c:342:14
  105354:    c0 f3 11 f0 	r1 = r1 & (~240) 			  ## midi_synth.c:338:13
  105358:    00 f4 20 01 	tst r2, 1			  ## midi_synth.c:336:6
  10535c:    10 03       	ifs (nzcv != 0) {			  ## midi_synth.c:336:6
  10535e:    08 c6       		r0 = r1 
                               	}			  ## midi_synth.c:336:6
  105360:    29 c6       	r1 = r5 			  ## midi_synth.c:711:6
  105362:    92 c6       	r2 = r10 			  ## midi_synth.c:711:6
  105364:    ff e1 cf ef 	call -520 <adpcm_decoder_unit4bit : 105160 >			  ## midi_synth.c:711:6
  105368:    10 e8 b0 00 	r0 = h[r11 + 0] 			  ## midi_synth.c:712:28
  10536c:    40 d0       	r0 = r0 + 1 			  ## midi_synth.c:712:28
  10536e:    50 e8 b0 00 	h[r11 + 0] = r0 			  ## midi_synth.c:712:28
  105372:    c1 c9       	r1 = r0.l (s) 			  ## midi_synth.c:713:10
  105374:    42 45       	r2 = [sp+ 84] 			  ## midi_synth.c:713:46
  105376:    12 48       	r2 = [r2 + 0] 			  ## midi_synth.c:713:46
  105378:    0a ce       	cmp r1, r2			  ## midi_synth.c:713:10
  10537a:    03 03       	ifs (nzcv == 0) {			  ## midi_synth.c:715:40
  10537c:    20 e8 a2 00 		r2 = [r10 + 0] 			  ## midi_synth.c:715:40
  105380:    32 70       		h[r6 + 0] = r2 			  ## midi_synth.c:715:28
  105382:    2a 48       		r2 = [r5 + 0] 			  ## midi_synth.c:716:42
  105384:    50 e8 82 00 		h[r8 + 0] = r2 
                               	}			  ## midi_synth.c:716:30
  105388:    20 e8 c2 00 	r2 = [r12 + 0] 			  ## midi_synth.c:718:49
  10538c:    0a ce       	cmp r1, r2			  ## midi_synth.c:718:6
  10538e:    11 1b       	ifs (nzcv < 0) goto 34 <midi_gen_sample+0x1DA : 1053b2 >			  ## midi_synth.c:718:6
  105390:    90 e8 83 00 	r3 = h[r8 + 0] (s) 
  105394:    90 e8 66 00 	r6 = h[r6 + 0] (s) 
  105398:    00 45       	r0 = [sp+ 80] 
  10539a:    04 48       	r4 = [r0 + 0] 
  10539c:    08 d7       	r0 = r1 - r4 			  ## midi_synth.c:720:30
  10539e:    c1 c9       	r1 = r0.l (s) 			  ## midi_synth.c:718:13
  1053a0:    0a ce       	cmp r1, r2			  ## midi_synth.c:718:6
  1053a2:    fc 1a       	ifs (nzcv >= 0) goto -8 <midi_gen_sample+0x1C4 : 10539c >			  ## midi_synth.c:718:6
  1053a4:    50 e8 b0 00 	h[r11 + 0] = r0 			  ## midi_synth.c:718:23
  1053a8:    60 e8 a6 00 	[r10 + 0] = r6 			  ## midi_synth.c:721:27
  1053ac:    2b 68       	[r5 + 0] = r3 			  ## midi_synth.c:722:29
  1053ae:    c4 44       	r4 = [sp+ 76] 			  ## midi_synth.c:722:29
  1053b0:    86 44       	r6 = [sp+ 72] 			  ## midi_synth.c:722:29
  1053b2:    c1 c9       	r1 = r0.l (s) 			  ## midi_synth.c:708:24
  1053b4:    b1 ce       	cmp r14, r1			  ## midi_synth.c:708:5
  1053b6:    c6 11       	ifs (nzcv != 0) goto -116 <midi_gen_sample+0x16C : 105344 >			  ## midi_synth.c:708:5
  1053b8:    42 08       	goto 132 <midi_gen_sample+0x266 : 10543e >			  ## midi_synth.c:708:5
  1053ba:    90 e8 b0 00 	r0 = h[r11 + 0] (s) 			  ## midi_synth.c:674:21
  1053be:    b0 ce       	cmp r14, r0			  ## midi_synth.c:674:9
  1053c0:    4c 11       	ifs (nzcv != 0) goto 152 <midi_gen_sample+0x282 : 10545a >			  ## midi_synth.c:674:9
  1053c2:    28 48       	r0 = [r5 + 0] 
  1053c4:    10 e8 93 00 	r3 = h[r9 + 0] 
  1053c8:    59 08       	goto 178 <midi_gen_sample+0x2A4 : 10547c >
  1053ca:    c2 61       	[sp+ 28] = r2 
  1053cc:    90 e8 b0 00 	r0 = h[r11 + 0] (s) 			  ## midi_synth.c:686:24
  1053d0:    b0 ce       	cmp r14, r0			  ## midi_synth.c:686:5
  1053d2:    35 10       	ifs (nzcv == 0) goto 106 <midi_gen_sample+0x266 : 10543e >			  ## midi_synth.c:686:5
  1053d4:    40 c9       	r0 = r0.l 			  ## midi_synth.c:686:34
  1053d6:    29 48       	r1 = [r5 + 0] 			  ## midi_synth.c:688:36
  1053d8:    50 e8 91 00 	h[r9 + 0] = r1 			  ## midi_synth.c:688:24
  1053dc:    c1 c9       	r1 = r0.l (s) 			  ## midi_synth.c:689:66
  1053de:    20 c6       	r0 = r4 			  ## midi_synth.c:689:26
  1053e0:    ff e1 3f e6 	call -826 <get_char_nbit : 1050aa >			  ## midi_synth.c:689:26
  1053e4:    29 c6       	r1 = r5 			  ## midi_synth.c:689:6
  1053e6:    92 c6       	r2 = r10 			  ## midi_synth.c:689:6
  1053e8:    ff e1 2f e7 	call -796 <adpcm_decoder_unit0 : 1050d0 >			  ## midi_synth.c:689:6
  1053ec:    10 e8 b0 00 	r0 = h[r11 + 0] 			  ## midi_synth.c:690:28
  1053f0:    40 d0       	r0 = r0 + 1 			  ## midi_synth.c:690:28
  1053f2:    50 e8 b0 00 	h[r11 + 0] = r0 			  ## midi_synth.c:690:28
  1053f6:    c1 c9       	r1 = r0.l (s) 			  ## midi_synth.c:691:10
  1053f8:    42 45       	r2 = [sp+ 84] 			  ## midi_synth.c:691:46
  1053fa:    12 48       	r2 = [r2 + 0] 			  ## midi_synth.c:691:46
  1053fc:    0a ce       	cmp r1, r2			  ## midi_synth.c:691:10
  1053fe:    03 03       	ifs (nzcv == 0) {			  ## midi_synth.c:693:40
  105400:    20 e8 a2 00 		r2 = [r10 + 0] 			  ## midi_synth.c:693:40
  105404:    32 70       		h[r6 + 0] = r2 			  ## midi_synth.c:693:28
  105406:    2a 48       		r2 = [r5 + 0] 			  ## midi_synth.c:694:42
  105408:    50 e8 82 00 		h[r8 + 0] = r2 
                               	}			  ## midi_synth.c:694:30
  10540c:    20 e8 c2 00 	r2 = [r12 + 0] 			  ## midi_synth.c:696:49
  105410:    0a ce       	cmp r1, r2			  ## midi_synth.c:696:6
  105412:    12 1b       	ifs (nzcv < 0) goto 36 <midi_gen_sample+0x260 : 105438 >			  ## midi_synth.c:696:6
  105414:    90 e8 83 00 	r3 = h[r8 + 0] (s) 
  105418:    90 e8 68 00 	r8 = h[r6 + 0] (s) 
  10541c:    00 45       	r0 = [sp+ 80] 
  10541e:    06 48       	r6 = [r0 + 0] 
  105420:    88 d7       	r0 = r1 - r6 			  ## midi_synth.c:698:30
  105422:    c1 c9       	r1 = r0.l (s) 			  ## midi_synth.c:696:13
  105424:    0a ce       	cmp r1, r2			  ## midi_synth.c:696:6
  105426:    fc 1a       	ifs (nzcv >= 0) goto -8 <midi_gen_sample+0x248 : 105420 >			  ## midi_synth.c:696:6
  105428:    50 e8 b0 00 	h[r11 + 0] = r0 			  ## midi_synth.c:696:23
  10542c:    60 e8 a8 00 	[r10 + 0] = r8 			  ## midi_synth.c:699:27
  105430:    2b 68       	[r5 + 0] = r3 			  ## midi_synth.c:700:29
  105432:    20 e9 08 11 	r8 = [sp+ 68] 			  ## midi_synth.c:700:29
  105436:    86 44       	r6 = [sp+ 72] 			  ## midi_synth.c:700:29
  105438:    c1 c9       	r1 = r0.l (s) 			  ## midi_synth.c:686:24
  10543a:    b1 ce       	cmp r14, r1			  ## midi_synth.c:686:5
  10543c:    cc 11       	ifs (nzcv != 0) goto -104 <midi_gen_sample+0x1FE : 1053d6 >			  ## midi_synth.c:686:5
  10543e:    90 e8 91 00 	r1 = h[r9 + 0] (s) 
  105442:    28 48       	r0 = [r5 + 0] 
  105444:    40 d6       	r0 = r0 - r1 
  105446:    c2 41       	r2 = [sp+ 28] 
  105448:    1b 08       	goto 54 <midi_gen_sample+0x2A8 : 105480 >
  10544a:    20 f7 e0 01 	r0 = r14 << 1 			  ## midi_synth.c:730:25
  10544e:    90 e7 41 00 	r1 = h[r4 + r0] (s) 			  ## midi_synth.c:730:13
  105452:    00 d5       	r0 = r0 + r4 			  ## midi_synth.c:730:13
  105454:    90 e8 00 80 	r0 = h[r0 + 2] (s) 			  ## midi_synth.c:730:74
  105458:    12 08       	goto 36 <midi_gen_sample+0x2A6 : 10547e >			  ## midi_synth.c:730:74
  10545a:    50 e8 be 00 	h[r11 + 0] = r14 			  ## midi_synth.c:676:29
  10545e:    00 e7 40 0e 	r0 = b[r4 + r14] 			  ## midi_synth.c:677:26
  105462:    50 c6       	r8 = r2 			  ## midi_synth.c:677:26
  105464:    ff e1 5f e0 	call -1014 <G711_alaw2linear : 105072 >			  ## midi_synth.c:677:26
  105468:    03 c6       	r3 = r0 			  ## midi_synth.c:677:26
  10546a:    50 e8 93 00 	h[r9 + 0] = r3 			  ## midi_synth.c:677:24
  10546e:    00 ee 40 0e 	r0 = r4 + r14 			  ## midi_synth.c:677:43
  105472:    00 5a       	r0 = b[r0 + 1] 			  ## midi_synth.c:678:30
  105474:    ff e1 df df 	call -1030 <G711_alaw2linear : 105072 >			  ## midi_synth.c:678:30
  105478:    82 c6       	r2 = r8 			  ## midi_synth.c:678:30
  10547a:    28 68       	[r5 + 0] = r0 			  ## midi_synth.c:678:28
  10547c:    d9 c9       	r1 = r3.l (s) 			  ## midi_synth.c:680:13
  10547e:    40 d6       	r0 = r0 - r1 
  105480:    10 06       	r0 *= r2 
  105482:    c0 ad       	r0 = r0 >>> 13 
  105484:    40 d4       	r0 = r0 + r1 
  105486:    01 43       	r1 = [sp+ 48] 			  ## midi_synth.c:735:4
  105488:    08 06       	r0 *= r1 			  ## midi_synth.c:735:4
  10548a:    20 f7 d1 01 	r1 = r13 << 1 			  ## midi_synth.c:735:4
  10548e:    c2 43       	r2 = [sp+ 60] 			  ## midi_synth.c:735:4
  105490:    89 d4       	r1 = r1 + r2 			  ## midi_synth.c:735:4
  105492:    10 e8 11 99 	r1 = h[r1 + 102] 			  ## midi_synth.c:735:4
  105496:    c1 06       	macc = r0 * r1 (s) 			  ## midi_synth.c:735:4
  105498:    c0 f9 00 0e 	r0 = macc >>> 14 			  ## midi_synth.c:735:4
  10549c:    41 43       	r1 = [sp+ 52] 
  10549e:    b1 20       	if (r1 == 0) goto 22 <midi_gen_sample+0x2DE : 1054b6 >
  1054a0:    02 44       	r2 = [sp+ 64] 
  1054a2:    52 d4       	r2 = r2 + r1 			  ## midi_synth.c:739:19
  1054a4:    02 64       	[sp+ 64] = r2 
  1054a6:    81 41       	r1 = [sp+ 24] 			  ## midi_synth.c:740:32
  1054a8:    11 06       	r1 *= r2 			  ## midi_synth.c:740:32
  1054aa:    42 41       	r2 = [sp+ 20] 			  ## midi_synth.c:740:43
  1054ac:    89 d4       	r1 = r1 + r2 			  ## midi_synth.c:740:43
  1054ae:    c9 a4       	r1 = r1 >>> 4 			  ## midi_synth.c:740:68
  1054b0:    c1 06       	macc = r0 * r1 (s) 			  ## midi_synth.c:741:5
  1054b2:    c0 f9 00 0d 	r0 = macc >>> 13 			  ## midi_synth.c:741:5
  1054b6:    20 f7 d1 02 	r1 = r13 << 2 			  ## midi_synth.c:745:58
  1054ba:    82 43       	r2 = [sp+ 56] 			  ## midi_synth.c:745:58
  1054bc:    89 d4       	r1 = r1 + r2 			  ## midi_synth.c:745:58
  1054be:    05 ed 11 30 	r1 = r1 + 1328 			  ## midi_synth.c:745:58
  1054c2:    0a 48       	r2 = [r1 + 0] 			  ## midi_synth.c:745:58
  1054c4:    83 42       	r3 = [sp+ 40] 			  ## midi_synth.c:745:42
  1054c6:    18 06       	r0 *= r3 			  ## midi_synth.c:745:42
  1054c8:    c0 a2       	r0 = r0 >>> 2 			  ## midi_synth.c:745:50
  1054ca:    80 d4       	r0 = r0 + r2 			  ## midi_synth.c:745:56
  1054cc:    08 68       	[r1 + 0] = r0 			  ## midi_synth.c:745:32
  1054ce:    40 42       	r0 = [sp+ 36] 			  ## midi_synth.c:746:16
  1054d0:    00 ee 78 00 	r8 = r7 + r0 			  ## midi_synth.c:746:16
  1054d4:    00 ed dd 01 	r13 = r13 + 1 			  ## midi_synth.c:661:40
  1054d8:    c0 42       	r0 = [sp+ 44] 			  ## midi_synth.c:661:3
  1054da:    a8 ce       	cmp r13, r0			  ## midi_synth.c:661:3
  1054dc:    ff fb 61 f0 	ifs (nzcv != 0) goto -500 <midi_gen_sample+0x114 : 1052ec >			  ## midi_synth.c:661:3
  1054e0:    bf 08       	goto 382 <midi_gen_sample+0x488 : 105660 >			  ## midi_synth.c:661:3
  1054e2:    c0 42       	r0 = [sp+ 44] 			  ## midi_synth.c:752:3
  1054e4:    08 98       	cmp r0, 1			  ## midi_synth.c:752:3
  1054e6:    00 fb bb 0b 	ifs (nzcv < 0) goto 374 <midi_gen_sample+0x488 : 105660 >			  ## midi_synth.c:752:3
  1054ea:    60 e9 0c 12 	[sp+ 72] = r12 
  1054ee:    60 e9 0b 14 	[sp+ 80] = r11 
  1054f2:    c0 43       	r0 = [sp+ 60] 
  1054f4:    00 ed 0e b0 	r14 = r0 + 176 
  1054f8:    00 ed 05 ac 	r5 = r0 + 172 
  1054fc:    00 ed 07 aa 	r7 = r0 + 170 
  105500:    00 ed 06 a8 	r6 = r0 + 168 
  105504:    00 ed 0b 1d 	r11 = r0 + 29 
  105508:    00 ed 0c 28 	r12 = r0 + 40 
  10550c:    80 41       	r0 = [sp+ 24] 
  10550e:    20 ee 00 10 	r0 = 16 - r0 
  105512:    00 ad       	r0 = r0 << 13 
  105514:    40 65       	[sp+ 84] = r0 
  105516:    04 80       	r4 = 0 
  105518:    55 ea ff 1f 	r13 = 8191 
  10551c:    e0 f7 8a 0d 	r10 = r8 >>> 13 			  ## midi_synth.c:754:27
  105520:    20 e8 c0 00 	r0 = [r12 + 0] 			  ## midi_synth.c:756:30
  105524:    c0 d3       	r0 = r0 + -1 			  ## midi_synth.c:756:39
  105526:    90 ce       	cmp r10, r0			  ## midi_synth.c:756:8
  105528:    00 fb ca 0b 	ifs (nzcv >= 0) goto 376 <midi_gen_sample+0x4CC : 1056a4 >			  ## midi_synth.c:756:8
  10552c:    80 f0 89 0d 	r9 = r8 & r13 			  ## midi_synth.c:755:27
  105530:    00 e8 b0 00 	r0 = b[r11 + 0] 			  ## midi_synth.c:763:18
  105534:    08 98       	cmp r0, 1			  ## midi_synth.c:763:8
  105536:    25 10       	ifs (nzcv == 0) goto 74 <midi_gen_sample+0x3AA : 105582 >			  ## midi_synth.c:763:8
  105538:    10 98       	cmp r0, 2
  10553a:    2a 10       	ifs (nzcv == 0) goto 84 <midi_gen_sample+0x3B8 : 105590 >
  10553c:    18 98       	cmp r0, 3
  10553e:    46 11       	ifs (nzcv != 0) goto 140 <midi_gen_sample+0x3F4 : 1055cc >
  105540:    90 e8 60 00 	r0 = h[r6 + 0] (s) 			  ## midi_synth.c:788:24
  105544:    90 ce       	cmp r10, r0			  ## midi_synth.c:788:5
  105546:    19 10       	ifs (nzcv == 0) goto 50 <midi_gen_sample+0x3A2 : 10557a >			  ## midi_synth.c:788:5
  105548:    40 c9       	r0 = r0.l 			  ## midi_synth.c:788:34
  10554a:    29 48       	r1 = [r5 + 0] 			  ## midi_synth.c:790:36
  10554c:    39 70       	h[r7 + 0] = r1 			  ## midi_synth.c:790:24
  10554e:    c2 c9       	r2 = r0.l (s) 			  ## midi_synth.c:791:69
  105550:    d0 a1       	r0 = r2 >>> 1 			  ## midi_synth.c:333:24
  105552:    c1 44       	r1 = [sp+ 76] 			  ## midi_synth.c:334:12
  105554:    00 e7 11 00 	r1 = b[r1 + r0] 			  ## midi_synth.c:334:12
  105558:    48 a4       	r0 = r1 >> 4 			  ## midi_synth.c:342:14
  10555a:    c0 f3 11 f0 	r1 = r1 & (~240) 			  ## midi_synth.c:338:13
  10555e:    00 f4 20 01 	tst r2, 1			  ## midi_synth.c:336:6
  105562:    10 03       	ifs (nzcv != 0) {			  ## midi_synth.c:336:6
  105564:    08 c6       		r0 = r1 
                               	}			  ## midi_synth.c:336:6
  105566:    29 c6       	r1 = r5 			  ## midi_synth.c:791:6
  105568:    b2 c6       	r2 = r14 			  ## midi_synth.c:791:6
  10556a:    ff e1 9f df 	call -1038 <adpcm_decoder_unit4bit : 105160 >			  ## midi_synth.c:791:6
  10556e:    30 50       	r0 = h[r6 + 0] 			  ## midi_synth.c:792:28
  105570:    40 d0       	r0 = r0 + 1 			  ## midi_synth.c:792:28
  105572:    30 70       	h[r6 + 0] = r0 			  ## midi_synth.c:792:28
  105574:    c1 c9       	r1 = r0.l (s) 			  ## midi_synth.c:788:24
  105576:    91 ce       	cmp r10, r1			  ## midi_synth.c:788:5
  105578:    e8 11       	ifs (nzcv != 0) goto -48 <midi_gen_sample+0x372 : 10554a >			  ## midi_synth.c:788:5
  10557a:    90 e8 71 00 	r1 = h[r7 + 0] (s) 			  ## midi_synth.c:795:13
  10557e:    28 48       	r0 = [r5 + 0] 			  ## midi_synth.c:795:46
  105580:    41 08       	goto 130 <midi_gen_sample+0x42C : 105604 >			  ## midi_synth.c:795:46
  105582:    90 e8 60 00 	r0 = h[r6 + 0] (s) 			  ## midi_synth.c:766:21
  105586:    90 ce       	cmp r10, r0			  ## midi_synth.c:766:9
  105588:    2a 11       	ifs (nzcv != 0) goto 84 <midi_gen_sample+0x406 : 1055de >			  ## midi_synth.c:766:9
  10558a:    28 48       	r0 = [r5 + 0] 
  10558c:    3b 50       	r3 = h[r7 + 0] 
  10558e:    39 08       	goto 114 <midi_gen_sample+0x42A : 105602 >
  105590:    90 e8 60 00 	r0 = h[r6 + 0] (s) 			  ## midi_synth.c:777:24
  105594:    90 ce       	cmp r10, r0			  ## midi_synth.c:777:5
  105596:    20 e9 0d 13 	r13 = [sp+ 76] 			  ## midi_synth.c:777:5
  10559a:    11 10       	ifs (nzcv == 0) goto 34 <midi_gen_sample+0x3E6 : 1055be >			  ## midi_synth.c:777:5
  10559c:    40 c9       	r0 = r0.l 			  ## midi_synth.c:777:34
  10559e:    29 48       	r1 = [r5 + 0] 			  ## midi_synth.c:779:36
  1055a0:    39 70       	h[r7 + 0] = r1 			  ## midi_synth.c:779:24
  1055a2:    c1 c9       	r1 = r0.l (s) 			  ## midi_synth.c:780:66
  1055a4:    a8 c6       	r0 = r13 			  ## midi_synth.c:780:26
  1055a6:    ff e1 0f d8 	call -1280 <get_char_nbit : 1050aa >			  ## midi_synth.c:780:26
  1055aa:    29 c6       	r1 = r5 			  ## midi_synth.c:780:6
  1055ac:    b2 c6       	r2 = r14 			  ## midi_synth.c:780:6
  1055ae:    ff e1 ff d8 	call -1250 <adpcm_decoder_unit0 : 1050d0 >			  ## midi_synth.c:780:6
  1055b2:    30 50       	r0 = h[r6 + 0] 			  ## midi_synth.c:781:28
  1055b4:    40 d0       	r0 = r0 + 1 			  ## midi_synth.c:781:28
  1055b6:    30 70       	h[r6 + 0] = r0 			  ## midi_synth.c:781:28
  1055b8:    c1 c9       	r1 = r0.l (s) 			  ## midi_synth.c:777:24
  1055ba:    91 ce       	cmp r10, r1			  ## midi_synth.c:777:5
  1055bc:    f0 11       	ifs (nzcv != 0) goto -32 <midi_gen_sample+0x3C6 : 10559e >			  ## midi_synth.c:777:5
  1055be:    90 e8 71 00 	r1 = h[r7 + 0] (s) 			  ## midi_synth.c:784:13
  1055c2:    28 48       	r0 = [r5 + 0] 			  ## midi_synth.c:784:46
  1055c4:    40 d6       	r0 = r0 - r1 			  ## midi_synth.c:784:58
  1055c6:    55 ea ff 1f 	r13 = 8191 			  ## midi_synth.c:784:58
  1055ca:    1d 08       	goto 58 <midi_gen_sample+0x42E : 105606 >			  ## midi_synth.c:784:58
  1055cc:    20 f7 a0 01 	r0 = r10 << 1 			  ## midi_synth.c:800:25
  1055d0:    c2 44       	r2 = [sp+ 76] 			  ## midi_synth.c:800:25
  1055d2:    90 e7 21 00 	r1 = h[r2 + r0] (s) 			  ## midi_synth.c:800:13
  1055d6:    80 d4       	r0 = r0 + r2 			  ## midi_synth.c:800:13
  1055d8:    90 e8 00 80 	r0 = h[r0 + 2] (s) 			  ## midi_synth.c:800:74
  1055dc:    13 08       	goto 38 <midi_gen_sample+0x42C : 105604 >			  ## midi_synth.c:800:74
  1055de:    50 e8 6a 00 	h[r6 + 0] = r10 			  ## midi_synth.c:768:29
  1055e2:    20 e9 0d 13 	r13 = [sp+ 76] 			  ## midi_synth.c:768:29
  1055e6:    00 e7 d0 0a 	r0 = b[r13 + r10] 			  ## midi_synth.c:769:26
  1055ea:    ff e1 2f d4 	call -1404 <G711_alaw2linear : 105072 >			  ## midi_synth.c:769:26
  1055ee:    03 c6       	r3 = r0 			  ## midi_synth.c:769:26
  1055f0:    3b 70       	h[r7 + 0] = r3 			  ## midi_synth.c:769:24
  1055f2:    00 ee d0 0a 	r0 = r13 + r10 			  ## midi_synth.c:769:43
  1055f6:    55 ea ff 1f 	r13 = 8191 			  ## midi_synth.c:769:43
  1055fa:    00 5a       	r0 = b[r0 + 1] 			  ## midi_synth.c:770:30
  1055fc:    ff e1 9f d3 	call -1422 <G711_alaw2linear : 105072 >			  ## midi_synth.c:770:30
  105600:    28 68       	[r5 + 0] = r0 			  ## midi_synth.c:770:28
  105602:    d9 c9       	r1 = r3.l (s) 			  ## midi_synth.c:772:13
  105604:    40 d6       	r0 = r0 - r1 
  105606:    80 fc 00 09 	r0 = r0 * r9 
  10560a:    c0 ad       	r0 = r0 >>> 13 
  10560c:    40 d4       	r0 = r0 + r1 
  10560e:    01 43       	r1 = [sp+ 48] 			  ## midi_synth.c:806:4
  105610:    08 06       	r0 *= r1 			  ## midi_synth.c:806:4
  105612:    21 a1       	r1 = r4 << 1 			  ## midi_synth.c:806:4
  105614:    c2 43       	r2 = [sp+ 60] 			  ## midi_synth.c:806:4
  105616:    89 d4       	r1 = r1 + r2 			  ## midi_synth.c:806:4
  105618:    10 e8 11 99 	r1 = h[r1 + 102] 			  ## midi_synth.c:806:4
  10561c:    c1 06       	macc = r0 * r1 (s) 			  ## midi_synth.c:806:4
  10561e:    c0 f9 00 0e 	r0 = macc >>> 14 			  ## midi_synth.c:806:4
  105622:    41 43       	r1 = [sp+ 52] 
  105624:    b1 20       	if (r1 == 0) goto 22 <midi_gen_sample+0x464 : 10563c >
  105626:    02 44       	r2 = [sp+ 64] 
  105628:    52 d4       	r2 = r2 + r1 			  ## midi_synth.c:810:19
  10562a:    02 64       	[sp+ 64] = r2 
  10562c:    81 41       	r1 = [sp+ 24] 			  ## midi_synth.c:811:32
  10562e:    11 06       	r1 *= r2 			  ## midi_synth.c:811:32
  105630:    42 45       	r2 = [sp+ 84] 			  ## midi_synth.c:811:43
  105632:    89 d4       	r1 = r1 + r2 			  ## midi_synth.c:811:43
  105634:    c9 a4       	r1 = r1 >>> 4 			  ## midi_synth.c:811:68
  105636:    c1 06       	macc = r0 * r1 (s) 			  ## midi_synth.c:812:5
  105638:    c0 f9 00 0d 	r0 = macc >>> 13 			  ## midi_synth.c:812:5
  10563c:    21 a2       	r1 = r4 << 2 			  ## midi_synth.c:816:58
  10563e:    82 43       	r2 = [sp+ 56] 			  ## midi_synth.c:816:58
  105640:    89 d4       	r1 = r1 + r2 			  ## midi_synth.c:816:58
  105642:    05 ed 11 30 	r1 = r1 + 1328 			  ## midi_synth.c:816:58
  105646:    0a 48       	r2 = [r1 + 0] 			  ## midi_synth.c:816:58
  105648:    83 42       	r3 = [sp+ 40] 			  ## midi_synth.c:816:42
  10564a:    18 06       	r0 *= r3 			  ## midi_synth.c:816:42
  10564c:    c0 a2       	r0 = r0 >>> 2 			  ## midi_synth.c:816:50
  10564e:    80 d4       	r0 = r0 + r2 			  ## midi_synth.c:816:56
  105650:    08 68       	[r1 + 0] = r0 			  ## midi_synth.c:816:32
  105652:    40 42       	r0 = [sp+ 36] 			  ## midi_synth.c:817:16
  105654:    40 cb       	r8 += r0 			  ## midi_synth.c:817:16
  105656:    64 d0       	r4 = r4 + 1 			  ## midi_synth.c:752:40
  105658:    c0 42       	r0 = [sp+ 44] 			  ## midi_synth.c:752:3
  10565a:    20 ce       	cmp r4, r0			  ## midi_synth.c:752:3
  10565c:    ff fb eb f5 	ifs (nzcv < 0) goto -324 <midi_gen_sample+0x344 : 10551c >			  ## midi_synth.c:752:3
  105660:    00 41       	r0 = [sp+ 16] 			  ## midi_synth.c:822:24
  105662:    60 e8 08 00 	[r0 + 0] = r8 			  ## midi_synth.c:822:24
  105666:    40 43       	r0 = [sp+ 52] 			  ## midi_synth.c:824:6
  105668:    a0 21       	if (r0 == 0) goto 52 <midi_gen_sample+0x4C6 : 10569e >			  ## midi_synth.c:824:6
  10566a:    06 44       	r6 = [sp+ 64] 
  10566c:    83 ef 60 e8 	cmp r6, 1000			  ## midi_synth.c:831:12
  105670:    00 40       	r0 = [sp] 			  ## midi_synth.c:831:12
  105672:    01 c6       	r1 = r0 			  ## midi_synth.c:831:12
  105674:    a0 03       	ifs (nzcv >= 0) {			  ## midi_synth.c:831:12
  105676:    41 43       		r1 = [sp+ 52] 
                               	}			  ## midi_synth.c:831:12
  105678:    80 dc       	r0 = -r0 			  ## midi_synth.c:829:14
  10567a:    0d ef 60 00 	cmp r6, 8192			  ## midi_synth.c:827:7
  10567e:    c3 40       	r3 = [sp+ 12] 			  ## midi_synth.c:827:7
  105680:    84 40       	r4 = [sp+ 8] 			  ## midi_synth.c:827:7
  105682:    45 40       	r5 = [sp+ 4] 			  ## midi_synth.c:827:7
  105684:    d0 03       	ifs (nzcv <= 0) {			  ## midi_synth.c:827:7
  105686:    08 c6       		r0 = r1 
                               	}			  ## midi_synth.c:827:7
  105688:    22 58       	r2 = b[r4 + 0] 			  ## midi_synth.c:836:38
  10568a:    00 f3 21 80 	r1 = r2 | 128 			  ## midi_synth.c:839:52
  10568e:    3a db       	r2 &= (~128)			  ## midi_synth.c:836:51
  105690:    00 98       	cmp r0, 0			  ## midi_synth.c:837:7
  105692:    a0 03       	ifs (nzcv >= 0) {			  ## midi_synth.c:837:7
  105694:    11 c6       		r1 = r2 
                               	}			  ## midi_synth.c:837:7
  105696:    21 78       	b[r4 + 0] = r1 			  ## midi_synth.c:836:26
  105698:    18 a1       	r0 = r3 << 1 			  ## midi_synth.c:841:3
  10569a:    50 e7 56 00 	h[r5 + r0] = r6 			  ## midi_synth.c:841:23
  10569e:    58 cd       	sp += 88 
  1056a0:    30 c4       	{macch, maccl} = [sp++] 
  1056a2:    1e c0       	{pc, r14-r4} = [sp++] 
  1056a4:    10 80       	r0 = 2 			  ## midi_synth.c:758:20
  1056a6:    01 45       	r1 = [sp+ 80] 			  ## midi_synth.c:758:20
  1056a8:    82 44       	r2 = [sp+ 72] 			  ## midi_synth.c:758:20
  1056aa:    40 e7 10 02 	b[r1 + r2] = r0 			  ## midi_synth.c:758:20
  1056ae:    08 80       	r0 = 1 			  ## midi_synth.c:759:27
  1056b0:    c1 43       	r1 = [sp+ 60] 			  ## midi_synth.c:759:27
  1056b2:    c8 68       	[r1 + 12] = r0 			  ## midi_synth.c:759:27
  1056b4:    f4 0f       	goto -24 <midi_gen_sample+0x4C6 : 10569e >			  ## midi_synth.c:759:27


midi_ctrl_run:
  1056b6:    1e c2       	[--sp] = {rets, r14-r4} 			  ## midi_ctrl_api.c:144:0
  1056b8:    30 c5       	[--sp] = {macch, maccl} 			  ## midi_ctrl_api.c:144:0
  1056ba:    94 cd       	sp += -108 			  ## midi_ctrl_api.c:144:0
  1056bc:    03 c6       	r3 = r0 			  ## midi_ctrl_api.c:144:0
  1056be:    07 ed 30 bc 	r0 = r3 + 1980 			  ## midi_ctrl_api.c:144:0
  1056c2:    00 61       	[sp+ 16] = r0 			  ## midi_ctrl_api.c:144:0
  1056c4:    90 e8 05 87 	r5 = h[r0 + 30] (s) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:143:19
  1056c8:    06 ed 30 4c 	r0 = r3 + 1612 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:143:19
  1056cc:    00 60       	[sp] = r0 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:143:19
  1056ce:    85 22       	if (r5 == 0) goto 80 <midi_ctrl_run+0x6A : 105720 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:143:6
  1056d0:    1c c6       	r4 = r3 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:148:43
  1056d2:    1e c6       	r6 = r3 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:148:43
  1056d4:    24 e8 43 03 	r3 = [++ r4 = 12] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:148:43
  1056d8:    10 ea cc 07 	r0 = 1996 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:148:103
  1056dc:    10 e7 40 00 	r0 = h[r4 + r0] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:148:85
  1056e0:    04 ed 41 e4 	r1 = r4 + 1252 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:145:54
  1056e4:    41 61       	[sp+ 20] = r1 
  1056e6:    09 d4       	r1 = r1 + r0 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:148:85
  1056e8:    22 c6       	r2 = r4 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:148:78
  1056ea:    24 e8 20 ff 	r0 = [++ r2 = -4] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:148:78
  1056ee:    82 60       	[sp+ 8] = r2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:148:78
  1056f0:    2a c6       	r2 = r5 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:148:15
  1056f2:    ab 01       	call r3			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:148:15
  1056f4:    07 c6       	r7 = r0 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:148:15
  1056f6:    c4 60       	[sp+ 12] = r4 
  1056f8:    05 ed 48 24 	r8 = r4 + 1316 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:149:23
  1056fc:    04 80       	r4 = 0 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:149:23
  1056fe:    80 c6       	r0 = r8 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:149:3
  105700:    01 80       	r1 = 0 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:149:3
  105702:    12 ea 80 00 	r2 = 128 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:149:3
  105706:    de e1 9f c2 	call -272302 <memset : c2f5c >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:149:3
  10570a:    2f ce       	cmp r5, r7			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:150:7
  10570c:    20 1d       	ifs (nzcv <= 0) goto 64 <midi_ctrl_run+0x98 : 10574e >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:150:7
  10570e:    07 ed 60 d8 	r0 = r6 + 2008 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:152:25
  105712:    00 50       	r0 = h[r0 + 0] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:152:25
  105714:    c0 d5       	r0 = r0 + r7 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:152:25
  105716:    01 41       	r1 = [sp+ 16] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:152:25
  105718:    c8 71       	h[r1 + 28] = r0 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:152:25
  10571a:    e8 d7       	r0 = r5 - r7 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:153:33
  10571c:    c8 75       	h[r1 + 30] = r0 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:153:23
  10571e:    02 0a       	goto 1028 <midi_ctrl_run+0x46E : 105b24 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:153:23
  105720:    40 4e       	r0 = [r0 + -28] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:163:39
  105722:    03 ed 31 34 	r1 = r3 + 820 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:163:39
  105726:    0a 48       	r2 = [r1 + 0] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:163:23
  105728:    80 d4       	r0 = r0 + r2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:163:23
  10572a:    12 ea ff 1f 	r2 = 8191 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:165:23
  10572e:    82 da       	r2 &= r0 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:165:23
  105730:    0a 68       	[r1 + 0] = r2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:165:23
  105732:    60 f7 0a 0d 	r10 = r0 >> 13 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:164:36
  105736:    05 ed 38 30 	r8 = r3 + 1328 
  10573a:    04 ed 30 f0 	r0 = r3 + 1264 
  10573e:    40 61       	[sp+ 20] = r0 
  105740:    00 ed 30 08 	r0 = r3 + 8 
  105744:    80 60       	[sp+ 8] = r0 
  105746:    00 ed 30 0c 	r0 = r3 + 12 
  10574a:    c0 60       	[sp+ 12] = r0 
  10574c:    05 08       	goto 10 <midi_ctrl_run+0xA2 : 105758 >
  10574e:    00 41       	r0 = [sp+ 16] 
  105750:    20 e8 0a 06 	r10 = [r0 + 24] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:156:29
  105754:    c4 69       	[r0 + 28] = r4 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:158:24
  105756:    33 c6       	r3 = r6 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:158:24
  105758:    04 ed 30 c0 	r0 = r3 + 1216 
  10575c:    80 61       	[sp+ 24] = r0 
  10575e:    53 ea 01 00 	r11 = 1 
  105762:    43 63       	[sp+ 52] = r3 
  105764:    60 e9 08 01 	[sp+ 4] = r8 
  105768:    80 ef a0 00 	cmp r10, 0			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:170:2
  10576c:    00 fb a0 1d 	ifs (nzcv == 0) goto 948 <midi_ctrl_run+0x46E : 105b24 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:170:2
  105770:    80 ef a0 20 	cmp r10, 32			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:172:17
  105774:    90 c6       	r0 = r10 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:172:17
  105776:    a0 03       	ifs (nzcv >= 0) {			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:172:17
  105778:    00 81       		r0 = 32 
                               	}			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:172:17
  10577a:    80 65       	[sp+ 88] = r0 
  10577c:    02 ed 30 f0 	r0 = r3 + 752 
  105780:    c0 64       	[sp+ 76] = r0 
  105782:    90 e8 00 00 	r0 = h[r0 + 0] (s) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:173:32
  105786:    08 98       	cmp r0, 1			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:173:3
  105788:    00 fb 5b 17 	ifs (nzcv < 0) goto 746 <midi_ctrl_run+0x3C0 : 105a76 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:173:3
  10578c:    07 80       	r7 = 0 
  10578e:    60 e9 0a 07 	[sp+ 28] = r10 
  105792:    1b 08       	goto 54 <midi_ctrl_run+0x114 : 1057ca >
  105794:    a8 4e       	r0 = [r5 + -24] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:324:34
  105796:    c0 f0 00 08 	r0 = r0 & ~r8 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:324:34
  10579a:    a8 6e       	[r5 + -24] = r0 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:324:34
  10579c:    00 e8 90 40 	r0 = b[r9 + 1] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:326:23
  1057a0:    00 98       	cmp r0, 0			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:326:23
  1057a2:    00 fb 10 16 	ifs (nzcv == 0) goto 706 <midi_ctrl_run+0x3B2 : 105a68 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:326:23
  1057a6:    10 ea ba 00 	r0 = 186 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:326:48
  1057aa:    00 e7 20 00 	r0 = b[r2 + r0] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:326:48
  1057ae:    00 98       	cmp r0, 0			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:326:48
  1057b0:    00 fb a0 15 	ifs (nzcv == 0) goto 692 <midi_ctrl_run+0x3B2 : 105a68 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:326:48
  1057b4:    80 41       	r0 = [sp+ 24] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:328:7
  1057b6:    00 e7 01 07 	r1 = b[r0 + r7] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:328:7
  1057ba:    20 e8 90 04 	r0 = [r9 + 16] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:328:87
  1057be:    20 e8 93 06 	r3 = [r9 + 24] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:328:37
  1057c2:    52 58       	r2 = b[r2 + 4] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:328:7
  1057c4:    ab 01       	call r3			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:328:7
  1057c6:    43 43       	r3 = [sp+ 52] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:328:7
  1057c8:    4f 09       	goto 670 <midi_ctrl_run+0x3B2 : 105a68 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:328:7
  1057ca:    04 ed 31 d0 	r1 = r3 + 1232 
  1057ce:    88 4e       	r0 = [r1 + -24] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:175:21
  1057d0:    80 f1 00 07 	r0 = r0 & setbit(r7) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:175:36
  1057d4:    00 fb 80 14 	ifs (nzcv == 0) goto 656 <midi_ctrl_run+0x3B2 : 105a68 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:175:36
  1057d8:    47 65       	[sp+ 84] = r7 
  1057da:    81 63       	[sp+ 56] = r1 
  1057dc:    c8 49       	r0 = [r1 + 28] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:179:31
  1057de:    00 65       	[sp+ 80] = r0 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:185:6
  1057e0:    80 ef a0 01 	cmp r10, 1			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:185:6
  1057e4:    87 45       	r7 = [sp+ 88] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:185:6
  1057e6:    00 fb 5b 0f 	ifs (nzcv < 0) goto 490 <midi_ctrl_run+0x31E : 1059d4 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:185:6
  1057ea:    40 45       	r0 = [sp+ 84] 
  1057ec:    00 fc 00 e0 	r0 = r0 * 224 
  1057f0:    01 45       	r1 = [sp+ 80] 
  1057f2:    40 d4       	r0 = r0 + r1 
  1057f4:    00 ed 01 d4 	r1 = r0 + 212 
  1057f8:    00 ed 02 c0 	r2 = r0 + 192 
  1057fc:    82 62       	[sp+ 40] = r2 
  1057fe:    00 ed 09 c8 	r9 = r0 + 200 
  105802:    00 ed 02 d0 	r2 = r0 + 208 
  105806:    c2 65       	[sp+ 92] = r2 
  105808:    00 ed 05 c4 	r5 = r0 + 196 
  10580c:    00 ed 02 cc 	r2 = r0 + 204 
  105810:    42 66       	[sp+ 100] = r2 
  105812:    00 ed 02 50 	r2 = r0 + 80 
  105816:    82 64       	[sp+ 72] = r2 
  105818:    00 ed 02 b9 	r2 = r0 + 185 
  10581c:    42 64       	[sp+ 68] = r2 
  10581e:    00 ed 02 60 	r2 = r0 + 96 
  105822:    02 64       	[sp+ 64] = r2 
  105824:    00 ed 02 bc 	r2 = r0 + 188 
  105828:    02 66       	[sp+ 96] = r2 
  10582a:    00 ed 06 64 	r6 = r0 + 100 
  10582e:    00 ed 0c a6 	r12 = r0 + 166 
  105832:    00 ed 0e 54 	r14 = r0 + 84 
  105836:    00 ed 02 4c 	r2 = r0 + 76 
  10583a:    82 66       	[sp+ 104] = r2 
  10583c:    00 ed 08 1c 	r8 = r0 + 28 
  105840:    55 ea 00 00 	r13 = 0 
  105844:    03 80       	r3 = 0 
  105846:    60 e9 09 09 	[sp+ 36] = r9 
  10584a:    05 62       	[sp+ 32] = r5 
  10584c:    00 e8 82 00 	r2 = b[r8 + 0] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:187:21
  105850:    a2 20       	if (r2 == 0) goto 20 <midi_ctrl_run+0x1B0 : 105866 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:187:21
  105852:    32 50       	r2 = h[r6 + 0] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:201:22
  105854:    92 21       	if (r2 == 0) goto 50 <midi_ctrl_run+0x1D2 : 105888 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:201:12
  105856:    d2 d3       	r2 = r2 + -1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:203:32
  105858:    32 70       	h[r6 + 0] = r2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:203:32
  10585a:    10 e8 c2 00 	r2 = h[r12 + 0] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:204:9
  10585e:    20 e8 e4 00 	r4 = [r14 + 0] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:204:9
  105862:    e2 06       	macc = r4 * r2 (s) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:204:9
  105864:    aa 08       	goto 340 <midi_ctrl_run+0x304 : 1059ba >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:204:9
  105866:    82 46       	r2 = [sp+ 104] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:189:39
  105868:    12 48       	r2 = [r2 + 0] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:189:39
  10586a:    20 e8 e4 00 	r4 = [r14 + 0] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:189:26
  10586e:    12 d5       	r2 = r2 + r4 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:189:26
  105870:    60 e8 e2 00 	[r14 + 0] = r2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:189:26
  105874:    04 ef 20 80 	cmp r2, 1073741824			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:190:12
  105878:    82 03       	if (nzcv > 0) {			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:190:12
  10587a:    24 ea 02 80 		r2 = 1073741824 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:190:12
  10587e:    60 e8 e2 00 		[r14 + 0] = r2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:192:27
  105882:    40 e8 8b 00 		b[r8 + 0] = r11 
                               	}			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:193:27
  105886:    96 08       	goto 300 <midi_ctrl_run+0x2FE : 1059b4 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:193:27
  105888:    02 46       	r2 = [sp+ 96] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:207:36
  10588a:    12 58       	r2 = b[r2 + 0] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:207:36
  10588c:    02 98       	cmp r2, 0			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:207:17
  10588e:    5c 10       	ifs (nzcv == 0) goto 184 <midi_ctrl_run+0x292 : 105948 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:207:17
  105890:    42 46       	r2 = [sp+ 100] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:211:23
  105892:    12 48       	r2 = [r2 + 0] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:211:23
  105894:    0a 98       	cmp r2, 1			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:211:13
  105896:    18 1b       	ifs (nzcv < 0) goto 48 <midi_ctrl_run+0x212 : 1058c8 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:211:13
  105898:    d3 c6       	r11 = r10 
  10589a:    c4 45       	r4 = [sp+ 92] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:213:50
  10589c:    24 48       	r4 = [r4 + 0] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:213:50
  10589e:    6a c6       	r10 = r5 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:213:50
  1058a0:    90 e8 a5 00 	r5 = h[r10 + 0] (s) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:213:22
  1058a4:    64 d5       	r4 = r4 + r5 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:213:38
  1058a6:    15 ea ff 7f 	r5 = 32767 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:214:14
  1058aa:    25 ce       	cmp r4, r5			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:214:14
  1058ac:    a0 03       	ifs (nzcv >= 0) {			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:214:14
  1058ae:    14 ea ff 7f 		r4 = 32767 
                               	}			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:214:14
  1058b2:    50 e8 a4 00 	h[r10 + 0] = r4 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:218:26
  1058b6:    d2 d3       	r2 = r2 + -1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:219:27
  1058b8:    44 46       	r4 = [sp+ 100] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:219:27
  1058ba:    22 68       	[r4 + 0] = r2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:219:27
  1058bc:    02 98       	cmp r2, 0			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:222:13
  1058be:    95 c6       	r5 = r10 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:222:13
  1058c0:    da c6       	r10 = r11 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:222:13
  1058c2:    53 ea 01 00 	r11 = 1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:222:13
  1058c6:    6f 1c       	ifs (nzcv > 0) goto 222 <midi_ctrl_run+0x2F0 : 1059a6 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:222:13
  1058c8:    20 e8 92 00 	r2 = [r9 + 0] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:225:24
  1058cc:    12 98       	cmp r2, 2			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:225:14
  1058ce:    6b 1b       	ifs (nzcv < 0) goto 214 <midi_ctrl_run+0x2F0 : 1059a6 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:225:14
  1058d0:    02 63       	[sp+ 48] = r2 
  1058d2:    c2 44       	r2 = [sp+ 76] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:224:52
  1058d4:    12 4b       	r2 = [r2 + 48] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:224:52
  1058d6:    12 a2       	r2 = r2 << 2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:224:25
  1058d8:    20 e4 04 94 	r4 = [addr(592)]  <.GCPI49_0 : 105b2c >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:224:25
  1058dc:    20 e7 42 02 	r2 = [r4 + r2] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:224:25
  1058e0:    14 ea c8 00 	r4 = 200 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:224:69
  1058e4:    c0 fc 22 04 	r2 = r2 / r4 (s) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:224:69
  1058e8:    c2 62       	[sp+ 44] = r2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:229:34
  1058ea:    82 42       	r2 = [sp+ 40] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:229:34
  1058ec:    20 e8 2b 00 	r11 = [r2 + 0] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:229:34
  1058f0:    20 e8 1a 00 	r10 = [r1 + 0] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:229:58
  1058f4:    00 ed a5 01 	r5 = r10 + 1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:229:58
  1058f8:    0d 68       	[r1 + 0] = r5 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:229:58
  1058fa:    00 e7 b7 0a 	r7 = b[r11 + r10] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:229:24
  1058fe:    00 ed a2 02 	r2 = r10 + 2 
  105902:    c2 63       	[sp+ 60] = r2 
  105904:    0a 68       	[r1 + 0] = r2 
  105906:    00 e7 b4 05 	r4 = b[r11 + r5] 
  10590a:    c0 f3 72 80 	r2 = r7 & (~128) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:230:29
  10590e:    bf c9       	r7 = r7.b (s) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:229:24
  105910:    07 98       	cmp r7, 0			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:233:11
  105912:    2b 1b       	ifs (nzcv < 0) goto 86 <midi_ctrl_run+0x2B4 : 10596a >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:233:11
  105914:    3d 80       	r5 = 7 
  105916:    00 ed a7 03 	r7 = r10 + 3 
  10591a:    0f 68       	[r1 + 0] = r7 
  10591c:    ed c9       	r5 = r5.l (s) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:236:42
  10591e:    c0 f3 47 80 	r7 = r4 & (~128) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:236:31
  105922:    2f cf       	r7 <<= r5 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:236:39
  105924:    3a da       	r2 |= r7 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:236:52
  105926:    00 ee b7 0a 	r7 = r11 + r10 
  10592a:    00 e8 79 80 	r9 = b[r7 + 2] 
  10592e:    00 ed aa 01 	r10 = r10 + 1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:233:11
  105932:    ed d1       	r5 = r5 + 7 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:237:21
  105934:    a4 c9       	r4 = r4.b (s) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:236:31
  105936:    fc 9f       	cmp r4, -1			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:233:11
  105938:    8c c6       	r4 = r9 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:233:11
  10593a:    ed 1c       	ifs (nzcv > 0) goto -38 <midi_ctrl_run+0x260 : 105916 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:233:11
  10593c:    00 ed a4 02 	r4 = r10 + 2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:239:15
  105940:    c4 63       	[sp+ 60] = r4 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:239:15
  105942:    00 ed a5 01 	r5 = r10 + 1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:239:15
  105946:    12 08       	goto 36 <midi_ctrl_run+0x2B6 : 10596c >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:239:15
  105948:    02 44       	r2 = [sp+ 64] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:258:9
  10594a:    12 48       	r2 = [r2 + 0] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:258:9
  10594c:    20 e8 e4 00 	r4 = [r14 + 0] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:258:9
  105950:    e2 06       	macc = r4 * r2 (s) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:258:9
  105952:    42 44       	r2 = [sp+ 68] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:258:9
  105954:    12 58       	r2 = b[r2 + 0] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:258:9
  105956:    80 f9 04 02 	r4 = macc >>> r2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:258:9
  10595a:    82 44       	r2 = [sp+ 72] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:259:43
  10595c:    12 48       	r2 = [r2 + 0] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:259:43
  10595e:    22 ce       	cmp r4, r2			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:259:13
  105960:    20 03       	if (nzcv >= 0) {			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:259:13
  105962:    22 c6       		r2 = r4 
                               	}			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:259:13
  105964:    60 e8 e2 00 	[r14 + 0] = r2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:261:28
  105968:    25 08       	goto 74 <midi_ctrl_run+0x2FE : 1059b4 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:261:28
  10596a:    61 c6       	r9 = r4 
  10596c:    20 e9 0a 07 	r10 = [sp+ 28] 
  105970:    c7 42       	r7 = [sp+ 44] 
  105972:    ac d0       	r4 = r5 + 2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:242:54
  105974:    0c 68       	[r1 + 0] = r4 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:242:54
  105976:    c4 43       	r4 = [sp+ 60] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:242:20
  105978:    9c cb       	r4 += r11 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:242:20
  10597a:    24 58       	r4 = b[r4 + 0] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:242:20
  10597c:    24 a8       	r4 = r4 << 8 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:243:28
  10597e:    00 f0 44 09 	r4 = r4 | r9 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:243:34
  105982:    e4 c9       	r4 = r4.l (s) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:246:31
  105984:    c0 fc 44 07 	r4 = r4 / r7 (s) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:246:38
  105988:    c5 45       	r5 = [sp+ 92] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:246:29
  10598a:    2c 68       	[r5 + 0] = r4 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:246:29
  10598c:    3a 06       	r2 *= r7 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:247:39
  10598e:    44 46       	r4 = [sp+ 100] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:247:29
  105990:    22 68       	[r4 + 0] = r2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:247:29
  105992:    02 43       	r2 = [sp+ 48] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:249:31
  105994:    d2 d3       	r2 = r2 + -1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:249:31
  105996:    20 e9 09 09 	r9 = [sp+ 36] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:249:31
  10599a:    60 e8 92 00 	[r9 + 0] = r2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:249:31
  10599e:    53 ea 01 00 	r11 = 1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:249:31
  1059a2:    87 45       	r7 = [sp+ 88] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:249:31
  1059a4:    05 42       	r5 = [sp+ 32] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:249:31
  1059a6:    90 e8 52 00 	r2 = h[r5 + 0] (s) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:252:9
  1059aa:    20 e8 e4 00 	r4 = [r14 + 0] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:252:9
  1059ae:    e2 06       	macc = r4 * r2 (s) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:252:9
  1059b0:    c0 f9 02 0f 	r2 = macc >>> 15 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:252:9
  1059b4:    10 e8 c4 00 	r4 = h[r12 + 0] 
  1059b8:    d4 06       	macc = r2 * r4 (s) 
  1059ba:    20 f7 d2 01 	r2 = r13 << 1 
  1059be:    12 d4       	r2 = r2 + r0 
  1059c0:    c0 f9 04 1d 	r4 = macc >>> 29 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:195:8
  1059c4:    50 e8 24 99 	h[r2 + 102] = r4 
  1059c8:    5b d0       	r3 = r3 + 1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:185:44
  1059ca:    00 ec 3d 00 	r13 = r3.b 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:185:22
  1059ce:    af ce       	cmp r13, r7			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:185:6
  1059d0:    ff fb cb f3 	ifs (nzcv < 0) goto -392 <midi_ctrl_run+0x196 : 10584c >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:185:6
  1059d4:    47 45       	r7 = [sp+ 84] 
  1059d6:    00 f7 b8 07 	r8 = r11 << r7 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:175:38
  1059da:    00 fc 76 e0 	r6 = r7 * 224 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:274:20
  1059de:    04 45       	r4 = [sp+ 80] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:274:20
  1059e0:    00 e7 40 06 	r0 = b[r4 + r6] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:274:20
  1059e4:    43 43       	r3 = [sp+ 52] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:274:20
  1059e6:    05 ed 39 ec 	r9 = r3 + 1516 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:274:20
  1059ea:    10 98       	cmp r0, 2			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:274:10
  1059ec:    09 10       	ifs (nzcv == 0) goto 18 <midi_ctrl_run+0x34A : 105a00 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:274:10
  1059ee:    08 98       	cmp r0, 1
  1059f0:    85 43       	r5 = [sp+ 56] 
  1059f2:    34 11       	ifs (nzcv != 0) goto 104 <midi_ctrl_run+0x3A6 : 105a5c >
  1059f4:    18 c6       	r0 = r3 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:276:11
  1059f6:    39 c6       	r1 = r7 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:276:11
  1059f8:    82 45       	r2 = [sp+ 88] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:276:11
  1059fa:    ff e1 df be 	call -2086 <midi_gen_sample : 1051d8 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:276:11
  1059fe:    2d 08       	goto 90 <midi_ctrl_run+0x3A4 : 105a5a >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:276:11
  105a00:    00 ee 4c 06 	r12 = r4 + r6 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:292:23
  105a04:    00 ed c5 0c 	r5 = r12 + 12 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:292:23
  105a08:    00 e8 c0 c0 	r0 = b[r12 + 3] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:292:23
  105a0c:    a0 20       	if (r0 == 0) goto 20 <midi_ctrl_run+0x36C : 105a22 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:292:23
  105a0e:    18 c6       	r0 = r3 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:305:9
  105a10:    39 c6       	r1 = r7 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:305:9
  105a12:    82 45       	r2 = [sp+ 88] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:305:9
  105a14:    ff e1 0f be 	call -2112 <midi_gen_sample : 1051d8 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:305:9
  105a18:    43 43       	r3 = [sp+ 52] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:305:9
  105a1a:    28 48       	r0 = [r5 + 0] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:306:29
  105a1c:    85 43       	r5 = [sp+ 56] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:306:29
  105a1e:    78 20       	if (r0 != 0) goto 14 <midi_ctrl_run+0x378 : 105a2e >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:306:29
  105a20:    1d 08       	goto 58 <midi_ctrl_run+0x3A6 : 105a5c >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:306:29
  105a22:    28 48       	r0 = [r5 + 0] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:292:56
  105a24:    40 27       	if (r0 == 0) goto -24 <midi_ctrl_run+0x358 : 105a0e >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:292:56
  105a26:    00 80       	r0 = 0 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:294:25
  105a28:    40 e8 c0 42 	b[r12 + 9] = r0 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:294:25
  105a2c:    85 43       	r5 = [sp+ 56] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:294:25
  105a2e:    a8 4e       	r0 = [r5 + -24] 
  105a30:    c0 f0 00 08 	r0 = r0 & ~r8 
  105a34:    a8 6e       	[r5 + -24] = r0 
  105a36:    00 e8 90 40 	r0 = b[r9 + 1] 
  105a3a:    00 21       	if (r0 == 0) goto 32 <midi_ctrl_run+0x3A6 : 105a5c >
  105a3c:    10 ea ba 00 	r0 = 186 
  105a40:    00 e7 c0 00 	r0 = b[r12 + r0] 
  105a44:    b0 20       	if (r0 == 0) goto 22 <midi_ctrl_run+0x3A6 : 105a5c >
  105a46:    80 41       	r0 = [sp+ 24] 
  105a48:    00 e7 01 07 	r1 = b[r0 + r7] 
  105a4c:    20 e8 90 04 	r0 = [r9 + 16] 
  105a50:    20 e8 93 06 	r3 = [r9 + 24] 
  105a54:    00 e8 c2 01 	r2 = b[r12 + 4] 
  105a58:    ab 01       	call r3
  105a5a:    43 43       	r3 = [sp+ 52] 
  105a5c:    a2 d5       	r2 = r4 + r6 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:322:19
  105a5e:    20 e8 20 15 	r0 = [r2 + 84] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:322:19
  105a62:    00 98       	cmp r0, 0			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:322:19
  105a64:    ff fb 60 e9 	ifs (nzcv == 0) goto -724 <midi_ctrl_run+0xDE : 105794 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:322:19
  105a68:    c0 44       	r0 = [sp+ 76] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:173:19
  105a6a:    90 e8 00 00 	r0 = h[r0 + 0] (s) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:173:19
  105a6e:    7f d0       	r7 = r7 + 1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:173:50
  105a70:    38 ce       	cmp r7, r0			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:173:3
  105a72:    ff fb ab ea 	ifs (nzcv < 0) goto -684 <midi_ctrl_run+0x114 : 1057ca >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:173:3
  105a76:    00 41       	r0 = [sp+ 16] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:338:21
  105a78:    00 5a       	r0 = b[r0 + 1] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:338:21
  105a7a:    90 21       	if (r0 == 0) goto 50 <midi_ctrl_run+0x3F8 : 105aae >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:338:8
  105a7c:    80 ef a0 01 	cmp r10, 1			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:340:5
  105a80:    20 e9 08 01 	r8 = [sp+ 4] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:340:5
  105a84:    87 45       	r7 = [sp+ 88] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:340:5
  105a86:    0b 1b       	ifs (nzcv < 0) goto 22 <midi_ctrl_run+0x3E8 : 105a9e >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:340:5
  105a88:    00 80       	r0 = 0 
  105a8a:    81 c6       	r1 = r8 
  105a8c:    0a 48       	r2 = [r1 + 0] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:342:17
  105a8e:    08 ed 22 00 	r2 = r2 + 2048 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:342:45
  105a92:    d2 ac       	r2 = r2 >>> 12 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:342:53
  105a94:    68 e8 12 01 	[r1 ++= 4] = r2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:343:34
  105a98:    40 d0       	r0 = r0 + 1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:340:43
  105a9a:    07 ce       	cmp r0, r7			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:340:5
  105a9c:    f7 1b       	ifs (nzcv < 0) goto -18 <midi_ctrl_run+0x3D6 : 105a8c >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:340:5
  105a9e:    01 40       	r1 = [sp] 
  105aa0:    00 e5 14 07 	r4, r0 = d[r1 + 28] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:345:69
  105aa4:    81 c6       	r1 = r8 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:345:5
  105aa6:    42 41       	r2 = [sp+ 20] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:345:5
  105aa8:    3b c6       	r3 = r7 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:345:5
  105aaa:    ac 01       	call r4			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:345:5
  105aac:    20 08       	goto 64 <midi_ctrl_run+0x438 : 105aee >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:345:5
  105aae:    80 ef a0 01 	cmp r10, 1			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:349:5
  105ab2:    20 e9 08 01 	r8 = [sp+ 4] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:349:5
  105ab6:    87 45       	r7 = [sp+ 88] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:349:5
  105ab8:    1a 1b       	ifs (nzcv < 0) goto 52 <midi_ctrl_run+0x438 : 105aee >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:349:5
  105aba:    00 80       	r0 = 0 
  105abc:    81 c6       	r1 = r8 
  105abe:    42 41       	r2 = [sp+ 20] 
  105ac0:    28 e8 13 01 	r3 = [r1 ++= 4] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:351:17
  105ac4:    08 ed 33 00 	r3 = r3 + 2048 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:351:45
  105ac8:    db ac       	r3 = r3 >>> 12 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:351:53
  105aca:    94 ea 00 80 	r4 = -32768 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:356:15
  105ace:    1c ce       	cmp r3, r4			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:356:15
  105ad0:    1c c6       	r4 = r3 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:356:15
  105ad2:    d0 03       	ifs (nzcv <= 0) {			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:356:15
  105ad4:    94 ea 00 80 		r4 = -32768 
                               	}			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:356:15
  105ad8:    15 ea ff 7f 	r5 = 32767 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:356:15
  105adc:    0c ef 30 00 	cmp r3, 32768			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:359:40
  105ae0:    b0 03       	ifs (nzcv < 0) {			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:359:40
  105ae2:    25 c6       		r5 = r4 
                               	}			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:359:40
  105ae4:    58 e8 25 80 	h[r2 ++= 2] = r5 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:359:38
  105ae8:    40 d0       	r0 = r0 + 1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:349:43
  105aea:    07 ce       	cmp r0, r7			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:349:5
  105aec:    e9 1b       	ifs (nzcv < 0) goto -46 <midi_ctrl_run+0x40A : 105ac0 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:349:5
  105aee:    80 40       	r0 = [sp+ 8] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:363:79
  105af0:    00 48       	r0 = [r0 + 0] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:363:79
  105af2:    c1 40       	r1 = [sp+ 12] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:363:44
  105af4:    0b 48       	r3 = [r1 + 0] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:363:44
  105af6:    3d a1       	r5 = r7 << 1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:363:119
  105af8:    41 41       	r1 = [sp+ 20] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:363:16
  105afa:    2a c6       	r2 = r5 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:363:16
  105afc:    ab 01       	call r3			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:363:16
  105afe:    06 c6       	r6 = r0 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:363:16
  105b00:    80 c6       	r0 = r8 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:364:4
  105b02:    01 80       	r1 = 0 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:364:4
  105b04:    12 ea 80 00 	r2 = 128 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:364:4
  105b08:    de e1 8f a2 	call -273328 <memset : c2f5c >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:364:4
  105b0c:    40 ee aa 07 	r10 = r10 - r7 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:366:27
  105b10:    2e ce       	cmp r5, r6			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:367:7
  105b12:    43 43       	r3 = [sp+ 52] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:367:7
  105b14:    ff fb 8d e2 	ifs (nzcv <= 0) goto -944 <midi_ctrl_run+0xB2 : 105768 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:367:7
  105b18:    01 41       	r1 = [sp+ 16] 
  105b1a:    ce 71       	h[r1 + 28] = r6 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:369:25
  105b1c:    a8 d7       	r0 = r5 - r6 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:370:37
  105b1e:    c8 75       	h[r1 + 30] = r0 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:370:23
  105b20:    60 e8 1a 06 	[r1 + 24] = r10 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:371:35
  105b24:    00 80       	r0 = 0 			  ## midi_ctrl_api.c:146:5
  105b26:    6c cd       	sp += 108 			  ## midi_ctrl_api.c:146:5
  105b28:    30 c4       	{macch, maccl} = [sp++] 			  ## midi_ctrl_api.c:146:5
  105b2a:    1e c0       	{pc, r14-r4} = [sp++] 			  ## midi_ctrl_api.c:146:5


.GCPI49_0:
  105b2c:    54 99 11 00     < 1153364 : 0x119954 >

midi_ctrl_get_dec_inf:
  105b30:    00 80       	r0 = 0 			  ## midi_ctrl_api.c:149:0
  105b32:    20 00       	rts			  ## midi_ctrl_api.c:150:5


midi_ctrl_get_playtime:
  105b34:    00 80       	r0 = 0 			  ## midi_ctrl_api.c:153:0
  105b36:    20 00       	rts			  ## midi_ctrl_api.c:154:5


midi_ctrl_get_bp_inf:
  105b38:    00 80       	r0 = 0 			  ## midi_ctrl_api.c:157:0
  105b3a:    20 00       	rts			  ## midi_ctrl_api.c:158:5


midi_ctrl_need_bpbuf_size:
  105b3c:    f8 87       	r0 = -1 			  ## midi_ctrl_api.c:166:0
  105b3e:    20 00       	rts			  ## midi_ctrl_api.c:167:5


midi_ctrl_dec_confing:
  105b40:    1f c2       	[--sp] = {rets} 			  ## midi_ctrl_api.c:170:0
  105b42:    ff e1 df 6d 	call -4678 <midi_dec_confing : 104900 >			  ## midi_ctrl_api.c:172:15
  105b46:    1f c0       	{pc} = [sp++] 


midi_ctrl_buff_api:
  105b48:    c1 28       	r1 = [addr(12)]  <.GCPI55_0 : 105b54 >			  ## midi_ctrl_api.c:243:0
  105b4a:    01 68       	[r0 + 0] = r1 			  ## midi_ctrl_api.c:244:22
  105b4c:    c1 28       	r1 = [addr(12)]  <.GCPI55_1 : 105b58 >			  ## midi_ctrl_api.c:245:22
  105b4e:    41 68       	[r0 + 4] = r1 			  ## midi_ctrl_api.c:245:22
  105b50:    00 80       	r0 = 0 			  ## midi_ctrl_api.c:246:5
  105b52:    20 00       	rts			  ## midi_ctrl_api.c:246:5


.GCPI55_0:
  105b54:    a8 4e 00 00     < 20136 : 0x4EA8 >

.GCPI55_1:
  105b58:    58 63 00 00     < 25432 : 0x6358 >

mp3_decoder_open:
  105b5c:    16 c2       	[--sp] = {rets, r6-r4} 			  ## testmp3.c:46:0
  105b5e:    16 c6       	r6 = r2 			  ## testmp3.c:46:0
  105b60:    0d c6       	r5 = r1 			  ## testmp3.c:46:0
  105b62:    04 c6       	r4 = r0 			  ## testmp3.c:46:0
  105b64:    01 80       	r1 = 0 			  ## testmp3.c:48:5
  105b66:    12 ea e4 0e 	r2 = 3812 			  ## testmp3.c:48:5
  105b6a:    de e1 7f 9f 	call -273426 <memset : c2f5c >			  ## testmp3.c:48:5
  105b6e:    20 c6       	r0 = r4 			  ## testmp3.c:49:2
  105b70:    29 c6       	r1 = r5 			  ## testmp3.c:49:2
  105b72:    62 80       	r2 = 12 			  ## testmp3.c:49:2
  105b74:    de e1 cf 9e 	call -273448 <memcpy : c2f50 >			  ## testmp3.c:49:2
  105b78:    36 22       	if (r6 == 0) goto 70 <mp3_decoder_open+0x64 : 105bc0 >
  105b7a:    0e ed 45 b8 	r5 = r4 + 3768 			  ## testmp3.c:52:20
  105b7e:    28 c6       	r0 = r5 			  ## testmp3.c:52:3
  105b80:    31 c6       	r1 = r6 			  ## testmp3.c:52:3
  105b82:    a2 80       	r2 = 20 			  ## testmp3.c:52:3
  105b84:    de e1 4f 9e 	call -273464 <memcpy : c2f50 >			  ## testmp3.c:52:3
  105b88:    09 80       	r1 = 1 			  ## testmp3.c:52:3
  105b8a:    0e ed 40 e0 	r0 = r4 + 3808 			  ## testmp3.c:52:3
  105b8e:    01 78       	b[r0 + 0] = r1 			  ## testmp3.c:53:20
  105b90:    c1 4d       	r1 = [r0 + -36] 			  ## testmp3.c:54:28
  105b92:    41 21       	if (r1 == 0) goto 40 <mp3_decoder_open+0x60 : 105bbc >			  ## testmp3.c:54:28
  105b94:    2a 54       	r2 = h[r5 + 2] 			  ## testmp3.c:57:34
  105b96:    11 ea 54 6d 	r1 = 27988 			  ## testmp3.c:57:46
  105b9a:    11 ce       	cmp r2, r1			  ## testmp3.c:57:13
  105b9c:    0f 11       	ifs (nzcv != 0) goto 30 <mp3_decoder_open+0x60 : 105bbc >			  ## testmp3.c:57:13
  105b9e:    0e ed 42 bc 	r2 = r4 + 3772 			  ## testmp3.c:36:2
  105ba2:    03 80       	r3 = 0 			  ## testmp3.c:36:2
  105ba4:    10 e7 24 03 	r4 = h[r2 + r3] 			  ## testmp3.c:38:11
  105ba8:    49 c9       	r1 = r1.l 			  ## testmp3.c:36:2
  105baa:    09 d5       	r1 = r1 + r4 			  ## testmp3.c:38:8
  105bac:    9b d0       	r3 = r3 + 2 			  ## testmp3.c:36:16
  105bae:    83 98       	cmp r3, 16			  ## testmp3.c:36:2
  105bb0:    f9 11       	ifs (nzcv != 0) goto -14 <mp3_decoder_open+0x48 : 105ba4 >			  ## testmp3.c:36:2
  105bb2:    2a 50       	r2 = h[r5 + 0] 			  ## testmp3.c:64:37
  105bb4:    51 88       	r1 += 10 			  ## testmp3.c:40:14
  105bb6:    49 c9       	r1 = r1.l 			  ## testmp3.c:40:9
  105bb8:    0a ce       	cmp r1, r2			  ## testmp3.c:64:8
  105bba:    02 10       	ifs (nzcv == 0) goto 4 <mp3_decoder_open+0x64 : 105bc0 >			  ## testmp3.c:64:8
  105bbc:    01 80       	r1 = 0 
  105bbe:    01 78       	b[r0 + 0] = r1 
  105bc0:    00 80       	r0 = 0 			  ## testmp3.c:70:2
  105bc2:    16 c0       	{pc, r6-r4} = [sp++] 			  ## testmp3.c:70:2


mad_bit_read:
  105bc4:    19 c2       	[--sp] = {rets, r9-r4} 			  ## bit.c:13:0
  105bc6:    fc cd       	sp += -4 			  ## bit.c:13:0
  105bc8:    05 c6       	r5 = r0 			  ## bit.c:13:0
  105bca:    00 ed 57 90 	r7 = r5 + 144 			  ## bit.c:13:0
  105bce:    3e 5a       	r6 = b[r7 + 1] 			  ## bit.c:16:17
  105bd0:    31 ce       	cmp r6, r1			  ## bit.c:16:5
  105bd2:    06 19       	if (nzcv <= 0) goto 12 <mad_bit_read+0x1C : 105be0 >			  ## bit.c:16:5
  105bd4:    08 80       	r0 = 1 			  ## bit.c:18:27
  105bd6:    08 cf       	r0 <<= r1 			  ## bit.c:18:27
  105bd8:    c0 d3       	r0 = r0 + -1 			  ## bit.c:18:33
  105bda:    ba 48       	r2 = [r7 + 8] 			  ## bit.c:18:15
  105bdc:    90 da       	r0 &= r2 			  ## bit.c:18:23
  105bde:    43 08       	goto 134 <mad_bit_read+0xA2 : 105c66 >
  105be0:    01 60       	[sp] = r1 
  105be2:    ce 98       	cmp r6, 25			  ## bit.c:24:3
  105be4:    2d 12       	if (nzcv >= 0) goto 90 <mad_bit_read+0x7C : 105c40 >			  ## bit.c:24:3
  105be6:    f8 50       	r0 = h[r7 + 12] 
  105be8:    7a 50       	r2 = h[r7 + 4] 
  105bea:    00 ed 59 10 	r9 = r5 + 16 
  105bee:    50 ea 01 00 	r8 = 1 
  105bf2:    43 c9       	r3 = r0.l 			  ## bit.c:26:21
  105bf4:    54 c9       	r4 = r2.l 			  ## bit.c:26:21
  105bf6:    23 ce       	cmp r4, r3			  ## bit.c:26:7
  105bf8:    12 13       	if (nzcv < 0) goto 36 <mad_bit_read+0x5A : 105c1e >			  ## bit.c:26:7
  105bfa:    e9 48       	r1 = [r5 + 12] 			  ## bit.c:28:84
  105bfc:    00 e5 54 00 	r4, r0 = d[r5 + 0] 			  ## bit.c:28:70
  105c00:    8a c6       	r2 = r9 			  ## bit.c:28:26
  105c02:    13 ea 80 00 	r3 = 128 			  ## bit.c:28:26
  105c06:    ac 01       	call r4			  ## bit.c:28:26
  105c08:    f8 70       	h[r7 + 12] = r0 			  ## bit.c:28:24
  105c0a:    41 c9       	r1 = r0.l 			  ## bit.c:29:22
  105c0c:    ea 48       	r2 = [r5 + 12] 			  ## bit.c:29:19
  105c0e:    52 d4       	r2 = r2 + r1 			  ## bit.c:29:19
  105c10:    ea 68       	[r5 + 12] = r2 			  ## bit.c:29:19
  105c12:    29 20       	if (r1 != 0) goto 4 <mad_bit_read+0x54 : 105c18 >			  ## bit.c:29:19
  105c14:    40 e8 78 00 	b[r7 + 0] = r8 			  ## bit.c:32:23
  105c18:    02 80       	r2 = 0 
  105c1a:    7a 70       	h[r7 + 4] = r2 			  ## bit.c:34:19
  105c1c:    3e 5a       	r6 = b[r7 + 1] 			  ## bit.c:34:19
  105c1e:    53 c9       	r3 = r2.l 			  ## bit.c:37:54
  105c20:    5b d5       	r3 = r3 + r5 			  ## bit.c:37:54
  105c22:    00 e8 33 04 	r3 = b[r3 + 16] 			  ## bit.c:37:40
  105c26:    34 c9       	r4 = r6.b 			  ## bit.c:37:86
  105c28:    23 cf       	r3 <<= r4 			  ## bit.c:37:84
  105c2a:    bc 48       	r4 = [r7 + 8] 			  ## bit.c:37:29
  105c2c:    1c da       	r4 |= r3 			  ## bit.c:37:37
  105c2e:    bc 68       	[r7 + 8] = r4 			  ## bit.c:37:20
  105c30:    46 88       	r6 += 8 			  ## bit.c:38:22
  105c32:    3e 7a       	b[r7 + 1] = r6 			  ## bit.c:38:22
  105c34:    52 d0       	r2 = r2 + 1 			  ## bit.c:39:18
  105c36:    7a 70       	h[r7 + 4] = r2 			  ## bit.c:39:18
  105c38:    33 c9       	r3 = r6.b 			  ## bit.c:38:22
  105c3a:    cb 98       	cmp r3, 25			  ## bit.c:24:3
  105c3c:    da 13       	if (nzcv < 0) goto -76 <mad_bit_read+0x2E : 105bf2 >			  ## bit.c:24:3
  105c3e:    01 08       	goto 2 <mad_bit_read+0x7E : 105c42 >			  ## bit.c:24:3
  105c40:    bc 48       	r4 = [r7 + 8] 
  105c42:    36 c9       	r6 = r6.b 			  ## bit.c:24:9
  105c44:    01 40       	r1 = [sp] 			  ## bit.c:24:9
  105c46:    31 ce       	cmp r6, r1			  ## bit.c:42:6
  105c48:    0a 12       	if (nzcv >= 0) goto 20 <mad_bit_read+0x9A : 105c5e >			  ## bit.c:42:6
  105c4a:    00 80       	r0 = 0 
  105c4c:    38 7a       	b[r7 + 1] = r0 			  ## bit.c:56:22
  105c4e:    b8 68       	[r7 + 8] = r0 			  ## bit.c:57:20
  105c50:    89 d7       	r1 = r1 - r6 			  ## bit.c:58:32
  105c52:    28 c6       	r0 = r5 			  ## bit.c:58:9
  105c54:    b7 04       	call -146 <mad_bit_read : 105bc4 >			  ## bit.c:58:9
  105c56:    30 cf       	r0 <<= r6 			  ## bit.c:59:17
  105c58:    20 da       	r0 |= r4 			  ## bit.c:59:11
  105c5a:    04 cd       	sp += 4 
  105c5c:    19 c0       	{pc, r9-r4} = [sp++] 
  105c5e:    20 f6 40 01 	r0 = uextra(r4, p:r1[12:8], l:r1[4:0]) 			  ## bit.c:47:4
  105c62:    3e 5a       	r6 = b[r7 + 1] 			  ## bit.c:49:22
  105c64:    ba 48       	r2 = [r7 + 8] 			  ## bit.c:49:22
  105c66:    73 d6       	r3 = r6 - r1 
  105c68:    3b 7a       	b[r7 + 1] = r3 
  105c6a:    40 f7 21 01 	r1 = r2 >> r1 
  105c6e:    b9 68       	[r7 + 8] = r1 
  105c70:    04 cd       	sp += 4 
  105c72:    19 c0       	{pc, r9-r4} = [sp++] 


mTSY_get_bpinfo:
  105c74:    15 c2       	[--sp] = {rets, r5, r4} 			  ## layer3.c:2803:0
  105c76:    00 ed 13 a0 	r3 = r1 + 160 			  ## layer3.c:2803:0
  105c7a:    dc 54       	r4 = h[r3 + 14] 			  ## layer3.c:2804:31
  105c7c:    c4 74       	h[r0 + 14] = r4 			  ## layer3.c:2804:21
  105c7e:    dc 50       	r4 = h[r3 + 12] 			  ## layer3.c:2805:31
  105c80:    c4 70       	h[r0 + 12] = r4 			  ## layer3.c:2805:21
  105c82:    dc 53       	r4 = h[r3 + -4] 			  ## layer3.c:2807:33
  105c84:    cd 48       	r5 = [r1 + 12] 			  ## layer3.c:2807:23
  105c86:    2c d7       	r4 = r5 - r4 			  ## layer3.c:2807:30
  105c88:    5d 53       	r5 = h[r3 + -12] 			  ## layer3.c:2807:54
  105c8a:    64 d5       	r4 = r4 + r5 			  ## layer3.c:2807:30
  105c8c:    44 68       	[r0 + 4] = r4 			  ## layer3.c:2809:18
  105c8e:    00 ed 11 91 	r1 = r1 + 145 			  ## layer3.c:2810:34
  105c92:    09 58       	r1 = b[r1 + 0] 			  ## layer3.c:2810:34
  105c94:    04 c6       	r4 = r0 			  ## layer3.c:2810:24
  105c96:    44 e8 41 44 	b[++ r4 = 17] = r1 			  ## layer3.c:2810:24
  105c9a:    99 4f       	r1 = [r3 + -8] 			  ## layer3.c:2811:29
  105c9c:    81 68       	[r0 + 8] = r1 			  ## layer3.c:2811:19
  105c9e:    e2 7f       	b[r4 + -1] = r2 			  ## layer3.c:2813:21
  105ca0:    11 ea 54 6d 	r1 = 27988 			  ## layer3.c:2815:22
  105ca4:    01 74       	h[r0 + 2] = r1 			  ## layer3.c:2815:22
  105ca6:    15 c0       	{pc, r5, r4} = [sp++] 			  ## layer3.c:2815:22


format_check:
  105ca8:    17 c2       	[--sp] = {rets, r7-r4} 			  ## testmp3.c:76:0
  105caa:    04 c6       	r4 = r0 			  ## testmp3.c:76:0
  105cac:    00 80       	r0 = 0 			  ## testmp3.c:76:0
  105cae:    00 ed 46 90 	r6 = r4 + 144 			  ## testmp3.c:76:0
  105cb2:    30 7a       	b[r6 + 1] = r0 			  ## testmp3.c:82:21
  105cb4:    f0 70       	h[r6 + 12] = r0 			  ## testmp3.c:83:21
  105cb6:    30 78       	b[r6 + 0] = r0 			  ## testmp3.c:84:20
  105cb8:    20 c6       	r0 = r4 			  ## testmp3.c:86:6
  105cba:    41 80       	r1 = 8 			  ## testmp3.c:86:6
  105cbc:    83 04       	call -250 <mad_bit_read : 105bc4 >			  ## testmp3.c:86:6
  105cbe:    15 80       	r5 = 2 
  105cc0:    68 9b       	cmp r0, 109			  ## testmp3.c:87:6
  105cc2:    4a 11       	ifs (nzcv != 0) goto 148 <format_check+0xB0 : 105d58 >			  ## testmp3.c:87:6
  105cc4:    20 c6       	r0 = r4 			  ## testmp3.c:91:8
  105cc6:    41 80       	r1 = 8 			  ## testmp3.c:91:8
  105cc8:    ff e1 cf f7 	call -264 <mad_bit_read : 105bc4 >			  ## testmp3.c:91:8
  105ccc:    a0 9a       	cmp r0, 84			  ## testmp3.c:92:6
  105cce:    44 11       	ifs (nzcv != 0) goto 136 <format_check+0xB0 : 105d58 >			  ## testmp3.c:92:6
  105cd0:    20 c6       	r0 = r4 			  ## testmp3.c:96:8
  105cd2:    41 80       	r1 = 8 			  ## testmp3.c:96:8
  105cd4:    ff e1 6f f7 	call -276 <mad_bit_read : 105bc4 >			  ## testmp3.c:96:8
  105cd8:    0a ed 47 3c 	r7 = r4 + 2620 
  105cdc:    a0 9a       	cmp r0, 84			  ## testmp3.c:97:6
  105cde:    12 10       	ifs (nzcv == 0) goto 36 <format_check+0x5C : 105d04 >			  ## testmp3.c:97:6
  105ce0:    98 9a       	cmp r0, 83
  105ce2:    3a 11       	ifs (nzcv != 0) goto 116 <format_check+0xB0 : 105d58 >
  105ce4:    20 c6       	r0 = r4 			  ## testmp3.c:99:61
  105ce6:    41 80       	r1 = 8 			  ## testmp3.c:99:61
  105ce8:    ff e1 cf f6 	call -296 <mad_bit_read : 105bc4 >			  ## testmp3.c:99:61
  105cec:    80 f3 00 0f 	r0 = r0 & 15 			  ## testmp3.c:99:98
  105cf0:    00 a1       	r0 = r0 << 1 			  ## testmp3.c:99:39
  105cf2:    41 2f       	r1 = [addr(116)]  <.GCPI59_3 : 105d68 >			  ## testmp3.c:99:39
  105cf4:    40 d4       	r0 = r0 + r1 			  ## testmp3.c:99:39
  105cf6:    00 50       	r0 = h[r0 + 0] 			  ## testmp3.c:99:39
  105cf8:    30 71       	h[r6 + 16] = r0 			  ## testmp3.c:99:37
  105cfa:    08 80       	r0 = 1 			  ## testmp3.c:99:37
  105cfc:    70 69       	[r6 + 20] = r0 			  ## testmp3.c:100:38
  105cfe:    90 80       	r0 = 18 			  ## testmp3.c:100:38
  105d00:    38 70       	h[r7 + 0] = r0 			  ## testmp3.c:101:32
  105d02:    24 08       	goto 72 <format_check+0xA4 : 105d4c >			  ## testmp3.c:101:32
  105d04:    20 c6       	r0 = r4 			  ## testmp3.c:112:9
  105d06:    41 80       	r1 = 8 			  ## testmp3.c:112:9
  105d08:    ff e1 cf f5 	call -328 <mad_bit_read : 105bc4 >			  ## testmp3.c:112:9
  105d0c:    41 a4       	r1 = r0 >> 4 			  ## testmp3.c:114:16
  105d0e:    0a a2       	r2 = r1 << 2 			  ## testmp3.c:115:28
  105d10:    c3 2c       	r3 = [addr(76)]  <.GCPI59_0 : 105d5c >			  ## testmp3.c:115:28
  105d12:    20 e7 33 02 	r3 = [r3 + r2] 			  ## testmp3.c:115:28
  105d16:    0e ed 45 44 	r5 = r4 + 3652 			  ## testmp3.c:115:28
  105d1a:    eb 6f       	[r5 + -4] = r3 			  ## testmp3.c:115:26
  105d1c:    43 2c       	r3 = [addr(68)]  <.GCPI59_1 : 105d60 >			  ## testmp3.c:116:31
  105d1e:    20 e7 32 02 	r2 = [r3 + r2] 			  ## testmp3.c:116:31
  105d22:    2a 68       	[r5 + 0] = r2 			  ## testmp3.c:116:29
  105d24:    02 2c       	r2 = [addr(64)]  <.GCPI59_2 : 105d64 >			  ## testmp3.c:117:27
  105d26:    00 e7 21 01 	r1 = b[r2 + r1] 			  ## testmp3.c:117:27
  105d2a:    a9 68       	[r5 + 8] = r1 			  ## testmp3.c:117:25
  105d2c:    80 f3 00 0f 	r0 = r0 & 15 			  ## testmp3.c:113:15
  105d30:    00 a1       	r0 = r0 << 1 			  ## testmp3.c:119:39
  105d32:    41 2b       	r1 = [addr(52)]  <.GCPI59_3 : 105d68 >			  ## testmp3.c:119:39
  105d34:    40 d4       	r0 = r0 + r1 			  ## testmp3.c:119:39
  105d36:    00 50       	r0 = h[r0 + 0] 			  ## testmp3.c:119:39
  105d38:    30 71       	h[r6 + 16] = r0 			  ## testmp3.c:119:37
  105d3a:    08 80       	r0 = 1 			  ## testmp3.c:119:37
  105d3c:    70 69       	[r6 + 20] = r0 			  ## testmp3.c:120:38
  105d3e:    60 80       	r0 = 12 			  ## testmp3.c:121:32
  105d40:    38 70       	h[r7 + 0] = r0 			  ## testmp3.c:121:32
  105d42:    20 c6       	r0 = r4 			  ## testmp3.c:123:9
  105d44:    41 80       	r1 = 8 			  ## testmp3.c:123:9
  105d46:    ff e1 df f3 	call -390 <mad_bit_read : 105bc4 >			  ## testmp3.c:123:9
  105d4a:    68 68       	[r5 + 4] = r0 			  ## testmp3.c:124:27
  105d4c:    0e ed 40 cc 	r0 = r4 + 3788 
  105d50:    21 c6       	r1 = r4 
  105d52:    92 80       	r2 = 18 
  105d54:    8f 04       	call -226 <mTSY_get_bpinfo : 105c74 >
  105d56:    05 80       	r5 = 0 
  105d58:    28 c6       	r0 = r5 			  ## testmp3.c:133:1
  105d5a:    17 c0       	{pc, r7-r4} = [sp++] 			  ## testmp3.c:133:1


.GCPI59_0:
  105d5c:    4c 96 11 00     < 1152588 : 0x11964C >

.GCPI59_1:
  105d60:    60 96 11 00     < 1152608 : 0x119660 >

.GCPI59_2:
  105d64:    38 a5 11 00     < 1156408 : 0x11A538 >

.GCPI59_3:
  105d68:    26 a5 11 00     < 1156390 : 0x11A526 >

ump3_decode_api:
  105d6c:    1b c2       	[--sp] = {rets, r11-r4} 			  ## ump3_api.c:38:0
  105d6e:    fc cd       	sp += -4 			  ## ump3_api.c:38:0
  105d70:    14 c6       	r4 = r2 			  ## ump3_api.c:38:0
  105d72:    01 60       	[sp] = r1 			  ## ump3_api.c:38:0
  105d74:    06 c6       	r6 = r0 			  ## ump3_api.c:38:0
  105d76:    88 2b       	r0 = [addr(184)]  <.GCPI60_0 : 105e30 >			  ## ump3_api.c:43:5
  105d78:    de e1 0f 93 	call -273824 <xprintf : c2fdc >			  ## ump3_api.c:43:5
  105d7c:    20 e4 0a 2d 	r10 = [addr(180)]  <.GCPI60_1 : 105e34 >			  ## ump3_api.c:44:5
  105d80:    00 ed a8 70 	r8 = r10 + 112 			  ## ump3_api.c:44:5
  105d84:    51 ea 00 00 	r9 = 0 			  ## ump3_api.c:44:5
  105d88:    80 c6       	r0 = r8 			  ## ump3_api.c:44:5
  105d8a:    01 80       	r1 = 0 			  ## ump3_api.c:44:5
  105d8c:    c2 81       	r2 = 56 			  ## ump3_api.c:44:5
  105d8e:    de e1 5f 8e 	call -273974 <memset : c2f5c >			  ## ump3_api.c:44:5
  105d92:    20 e4 0b 29 	r11 = [addr(164)]  <.GCPI60_2 : 105e38 >			  ## ump3_api.c:45:5
  105d96:    98 c6       	r0 = r11 			  ## ump3_api.c:45:5
  105d98:    01 80       	r1 = 0 			  ## ump3_api.c:45:5
  105d9a:    12 ea 18 1a 	r2 = 6680 			  ## ump3_api.c:45:5
  105d9e:    de e1 df 8d 	call -273990 <memset : c2f5c >			  ## ump3_api.c:45:5
  105da2:    10 80       	r0 = 2 			  ## ump3_api.c:47:23
  105da4:    00 ed a7 a4 	r7 = r10 + 164 			  ## ump3_api.c:47:23
  105da8:    38 7a       	b[r7 + 1] = r0 			  ## ump3_api.c:47:23
  105daa:    0d 29       	r5 = [addr(144)]  <.GCPI60_3 : 105e3c >			  ## ump3_api.c:55:5
  105dac:    49 29       	r1 = [addr(148)]  <.GCPI60_4 : 105e40 >			  ## ump3_api.c:55:5
  105dae:    28 c6       	r0 = r5 			  ## ump3_api.c:55:5
  105db0:    12 ea 00 05 	r2 = 1280 			  ## ump3_api.c:55:5
  105db4:    de e1 ef 8e 	call -273956 <cbuf_init : c2f94 >			  ## ump3_api.c:55:5
  105db8:    fe 6c       	[r7 + -52] = r6 			  ## ump3_api.c:56:31
  105dba:    7d 6e       	[r7 + -28] = r5 			  ## ump3_api.c:57:31
  105dbc:    60 e8 7b f5 	[r7 + -44] = r11 			  ## ump3_api.c:58:31
  105dc0:    48 28       	r0 = [addr(132)]  <.GCPI60_5 : 105e44 >			  ## ump3_api.c:59:31
  105dc2:    38 6d       	[r7 + -48] = r0 			  ## ump3_api.c:59:31
  105dc4:    48 28       	r0 = [addr(132)]  <.GCPI60_6 : 105e48 >			  ## ump3_api.c:60:31
  105dc6:    44 e5 70 f6 	d[r7 + -40] = r0, r4 			  ## ump3_api.c:60:31
  105dca:    30 c6       	r0 = r6 			  ## ump3_api.c:69:20
  105dcc:    fe e1 cf fc 	call -8296 <vfs_file_name : 103d68 >			  ## ump3_api.c:69:20
  105dd0:    c0 2f       	r0 = [addr(124)]  <.GCPI60_7 : 105e4c >			  ## ump3_api.c:70:5
  105dd2:    00 ed 06 c4 	r6 = r0 + 196 			  ## ump3_api.c:70:5
  105dd6:    80 2f       	r0 = [addr(120)]  <.GCPI60_8 : 105e50 >			  ## ump3_api.c:70:5
  105dd8:    31 c6       	r1 = r6 			  ## ump3_api.c:70:5
  105dda:    de e1 ff 8f 	call -273922 <xprintf : c2fdc >			  ## ump3_api.c:70:5
  105dde:    40 2f       	r0 = [addr(116)]  <.GCPI60_9 : 105e54 >			  ## ump3_api.c:71:5
  105de0:    de e1 cf 8f 	call -273928 <xprintf : c2fdc >			  ## ump3_api.c:71:5
  105de4:    41 2f       	r1 = [addr(116)]  <.GCPI60_10 : 105e58 >			  ## ump3_api.c:72:5
  105de6:    98 c6       	r0 = r11 			  ## ump3_api.c:72:5
  105de8:    22 c6       	r2 = r4 			  ## ump3_api.c:72:5
  105dea:    ff e1 7f eb 	call -658 <mp3_decoder_open : 105b5c >			  ## ump3_api.c:72:5
  105dee:    c0 2e       	r0 = [addr(108)]  <.GCPI60_11 : 105e5c >			  ## ump3_api.c:73:5
  105df0:    de e1 4f 8f 	call -273944 <xprintf : c2fdc >			  ## ump3_api.c:73:5
  105df4:    98 c6       	r0 = r11 			  ## ump3_api.c:74:9
  105df6:    ff e1 7f f5 	call -338 <format_check : 105ca8 >			  ## ump3_api.c:74:9
  105dfa:    70 20       	if (r0 == 0) goto 14 <ump3_decode_api+0x9E : 105e0a >			  ## ump3_api.c:74:9
  105dfc:    40 2e       	r0 = [addr(100)]  <.GCPI60_12 : 105e60 >			  ## ump3_api.c:75:9
  105dfe:    31 c6       	r1 = r6 			  ## ump3_api.c:75:9
  105e00:    de e1 cf 8e 	call -273960 <xprintf : c2fdc >			  ## ump3_api.c:75:9
  105e04:    51 ea 32 90 	r9 = 36914 			  ## ump3_api.c:75:9
  105e08:    0f 08       	goto 30 <ump3_decode_api+0xBC : 105e28 >			  ## ump3_api.c:75:9
  105e0a:    00 ed a0 88 	r0 = r10 + 136 			  ## ump3_api.c:79:5
  105e0e:    41 2d       	r1 = [addr(84)]  <.GCPI60_13 : 105e64 >			  ## ump3_api.c:79:5
  105e10:    ff e1 3f 03 	call -8090 <regist_dac_channel : 103e7a >			  ## ump3_api.c:79:5
  105e14:    10 e8 b1 28 	r1 = h[r11 + 160] 			  ## ump3_api.c:80:9
  105e18:    60 e8 a1 21 	[r10 + 132] = r1 			  ## ump3_api.c:81:21
  105e1c:    c0 2c       	r0 = [addr(76)]  <.GCPI60_14 : 105e68 >			  ## ump3_api.c:82:5
  105e1e:    de e1 df 8d 	call -273990 <xprintf : c2fdc >			  ## ump3_api.c:82:5
  105e22:    00 40       	r0 = [sp] 			  ## ump3_api.c:83:12
  105e24:    60 e8 08 00 	[r0 + 0] = r8 			  ## ump3_api.c:83:12
  105e28:    88 c6       	r0 = r9 			  ## ump3_api.c:89:1
  105e2a:    04 cd       	sp += 4 			  ## ump3_api.c:89:1
  105e2c:    1b c0       	{pc, r11-r4} = [sp++] 			  ## ump3_api.c:89:1
  105e2e:    00 00       	nop			  ## ump3_api.c:89:1


.GCPI60_0:
  105e30:    14 ac 11 00     < 1158164 : 0x11AC14 >

.GCPI60_1:
  105e34:    50 1e 00 00     < 7760 : 0x1E50 >

.GCPI60_2:
  105e38:    2c 39 00 00     < 14636 : 0x392C >

.GCPI60_3:
  105e3c:    44 53 00 00     < 21316 : 0x5344 >

.GCPI60_4:
  105e40:    64 53 00 00     < 21348 : 0x5364 >

.GCPI60_5:
  105e44:    30 72 11 00     < 1143344 : 0x117230 >

.GCPI60_6:
  105e48:    d8 5f 11 00     < 1138648 : 0x115FD8 >

.GCPI60_7:
  105e4c:    60 1c 00 00     < 7264 : 0x1C60 >

.GCPI60_8:
  105e50:    36 ac 11 00     < 1158198 : 0x11AC36 >

.GCPI60_9:
  105e54:    57 ac 11 00     < 1158231 : 0x11AC57 >

.GCPI60_10:
  105e58:    68 60 11 00     < 1138792 : 0x116068 >

.GCPI60_11:
  105e5c:    75 ac 11 00     < 1158261 : 0x11AC75 >

.GCPI60_12:
  105e60:    98 ac 11 00     < 1158296 : 0x11AC98 >

.GCPI60_13:
  105e64:    a0 0a 00 00     < 2720 : 0xAA0 >

.GCPI60_14:
  105e68:    c0 ac 11 00     < 1158336 : 0x11ACC0 >

ump3_buff_api:
  105e6c:    c1 28       	r1 = [addr(12)]  <.GCPI61_0 : 105e78 >			  ## ump3_api.c:94:0
  105e6e:    01 68       	[r0 + 0] = r1 			  ## ump3_api.c:95:22
  105e70:    c1 28       	r1 = [addr(12)]  <.GCPI61_1 : 105e7c >			  ## ump3_api.c:96:22
  105e72:    41 68       	[r0 + 4] = r1 			  ## ump3_api.c:96:22
  105e74:    00 80       	r0 = 0 			  ## ump3_api.c:97:5
  105e76:    20 00       	rts			  ## ump3_api.c:97:5


.GCPI61_0:
  105e78:    2c 39 00 00     < 14636 : 0x392C >

.GCPI61_1:
  105e7c:    64 58 00 00     < 22628 : 0x5864 >

mp_input:
  105e80:    16 c2       	[--sp] = {rets, r6-r4} 			  ## mp_io.c:16:0
  105e82:    1c c6       	r4 = r3 			  ## mp_io.c:16:0
  105e84:    15 c6       	r5 = r2 			  ## mp_io.c:16:0
  105e86:    06 c6       	r6 = r0 			  ## mp_io.c:16:0
  105e88:    30 48       	r0 = [r6 + 0] 			  ## mp_io.c:18:19
  105e8a:    ff e1 5f 0b 	call -7830 <vfs_seek : 103ff8 >			  ## mp_io.c:18:5
  105e8e:    30 48       	r0 = [r6 + 0] 			  ## mp_io.c:19:30
  105e90:    29 c6       	r1 = r5 			  ## mp_io.c:19:16
  105e92:    22 c6       	r2 = r4 			  ## mp_io.c:19:16
  105e94:    ff e1 af 0b 	call -7820 <vfs_read : 10400c >			  ## mp_io.c:19:16
  105e98:    16 c0       	{pc, r6-r4} = [sp++] 


sound_output:
  105e9a:    1f c2       	[--sp] = {rets} 			  ## sound_effect_api.c:20:0
  105e9c:    c3 48       	r3 = [r0 + 12] 			  ## sound_effect_api.c:24:32
  105e9e:    00 f4 30 04 	tst r3, 4			  ## sound_effect_api.c:24:9
  105ea2:    06 10       	ifs (nzcv == 0) goto 12 <sound_output+0x16 : 105eb0 >			  ## sound_effect_api.c:24:9
  105ea4:    43 48       	r3 = [r0 + 4] 			  ## sound_effect_api.c:28:33
  105ea6:    43 20       	if (r3 == 0) goto 8 <sound_output+0x16 : 105eb0 >
  105ea8:    00 e5 33 00 	r3, r0 = d[r3 + 0] 			  ## sound_effect_api.c:31:38
  105eac:    ab 01       	call r3			  ## sound_effect_api.c:31:20
  105eae:    1f c0       	{pc} = [sp++] 
  105eb0:    00 48       	r0 = [r0 + 0] 			  ## sound_effect_api.c:37:20
  105eb2:    7d e1 bf 0b 	call -1072778 <cbuf_write : 2c >			  ## sound_effect_api.c:38:12
  105eb6:    1f c0       	{pc} = [sp++] 


mp_output:
  105eb8:    c0 88       	r0 += 24 			  ## mp_io.c:25:0
  105eba:    ef 0f       	goto -34 <sound_output : 105e9a >			  ## mp_io.c:27:12


dev_byte_read:
  105ebc:    15 c2       	[--sp] = {rets, r5, r4} 			  ## device_api.c:129:0
  105ebe:    14 c6       	r4 = r2 			  ## device_api.c:129:0
  105ec0:    82 48       	r2 = [r0 + 8] 			  ## device_api.c:132:17
  105ec2:    d5 48       	r5 = [r2 + 12] 			  ## device_api.c:132:22
  105ec4:    45 20       	if (r5 == 0) goto 8 <dev_byte_read+0x12 : 105ece >			  ## device_api.c:132:22
  105ec6:    1a c6       	r2 = r3 			  ## device_api.c:133:16
  105ec8:    23 c6       	r3 = r4 			  ## device_api.c:133:16
  105eca:    ad 01       	call r5			  ## device_api.c:133:16
  105ecc:    15 c0       	{pc, r5, r4} = [sp++] 
  105ece:    00 80       	r0 = 0 
  105ed0:    15 c0       	{pc, r5, r4} = [sp++] 


recfs_read:
  105ed2:    14 c2       	[--sp] = {rets, r4} 			  ## nor_fs.c:97:0
  105ed4:    0c c6       	r4 = r1 			  ## nor_fs.c:97:0
  105ed6:    11 c6       	r1 = r2 			  ## nor_fs.c:100:5
  105ed8:    22 c6       	r2 = r4 			  ## nor_fs.c:100:5
  105eda:    f0 04       	call -32 <dev_byte_read : 105ebc >			  ## nor_fs.c:100:5
  105edc:    14 c0       	{pc, r4} = [sp++] 			  ## nor_fs.c:100:5


CRC16:
  105ede:    15 c2       	[--sp] = {rets, r5, r4} 			  ## crc16.c:5:0
  105ee0:    0c c6       	r4 = r1 			  ## crc16.c:5:0
  105ee2:    05 c6       	r5 = r0 			  ## crc16.c:5:0
  105ee4:    de e1 ef 81 	call -274372 <local_irq_disable : c2f24 >			  ## crc16.c:6:5
  105ee8:    28 c6       	r0 = r5 			  ## crc16.c:7:15
  105eea:    21 c6       	r1 = r4 			  ## crc16.c:7:15
  105eec:    de e1 2f 86 	call -274236 <chip_crc16 : c2fb4 >			  ## crc16.c:7:15
  105ef0:    04 c6       	r4 = r0 			  ## crc16.c:7:15
  105ef2:    de e1 5f 81 	call -274390 <local_irq_enable : c2f20 >			  ## crc16.c:8:5
  105ef6:    20 c6       	r0 = r4 			  ## crc16.c:9:5
  105ef8:    15 c0       	{pc, r5, r4} = [sp++] 			  ## crc16.c:9:5


recfs_wirte:
  105efa:    15 c2       	[--sp] = {rets, r5, r4} 			  ## nor_fs.c:116:0
  105efc:    0c c6       	r4 = r1 			  ## nor_fs.c:116:0
  105efe:    81 48       	r1 = [r0 + 8] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/dev_mg/code/device_api.c:142:17
  105f00:    0d 49       	r5 = [r1 + 16] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/dev_mg/code/device_api.c:142:22
  105f02:    45 20       	if (r5 == 0) goto 8 <recfs_wirte+0x12 : 105f0c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/dev_mg/code/device_api.c:142:22
  105f04:    11 c6       	r1 = r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/dev_mg/code/device_api.c:143:16
  105f06:    1a c6       	r2 = r3 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/dev_mg/code/device_api.c:143:16
  105f08:    23 c6       	r3 = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/dev_mg/code/device_api.c:143:16
  105f0a:    ad 01       	call r5			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/dev_mg/code/device_api.c:143:16
  105f0c:    15 c0       	{pc, r5, r4} = [sp++] 


norfs_monut_api:
  105f0e:    1d c2       	[--sp] = {rets, r13-r4} 			  ## nor_fs_resource.c:60:0
  105f10:    e0 cd       	sp += -32 			  ## nor_fs_resource.c:60:0
  105f12:    0f c6       	r7 = r1 			  ## nor_fs_resource.c:60:0
  105f14:    05 c6       	r5 = r0 			  ## nor_fs_resource.c:60:0
  105f16:    07 98       	cmp r7, 0			  ## nor_fs_resource.c:60:0
  105f18:    6e 10       	ifs (nzcv == 0) goto 220 <norfs_monut_api+0xE8 : 105ff6 >			  ## nor_fs_resource.c:60:0
  105f1a:    2c 48       	r4 = [r5 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:752:9
  105f1c:    7c 20       	if (r4 != 0) goto 14 <norfs_monut_api+0x1E : 105f2c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:752:9
  105f1e:    54 29       	r4 = [addr(276)]  <.GCPI71_0 : 106034 >			  ## nor_fs_resource.c:21:5
  105f20:    20 c6       	r0 = r4 			  ## nor_fs_resource.c:21:5
  105f22:    01 80       	r1 = 0 			  ## nor_fs_resource.c:21:5
  105f24:    a2 80       	r2 = 20 			  ## nor_fs_resource.c:21:5
  105f26:    de e1 9f 81 	call -274382 <memset : c2f5c >			  ## nor_fs_resource.c:21:5
  105f2a:    2c 68       	[r5 + 0] = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:753:15
  105f2c:    d0 28       	r0 = [addr(268)]  <.GCPI71_1 : 106038 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:762:33
  105f2e:    00 e8 02 1e 	r2 = b[r0 + 120] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:762:33
  105f32:    46 55       	r6 = h[r0 + 22] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:762:58
  105f34:    41 51       	r1 = h[r0 + 20] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:762:33
  105f36:    a1 74       	h[r4 + 10] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:736:23
  105f38:    e6 70       	h[r4 + 12] = r6 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:737:22
  105f3a:    65 80       	r5 = 12 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:737:22
  105f3c:    50 ea 00 00 	r8 = 0 
  105f40:    1a 20       	if (r2 != 0) goto 2 <norfs_monut_api+0x36 : 105f44 >
  105f42:    05 80       	r5 = 0 
  105f44:    e5 7c       	b[r4 + 14] = r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:738:22
  105f46:    48 2f       	r0 = [addr(244)]  <.GCPI71_2 : 10603c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:739:5
  105f48:    de e1 8f 84 	call -274288 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:739:5
  105f4c:    48 2f       	r0 = [addr(244)]  <.GCPI71_3 : 106040 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:740:5
  105f4e:    31 c6       	r1 = r6 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:740:5
  105f50:    de e1 4f 84 	call -274296 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:740:5
  105f54:    08 2f       	r0 = [addr(240)]  <.GCPI71_4 : 106044 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:741:5
  105f56:    29 c6       	r1 = r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:741:5
  105f58:    de e1 0f 84 	call -274304 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:741:5
  105f5c:    27 69       	[r4 + 16] = r7 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:764:15
  105f5e:    10 e8 49 82 	r9 = h[r4 + 10] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:428:28
  105f62:    50 e8 48 02 	h[r4 + 8] = r8 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:429:21
  105f66:    20 ee 90 01 	r0 = 1 - r9 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:432:45
  105f6a:    e1 50       	r1 = h[r4 + 12] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:432:23
  105f6c:    09 d4       	r1 = r1 + r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:432:49
  105f6e:    e0 5c       	r0 = b[r4 + 14] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:432:83
  105f70:    00 f7 1a 00 	r10 = r1 << r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:432:75
  105f74:    00 ed fd 00 	r13 = sp + 0 
  105f78:    00 f3 dc 02 	r12 = r13 | 2 
  105f7c:    53 ea 00 00 	r11 = 0 
  105f80:    8e c6       	r6 = r9 
  105f82:    02 08       	goto 4 <norfs_monut_api+0x7A : 105f88 >
  105f84:    27 49       	r7 = [r4 + 16] 
  105f86:    e0 5c       	r0 = b[r4 + 14] 
  105f88:    75 c9       	r5 = r6.l 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:434:16
  105f8a:    00 f7 51 00 	r1 = r5 << r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:434:33
  105f8e:    38 c6       	r0 = r7 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:437:9
  105f90:    aa c6       	r2 = r13 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:437:9
  105f92:    83 80       	r3 = 16 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:437:9
  105f94:    9e 04       	call -196 <recfs_read : 105ed2 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:437:9
  105f96:    a0 c6       	r0 = r12 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:439:15
  105f98:    71 80       	r1 = 14 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:439:15
  105f9a:    a1 04       	call -190 <CRC16 : 105ede >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:439:15
  105f9c:    d0 21       	if (r0 == 0) goto 58 <norfs_monut_api+0xCA : 105fd8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:439:15
  105f9e:    10 e9 01 00 	r1 = h[sp] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:440:42
  105fa2:    01 ce       	cmp r0, r1			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:440:42
  105fa4:    19 11       	ifs (nzcv != 0) goto 50 <norfs_monut_api+0xCA : 105fd8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:440:42
  105fa6:    80 40       	r0 = [sp+ 8] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:440:58
  105fa8:    42 ce       	cmp r0, r10			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:440:13
  105faa:    16 18       	if (nzcv > 0) goto 44 <norfs_monut_api+0xCA : 105fd8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:440:13
  105fac:    c1 40       	r1 = [sp+ 12] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:441:24
  105fae:    48 ce       	cmp r1, r8			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:441:17
  105fb0:    20 03       	if (nzcv >= 0) {			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:441:17
  105fb2:    71 c6       		r9 = r6 
                               	}			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:441:17
  105fb4:    48 ce       	cmp r1, r8			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:441:17
  105fb6:    20 03       	if (nzcv >= 0) {			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:441:17
  105fb8:    48 c6       		r8 = r1 
                               	}			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:441:17
  105fba:    00 ed bb 01 	r11 = r11 + 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:453:21
  105fbe:    c0 20       	if (r0 == 0) goto 24 <norfs_monut_api+0xCA : 105fd8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:453:21
  105fc0:    e1 5c       	r1 = b[r4 + 14] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:456:51
  105fc2:    0a 80       	r2 = 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:456:51
  105fc4:    00 f7 23 01 	r3 = r2 << r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:457:43
  105fc8:    db d3       	r3 = r3 + -1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:457:37
  105fca:    83 da       	r3 &= r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:457:37
  105fcc:    01 11       	ifs (nzcv != 0) goto 2 <norfs_monut_api+0xC2 : 105fd0 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:457:37
  105fce:    02 80       	r2 = 0 
  105fd0:    48 cf       	r0 >>= r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:456:48
  105fd2:    40 d5       	r0 = r0 + r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:456:29
  105fd4:    16 d4       	r6 = r2 + r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:457:21
  105fd6:    01 08       	goto 2 <norfs_monut_api+0xCC : 105fda >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:457:21
  105fd8:    76 d0       	r6 = r6 + 1 
  105fda:    e0 50       	r0 = h[r4 + 12] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:468:32
  105fdc:    71 c9       	r1 = r6.l 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:468:25
  105fde:    08 ce       	cmp r1, r0			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:468:13
  105fe0:    d1 19       	if (nzcv <= 0) goto -94 <norfs_monut_api+0x76 : 105f84 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:468:13
  105fe2:    8f ef 80 ff 	cmp r8, -1			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:474:9
  105fe6:    0a 10       	ifs (nzcv == 0) goto 20 <norfs_monut_api+0xEE : 105ffc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:474:9
  105fe8:    60 e8 48 00 	[r4 + 0] = r8 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:481:26
  105fec:    50 e8 49 01 	h[r4 + 4] = r9 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:482:27
  105ff0:    50 e8 4b 02 	h[r4 + 8] = r11 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:483:25
  105ff4:    1c 08       	goto 56 <norfs_monut_api+0x120 : 10602e >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:483:25
  105ff6:    10 ea 0f 80 	r0 = 32783 
  105ffa:    1a 08       	goto 52 <norfs_monut_api+0x122 : 106030 >
  105ffc:    a6 54       	r6 = h[r4 + 10] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:398:24
  105ffe:    01 80       	r1 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:398:24
  106000:    c1 61       	[sp+ 28] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:399:5
  106002:    81 61       	[sp+ 24] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:399:5
  106004:    41 61       	[sp+ 20] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:399:5
  106006:    01 61       	[sp+ 16] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:399:5
  106008:    85 90       	r5 = sp + 16 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:399:5
  10600a:    09 08       	goto 18 <norfs_monut_api+0x110 : 10601e >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:399:5
  10600c:    e0 5c       	r0 = b[r4 + 14] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:402:36
  10600e:    01 cf       	r1 <<= r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:402:33
  106010:    20 49       	r0 = [r4 + 16] 
  106012:    2a c6       	r2 = r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:404:9
  106014:    83 80       	r3 = 16 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:404:9
  106016:    ff e1 0f f7 	call -288 <recfs_wirte : 105efa >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:404:9
  10601a:    76 d0       	r6 = r6 + 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:406:20
  10601c:    e0 50       	r0 = h[r4 + 12] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:406:20
  10601e:    71 c9       	r1 = r6.l 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:401:24
  106020:    08 ce       	cmp r1, r0			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:401:5
  106022:    f4 19       	if (nzcv <= 0) goto -24 <norfs_monut_api+0xFE : 10600c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:401:5
  106024:    00 80       	r0 = 0 
  106026:    a0 70       	h[r4 + 8] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:477:25
  106028:    20 68       	[r4 + 0] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:478:26
  10602a:    a0 54       	r0 = h[r4 + 10] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:479:34
  10602c:    60 70       	h[r4 + 4] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:479:27
  10602e:    00 80       	r0 = 0 
  106030:    20 cd       	sp += 32 
  106032:    1d c0       	{pc, r13-r4} = [sp++] 


.GCPI71_0:
  106034:    60 1d 00 00     < 7520 : 0x1D60 >

.GCPI71_1:
  106038:    60 1c 00 00     < 7264 : 0x1C60 >

.GCPI71_2:
  10603c:    5f d3 11 00     < 1168223 : 0x11D35F >

.GCPI71_3:
  106040:    84 d3 11 00     < 1168260 : 0x11D384 >

.GCPI71_4:
  106044:    a9 d3 11 00     < 1168297 : 0x11D3A9 >

norfs_filehdl_malloc:
  106048:    c0 28       	r0 = [addr(12)]  <.GCPI72_0 : 106054 >			  ## nor_fs_resource.c:31:0
  10604a:    01 80       	r1 = 0 			  ## nor_fs_resource.c:32:5
  10604c:    62 81       	r2 = 44 			  ## nor_fs_resource.c:32:5
  10604e:    de fa 5f 78 	goto -274678 <memset : c2f5c >			  ## nor_fs_resource.c:32:5
  106052:    00 00       	nop			  ## nor_fs_resource.c:32:5


.GCPI72_0:
  106054:    00 17 00 00     < 5888 : 0x1700 >

norfs_openbyindex_api:
  106058:    1a c2       	[--sp] = {rets, r10-r4} 			  ## nor_fs_resource.c:65:0
  10605a:    e8 cd       	sp += -24 			  ## nor_fs_resource.c:65:0
  10605c:    0c c6       	r4 = r1 			  ## nor_fs_resource.c:65:0
  10605e:    07 c6       	r7 = r0 			  ## nor_fs_resource.c:65:0
  106060:    07 98       	cmp r7, 0			  ## nor_fs_resource.c:65:0
  106062:    5b 10       	ifs (nzcv == 0) goto 182 <norfs_openbyindex_api+0xC2 : 10611a >			  ## nor_fs_resource.c:65:0
  106064:    42 60       	[sp+ 4] = r2 			  ## nor_fs_resource.c:65:0
  106066:    20 e8 48 00 	r8 = [r4 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:792:9
  10606a:    80 ef 80 00 	cmp r8, 0			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:792:9
  10606e:    05 11       	ifs (nzcv != 0) goto 10 <norfs_openbyindex_api+0x22 : 10607a >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:792:9
  106070:    eb 04       	call -42 <norfs_filehdl_malloc : 106048 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:793:19
  106072:    20 e4 08 3c 	r8 = [addr(240)]  <.GCPI73_0 : 106164 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:793:17
  106076:    60 e8 48 00 	[r4 + 0] = r8 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:793:17
  10607a:    04 60       	[sp] = r4 
  10607c:    04 80       	r4 = 0 
  10607e:    80 c6       	r0 = r8 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:711:5
  106080:    01 80       	r1 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:711:5
  106082:    62 81       	r2 = 44 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:711:5
  106084:    de e1 af 76 	call -274732 <memset : c2f5c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:711:5
  106088:    60 e8 87 02 	[r8 + 8] = r7 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:714:16
  10608c:    60 e8 84 05 	[r8 + 20] = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:717:17
  106090:    b8 54       	r0 = h[r7 + 10] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:647:51
  106092:    f9 50       	r1 = h[r7 + 12] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:647:23
  106094:    49 d0       	r1 = r1 + 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:647:45
  106096:    09 d6       	r1 = r1 - r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:647:49
  106098:    f8 5c       	r0 = b[r7 + 14] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:647:83
  10609a:    00 f7 19 00 	r9 = r1 << r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:647:75
  10609e:    44 90       	r4 = sp + 8 
  1060a0:    00 f3 4a 02 	r10 = r4 | 2 
  1060a4:    7d 50       	r5 = h[r7 + 4] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:646:30
  1060a6:    01 08       	goto 2 <norfs_openbyindex_api+0x52 : 1060aa >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:646:30
  1060a8:    f8 5c       	r0 = b[r7 + 14] 
  1060aa:    6e c9       	r6 = r5.l 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:651:16
  1060ac:    00 f7 61 00 	r1 = r6 << r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:651:33
  1060b0:    38 49       	r0 = [r7 + 16] 
  1060b2:    22 c6       	r2 = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:652:9
  1060b4:    83 80       	r3 = 16 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:652:9
  1060b6:    ff e1 cf f0 	call -488 <recfs_read : 105ed2 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:652:9
  1060ba:    90 c6       	r0 = r10 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:653:15
  1060bc:    71 80       	r1 = 14 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:653:15
  1060be:    ff e1 ef f0 	call -484 <CRC16 : 105ede >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:653:15
  1060c2:    70 20       	if (r0 == 0) goto 14 <norfs_openbyindex_api+0x7A : 1060d2 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:653:15
  1060c4:    10 e9 01 02 	r1 = h[sp+ 8] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:660:42
  1060c8:    01 ce       	cmp r0, r1			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:660:42
  1060ca:    03 11       	ifs (nzcv != 0) goto 6 <norfs_openbyindex_api+0x7A : 1060d2 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:660:42
  1060cc:    00 41       	r0 = [sp+ 16] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:660:58
  1060ce:    41 ce       	cmp r0, r9			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:660:13
  1060d0:    02 19       	if (nzcv <= 0) goto 4 <norfs_openbyindex_api+0x7E : 1060d6 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:660:13
  1060d2:    6d d0       	r5 = r5 + 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:683:24
  1060d4:    10 08       	goto 32 <norfs_openbyindex_api+0x9E : 1060f6 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:683:24
  1060d6:    41 41       	r1 = [sp+ 20] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:662:24
  1060d8:    42 40       	r2 = [sp+ 4] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:662:24
  1060da:    0a ce       	cmp r1, r2			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:662:17
  1060dc:    20 10       	ifs (nzcv == 0) goto 64 <norfs_openbyindex_api+0xC6 : 10611e >
  1060de:    f9 5c       	r1 = b[r7 + 14] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:677:58
  1060e0:    0a 80       	r2 = 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:677:58
  1060e2:    00 f7 23 01 	r3 = r2 << r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:678:43
  1060e6:    db d3       	r3 = r3 + -1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:678:37
  1060e8:    83 da       	r3 &= r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:678:37
  1060ea:    01 11       	ifs (nzcv != 0) goto 2 <norfs_openbyindex_api+0x96 : 1060ee >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:678:37
  1060ec:    02 80       	r2 = 0 
  1060ee:    80 88       	r0 += 16 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:671:48
  1060f0:    48 cf       	r0 >>= r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:677:55
  1060f2:    80 d5       	r0 = r0 + r6 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:677:43
  1060f4:    15 d4       	r5 = r2 + r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:678:21
  1060f6:    f8 50       	r0 = h[r7 + 12] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:686:32
  1060f8:    69 c9       	r1 = r5.l 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:686:25
  1060fa:    08 ce       	cmp r1, r0			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:686:13
  1060fc:    80 03       	if (nzcv > 0) {			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:687:32
  1060fe:    bd 54       		r5 = h[r7 + 10] 
                               	}			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:687:32
  106100:    68 c9       	r0 = r5.l 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:690:31
  106102:    79 50       	r1 = h[r7 + 4] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:690:24
  106104:    08 ce       	cmp r1, r0			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:690:13
  106106:    d0 11       	ifs (nzcv != 0) goto -96 <norfs_openbyindex_api+0x50 : 1060a8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:690:13
  106108:    40 2e       	r0 = [addr(100)]  <.GCPI73_2 : 10616c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:695:5
  10610a:    de e1 7f 76 	call -274738 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:695:5
  10610e:    00 80       	r0 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:801:17
  106110:    01 40       	r1 = [sp] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:801:17
  106112:    08 68       	[r1 + 0] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:801:17
  106114:    14 ea 05 80 	r4 = 32773 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:801:17
  106118:    21 08       	goto 66 <norfs_openbyindex_api+0x104 : 10615c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:801:17
  10611a:    d4 d3       	r4 = r2 + -1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:789:23
  10611c:    1f 08       	goto 62 <norfs_openbyindex_api+0x104 : 10615c >
  10611e:    60 e8 82 00 	[r8 + 0] = r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:663:36
  106122:    50 e8 85 01 	h[r8 + 4] = r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:664:37
  106126:    60 e8 80 03 	[r8 + 12] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:665:28
  10612a:    04 80       	r4 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:665:28
  10612c:    40 e5 84 04 	d[r8 + 16] = r4, r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:666:30
  106130:    00 e9 00 03 	r0 = b[sp+ 12] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:668:36
  106134:    00 e9 c1 02 	r1 = b[sp+ 11] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:668:66
  106138:    41 f6 01 08 	r1 <= insert(r0, p:8, l:8) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:668:64
  10613c:    50 e8 81 06 	h[r8 + 24] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:668:27
  106140:    00 40       	r0 = [sp] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:805:13
  106142:    05 48       	r5 = [r0 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:805:13
  106144:    00 ed 50 23 	r0 = r5 + 35 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:807:5
  106148:    01 80       	r1 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:807:5
  10614a:    3a 80       	r2 = 7 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:807:5
  10614c:    de e1 6f 70 	call -274932 <memset : c2f5c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:807:5
  106150:    00 ed 50 1a 	r0 = r5 + 26 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:806:13
  106154:    41 29       	r1 = [addr(20)]  <.GCPI73_1 : 106168 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:807:5
  106156:    4a 80       	r2 = 9 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:807:5
  106158:    de e1 af 6f 	call -274956 <memcpy : c2f50 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:807:5
  10615c:    20 c6       	r0 = r4 			  ## nor_fs_resource.c:66:5
  10615e:    18 cd       	sp += 24 			  ## nor_fs_resource.c:66:5
  106160:    1a c0       	{pc, r10-r4} = [sp++] 			  ## nor_fs_resource.c:66:5
  106162:    00 00       	nop			  ## nor_fs_resource.c:66:5


.GCPI73_0:
  106164:    00 17 00 00     < 5888 : 0x1700 >

.GCPI73_1:
  106168:    cc d3 11 00     < 1168332 : 0x11D3CC >

.GCPI73_2:
  10616c:    3b d3 11 00     < 1168187 : 0x11D33B >

dev_ioctl:
  106170:    1f c2       	[--sp] = {rets} 			  ## device_api.c:89:0
  106172:    83 48       	r3 = [r0 + 8] 			  ## device_api.c:91:17
  106174:    1b 4a       	r3 = [r3 + 32] 			  ## device_api.c:91:22
  106176:    13 20       	if (r3 == 0) goto 2 <dev_ioctl+0xA : 10617a >			  ## device_api.c:91:22
  106178:    ab 01       	call r3			  ## device_api.c:92:16
  10617a:    1f c0       	{pc} = [sp++] 


rec_erase_sector:
  10617c:    17 c2       	[--sp] = {rets, r7-r4} 			  ## nor_fs.c:136:0
  10617e:    fc cd       	sp += -4 			  ## nor_fs.c:136:0
  106180:    0e c6       	r6 = r1 			  ## nor_fs.c:136:0
  106182:    05 c6       	r5 = r0 			  ## nor_fs.c:136:0
  106184:    a8 54       	r0 = h[r5 + 10] 			  ## nor_fs.c:139:30
  106186:    07 80       	r7 = 0 			  ## nor_fs.c:139:30
  106188:    06 ce       	cmp r0, r6			  ## nor_fs.c:139:44
  10618a:    1c 18       	if (nzcv > 0) goto 56 <rec_erase_sector+0x48 : 1061c4 >			  ## nor_fs.c:139:44
  10618c:    e9 50       	r1 = h[r5 + 12] 			  ## nor_fs.c:139:68
  10618e:    0e ce       	cmp r1, r6			  ## nor_fs.c:139:9
  106190:    19 13       	if (nzcv < 0) goto 50 <rec_erase_sector+0x48 : 1061c4 >			  ## nor_fs.c:139:9
  106192:    02 ce       	cmp r0, r2			  ## nor_fs.c:143:42
  106194:    17 18       	if (nzcv > 0) goto 46 <rec_erase_sector+0x48 : 1061c4 >			  ## nor_fs.c:143:42
  106196:    0a ce       	cmp r1, r2
  106198:    15 13       	if (nzcv < 0) goto 42 <rec_erase_sector+0x48 : 1061c4 >
  10619a:    02 60       	[sp] = r2 
  10619c:    0f 80       	r7 = 1 
  10619e:    07 08       	goto 14 <rec_erase_sector+0x32 : 1061ae >
  1061a0:    e8 50       	r0 = h[r5 + 12] 			  ## nor_fs.c:159:33
  1061a2:    76 d0       	r6 = r6 + 1 			  ## nor_fs.c:158:21
  1061a4:    71 c9       	r1 = r6.l 			  ## nor_fs.c:158:21
  1061a6:    08 ce       	cmp r1, r0			  ## nor_fs.c:159:13
  1061a8:    80 03       	if (nzcv > 0) {			  ## nor_fs.c:160:33
  1061aa:    ae 54       		r6 = h[r5 + 10] 
                               	}			  ## nor_fs.c:160:33
  1061ac:    7f d0       	r7 = r7 + 1 			  ## nor_fs.c:147:9
  1061ae:    e8 5c       	r0 = b[r5 + 14] 			  ## nor_fs.c:152:51
  1061b0:    74 c9       	r4 = r6.l 			  ## nor_fs.c:152:30
  1061b2:    00 f7 42 00 	r2 = r4 << r0 			  ## nor_fs.c:152:48
  1061b6:    28 49       	r0 = [r5 + 16] 			  ## nor_fs.c:83:20
  1061b8:    11 ea c8 00 	r1 = 200 			  ## nor_fs.c:83:5
  1061bc:    d9 04       	call -78 <dev_ioctl : 106170 >			  ## nor_fs.c:83:5
  1061be:    00 40       	r0 = [sp] 			  ## nor_fs.c:155:13
  1061c0:    20 ce       	cmp r4, r0			  ## nor_fs.c:155:13
  1061c2:    ee 11       	ifs (nzcv != 0) goto -36 <rec_erase_sector+0x24 : 1061a0 >			  ## nor_fs.c:155:13
  1061c4:    78 c9       	r0 = r7.l 			  ## nor_fs.c:165:1
  1061c6:    04 cd       	sp += 4 			  ## nor_fs.c:165:1
  1061c8:    17 c0       	{pc, r7-r4} = [sp++] 			  ## nor_fs.c:165:1


norfs_createfile_api:
  1061ca:    1b c2       	[--sp] = {rets, r11-r4} 			  ## nor_fs_resource.c:70:0
  1061cc:    ec cd       	sp += -20 			  ## nor_fs_resource.c:70:0
  1061ce:    0f c6       	r7 = r1 			  ## nor_fs_resource.c:70:0
  1061d0:    05 c6       	r5 = r0 			  ## nor_fs_resource.c:70:0
  1061d2:    05 98       	cmp r5, 0			  ## nor_fs_resource.c:70:0
  1061d4:    62 10       	ifs (nzcv == 0) goto 196 <norfs_createfile_api+0xD0 : 10629a >			  ## nor_fs_resource.c:70:0
  1061d6:    02 60       	[sp] = r2 			  ## nor_fs_resource.c:70:0
  1061d8:    3e 48       	r6 = [r7 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:775:9
  1061da:    4e 20       	if (r6 != 0) goto 8 <norfs_createfile_api+0x1A : 1061e4 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:775:9
  1061dc:    ff e1 4f f3 	call -408 <norfs_filehdl_malloc : 106048 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:776:19
  1061e0:    4e 2c       	r6 = [addr(196)]  <.GCPI76_0 : 1062a4 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:776:17
  1061e2:    3e 68       	[r7 + 0] = r6 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:776:17
  1061e4:    48 2c       	r0 = [addr(196)]  <.GCPI76_1 : 1062a8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:596:5
  1061e6:    29 c6       	r1 = r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:596:5
  1061e8:    32 c6       	r2 = r6 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:596:5
  1061ea:    de e1 7f 6f 	call -274962 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:596:5
  1061ee:    30 c6       	r0 = r6 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:597:5
  1061f0:    01 80       	r1 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:597:5
  1061f2:    62 81       	r2 = 44 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:597:5
  1061f4:    de e1 2f 6b 	call -275100 <memset : c2f5c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:597:5
  1061f8:    b5 68       	[r6 + 8] = r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:598:16
  1061fa:    00 e8 58 83 	r8 = b[r5 + 14] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:504:20
  1061fe:    6c 50       	r4 = h[r5 + 4] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:599:25
  106200:    00 f7 41 08 	r1 = r4 << r8 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:504:17
  106204:    10 e8 59 82 	r9 = h[r5 + 10] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:505:61
  106208:    10 e8 5a 03 	r10 = h[r5 + 12] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:505:33
  10620c:    28 49       	r0 = [r5 + 16] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:505:33
  10620e:    27 90       	r7 = sp + 4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:505:33
  106210:    3a c6       	r2 = r7 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:506:5
  106212:    83 80       	r3 = 16 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:506:5
  106214:    ff e1 df e5 	call -838 <recfs_read : 105ed2 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:506:5
  106218:    20 e9 0b 03 	r11 = [sp+ 12] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:507:29
  10621c:    00 f3 70 02 	r0 = r7 | 2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:508:26
  106220:    71 80       	r1 = 14 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:508:10
  106222:    ff e1 cf e5 	call -840 <CRC16 : 105ede >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:508:10
  106226:    10 e9 01 01 	r1 = h[sp+ 4] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:508:73
  10622a:    01 ce       	cmp r0, r1			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:509:9
  10622c:    21 c6       	r1 = r4 
  10622e:    16 11       	ifs (nzcv != 0) goto 44 <norfs_createfile_api+0x92 : 10625c >
  106230:    00 ed b0 10 	r0 = r11 + 16 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:507:38
  106234:    00 ed a1 01 	r1 = r10 + 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:505:45
  106238:    40 ee 11 09 	r1 = r1 - r9 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:505:49
  10623c:    00 f7 11 08 	r1 = r1 << r8 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:505:75
  106240:    01 ce       	cmp r0, r1			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:508:9
  106242:    21 c6       	r1 = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:508:9
  106244:    0b 18       	if (nzcv > 0) goto 22 <norfs_createfile_api+0x92 : 10625c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:508:9
  106246:    e9 5c       	r1 = b[r5 + 14] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:511:40
  106248:    0a 80       	r2 = 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:511:40
  10624a:    00 f7 23 01 	r3 = r2 << r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:512:28
  10624e:    db d3       	r3 = r3 + -1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:512:22
  106250:    83 da       	r3 &= r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:512:22
  106252:    01 11       	ifs (nzcv != 0) goto 2 <norfs_createfile_api+0x8C : 106256 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:512:22
  106254:    02 80       	r2 = 0 
  106256:    48 cf       	r0 >>= r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:511:37
  106258:    00 d5       	r0 = r0 + r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:511:25
  10625a:    11 d4       	r1 = r2 + r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:512:13
  10625c:    48 c9       	r0 = r1.l 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:601:16
  10625e:    20 ce       	cmp r4, r0			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:601:9
  106260:    08 10       	ifs (nzcv == 0) goto 16 <norfs_createfile_api+0xA8 : 106272 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:601:9
  106262:    ea 50       	r2 = h[r5 + 12] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:602:25
  106264:    02 ce       	cmp r0, r2			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:602:13
  106266:    87 03       	if (nzcv > 0) {			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:603:25
  106268:    c8 d3       		r0 = r1 + -1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:603:25
  10626a:    80 d6       		r0 = r0 - r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:603:44
  10626c:    a9 54       		r1 = h[r5 + 10] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:603:51
  10626e:    44 d4       		r4 = r0 + r1 
                               	} else {			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:603:64
  106270:    0c c6       		r4 = r1 
                               	}			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:603:64
  106272:    28 48       	r0 = [r5 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:607:37
  106274:    40 d0       	r0 = r0 + 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:607:43
  106276:    30 68       	[r6 + 0] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:607:24
  106278:    74 70       	h[r6 + 4] = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:608:25
  10627a:    61 c9       	r1 = r4.l 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:609:15
  10627c:    28 c6       	r0 = r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:609:15
  10627e:    0a c6       	r2 = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:609:15
  106280:    ff e1 cf f7 	call -264 <rec_erase_sector : 10617c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:609:15
  106284:    e9 5c       	r1 = b[r5 + 14] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:610:35
  106286:    08 cf       	r0 <<= r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:610:32
  106288:    80 8f       	r0 += -16 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:610:53
  10628a:    f0 68       	[r6 + 12] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:610:16
  10628c:    00 80       	r0 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:610:16
  10628e:    30 69       	[r6 + 16] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:611:18
  106290:    70 69       	[r6 + 20] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:612:17
  106292:    31 48       	r1 = [r6 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:613:25
  106294:    02 40       	r2 = [sp] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:782:13
  106296:    11 68       	[r2 + 0] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:782:13
  106298:    02 08       	goto 4 <norfs_createfile_api+0xD4 : 10629e >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:782:13
  10629a:    10 ea 02 80 	r0 = 32770 
  10629e:    14 cd       	sp += 20 
  1062a0:    1b c0       	{pc, r11-r4} = [sp++] 
  1062a2:    00 00       	nop


.GCPI76_0:
  1062a4:    00 17 00 00     < 5888 : 0x1700 >

.GCPI76_1:
  1062a8:    18 d3 11 00     < 1168152 : 0x11D318 >

norfs_read_api:
  1062ac:    1b c2       	[--sp] = {rets, r11-r4} 			  ## nor_fs_resource.c:80:0
  1062ae:    f4 cd       	sp += -12 			  ## nor_fs_resource.c:80:0
  1062b0:    81 60       	[sp+ 8] = r1 			  ## nor_fs_resource.c:80:0
  1062b2:    06 c6       	r6 = r0 			  ## nor_fs_resource.c:80:0
  1062b4:    00 e5 65 02 	r5, r0 = d[r6 + 8] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:225:29
  1062b8:    c1 5c       	r1 = b[r0 + 14] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:225:54
  1062ba:    83 54       	r3 = h[r0 + 10] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:226:17
  1062bc:    c4 50       	r4 = h[r0 + 12] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:225:17
  1062be:    50 c9       	r0 = r2.l 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:229:15
  1062c0:    77 49       	r7 = [r6 + 20] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:229:28
  1062c2:    c0 d5       	r0 = r0 + r7 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:229:19
  1062c4:    05 ce       	cmp r0, r5			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:229:9
  1062c6:    04 13       	if (nzcv < 0) goto 8 <norfs_read_api+0x24 : 1062d0 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:229:9
  1062c8:    00 80       	r0 = 0 
  1062ca:    2f ce       	cmp r5, r7			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:230:13
  1062cc:    33 19       	if (nzcv <= 0) goto 102 <norfs_read_api+0x88 : 106334 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:230:13
  1062ce:    ea d7       	r2 = r5 - r7 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:233:29
  1062d0:    00 f7 30 01 	r0 = r3 << r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:226:48
  1062d4:    63 d0       	r3 = r4 + 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:225:46
  1062d6:    00 f7 39 01 	r9 = r3 << r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:225:51
  1062da:    40 ee 08 09 	r8 = r0 - r9 
  1062de:    46 60       	[sp+ 4] = r6 
  1062e0:    70 50       	r0 = h[r6 + 4] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:237:27
  1062e2:    08 cf       	r0 <<= r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:237:52
  1062e4:    c0 d5       	r0 = r0 + r7 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:237:24
  1062e6:    80 88       	r0 += 16 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:237:80
  1062e8:    52 c6       	r10 = r2 
  1062ea:    02 60       	[sp] = r2 
  1062ec:    1f 08       	goto 62 <norfs_read_api+0x80 : 10632c >
  1062ee:    02 80       	r2 = 0 
  1062f0:    41 ce       	cmp r0, r9			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:242:13
  1062f2:    20 03       	if (nzcv >= 0) {			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:242:13
  1062f4:    82 c6       		r2 = r8 
                               	}			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:242:13
  1062f6:    87 d4       	r7 = r0 + r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:242:13
  1062f8:    78 d4       	r0 = r7 + r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:245:19
  1062fa:    40 ee 9b 07 	r11 = r9 - r7 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:246:28
  1062fe:    41 ce       	cmp r0, r9			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:245:13
  106300:    90 03       	if (nzcv <= 0) {			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:245:13
  106302:    d3 c6       		r11 = r10 
                               	}			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:245:13
  106304:    40 ec b6 00 	r6 = r11.l 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:254:9
  106308:    45 40       	r5 = [sp+ 4] 
  10630a:    a8 48       	r0 = [r5 + 8] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:254:27
  10630c:    00 49       	r0 = [r0 + 16] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:254:27
  10630e:    39 c6       	r1 = r7 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:254:9
  106310:    84 40       	r4 = [sp+ 8] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:254:9
  106312:    22 c6       	r2 = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:254:9
  106314:    33 c6       	r3 = r6 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:254:9
  106316:    ff e1 cf dd 	call -1096 <recfs_read : 105ed2 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:254:9
  10631a:    68 49       	r0 = [r5 + 20] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:256:21
  10631c:    80 d5       	r0 = r0 + r6 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:256:21
  10631e:    68 69       	[r5 + 20] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:256:21
  106320:    40 ee aa 0b 	r10 = r10 - r11 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:257:14
  106324:    f0 d5       	r0 = r6 + r7 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:259:14
  106326:    a4 d5       	r4 = r4 + r6 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:258:14
  106328:    84 60       	[sp+ 8] = r4 
  10632a:    02 40       	r2 = [sp] 
  10632c:    40 ec a1 00 	r1 = r10.l 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:241:5
  106330:    de 11       	ifs (nzcv != 0) goto -68 <norfs_read_api+0x42 : 1062ee >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:241:5
  106332:    50 c9       	r0 = r2.l 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:262:1
  106334:    0c cd       	sp += 12 
  106336:    1b c0       	{pc, r11-r4} = [sp++] 


norfs_write_phy:
  106338:    1a c2       	[--sp] = {rets, r10-r4} 			  ## nor_fs.c:284:0
  10633a:    f0 cd       	sp += -16 			  ## nor_fs.c:284:0
  10633c:    1d c6       	r5 = r3 			  ## nor_fs.c:284:0
  10633e:    17 c6       	r7 = r2 			  ## nor_fs.c:284:0
  106340:    81 60       	[sp+ 8] = r1 			  ## nor_fs.c:284:0
  106342:    04 c6       	r4 = r0 			  ## nor_fs.c:284:0
  106344:    de e1 ef 5e 	call -275492 <local_irq_disable : c2f24 >			  ## nor_fs.c:290:5
  106348:    a0 48       	r0 = [r4 + 8] 			  ## nor_fs.c:294:29
  10634a:    00 e8 08 83 	r8 = b[r0 + 14] 			  ## nor_fs.c:294:54
  10634e:    c6 50       	r6 = h[r0 + 12] 			  ## nor_fs.c:294:22
  106350:    de e1 6f 5e 	call -275508 <local_irq_enable : c2f20 >			  ## nor_fs.c:296:5
  106354:    62 50       	r2 = h[r4 + 4] 			  ## nor_fs.c:296:5
  106356:    a0 48       	r0 = [r4 + 8] 			  ## nor_fs.c:297:29
  106358:    c1 5c       	r1 = b[r0 + 14] 			  ## nor_fs.c:297:63
  10635a:    00 f7 23 01 	r3 = r2 << r1 			  ## nor_fs.c:297:63
  10635e:    c4 60       	[sp+ 12] = r4 			  ## nor_fs.c:297:63
  106360:    62 49       	r2 = [r4 + 20] 
  106362:    9b d4       	r3 = r3 + r2 
  106364:    00 ed 34 10 	r4 = r3 + 16 			  ## nor_fs.c:303:84
  106368:    05 60       	[sp] = r5 
  10636a:    15 20       	if (r5 == 0) goto 2 <norfs_write_phy+0x36 : 10636e >
  10636c:    1c c6       	r4 = r3 			  ## nor_fs.c:300:9
  10636e:    73 d0       	r3 = r6 + 1 			  ## nor_fs.c:294:46
  106370:    00 f7 39 08 	r9 = r3 << r8 			  ## nor_fs.c:294:51
  106374:    83 54       	r3 = h[r0 + 10] 			  ## nor_fs.c:297:16
  106376:    00 f7 38 01 	r8 = r3 << r1 			  ## nor_fs.c:297:48
  10637a:    c3 40       	r3 = [sp+ 12] 
  10637c:    db 48       	r3 = [r3 + 12] 
  10637e:    52 ea 01 00 	r10 = 1 
  106382:    47 60       	[sp+ 4] = r7 
  106384:    21 08       	goto 66 <norfs_write_phy+0x90 : 1063c8 >
  106386:    00 f7 a5 01 	r5 = r10 << r1 			  ## nor_fs.c:314:63
  10638a:    ed d4       	r5 = r5 + r3 			  ## nor_fs.c:314:57
  10638c:    7d 88       	r5 += 15 			  ## nor_fs.c:314:91
  10638e:    40 f7 51 01 	r1 = r5 >> r1 			  ## nor_fs.c:314:96
  106392:    c5 40       	r5 = [sp+ 12] 			  ## nor_fs.c:315:36
  106394:    6d 50       	r5 = h[r5 + 4] 			  ## nor_fs.c:315:36
  106396:    49 d5       	r1 = r1 + r5 			  ## nor_fs.c:315:20
  106398:    4f c9       	r7 = r1.l 			  ## nor_fs.c:316:17
  10639a:    c6 50       	r6 = h[r0 + 12] 			  ## nor_fs.c:316:26
  10639c:    3e ce       	cmp r7, r6			  ## nor_fs.c:316:17
  10639e:    83 03       	if (nzcv > 0) {			  ## nor_fs.c:317:33
  1063a0:    f1 da       		r1 = ~r6 			  ## nor_fs.c:317:33
  1063a2:    c9 d5       		r1 = r1 + r7 			  ## nor_fs.c:317:59
  1063a4:    86 54       		r6 = h[r0 + 10] 			  ## nor_fs.c:317:61
  1063a6:    89 d5       		r1 = r1 + r6 
                               	}			  ## nor_fs.c:317:86
  1063a8:    49 c9       	r1 = r1.l 			  ## nor_fs.c:317:86
  1063aa:    29 ce       	cmp r5, r1			  ## nor_fs.c:319:17
  1063ac:    11 10       	ifs (nzcv == 0) goto 34 <norfs_write_phy+0x98 : 1063d0 >			  ## nor_fs.c:319:17
  1063ae:    0a c6       	r2 = r1 			  ## nor_fs.c:323:17
  1063b0:    ff e1 4f ee 	call -568 <rec_erase_sector : 10617c >			  ## nor_fs.c:323:17
  1063b4:    c5 40       	r5 = [sp+ 12] 
  1063b6:    00 e5 53 02 	r3, r0 = d[r5 + 8] 			  ## nor_fs.c:324:57
  1063ba:    c1 5c       	r1 = b[r0 + 14] 			  ## nor_fs.c:324:62
  1063bc:    00 f7 a2 01 	r2 = r10 << r1 			  ## nor_fs.c:324:47
  1063c0:    9b d4       	r3 = r3 + r2 			  ## nor_fs.c:324:41
  1063c2:    eb 68       	[r5 + 12] = r3 			  ## nor_fs.c:324:28
  1063c4:    6a 49       	r2 = [r5 + 20] 			  ## nor_fs.c:324:28
  1063c6:    47 40       	r7 = [sp+ 4] 			  ## nor_fs.c:324:28
  1063c8:    d5 d5       	r5 = r2 + r7 			  ## nor_fs.c:310:26
  1063ca:    2b ce       	cmp r5, r3			  ## nor_fs.c:310:13
  1063cc:    dc 18       	if (nzcv > 0) goto -72 <norfs_write_phy+0x4E : 106386 >			  ## nor_fs.c:310:13
  1063ce:    01 08       	goto 2 <norfs_write_phy+0x9A : 1063d2 >			  ## nor_fs.c:310:13
  1063d0:    9f d6       	r7 = r3 - r2 			  ## nor_fs.c:336:26
  1063d2:    40 ee 88 09 	r8 = r8 - r9 
  1063d6:    47 60       	[sp+ 4] = r7 
  1063d8:    7a c6       	r10 = r7 
  1063da:    1a 08       	goto 52 <norfs_write_phy+0xD8 : 106410 >
  1063dc:    01 80       	r1 = 0 
  1063de:    61 ce       	cmp r4, r9			  ## nor_fs.c:346:13
  1063e0:    20 03       	if (nzcv >= 0) {			  ## nor_fs.c:346:13
  1063e2:    81 c6       		r1 = r8 
                               	}			  ## nor_fs.c:346:13
  1063e4:    66 d4       	r6 = r4 + r1 			  ## nor_fs.c:346:13
  1063e6:    80 d5       	r0 = r0 + r6 			  ## nor_fs.c:350:19
  1063e8:    40 ee 95 06 	r5 = r9 - r6 			  ## nor_fs.c:351:28
  1063ec:    41 ce       	cmp r0, r9			  ## nor_fs.c:350:13
  1063ee:    90 03       	if (nzcv <= 0) {			  ## nor_fs.c:350:13
  1063f0:    95 c6       		r5 = r10 
                               	}			  ## nor_fs.c:350:13
  1063f2:    6c c9       	r4 = r5.l 			  ## nor_fs.c:363:9
  1063f4:    c0 40       	r0 = [sp+ 12] 			  ## nor_fs.c:363:28
  1063f6:    80 48       	r0 = [r0 + 8] 			  ## nor_fs.c:363:28
  1063f8:    00 49       	r0 = [r0 + 16] 			  ## nor_fs.c:363:28
  1063fa:    31 c6       	r1 = r6 			  ## nor_fs.c:363:9
  1063fc:    87 40       	r7 = [sp+ 8] 			  ## nor_fs.c:363:9
  1063fe:    3a c6       	r2 = r7 			  ## nor_fs.c:363:9
  106400:    23 c6       	r3 = r4 			  ## nor_fs.c:363:9
  106402:    ff e1 af d7 	call -1292 <recfs_wirte : 105efa >			  ## nor_fs.c:363:9
  106406:    40 ee aa 05 	r10 = r10 - r5 			  ## nor_fs.c:366:14
  10640a:    3f d5       	r7 = r7 + r4 			  ## nor_fs.c:365:14
  10640c:    87 60       	[sp+ 8] = r7 
  10640e:    a4 d5       	r4 = r4 + r6 			  ## nor_fs.c:364:14
  106410:    40 ec a0 00 	r0 = r10.l 			  ## nor_fs.c:345:5
  106414:    e3 11       	ifs (nzcv != 0) goto -58 <norfs_write_phy+0xA4 : 1063dc >			  ## nor_fs.c:345:5
  106416:    00 40       	r0 = [sp] 			  ## nor_fs.c:372:9
  106418:    42 40       	r2 = [sp+ 4] 			  ## nor_fs.c:372:9
  10641a:    a8 20       	if (r0 != 0) goto 20 <norfs_write_phy+0xF8 : 106430 >			  ## nor_fs.c:372:9
  10641c:    50 c9       	r0 = r2.l 			  ## nor_fs.c:373:24
  10641e:    c3 40       	r3 = [sp+ 12] 			  ## nor_fs.c:373:24
  106420:    59 49       	r1 = [r3 + 20] 			  ## nor_fs.c:373:21
  106422:    40 d4       	r0 = r0 + r1 			  ## nor_fs.c:373:21
  106424:    58 69       	[r3 + 20] = r0 			  ## nor_fs.c:373:21
  106426:    19 49       	r1 = [r3 + 16] 			  ## nor_fs.c:376:31
  106428:    01 ce       	cmp r0, r1			  ## nor_fs.c:376:13
  10642a:    81 03       	if (nzcv > 0) {			  ## nor_fs.c:377:26
  10642c:    c1 40       		r1 = [sp+ 12] 			  ## nor_fs.c:377:26
  10642e:    08 69       		[r1 + 16] = r0 
                               	}			  ## nor_fs.c:377:26
  106430:    50 c9       	r0 = r2.l 			  ## nor_fs.c:381:5
  106432:    10 cd       	sp += 16 			  ## nor_fs.c:381:5
  106434:    1a c0       	{pc, r10-r4} = [sp++] 


norfs_write_api:
  106436:    52 c9       	r2 = r2.l 			  ## nor_fs_resource.c:75:0
  106438:    03 80       	r3 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:279:12
  10643a:    7e 0f       	goto -260 <norfs_write_phy : 106338 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:279:12


norfs_seek_api:
  10643c:    14 c2       	[--sp] = {rets, r4} 			  ## nor_fs_resource.c:85:0
  10643e:    03 c6       	r3 = r0 			  ## nor_fs_resource.c:85:0
  106440:    00 80       	r0 = 0 			  ## nor_fs_resource.c:85:0
  106442:    73 21       	if (r3 == 0) goto 46 <norfs_seek_api+0x36 : 106472 >			  ## nor_fs_resource.c:85:0
  106444:    14 c9       	r4 = r2.b 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:188:5
  106446:    da 48       	r2 = [r3 + 12] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:186:23
  106448:    14 98       	cmp r4, 2			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:188:5
  10644a:    09 10       	ifs (nzcv == 0) goto 18 <norfs_seek_api+0x22 : 10645e >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:188:5
  10644c:    0c 98       	cmp r4, 1
  10644e:    0d 10       	ifs (nzcv == 0) goto 26 <norfs_seek_api+0x2E : 10646a >
  106450:    0c 21       	if (r4 != 0) goto 32 <norfs_seek_api+0x36 : 106472 >
  106452:    10 ea 10 80 	r0 = 32784 
  106456:    11 ce       	cmp r2, r1			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:190:13
  106458:    0c 19       	if (nzcv <= 0) goto 24 <norfs_seek_api+0x36 : 106472 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:190:13
  10645a:    59 69       	[r3 + 20] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:193:21
  10645c:    09 08       	goto 18 <norfs_seek_api+0x34 : 106470 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:193:21
  10645e:    10 ea 11 80 	r0 = 32785 
  106462:    11 ce       	cmp r2, r1			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:199:13
  106464:    06 13       	if (nzcv < 0) goto 12 <norfs_seek_api+0x36 : 106472 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:199:13
  106466:    50 d6       	r0 = r2 - r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:202:32
  106468:    02 08       	goto 4 <norfs_seek_api+0x32 : 10646e >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:202:32
  10646a:    58 49       	r0 = [r3 + 20] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:196:21
  10646c:    40 d4       	r0 = r0 + r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:196:21
  10646e:    58 69       	[r3 + 20] = r0 
  106470:    00 80       	r0 = 0 
  106472:    14 c0       	{pc, r4} = [sp++] 


norfs_file_close_api:
  106474:    01 80       	r1 = 0 			  ## nor_fs_resource.c:91:0
  106476:    01 68       	[r0 + 0] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:617:13
  106478:    00 80       	r0 = 0 			  ## nor_fs_resource.c:92:5
  10647a:    20 00       	rts			  ## nor_fs_resource.c:92:5


norfs_name_api:
  10647c:    14 c2       	[--sp] = {rets, r4} 			  ## nor_fs_resource.c:102:0
  10647e:    14 c6       	r4 = r2 			  ## nor_fs_resource.c:102:0
  106480:    00 ed 02 1a 	r2 = r0 + 26 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:895:19
  106484:    08 c6       	r0 = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:895:5
  106486:    11 c6       	r1 = r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:895:5
  106488:    22 c6       	r2 = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:895:5
  10648a:    de e1 1f 56 	call -275774 <memcpy : c2f50 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:895:5
  10648e:    20 c6       	r0 = r4 			  ## nor_fs_resource.c:103:5
  106490:    14 c0       	{pc, r4} = [sp++] 			  ## nor_fs_resource.c:103:5


sync_recfile:
  106492:    16 c2       	[--sp] = {rets, r6-r4} 			  ## nor_fs.c:539:0
  106494:    f0 cd       	sp += -16 			  ## nor_fs.c:539:0
  106496:    04 c6       	r4 = r0 			  ## nor_fs.c:539:0
  106498:    20 49       	r0 = [r4 + 16] 			  ## nor_fs.c:541:21
  10649a:    d0 22       	if (r0 == 0) goto 90 <sync_recfile+0x64 : 1064f6 >			  ## nor_fs.c:541:21
  10649c:    fa 87       	r2 = -1 			  ## nor_fs.c:544:5
  10649e:    42 60       	[sp+ 4] = r2 			  ## nor_fs.c:544:5
  1064a0:    02 60       	[sp] = r2 			  ## nor_fs.c:544:5
  1064a2:    e0 68       	[r4 + 12] = r0 			  ## nor_fs.c:546:16
  1064a4:    06 80       	r6 = 0 			  ## nor_fs.c:546:16
  1064a6:    66 69       	[r4 + 20] = r6 			  ## nor_fs.c:547:17
  1064a8:    01 ce       	cmp r0, r1			  ## nor_fs.c:550:9
  1064aa:    90 03       	if (nzcv <= 0) {			  ## nor_fs.c:550:9
  1064ac:    01 80       		r1 = 0 
                               	}			  ## nor_fs.c:550:9
  1064ae:    40 d6       	r0 = r0 - r1 			  ## nor_fs.c:550:9
  1064b0:    80 60       	[sp+ 8] = r0 			  ## nor_fs.c:549:21
  1064b2:    80 80       	r0 = 16 			  ## nor_fs.c:549:21
  1064b4:    40 e9 80 00 	b[sp+ 2] = r0 			  ## nor_fs.c:554:21
  1064b8:    20 48       	r0 = [r4 + 0] 			  ## nor_fs.c:555:33
  1064ba:    c0 60       	[sp+ 12] = r0 			  ## nor_fs.c:555:18
  1064bc:    a0 51       	r0 = h[r4 + 24] 			  ## nor_fs.c:556:36
  1064be:    40 e9 c0 00 	b[sp+ 3] = r0 			  ## nor_fs.c:556:22
  1064c2:    40 a8       	r0 = r0 >> 8 			  ## nor_fs.c:557:24
  1064c4:    40 e9 00 01 	b[sp+ 4] = r0 			  ## nor_fs.c:557:22
  1064c8:    05 90       	r5 = sp + 0 			  ## nor_fs.c:557:22
  1064ca:    00 f3 50 02 	r0 = r5 | 2 			  ## nor_fs.c:554:12
  1064ce:    71 80       	r1 = 14 			  ## nor_fs.c:558:18
  1064d0:    ff e1 5f d0 	call -1526 <CRC16 : 105ede >			  ## nor_fs.c:558:18
  1064d4:    50 e9 00 00 	h[sp] = r0 			  ## nor_fs.c:558:16
  1064d8:    66 69       	[r4 + 20] = r6 			  ## nor_fs.c:569:17
  1064da:    20 c6       	r0 = r4 			  ## nor_fs.c:570:5
  1064dc:    29 c6       	r1 = r5 			  ## nor_fs.c:570:5
  1064de:    82 80       	r2 = 16 			  ## nor_fs.c:570:5
  1064e0:    0b 80       	r3 = 1 			  ## nor_fs.c:570:5
  1064e2:    ff e1 9f f2 	call -430 <norfs_write_phy : 106338 >			  ## nor_fs.c:570:5
  1064e6:    a0 48       	r0 = [r4 + 8] 			  ## nor_fs.c:571:12
  1064e8:    21 48       	r1 = [r4 + 0] 			  ## nor_fs.c:571:44
  1064ea:    01 68       	[r0 + 0] = r1 			  ## nor_fs.c:571:29
  1064ec:    61 50       	r1 = h[r4 + 4] 			  ## nor_fs.c:572:45
  1064ee:    41 70       	h[r0 + 4] = r1 			  ## nor_fs.c:572:30
  1064f0:    66 69       	[r4 + 20] = r6 			  ## nor_fs.c:577:17
  1064f2:    80 40       	r0 = [sp+ 8] 			  ## nor_fs.c:578:19
  1064f4:    01 08       	goto 2 <sync_recfile+0x66 : 1064f8 >			  ## nor_fs.c:578:19
  1064f6:    00 80       	r0 = 0 
  1064f8:    10 cd       	sp += 16 
  1064fa:    16 c0       	{pc, r6-r4} = [sp++] 


norfs_ioctl_api:
  1064fc:    16 c2       	[--sp] = {rets, r6-r4} 			  ## nor_fs_resource.c:96:0
  1064fe:    14 c6       	r4 = r2 			  ## nor_fs_resource.c:96:0
  106500:    0e c6       	r6 = r1 			  ## nor_fs_resource.c:96:0
  106502:    05 c6       	r5 = r0 			  ## nor_fs_resource.c:96:0
  106504:    88 28       	r0 = [addr(136)]  <.GCPI84_0 : 10658c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:819:5
  106506:    de e1 9f 56 	call -275758 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:819:5
  10650a:    1f ed 60 ee 	r0 = r6 + -18 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:820:5
  10650e:    30 98       	cmp r0, 6			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:820:5
  106510:    0e 18       	if (nzcv > 0) goto 28 <.GJTIE84_0_0_+0x12 : 10652e >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:820:5
  106512:    b0 01       	tbb [r0]


.GJTIS84_0_0_:
  106514:    04     < 4 : 0x4 >
  106515:    04     < 4 : 0x4 >
  106516:    0f     < 15 : 0xF >
  106517:    1a     < 26 : 0x1A >
  106518:    25     < 37 : 0x25 >
  106519:    08     < 8 : 0x8 >
  10651a:    08     < 8 : 0x8 >
  10651b:    00     < 0 : 0x0 >
  10651c:    a4 22       	if (r4 == 0) goto 84 <.GJTIE84_0_0_+0x56 : 106572 >
  10651e:    a8 48       	r0 = [r5 + 8] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:829:31
  106520:    80 50       	r0 = h[r0 + 8] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:829:24
  106522:    21 08       	goto 66 <.GJTIE84_0_0_+0x4A : 106566 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:829:24
  106524:    06 80       	r6 = 0 
  106526:    74 22       	if (r4 == 0) goto 78 <.GJTIE84_0_0_+0x5A : 106576 >
  106528:    28 48       	r0 = [r5 + 0] 
  10652a:    20 68       	[r4 + 0] = r0 
  10652c:    24 08       	goto 72 <.GJTIE84_0_0_+0x5A : 106576 >
  10652e:    fe 87       	r6 = -1 
  106530:    22 08       	goto 68 <.GJTIE84_0_0_+0x5A : 106576 >
  106532:    c0 2d       	r0 = [addr(92)]  <.GCPI84_1 : 106590 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:835:9
  106534:    de e1 2f 55 	call -275804 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:835:9
  106538:    94 21       	if (r4 == 0) goto 50 <.GJTIE84_0_0_+0x50 : 10656c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:835:9
  10653a:    a8 50       	r0 = h[r5 + 8] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:844:24
  10653c:    20 68       	[r4 + 0] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:844:22
  10653e:    40 2d       	r0 = [addr(84)]  <.GCPI84_2 : 106594 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:845:13
  106540:    de e1 cf 54 	call -275816 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:845:13
  106544:    06 80       	r6 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:845:13
  106546:    17 08       	goto 46 <.GJTIE84_0_0_+0x5A : 106576 >
  106548:    44 21       	if (r4 == 0) goto 40 <.GJTIE84_0_0_+0x56 : 106572 >
  10654a:    c5 21       	if (r5 == 0) goto 56 <.GJTIE84_0_0_+0x68 : 106584 >
  10654c:    e8 48       	r0 = [r5 + 12] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:856:31
  10654e:    60 68       	[r4 + 4] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:856:22
  106550:    68 50       	r0 = h[r5 + 4] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:857:25
  106552:    a9 48       	r1 = [r5 + 8] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:857:55
  106554:    c9 5c       	r1 = b[r1 + 14] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:857:48
  106556:    08 cf       	r0 <<= r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:857:45
  106558:    a0 68       	[r4 + 8] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:857:23
  10655a:    06 80       	r6 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:857:23
  10655c:    0c 08       	goto 24 <.GJTIE84_0_0_+0x5A : 106576 >
  10655e:    d4 20       	if (r4 == 0) goto 26 <.GJTIE84_0_0_+0x5E : 10657a >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:862:13
  106560:    21 48       	r1 = [r4 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:864:42
  106562:    28 c6       	r0 = r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:864:22
  106564:    96 04       	call -212 <sync_recfile : 106492 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:864:22
  106566:    20 68       	[r4 + 0] = r0 
  106568:    06 80       	r6 = 0 
  10656a:    05 08       	goto 10 <.GJTIE84_0_0_+0x5A : 106576 >
  10656c:    c0 2a       	r0 = [addr(44)]  <.GCPI84_3 : 106598 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:837:13
  10656e:    de e1 5f 53 	call -275862 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:837:13
  106572:    16 ea 02 81 	r6 = 33026 
  106576:    30 c6       	r0 = r6 			  ## nor_fs_resource.c:97:5
  106578:    16 c0       	{pc, r6-r4} = [sp++] 			  ## nor_fs_resource.c:97:5
  10657a:    06 80       	r6 = 0 
  10657c:    28 c6       	r0 = r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:866:13
  10657e:    01 80       	r1 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:866:13
  106580:    88 04       	call -240 <sync_recfile : 106492 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:866:13
  106582:    f9 0f       	goto -14 <.GJTIE84_0_0_+0x5A : 106576 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:866:13
  106584:    16 ea 01 80 	r6 = 32769 
  106588:    f6 0f       	goto -20 <.GJTIE84_0_0_+0x5A : 106576 >
  10658a:    00 00       	nop


.GCPI84_0:
  10658c:    d5 d3 11 00     < 1168341 : 0x11D3D5 >

.GCPI84_1:
  106590:    f2 d3 11 00     < 1168370 : 0x11D3F2 >

.GCPI84_2:
  106594:    2c d4 11 00     < 1168428 : 0x11D42C >

.GCPI84_3:
  106598:    0e d4 11 00     < 1168398 : 0x11D40E >

fat_read_device:
  10659c:    15 c2       	[--sp] = {rets, r5, r4} 			  ## simple_fat.c:26:0
  10659e:    13 c6       	r3 = r2 			  ## simple_fat.c:26:0
  1065a0:    82 48       	r2 = [r0 + 8] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/dev_mg/code/device_api.c:112:17
  1065a2:    55 49       	r5 = [r2 + 20] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/dev_mg/code/device_api.c:112:22
  1065a4:    0c 80       	r4 = 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/dev_mg/code/device_api.c:112:22
  1065a6:    55 20       	if (r5 == 0) goto 10 <fat_read_device+0x16 : 1065b2 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/dev_mg/code/device_api.c:112:22
  1065a8:    0a 80       	r2 = 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/dev_mg/code/device_api.c:113:16
  1065aa:    ad 01       	call r5			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/dev_mg/code/device_api.c:113:16
  1065ac:    08 98       	cmp r0, 1			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/dev_mg/code/device_api.c:114:5
  1065ae:    00 03       	ifs (nzcv == 0) {			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/dev_mg/code/device_api.c:114:5
  1065b0:    04 80       		r4 = 0 
                               	}			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/dev_mg/code/device_api.c:114:5
  1065b2:    80 f3 40 01 	r0 = r4 & 1 			  ## simple_fat.c:44:5
  1065b6:    15 c0       	{pc, r5, r4} = [sp++] 			  ## simple_fat.c:44:5


ld_dword_func:
  1065b8:    01 5e       	r1 = b[r0 + 3] 			  ## simple_fat.c:82:0
  1065ba:    09 b8       	r1 = r1 << 24 			  ## simple_fat.c:83:22
  1065bc:    02 5c       	r2 = b[r0 + 2] 			  ## simple_fat.c:83:30
  1065be:    12 b0       	r2 = r2 << 16 			  ## simple_fat.c:83:35
  1065c0:    11 da       	r1 |= r2 			  ## simple_fat.c:83:28
  1065c2:    02 5a       	r2 = b[r0 + 1] 			  ## simple_fat.c:83:43
  1065c4:    12 a8       	r2 = r2 << 8 			  ## simple_fat.c:83:48
  1065c6:    11 da       	r1 |= r2 			  ## simple_fat.c:83:41
  1065c8:    00 58       	r0 = b[r0 + 0] 			  ## simple_fat.c:83:55
  1065ca:    08 da       	r0 |= r1 			  ## simple_fat.c:83:53
  1065cc:    20 00       	rts			  ## simple_fat.c:83:5


move_window:
  1065ce:    15 c2       	[--sp] = {rets, r5, r4} 			  ## simple_fat.c:48:0
  1065d0:    0c c6       	r4 = r1 			  ## simple_fat.c:48:0
  1065d2:    01 c6       	r1 = r0 			  ## simple_fat.c:48:0
  1065d4:    02 ed 15 20 	r5 = r1 + 544 			  ## simple_fat.c:48:0
  1065d8:    2a 48       	r2 = [r5 + 0] 			  ## simple_fat.c:53:15
  1065da:    00 80       	r0 = 0 			  ## simple_fat.c:53:15
  1065dc:    14 ce       	cmp r2, r4			  ## simple_fat.c:53:9
  1065de:    0a 10       	ifs (nzcv == 0) goto 20 <move_window+0x26 : 1065f4 >			  ## simple_fat.c:53:9
  1065e0:    68 48       	r0 = [r5 + 4] 
  1065e2:    01 89       	r1 += 32 			  ## simple_fat.c:55:39
  1065e4:    22 c6       	r2 = r4 			  ## simple_fat.c:55:19
  1065e6:    da 04       	call -76 <fat_read_device : 10659c >			  ## simple_fat.c:55:19
  1065e8:    40 20       	if (r0 == 0) goto 8 <move_window+0x24 : 1065f2 >
  1065ea:    fc 87       	r4 = -1 
  1065ec:    2c 68       	[r5 + 0] = r4 			  ## simple_fat.c:59:33
  1065ee:    10 ea 94 00 	r0 = 148 			  ## simple_fat.c:59:33
  1065f2:    2c 68       	[r5 + 0] = r4 			  ## simple_fat.c:61:26
  1065f4:    15 c0       	{pc, r5, r4} = [sp++] 


ld_word_func:
  1065f6:    00 c9       	r0 = r0.b 			  ## simple_fat.c:77:0
  1065f8:    09 a8       	r1 = r1 << 8 			  ## simple_fat.c:78:22
  1065fa:    08 da       	r0 |= r1 			  ## simple_fat.c:78:27
  1065fc:    40 c9       	r0 = r0.l 			  ## simple_fat.c:78:5
  1065fe:    20 00       	rts			  ## simple_fat.c:78:5


get_powerof2:
  106600:    11 ea ff 00 	r1 = 255 			  ## simple_fat.c:17:0
  106604:    49 d0       	r1 = r1 + 1 			  ## simple_fat.c:19:5
  106606:    40 a1       	r0 = r0 >> 1 			  ## simple_fat.c:19:15
  106608:    fd 11       	ifs (nzcv != 0) goto -6 <get_powerof2+0x4 : 106604 >			  ## simple_fat.c:19:5
  10660a:    08 c9       	r0 = r1.b 			  ## simple_fat.c:22:5
  10660c:    20 00       	rts			  ## simple_fat.c:22:5


smpl_fat_monut_api:
  10660e:    19 c2       	[--sp] = {rets, r9-r4} 			  ## smpl_fat_resource.c:21:0
  106610:    01 98       	cmp r1, 0			  ## smpl_fat_resource.c:21:0
  106612:    00 fb 40 0c 	ifs (nzcv == 0) goto 392 <smpl_fat_monut_api+0x190 : 10679e >			  ## smpl_fat_resource.c:21:0
  106616:    5c 29       	r4 = [addr(404)]  <.GCPI90_0 : 1067ac >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:184:16
  106618:    02 ed 40 24 	r0 = r4 + 548 
  10661c:    01 68       	[r0 + 0] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:184:16
  10661e:    00 ed 42 20 	r2 = r4 + 32 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:186:5
  106622:    05 80       	r5 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:186:5
  106624:    08 c6       	r0 = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:186:5
  106626:    11 c6       	r1 = r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:186:5
  106628:    02 80       	r2 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:186:5
  10662a:    b8 04       	call -144 <fat_read_device : 10659c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:186:5
  10662c:    21 c6       	r1 = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:189:35
  10662e:    04 e8 10 88 	r0 = b[++ r1 = 34] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:189:35
  106632:    ca 5d       	r2 = b[r1 + -2] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:189:10
  106634:    80 ef 20 eb 	cmp r2, 235			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:189:35
  106638:    06 11       	ifs (nzcv != 0) goto 12 <smpl_fat_monut_api+0x38 : 106646 >
  10663a:    c9 5f       	r1 = b[r1 + -1] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:189:35
  10663c:    c1 9a       	cmp r1, 88			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:189:35
  10663e:    03 11       	ifs (nzcv != 0) goto 6 <smpl_fat_monut_api+0x38 : 106646 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:189:35
  106640:    80 ef 00 90 	cmp r0, 144
  106644:    04 10       	ifs (nzcv == 0) goto 8 <smpl_fat_monut_api+0x40 : 10664e >
  106646:    01 ed 40 e6 	r0 = r4 + 486 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:192:18
  10664a:    b6 04       	call -148 <ld_dword_func : 1065b8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:192:18
  10664c:    05 c6       	r5 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:192:18
  10664e:    10 ea 20 02 	r0 = 544 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:194:21
  106652:    fe 87       	r6 = -1 
  106654:    60 e7 46 00 	[r4 + r0] = r6 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:194:21
  106658:    90 2d       	r0 = [addr(344)]  <.GCPI90_1 : 1067b0 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:166:5
  10665a:    de e1 ff 4b 	call -276098 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:166:5
  10665e:    50 2d       	r0 = [addr(340)]  <.GCPI90_2 : 1067b4 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:167:5
  106660:    29 c6       	r1 = r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:167:5
  106662:    de e1 bf 4b 	call -276106 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:167:5
  106666:    10 2d       	r0 = [addr(336)]  <.GCPI90_3 : 1067b8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:168:5
  106668:    de e1 8f 4b 	call -276112 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:168:5
  10666c:    20 c6       	r0 = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:169:9
  10666e:    29 c6       	r1 = r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:169:9
  106670:    ae 04       	call -164 <move_window : 1065ce >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:169:9
  106672:    00 98       	cmp r0, 0			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:169:9
  106674:    00 fb 81 09 	ifs (nzcv != 0) goto 304 <smpl_fat_monut_api+0x19A : 1067a8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:169:9
  106678:    27 c6       	r7 = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:92:22
  10667a:    04 e8 71 0b 	r1 = b[++ r7 = 44] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:92:22
  10667e:    f8 5f       	r0 = b[r7 + -1] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:92:22
  106680:    ba 04       	call -140 <ld_word_func : 1065f6 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:92:22
  106682:    40 a9       	r0 = r0 >> 9 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:93:50
  106684:    bd 04       	call -134 <get_powerof2 : 106600 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:93:26
  106686:    38 7f       	b[r7 + -13] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:93:24
  106688:    48 88       	r0 += 9 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:94:37
  10668a:    38 79       	b[r7 + -16] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:94:16
  10668c:    10 2b       	r0 = [addr(304)]  <.GCPI90_4 : 1067bc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:95:5
  10668e:    de e1 5f 4a 	call -276150 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:95:5
  106692:    f8 5f       	r0 = b[r7 + -1] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:96:28
  106694:    00 98       	cmp r0, 0
  106696:    00 fb 41 08 	ifs (nzcv != 0) goto 264 <smpl_fat_monut_api+0x194 : 1067a2 >
  10669a:    00 e8 40 0b 	r0 = b[r4 + 44] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:100:41
  10669e:    b0 04       	call -160 <get_powerof2 : 106600 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:100:28
  1066a0:    07 c6       	r7 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:100:28
  1066a2:    d0 29       	r0 = [addr(284)]  <.GCPI90_5 : 1067c0 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:102:5
  1066a4:    de e1 af 49 	call -276172 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:102:5
  1066a8:    f8 d3       	r0 = r7 + -1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:103:34
  1066aa:    00 c9       	r0 = r0.b 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:103:34
  1066ac:    18 98       	cmp r0, 3			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:103:34
  1066ae:    79 18       	if (nzcv > 0) goto 242 <smpl_fat_monut_api+0x194 : 1067a2 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:103:34
  1066b0:    50 29       	r0 = [addr(276)]  <.GCPI90_6 : 1067c4 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:106:5
  1066b2:    de e1 3f 49 	call -276186 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:106:5
  1066b6:    10 29       	r0 = [addr(272)]  <.GCPI90_7 : 1067c8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:107:5
  1066b8:    de e1 0f 49 	call -276192 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:107:5
  1066bc:    00 e8 49 0c 	r9 = b[r4 + 48] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:110:14
  1066c0:    80 ef 90 00 	cmp r9, 0			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:111:9
  1066c4:    6e 10       	ifs (nzcv == 0) goto 220 <smpl_fat_monut_api+0x194 : 1067a2 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:111:9
  1066c6:    00 ed 40 44 	r0 = r4 + 68 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:108:15
  1066ca:    ff e1 5f f7 	call -278 <ld_dword_func : 1065b8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:108:15
  1066ce:    40 c6       	r8 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:108:15
  1066d0:    c8 2f       	r0 = [addr(252)]  <.GCPI90_8 : 1067cc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:114:5
  1066d2:    de e1 3f 48 	call -276218 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:114:5
  1066d6:    20 c6       	r0 = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:116:9
  1066d8:    04 e8 01 cb 	r1 = b[++ r0 = 47] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:116:9
  1066dc:    c0 5f       	r0 = b[r0 + -1] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:116:9
  1066de:    8b 04       	call -234 <ld_word_func : 1065f6 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:116:9
  1066e0:    00 98       	cmp r0, 0			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:116:9
  1066e2:    5f 10       	ifs (nzcv == 0) goto 190 <smpl_fat_monut_api+0x194 : 1067a2 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:116:9
  1066e4:    c8 2e       	r0 = [addr(236)]  <.GCPI90_9 : 1067d0 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:119:5
  1066e6:    de e1 9f 47 	call -276238 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:119:5
  1066ea:    00 ed 47 24 	r7 = r4 + 36 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:119:5
  1066ee:    b9 5e       	r1 = b[r7 + 11] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:120:30
  1066f0:    b8 5c       	r0 = b[r7 + 10] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:120:30
  1066f2:    81 04       	call -254 <ld_word_func : 1065f6 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:120:30
  1066f4:    40 d5       	r0 = r0 + r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:120:28
  1066f6:    20 68       	[r4 + 0] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:120:17
  1066f8:    c8 2d       	r0 = [addr(220)]  <.GCPI90_10 : 1067d4 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:121:5
  1066fa:    de e1 ff 46 	call -276258 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:121:5
  1066fe:    b8 5a       	r0 = b[r7 + 9] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:122:30
  106700:    ff e1 ef f7 	call -260 <get_powerof2 : 106600 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:122:17
  106704:    b8 7b       	b[r7 + -7] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:122:15
  106706:    b9 5f       	r1 = b[r7 + -5] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:123:10
  106708:    40 d4       	r0 = r0 + r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:123:29
  10670a:    48 88       	r0 += 9 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:123:41
  10670c:    80 98       	cmp r0, 16			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:123:9
  10670e:    49 18       	if (nzcv > 0) goto 146 <smpl_fat_monut_api+0x194 : 1067a2 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:123:9
  106710:    80 fc 88 09 	r8 = r8 * r9 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:115:13
  106714:    48 2c       	r0 = [addr(196)]  <.GCPI90_11 : 1067d8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:126:5
  106716:    de e1 1f 46 	call -276286 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:126:5
  10671a:    22 c6       	r2 = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:127:21
  10671c:    04 e8 21 8c 	r1 = b[++ r2 = 50] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:127:21
  106720:    d0 5f       	r0 = b[r2 + -1] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:127:21
  106722:    ff e1 8f f6 	call -304 <ld_word_func : 1065f6 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:127:21
  106726:    03 c6       	r3 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:127:21
  106728:    63 71       	h[r4 + 20] = r3 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:127:19
  10672a:    11 5c       	r1 = b[r2 + 2] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:128:17
  10672c:    10 5a       	r0 = b[r2 + 1] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:128:17
  10672e:    ff e1 2f f6 	call -316 <ld_word_func : 1065f6 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:128:17
  106732:    02 c6       	r2 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:128:17
  106734:    5a 20       	if (r2 != 0) goto 10 <smpl_fat_monut_api+0x132 : 106740 >
  106736:    00 ed 40 40 	r0 = r4 + 64 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:130:21
  10673a:    ff e1 df f3 	call -390 <ld_dword_func : 1065b8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:130:21
  10673e:    02 c6       	r2 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:130:21
  106740:    00 ed 47 24 	r7 = r4 + 36 
  106744:    b9 5e       	r1 = b[r7 + 11] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:133:19
  106746:    b8 5c       	r0 = b[r7 + 10] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:133:19
  106748:    ff e1 5f f5 	call -342 <ld_word_func : 1065f6 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:133:19
  10674c:    40 ee 21 08 	r1 = r2 - r8 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:133:17
  106750:    08 d6       	r0 = r1 - r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:133:63
  106752:    b9 5f       	r1 = b[r7 + -5] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:133:98
  106754:    09 d1       	r1 = r1 + 4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:133:89
  106756:    4b cf       	r3 >>= r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:133:89
  106758:    c0 d6       	r0 = r0 - r3 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:133:73
  10675a:    b9 5b       	r1 = b[r7 + -7] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:134:21
  10675c:    48 cf       	r0 >>= r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:134:18
  10675e:    11 ea f5 ff 	r1 = 65525 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:136:18
  106762:    01 ce       	cmp r0, r1			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:136:9
  106764:    1e 19       	if (nzcv <= 0) goto 60 <smpl_fat_monut_api+0x194 : 1067a2 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:136:9
  106766:    80 d0       	r0 = r0 + 2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:148:29
  106768:    e0 68       	[r4 + 12] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:148:18
  10676a:    00 ed 40 4c 	r0 = r4 + 76 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:150:23
  10676e:    ff e1 3f f2 	call -442 <ld_dword_func : 1065b8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:150:23
  106772:    02 c6       	r2 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:150:23
  106774:    62 68       	[r4 + 4] = r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:150:21
  106776:    00 ee 30 08 	r0 = r3 + r8 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:158:33
  10677a:    21 48       	r1 = [r4 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:158:25
  10677c:    43 d4       	r3 = r0 + r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:158:43
  10677e:    a3 68       	[r4 + 8] = r3 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:158:18
  106780:    18 80       	r0 = 3 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:159:17
  106782:    40 e8 40 87 	b[r4 + 30] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:159:17
  106786:    40 2d       	r0 = [addr(84)]  <.GCPI90_12 : 1067dc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:160:5
  106788:    de e1 8f 42 	call -276400 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:160:5
  10678c:    40 2d       	r0 = [addr(84)]  <.GCPI90_13 : 1067e0 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:173:5
  10678e:    de e1 5f 42 	call -276406 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:173:5
  106792:    00 2d       	r0 = [addr(80)]  <.GCPI90_14 : 1067e4 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:177:5
  106794:    de e1 2f 42 	call -276412 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:177:5
  106798:    a5 69       	[r4 + 24] = r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:178:19
  10679a:    06 80       	r6 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:178:19
  10679c:    05 08       	goto 10 <smpl_fat_monut_api+0x19A : 1067a8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:178:19
  10679e:    fe 87       	r6 = -1 
  1067a0:    03 08       	goto 6 <smpl_fat_monut_api+0x19A : 1067a8 >
  1067a2:    c0 2b       	r0 = [addr(60)]  <.GCPI90_13 : 1067e0 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:173:5
  1067a4:    de e1 af 41 	call -276428 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:173:5
  1067a8:    30 c6       	r0 = r6 			  ## smpl_fat_resource.c:27:1
  1067aa:    19 c0       	{pc, r9-r4} = [sp++] 			  ## smpl_fat_resource.c:27:1


.GCPI90_0:
  1067ac:    4c 19 00 00     < 6476 : 0x194C >

.GCPI90_1:
  1067b0:    96 d0 11 00     < 1167510 : 0x11D096 >

.GCPI90_2:
  1067b4:    b3 d0 11 00     < 1167539 : 0x11D0B3 >

.GCPI90_3:
  1067b8:    dd d0 11 00     < 1167581 : 0x11D0DD >

.GCPI90_4:
  1067bc:    fa d0 11 00     < 1167610 : 0x11D0FA >

.GCPI90_5:
  1067c0:    1e d1 11 00     < 1167646 : 0x11D11E >

.GCPI90_6:
  1067c4:    3a d1 11 00     < 1167674 : 0x11D13A >

.GCPI90_7:
  1067c8:    56 d1 11 00     < 1167702 : 0x11D156 >

.GCPI90_8:
  1067cc:    72 d1 11 00     < 1167730 : 0x11D172 >

.GCPI90_9:
  1067d0:    8e d1 11 00     < 1167758 : 0x11D18E >

.GCPI90_10:
  1067d4:    b0 d1 11 00     < 1167792 : 0x11D1B0 >

.GCPI90_11:
  1067d8:    cc d1 11 00     < 1167820 : 0x11D1CC >

.GCPI90_12:
  1067dc:    0b d2 11 00     < 1167883 : 0x11D20B >

.GCPI90_13:
  1067e0:    e8 d1 11 00     < 1167848 : 0x11D1E8 >

.GCPI90_14:
  1067e4:    47 d2 11 00     < 1167943 : 0x11D247 >

clust2sect:
  1067e8:    8a d3       	r2 = r1 + -2 			  ## simple_fat.c:68:0
  1067ea:    c1 48       	r1 = [r0 + 12] 			  ## simple_fat.c:70:23
  1067ec:    8b d3       	r3 = r1 + -2 			  ## simple_fat.c:70:32
  1067ee:    01 80       	r1 = 0 			  ## simple_fat.c:70:32
  1067f0:    13 ce       	cmp r2, r3			  ## simple_fat.c:70:9
  1067f2:    09 12       	if (nzcv >= 0) goto 18 <clust2sect+0x1E : 106806 >			  ## simple_fat.c:70:9
  1067f4:    01 c6       	r1 = r0 			  ## simple_fat.c:73:28
  1067f6:    04 e8 13 47 	r3 = b[++ r1 = 29] 			  ## simple_fat.c:73:28
  1067fa:    1a cf       	r2 <<= r3 			  ## simple_fat.c:73:25
  1067fc:    80 48       	r0 = [r0 + 8] 			  ## simple_fat.c:73:45
  1067fe:    80 d4       	r0 = r0 + r2 			  ## simple_fat.c:73:39
  106800:    09 5c       	r1 = b[r1 + 2] 			  ## simple_fat.c:73:58
  106802:    00 f7 01 01 	r1 = r0 << r1 			  ## simple_fat.c:73:55
  106806:    08 c6       	r0 = r1 			  ## simple_fat.c:74:1
  106808:    20 00       	rts			  ## simple_fat.c:74:1


f_opendir:
  10680a:    14 c2       	[--sp] = {rets, r4} 			  ## simple_fat.c:210:0
  10680c:    04 c6       	r4 = r0 			  ## simple_fat.c:210:0
  10680e:    00 2b       	r0 = [addr(48)]  <.GCPI92_0 : 106840 >			  ## simple_fat.c:213:17
  106810:    00 e8 01 87 	r1 = b[r0 + 30] 			  ## simple_fat.c:213:17
  106814:    42 48       	r2 = [r0 + 4] 			  ## simple_fat.c:214:25
  106816:    63 48       	r3 = [r4 + 4] 			  ## simple_fat.c:211:25
  106818:    11 98       	cmp r1, 2			  ## simple_fat.c:212:9
  10681a:    11 c6       	r1 = r2 			  ## simple_fat.c:212:9
  10681c:    90 03       	if (nzcv <= 0) {			  ## simple_fat.c:212:9
  10681e:    19 c6       		r1 = r3 
                               	}			  ## simple_fat.c:212:9
  106820:    13 20       	if (r3 == 0) goto 2 <f_opendir+0x1A : 106824 >			  ## simple_fat.c:212:9
  106822:    19 c6       	r1 = r3 			  ## simple_fat.c:212:9
  106824:    a1 69       	[r4 + 24] = r1 			  ## simple_fat.c:217:15
  106826:    31 20       	if (r1 == 0) goto 6 <f_opendir+0x24 : 10682e >			  ## simple_fat.c:218:17
  106828:    80 29       	r0 = [addr(24)]  <.GCPI92_0 : 106840 >			  ## simple_fat.c:218:25
  10682a:    de 04       	call -68 <clust2sect : 1067e8 >			  ## simple_fat.c:218:25
  10682c:    04 08       	goto 8 <f_opendir+0x2C : 106836 >
  10682e:    00 e8 00 c7 	r0 = b[r0 + 31] 			  ## simple_fat.c:218:65
  106832:    00 f7 20 00 	r0 = r2 << r0 			  ## simple_fat.c:218:62
  106836:    e0 69       	[r4 + 28] = r0 			  ## simple_fat.c:218:15
  106838:    10 ea ff ff 	r0 = 65535 			  ## simple_fat.c:219:16
  10683c:    60 71       	h[r4 + 20] = r0 			  ## simple_fat.c:219:16
  10683e:    14 c0       	{pc, r4} = [sp++] 			  ## simple_fat.c:219:16


.GCPI92_0:
  106840:    4c 19 00 00     < 6476 : 0x194C >

get_fat:
  106844:    16 c2       	[--sp] = {rets, r6-r4} 			  ## simple_fat.c:223:0
  106846:    0e c6       	r6 = r1 			  ## simple_fat.c:223:0
  106848:    05 c6       	r5 = r0 			  ## simple_fat.c:223:0
  10684a:    0c 80       	r4 = 1 			  ## simple_fat.c:223:0
  10684c:    16 98       	cmp r6, 2			  ## simple_fat.c:226:20
  10684e:    1b 13       	if (nzcv < 0) goto 54 <get_fat+0x42 : 106886 >			  ## simple_fat.c:226:20
  106850:    e8 48       	r0 = [r5 + 12] 			  ## simple_fat.c:226:35
  106852:    06 ce       	cmp r0, r6			  ## simple_fat.c:226:9
  106854:    18 19       	if (nzcv <= 0) goto 48 <get_fat+0x42 : 106886 >			  ## simple_fat.c:226:9
  106856:    28 c6       	r0 = r5 			  ## simple_fat.c:228:21
  106858:    04 e8 01 87 	r1 = b[++ r0 = 30] 			  ## simple_fat.c:228:21
  10685c:    19 98       	cmp r1, 3			  ## simple_fat.c:228:9
  10685e:    13 11       	ifs (nzcv != 0) goto 38 <get_fat+0x42 : 106886 >			  ## simple_fat.c:228:9
  106860:    00 5a       	r0 = b[r0 + 1] 			  ## simple_fat.c:227:33
  106862:    29 48       	r1 = [r5 + 0] 			  ## simple_fat.c:227:22
  106864:    00 f7 10 00 	r0 = r1 << r0 			  ## simple_fat.c:227:30
  106868:    71 a7       	r1 = r6 >> 7 			  ## simple_fat.c:260:51
  10686a:    09 d4       	r1 = r1 + r0 			  ## simple_fat.c:260:43
  10686c:    28 c6       	r0 = r5 			  ## simple_fat.c:260:17
  10686e:    ff e1 ef ea 	call -676 <move_window : 1065ce >			  ## simple_fat.c:260:17
  106872:    98 20       	if (r0 != 0) goto 18 <get_fat+0x42 : 106886 >			  ## simple_fat.c:260:17
  106874:    30 a2       	r0 = r6 << 2 			  ## simple_fat.c:259:42
  106876:    8f f3 00 fe 	r0 = r0 & 508 			  ## simple_fat.c:259:23
  10687a:    40 d5       	r0 = r0 + r5 			  ## simple_fat.c:263:37
  10687c:    00 89       	r0 += 32 			  ## simple_fat.c:263:37
  10687e:    ff e1 bf e9 	call -714 <ld_dword_func : 1065b8 >			  ## simple_fat.c:263:22
  106882:    c4 f3 04 70 	r4 = r0 & (~4026531840) 			  ## simple_fat.c:264:20
  106886:    20 c6       	r0 = r4 			  ## simple_fat.c:269:1
  106888:    16 c0       	{pc, r6-r4} = [sp++] 			  ## simple_fat.c:269:1


smpl_fat_openR_api:
  10688a:    1e c2       	[--sp] = {rets, r14-r4} 			  ## smpl_fat_resource.c:31:0
  10688c:    d4 cd       	sp += -44 			  ## smpl_fat_resource.c:31:0
  10688e:    17 c6       	r7 = r2 			  ## smpl_fat_resource.c:31:0
  106890:    52 ea 00 00 	r10 = 0 			  ## smpl_fat_resource.c:31:0
  106894:    60 e9 0a 0a 	[sp+ 40] = r10 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:478:5
  106898:    60 e9 0a 09 	[sp+ 36] = r10 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:478:5
  10689c:    60 e9 0a 08 	[sp+ 32] = r10 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:478:5
  1068a0:    20 e4 08 b8 	r8 = [addr(736)]  <.GCPI94_0 : 106b84 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:480:5
  1068a4:    00 ed 80 08 	r0 = r8 + 8 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:480:5
  1068a8:    01 80       	r1 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:480:5
  1068aa:    12 ea ac 00 	r2 = 172 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:480:5
  1068ae:    de e1 5f 35 	call -276822 <memset : c2f5c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:480:5
  1068b2:    20 e4 0b b5 	r11 = [addr(724)]  <.GCPI94_1 : 106b88 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:481:12
  1068b6:    60 e8 8b 00 	[r8 + 0] = r11 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:481:12
  1068ba:    60 e8 8b 01 	[r8 + 4] = r11 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:482:25
  1068be:    38 58       	r0 = b[r7 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:445:9
  1068c0:    78 99       	cmp r0, 47			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:445:9
  1068c2:    08 11       	ifs (nzcv != 0) goto 16 <smpl_fat_openR_api+0x4A : 1068d4 >
  1068c4:    06 90       	r6 = sp + 0 
  1068c6:    30 c6       	r0 = r6 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:203:9
  1068c8:    01 80       	r1 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:203:9
  1068ca:    02 81       	r2 = 32 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:203:9
  1068cc:    de e1 6f 34 	call -276852 <memset : c2f5c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:203:9
  1068d0:    30 c6       	r0 = r6 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:447:9
  1068d2:    9b 04       	call -202 <f_opendir : 10680a >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:447:9
  1068d4:    54 ea 20 00 	r12 = 32 
  1068d8:    11 ea 20 20 	r1 = 8224 
  1068dc:    23 ea 02 20 	r2 = 538976288 
  1068e0:    56 ea ff ff 	r14 = 65535 
  1068e4:    07 08       	goto 14 <smpl_fat_openR_api+0x6A : 1068f4 >
  1068e6:    00 90       	r0 = sp + 0 
  1068e8:    90 04       	call -224 <f_opendir : 10680a >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:468:9
  1068ea:    2f c6       	r7 = r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:468:9
  1068ec:    11 ea 20 20 	r1 = 8224 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:468:9
  1068f0:    23 ea 02 20 	r2 = 538976288 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:468:9
  1068f4:    3d c6       	r5 = r7 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:450:13
  1068f6:    08 e8 50 40 	r0 = b[r5 ++= 1] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:450:13
  1068fa:    40 e9 8c 0a 	b[sp+ 42] = r12 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:278:5
  1068fe:    50 e9 01 0a 	h[sp+ 40] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:278:5
  106902:    42 62       	[sp+ 36] = r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:278:5
  106904:    02 62       	[sp+ 32] = r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:278:5
  106906:    78 99       	cmp r0, 47			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:450:13
  106908:    10 03       	ifs (nzcv != 0) {			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:450:13
  10690a:    3d c6       		r5 = r7 
                               	}			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:450:13
  10690c:    00 80       	r0 = 0 
  10690e:    41 80       	r1 = 8 
  106910:    17 ea fe ff 	r7 = 65534 
  106914:    03 08       	goto 6 <smpl_fat_openR_api+0x92 : 10691c >
  106916:    40 80       	r0 = 8 
  106918:    59 80       	r1 = 11 
  10691a:    6d d0       	r5 = r5 + 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:281:14
  10691c:    2a 58       	r2 = b[r5 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:282:13
  10691e:    0a 99       	cmp r2, 33			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:283:22
  106920:    19 13       	if (nzcv < 0) goto 50 <smpl_fat_openR_api+0xCA : 106954 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:283:22
  106922:    7a 99       	cmp r2, 47
  106924:    17 10       	ifs (nzcv == 0) goto 46 <smpl_fat_openR_api+0xCA : 106954 >
  106926:    0e c9       	r6 = r1.b 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:285:34
  106928:    03 c9       	r3 = r0.b 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:285:34
  10692a:    1e ce       	cmp r3, r6			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:285:29
  10692c:    0f 12       	if (nzcv >= 0) goto 30 <smpl_fat_openR_api+0xC2 : 10694c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:285:29
  10692e:    72 99       	cmp r2, 46
  106930:    0d 10       	ifs (nzcv == 0) goto 26 <smpl_fat_openR_api+0xC2 : 10694c >
  106932:    1f ed 26 e0 	r6 = r2 + -32 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:298:19
  106936:    1f ed 24 9f 	r4 = r2 + -97 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:297:17
  10693a:    24 c9       	r4 = r4.b 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:297:17
  10693c:    d4 98       	cmp r4, 26			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:297:17
  10693e:    20 03       	if (nzcv >= 0) {			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:297:17
  106940:    16 c6       		r6 = r2 
                               	}			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:297:17
  106942:    02 91       	r2 = sp + 32 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:297:17
  106944:    40 e7 26 03 	b[r2 + r3] = r6 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:297:17
  106948:    40 d0       	r0 = r0 + 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:297:17
  10694a:    e7 0f       	goto -50 <smpl_fat_openR_api+0x90 : 10691a >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:297:17
  10694c:    46 98       	cmp r6, 8			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:286:25
  10694e:    02 11       	ifs (nzcv != 0) goto 4 <smpl_fat_openR_api+0xCA : 106954 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:286:25
  106950:    72 99       	cmp r2, 46
  106952:    e1 10       	ifs (nzcv == 0) goto -62 <smpl_fat_openR_api+0x8C : 106916 >
  106954:    20 e9 09 06 	r9 = [sp+ 24] 
  106958:    c6 41       	r6 = [sp+ 28] 
  10695a:    10 e9 0d 05 	r13 = h[sp+ 20] 
  10695e:    02 08       	goto 4 <smpl_fat_openR_api+0xDA : 106964 >
  106960:    17 ea fe ff 	r7 = 65534 
  106964:    00 ed 80 44 	r0 = r8 + 68 
  106968:    40 e8 0c 80 	b[r0 + 2] = r12 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:382:5
  10696c:    11 ea 20 20 	r1 = 8224 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:382:5
  106970:    01 70       	h[r0 + 0] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:382:5
  106972:    23 ea 01 20 	r1 = 538976288 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:382:5
  106976:    c1 6f       	[r0 + -4] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:382:5
  106978:    60 e8 81 0f 	[r8 + 60] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:382:5
  10697c:    40 e8 0a c0 	b[r0 + 3] = r10 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:383:22
  106980:    60 e8 8b 01 	[r8 + 4] = r11 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:384:15
  106984:    20 f7 d0 05 	r0 = r13 << 5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:385:5
  106988:    00 ed 0a 20 	r10 = r0 + 32 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:385:5
  10698c:    40 ec d0 00 	r0 = r13.l 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:337:11
  106990:    00 ed dc 01 	r12 = r13 + 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:337:11
  106994:    46 ce       	cmp r0, r14			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:339:9
  106996:    08 10       	ifs (nzcv == 0) goto 16 <smpl_fat_openR_api+0x11E : 1069a8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:339:9
  106998:    07 ce       	cmp r0, r7
  10699a:    00 fb c0 0c 	ifs (nzcv == 0) goto 408 <smpl_fat_openR_api+0x2AC : 106b36 >
  10699e:    40 ec c0 00 	r0 = r12.l 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:339:9
  1069a2:    00 f4 00 0f 	tst r0, 15			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:342:9
  1069a6:    1d 10       	ifs (nzcv == 0) goto 58 <smpl_fat_openR_api+0x158 : 1069e2 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:342:9
  1069a8:    98 c6       	r0 = r11 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:389:13
  1069aa:    31 c6       	r1 = r6 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:389:13
  1069ac:    ff e1 ff e0 	call -994 <move_window : 1065ce >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:389:13
  1069b0:    00 98       	cmp r0, 0			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:389:13
  1069b2:    00 fb e1 0b 	ifs (nzcv != 0) goto 380 <smpl_fat_openR_api+0x2A8 : 106b32 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:389:13
  1069b6:    8f f3 a0 f0 	r0 = r10 & 480 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:392:49
  1069ba:    00 ee b3 00 	r3 = r11 + r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:392:16
  1069be:    04 e8 30 08 	r0 = b[++ r3 = 32] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:394:13
  1069c2:    70 99       	cmp r0, 46			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:396:13
  1069c4:    0a 10       	ifs (nzcv == 0) goto 20 <smpl_fat_openR_api+0x150 : 1069da >
  1069c6:    80 ef 00 e5 	cmp r0, 229
  1069ca:    07 10       	ifs (nzcv == 0) goto 14 <smpl_fat_openR_api+0x150 : 1069da >
  1069cc:    00 98       	cmp r0, 0
  1069ce:    00 fb 00 0b 	ifs (nzcv == 0) goto 352 <smpl_fat_openR_api+0x2A8 : 106b32 >
  1069d2:    98 5e       	r0 = b[r3 + 11] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:402:15
  1069d4:    00 f4 00 08 	tst r0, 8			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:402:13
  1069d8:    31 10       	ifs (nzcv == 0) goto 98 <smpl_fat_openR_api+0x1B2 : 106a3c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:402:13
  1069da:    00 ed aa 20 	r10 = r10 + 32 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:335:28
  1069de:    e5 c6       	r13 = r12 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:336:22
  1069e0:    d5 0f       	goto -86 <smpl_fat_openR_api+0x102 : 10698c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:336:22
  1069e2:    76 d0       	r6 = r6 + 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:343:18
  1069e4:    80 ef 90 00 	cmp r9, 0			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:344:13
  1069e8:    22 10       	ifs (nzcv == 0) goto 68 <smpl_fat_openR_api+0x1A4 : 106a2e >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:344:13
  1069ea:    99 c6       	r1 = r11 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:350:28
  1069ec:    04 e8 12 47 	r2 = b[++ r1 = 29] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:350:28
  1069f0:    09 5c       	r1 = b[r1 + 2] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:350:28
  1069f2:    89 d4       	r1 = r1 + r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:350:28
  1069f4:    09 d1       	r1 = r1 + 4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:350:28
  1069f6:    0a 80       	r2 = 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:350:28
  1069f8:    00 f7 21 01 	r1 = r2 << r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:350:28
  1069fc:    b1 cb       	r1 += r14 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:350:28
  1069fe:    88 da       	r0 &= r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:350:25
  106a00:    d3 11       	ifs (nzcv != 0) goto -90 <smpl_fat_openR_api+0x11E : 1069a8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:350:25
  106a02:    98 c6       	r0 = r11 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:352:25
  106a04:    89 c6       	r1 = r9 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:352:25
  106a06:    ff e1 df f1 	call -454 <get_fat : 106844 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:352:25
  106a0a:    07 c6       	r7 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:352:25
  106a0c:    0f 98       	cmp r7, 1			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:353:21
  106a0e:    00 fb f9 0a 	if (nzcv <= 0) goto 350 <smpl_fat_openR_api+0x2E6 : 106b70 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:353:21
  106a12:    20 e8 b0 03 	r0 = [r11 + 12] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:357:34
  106a16:    38 ce       	cmp r7, r0			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:357:21
  106a18:    00 fb f2 08 	if (nzcv >= 0) goto 286 <smpl_fat_openR_api+0x2B0 : 106b3a >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:357:21
  106a1c:    98 c6       	r0 = r11 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:361:29
  106a1e:    39 c6       	r1 = r7 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:361:29
  106a20:    ff e1 2f ee 	call -572 <clust2sect : 1067e8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:361:29
  106a24:    06 c6       	r6 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:361:29
  106a26:    79 c6       	r9 = r7 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:361:29
  106a28:    17 ea fe ff 	r7 = 65534 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:361:29
  106a2c:    bd 0f       	goto -134 <smpl_fat_openR_api+0x11E : 1069a8 >
  106a2e:    10 e8 b1 05 	r1 = h[r11 + 20] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:345:31
  106a32:    51 ea 00 00 	r9 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:345:31
  106a36:    01 ce       	cmp r0, r1			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:345:17
  106a38:    b7 13       	if (nzcv < 0) goto -146 <smpl_fat_openR_api+0x11E : 1069a8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:345:17
  106a3a:    93 08       	goto 294 <smpl_fat_openR_api+0x2D8 : 106b62 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:345:17
  106a3c:    c6 61       	[sp+ 28] = r6 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:361:27
  106a3e:    60 e9 09 06 	[sp+ 24] = r9 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:360:27
  106a42:    00 ed dd 01 	r13 = r13 + 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:392:34
  106a46:    50 e9 0d 05 	h[sp+ 20] = r13 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:392:34
  106a4a:    99 5c       	r1 = b[r3 + 10] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:370:5
  106a4c:    00 ed 82 40 	r2 = r8 + 64 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:370:5
  106a50:    51 7c       	b[r2 + 6] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:370:5
  106a52:    99 50       	r1 = h[r3 + 8] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:370:5
  106a54:    51 70       	h[r2 + 4] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:370:5
  106a56:    59 48       	r1 = [r3 + 4] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:370:5
  106a58:    11 68       	[r2 + 0] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:370:5
  106a5a:    19 48       	r1 = [r3 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:370:5
  106a5c:    60 e8 81 0f 	[r8 + 60] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:370:5
  106a60:    d1 59       	r1 = b[r2 + -4] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:371:9
  106a62:    29 98       	cmp r1, 5			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:371:9
  106a64:    01 03       	ifs (nzcv == 0) {			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:372:25
  106a66:    11 ea e5 00 		r1 = 229 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:372:25
  106a6a:    40 e8 81 0f 		b[r8 + 60] = r1 
                               	}			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:372:25
  106a6e:    38 db       	r0 &= (~128)			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:374:39
  106a70:    40 e8 80 02 	b[r8 + 8] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:374:23
  106a74:    00 ed 30 1c 	r0 = r3 + 28 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:375:46
  106a78:    ff e1 ef d9 	call -1220 <ld_dword_func : 1065b8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:375:24
  106a7c:    60 e8 80 04 	[r8 + 16] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:375:22
  106a80:    04 e8 31 45 	r1 = b[++ r3 = 21] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:376:31
  106a84:    d8 5f       	r0 = b[r3 + -1] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:376:31
  106a86:    ff e1 6f db 	call -1172 <ld_word_func : 1065f6 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:376:31
  106a8a:    02 b0       	r2 = r0 << 16 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:376:65
  106a8c:    59 5c       	r1 = b[r3 + 6] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:376:74
  106a8e:    58 5a       	r0 = b[r3 + 5] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:376:74
  106a90:    ff e1 1f db 	call -1182 <ld_word_func : 1065f6 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:376:74
  106a94:    10 da       	r0 |= r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:376:72
  106a96:    60 e8 80 03 	[r8 + 12] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:376:23
  106a9a:    00 ed 80 3c 	r0 = r8 + 60 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:376:23
  106a9e:    04 80       	r4 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:376:23
  106aa0:    59 80       	r1 = 11 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:376:23
  106aa2:    02 91       	r2 = sp + 32 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:376:23
  106aa4:    52 ea 00 00 	r10 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:376:23
  106aa8:    54 ea 20 00 	r12 = 32 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:376:23
  106aac:    06 08       	goto 12 <smpl_fat_openR_api+0x230 : 106aba >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:376:23
  106aae:    0c 80       	r4 = 1 
  106ab0:    57 99       	cmp r7, 42			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:317:17
  106ab2:    14 11       	ifs (nzcv != 0) goto 40 <smpl_fat_openR_api+0x252 : 106adc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:317:17
  106ab4:    c9 d3       	r1 = r1 + -1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:311:15
  106ab6:    52 d0       	r2 = r2 + 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:329:12
  106ab8:    40 d0       	r0 = r0 + 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:328:12
  106aba:    0f c9       	r7 = r1.b 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:311:15
  106abc:    12 10       	ifs (nzcv == 0) goto 36 <smpl_fat_openR_api+0x258 : 106ae2 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:311:15
  106abe:    23 c9       	r3 = r4.b 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:312:13
  106ac0:    06 10       	ifs (nzcv == 0) goto 12 <smpl_fat_openR_api+0x244 : 106ace >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:312:13
  106ac2:    03 80       	r3 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:313:17
  106ac4:    27 98       	cmp r7, 4			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:313:17
  106ac6:    10 03       	ifs (nzcv != 0) {			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:313:17
  106ac8:    23 c6       		r3 = r4 
                               	}			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:313:17
  106aca:    1c c6       	r4 = r3 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:313:17
  106acc:    f3 0f       	goto -26 <smpl_fat_openR_api+0x22A : 106ab4 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:313:17
  106ace:    17 58       	r7 = b[r2 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:316:28
  106ad0:    03 58       	r3 = b[r0 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:316:20
  106ad2:    1f ce       	cmp r3, r7			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:316:20
  106ad4:    ec 11       	ifs (nzcv != 0) goto -40 <smpl_fat_openR_api+0x224 : 106aae >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:316:20
  106ad6:    04 80       	r4 = 0 
  106ad8:    db 26       	if (r3 != 0) goto -38 <smpl_fat_openR_api+0x22A : 106ab4 >
  106ada:    03 08       	goto 6 <smpl_fat_openR_api+0x258 : 106ae2 >
  106adc:    ff 99       	cmp r7, 63
  106ade:    ff fb f1 f3 	ifs (nzcv != 0) goto -386 <smpl_fat_openR_api+0xD6 : 106960 >
  106ae2:    20 e8 80 04 	r0 = [r8 + 16] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:206:5
  106ae6:    80 60       	[sp+ 8] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:206:5
  106ae8:    20 e8 80 03 	r0 = [r8 + 12] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:206:5
  106aec:    40 60       	[sp+ 4] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:206:5
  106aee:    20 e8 80 02 	r0 = [r8 + 8] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:206:5
  106af2:    00 60       	[sp] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:206:5
  106af4:    28 58       	r0 = b[r5 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:465:13
  106af6:    00 98       	cmp r0, 0			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:465:13
  106af8:    ff fb 51 ef 	ifs (nzcv != 0) goto -534 <smpl_fat_openR_api+0x5C : 1068e6 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:465:13
  106afc:    08 2a       	r0 = [addr(160)]  <.GCPI94_6 : 106b9c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:486:9
  106afe:    de e1 df 26 	call -277286 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:486:9
  106b02:    00 ed 80 4c 	r0 = r8 + 76 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:487:9
  106b06:    04 90       	r4 = sp + 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:487:9
  106b08:    21 c6       	r1 = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:487:9
  106b0a:    02 81       	r2 = 32 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:487:9
  106b0c:    de e1 0f 22 	call -277440 <memcpy : c2f50 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:487:9
  106b10:    00 ed 80 1c 	r0 = r8 + 28 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:488:9
  106b14:    21 c6       	r1 = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:488:9
  106b16:    02 81       	r2 = 32 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:488:9
  106b18:    de e1 af 21 	call -277452 <memcpy : c2f50 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:488:9
  106b1c:    00 80       	r0 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:488:9
  106b1e:    00 ed 81 9c 	r1 = r8 + 156 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:488:9
  106b22:    08 78       	b[r1 + 0] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:489:18
  106b24:    20 e8 82 03 	r2 = [r8 + 12] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:490:48
  106b28:    8a 6f       	[r1 + -8] = r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:490:25
  106b2a:    c8 6e       	[r1 + -20] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:491:18
  106b2c:    08 6f       	[r1 + -16] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:492:19
  106b2e:    ca 6f       	[r1 + -4] = r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:493:23
  106b30:    16 08       	goto 44 <smpl_fat_openR_api+0x2D4 : 106b5e >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:493:23
  106b32:    e5 c6       	r13 = r12 
  106b34:    02 08       	goto 4 <smpl_fat_openR_api+0x2B0 : 106b3a >
  106b36:    55 ea fe ff 	r13 = 65534 
  106b3a:    c6 61       	[sp+ 28] = r6 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:361:27
  106b3c:    60 e9 09 06 	[sp+ 24] = r9 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:360:27
  106b40:    50 e9 0d 05 	h[sp+ 20] = r13 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:392:34
  106b44:    28 58       	r0 = b[r5 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:456:17
  106b46:    60 20       	if (r0 == 0) goto 12 <smpl_fat_openR_api+0x2CA : 106b54 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:456:17
  106b48:    c0 2c       	r0 = [addr(76)]  <.GCPI94_4 : 106b94 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:460:17
  106b4a:    de e1 7f 24 	call -277362 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:460:17
  106b4e:    10 ea 84 00 	r0 = 132 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:460:17
  106b52:    05 08       	goto 10 <smpl_fat_openR_api+0x2D4 : 106b5e >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:460:17
  106b54:    40 2c       	r0 = [addr(68)]  <.GCPI94_5 : 106b98 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:457:17
  106b56:    de e1 1f 24 	call -277374 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:457:17
  106b5a:    10 ea 83 00 	r0 = 131 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:457:17
  106b5e:    2c cd       	sp += 44 
  106b60:    1e c0       	{pc, r14-r4} = [sp++] 
  106b62:    c6 61       	[sp+ 28] = r6 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:361:27
  106b64:    00 80       	r0 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:361:27
  106b66:    80 61       	[sp+ 24] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:360:27
  106b68:    50 e9 0d 05 	h[sp+ 20] = r13 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:392:34
  106b6c:    40 2a       	r0 = [addr(36)]  <.GCPI94_3 : 106b90 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:346:17
  106b6e:    06 08       	goto 12 <smpl_fat_openR_api+0x2F2 : 106b7c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:346:17
  106b70:    c6 61       	[sp+ 28] = r6 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:361:27
  106b72:    60 e9 09 06 	[sp+ 24] = r9 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:360:27
  106b76:    50 e9 0d 05 	h[sp+ 20] = r13 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:392:34
  106b7a:    00 29       	r0 = [addr(16)]  <.GCPI94_2 : 106b8c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:354:21
  106b7c:    de e1 ef 22 	call -277412 <xprintf : c2fdc >
  106b80:    e1 0f       	goto -62 <smpl_fat_openR_api+0x2BA : 106b44 >
  106b82:    00 00       	nop


.GCPI94_0:
  106b84:    74 1b 00 00     < 7028 : 0x1B74 >

.GCPI94_1:
  106b88:    4c 19 00 00     < 6476 : 0x194C >

.GCPI94_2:
  106b8c:    8a d2 11 00     < 1168010 : 0x11D28A >

.GCPI94_3:
  106b90:    71 d2 11 00     < 1167985 : 0x11D271 >

.GCPI94_4:
  106b94:    d0 d2 11 00     < 1168080 : 0x11D2D0 >

.GCPI94_5:
  106b98:    a3 d2 11 00     < 1168035 : 0x11D2A3 >

.GCPI94_6:
  106b9c:    fd d2 11 00     < 1168125 : 0x11D2FD >

get_cluster:
  106ba0:    1a c2       	[--sp] = {rets, r10-r4} 			  ## simple_fat.c:498:0
  106ba2:    04 c6       	r4 = r0 			  ## simple_fat.c:498:0
  106ba4:    20 e4 0a 18 	r10 = [addr(96)]  <.GCPI95_0 : 106c08 >			  ## simple_fat.c:501:21
  106ba8:    91 c6       	r1 = r10 			  ## simple_fat.c:502:52
  106baa:    24 e8 10 26 	r0 = [++ r1 = 152] 			  ## simple_fat.c:502:52
  106bae:    20 e8 a5 00 	r5 = [r10 + 0] 			  ## simple_fat.c:501:21
  106bb2:    c9 4f       	r1 = [r1 + -4] 			  ## simple_fat.c:502:23
  106bb4:    0c ce       	cmp r1, r4			  ## simple_fat.c:502:36
  106bb6:    05 18       	if (nzcv > 0) goto 10 <get_cluster+0x22 : 106bc2 >			  ## simple_fat.c:502:36
  106bb8:    04 ce       	cmp r0, r4
  106bba:    03 19       	if (nzcv <= 0) goto 6 <get_cluster+0x22 : 106bc2 >
  106bbc:    00 ed 48 01 	r8 = r4 + 1 			  ## simple_fat.c:503:16
  106bc0:    21 08       	goto 66 <get_cluster+0x64 : 106c04 >			  ## simple_fat.c:503:16
  106bc2:    28 c6       	r0 = r5 			  ## simple_fat.c:505:14
  106bc4:    21 c6       	r1 = r4 			  ## simple_fat.c:505:14
  106bc6:    ff e1 df e3 	call -902 <get_fat : 106844 >			  ## simple_fat.c:505:14
  106bca:    40 c6       	r8 = r0 			  ## simple_fat.c:505:14
  106bcc:    0f 80       	r7 = 1 
  106bce:    00 ed a6 98 	r6 = r10 + 152 
  106bd2:    00 ed a9 94 	r9 = r10 + 148 
  106bd6:    28 c6       	r0 = r5 			  ## simple_fat.c:507:15
  106bd8:    21 c6       	r1 = r4 			  ## simple_fat.c:507:15
  106bda:    ff e1 3f e3 	call -922 <get_fat : 106844 >			  ## simple_fat.c:507:15
  106bde:    20 e8 a1 26 	r1 = [r10 + 152] 			  ## simple_fat.c:508:25
  106be2:    49 d0       	r1 = r1 + 1 			  ## simple_fat.c:508:35
  106be4:    01 ce       	cmp r0, r1			  ## simple_fat.c:508:13
  106be6:    31 c6       	r1 = r6 			  ## simple_fat.c:508:13
  106be8:    06 10       	ifs (nzcv == 0) goto 12 <get_cluster+0x56 : 106bf6 >			  ## simple_fat.c:508:13
  106bea:    c7 20       	if (r7 == 0) goto 24 <get_cluster+0x64 : 106c04 >
  106bec:    10 98       	cmp r0, 2			  ## simple_fat.c:511:17
  106bee:    04 13       	if (nzcv < 0) goto 8 <get_cluster+0x58 : 106bf8 >			  ## simple_fat.c:511:17
  106bf0:    60 e8 a0 26 	[r10 + 152] = r0 			  ## simple_fat.c:512:49
  106bf4:    89 c6       	r1 = r9 			  ## simple_fat.c:512:49
  106bf6:    08 68       	[r1 + 0] = r0 
  106bf8:    80 f3 41 7f 	r1 = r4 & 127 			  ## simple_fat.c:517:24
  106bfc:    07 80       	r7 = 0 			  ## simple_fat.c:517:24
  106bfe:    f9 9b       	cmp r1, 127			  ## simple_fat.c:517:13
  106c00:    04 c6       	r4 = r0 			  ## simple_fat.c:517:13
  106c02:    e9 11       	ifs (nzcv != 0) goto -46 <get_cluster+0x36 : 106bd6 >
  106c04:    80 c6       	r0 = r8 			  ## simple_fat.c:524:1
  106c06:    1a c0       	{pc, r10-r4} = [sp++] 			  ## simple_fat.c:524:1


.GCPI95_0:
  106c08:    74 1b 00 00     < 7028 : 0x1B74 >

smpl_fat_read_api:
  106c0c:    1d c2       	[--sp] = {rets, r13-r4} 			  ## smpl_fat_resource.c:36:0
  106c0e:    fc cd       	sp += -4 			  ## smpl_fat_resource.c:36:0
  106c10:    0e c6       	r6 = r1 			  ## smpl_fat_resource.c:36:0
  106c12:    20 e4 08 5c 	r8 = [addr(368)]  <.GCPI96_0 : 106d84 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:531:21
  106c16:    00 ed 89 9c 	r9 = r8 + 156 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:531:21
  106c1a:    80 e8 90 00 	r0 = b[r9 + 0] (s) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:532:13
  106c1e:    00 98       	cmp r0, 0			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:532:9
  106c20:    7f 1b       	ifs (nzcv < 0) goto 254 <smpl_fat_read_api+0x114 : 106d20 >
  106c22:    00 f4 00 40 	tst r0, 64			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:535:9
  106c26:    00 fb 41 08 	ifs (nzcv != 0) goto 264 <smpl_fat_read_api+0x126 : 106d32 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:535:9
  106c2a:    20 e8 8c 00 	r12 = [r8 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:531:21
  106c2e:    20 e8 80 22 	r0 = [r8 + 136] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:538:43
  106c32:    20 e8 81 04 	r1 = [r8 + 16] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:538:31
  106c36:    0c d6       	r4 = r1 - r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:538:37
  106c38:    51 c9       	r1 = r2.l 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:539:9
  106c3a:    0c ce       	cmp r1, r4			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:539:9
  106c3c:    07 19       	if (nzcv <= 0) goto 14 <smpl_fat_read_api+0x40 : 106c4c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:539:9
  106c3e:    62 c9       	r2 = r4.l 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:541:23
  106c40:    b0 d4       	r0 = r6 + r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:541:21
  106c42:    8a d6       	r2 = r1 - r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:541:36
  106c44:    01 80       	r1 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:541:9
  106c46:    de e1 9f 18 	call -277742 <memset : c2f5c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:541:9
  106c4a:    22 c6       	r2 = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:541:9
  106c4c:    52 ea 01 00 	r10 = 1 
  106c50:    53 ea ff 01 	r11 = 511 
  106c54:    02 60       	[sp] = r2 
  106c56:    55 c6       	r13 = r2 
  106c58:    5d 08       	goto 186 <smpl_fat_read_api+0x108 : 106d14 >
  106c5a:    a0 c6       	r0 = r12 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:546:26
  106c5c:    04 e8 01 07 	r1 = b[++ r0 = 28] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:546:26
  106c60:    00 5a       	r0 = b[r0 + 1] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:546:26
  106c62:    40 d4       	r0 = r0 + r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:546:26
  106c64:    00 f7 a0 00 	r0 = r10 << r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:546:26
  106c68:    c1 d3       	r1 = r0 + -1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:546:26
  106c6a:    20 e8 80 22 	r0 = [r8 + 136] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:546:18
  106c6e:    81 da       	r1 &= r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:546:23
  106c70:    04 10       	ifs (nzcv == 0) goto 8 <smpl_fat_read_api+0x6E : 106c7a >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:546:13
  106c72:    34 c6       	r4 = r6 
  106c74:    20 e8 82 23 	r2 = [r8 + 140] 
  106c78:    18 08       	goto 48 <smpl_fat_read_api+0x9E : 106caa >
  106c7a:    50 20       	if (r0 == 0) goto 10 <smpl_fat_read_api+0x7A : 106c86 >
  106c7c:    20 e8 80 24 	r0 = [r8 + 144] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:548:79
  106c80:    8f 04       	call -226 <get_cluster : 106ba0 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:548:59
  106c82:    01 c6       	r1 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:548:59
  106c84:    02 08       	goto 4 <smpl_fat_read_api+0x7E : 106c8a >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:548:59
  106c86:    20 e8 81 03 	r1 = [r8 + 12] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:548:50
  106c8a:    11 98       	cmp r1, 2			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:549:27
  106c8c:    5c 13       	if (nzcv < 0) goto 184 <smpl_fat_read_api+0x13A : 106d46 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:549:27
  106c8e:    20 e8 c0 03 	r0 = [r12 + 12] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:549:43
  106c92:    08 ce       	cmp r1, r0			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:549:17
  106c94:    58 12       	if (nzcv >= 0) goto 176 <smpl_fat_read_api+0x13A : 106d46 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:549:17
  106c96:    34 c6       	r4 = r6 
  106c98:    85 c6       	r5 = r8 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:553:23
  106c9a:    64 e8 51 24 	[++ r5 = 144] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:553:23
  106c9e:    a0 c6       	r0 = r12 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:554:25
  106ca0:    ff e1 2f da 	call -1212 <clust2sect : 1067e8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:554:25
  106ca4:    02 c6       	r2 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:554:25
  106ca6:    ea 6f       	[r5 + -4] = r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:554:23
  106ca8:    a8 4f       	r0 = [r5 + -8] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:554:23
  106caa:    80 f0 06 0b 	r6 = r0 & r11 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:556:18
  106cae:    2f ee 60 00 	r0 = 512 - r6 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:557:20
  106cb2:    07 ce       	cmp r0, r7			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:558:13
  106cb4:    ad c6       	r5 = r13 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:558:13
  106cb6:    90 03       	if (nzcv <= 0) {			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:558:13
  106cb8:    05 c6       		r5 = r0 
                               	}			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:558:13
  106cba:    6f c9       	r7 = r5.l 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:558:13
  106cbc:    82 ef 70 00 	cmp r7, 512			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:561:13
  106cc0:    09 11       	ifs (nzcv != 0) goto 18 <smpl_fat_read_api+0xC8 : 106cd4 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:561:13
  106cc2:    02 ed c0 24 	r0 = r12 + 548 
  106cc6:    00 48       	r0 = [r0 + 0] 
  106cc8:    26 c6       	r6 = r4 
  106cca:    31 c6       	r1 = r6 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:562:26
  106ccc:    ff e1 6f c6 	call -1844 <fat_read_device : 10659c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:562:26
  106cd0:    40 21       	if (r0 == 0) goto 40 <smpl_fat_read_api+0xEE : 106cfa >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:562:26
  106cd2:    41 08       	goto 130 <smpl_fat_read_api+0x14A : 106d56 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:562:26
  106cd4:    a0 c6       	r0 = r12 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:569:17
  106cd6:    11 c6       	r1 = r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:569:17
  106cd8:    ff e1 9f c7 	call -1806 <move_window : 1065ce >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:569:17
  106cdc:    00 98       	cmp r0, 0			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:569:17
  106cde:    49 11       	ifs (nzcv != 0) goto 146 <smpl_fat_read_api+0x166 : 106d72 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:569:17
  106ce0:    00 ee c0 06 	r0 = r12 + r6 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:573:39
  106ce4:    00 ed 01 20 	r1 = r0 + 32 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:573:39
  106ce8:    20 c6       	r0 = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:573:13
  106cea:    3a c6       	r2 = r7 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:573:13
  106cec:    de e1 0f 13 	call -277920 <memcpy : c2f50 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:573:13
  106cf0:    b8 d5       	r0 = r7 + r6 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:574:25
  106cf2:    26 c6       	r6 = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:574:25
  106cf4:    82 ef 00 00 	cmp r0, 512			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:574:17
  106cf8:    05 11       	ifs (nzcv != 0) goto 10 <smpl_fat_read_api+0xF8 : 106d04 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:574:17
  106cfa:    80 c6       	r0 = r8 
  106cfc:    24 e8 01 23 	r1 = [++ r0 = 140] 
  106d00:    49 d0       	r1 = r1 + 1 
  106d02:    01 68       	[r0 + 0] = r1 
  106d04:    80 c6       	r0 = r8 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:545:26
  106d06:    24 e8 01 22 	r1 = [++ r0 = 136] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:545:26
  106d0a:    c9 d5       	r1 = r1 + r7 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:545:26
  106d0c:    01 68       	[r0 + 0] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:545:26
  106d0e:    40 ee dd 05 	r13 = r13 - r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:545:53
  106d12:    f6 d5       	r6 = r6 + r7 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:545:40
  106d14:    40 ec d7 00 	r7 = r13.l 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:545:5
  106d18:    a0 11       	ifs (nzcv != 0) goto -192 <smpl_fat_read_api+0x4E : 106c5a >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:545:5
  106d1a:    00 40       	r0 = [sp] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:579:12
  106d1c:    40 c9       	r0 = r0.l 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:579:12
  106d1e:    11 08       	goto 34 <smpl_fat_read_api+0x136 : 106d42 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:579:12
  106d20:    55 c6       	r13 = r2 
  106d22:    40 ec d2 00 	r2 = r13.l 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:581:21
  106d26:    30 c6       	r0 = r6 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:581:5
  106d28:    01 80       	r1 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:581:5
  106d2a:    de e1 7f 11 	call -277970 <memset : c2f5c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:581:5
  106d2e:    f8 87       	r0 = -1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:581:5
  106d30:    08 08       	goto 16 <smpl_fat_read_api+0x136 : 106d42 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:581:5
  106d32:    55 c6       	r13 = r2 
  106d34:    40 ec d2 00 	r2 = r13.l 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:584:21
  106d38:    30 c6       	r0 = r6 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:584:5
  106d3a:    01 80       	r1 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:584:5
  106d3c:    de e1 ef 10 	call -277988 <memset : c2f5c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:584:5
  106d40:    f0 87       	r0 = -2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:584:5
  106d42:    04 cd       	sp += 4 
  106d44:    1d c0       	{pc, r13-r4} = [sp++] 
  106d46:    00 e8 90 00 	r0 = b[r9 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:550:26
  106d4a:    38 d8       	r0 |= 128			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:550:26
  106d4c:    11 ea 9c 00 	r1 = 156 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:550:26
  106d50:    40 e7 80 01 	b[r8 + r1] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:550:26
  106d54:    e6 0f       	goto -52 <smpl_fat_read_api+0x116 : 106d22 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:550:26
  106d56:    00 e8 90 00 	r0 = b[r9 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:563:26
  106d5a:    30 d8       	r0 |= 64			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:563:26
  106d5c:    00 ed 81 9c 	r1 = r8 + 156 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:563:26
  106d60:    08 78       	b[r1 + 0] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:563:26
  106d62:    20 e8 80 00 	r0 = [r8 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:564:21
  106d66:    11 ea 20 02 	r1 = 544 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:564:30
  106d6a:    fa 87       	r2 = -1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:564:37
  106d6c:    60 e7 02 01 	[r0 + r1] = r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:564:37
  106d70:    e1 0f       	goto -62 <smpl_fat_read_api+0x128 : 106d34 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:564:37
  106d72:    00 e8 90 00 	r0 = b[r9 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:570:26
  106d76:    30 d8       	r0 |= 64			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:570:26
  106d78:    11 ea 9c 00 	r1 = 156 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:570:26
  106d7c:    40 e7 80 01 	b[r8 + r1] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:570:26
  106d80:    26 c6       	r6 = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:570:26
  106d82:    d8 0f       	goto -80 <smpl_fat_read_api+0x128 : 106d34 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:570:26


.GCPI96_0:
  106d84:    74 1b 00 00     < 7028 : 0x1B74 >

smpl_fat_seek_api:
  106d88:    1a c2       	[--sp] = {rets, r10-r4} 			  ## smpl_fat_resource.c:45:0
  106d8a:    0c c6       	r4 = r1 			  ## smpl_fat_resource.c:45:0
  106d8c:    20 e4 0a 2f 	r10 = [addr(188)]  <.GCPI97_0 : 106e4c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:591:21
  106d90:    20 e8 a1 04 	r1 = [r10 + 16] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:592:30
  106d94:    10 ea 89 00 	r0 = 137 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:592:30
  106d98:    0c ce       	cmp r1, r4			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:592:9
  106d9a:    57 13       	if (nzcv < 0) goto 174 <smpl_fat_seek_api+0xC2 : 106e4a >
  106d9c:    20 e8 a7 00 	r7 = [r10 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:591:21
  106da0:    20 e8 a1 22 	r1 = [r10 + 136] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:595:24
  106da4:    0c ce       	cmp r1, r4			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:595:9
  106da6:    85 03       	if (nzcv > 0) {			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:595:9
  106da8:    01 80       		r1 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:595:9
  106daa:    60 e8 a1 22 		[r10 + 136] = r1 
                               	} else {			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:598:18
  106dae:    64 d6       		r4 = r4 - r1 
                               	}			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:596:17
  106db0:    50 ea 01 00 	r8 = 1 
  106db4:    51 ea ff 01 	r9 = 511 
  106db8:    3b 08       	goto 118 <smpl_fat_seek_api+0xA8 : 106e30 >
  106dba:    3d c6       	r5 = r7 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:601:26
  106dbc:    04 e8 50 07 	r0 = b[++ r5 = 28] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:601:26
  106dc0:    2a 5a       	r2 = b[r5 + 1] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:601:26
  106dc2:    80 d4       	r0 = r0 + r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:601:26
  106dc4:    00 f7 80 00 	r0 = r8 << r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:601:26
  106dc8:    c2 d3       	r2 = r0 + -1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:601:26
  106dca:    8a da       	r2 &= r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:601:24
  106dcc:    04 10       	ifs (nzcv == 0) goto 8 <smpl_fat_seek_api+0x4E : 106dd6 >
  106dce:    82 d6       	r2 = r0 - r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:612:53
  106dd0:    20 e8 a0 23 	r0 = [r10 + 140] 
  106dd4:    1b 08       	goto 54 <smpl_fat_seek_api+0x84 : 106e0c >
  106dd6:    61 20       	if (r1 == 0) goto 12 <smpl_fat_seek_api+0x5C : 106de4 >
  106dd8:    20 e8 a0 24 	r0 = [r10 + 144] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:603:79
  106ddc:    ff e1 0f ee 	call -576 <get_cluster : 106ba0 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:603:59
  106de0:    01 c6       	r1 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:603:59
  106de2:    02 08       	goto 4 <smpl_fat_seek_api+0x60 : 106de8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:603:59
  106de4:    20 e8 a1 03 	r1 = [r10 + 12] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:603:50
  106de8:    11 98       	cmp r1, 2			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:604:27
  106dea:    25 13       	if (nzcv < 0) goto 74 <smpl_fat_seek_api+0xAE : 106e36 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:604:27
  106dec:    f8 48       	r0 = [r7 + 12] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:604:43
  106dee:    08 ce       	cmp r1, r0			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:604:17
  106df0:    22 12       	if (nzcv >= 0) goto 68 <smpl_fat_seek_api+0xAE : 106e36 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:604:17
  106df2:    96 c6       	r6 = r10 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:608:23
  106df4:    64 e8 61 24 	[++ r6 = 144] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:608:23
  106df8:    38 c6       	r0 = r7 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:609:25
  106dfa:    ff e1 5f cf 	call -1558 <clust2sect : 1067e8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:609:25
  106dfe:    f0 6f       	[r6 + -4] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:609:23
  106e00:    29 58       	r1 = b[r5 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:610:19
  106e02:    2a 5a       	r2 = b[r5 + 1] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:610:19
  106e04:    89 d4       	r1 = r1 + r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:610:19
  106e06:    00 f7 82 01 	r2 = r8 << r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:610:19
  106e0a:    b1 4f       	r1 = [r6 + -8] 
  106e0c:    80 f0 13 09 	r3 = r1 & r9 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:618:50
  106e10:    14 ce       	cmp r2, r4			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:614:13
  106e12:    20 03       	if (nzcv >= 0) {			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:614:13
  106e14:    22 c6       		r2 = r4 
                               	}			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:614:13
  106e16:    80 f0 25 09 	r5 = r2 & r9 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:618:24
  106e1a:    5b d5       	r3 = r3 + r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:618:33
  106e1c:    5b a9       	r3 = r3 >> 9 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:618:60
  106e1e:    55 a9       	r5 = r2 >> 9 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:617:26
  106e20:    40 d5       	r0 = r0 + r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:617:19
  106e22:    c0 d4       	r0 = r0 + r3 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:618:13
  106e24:    93 c6       	r3 = r10 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:617:19
  106e26:    64 e8 30 23 	[++ r3 = 140] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:617:19
  106e2a:    89 d4       	r1 = r1 + r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:621:18
  106e2c:    d9 6f       	[r3 + -4] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:621:18
  106e2e:    a4 d6       	r4 = r4 - r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:622:17
  106e30:    4c 24       	if (r4 != 0) goto -120 <smpl_fat_seek_api+0x32 : 106dba >
  106e32:    00 80       	r0 = 0 
  106e34:    1a c0       	{pc, r10-r4} = [sp++] 
  106e36:    00 ed a0 9c 	r0 = r10 + 156 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:605:27
  106e3a:    00 58       	r0 = b[r0 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:605:27
  106e3c:    38 d8       	r0 |= 128			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:605:27
  106e3e:    11 ea 9c 00 	r1 = 156 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:605:27
  106e42:    40 e7 a0 01 	b[r10 + r1] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:605:27
  106e46:    10 ea 96 00 	r0 = 150 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/jlfat/simple_fat.c:605:27
  106e4a:    1a c0       	{pc, r10-r4} = [sp++] 


.GCPI97_0:
  106e4c:    74 1b 00 00     < 7028 : 0x1B74 >

smpl_fat_fs_close_api:
  106e50:    00 48       	r0 = [r0 + 0] 			  ## smpl_fat_resource.c:55:0
  106e52:    20 00       	rts			  ## smpl_fat_resource.c:56:5


smpl_fat_file_close_api:
  106e54:    00 48       	r0 = [r0 + 0] 			  ## smpl_fat_resource.c:50:0
  106e56:    20 00       	rts			  ## smpl_fat_resource.c:51:5


sydf_init_api:
  106e58:    80 28       	r0 = [addr(8)]  <.GCPI100_0 : 106e60 >			  ## sydf_resource.c:115:0
  106e5a:    de fa ff 0b 	goto -278146 <xprintf : c2fdc >			  ## sydf_resource.c:116:5
  106e5e:    00 00       	nop			  ## sydf_resource.c:116:5


.GCPI100_0:
  106e60:    f0 ad 11 00     < 1158640 : 0x11ADF0 >

my_malloc:
  106e64:    1e c2       	[--sp] = {rets, r14-r4} 			  ## my_malloc.c:23:0
  106e66:    f0 cd       	sp += -16 			  ## my_malloc.c:23:0
  106e68:    c1 60       	[sp+ 12] = r1 			  ## my_malloc.c:23:0
  106e6a:    06 c6       	r6 = r0 			  ## my_malloc.c:23:0
  106e6c:    20 e4 09 6b 	r9 = [addr(428)]  <.GCPI101_0 : 10701c >			  ## my_malloc.c:23:0
  106e70:    00 e8 90 1d 	r0 = b[r9 + 116] 			  ## my_malloc.c:23:0
  106e74:    c8 21       	if (r0 != 0) goto 56 <my_malloc+0x4A : 106eae >			  ## my_malloc.c:23:0
  106e76:    88 c6       	r0 = r9 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:447:60
  106e78:    24 e8 01 1a 	r1 = [++ r0 = 104] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:447:60
  106e7c:    09 d1       	r1 = r1 + 4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:447:60
  106e7e:    c0 f3 11 03 	r1 = r1 & (~3) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:447:90
  106e82:    81 6a       	[r0 + 40] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:451:28
  106e84:    02 80       	r2 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:451:28
  106e86:    8b c6       	r3 = r9 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:452:23
  106e88:    54 e8 32 25 	h[++ r3 = 148] = r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:452:23
  106e8c:    5c 29       	r4 = [addr(404)]  <.GCPI101_1 : 107020 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:455:23
  106e8e:    5d 29       	r5 = [addr(404)]  <.GCPI101_2 : 107024 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:455:23
  106e90:    2c d7       	r4 = r5 - r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:455:23
  106e92:    15 ea fd ff 	r5 = 65533 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:455:23
  106e96:    64 d5       	r4 = r4 + r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:455:23
  106e98:    45 58       	r5 = b[r0 + 4] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:455:23
  106e9a:    1d 20       	if (r5 != 0) goto 2 <my_malloc+0x3A : 106e9e >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:455:23
  106e9c:    e4 87       	r4 = -4 
  106e9e:    9c 70       	h[r3 + 8] = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:455:21
  106ea0:    02 6b       	[r0 + 48] = r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:456:26
  106ea2:    4c 70       	h[r1 + 4] = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:461:34
  106ea4:    00 ed 92 98 	r2 = r9 + 152 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:455:21
  106ea8:    0a 68       	[r1 + 0] = r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:462:39
  106eaa:    09 80       	r1 = 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:462:39
  106eac:    c1 78       	b[r0 + 12] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:462:39
  106eae:    b6 20       	if (r6 == 0) goto 22 <my_malloc+0x62 : 106ec6 >
  106eb0:    00 ed 62 08 	r2 = r6 + 8 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:200:25
  106eb4:    00 f4 20 03 	tst r2, 3			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:203:17
  106eb8:    12 03       	ifs (nzcv != 0) {			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:203:30
  106eba:    80 f3 20 03 		r0 = r2 & 3 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:203:30
  106ebe:    00 ed 61 0c 		r1 = r6 + 12 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:205:52
  106ec2:    0a d6       		r2 = r1 - r0 
                               	}			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:205:29
  106ec4:    01 08       	goto 2 <my_malloc+0x64 : 106ec8 >
  106ec6:    02 80       	r2 = 0 
  106ec8:    20 e8 95 24 	r5 = [r9 + 144] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:212:26
  106ecc:    28 c6       	r0 = r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:212:26
  106ece:    00 48       	r0 = [r0 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:214:25
  106ed0:    e8 27       	if (r0 != 0) goto -4 <my_malloc+0x6A : 106ece >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:214:9
  106ed2:    04 80       	r4 = 0 
  106ed4:    02 98       	cmp r2, 0
  106ed6:    00 fb 60 09 	ifs (nzcv == 0) goto 300 <my_malloc+0x1A2 : 107006 >
  106eda:    50 2c       	r0 = [addr(324)]  <.GCPI101_1 : 107020 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:221:49
  106edc:    91 2c       	r1 = [addr(328)]  <.GCPI101_2 : 107024 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:221:49
  106ede:    08 d6       	r0 = r1 - r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:221:49
  106ee0:    40 d3       	r0 = r0 + -3 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:221:49
  106ee2:    00 e8 91 1b 	r1 = b[r9 + 108] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:221:49
  106ee6:    19 20       	if (r1 != 0) goto 2 <my_malloc+0x86 : 106eea >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:221:49
  106ee8:    e0 87       	r0 = -4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:221:49
  106eea:    10 ce       	cmp r2, r0			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:221:13
  106eec:    00 fb b2 08 	if (nzcv >= 0) goto 278 <my_malloc+0x1A2 : 107006 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:221:13
  106ef0:    06 60       	[sp] = r6 
  106ef2:    00 80       	r0 = 0 
  106ef4:    80 60       	[sp+ 8] = r0 
  106ef6:    d0 ea ff ff 	r8 = -1 
  106efa:    00 ed 90 90 	r0 = r9 + 144 
  106efe:    40 60       	[sp+ 4] = r0 
  106f00:    53 ea 00 00 	r11 = 0 
  106f04:    d2 ea ff ff 	r10 = -1 
  106f08:    56 ea 00 00 	r14 = 0 
  106f0c:    41 40       	r1 = [sp+ 4] 
  106f0e:    2f c6       	r7 = r5 
  106f10:    3e c6       	r6 = r7 
  106f12:    0c c6       	r4 = r1 
  106f14:    73 50       	r3 = h[r6 + 4] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:236:32
  106f16:    98 d6       	r0 = r3 - r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:236:43
  106f18:    1a ce       	cmp r3, r2			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:237:21
  106f1a:    30 13       	if (nzcv < 0) goto 96 <my_malloc+0x118 : 106f7c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:237:21
  106f1c:    c0 f3 e1 fc 	r1 = r14 & (~252) 
  106f20:    11 98       	cmp r1, 2			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:238:25
  106f22:    0d 10       	ifs (nzcv == 0) goto 26 <my_malloc+0xDA : 106f3e >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:238:25
  106f24:    09 98       	cmp r1, 1
  106f26:    0e 10       	ifs (nzcv == 0) goto 28 <my_malloc+0xE0 : 106f44 >
  106f28:    99 22       	if (r1 != 0) goto 82 <my_malloc+0x118 : 106f7c >
  106f2a:    71 54       	r1 = h[r6 + 6] 
  106f2c:    c7 40       	r7 = [sp+ 12] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:239:47
  106f2e:    37 20       	if (r7 == 0) goto 6 <my_malloc+0xD2 : 106f36 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:239:47
  106f30:    c7 40       	r7 = [sp+ 12] 
  106f32:    0f ce       	cmp r1, r7
  106f34:    3f 10       	ifs (nzcv == 0) goto 126 <my_malloc+0x150 : 106fb4 >
  106f36:    b1 20       	if (r1 == 0) goto 22 <my_malloc+0xEA : 106f4e >
  106f38:    dc c6       	r12 = r11 
  106f3a:    c5 c6       	r13 = r8 
  106f3c:    10 08       	goto 32 <my_malloc+0xFA : 106f5e >
  106f3e:    90 ce       	cmp r10, r0			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:299:29
  106f40:    1d 11       	ifs (nzcv != 0) goto 58 <my_malloc+0x118 : 106f7c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:299:29
  106f42:    38 08       	goto 112 <my_malloc+0x150 : 106fb4 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:299:29
  106f44:    80 ce       	cmp r8, r0			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:292:29
  106f46:    1a 11       	ifs (nzcv != 0) goto 52 <my_malloc+0x118 : 106f7c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:292:29
  106f48:    71 54       	r1 = h[r6 + 6] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:292:29
  106f4a:    89 21       	if (r1 != 0) goto 48 <my_malloc+0x118 : 106f7c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:292:29
  106f4c:    33 08       	goto 102 <my_malloc+0x150 : 106fb4 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:292:29
  106f4e:    40 ce       	cmp r0, r8			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:251:33
  106f50:    45 c6       	r13 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:251:33
  106f52:    20 03       	if (nzcv >= 0) {			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:251:33
  106f54:    c5 c6       		r13 = r8 
                               	}			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:251:33
  106f56:    98 ce       	cmp r11, r0			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:248:33
  106f58:    44 c6       	r12 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:248:33
  106f5a:    20 03       	if (nzcv >= 0) {			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:248:33
  106f5c:    dc c6       		r12 = r11 
                               	}			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:248:33
  106f5e:    87 40       	r7 = [sp+ 8] 
  106f60:    42 ce       	cmp r0, r10			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:260:33
  106f62:    43 c6       	r11 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:260:33
  106f64:    20 03       	if (nzcv >= 0) {			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:260:33
  106f66:    d3 c6       		r11 = r10 
                               	}			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:260:33
  106f68:    38 ce       	cmp r7, r0			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:257:33
  106f6a:    01 c6       	r1 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:257:33
  106f6c:    20 03       	if (nzcv >= 0) {			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:257:33
  106f6e:    39 c6       		r1 = r7 
                               	}			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:257:33
  106f70:    37 48       	r7 = [r6 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:266:38
  106f72:    87 20       	if (r7 == 0) goto 16 <my_malloc+0x120 : 106f84 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:266:38
  106f74:    da c6       	r10 = r11 
  106f76:    e8 c6       	r8 = r13 
  106f78:    e3 c6       	r11 = r12 
  106f7a:    81 60       	[sp+ 8] = r1 
  106f7c:    37 48       	r7 = [r6 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:306:30
  106f7e:    31 c6       	r1 = r6 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:306:30
  106f80:    7f 24       	if (r7 != 0) goto -114 <my_malloc+0xAC : 106f10 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:306:30
  106f82:    18 08       	goto 48 <my_malloc+0x150 : 106fb4 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:306:30
  106f84:    8f ef d0 ff 	cmp r13, -1			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:267:33
  106f88:    0b 10       	ifs (nzcv == 0) goto 22 <my_malloc+0x13C : 106fa0 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:267:33
  106f8a:    80 ef b0 64 	cmp r11, 100			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:270:37
  106f8e:    4a c6       	r10 = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:270:37
  106f90:    90 03       	if (nzcv <= 0) {			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:270:37
  106f92:    da c6       		r10 = r11 
                               	}			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:270:37
  106f94:    56 ea 01 00 	r14 = 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:270:37
  106f98:    81 60       	[sp+ 8] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:270:37
  106f9a:    e3 c6       	r11 = r12 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:270:37
  106f9c:    e8 c6       	r8 = r13 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:270:37
  106f9e:    b6 0f       	goto -148 <my_malloc+0xA8 : 106f0c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:270:37
  106fa0:    56 ea 02 00 	r14 = 2 
  106fa4:    8f ef b0 ff 	cmp r11, -1			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:273:40
  106fa8:    81 60       	[sp+ 8] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:273:40
  106faa:    a1 c6       	r1 = r12 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:273:40
  106fac:    e0 c6       	r8 = r12 
  106fae:    da c6       	r10 = r11 
  106fb0:    4b c6       	r11 = r1 
  106fb2:    ac 11       	ifs (nzcv != 0) goto -168 <my_malloc+0xA8 : 106f0c >
  106fb4:    00 ed 91 98 	r1 = r9 + 152 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:319:25
  106fb8:    31 ce       	cmp r6, r1			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:319:17
  106fba:    23 10       	ifs (nzcv == 0) goto 70 <my_malloc+0x19E : 107002 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:319:17
  106fbc:    21 48       	r1 = [r4 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:322:67
  106fbe:    c5 40       	r5 = [sp+ 12] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:323:57
  106fc0:    4d 74       	h[r1 + 6] = r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:323:57
  106fc2:    35 48       	r5 = [r6 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:327:61
  106fc4:    25 68       	[r4 + 0] = r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:327:50
  106fc6:    00 ed 14 08 	r4 = r1 + 8 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:322:84
  106fca:    88 98       	cmp r0, 17			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:330:21
  106fcc:    11 13       	if (nzcv < 0) goto 34 <my_malloc+0x18C : 106ff0 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:330:21
  106fce:    b1 d4       	r1 = r6 + r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:334:69
  106fd0:    48 70       	h[r1 + 4] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:338:48
  106fd2:    72 70       	h[r6 + 4] = r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:339:41
  106fd4:    4d 50       	r5 = h[r1 + 4] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:342:21
  106fd6:    00 ed 90 90 	r0 = r9 + 144 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:342:21
  106fda:    03 c6       	r3 = r0 
  106fdc:    18 48       	r0 = [r3 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:342:21
  106fde:    47 50       	r7 = h[r0 + 4] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:342:21
  106fe0:    3d ce       	cmp r7, r5			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:342:21
  106fe2:    fb 13       	if (nzcv < 0) goto -10 <my_malloc+0x176 : 106fda >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:342:21
  106fe4:    01 ce       	cmp r0, r1			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:342:21
  106fe6:    16 03       	ifs (nzcv != 0) {			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:342:21
  106fe8:    08 68       		[r1 + 0] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:342:21
  106fea:    19 68       		[r3 + 0] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:342:21
  106fec:    73 50       		r3 = h[r6 + 4] 
                               	} else {			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:342:21
  106fee:    13 c6       		r3 = r2 
                               	}			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:347:49
  106ff0:    58 c9       	r0 = r3.l 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:347:40
  106ff2:    24 e8 91 1c 	r1 = [++ r9 = 112] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:347:37
  106ff6:    08 d6       	r0 = r1 - r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:347:37
  106ff8:    60 e8 90 00 	[r9 + 0] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:347:37
  106ffc:    20 e8 95 08 	r5 = [r9 + 32] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:347:37
  107000:    01 08       	goto 2 <my_malloc+0x1A0 : 107004 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:347:37
  107002:    04 80       	r4 = 0 
  107004:    06 40       	r6 = [sp] 
  107006:    2d 48       	r5 = [r5 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:368:21
  107008:    ed 27       	if (r5 != 0) goto -4 <my_malloc+0x1A2 : 107006 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:368:5
  10700a:    54 20       	if (r4 == 0) goto 10 <my_malloc+0x1B2 : 107016 >
  10700c:    20 c6       	r0 = r4 			  ## my_malloc.c:29:9
  10700e:    01 80       	r1 = 0 			  ## my_malloc.c:29:9
  107010:    32 c6       	r2 = r6 			  ## my_malloc.c:29:9
  107012:    dd e1 3f fa 	call -278714 <memset : c2f5c >			  ## my_malloc.c:29:9
  107016:    20 c6       	r0 = r4 			  ## my_malloc.c:33:5
  107018:    10 cd       	sp += 16 			  ## my_malloc.c:33:5
  10701a:    1e c0       	{pc, r14-r4} = [sp++] 			  ## my_malloc.c:33:5


.GCPI101_0:
  10701c:    60 1c 00 00     < 7264 : 0x1C60 >

.GCPI101_1:
  107020:    58 63 00 00     < 25432 : 0x6358 >

.GCPI101_2:
  107024:    8b 7e 00 00     < 32395 : 0x7E8B >

sydf_phy_read:
  107028:    14 c2       	[--sp] = {rets, r4} 			  ## sydfile.c:17:0
  10702a:    1c c6       	r4 = r3 			  ## sydfile.c:17:0
  10702c:    03 c6       	r3 = r0 			  ## sydfile.c:17:0
  10702e:    d8 48       	r0 = [r3 + 12] 			  ## sydfile.c:18:30
  107030:    50 20       	if (r0 == 0) goto 10 <sydf_phy_read+0x14 : 10703c >			  ## sydfile.c:18:30
  107032:    23 c6       	r3 = r4 			  ## sydfile.c:23:15
  107034:    ff e1 2f 74 	call -4476 <dev_byte_read : 105ebc >			  ## sydfile.c:23:15
  107038:    04 c6       	r4 = r0 			  ## sydfile.c:23:15
  10703a:    07 08       	goto 14 <sydf_phy_read+0x22 : 10704a >
  10703c:    58 48       	r0 = [r3 + 4] 			  ## sydfile.c:20:43
  10703e:    12 d4       	r2 = r2 + r0 			  ## sydfile.c:20:36
  107040:    08 c6       	r0 = r1 			  ## sydfile.c:20:9
  107042:    11 c6       	r1 = r2 			  ## sydfile.c:20:9
  107044:    22 c6       	r2 = r4 			  ## sydfile.c:20:9
  107046:    dd e1 3f f8 	call -278778 <memcpy : c2f50 >			  ## sydfile.c:20:9
  10704a:    20 c6       	r0 = r4 			  ## sydfile.c:27:5
  10704c:    14 c0       	{pc, r4} = [sp++] 			  ## sydfile.c:27:5


sydf_readfileheader:
  10704e:    14 c2       	[--sp] = {rets, r4} 			  ## sydfile.c:32:0
  107050:    0c c6       	r4 = r1 			  ## sydfile.c:32:0
  107052:    19 a5       	r1 = r3 << 5 			  ## sydfile.c:33:50
  107054:    52 d4       	r2 = r2 + r1 			  ## sydfile.c:33:42
  107056:    21 c6       	r1 = r4 			  ## sydfile.c:33:5
  107058:    03 81       	r3 = 32 			  ## sydfile.c:33:5
  10705a:    e6 04       	call -52 <sydf_phy_read : 107028 >			  ## sydfile.c:33:5
  10705c:    a0 d0       	r0 = r4 + 2 			  ## sydfile.c:44:21
  10705e:    f1 80       	r1 = 30 			  ## sydfile.c:44:14
  107060:    ff e1 df 73 	call -4486 <CRC16 : 105ede >			  ## sydfile.c:44:14
  107064:    01 c6       	r1 = r0 			  ## sydfile.c:44:14
  107066:    22 50       	r2 = h[r4 + 0] 			  ## sydfile.c:47:26
  107068:    08 80       	r0 = 1 			  ## sydfile.c:47:16
  10706a:    0a ce       	cmp r1, r2			  ## sydfile.c:47:16
  10706c:    10 03       	ifs (nzcv != 0) {			  ## sydfile.c:47:16
  10706e:    00 80       		r0 = 0 
                               	}			  ## sydfile.c:47:16
  107070:    14 c0       	{pc, r4} = [sp++] 			  ## sydfile.c:47:16


sydf_monut_api:
  107072:    16 c2       	[--sp] = {rets, r6-r4} 			  ## sydf_resource.c:121:0
  107074:    e0 cd       	sp += -32 			  ## sydf_resource.c:121:0
  107076:    0c c6       	r4 = r1 			  ## sydf_resource.c:121:0
  107078:    06 c6       	r6 = r0 			  ## sydf_resource.c:121:0
  10707a:    35 48       	r5 = [r6 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:76:9
  10707c:    7d 20       	if (r5 != 0) goto 14 <sydf_monut_api+0x1A : 10708c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:76:9
  10707e:    a0 80       	r0 = 20 			  ## sydf_resource.c:101:12
  107080:    11 80       	r1 = 2 			  ## sydf_resource.c:101:12
  107082:    ff e1 ff ee 	call -546 <my_malloc : 106e64 >			  ## sydf_resource.c:101:12
  107086:    05 c6       	r5 = r0 			  ## sydf_resource.c:101:12
  107088:    35 68       	[r6 + 0] = r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:77:15
  10708a:    55 22       	if (r5 == 0) goto 74 <sydf_monut_api+0x64 : 1070d6 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:77:15
  10708c:    ec 68       	[r5 + 12] = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:86:19
  10708e:    f4 20       	if (r4 == 0) goto 30 <sydf_monut_api+0x3C : 1070ae >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:86:19
  107090:    04 80       	r4 = 0 
  107092:    6c 68       	[r5 + 4] = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:104:23
  107094:    01 90       	r1 = sp + 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:104:23
  107096:    28 c6       	r0 = r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:105:22
  107098:    02 80       	r2 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:105:22
  10709a:    0b 80       	r3 = 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:105:22
  10709c:    d8 04       	call -80 <sydf_readfileheader : 10704e >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:105:22
  10709e:    50 21       	if (r0 == 0) goto 42 <sydf_monut_api+0x58 : 1070ca >
  1070a0:    68 48       	r0 = [r5 + 4] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:109:44
  1070a2:    41 40       	r1 = [sp+ 4] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:109:32
  1070a4:    08 d6       	r0 = r1 - r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:109:37
  1070a6:    40 a5       	r0 = r0 >> 5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:109:54
  1070a8:    c0 d3       	r0 = r0 + -1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:109:79
  1070aa:    a8 68       	[r5 + 8] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:109:25
  1070ac:    16 08       	goto 44 <sydf_monut_api+0x68 : 1070da >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:109:25
  1070ae:    40 2b       	r0 = [addr(52)]  <.GCPI104_1 : 1070e4 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:93:44
  1070b0:    01 49       	r1 = [r0 + 16] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:93:44
  1070b2:    29 68       	[r5 + 0] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:93:28
  1070b4:    40 49       	r0 = [r0 + 20] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:94:44
  1070b6:    68 68       	[r5 + 4] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:94:28
  1070b8:    01 90       	r1 = sp + 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:94:28
  1070ba:    04 80       	r4 = 0 
  1070bc:    28 c6       	r0 = r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:98:22
  1070be:    02 80       	r2 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:98:22
  1070c0:    03 80       	r3 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:98:22
  1070c2:    c5 04       	call -118 <sydf_readfileheader : 10704e >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:98:22
  1070c4:    a8 20       	if (r0 != 0) goto 20 <sydf_monut_api+0x68 : 1070da >
  1070c6:    00 2a       	r0 = [addr(32)]  <.GCPI104_2 : 1070e8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:99:13
  1070c8:    01 08       	goto 2 <sydf_monut_api+0x5A : 1070cc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:99:13
  1070ca:    40 29       	r0 = [addr(20)]  <.GCPI104_0 : 1070e0 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:106:13
  1070cc:    dd e1 6f f8 	call -278772 <xprintf : c2fdc >
  1070d0:    14 ea 04 80 	r4 = 32772 
  1070d4:    02 08       	goto 4 <sydf_monut_api+0x68 : 1070da >
  1070d6:    14 ea 02 80 	r4 = 32770 
  1070da:    20 c6       	r0 = r4 			  ## sydf_resource.c:122:5
  1070dc:    20 cd       	sp += 32 			  ## sydf_resource.c:122:5
  1070de:    16 c0       	{pc, r6-r4} = [sp++] 			  ## sydf_resource.c:122:5


.GCPI104_0:
  1070e0:    2d cf 11 00     < 1167149 : 0x11CF2D >

.GCPI104_1:
  1070e4:    8c 7e 00 00     < 32396 : 0x7E8C >

.GCPI104_2:
  1070e8:    03 cf 11 00     < 1167107 : 0x11CF03 >

sydf_fhdl_malloc:
  1070ec:    60 81       	r0 = 44 			  ## sydf_resource.c:90:0
  1070ee:    19 80       	r1 = 3 			  ## sydf_resource.c:91:13
  1070f0:    b9 0e       	goto -654 <my_malloc : 106e64 >			  ## sydf_resource.c:91:13


__sydfile_path_get_name:
  1070f2:    17 c2       	[--sp] = {rets, r7-r4} 			  ## sydfile.c:127:0
  1070f4:    0c c6       	r4 = r1 			  ## sydfile.c:127:0
  1070f6:    05 c6       	r5 = r0 			  ## sydfile.c:131:9
  1070f8:    08 e8 51 40 	r1 = b[r5 ++= 1] 			  ## sydfile.c:131:9
  1070fc:    79 99       	cmp r1, 47			  ## sydfile.c:131:9
  1070fe:    10 03       	ifs (nzcv != 0) {			  ## sydfile.c:131:9
  107100:    05 c6       		r5 = r0 
                               	}			  ## sydfile.c:131:9
  107102:    28 c6       	r0 = r5 			  ## sydfile.c:134:11
  107104:    79 81       	r1 = 47 			  ## sydfile.c:134:11
  107106:    dd e1 5f f3 	call -278934 <strchr : c2f74 >			  ## sydfile.c:134:11
  10710a:    20 20       	if (r0 == 0) goto 4 <__sydfile_path_get_name+0x1E : 107110 >			  ## sydfile.c:135:9
  10710c:    46 d7       	r6 = r0 - r5 			  ## sydfile.c:136:20
  10710e:    04 08       	goto 8 <__sydfile_path_get_name+0x26 : 107118 >
  107110:    28 c6       	r0 = r5 			  ## sydfile.c:138:16
  107112:    dd e1 9f f2 	call -278958 <strlen : c2f68 >			  ## sydfile.c:138:16
  107116:    06 c6       	r6 = r0 			  ## sydfile.c:138:16
  107118:    7e 98       	cmp r6, 15			  ## sydfile.c:141:9
  10711a:    37 c6       	r7 = r6 			  ## sydfile.c:141:9
  10711c:    a0 03       	ifs (nzcv >= 0) {			  ## sydfile.c:141:9
  10711e:    7f 80       		r7 = 15 
                               	}			  ## sydfile.c:141:9
  107120:    20 c6       	r0 = r4 			  ## sydfile.c:144:5
  107122:    29 c6       	r1 = r5 			  ## sydfile.c:144:5
  107124:    3a c6       	r2 = r7 			  ## sydfile.c:144:5
  107126:    dd e1 3f f1 	call -279002 <memcpy : c2f50 >			  ## sydfile.c:144:5
  10712a:    00 80       	r0 = 0 			  ## sydfile.c:145:15
  10712c:    40 e7 40 07 	b[r4 + r7] = r0 			  ## sydfile.c:145:15
  107130:    a8 d5       	r0 = r5 + r6 			  ## sydfile.c:146:14
  107132:    17 c0       	{pc, r7-r4} = [sp++] 


sydf_open_dir:
  107134:    4b 48       	r3 = [r1 + 4] 			  ## sydfile.c:157:0
  107136:    03 68       	[r0 + 0] = r3 			  ## sydfile.c:158:17
  107138:    8b 48       	r3 = [r1 + 8] 			  ## sydfile.c:159:27
  10713a:    43 68       	[r0 + 4] = r3 			  ## sydfile.c:159:19
  10713c:    03 80       	r3 = 0 			  ## sydfile.c:159:19
  10713e:    43 e5 02 02 	d[r0 + 8] = r2, r3 			  ## sydfile.c:160:17
  107142:    ca 49       	r2 = [r1 + 28] 			  ## sydfile.c:162:5
  107144:    82 6a       	[r0 + 40] = r2 			  ## sydfile.c:162:5
  107146:    8a 49       	r2 = [r1 + 24] 			  ## sydfile.c:162:5
  107148:    42 6a       	[r0 + 36] = r2 			  ## sydfile.c:162:5
  10714a:    4a 49       	r2 = [r1 + 20] 			  ## sydfile.c:162:5
  10714c:    02 6a       	[r0 + 32] = r2 			  ## sydfile.c:162:5
  10714e:    09 49       	r1 = [r1 + 16] 			  ## sydfile.c:162:5
  107150:    c1 69       	[r0 + 28] = r1 			  ## sydfile.c:162:5
  107152:    20 00       	rts			  ## sydfile.c:163:1


sydf_open:
  107154:    1c c2       	[--sp] = {rets, r12-r4} 			  ## sydfile.c:167:0
  107156:    c8 cd       	sp += -56 			  ## sydfile.c:167:0
  107158:    16 c6       	r6 = r2 			  ## sydfile.c:167:0
  10715a:    0d c6       	r5 = r1 			  ## sydfile.c:167:0
  10715c:    04 c6       	r4 = r0 			  ## sydfile.c:167:0
  10715e:    20 e8 5b 00 	r11 = [r5 + 0] 			  ## sydfile.c:169:28
  107162:    80 ef b0 00 	cmp r11, 0			  ## sydfile.c:169:9
  107166:    07 11       	ifs (nzcv != 0) goto 14 <sydf_open+0x22 : 107176 >			  ## sydfile.c:169:9
  107168:    c1 04       	call -126 <sydf_fhdl_malloc : 1070ec >			  ## sydfile.c:170:19
  10716a:    43 c6       	r11 = r0 			  ## sydfile.c:170:19
  10716c:    60 e8 5b 00 	[r5 + 0] = r11 			  ## sydfile.c:170:17
  107170:    80 ef b0 00 	cmp r11, 0			  ## sydfile.c:171:13
  107174:    46 10       	ifs (nzcv == 0) goto 140 <sydf_open+0xAE : 107202 >			  ## sydfile.c:171:13
  107176:    f4 23       	if (r4 == 0) goto 126 <sydf_open+0xA2 : 1071f6 >
  107178:    98 c6       	r0 = r11 			  ## sydfile.c:179:5
  10717a:    01 80       	r1 = 0 			  ## sydfile.c:179:5
  10717c:    62 81       	r2 = 44 			  ## sydfile.c:179:5
  10717e:    dd e1 df ee 	call -279078 <memset : c2f5c >			  ## sydfile.c:179:5
  107182:    c6 23       	if (r6 == 0) goto 120 <sydf_open+0xA8 : 1071fc >			  ## sydfile.c:179:5
  107184:    06 60       	[sp] = r6 
  107186:    60 e8 b4 06 	[r11 + 24] = r4 			  ## sydfile.c:183:16
  10718a:    20 e8 4c 02 	r12 = [r4 + 8] 			  ## sydfile.c:189:26
  10718e:    60 e8 bc 04 	[r11 + 16] = r12 			  ## sydfile.c:190:23
  107192:    38 90       	r0 = sp + 7 			  ## sydfile.c:190:23
  107194:    06 80       	r6 = 0 
  107196:    01 80       	r1 = 0 			  ## sydfile.c:192:5
  107198:    8a 80       	r2 = 17 			  ## sydfile.c:192:5
  10719a:    dd e1 ff ed 	call -279106 <memset : c2f5c >			  ## sydfile.c:192:5
  10719e:    e0 48       	r0 = [r4 + 12] 			  ## sydfile.c:193:30
  1071a0:    48 20       	if (r0 != 0) goto 8 <sydf_open+0x56 : 1071aa >			  ## sydfile.c:193:30
  1071a2:    39 90       	r1 = sp + 7 
  1071a4:    00 40       	r0 = [sp] 			  ## sydfile.c:194:20
  1071a6:    a5 04       	call -182 <__sydfile_path_get_name : 1070f2 >			  ## sydfile.c:194:20
  1071a8:    00 60       	[sp] = r0 			  ## sydfile.c:194:20
  1071aa:    c5 90       	r5 = sp + 24 
  1071ac:    00 ed 58 10 	r8 = r5 + 16 
  1071b0:    20 e4 09 5a 	r9 = [addr(360)]  <.GCPI108_0 : 10731c >
  1071b4:    00 ed fa 07 	r10 = sp + 7 
  1071b8:    17 ea 04 80 	r7 = 32772 
  1071bc:    19 08       	goto 50 <sydf_open+0x9C : 1071f0 >
  1071be:    20 c6       	r0 = r4 			  ## sydfile.c:204:21
  1071c0:    29 c6       	r1 = r5 			  ## sydfile.c:204:21
  1071c2:    32 c6       	r2 = r6 			  ## sydfile.c:204:21
  1071c4:    03 80       	r3 = 0 			  ## sydfile.c:204:21
  1071c6:    ff e1 2f f4 	call -380 <sydf_readfileheader : 10704e >			  ## sydfile.c:204:21
  1071ca:    08 98       	cmp r0, 1			  ## sydfile.c:204:13
  1071cc:    00 fb 21 0a 	ifs (nzcv != 0) goto 324 <sydf_open+0x1C0 : 107314 >			  ## sydfile.c:204:13
  1071d0:    00 e9 c0 01 	r0 = b[sp+ 7] 			  ## sydfile.c:209:25
  1071d4:    60 20       	if (r0 == 0) goto 12 <sydf_open+0x8E : 1071e2 >			  ## sydfile.c:209:17
  1071d6:    80 c6       	r0 = r8 			  ## sydfile.c:210:26
  1071d8:    91 c6       	r1 = r10 			  ## sydfile.c:210:26
  1071da:    dd e1 1f ec 	call -279166 <strcmp : c2f60 >			  ## sydfile.c:210:26
  1071de:    68 20       	if (r0 != 0) goto 12 <sydf_open+0x98 : 1071ec >			  ## sydfile.c:210:26
  1071e0:    13 08       	goto 38 <sydf_open+0xB4 : 107208 >			  ## sydfile.c:210:26
  1071e2:    80 c6       	r0 = r8 			  ## sydfile.c:215:26
  1071e4:    89 c6       	r1 = r9 			  ## sydfile.c:215:26
  1071e6:    dd e1 bf eb 	call -279178 <strcmp : c2f60 >			  ## sydfile.c:215:26
  1071ea:    e8 20       	if (r0 != 0) goto 28 <sydf_open+0xB4 : 107208 >			  ## sydfile.c:215:26
  1071ec:    00 42       	r0 = [sp+ 32] 
  1071ee:    36 d4       	r6 = r6 + r0 
  1071f0:    e0 48       	r0 = [r4 + 12] 			  ## sydfile.c:203:33
  1071f2:    50 26       	if (r0 == 0) goto -54 <sydf_open+0x6A : 1071be >			  ## sydfile.c:203:33
  1071f4:    27 08       	goto 78 <sydf_open+0xF0 : 107244 >			  ## sydfile.c:203:33
  1071f6:    17 ea 02 80 	r7 = 32770 
  1071fa:    8c 08       	goto 280 <sydf_open+0x1C0 : 107314 >
  1071fc:    17 ea 03 80 	r7 = 32771 
  107200:    89 08       	goto 274 <sydf_open+0x1C0 : 107314 >
  107202:    17 ea 01 80 	r7 = 32769 
  107206:    86 08       	goto 268 <sydf_open+0x1C0 : 107314 >
  107208:    00 42       	r0 = [sp+ 32] 			  ## sydfile.c:222:26
  10720a:    00 98       	cmp r0, 0			  ## sydfile.c:222:26
  10720c:    7c 10       	ifs (nzcv == 0) goto 248 <sydf_open+0x1B2 : 107306 >			  ## sydfile.c:222:26
  10720e:    c1 90       	r1 = sp + 24 
  107210:    98 c6       	r0 = r11 			  ## sydfile.c:227:13
  107212:    0a 80       	r2 = 1 			  ## sydfile.c:227:13
  107214:    8f 04       	call -226 <sydf_open_dir : 107134 >			  ## sydfile.c:227:13
  107216:    06 89       	r6 += 32 			  ## sydfile.c:226:24
  107218:    20 e8 b0 01 	r0 = [r11 + 4] 			  ## sydfile.c:229:24
  10721c:    00 99       	cmp r0, 32			  ## sydfile.c:229:17
  10721e:    21 03       	if (nzcv >= 0) {			  ## sydfile.c:230:31
  107220:    00 8f       		r0 += -32 			  ## sydfile.c:230:31
  107222:    60 e8 b0 01 		[r11 + 4] = r0 
                               	}			  ## sydfile.c:230:31
  107226:    00 80       	r0 = 0 			  ## sydfile.c:230:31
  107228:    60 e8 b0 00 	[r11 + 0] = r0 			  ## sydfile.c:232:25
  10722c:    c1 90       	r1 = sp + 24 			  ## sydfile.c:232:25
  10722e:    20 c6       	r0 = r4 			  ## sydfile.c:233:26
  107230:    32 c6       	r2 = r6 			  ## sydfile.c:233:26
  107232:    0b 80       	r3 = 1 			  ## sydfile.c:233:26
  107234:    ff e1 bf f0 	call -490 <sydf_readfileheader : 10704e >			  ## sydfile.c:233:26
  107238:    00 98       	cmp r0, 0
  10723a:    6c 10       	ifs (nzcv == 0) goto 216 <sydf_open+0x1C0 : 107314 >
  10723c:    c0 41       	r0 = [sp+ 28] 			  ## sydfile.c:236:26
  10723e:    40 a5       	r0 = r0 >> 5 			  ## sydfile.c:236:32
  107240:    1f ed 0c ff 	r12 = r0 + -1 			  ## sydfile.c:236:57
  107244:    4c e5 b6 04 	d[r11 + 16] = r6, r12 			  ## sydfile.c:248:23
  107248:    3d 90       	r5 = sp + 7 			  ## sydfile.c:248:23
  10724a:    07 80       	r7 = 0 			  ## sydfile.c:248:23
  10724c:    28 c6       	r0 = r5 			  ## sydfile.c:251:5
  10724e:    01 80       	r1 = 0 			  ## sydfile.c:251:5
  107250:    8a 80       	r2 = 17 			  ## sydfile.c:251:5
  107252:    dd e1 3f e8 	call -279290 <memset : c2f5c >			  ## sydfile.c:251:5
  107256:    00 40       	r0 = [sp] 			  ## sydfile.c:252:16
  107258:    29 c6       	r1 = r5 			  ## sydfile.c:252:16
  10725a:    ff e1 af f4 	call -364 <__sydfile_path_get_name : 1070f2 >			  ## sydfile.c:252:16
  10725e:    41 c6       	r9 = r0 			  ## sydfile.c:252:16
  107260:    00 e9 c0 01 	r0 = b[sp+ 7] 			  ## sydfile.c:253:17
  107264:    00 98       	cmp r0, 0			  ## sydfile.c:253:17
  107266:    56 10       	ifs (nzcv == 0) goto 172 <sydf_open+0x1C0 : 107314 >			  ## sydfile.c:253:17
  107268:    0f 80       	r7 = 1 
  10726a:    c6 90       	r6 = sp + 24 
  10726c:    00 ed fa 07 	r10 = sp + 7 
  107270:    45 08       	goto 138 <sydf_open+0x1A8 : 1072fc >
  107272:    30 c6       	r0 = r6 			  ## sydfile.c:257:9
  107274:    01 80       	r1 = 0 			  ## sydfile.c:257:9
  107276:    02 81       	r2 = 32 			  ## sydfile.c:257:9
  107278:    dd e1 0f e7 	call -279328 <memset : c2f5c >			  ## sydfile.c:257:9
  10727c:    20 e8 b2 05 	r2 = [r11 + 20] 			  ## sydfile.c:259:59
  107280:    20 c6       	r0 = r4 			  ## sydfile.c:259:21
  107282:    31 c6       	r1 = r6 			  ## sydfile.c:259:21
  107284:    3b c6       	r3 = r7 			  ## sydfile.c:259:21
  107286:    ff e1 2f ee 	call -572 <sydf_readfileheader : 10704e >			  ## sydfile.c:259:21
  10728a:    08 98       	cmp r0, 1			  ## sydfile.c:259:13
  10728c:    36 11       	ifs (nzcv != 0) goto 108 <sydf_open+0x1A6 : 1072fa >			  ## sydfile.c:259:13
  10728e:    80 c6       	r0 = r8 			  ## sydfile.c:263:22
  107290:    91 c6       	r1 = r10 			  ## sydfile.c:263:22
  107292:    dd e1 5f e6 	call -279350 <strcmp : c2f60 >			  ## sydfile.c:263:22
  107296:    18 23       	if (r0 != 0) goto 98 <sydf_open+0x1A6 : 1072fa >			  ## sydfile.c:263:22
  107298:    98 c6       	r0 = r11 			  ## sydfile.c:266:13
  10729a:    31 c6       	r1 = r6 			  ## sydfile.c:266:13
  10729c:    3a c6       	r2 = r7 			  ## sydfile.c:266:13
  10729e:    ff e1 9f f4 	call -366 <sydf_open_dir : 107134 >			  ## sydfile.c:266:13
  1072a2:    00 e9 00 09 	r0 = b[sp+ 36] 			  ## sydfile.c:269:48
  1072a6:    c0 f3 00 f0 	r0 = r0 & (~240) 			  ## sydfile.c:269:53
  1072aa:    18 98       	cmp r0, 3			  ## sydfile.c:269:85
  1072ac:    04 10       	ifs (nzcv == 0) goto 8 <sydf_open+0x162 : 1072b6 >			  ## sydfile.c:269:85
  1072ae:    00 e8 90 00 	r0 = b[r9 + 0] 			  ## sydfile.c:270:25
  1072b2:    78 99       	cmp r0, 47			  ## sydfile.c:269:17
  1072b4:    2e 11       	ifs (nzcv != 0) goto 92 <sydf_open+0x1BE : 107312 >			  ## sydfile.c:269:17
  1072b6:    20 e8 b0 05 	r0 = [r11 + 20] 			  ## sydfile.c:275:43
  1072ba:    c1 41       	r1 = [sp+ 28] 			  ## sydfile.c:275:60
  1072bc:    0d d4       	r5 = r1 + r0 			  ## sydfile.c:275:54
  1072be:    20 c6       	r0 = r4 			  ## sydfile.c:276:29
  1072c0:    31 c6       	r1 = r6 			  ## sydfile.c:276:29
  1072c2:    2a c6       	r2 = r5 			  ## sydfile.c:276:29
  1072c4:    0b 80       	r3 = 1 			  ## sydfile.c:276:29
  1072c6:    ff e1 2f ec 	call -636 <sydf_readfileheader : 10704e >			  ## sydfile.c:276:29
  1072ca:    08 98       	cmp r0, 1			  ## sydfile.c:276:21
  1072cc:    1f 11       	ifs (nzcv != 0) goto 62 <sydf_open+0x1B8 : 10730c >			  ## sydfile.c:276:21
  1072ce:    60 e8 b5 05 	[r11 + 20] = r5 			  ## sydfile.c:277:39
  1072d2:    c0 41       	r0 = [sp+ 28] 			  ## sydfile.c:279:34
  1072d4:    40 a5       	r0 = r0 >> 5 			  ## sydfile.c:279:40
  1072d6:    1f ed 0c ff 	r12 = r0 + -1 			  ## sydfile.c:279:65
  1072da:    60 e8 bc 04 	[r11 + 16] = r12 			  ## sydfile.c:280:39
  1072de:    07 80       	r7 = 0 
  1072e0:    90 c6       	r0 = r10 			  ## sydfile.c:284:21
  1072e2:    01 80       	r1 = 0 			  ## sydfile.c:284:21
  1072e4:    8a 80       	r2 = 17 			  ## sydfile.c:284:21
  1072e6:    dd e1 9f e3 	call -279438 <memset : c2f5c >			  ## sydfile.c:284:21
  1072ea:    88 c6       	r0 = r9 			  ## sydfile.c:285:32
  1072ec:    91 c6       	r1 = r10 			  ## sydfile.c:285:32
  1072ee:    ff e1 0f f0 	call -512 <__sydfile_path_get_name : 1070f2 >			  ## sydfile.c:285:32
  1072f2:    41 c6       	r9 = r0 			  ## sydfile.c:285:32
  1072f4:    00 e9 c0 01 	r0 = b[sp+ 7] 			  ## sydfile.c:286:33
  1072f8:    d0 20       	if (r0 == 0) goto 26 <sydf_open+0x1C0 : 107314 >			  ## sydfile.c:286:33
  1072fa:    7f d0       	r7 = r7 + 1 			  ## sydfile.c:256:30
  1072fc:    7c ce       	cmp r7, r12			  ## sydfile.c:256:5
  1072fe:    b9 19       	if (nzcv <= 0) goto -142 <sydf_open+0x11E : 107272 >			  ## sydfile.c:256:5
  107300:    17 ea 06 80 	r7 = 32774 
  107304:    07 08       	goto 14 <sydf_open+0x1C0 : 107314 >
  107306:    17 ea 07 80 	r7 = 32775 
  10730a:    04 08       	goto 8 <sydf_open+0x1C0 : 107314 >
  10730c:    17 ea 04 80 	r7 = 32772 
  107310:    01 08       	goto 2 <sydf_open+0x1C0 : 107314 >
  107312:    07 80       	r7 = 0 
  107314:    38 c6       	r0 = r7 			  ## sydfile.c:300:1
  107316:    38 cd       	sp += 56 			  ## sydfile.c:300:1
  107318:    1c c0       	{pc, r12-r4} = [sp++] 			  ## sydfile.c:300:1
  10731a:    00 00       	nop			  ## sydfile.c:300:1


.GCPI108_0:
  10731c:    52 cf 11 00     < 1167186 : 0x11CF52 >

sydf_open_api:
  107320:    19 0f       	goto -462 <sydf_open : 107154 >			  ## sydf_resource.c:126:0


sydf_openbyindex_api:
  107322:    17 c2       	[--sp] = {rets, r7-r4} 			  ## sydf_resource.c:131:0
  107324:    e0 cd       	sp += -32 			  ## sydf_resource.c:131:0
  107326:    14 c6       	r4 = r2 			  ## sydf_resource.c:131:0
  107328:    0f c6       	r7 = r1 			  ## sydf_resource.c:131:0
  10732a:    3d 48       	r5 = [r7 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:305:25
  10732c:    55 21       	if (r5 == 0) goto 42 <sydf_openbyindex_api+0x36 : 107358 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:305:25
  10732e:    28 49       	r0 = [r5 + 16] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:317:25
  107330:    e1 d3       	r1 = r4 + -1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:317:37
  107332:    16 ea 05 80 	r6 = 32773 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:317:37
  107336:    08 ce       	cmp r1, r0			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:317:37
  107338:    15 12       	if (nzcv >= 0) goto 42 <sydf_openbyindex_api+0x42 : 107364 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:317:37
  10733a:    02 e5 50 05 	r0, r2 = d[r5 + 20] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:320:62
  10733e:    01 90       	r1 = sp + 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:320:62
  107340:    23 c6       	r3 = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:320:17
  107342:    ff e1 4f e8 	call -760 <sydf_readfileheader : 10704e >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:320:17
  107346:    06 80       	r6 = 0 
  107348:    08 98       	cmp r0, 1			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:320:9
  10734a:    03 03       	ifs (nzcv == 0) {			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:320:9
  10734c:    01 90       		r1 = sp + 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:320:9
  10734e:    28 c6       		r0 = r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:321:9
  107350:    22 c6       		r2 = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:321:9
  107352:    ff e1 ff ee 		call -546
                               	} <sydf_open_dir : 107134 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:321:9
  107356:    06 08       	goto 12 <sydf_openbyindex_api+0x42 : 107364 >
  107358:    82 29       	r2 = [addr(24)]  <.GCPI110_0 : 107370 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:308:16
  10735a:    39 c6       	r1 = r7 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:308:16
  10735c:    ff e1 af ef 	call -524 <sydf_open : 107154 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:308:16
  107360:    06 c6       	r6 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:308:16
  107362:    36 20       	if (r6 == 0) goto 6 <sydf_openbyindex_api+0x48 : 10736a >
  107364:    30 c6       	r0 = r6 			  ## sydf_resource.c:132:5
  107366:    20 cd       	sp += 32 			  ## sydf_resource.c:132:5
  107368:    17 c0       	{pc, r7-r4} = [sp++] 			  ## sydf_resource.c:132:5
  10736a:    3d 48       	r5 = [r7 + 0] 
  10736c:    e0 0f       	goto -64 <sydf_openbyindex_api+0xC : 10732e >
  10736e:    00 00       	nop


.GCPI110_0:
  107370:    60 cf 11 00     < 1167200 : 0x11CF60 >

__sydfile_name_section:
  107374:    71 81       	r1 = 46 			  ## sydfile.c:151:0
  107376:    dd fa df df 	goto -279558 <strchr : c2f74 >			  ## sydfile.c:154:12


sydf_openbyfile_api:
  10737a:    1b c2       	[--sp] = {rets, r11-r4} 			  ## sydf_resource.c:136:0
  10737c:    dc cd       	sp += -36 			  ## sydf_resource.c:136:0
  10737e:    17 c6       	r7 = r2 			  ## sydf_resource.c:136:0
  107380:    0e c6       	r6 = r1 			  ## sydf_resource.c:136:0
  107382:    04 c6       	r4 = r0 			  ## sydf_resource.c:136:0
  107384:    c8 2c       	r0 = [addr(204)]  <.GCPI112_0 : 107450 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:328:5
  107386:    dd e1 9f e2 	call -279470 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:328:5
  10738a:    04 98       	cmp r4, 0			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:328:5
  10738c:    4f 10       	ifs (nzcv == 0) goto 158 <sydf_openbyfile_api+0xB2 : 10742c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:328:5
  10738e:    35 48       	r5 = [r6 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:333:28
  107390:    6d 20       	if (r5 != 0) goto 12 <sydf_openbyfile_api+0x24 : 10739e >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:333:28
  107392:    ff e1 bf ea 	call -682 <sydf_fhdl_malloc : 1070ec >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:334:19
  107396:    05 c6       	r5 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:334:19
  107398:    35 68       	[r6 + 0] = r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:334:17
  10739a:    05 98       	cmp r5, 0			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:334:17
  10739c:    4d 10       	ifs (nzcv == 0) goto 154 <sydf_openbyfile_api+0xBE : 107438 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:334:17
  10739e:    28 c6       	r0 = r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:340:5
  1073a0:    01 80       	r1 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:340:5
  1073a2:    62 81       	r2 = 44 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:340:5
  1073a4:    dd e1 af dd 	call -279628 <memset : c2f5c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:340:5
  1073a8:    07 98       	cmp r7, 0			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:340:5
  1073aa:    43 10       	ifs (nzcv == 0) goto 134 <sydf_openbyfile_api+0xB8 : 107432 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:340:5
  1073ac:    00 ed 48 1c 	r8 = r4 + 28 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:344:59
  1073b0:    80 c6       	r0 = r8 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:344:26
  1073b2:    e0 04       	call -64 <__sydfile_name_section : 107374 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:344:26
  1073b4:    40 ee 0b 08 	r11 = r0 - r8 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:345:30
  1073b8:    1f ed b1 ff 	r1 = r11 + -1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:346:23
  1073bc:    10 ea 13 80 	r0 = 32787 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:346:23
  1073c0:    79 98       	cmp r1, 15			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:346:23
  1073c2:    3c 18       	if (nzcv > 0) goto 120 <sydf_openbyfile_api+0xC2 : 10743c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:346:23
  1073c4:    10 ea 14 80 	r0 = 32788 
  1073c8:    80 ef b0 0f 	cmp r11, 15			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:348:16
  1073cc:    37 18       	if (nzcv > 0) goto 110 <sydf_openbyfile_api+0xC2 : 10743c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:348:16
  1073ce:    07 60       	[sp] = r7 
  1073d0:    a0 49       	r0 = [r4 + 24] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:352:31
  1073d2:    a8 69       	[r5 + 24] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:352:16
  1073d4:    27 49       	r7 = [r4 + 16] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:353:38
  1073d6:    2f 69       	[r5 + 16] = r7 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:353:23
  1073d8:    60 49       	r0 = [r4 + 20] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:354:38
  1073da:    68 69       	[r5 + 20] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:354:23
  1073dc:    26 90       	r6 = sp + 4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:354:23
  1073de:    00 ed 69 10 	r9 = r6 + 16 
  1073e2:    20 ee ba 10 	r10 = 16 - r11 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:351:25
  1073e6:    0c 80       	r4 = 1 
  1073e8:    1c 08       	goto 56 <sydf_openbyfile_api+0xA8 : 107422 >
  1073ea:    30 c6       	r0 = r6 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:358:9
  1073ec:    01 80       	r1 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:358:9
  1073ee:    02 81       	r2 = 32 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:358:9
  1073f0:    dd e1 4f db 	call -279704 <memset : c2f5c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:358:9
  1073f4:    02 e5 50 05 	r0, r2 = d[r5 + 20] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:359:66
  1073f8:    31 c6       	r1 = r6 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:359:21
  1073fa:    23 c6       	r3 = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:359:21
  1073fc:    ff e1 7f e2 	call -946 <sydf_readfileheader : 10704e >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:359:21
  107400:    08 98       	cmp r0, 1			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:359:13
  107402:    0e 11       	ifs (nzcv != 0) goto 28 <sydf_openbyfile_api+0xA6 : 107420 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:359:13
  107404:    88 c6       	r0 = r9 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:361:22
  107406:    81 c6       	r1 = r8 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:361:22
  107408:    9a c6       	r2 = r11 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:361:22
  10740a:    dd e1 ff da 	call -279714 <strncmp : c2f6c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:361:22
  10740e:    88 20       	if (r0 != 0) goto 16 <sydf_openbyfile_api+0xA6 : 107420 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:361:22
  107410:    88 c6       	r0 = r9 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:364:35
  107412:    b0 04       	call -160 <__sydfile_name_section : 107374 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:364:35
  107414:    41 d0       	r1 = r0 + 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:365:21
  107416:    00 40       	r0 = [sp] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:367:22
  107418:    92 c6       	r2 = r10 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:367:22
  10741a:    dd e1 7f da 	call -279730 <strncmp : c2f6c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:367:22
  10741e:    00 21       	if (r0 == 0) goto 32 <sydf_openbyfile_api+0xC6 : 107440 >
  107420:    64 d0       	r4 = r4 + 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:357:34
  107422:    27 ce       	cmp r4, r7			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:357:5
  107424:    e2 19       	if (nzcv <= 0) goto -60 <sydf_openbyfile_api+0x70 : 1073ea >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:357:5
  107426:    10 ea 06 80 	r0 = 32774 
  10742a:    08 08       	goto 16 <sydf_openbyfile_api+0xC2 : 10743c >
  10742c:    10 ea 12 80 	r0 = 32786 
  107430:    05 08       	goto 10 <sydf_openbyfile_api+0xC2 : 10743c >
  107432:    10 ea 15 80 	r0 = 32789 
  107436:    02 08       	goto 4 <sydf_openbyfile_api+0xC2 : 10743c >
  107438:    10 ea 01 80 	r0 = 32769 
  10743c:    24 cd       	sp += 36 
  10743e:    1b c0       	{pc, r11-r4} = [sp++] 
  107440:    21 90       	r1 = sp + 4 
  107442:    28 c6       	r0 = r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:370:13
  107444:    22 c6       	r2 = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:370:13
  107446:    ff e1 5f e7 	call -790 <sydf_open_dir : 107134 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:370:13
  10744a:    00 80       	r0 = 0 
  10744c:    f7 0f       	goto -18 <sydf_openbyfile_api+0xC2 : 10743c >
  10744e:    00 00       	nop


.GCPI112_0:
  107450:    62 cf 11 00     < 1167202 : 0x11CF62 >

sydf_read_api:
  107454:    16 c2       	[--sp] = {rets, r6-r4} 			  ## sydf_resource.c:141:0
  107456:    13 c6       	r3 = r2 			  ## sydf_resource.c:141:0
  107458:    04 c6       	r4 = r0 			  ## sydf_resource.c:141:0
  10745a:    64 21       	if (r4 == 0) goto 44 <sydf_read_api+0x34 : 107488 >			  ## sydf_resource.c:141:0
  10745c:    a0 49       	r0 = [r4 + 24] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:384:32
  10745e:    60 21       	if (r0 == 0) goto 44 <sydf_read_api+0x38 : 10748c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:384:32
  107460:    06 e5 45 01 	r5, r6 = d[r4 + 4] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:391:31
  107464:    02 80       	r2 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:391:31
  107466:    35 ce       	cmp r6, r5			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:391:9
  107468:    15 19       	if (nzcv <= 0) goto 42 <sydf_read_api+0x40 : 107494 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:391:9
  10746a:    72 d7       	r2 = r6 - r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:395:32
  10746c:    13 ce       	cmp r2, r3			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:396:11
  10746e:    90 03       	if (nzcv <= 0) {			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:396:11
  107470:    13 c6       		r3 = r2 
                               	}			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:396:11
  107472:    62 49       	r2 = [r4 + 20] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:398:50
  107474:    52 d5       	r2 = r2 + r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:398:61
  107476:    25 48       	r5 = [r4 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:398:84
  107478:    52 d5       	r2 = r2 + r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:398:75
  10747a:    ff e1 5f dd 	call -1110 <sydf_phy_read : 107028 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:398:11
  10747e:    02 c6       	r2 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:398:11
  107480:    a0 48       	r0 = [r4 + 8] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:399:17
  107482:    80 d4       	r0 = r0 + r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:399:17
  107484:    a0 68       	[r4 + 8] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:399:17
  107486:    06 08       	goto 12 <sydf_read_api+0x40 : 107494 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:399:17
  107488:    40 29       	r0 = [addr(20)]  <.GCPI113_1 : 10749c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:381:9
  10748a:    01 08       	goto 2 <sydf_read_api+0x3A : 10748e >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:381:9
  10748c:    c0 28       	r0 = [addr(12)]  <.GCPI113_0 : 107498 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:385:9
  10748e:    dd e1 5f da 	call -279734 <xprintf : c2fdc >
  107492:    02 80       	r2 = 0 
  107494:    10 c6       	r0 = r2 			  ## sydf_resource.c:142:5
  107496:    16 c0       	{pc, r6-r4} = [sp++] 			  ## sydf_resource.c:142:5


.GCPI113_0:
  107498:    a1 cf 11 00     < 1167265 : 0x11CFA1 >

.GCPI113_1:
  10749c:    82 cf 11 00     < 1167234 : 0x11CF82 >

sydf_seek_api:
  1074a0:    12 98       	cmp r2, 2			  ## sydf_resource.c:146:0
  1074a2:    04 10       	ifs (nzcv == 0) goto 8 <sydf_seek_api+0xC : 1074ac >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:405:5
  1074a4:    0a 98       	cmp r2, 1
  1074a6:    05 10       	ifs (nzcv == 0) goto 10 <sydf_seek_api+0x12 : 1074b2 >
  1074a8:    62 20       	if (r2 == 0) goto 12 <sydf_seek_api+0x16 : 1074b6 >
  1074aa:    06 08       	goto 12 <sydf_seek_api+0x18 : 1074b8 >
  1074ac:    42 48       	r2 = [r0 + 4] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:413:30
  1074ae:    51 d6       	r1 = r2 - r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:413:37
  1074b0:    02 08       	goto 4 <sydf_seek_api+0x16 : 1074b6 >
  1074b2:    82 48       	r2 = [r0 + 8] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:410:21
  1074b4:    89 d4       	r1 = r1 + r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:410:21
  1074b6:    81 68       	[r0 + 8] = r1 
  1074b8:    00 80       	r0 = 0 			  ## sydf_resource.c:147:5
  1074ba:    20 00       	rts			  ## sydf_resource.c:147:5


my_free:
  1074bc:    15 c2       	[--sp] = {rets, r5, r4} 			  ## my_malloc.c:37:0
  1074be:    20 21       	if (r0 == 0) goto 36 <my_free+0x28 : 1074e4 >			  ## my_malloc.c:37:0
  1074c0:    81 2a       	r1 = [addr(40)]  <.GCPI115_0 : 1074e8 >			  ## my_malloc.c:37:0
  1074c2:    00 ed 13 90 	r3 = r1 + 144 			  ## my_malloc.c:37:0
  1074c6:    c2 53       	r2 = h[r0 + -4] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:407:13
  1074c8:    1c c6       	r4 = r3 
  1074ca:    23 48       	r3 = [r4 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:407:13
  1074cc:    5d 50       	r5 = h[r3 + 4] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:407:13
  1074ce:    2a ce       	cmp r5, r2			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:407:13
  1074d0:    fb 13       	if (nzcv < 0) goto -10 <my_free+0xC : 1074c8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:407:13
  1074d2:    00 d2       	r0 = r0 + -8 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:398:13
  1074d4:    18 ce       	cmp r3, r0			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:407:13
  1074d6:    11 03       	ifs (nzcv != 0) {			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:407:13
  1074d8:    03 68       		[r0 + 0] = r3 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:407:13
  1074da:    20 68       		[r4 + 0] = r0 
                               	}			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:407:13
  1074dc:    24 e8 10 1c 	r0 = [++ r1 = 112] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:408:33
  1074e0:    80 d4       	r0 = r0 + r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:408:33
  1074e2:    08 68       	[r1 + 0] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:408:33
  1074e4:    15 c0       	{pc, r5, r4} = [sp++] 
  1074e6:    00 00       	nop


.GCPI115_0:
  1074e8:    60 1c 00 00     < 7264 : 0x1C60 >

sydf_fs_close_api:
  1074ec:    14 c2       	[--sp] = {rets, r4} 			  ## sydf_resource.c:161:0
  1074ee:    04 c6       	r4 = r0 			  ## sydf_resource.c:161:0
  1074f0:    20 48       	r0 = [r4 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:68:30
  1074f2:    e4 04       	call -56 <my_free : 1074bc >			  ## sydf_resource.c:106:12
  1074f4:    00 80       	r0 = 0 			  ## sydf_resource.c:106:12
  1074f6:    20 68       	[r4 + 0] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:68:11
  1074f8:    00 80       	r0 = 0 			  ## sydf_resource.c:162:5
  1074fa:    14 c0       	{pc, r4} = [sp++] 			  ## sydf_resource.c:162:5


sydf_file_close_api:
  1074fc:    14 c2       	[--sp] = {rets, r4} 			  ## sydf_resource.c:156:0
  1074fe:    04 c6       	r4 = r0 			  ## sydf_resource.c:156:0
  107500:    20 48       	r0 = [r4 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:62:31
  107502:    dc 04       	call -72 <my_free : 1074bc >			  ## sydf_resource.c:96:12
  107504:    00 80       	r0 = 0 			  ## sydf_resource.c:96:12
  107506:    20 68       	[r4 + 0] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:62:13
  107508:    00 80       	r0 = 0 			  ## sydf_resource.c:157:5
  10750a:    14 c0       	{pc, r4} = [sp++] 			  ## sydf_resource.c:157:5


sydf_attrs_api:
  10750c:    80 20       	if (r0 == 0) goto 16 <sydf_attrs_api+0x12 : 10751e >			  ## sydf_resource.c:151:0
  10750e:    42 48       	r2 = [r0 + 4] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:432:26
  107510:    4a 68       	[r1 + 4] = r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:432:17
  107512:    02 48       	r2 = [r0 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:433:27
  107514:    40 49       	r0 = [r0 + 20] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:433:41
  107516:    80 d4       	r0 = r0 + r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:433:32
  107518:    88 68       	[r1 + 8] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:433:18
  10751a:    00 80       	r0 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:433:18
  10751c:    20 00       	rts			  ## sydf_resource.c:152:5
  10751e:    10 ea 01 80 	r0 = 32769 
  107522:    20 00       	rts			  ## sydf_resource.c:152:5


sydf_file_name_api:
  107524:    14 c2       	[--sp] = {rets, r4} 			  ## sydf_resource.c:166:0
  107526:    14 c6       	r4 = r2 			  ## sydf_resource.c:166:0
  107528:    00 ed 02 1c 	r2 = r0 + 28 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:439:19
  10752c:    08 c6       	r0 = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:439:5
  10752e:    11 c6       	r1 = r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:439:5
  107530:    22 c6       	r2 = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:439:5
  107532:    dd e1 df d0 	call -280038 <memcpy : c2f50 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:439:5
  107536:    20 c6       	r0 = r4 			  ## sydf_resource.c:167:5
  107538:    14 c0       	{pc, r4} = [sp++] 			  ## sydf_resource.c:167:5


sydf_ioctl_api:
  10753a:    15 c2       	[--sp] = {rets, r5, r4} 			  ## sydf_resource.c:171:0
  10753c:    14 c6       	r4 = r2 			  ## sydf_resource.c:171:0
  10753e:    05 c6       	r5 = r0 			  ## sydf_resource.c:171:0
  107540:    1f ed 10 ee 	r0 = r1 + -18 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:447:5
  107544:    10 98       	cmp r0, 2			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:447:5
  107546:    0c 13       	if (nzcv < 0) goto 24 <sydf_ioctl_api+0x26 : 107560 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:447:5
  107548:    a1 98       	cmp r1, 20
  10754a:    0d 10       	ifs (nzcv == 0) goto 26 <sydf_ioctl_api+0x2C : 107566 >
  10754c:    f8 87       	r0 = -1 
  10754e:    a9 98       	cmp r1, 21
  107550:    14 11       	ifs (nzcv != 0) goto 40 <sydf_ioctl_api+0x40 : 10757a >
  107552:    74 21       	if (r4 == 0) goto 46 <sydf_ioctl_api+0x48 : 107582 >
  107554:    95 21       	if (r5 == 0) goto 50 <sydf_ioctl_api+0x4E : 107588 >
  107556:    68 48       	r0 = [r5 + 4] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:476:31
  107558:    60 68       	[r4 + 4] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:476:22
  10755a:    28 48       	r0 = [r5 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:477:32
  10755c:    a0 68       	[r4 + 8] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:477:23
  10755e:    0c 08       	goto 24 <sydf_ioctl_api+0x3E : 107578 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:477:23
  107560:    28 49       	r0 = [r5 + 16] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:451:27
  107562:    20 68       	[r4 + 0] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:451:18
  107564:    09 08       	goto 18 <sydf_ioctl_api+0x3E : 107578 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:451:18
  107566:    80 2a       	r0 = [addr(40)]  <.GCPI120_0 : 107590 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:455:9
  107568:    dd e1 8f d3 	call -279952 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:455:9
  10756c:    74 20       	if (r4 == 0) goto 14 <sydf_ioctl_api+0x42 : 10757c >
  10756e:    a8 48       	r0 = [r5 + 8] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:464:29
  107570:    20 68       	[r4 + 0] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:464:22
  107572:    00 2a       	r0 = [addr(32)]  <.GCPI120_1 : 107594 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:465:13
  107574:    dd e1 2f d3 	call -279964 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:465:13
  107578:    00 80       	r0 = 0 
  10757a:    15 c0       	{pc, r5, r4} = [sp++] 
  10757c:    c0 29       	r0 = [addr(28)]  <.GCPI120_2 : 107598 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:457:13
  10757e:    dd e1 df d2 	call -279974 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydfile.c:457:13
  107582:    10 ea 02 81 	r0 = 33026 
  107586:    15 c0       	{pc, r5, r4} = [sp++] 
  107588:    10 ea 01 80 	r0 = 32769 
  10758c:    15 c0       	{pc, r5, r4} = [sp++] 
  10758e:    00 00       	nop


.GCPI120_0:
  107590:    c4 cf 11 00     < 1167300 : 0x11CFC4 >

.GCPI120_1:
  107594:    fa cf 11 00     < 1167354 : 0x11CFFA >

.GCPI120_2:
  107598:    de cf 11 00     < 1167326 : 0x11CFDE >

wdt_clear:
  10759c:    10 ea 80 00 	r0 = 128 			  ## wdt.c:61:0
  1075a0:    01 82       	r1 = 64 			  ## wdt.c:29:5
  1075a2:    7c fa df 78 	goto -1077478 <p33_or_1byte : 4c0 >			  ## wdt.c:29:5


sydf_file_crc_api:
  1075a6:    19 c2       	[--sp] = {rets, r9-r4} 			  ## sydf_resource.c:177:0
  1075a8:    f0 cd       	sp += -16 			  ## sydf_resource.c:177:0
  1075aa:    60 23       	if (r0 == 0) goto 108 <sydf_file_crc_api+0x72 : 107618 >			  ## sydf_resource.c:177:0
  1075ac:    20 e8 08 06 	r8 = [r0 + 24] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:26:32
  1075b0:    80 ef 80 00 	cmp r8, 0			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:26:9
  1075b4:    33 10       	ifs (nzcv == 0) goto 102 <sydf_file_crc_api+0x76 : 10761c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:26:9
  1075b6:    44 48       	r4 = [r0 + 4] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:34:23
  1075b8:    20 e8 81 03 	r1 = [r8 + 12] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:35:30
  1075bc:    11 23       	if (r1 == 0) goto 98 <sydf_file_crc_api+0x7A : 107620 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:35:30
  1075be:    05 48       	r5 = [r0 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:45:52
  1075c0:    47 49       	r7 = [r0 + 20] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:45:32
  1075c2:    dd e1 ff ca 	call -280226 <local_irq_disable : c2f24 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:47:9
  1075c6:    ce 29       	r6 = [addr(156)]  <.GCPI123_4 : 107664 >
  1075c8:    00 80       	r0 = 0 
  1075ca:    30 68       	[r6 + 0] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:48:21
  1075cc:    ed d5       	r5 = r5 + r7 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:45:43
  1075ce:    00 ed f9 00 	r9 = sp + 0 
  1075d2:    1c 08       	goto 56 <sydf_file_crc_api+0x66 : 10760c >
  1075d4:    e3 04       	call -58 <wdt_clear : 10759c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:50:13
  1075d6:    84 98       	cmp r4, 16			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:51:19
  1075d8:    27 c6       	r7 = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:51:19
  1075da:    20 03       	if (nzcv >= 0) {			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:51:19
  1075dc:    87 80       		r7 = 16 
                               	}			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:51:19
  1075de:    20 e8 80 03 	r0 = [r8 + 12] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:52:39
  1075e2:    89 c6       	r1 = r9 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:52:20
  1075e4:    2a c6       	r2 = r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:52:20
  1075e6:    3b c6       	r3 = r7 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:52:20
  1075e8:    ff e1 8f 46 	call -5936 <dev_byte_read : 105ebc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:52:20
  1075ec:    38 ce       	cmp r7, r0			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:53:17
  1075ee:    27 11       	ifs (nzcv != 0) goto 78 <sydf_file_crc_api+0x98 : 10763e >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:53:17
  1075f0:    e0 da       	r0 = ~r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:44:24
  1075f2:    78 9f       	cmp r0, -17			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:44:24
  1075f4:    90 03       	if (nzcv <= 0) {			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:44:24
  1075f6:    78 87       		r0 = -17 
                               	}			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:44:24
  1075f8:    40 d0       	r0 = r0 + 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:44:24
  1075fa:    89 c6       	r1 = r9 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:44:24
  1075fc:    04 08       	goto 8 <sydf_file_crc_api+0x60 : 107606 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:44:24
  1075fe:    08 e8 12 40 	r2 = b[r1 ++= 1] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:62:32
  107602:    f2 6f       	[r6 + -4] = r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:62:30
  107604:    40 d0       	r0 = r0 + 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:61:13
  107606:    b8 27       	if (r0 != 0) goto -10 <sydf_file_crc_api+0x58 : 1075fe >
  107608:    ed d5       	r5 = r5 + r7 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:65:27
  10760a:    e4 d7       	r4 = r4 - r7 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:64:22
  10760c:    3c 26       	if (r4 != 0) goto -58 <sydf_file_crc_api+0x2E : 1075d4 >
  10760e:    08 00       	csync			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:67:9
  107610:    34 48       	r4 = [r6 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:68:26
  107612:    dd e1 5f c8 	call -280310 <local_irq_enable : c2f20 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:69:9
  107616:    0e 08       	goto 28 <sydf_file_crc_api+0x8E : 107634 >
  107618:    80 2c       	r0 = [addr(72)]  <.GCPI123_3 : 107660 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:23:9
  10761a:    15 08       	goto 42 <sydf_file_crc_api+0xA0 : 107646 >
  10761c:    00 2c       	r0 = [addr(64)]  <.GCPI123_2 : 10765c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:27:9
  10761e:    13 08       	goto 38 <sydf_file_crc_api+0xA0 : 107646 >
  107620:    41 49       	r1 = [r0 + 20] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:37:32
  107622:    00 48       	r0 = [r0 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:37:52
  107624:    40 d4       	r0 = r0 + r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:37:43
  107626:    20 e8 81 01 	r1 = [r8 + 4] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:37:64
  10762a:    40 d4       	r0 = r0 + r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:37:57
  10762c:    21 c6       	r1 = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:40:18
  10762e:    ff e1 6f 45 	call -5972 <CRC16 : 105ede >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:40:18
  107632:    04 c6       	r4 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:40:18
  107634:    40 2a       	r0 = [addr(36)]  <.GCPI123_1 : 107658 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:72:5
  107636:    21 c6       	r1 = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:72:5
  107638:    dd e1 0f cd 	call -280160 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:72:5
  10763c:    07 08       	goto 14 <sydf_file_crc_api+0xA6 : 10764c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:72:5
  10763e:    08 00       	csync			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:54:17
  107640:    dd e1 ef c6 	call -280356 <local_irq_enable : c2f20 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:55:17
  107644:    00 29       	r0 = [addr(16)]  <.GCPI123_0 : 107654 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/sydf/sydf_ex.c:56:17
  107646:    dd e1 9f cc 	call -280174 <xprintf : c2fdc >
  10764a:    04 80       	r4 = 0 
  10764c:    20 c6       	r0 = r4 			  ## sydf_resource.c:178:5
  10764e:    10 cd       	sp += 16 			  ## sydf_resource.c:178:5
  107650:    19 c0       	{pc, r9-r4} = [sp++] 			  ## sydf_resource.c:178:5
  107652:    00 00       	nop			  ## sydf_resource.c:178:5


.GCPI123_0:
  107654:    5c d0 11 00     < 1167452 : 0x11D05C >

.GCPI123_1:
  107658:    79 d0 11 00     < 1167481 : 0x11D079 >

.GCPI123_2:
  10765c:    37 d0 11 00     < 1167415 : 0x11D037 >

.GCPI123_3:
  107660:    16 d0 11 00     < 1167382 : 0x11D016 >

.GCPI123_4:
  107664:    04 3c 09 00     < 605188 : 0x93C04 >

adc_sample:
  107668:    15 c2       	[--sp] = {rets, r5, r4} 			  ## adc_drv.c:230:0
  10766a:    04 c6       	r4 = r0 			  ## adc_drv.c:230:0
  10766c:    c0 2f       	r0 = [addr(124)]  <.GCPI125_0 : 1076e8 >			  ## adc_drv.c:232:19
  10766e:    44 78       	b[r0 + 4] = r4 			  ## adc_drv.c:232:19
  107670:    21 a8       	r1 = r4 << 8 			  ## adc_drv.c:236:35
  107672:    12 ea 68 f0 	r2 = 61544 			  ## adc_drv.c:236:17
  107676:    0a da       	r2 |= r1 			  ## adc_drv.c:236:17
  107678:    11 ea 68 ff 	r1 = 65384 			  ## adc_drv.c:236:17
  10767c:    74 98       	cmp r4, 14			  ## adc_drv.c:236:17
  10767e:    90 03       	if (nzcv <= 0) {			  ## adc_drv.c:236:17
  107680:    11 c6       		r1 = r2 
                               	}			  ## adc_drv.c:236:17
  107682:    40 5a       	r0 = b[r0 + 5] 			  ## adc_drv.c:234:17
  107684:    00 f0 15 00 	r5 = r1 | r0 			  ## adc_drv.c:237:41
  107688:    7c 98       	cmp r4, 15			  ## adc_drv.c:239:9
  10768a:    26 13       	if (nzcv < 0) goto 76 <adc_sample+0x70 : 1076d8 >			  ## adc_drv.c:239:9
  10768c:    20 80       	r0 = 4 			  ## adc_drv.c:219:5
  10768e:    01 80       	r1 = 0 			  ## adc_drv.c:219:5
  107690:    0a 80       	r2 = 1 			  ## adc_drv.c:219:5
  107692:    03 80       	r3 = 0 			  ## adc_drv.c:219:5
  107694:    7c e1 0f 72 	call -1077696 <P33_CON_SET : 4d8 >			  ## adc_drv.c:219:5
  107698:    8c 8f       	r4 += -15 			  ## adc_drv.c:240:31
  10769a:    23 c9       	r3 = r4.b 			  ## adc_drv.c:213:5
  10769c:    20 80       	r0 = 4 			  ## adc_drv.c:213:5
  10769e:    09 80       	r1 = 1 			  ## adc_drv.c:213:5
  1076a0:    1a 80       	r2 = 3 			  ## adc_drv.c:213:5
  1076a2:    7c e1 9f 71 	call -1077710 <P33_CON_SET : 4d8 >			  ## adc_drv.c:213:5
  1076a6:    20 80       	r0 = 4 			  ## adc_drv.c:221:5
  1076a8:    21 80       	r1 = 4 			  ## adc_drv.c:221:5
  1076aa:    1a 80       	r2 = 3 			  ## adc_drv.c:221:5
  1076ac:    03 80       	r3 = 0 			  ## adc_drv.c:221:5
  1076ae:    7c e1 3f 71 	call -1077722 <P33_CON_SET : 4d8 >			  ## adc_drv.c:221:5
  1076b2:    cc 20       	if (r4 != 0) goto 24 <adc_sample+0x64 : 1076cc >			  ## adc_drv.c:221:5
  1076b4:    20 80       	r0 = 4 			  ## adc_drv.c:223:9
  1076b6:    21 80       	r1 = 4 			  ## adc_drv.c:223:9
  1076b8:    0a 80       	r2 = 1 			  ## adc_drv.c:223:9
  1076ba:    0b 80       	r3 = 1 			  ## adc_drv.c:223:9
  1076bc:    7c e1 cf 70 	call -1077736 <P33_CON_SET : 4d8 >			  ## adc_drv.c:223:9
  1076c0:    20 80       	r0 = 4 			  ## adc_drv.c:224:9
  1076c2:    29 80       	r1 = 5 			  ## adc_drv.c:224:9
  1076c4:    0a 80       	r2 = 1 			  ## adc_drv.c:224:9
  1076c6:    0b 80       	r3 = 1 			  ## adc_drv.c:224:9
  1076c8:    7c e1 6f 70 	call -1077748 <P33_CON_SET : 4d8 >			  ## adc_drv.c:224:9
  1076cc:    20 80       	r0 = 4 			  ## adc_drv.c:226:5
  1076ce:    01 80       	r1 = 0 			  ## adc_drv.c:226:5
  1076d0:    0a 80       	r2 = 1 			  ## adc_drv.c:226:5
  1076d2:    0b 80       	r3 = 1 			  ## adc_drv.c:226:5
  1076d4:    7c e1 0f 70 	call -1077760 <P33_CON_SET : 4d8 >			  ## adc_drv.c:226:5
  1076d8:    40 29       	r0 = [addr(20)]  <.GCPI125_1 : 1076ec >
  1076da:    05 68       	[r0 + 0] = r5 			  ## adc_drv.c:243:19
  1076dc:    00 e2 00 10 	[r0 + 0] |= 16 			  ## adc_drv.c:244:19
  1076e0:    00 e2 00 40 	[r0 + 0] |= 64 			  ## adc_drv.c:245:19
  1076e4:    15 c0       	{pc, r5, r4} = [sp++] 			  ## adc_drv.c:245:19
  1076e6:    00 00       	nop			  ## adc_drv.c:245:19


.GCPI125_0:
  1076e8:    60 1c 00 00     < 7264 : 0x1C60 >

.GCPI125_1:
  1076ec:    40 14 09 00     < 595008 : 0x91440 >

adc_kick_start:
  1076f0:    15 c2       	[--sp] = {rets, r5, r4} 			  ## adc_drv.c:281:0
  1076f2:    04 c6       	r4 = r0 			  ## adc_drv.c:281:0
  1076f4:    05 2d       	r5 = [addr(80)]  <.GCPI126_0 : 107744 >			  ## adc_drv.c:281:0
  1076f6:    00 e8 50 0a 	r0 = b[r5 + 40] 			  ## adc_drv.c:281:0
  1076fa:    08 98       	cmp r0, 1			  ## adc_drv.c:282:9
  1076fc:    22 11       	ifs (nzcv != 0) goto 68 <adc_kick_start+0x52 : 107742 >			  ## adc_drv.c:282:9
  1076fe:    dd e1 1f c1 	call -280542 <local_irq_disable : c2f24 >			  ## adc_drv.c:285:5
  107702:    68 5c       	r0 = b[r5 + 6] 			  ## adc_drv.c:286:9
  107704:    c8 21       	if (r0 != 0) goto 56 <adc_kick_start+0x4E : 10773e >			  ## adc_drv.c:286:9
  107706:    08 80       	r0 = 1 			  ## adc_drv.c:290:20
  107708:    68 7c       	b[r5 + 6] = r0 			  ## adc_drv.c:290:20
  10770a:    00 80       	r0 = 0 			  ## adc_drv.c:290:20
  10770c:    c1 2b       	r1 = [addr(60)]  <.GCPI126_1 : 107748 >
  10770e:    02 80       	r2 = 0 
  107710:    09 08       	goto 18 <adc_kick_start+0x34 : 107724 >
  107712:    0b 58       	r3 = b[r1 + 0] 			  ## adc_drv.c:199:25
  107714:    db d3       	r3 = r3 + -1 			  ## adc_drv.c:199:13
  107716:    1b c9       	r3 = r3.b 			  ## adc_drv.c:199:13
  107718:    80 ef 30 bf 	cmp r3, 191			  ## adc_drv.c:199:13
  10771c:    06 13       	if (nzcv < 0) goto 12 <adc_kick_start+0x3A : 10772a >			  ## adc_drv.c:199:13
  10771e:    09 d1       	r1 = r1 + 4 			  ## adc_drv.c:198:5
  107720:    c0 d3       	r0 = r0 + -1 			  ## adc_drv.c:198:5
  107722:    52 d0       	r2 = r2 + 1 			  ## adc_drv.c:198:33
  107724:    aa 98       	cmp r2, 21			  ## adc_drv.c:198:5
  107726:    f5 1d       	ifs (nzcv <= 0) goto -22 <adc_kick_start+0x22 : 107712 >			  ## adc_drv.c:198:5
  107728:    03 08       	goto 6 <adc_kick_start+0x40 : 107730 >			  ## adc_drv.c:198:5
  10772a:    01 c9       	r1 = r0.b 			  ## adc_drv.c:293:12
  10772c:    09 98       	cmp r1, 1			  ## adc_drv.c:293:9
  10772e:    03 11       	ifs (nzcv != 0) goto 6 <adc_kick_start+0x46 : 107736 >			  ## adc_drv.c:293:9
  107730:    00 80       	r0 = 0 			  ## adc_drv.c:294:24
  107732:    68 7c       	b[r5 + 6] = r0 			  ## adc_drv.c:294:24
  107734:    04 08       	goto 8 <adc_kick_start+0x4E : 10773e >			  ## adc_drv.c:294:24
  107736:    80 dc       	r0 = -r0 			  ## adc_drv.c:293:12
  107738:    ec 6a       	[r5 + 44] = r4 			  ## adc_drv.c:299:22
  10773a:    00 c9       	r0 = r0.b 			  ## adc_drv.c:300:5
  10773c:    95 04       	call -214 <adc_sample : 107668 >			  ## adc_drv.c:300:5
  10773e:    dd e1 ff be 	call -280610 <local_irq_enable : c2f20 >
  107742:    15 c0       	{pc, r5, r4} = [sp++] 


.GCPI126_0:
  107744:    60 1c 00 00     < 7264 : 0x1C60 >

.GCPI126_1:
  107748:    50 1f 00 00     < 8016 : 0x1F50 >

adc_get_value:
  10774c:    01 c6       	r1 = r0 			  ## adc_drv.c:153:0
  10774e:    10 ea ff ff 	r0 = 65535 			  ## adc_drv.c:153:0
  107752:    b1 98       	cmp r1, 22			  ## adc_drv.c:154:9
  107754:    0e 18       	if (nzcv > 0) goto 28 <adc_get_value+0x26 : 107772 >			  ## adc_drv.c:154:9
  107756:    c2 29       	r2 = [addr(28)]  <.GCPI127_0 : 107774 >
  107758:    00 e8 22 0a 	r2 = b[r2 + 40] 
  10775c:    02 d9       	r2 ^= 1			  ## adc_drv.c:154:9
  10775e:    00 f4 20 01 	tst r2, 1			  ## adc_drv.c:154:9
  107762:    07 11       	ifs (nzcv != 0) goto 14 <adc_get_value+0x26 : 107772 >			  ## adc_drv.c:154:9
  107764:    09 a2       	r1 = r1 << 2 			  ## adc_drv.c:161:22
  107766:    02 29       	r2 = [addr(16)]  <.GCPI127_1 : 107778 >			  ## adc_drv.c:161:22
  107768:    00 e7 23 01 	r3 = b[r2 + r1] 			  ## adc_drv.c:161:22
  10776c:    23 20       	if (r3 == 0) goto 4 <adc_get_value+0x26 : 107772 >			  ## adc_drv.c:161:22
  10776e:    50 d4       	r0 = r2 + r1 			  ## adc_drv.c:162:29
  107770:    00 54       	r0 = h[r0 + 2] 			  ## adc_drv.c:162:29
  107772:    20 00       	rts			  ## adc_drv.c:166:1


.GCPI127_0:
  107774:    60 1c 00 00     < 7264 : 0x1C60 >

.GCPI127_1:
  107778:    50 1f 00 00     < 8016 : 0x1F50 >

adc_get_voltage:
  10777c:    14 c2       	[--sp] = {rets, r4} 			  ## adc_drv.c:374:0
  10777e:    78 80       	r0 = 15 			  ## adc_drv.c:376:19
  107780:    e5 04       	call -54 <adc_get_value : 10774c >			  ## adc_drv.c:376:19
  107782:    04 c6       	r4 = r0 			  ## adc_drv.c:376:19
  107784:    34 21       	if (r4 == 0) goto 38 <adc_get_voltage+0x30 : 1077ac >			  ## adc_drv.c:376:19
  107786:    a8 80       	r0 = 21 			  ## adc_drv.c:375:20
  107788:    e1 04       	call -62 <adc_get_value : 10774c >			  ## adc_drv.c:375:20
  10778a:    41 2a       	r1 = [addr(36)]  <.GCPI128_0 : 1077b0 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/efuse.c:42:22
  10778c:    cb 55       	r3 = h[r1 + 30] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/efuse.c:42:22
  10778e:    80 f3 31 0f 	r1 = r3 & 15 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/efuse.c:42:22
  107792:    00 fc 11 03 	r1 = r1 * 3 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/efuse.c:42:22
  107796:    8a dc       	r2 = -r1 			  ## adc_drv.c:364:9
  107798:    00 f4 30 10 	tst r3, 16			  ## adc_drv.c:364:9
  10779c:    10 03       	ifs (nzcv != 0) {			  ## adc_drv.c:364:9
  10779e:    11 c6       		r1 = r2 
                               	}			  ## adc_drv.c:364:9
  1077a0:    03 ed 11 20 	r1 = r1 + 800 			  ## adc_drv.c:364:9
  1077a4:    08 06       	r0 *= r1 			  ## adc_drv.c:369:32
  1077a6:    40 fc 00 04 	r0 = r0 / r4 			  ## adc_drv.c:369:43
  1077aa:    14 c0       	{pc, r4} = [sp++] 
  1077ac:    00 80       	r0 = 0 
  1077ae:    14 c0       	{pc, r4} = [sp++] 


.GCPI128_0:
  1077b0:    8c 7e 00 00     < 32396 : 0x7E8C >

app_power_get_vbat:
  1077b4:    1f c2       	[--sp] = {rets} 			  ## app_power_mg.c:51:0
  1077b6:    e2 04       	call -60 <adc_get_voltage : 10777c >			  ## app_power_mg.c:52:12
  1077b8:    00 a2       	r0 = r0 << 2 			  ## app_power_mg.c:52:45
  1077ba:    1f c0       	{pc} = [sp++] 			  ## app_power_mg.c:52:45


app_power_powerup_kick_start:
  1077bc:    1f c2       	[--sp] = {rets} 			  ## app_power_mg.c:27:0
  1077be:    c0 29       	r0 = [addr(28)]  <.GCPI130_0 : 1077dc >			  ## app_power_mg.c:28:31
  1077c0:    01 5e       	r1 = b[r0 + 3] 			  ## app_power_mg.c:28:31
  1077c2:    4a d0       	r2 = r1 + 1 			  ## app_power_mg.c:28:31
  1077c4:    02 7e       	b[r0 + 3] = r2 			  ## app_power_mg.c:28:31
  1077c6:    49 98       	cmp r1, 9			  ## app_power_mg.c:28:9
  1077c8:    92 03       	if (nzcv <= 0) {			  ## app_power_mg.c:29:9
  1077ca:    80 29       		r0 = [addr(24)]  <.GCPI130_2 : 1077e4 >			  ## app_power_mg.c:29:9
  1077cc:    40 c4       		{rets} = [sp++] 			  ## app_power_mg.c:29:9
  1077ce:    90 0f       		goto -224
                               	} <adc_kick_start : 1076f0 >			  ## app_power_mg.c:29:9
  1077d0:    f1 04       	call -30 <app_power_get_vbat : 1077b4 >			  ## app_power_mg.c:32:5
  1077d2:    01 c6       	r1 = r0 			  ## app_power_mg.c:32:5
  1077d4:    c0 28       	r0 = [addr(12)]  <.GCPI130_1 : 1077e0 >			  ## app_power_mg.c:32:5
  1077d6:    40 c4       	{rets} = [sp++] 			  ## app_power_mg.c:32:5
  1077d8:    dd fa 0f c0 	goto -280576 <xprintf : c2fdc >			  ## app_power_mg.c:32:5


.GCPI130_0:
  1077dc:    60 1c 00 00     < 7264 : 0x1C60 >

.GCPI130_1:
  1077e0:    32 ae 11 00     < 1158706 : 0x11AE32 >

.GCPI130_2:
  1077e4:    bc 77 10 00     < 1079228 : 0x1077BC >

echo_run:
  1077e8:    16 c2       	[--sp] = {rets, r6-r4} 			  ## echo_api.c:91:0
  1077ea:    04 c6       	r4 = r0 			  ## echo_api.c:91:0
  1077ec:    00 e5 46 00 	r6, r0 = d[r4 + 0] 			  ## echo_api.c:96:26
  1077f0:    f3 48       	r3 = [r6 + 12] 			  ## echo_api.c:96:16
  1077f2:    ab 01       	call r3			  ## echo_api.c:96:11
  1077f4:    05 c6       	r5 = r0 			  ## echo_api.c:96:11
  1077f6:    81 29       	r1 = [addr(24)]  <.GCPI131_0 : 107810 >			  ## echo_api.c:98:31
  1077f8:    20 e8 10 15 	r0 = [r1 + 84] 			  ## echo_api.c:98:31
  1077fc:    70 20       	if (r0 == 0) goto 14 <echo_run+0x24 : 10780c >			  ## echo_api.c:98:31
  1077fe:    00 80       	r0 = 0 
  107800:    60 e8 10 15 	[r1 + 84] = r0 			  ## echo_api.c:99:26
  107804:    20 48       	r0 = [r4 + 0] 			  ## echo_api.c:100:25
  107806:    b2 48       	r2 = [r6 + 8] 			  ## echo_api.c:100:14
  107808:    61 89       	r1 += 44 			  ## echo_api.c:100:9
  10780a:    aa 01       	call r2			  ## echo_api.c:100:9
  10780c:    28 c6       	r0 = r5 			  ## echo_api.c:102:5
  10780e:    16 c0       	{pc, r6-r4} = [sp++] 			  ## echo_api.c:102:5


.GCPI131_0:
  107810:    10 56 00 00     < 22032 : 0x5610 >

notch_howing_run:
  107814:    16 c2       	[--sp] = {rets, r6-r4} 			  ## notch_howling_api.c:98:0
  107816:    04 c6       	r4 = r0 			  ## notch_howling_api.c:98:0
  107818:    00 e5 46 00 	r6, r0 = d[r4 + 0] 			  ## notch_howling_api.c:108:26
  10781c:    f3 48       	r3 = [r6 + 12] 			  ## notch_howling_api.c:108:16
  10781e:    ab 01       	call r3			  ## notch_howling_api.c:108:11
  107820:    05 c6       	r5 = r0 			  ## notch_howling_api.c:108:11
  107822:    81 29       	r1 = [addr(24)]  <.GCPI132_0 : 10783c >			  ## notch_howling_api.c:110:22
  107824:    20 e8 10 10 	r0 = [r1 + 64] 			  ## notch_howling_api.c:110:22
  107828:    70 20       	if (r0 == 0) goto 14 <notch_howing_run+0x24 : 107838 >
  10782a:    00 80       	r0 = 0 
  10782c:    60 e8 10 10 	[r1 + 64] = r0 			  ## notch_howling_api.c:111:29
  107830:    20 48       	r0 = [r4 + 0] 			  ## notch_howling_api.c:112:27
  107832:    b2 48       	r2 = [r6 + 8] 			  ## notch_howling_api.c:112:14
  107834:    61 89       	r1 += 44 			  ## notch_howling_api.c:112:9
  107836:    aa 01       	call r2			  ## notch_howling_api.c:112:9
  107838:    28 c6       	r0 = r5 			  ## notch_howling_api.c:149:1
  10783a:    16 c0       	{pc, r6-r4} = [sp++] 			  ## notch_howling_api.c:149:1


.GCPI132_0:
  10783c:    b0 34 00 00     < 13488 : 0x34B0 >

speed_run:
  107840:    14 c2       	[--sp] = {rets, r4} 			  ## speed_api.c:55:0
  107842:    03 e5 00 00 	r0, r3 = d[r0 + 0] 			  ## speed_api.c:60:26
  107846:    84 48       	r4 = [r0 + 8] 			  ## speed_api.c:60:16
  107848:    18 c6       	r0 = r3 			  ## speed_api.c:60:11
  10784a:    ac 01       	call r4			  ## speed_api.c:60:11
  10784c:    14 c0       	{pc, r4} = [sp++] 


speaker_soft1_isr:
  10784e:    c1 c5       	[--sp] = {psr, rets, reti} 			  ## speak_api.c:77:0
  107850:    ff e6 3f 00 	[--sp] = {r5-r0} 			  ## speak_api.c:77:0
  107854:    fc cd       	sp += -4 			  ## speak_api.c:77:0
  107856:    08 80       	r0 = 1 			  ## speak_api.c:78:5
  107858:    dd e1 8f b6 	call -280880 <bit_clr_swi : c2f2c >			  ## speak_api.c:78:5
  10785c:    45 2c       	r5 = [addr(68)]  <.GCPI135_0 : 1078a0 >			  ## speak_api.c:85:22
  10785e:    e8 48       	r0 = [r5 + 12] 			  ## speak_api.c:85:22
  107860:    00 f4 00 01 	tst r0, 1			  ## speak_api.c:85:9
  107864:    17 10       	ifs (nzcv == 0) goto 46 <speaker_soft1_isr+0x46 : 107894 >			  ## speak_api.c:85:9
  107866:    e8 48       	r0 = [r5 + 12] 			  ## speak_api.c:89:16
  107868:    0f f4 00 80 	tst r0, 256			  ## speak_api.c:89:9
  10786c:    13 10       	ifs (nzcv == 0) goto 38 <speaker_soft1_isr+0x46 : 107894 >			  ## speak_api.c:89:9
  10786e:    0f e3 53 80 	[r5 + 12] &= (~256) 			  ## speak_api.c:90:23
  107872:    04 80       	r4 = 0 			  ## speak_api.c:90:23
  107874:    04 60       	[sp] = r4 			  ## speak_api.c:91:13
  107876:    28 48       	r0 = [r5 + 0] 			  ## speak_api.c:93:44
  107878:    01 90       	r1 = sp + 0 			  ## speak_api.c:93:44
  10787a:    dd e1 7f b8 	call -280818 <cbuf_read_alloc : c2f8c >			  ## speak_api.c:93:21
  10787e:    01 c6       	r1 = r0 			  ## speak_api.c:93:21
  107880:    02 40       	r2 = [sp] 			  ## speak_api.c:94:13
  107882:    42 20       	if (r2 == 0) goto 8 <speaker_soft1_isr+0x3E : 10788c >
  107884:    c0 29       	r0 = [addr(28)]  <.GCPI135_0 : 1078a0 >			  ## speak_api.c:95:20
  107886:    ff e1 8f 30 	call -6640 <sound_output : 105e9a >			  ## speak_api.c:95:20
  10788a:    04 c6       	r4 = r0 			  ## speak_api.c:95:20
  10788c:    28 48       	r0 = [r5 + 0] 			  ## speak_api.c:97:33
  10788e:    21 c6       	r1 = r4 			  ## speak_api.c:97:9
  107890:    dd e1 ef b7 	call -280836 <cbuf_read_updata : c2f90 >			  ## speak_api.c:97:9
  107894:    04 cd       	sp += 4 
  107896:    8f e6 3f 00 	{r5-r0} = [sp++] 
  10789a:    c1 c4       	{psr, rets, reti} = [sp++] 
  10789c:    30 00       	rti			  ## speak_api.c:99:1
  10789e:    00 00       	nop			  ## speak_api.c:99:1


.GCPI135_0:
  1078a0:    5c 26 00 00     < 9820 : 0x265C >

adc_isr:
  1078a4:    c1 c5       	[--sp] = {psr, rets, reti} 			  ## adc_drv.c:308:0
  1078a6:    ff e6 1f 00 	[--sp] = {r4-r0} 			  ## adc_drv.c:308:0
  1078aa:    42 2e       	r2 = [addr(100)]  <.GCPI136_2 : 107910 >			  ## adc_drv.c:308:0
  1078ac:    f0 e2 2f 40 	[r2 + -4] |= 64 			  ## adc_drv.c:309:19
  1078b0:    f0 e3 2f 10 	[r2 + -4] &= (~16) 			  ## adc_drv.c:49:19
  1078b4:    40 2d       	r0 = [addr(84)]  <.GCPI136_0 : 107908 >			  ## adc_drv.c:313:20
  1078b6:    41 58       	r1 = b[r0 + 4] 			  ## adc_drv.c:313:20
  1078b8:    12 48       	r2 = [r2 + 0] 			  ## adc_drv.c:313:45
  1078ba:    b1 98       	cmp r1, 22			  ## adc_drv.c:170:9
  1078bc:    93 03       	if (nzcv <= 0) {			  ## adc_drv.c:174:18
  1078be:    0b a2       		r3 = r1 << 2 			  ## adc_drv.c:174:18
  1078c0:    c4 2c       		r4 = [addr(76)]  <.GCPI136_1 : 10790c >			  ## adc_drv.c:174:18
  1078c2:    1b d5       		r3 = r3 + r4 			  ## adc_drv.c:174:18
  1078c4:    1a 74       		h[r3 + 2] = r2 
                               	}			  ## adc_drv.c:174:24
  1078c6:    4a d0       	r2 = r1 + 1 			  ## adc_drv.c:174:24
  1078c8:    13 a2       	r3 = r2 << 2 			  ## adc_drv.c:174:24
  1078ca:    04 2c       	r4 = [addr(64)]  <.GCPI136_1 : 10790c >			  ## adc_drv.c:174:24
  1078cc:    1b d5       	r3 = r3 + r4 			  ## adc_drv.c:174:24
  1078ce:    89 dc       	r1 = -r1 			  ## adc_drv.c:174:24
  1078d0:    aa 98       	cmp r2, 21			  ## adc_drv.c:182:5
  1078d2:    0c 1c       	ifs (nzcv > 0) goto 24 <adc_isr+0x48 : 1078ec >			  ## adc_drv.c:182:5
  1078d4:    52 d0       	r2 = r2 + 1 			  ## adc_drv.c:183:13
  1078d6:    c9 d3       	r1 = r1 + -1 			  ## adc_drv.c:183:13
  1078d8:    08 e8 34 01 	r4 = b[r3 ++= 4] 			  ## adc_drv.c:183:25
  1078dc:    e4 d3       	r4 = r4 + -1 			  ## adc_drv.c:183:13
  1078de:    24 c9       	r4 = r4.b 			  ## adc_drv.c:183:13
  1078e0:    80 ef 40 be 	cmp r4, 190			  ## adc_drv.c:183:13
  1078e4:    f5 18       	if (nzcv > 0) goto -22 <adc_isr+0x2C : 1078d0 >			  ## adc_drv.c:183:13
  1078e6:    0a c9       	r2 = r1.b 			  ## adc_drv.c:316:12
  1078e8:    0a 98       	cmp r2, 1			  ## adc_drv.c:316:9
  1078ea:    06 11       	ifs (nzcv != 0) goto 12 <adc_isr+0x54 : 1078f8 >			  ## adc_drv.c:316:9
  1078ec:    01 80       	r1 = 0 
  1078ee:    41 7c       	b[r0 + 6] = r1 			  ## adc_drv.c:318:24
  1078f0:    c0 4a       	r0 = [r0 + 44] 			  ## adc_drv.c:319:13
  1078f2:    60 20       	if (r0 == 0) goto 12 <adc_isr+0x5C : 107900 >			  ## adc_drv.c:319:13
  1078f4:    a8 01       	call r0			  ## adc_drv.c:320:13
  1078f6:    04 08       	goto 8 <adc_isr+0x5C : 107900 >			  ## adc_drv.c:320:13
  1078f8:    88 dc       	r0 = -r1 			  ## adc_drv.c:316:12
  1078fa:    00 c9       	r0 = r0.b 			  ## adc_drv.c:325:5
  1078fc:    ff e1 4f eb 	call -664 <adc_sample : 107668 >			  ## adc_drv.c:325:5
  107900:    8f e6 1f 00 	{r4-r0} = [sp++] 
  107904:    c1 c4       	{psr, rets, reti} = [sp++] 
  107906:    30 00       	rti			  ## adc_drv.c:326:1


.GCPI136_0:
  107908:    60 1c 00 00     < 7264 : 0x1C60 >

.GCPI136_1:
  10790c:    50 1f 00 00     < 8016 : 0x1F50 >

.GCPI136_2:
  107910:    44 14 09 00     < 595012 : 0x91444 >

sleep_exit_callback:
  107914:    f0 81       	r0 = 62 			  ## power_api.c:137:0
  107916:    7c fa 9f a5 	goto -1076046 <putchar : dcc >			  ## power_api.c:138:5


audio_adc_init:
  10791a:    14 c2       	[--sp] = {rets, r4} 			  ## audio_adc.c:112:0
  10791c:    41 2b       	r1 = [addr(52)]  <.GCPI139_0 : 107950 >			  ## audio_adc.c:113:39
  10791e:    20 e8 13 1f 	r3 = [r1 + 124] 			  ## audio_adc.c:113:39
  107922:    13 21       	if (r3 == 0) goto 34 <audio_adc_init+0x2C : 107946 >			  ## audio_adc.c:113:39
  107924:    02 2b       	r2 = [addr(48)]  <.GCPI139_1 : 107954 >
  107926:    53 6f       	[r2 + -12] = r3 			  ## audio_adc.c:117:22
  107928:    13 ea 84 00 	r3 = 132 			  ## audio_adc.c:117:22
  10792c:    00 e7 14 03 	r4 = b[r1 + r3] 			  ## audio_adc.c:117:22
  107930:    03 81       	r3 = 32 			  ## audio_adc.c:118:24
  107932:    01 80       	r1 = 0 			  ## audio_adc.c:118:24
  107934:    1c 20       	if (r4 != 0) goto 2 <audio_adc_init+0x1E : 107938 >			  ## audio_adc.c:118:24
  107936:    03 80       	r3 = 0 			  ## audio_adc.c:118:24
  107938:    93 6f       	[r2 + -8] = r3 			  ## audio_adc.c:118:22
  10793a:    03 82       	r3 = 64 			  ## audio_adc.c:120:22
  10793c:    13 6f       	[r2 + -16] = r3 			  ## audio_adc.c:120:22
  10793e:    0a e2 23 80 	[r2 + 12] |= 262144 			  ## audio_adc.c:121:23
  107942:    10 6f       	[r2 + -16] = r0 			  ## audio_adc.c:122:22
  107944:    02 08       	goto 4 <audio_adc_init+0x30 : 10794a >			  ## audio_adc.c:122:22
  107946:    11 ea 03 a0 	r1 = 40963 
  10794a:    08 c6       	r0 = r1 			  ## audio_adc.c:125:1
  10794c:    14 c0       	{pc, r4} = [sp++] 
  10794e:    00 00       	nop


.GCPI139_0:
  107950:    60 1c 00 00     < 7264 : 0x1C60 >

.GCPI139_1:
  107954:    2c 14 09 00     < 594988 : 0x9142C >

audio_adc_off_api:
  107958:    1f c2       	[--sp] = {rets} 			  ## adc_api.c:60:0
  10795a:    00 80       	r0 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_adc.c:219:5
  10795c:    de 04       	call -68 <audio_adc_init : 10791a >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_adc.c:219:5
  10795e:    00 2a       	r0 = [addr(32)]  <.GCPI140_0 : 107980 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_adc.c:219:5
  107960:    fe e3 0f 00 	[r0 + -4] &= (~2048) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:198:5
  107964:    f0 e3 0f 40 	[r0 + -4] &= (~64) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:199:5
  107968:    f0 e3 0f 20 	[r0 + -4] &= (~32) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:200:5
  10796c:    0a e3 00 80 	[r0 + 0] &= (~262144) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:201:5
  107970:    04 e3 00 80 	[r0 + 0] &= (~1073741824) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:202:5
  107974:    07 e3 01 80 	[r0 + 4] &= (~16777216) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:203:5
  107978:    0e e3 01 00 	[r0 + 4] &= (~2048) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:204:5
  10797c:    1f c0       	{pc} = [sp++] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:204:5
  10797e:    00 00       	nop			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:204:5


.GCPI140_0:
  107980:    38 14 09 00     < 595000 : 0x91438 >

dac_power_off:
  107984:    14 c2       	[--sp] = {rets, r4} 			  ## audio.c:68:0
  107986:    00 2c       	r0 = [addr(64)]  <.GCPI141_0 : 1079c8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:242:5
  107988:    10 e3 09 02 	[r0 + 100] &= (~2) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:242:5
  10798c:    04 2c       	r4 = [addr(64)]  <.GCPI141_1 : 1079cc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:242:5
  10798e:    00 e3 46 01 	[r4 + 24] &= (~1) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:243:5
  107992:    00 e3 45 1f 	[r4 + 20] &= (~31) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:244:5
  107996:    61 49       	r1 = [r4 + 20] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:245:5
  107998:    82 2b       	r2 = [addr(56)]  <.GCPI141_2 : 1079d0 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:245:5
  10799a:    91 da       	r1 &= r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:245:5
  10799c:    61 69       	[r4 + 20] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:245:5
  10799e:    61 49       	r1 = [r4 + 20] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:246:5
  1079a0:    42 2b       	r2 = [addr(52)]  <.GCPI141_3 : 1079d4 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:246:5
  1079a2:    91 da       	r1 &= r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:246:5
  1079a4:    61 69       	[r4 + 20] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:246:5
  1079a6:    10 e3 09 01 	[r0 + 100] &= (~1) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:190:5
  1079aa:    a0 49       	r0 = [r4 + 24] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:194:5
  1079ac:    80 f3 00 03 	r0 = r0 & 3 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:194:5
  1079b0:    a0 69       	[r4 + 24] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:194:5
  1079b2:    00 80       	r0 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:194:5
  1079b4:    a0 6e       	[r4 + -24] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_dac.c:128:23
  1079b6:    e0 6e       	[r4 + -20] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_dac.c:129:23
  1079b8:    cf 04       	call -98 <audio_adc_off_api : 107958 >			  ## audio.c:56:5
  1079ba:    0a e3 45 80 	[r4 + 20] &= (~262144) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:34:5
  1079be:    00 e3 45 40 	[r4 + 20] &= (~64) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:35:5
  1079c2:    00 e3 45 20 	[r4 + 20] &= (~32) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:36:5
  1079c6:    14 c0       	{pc, r4} = [sp++] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:36:5


.GCPI141_0:
  1079c8:    60 1c 00 00     < 7264 : 0x1C60 >

.GCPI141_1:
  1079cc:    18 14 09 00     < 594968 : 0x91418 >

.GCPI141_2:
  1079d0:    7f 00 fc ff     < 4294705279 : 0xFFFC007F >

.GCPI141_3:
  1079d4:    ff ff 0f 00     < 1048575 : 0xFFFFF >

close_gpio:
  1079d8:    14 c2       	[--sp] = {rets, r4} 			  ## port_init.c:116:0
  1079da:    e0 20       	if (r0 == 0) goto 28 <close_gpio+0x20 : 1079f8 >			  ## port_init.c:116:0
  1079dc:    88 80       	r0 = 17 			  ## p33.h:323:11
  1079de:    7c e1 bf 58 	call -1078506 <p33_rx_1byte : 4f8 >			  ## p33.h:323:11
  1079e2:    04 c6       	r4 = r0 			  ## p33.h:323:11
  1079e4:    88 81       	r0 = 49 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:992:5
  1079e6:    01 82       	r1 = 64 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:992:5
  1079e8:    7c e1 af 56 	call -1078572 <p33_or_1byte : 4c0 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:992:5
  1079ec:    20 a1       	r0 = r4 << 1 			  ## port_init.c:106:43
  1079ee:    80 f3 01 02 	r1 = r0 & 2 			  ## port_init.c:106:43
  1079f2:    90 81       	r0 = 50 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:994:5
  1079f4:    7c e1 cf 58 	call -1078504 <p33_tx_1byte : 510 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:994:5
  1079f8:    7c e1 6f 59 	call -1078484 <spi_get_port : 528 >			  ## port_init.c:131:9
  1079fc:    c9 2b       	r1 = [addr(188)]  <.GCPI145_0 : 107ab8 >			  ## port_init.c:131:9
  1079fe:    0a 4d       	r2 = [r1 + -48] 			  ## port_init.c:140:19
  107a00:    13 ea fe ff 	r3 = 65534 			  ## port_init.c:140:19
  107a04:    1a da       	r2 |= r3 			  ## port_init.c:140:19
  107a06:    0a 6d       	[r1 + -48] = r2 			  ## port_init.c:140:19
  107a08:    8a 4d       	r2 = [r1 + -40] 			  ## port_init.c:141:18
  107a0a:    0b 2b       	r3 = [addr(176)]  <.GCPI145_1 : 107abc >			  ## port_init.c:141:18
  107a0c:    9a da       	r2 &= r3 			  ## port_init.c:141:18
  107a0e:    8a 6d       	[r1 + -40] = r2 			  ## port_init.c:141:18
  107a10:    ca 4d       	r2 = [r1 + -36] 			  ## port_init.c:142:18
  107a12:    9a da       	r2 &= r3 			  ## port_init.c:142:18
  107a14:    ca 6d       	[r1 + -36] = r2 			  ## port_init.c:142:18
  107a16:    4a 4d       	r2 = [r1 + -44] 			  ## port_init.c:143:19
  107a18:    9a da       	r2 &= r3 			  ## port_init.c:143:19
  107a1a:    4a 6d       	[r1 + -44] = r2 			  ## port_init.c:143:19
  107a1c:    8a 4e       	r2 = [r1 + -24] 			  ## port_init.c:144:20
  107a1e:    9a da       	r2 &= r3 			  ## port_init.c:144:20
  107a20:    8a 6e       	[r1 + -24] = r2 			  ## port_init.c:144:20
  107a22:    4a 4f       	r2 = [r1 + -12] 			  ## port_init.c:146:19
  107a24:    13 ea ff ff 	r3 = 65535 			  ## port_init.c:146:19
  107a28:    1a da       	r2 |= r3 			  ## port_init.c:146:19
  107a2a:    4a 6f       	[r1 + -12] = r2 			  ## port_init.c:146:19
  107a2c:    ca 4f       	r2 = [r1 + -4] 			  ## port_init.c:147:18
  107a2e:    0b 29       	r3 = [addr(144)]  <.GCPI145_2 : 107ac0 >			  ## port_init.c:147:18
  107a30:    9a da       	r2 &= r3 			  ## port_init.c:147:18
  107a32:    ca 6f       	[r1 + -4] = r2 			  ## port_init.c:147:18
  107a34:    0a 48       	r2 = [r1 + 0] 			  ## port_init.c:148:18
  107a36:    9a da       	r2 &= r3 			  ## port_init.c:148:18
  107a38:    0a 68       	[r1 + 0] = r2 			  ## port_init.c:148:18
  107a3a:    8a 4f       	r2 = [r1 + -8] 			  ## port_init.c:149:19
  107a3c:    9a da       	r2 &= r3 			  ## port_init.c:149:19
  107a3e:    8a 6f       	[r1 + -8] = r2 			  ## port_init.c:149:19
  107a40:    ca 48       	r2 = [r1 + 12] 			  ## port_init.c:150:20
  107a42:    9a da       	r2 &= r3 			  ## port_init.c:150:20
  107a44:    ca 68       	[r1 + 12] = r2 			  ## port_init.c:150:20
  107a46:    02 80       	r2 = 0 			  ## port_init.c:150:20
  107a48:    00 98       	cmp r0, 0			  ## port_init.c:131:9
  107a4a:    00 80       	r0 = 0 			  ## port_init.c:131:9
  107a4c:    01 10       	ifs (nzcv == 0) goto 2 <close_gpio+0x78 : 107a50 >			  ## port_init.c:131:9
  107a4e:    f8 80       	r0 = 31 			  ## port_init.c:131:9
  107a50:    8b 49       	r3 = [r1 + 24] 			  ## port_init.c:152:19
  107a52:    03 da       	r3 |= r0 			  ## port_init.c:152:19
  107a54:    8b 69       	[r1 + 24] = r3 			  ## port_init.c:152:19
  107a56:    0b 4a       	r3 = [r1 + 32] 			  ## port_init.c:153:18
  107a58:    c0 f0 33 00 	r3 = r3 & ~r0 			  ## port_init.c:153:18
  107a5c:    0b 6a       	[r1 + 32] = r3 			  ## port_init.c:153:18
  107a5e:    4b 4a       	r3 = [r1 + 36] 			  ## port_init.c:154:18
  107a60:    c0 f0 33 00 	r3 = r3 & ~r0 			  ## port_init.c:154:18
  107a64:    4b 6a       	[r1 + 36] = r3 			  ## port_init.c:154:18
  107a66:    cb 49       	r3 = [r1 + 28] 			  ## port_init.c:155:19
  107a68:    c0 f0 33 00 	r3 = r3 & ~r0 			  ## port_init.c:155:19
  107a6c:    cb 69       	[r1 + 28] = r3 			  ## port_init.c:155:19
  107a6e:    0b 4b       	r3 = [r1 + 48] 			  ## port_init.c:156:20
  107a70:    c0 f0 30 00 	r0 = r3 & ~r0 			  ## port_init.c:156:20
  107a74:    08 6b       	[r1 + 48] = r0 			  ## port_init.c:156:20
  107a76:    c0 2c       	r0 = [addr(76)]  <.GCPI145_3 : 107ac4 >			  ## port_init.c:156:20
  107a78:    02 68       	[r0 + 0] = r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/gpio.c:138:22
  107a7a:    c1 2c       	r1 = [addr(76)]  <.GCPI145_4 : 107ac8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/gpio.c:138:22
  107a7c:    0e e2 10 10 	[r1 + 0] |= 2304 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/gpio.c:138:22
  107a80:    00 e3 10 40 	[r1 + 0] &= (~64) 
  107a84:    00 e3 10 10 	[r1 + 0] &= (~16) 
  107a88:    02 68       	[r0 + 0] = r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/gpio.c:138:22
  107a8a:    0e e2 10 10 	[r1 + 0] |= 2304 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/gpio.c:138:22
  107a8e:    00 e2 10 04 	[r1 + 0] |= 4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/gpio.c:138:22
  107a92:    0f e3 10 00 	[r1 + 0] &= (~512) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/gpio.c:138:22
  107a96:    0d e3 10 00 	[r1 + 0] &= (~8192) 
  107a9a:    00 e3 10 80 	[r1 + 0] &= (~128) 
  107a9e:    00 e3 10 20 	[r1 + 0] &= (~32) 
  107aa2:    02 68       	[r0 + 0] = r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/gpio.c:138:22
  107aa4:    0e e2 10 10 	[r1 + 0] |= 2304 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/gpio.c:138:22
  107aa8:    00 e2 10 08 	[r1 + 0] |= 8 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/gpio.c:138:22
  107aac:    0e e3 10 80 	[r1 + 0] &= (~1024) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/gpio.c:138:22
  107ab0:    0c e3 10 80 	[r1 + 0] &= (~16384) 
  107ab4:    14 c0       	{pc, r4} = [sp++] 
  107ab6:    00 00       	nop


.GCPI145_0:
  107ab8:    38 00 09 00     < 589880 : 0x90038 >

.GCPI145_1:
  107abc:    01 00 ff ff     < 4294901761 : 0xFFFF0001 >

.GCPI145_2:
  107ac0:    00 00 ff ff     < 4294901760 : 0xFFFF0000 >

.GCPI145_3:
  107ac4:    00 24 09 00     < 599040 : 0x92400 >

.GCPI145_4:
  107ac8:    90 00 09 00     < 589968 : 0x90090 >

sleep_enter_callback:
  107acc:    1f c2       	[--sp] = {rets} 			  ## power_api.c:142:0
  107ace:    08 98       	cmp r0, 1			  ## power_api.c:144:9
  107ad0:    12 03       	ifs (nzcv != 0) {			  ## power_api.c:149:9
  107ad2:    00 80       		r0 = 0 			  ## power_api.c:149:9
  107ad4:    40 c4       		{rets} = [sp++] 			  ## power_api.c:149:9
  107ad6:    80 0f       		goto -256
                               	} <close_gpio : 1079d8 >			  ## power_api.c:149:9
  107ad8:    e0 81       	r0 = 60 			  ## power_api.c:145:9
  107ada:    7c e1 7f 97 	call -1076498 <putchar : dcc >			  ## power_api.c:145:9
  107ade:    ff e1 1f f5 	call -350 <dac_power_off : 107984 >			  ## power_api.c:146:9
  107ae2:    80 28       	r0 = [addr(8)]  <.GCPI146_0 : 107aec >			  ## power_api.c:146:9
  107ae4:    09 80       	r1 = 1 			  ## power_api.c:146:9
  107ae6:    40 e8 01 0e 	b[r0 + 56] = r1 			  ## power_api.c:146:9
  107aea:    1f c0       	{pc} = [sp++] 			  ## power_api.c:146:9


.GCPI146_0:
  107aec:    60 1c 00 00     < 7264 : 0x1C60 >

board_set_soft_poweroff:
  107af0:    1f c2       	[--sp] = {rets} 			  ## power_api.c:155:0
  107af2:    08 80       	r0 = 1 			  ## power_api.c:156:5
  107af4:    ff e1 0f f7 	call -288 <close_gpio : 1079d8 >			  ## power_api.c:156:5
  107af8:    40 c4       	{rets} = [sp++] 			  ## power_api.c:158:5
  107afa:    44 0f       	goto -376 <dac_power_off : 107984 >			  ## power_api.c:158:5


__power_get_timeout:
  107afc:    80 28       	r0 = [addr(8)]  <.GCPI148_0 : 107b04 >			  ## power_api.c:295:0
  107afe:    00 48       	r0 = [r0 + 0] 			  ## power_api.c:297:12
  107b00:    20 00       	rts			  ## power_api.c:297:5
  107b02:    00 00       	nop			  ## power_api.c:297:5


.GCPI148_0:
  107b04:    10 00 00 00     < 16 : 0x10 >

__power_suspend_post:
  107b08:    80 28       	r0 = [addr(8)]  <.GCPI149_0 : 107b10 >			  ## power_api.c:301:0
  107b0a:    09 80       	r1 = 1 			  ## power_api.c:302:27
  107b0c:    41 7e       	b[r0 + 7] = r1 			  ## power_api.c:302:27
  107b0e:    20 00       	rts			  ## power_api.c:303:1


.GCPI149_0:
  107b10:    60 1c 00 00     < 7264 : 0x1C60 >

__power_resume:
  107b14:    80 28       	r0 = [addr(8)]  <.GCPI150_0 : 107b1c >			  ## power_api.c:306:0
  107b16:    01 80       	r1 = 0 			  ## power_api.c:307:27
  107b18:    41 7e       	b[r0 + 7] = r1 			  ## power_api.c:307:27
  107b1a:    20 00       	rts			  ## power_api.c:308:1


.GCPI150_0:
  107b1c:    60 1c 00 00     < 7264 : 0x1C60 >

lsb_clk_get:
  107b20:    80 29       	r0 = [addr(24)]  <.GCPI156_1 : 107b38 >			  ## clock.c:213:0
  107b22:    00 48       	r0 = [r0 + 0] 			  ## clock.c:215:27
  107b24:    01 29       	r1 = [addr(16)]  <.GCPI156_0 : 107b34 >			  ## clock.c:170:12
  107b26:    49 4b       	r1 = [r1 + 52] 			  ## clock.c:170:12
  107b28:    00 f6 00 43 	r0 = uextra(r0, p:2, l:3) 			  ## clock.c:215:38
  107b2c:    40 d0       	r0 = r0 + 1 			  ## clock.c:215:45
  107b2e:    40 fc 10 00 	r0 = r1 / r0 			  ## clock.c:216:35
  107b32:    20 00       	rts			  ## clock.c:219:5


.GCPI156_0:
  107b34:    60 1c 00 00     < 7264 : 0x1C60 >

.GCPI156_1:
  107b38:    04 18 09 00     < 595972 : 0x91804 >

lrc_clk_get:
  107b3c:    00 29       	r0 = [addr(16)]  <.GCPI157_0 : 107b4c >			  ## clock.c:513:0
  107b3e:    00 48       	r0 = [r0 + 0] 			  ## clock.c:518:24
  107b40:    01 29       	r1 = [addr(16)]  <.GCPI157_1 : 107b50 >			  ## clock.c:518:22
  107b42:    40 fc 10 00 	r0 = r1 / r0 			  ## clock.c:518:22
  107b46:    40 a3       	r0 = r0 >> 3 			  ## clock.c:518:35
  107b48:    20 00       	rts			  ## clock.c:519:1
  107b4a:    00 00       	nop			  ## clock.c:519:1


.GCPI157_0:
  107b4c:    0c 00 00 00     < 12 : 0xC >

.GCPI157_1:
  107b50:    00 38 9c 1c     < 480000000 : 0x1C9C3800 >

LP_NK:
  107b54:    14 c2       	[--sp] = {rets, r4} 			  ## power_hw.h:49:0
  107b56:    79 80       	r1 = 15 			  ## power_hw.h:49:0
  107b58:    12 ea ff ff 	r2 = 65535 			  ## power_hw.h:49:0
  107b5c:    7b 80       	r3 = 15 			  ## power_hw.h:49:0
  107b5e:    07 08       	goto 14 <LP_NK+0x1A : 107b6e >			  ## power_hw.h:49:0
  107b60:    e4 d3       	r4 = r4 + -1 			  ## power_hw.h:53:32
  107b62:    80 f1 24 04 	r4 = r2 & setbit(r4) 			  ## power_hw.h:53:17
  107b66:    04 ce       	cmp r0, r4			  ## power_hw.h:53:13
  107b68:    09 18       	if (nzcv > 0) goto 18 <LP_NK+0x28 : 107b7c >			  ## power_hw.h:53:13
  107b6a:    c9 d3       	r1 = r1 + -1 			  ## power_hw.h:52:5
  107b6c:    db d3       	r3 = r3 + -1 			  ## power_hw.h:52:27
  107b6e:    5c c9       	r4 = r3.l 			  ## power_hw.h:52:20
  107b70:    14 98       	cmp r4, 2			  ## power_hw.h:52:5
  107b72:    f6 12       	if (nzcv >= 0) goto -20 <LP_NK+0xC : 107b60 >			  ## power_hw.h:52:5
  107b74:    09 80       	r1 = 1 
  107b76:    08 98       	cmp r0, 1			  ## power_hw.h:58:11
  107b78:    90 03       	if (nzcv <= 0) {			  ## power_hw.h:58:11
  107b7a:    01 80       		r1 = 0 
                               	}			  ## power_hw.h:58:11
  107b7c:    08 c9       	r0 = r1.b 			  ## power_hw.h:63:1
  107b7e:    14 c0       	{pc, r4} = [sp++] 


__hw_set_osc_hz:
  107b80:    18 c2       	[--sp] = {rets, r8-r4} 			  ## power_hw.c:360:0
  107b82:    fc cd       	sp += -4 			  ## power_hw.c:360:0
  107b84:    01 60       	[sp] = r1 			  ## power_hw.c:360:0
  107b86:    20 e4 08 32 	r8 = [addr(200)]  <.GCPI159_0 : 107c50 >			  ## power_hw.c:363:23
  107b8a:    00 ed 87 bc 	r7 = r8 + 188 			  ## power_hw.c:363:23
  107b8e:    f8 6e       	[r7 + -20] = r0 			  ## power_hw.c:363:23
  107b90:    4e 2c       	r6 = [addr(196)]  <.GCPI159_1 : 107c54 >			  ## power_hw.c:365:24
  107b92:    31 80       	r1 = 6 			  ## power_hw.c:365:24
  107b94:    06 ce       	cmp r0, r6			  ## power_hw.c:365:24
  107b96:    90 03       	if (nzcv <= 0) {			  ## power_hw.c:365:24
  107b98:    01 80       		r1 = 0 
                               	}			  ## power_hw.c:365:24
  107b9a:    48 cf       	r0 >>= r1 			  ## power_hw.c:365:24
  107b9c:    c9 2b       	r1 = [addr(188)]  <.GCPI159_2 : 107c58 >			  ## power_hw.c:365:24
  107b9e:    40 fc 14 00 	r4 = r1 / r0 			  ## power_hw.c:365:24
  107ba2:    10 ea 10 27 	r0 = 10000 			  ## power_hw.c:365:24
  107ba6:    40 fc 00 04 	r0 = r0 / r4 			  ## power_hw.c:365:24
  107baa:    d4 04       	call -88 <LP_NK : 107b54 >			  ## power_hw.c:365:24
  107bac:    05 c6       	r5 = r0 			  ## power_hw.c:365:24
  107bae:    c8 2a       	r0 = [addr(172)]  <.GCPI159_3 : 107c5c >			  ## power_hw.c:369:24
  107bb0:    40 fc 00 04 	r0 = r0 / r4 			  ## power_hw.c:369:24
  107bb4:    40 c9       	r0 = r0.l 			  ## power_hw.c:369:24
  107bb6:    ce 04       	call -100 <LP_NK : 107b54 >			  ## power_hw.c:369:24
  107bb8:    03 fc 51 01 	r1 = r5 * 16843009 			  ## power_hw.c:366:22
  107bbc:    f9 6f       	[r7 + -4] = r1 			  ## power_hw.c:366:22
  107bbe:    38 78       	b[r7 + 0] = r0 			  ## power_hw.c:369:22
  107bc0:    40 fc 60 04 	r0 = r6 / r4 			  ## power_hw.c:370:24
  107bc4:    40 c9       	r0 = r0.l 			  ## power_hw.c:370:24
  107bc6:    c6 04       	call -116 <LP_NK : 107b54 >			  ## power_hw.c:370:24
  107bc8:    38 7a       	b[r7 + 1] = r0 			  ## power_hw.c:370:22
  107bca:    48 29       	r0 = [addr(148)]  <.GCPI159_4 : 107c60 >			  ## power_hw.c:371:24
  107bcc:    40 fc 00 04 	r0 = r0 / r4 			  ## power_hw.c:371:24
  107bd0:    40 c9       	r0 = r0.l 			  ## power_hw.c:371:24
  107bd2:    c0 04       	call -128 <LP_NK : 107b54 >			  ## power_hw.c:371:24
  107bd4:    38 7c       	b[r7 + 2] = r0 			  ## power_hw.c:371:22
  107bd6:    00 40       	r0 = [sp] 			  ## power_hw.c:373:9
  107bd8:    90 23       	if (r0 == 0) goto 114 <__hw_set_osc_hz+0xCC : 107c4c >			  ## power_hw.c:373:9
  107bda:    dd e1 3f 9a 	call -281786 <local_irq_disable : c2f24 >			  ## power_hw.c:376:9
  107bde:    4c 28       	r4 = [addr(132)]  <.GCPI159_5 : 107c64 >			  ## power_hw.c:376:9
  107be0:    0f e3 40 80 	[r4 + 0] &= (~256) 			  ## power_hw.c:376:9
  107be4:    00 e2 40 01 	[r4 + 0] |= 1 			  ## power_hw.c:376:9
  107be8:    00 80       	r0 = 0 			  ## power_hw.c:377:9
  107bea:    dd e1 1f 9a 	call -281790 <p33_buf : c2f30 >			  ## power_hw.c:377:9
  107bee:    c0 81       	r0 = 56 			  ## power_hw.c:378:9
  107bf0:    dd e1 ef 99 	call -281796 <p33_buf : c2f30 >			  ## power_hw.c:378:9
  107bf4:    00 ed 80 b8 	r0 = r8 + 184 			  ## power_hw.c:379:17
  107bf8:    00 58       	r0 = b[r0 + 0] 			  ## power_hw.c:379:17
  107bfa:    00 ed 81 b9 	r1 = r8 + 185 			  ## power_hw.c:379:17
  107bfe:    09 58       	r1 = b[r1 + 0] 			  ## power_hw.c:379:17
  107c00:    09 a4       	r1 = r1 << 4 			  ## power_hw.c:379:17
  107c02:    08 da       	r0 |= r1 			  ## power_hw.c:379:17
  107c04:    00 c9       	r0 = r0.b 			  ## power_hw.c:379:9
  107c06:    dd e1 3f 99 	call -281818 <p33_buf : c2f30 >			  ## power_hw.c:379:9
  107c0a:    00 ed 80 ba 	r0 = r8 + 186 			  ## power_hw.c:380:17
  107c0e:    00 58       	r0 = b[r0 + 0] 			  ## power_hw.c:380:17
  107c10:    00 ed 81 bb 	r1 = r8 + 187 			  ## power_hw.c:380:17
  107c14:    09 58       	r1 = b[r1 + 0] 			  ## power_hw.c:380:17
  107c16:    09 a4       	r1 = r1 << 4 			  ## power_hw.c:380:17
  107c18:    08 da       	r0 |= r1 			  ## power_hw.c:380:17
  107c1a:    00 c9       	r0 = r0.b 			  ## power_hw.c:380:9
  107c1c:    dd e1 8f 98 	call -281840 <p33_buf : c2f30 >			  ## power_hw.c:380:9
  107c20:    38 58       	r0 = b[r7 + 0] 			  ## power_hw.c:381:17
  107c22:    00 ed 81 bd 	r1 = r8 + 189 			  ## power_hw.c:381:17
  107c26:    09 58       	r1 = b[r1 + 0] 			  ## power_hw.c:381:17
  107c28:    09 a4       	r1 = r1 << 4 			  ## power_hw.c:381:17
  107c2a:    08 da       	r0 |= r1 			  ## power_hw.c:381:17
  107c2c:    00 c9       	r0 = r0.b 			  ## power_hw.c:381:9
  107c2e:    dd e1 ff 97 	call -281858 <p33_buf : c2f30 >			  ## power_hw.c:381:9
  107c32:    10 ea be 00 	r0 = 190 			  ## power_hw.c:382:17
  107c36:    00 e7 80 00 	r0 = b[r8 + r0] 			  ## power_hw.c:382:9
  107c3a:    dd e1 9f 97 	call -281870 <p33_buf : c2f30 >			  ## power_hw.c:382:9
  107c3e:    20 48       	r0 = [r4 + 0] 			  ## power_hw.c:383:9
  107c40:    91 ea fe fe 	r1 = -258 			  ## power_hw.c:383:9
  107c44:    88 da       	r0 &= r1 			  ## power_hw.c:383:9
  107c46:    20 68       	[r4 + 0] = r0 			  ## power_hw.c:383:9
  107c48:    dd e1 af 96 	call -281900 <local_irq_enable : c2f20 >			  ## power_hw.c:383:9
  107c4c:    04 cd       	sp += 4 
  107c4e:    18 c0       	{pc, r8-r4} = [sp++] 


.GCPI159_0:
  107c50:    cc 08 00 00     < 2252 : 0x8CC >

.GCPI159_1:
  107c54:    40 42 0f 00     < 1000000 : 0xF4240 >

.GCPI159_2:
  107c58:    00 ca 9a 3b     < 1000000000 : 0x3B9ACA00 >

.GCPI159_3:
  107c5c:    20 a1 07 00     < 500000 : 0x7A120 >

.GCPI159_4:
  107c60:    a0 86 01 00     < 100000 : 0x186A0 >

.GCPI159_5:
  107c64:    88 3c 09 00     < 605320 : 0x93C88 >

p33_rd_page:
  107c68:    18 c2       	[--sp] = {rets, r8-r4} 			  ## efuse.c:15:0
  107c6a:    00 a6       	r0 = r0 << 6 			  ## efuse.c:15:0
  107c6c:    07 80       	r7 = 0 			  ## efuse.c:15:0
  107c6e:    00 ec 08 00 	r8 = r0.b 			  ## efuse.c:15:0
  107c72:    04 80       	r4 = 0 			  ## efuse.c:15:0
  107c74:    05 80       	r5 = 0 			  ## efuse.c:15:0
  107c76:    1f 08       	goto 62 <p33_rd_page+0x4E : 107cb6 >			  ## efuse.c:15:0
  107c78:    10 ea b0 00 	r0 = 176 			  ## efuse.c:21:9
  107c7c:    81 c6       	r1 = r8 			  ## efuse.c:21:9
  107c7e:    7c e1 7f 44 	call -1079154 <p33_tx_1byte : 510 >			  ## efuse.c:21:9
  107c82:    00 f3 70 82 	r0 = r7 | 130 			  ## efuse.c:22:37
  107c86:    01 c9       	r1 = r0.b 			  ## efuse.c:22:9
  107c88:    10 ea b1 00 	r0 = 177 			  ## efuse.c:22:9
  107c8c:    7c e1 0f 44 	call -1079168 <p33_tx_1byte : 510 >			  ## efuse.c:22:9
  107c90:    90 81       	r0 = 50 			  ## efuse.c:23:9
  107c92:    7c e1 bf 1d 	call -1080394 <udelay : 4c >			  ## efuse.c:23:9
  107c96:    10 ea b2 00 	r0 = 178 			  ## efuse.c:24:15
  107c9a:    7c e1 df 42 	call -1079206 <p33_rx_1byte : 4f8 >			  ## efuse.c:24:15
  107c9e:    06 c6       	r6 = r0 			  ## efuse.c:24:15
  107ca0:    10 ea b1 00 	r0 = 177 			  ## efuse.c:28:9
  107ca4:    11 ea fd 00 	r1 = 253 			  ## efuse.c:28:9
  107ca8:    7c e1 6f 44 	call -1079156 <p33_and_1byte : 538 >			  ## efuse.c:28:9
  107cac:    00 f7 60 04 	r0 = r6 << r4 			  ## efuse.c:26:15
  107cb0:    05 da       	r5 |= r0 			  ## efuse.c:27:14
  107cb2:    3f d1       	r7 = r7 + 4 			  ## efuse.c:20:5
  107cb4:    44 88       	r4 += 8 			  ## efuse.c:20:5
  107cb6:    04 99       	cmp r4, 32			  ## efuse.c:20:5
  107cb8:    df 11       	ifs (nzcv != 0) goto -66 <p33_rd_page+0x10 : 107c78 >			  ## efuse.c:20:5
  107cba:    28 c6       	r0 = r5 			  ## efuse.c:30:5
  107cbc:    18 c0       	{pc, r8-r4} = [sp++] 			  ## efuse.c:30:5


LRC_CLK_EN:
  107cbe:    1f c2       	[--sp] = {rets} 			  ## lrc_hw.c:71:0
  107cc0:    98 80       	r0 = 19 			  ## lrc_hw.c:73:5
  107cc2:    09 81       	r1 = 33 			  ## lrc_hw.c:73:5
  107cc4:    7c e1 4f 42 	call -1079224 <p33_tx_1byte : 510 >			  ## lrc_hw.c:73:5
  107cc8:    a0 80       	r0 = 20 			  ## lrc_hw.c:74:5
  107cca:    89 80       	r1 = 17 			  ## lrc_hw.c:74:5
  107ccc:    7c e1 0f 42 	call -1079232 <p33_tx_1byte : 510 >			  ## lrc_hw.c:74:5
  107cd0:    80 29       	r0 = [addr(24)]  <.GCPI163_0 : 107ce8 >			  ## lrc_hw.c:74:5
  107cd2:    0a e3 00 80 	[r0 + 0] &= (~262144) 			  ## lrc_hw.c:75:18
  107cd6:    0b e2 00 00 	[r0 + 0] |= 131072 			  ## lrc_hw.c:76:18
  107cda:    10 ea a6 00 	r0 = 166 			  ## lrc_hw.c:77:5
  107cde:    21 80       	r1 = 4 			  ## lrc_hw.c:77:5
  107ce0:    40 c4       	{rets} = [sp++] 			  ## lrc_hw.c:77:5
  107ce2:    7c fa df 3e 	goto -1079334 <p33_or_1byte : 4c0 >			  ## lrc_hw.c:77:5
  107ce6:    00 00       	nop			  ## lrc_hw.c:77:5


.GCPI163_0:
  107ce8:    00 18 09 00     < 595968 : 0x91800 >

__hw_lrc_enable:
  107cec:    c1 29       	r1 = [addr(28)]  <.GCPI164_0 : 107d08 >			  ## lrc_hw.c:82:0
  107cee:    00 e8 11 15 	r1 = b[r1 + 84] 			  ## lrc_hw.c:82:0
  107cf2:    09 98       	cmp r1, 1			  ## lrc_hw.c:83:9
  107cf4:    08 11       	ifs (nzcv != 0) goto 16 <__hw_lrc_enable+0x1A : 107d06 >			  ## lrc_hw.c:83:9
  107cf6:    41 29       	r1 = [addr(20)]  <.GCPI164_1 : 107d0c >
  107cf8:    00 e3 10 01 	[r1 + 0] &= (~1) 			  ## lrc_hw.c:87:18
  107cfc:    00 e2 10 40 	[r1 + 0] |= 64 			  ## lrc_hw.c:89:18
  107d00:    20 20       	if (r0 == 0) goto 4 <__hw_lrc_enable+0x1A : 107d06 >			  ## lrc_hw.c:89:18
  107d02:    00 e2 10 01 	[r1 + 0] |= 1 			  ## lrc_hw.c:92:22
  107d06:    20 00       	rts			  ## lrc_hw.c:94:1


.GCPI164_0:
  107d08:    60 1c 00 00     < 7264 : 0x1C60 >

.GCPI164_1:
  107d0c:    50 3c 09 00     < 605264 : 0x93C50 >

__tcnt_us:
  107d10:    16 c2       	[--sp] = {rets, r6-r4} 			  ## power_hw.c:275:0
  107d12:    30 c5       	[--sp] = {macch, maccl} 			  ## power_hw.c:275:0
  107d14:    c1 2a       	r1 = [addr(44)]  <.GCPI165_0 : 107d40 >			  ## power_hw.c:280:30
  107d16:    20 e8 11 2a 	r1 = [r1 + 168] 			  ## power_hw.c:280:30
  107d1a:    48 06       	macc = r1 * r0 			  ## power_hw.c:280:16
  107d1c:    24 c8       	r4 = maccl 			  ## power_hw.c:280:16
  107d1e:    2d c8       	r5 = macch 			  ## power_hw.c:280:16
  107d20:    46 2a       	r6 = [addr(36)]  <.GCPI165_1 : 107d44 >			  ## power_hw.c:280:16
  107d22:    20 c6       	r0 = r4 			  ## power_hw.c:282:11
  107d24:    29 c6       	r1 = r5 			  ## power_hw.c:282:11
  107d26:    32 c6       	r2 = r6 			  ## power_hw.c:282:11
  107d28:    06 e1 c0 a3 	call 54392 <__iumoddi3 : 1151a4 >			  ## power_hw.c:282:11
  107d2c:    09 80       	r1 = 1 			  ## power_hw.c:286:9
  107d2e:    18 20       	if (r0 != 0) goto 2 <__tcnt_us+0x22 : 107d32 >			  ## power_hw.c:286:9
  107d30:    01 80       	r1 = 0 
  107d32:    24 c7       	maccl = r4 			  ## power_hw.c:282:11
  107d34:    2d c7       	macch = r5 			  ## power_hw.c:282:11
  107d36:    06 05       	macc /= r6 			  ## power_hw.c:282:11
  107d38:    20 c8       	r0 = maccl 			  ## power_hw.c:282:11
  107d3a:    40 d4       	r0 = r0 + r1 			  ## power_hw.c:286:9
  107d3c:    30 c4       	{macch, maccl} = [sp++] 			  ## power_hw.c:286:9
  107d3e:    16 c0       	{pc, r6-r4} = [sp++] 			  ## power_hw.c:286:9


.GCPI165_0:
  107d40:    cc 08 00 00     < 2252 : 0x8CC >

.GCPI165_1:
  107d44:    40 42 0f 00     < 1000000 : 0xF4240 >

__tus_cnt:
  107d48:    30 c5       	[--sp] = {macch, maccl} 			  ## power_hw.c:341:0
  107d4a:    01 80       	r1 = 0 			  ## power_hw.c:341:0
  107d4c:    c2 29       	r2 = [addr(28)]  <.GCPI166_1 : 107d68 >			  ## power_hw.c:345:18
  107d4e:    c8 06       	macc = r1 * r0 (s) 			  ## power_hw.c:345:18
  107d50:    e0 dc       	macc <<= 32 			  ## power_hw.c:345:18
  107d52:    10 07       	macc += r2 * r0 			  ## power_hw.c:345:18
  107d54:    02 29       	r2 = [addr(16)]  <.GCPI166_0 : 107d64 >			  ## power_hw.c:347:25
  107d56:    20 e8 22 2a 	r2 = [r2 + 168] 			  ## power_hw.c:347:25
  107d5a:    02 05       	macc /= r2 			  ## power_hw.c:347:11
  107d5c:    20 c8       	r0 = maccl 			  ## power_hw.c:347:11
  107d5e:    30 c4       	{macch, maccl} = [sp++] 
  107d60:    20 00       	rts			  ## power_hw.c:350:5
  107d62:    00 00       	nop			  ## power_hw.c:350:5


.GCPI166_0:
  107d64:    cc 08 00 00     < 2252 : 0x8CC >

.GCPI166_1:
  107d68:    40 42 0f 00     < 1000000 : 0xF4240 >

P33_OR_WKUP_EDGE:
  107d6c:    11 ea ff 00 	r1 = 255 			  ## power_wakeup.c:138:0
  107d70:    80 f1 11 00 	r1 = r1 & setbit(r0) 			  ## power_wakeup.c:138:1
  107d74:    10 ea 91 00 	r0 = 145 			  ## power_wakeup.c:138:1
  107d78:    7c fa 2f 3a 	goto -1079484 <p33_or_1byte : 4c0 >			  ## power_wakeup.c:138:1


P33_AND_WKUP_EDGE:
  107d7c:    11 ea ff 00 	r1 = 255 			  ## power_wakeup.c:138:0
  107d80:    c0 f1 11 00 	r1 = r1 & ~setbit(r0) 			  ## power_wakeup.c:138:1
  107d84:    10 ea 91 00 	r0 = 145 			  ## power_wakeup.c:138:1
  107d88:    7c fa 6f 3d 	goto -1079380 <p33_and_1byte : 538 >			  ## power_wakeup.c:138:1


P33_OR_WKUP_CPND:
  107d8c:    11 ea ff 00 	r1 = 255 			  ## power_wakeup.c:139:0
  107d90:    80 f1 11 00 	r1 = r1 & setbit(r0) 			  ## power_wakeup.c:139:1
  107d94:    10 ea 92 00 	r0 = 146 			  ## power_wakeup.c:139:1
  107d98:    7c fa 2f 39 	goto -1079516 <p33_or_1byte : 4c0 >			  ## power_wakeup.c:139:1


P33_OR_WKUP_EN:
  107d9c:    11 ea ff 00 	r1 = 255 			  ## power_wakeup.c:137:0
  107da0:    80 f1 11 00 	r1 = r1 & setbit(r0) 			  ## power_wakeup.c:137:1
  107da4:    10 ea 90 00 	r0 = 144 			  ## power_wakeup.c:137:1
  107da8:    7c fa af 38 	goto -1079532 <p33_or_1byte : 4c0 >			  ## power_wakeup.c:137:1


P3_PORT_SET:
  107dac:    14 c2       	[--sp] = {rets, r4} 			  ## power_wakeup.c:196:0
  107dae:    03 c6       	r3 = r0 			  ## power_wakeup.c:196:0
  107db0:    04 80       	r4 = 0 			  ## power_wakeup.c:196:0
  107db2:    3b 98       	cmp r3, 7			  ## power_wakeup.c:198:5
  107db4:    00 80       	r0 = 0 			  ## power_wakeup.c:198:5
  107db6:    1c 18       	if (nzcv > 0) goto 56 <.GJTIE172_0_0_+0x2E : 107df0 >			  ## power_wakeup.c:198:5
  107db8:    b3 01       	tbb [r3]


.GJTIS172_0_0_:
  107dba:    04     < 4 : 0x4 >
  107dbb:    07     < 7 : 0x7 >
  107dbc:    0a     < 10 : 0xA >
  107dbd:    0d     < 13 : 0xD >
  107dbe:    10     < 16 : 0x10 >
  107dbf:    13     < 19 : 0x13 >
  107dc0:    16     < 22 : 0x16 >
  107dc1:    19     < 25 : 0x19 >
  107dc2:    10 ea c0 00 	r0 = 192 
  107dc6:    14 08       	goto 40 <.GJTIE172_0_0_+0x2E : 107df0 >
  107dc8:    10 ea c1 00 	r0 = 193 
  107dcc:    11 08       	goto 34 <.GJTIE172_0_0_+0x2E : 107df0 >
  107dce:    10 ea c2 00 	r0 = 194 
  107dd2:    0e 08       	goto 28 <.GJTIE172_0_0_+0x2E : 107df0 >
  107dd4:    10 ea c3 00 	r0 = 195 
  107dd8:    0b 08       	goto 22 <.GJTIE172_0_0_+0x2E : 107df0 >
  107dda:    10 ea c4 00 	r0 = 196 
  107dde:    08 08       	goto 16 <.GJTIE172_0_0_+0x2E : 107df0 >
  107de0:    10 ea c5 00 	r0 = 197 
  107de4:    05 08       	goto 10 <.GJTIE172_0_0_+0x2E : 107df0 >
  107de6:    10 ea c6 00 	r0 = 198 
  107dea:    02 08       	goto 4 <.GJTIE172_0_0_+0x2E : 107df0 >
  107dec:    10 ea c7 00 	r0 = 199 
  107df0:    29 99       	cmp r1, 37			  ## power_wakeup.c:225:5
  107df2:    06 10       	ifs (nzcv == 0) goto 12 <.GJTIE172_0_0_+0x3E : 107e00 >			  ## power_wakeup.c:225:5
  107df4:    01 99       	cmp r1, 32
  107df6:    04 10       	ifs (nzcv == 0) goto 8 <.GJTIE172_0_0_+0x3E : 107e00 >
  107df8:    81 98       	cmp r1, 16
  107dfa:    00 03       	ifs (nzcv == 0) {
  107dfc:    84 80       		r4 = 16 
                               	}
  107dfe:    01 08       	goto 2 <.GJTIE172_0_0_+0x40 : 107e02 >
  107e00:    84 81       	r4 = 48 
  107e02:    00 f0 41 02 	r1 = r4 | r2 			  ## power_wakeup.c:239:28
  107e06:    0b c9       	r3 = r1.b 			  ## power_wakeup.c:239:5
  107e08:    01 80       	r1 = 0 			  ## power_wakeup.c:239:5
  107e0a:    32 80       	r2 = 6 			  ## power_wakeup.c:239:5
  107e0c:    7c e1 4f 36 	call -1079608 <P33_CON_SET : 4d8 >			  ## power_wakeup.c:239:5
  107e10:    14 c0       	{pc, r4} = [sp++] 			  ## power_wakeup.c:239:5


HWI_Install:
  107e12:    17 c2       	[--sp] = {rets, r7-r4} 			  ## hwi.c:57:0
  107e14:    14 c6       	r4 = r2 			  ## hwi.c:57:0
  107e16:    18 98       	cmp r0, 3			  ## hwi.c:63:9
  107e18:    06 11       	ifs (nzcv != 0) goto 12 <HWI_Install+0x14 : 107e26 >
  107e1a:    42 2c       	r2 = [addr(68)]  <.GCPI173_0 : 107e60 >			  ## hwi.c:64:26
  107e1c:    d2 48       	r2 = [r2 + 12] 			  ## hwi.c:64:26
  107e1e:    32 20       	if (r2 == 0) goto 6 <HWI_Install+0x14 : 107e26 >			  ## hwi.c:64:26
  107e20:    43 2c       	r3 = [addr(68)]  <.GCPI173_1 : 107e64 >
  107e22:    13 ce       	cmp r2, r3
  107e24:    1b 11       	ifs (nzcv != 0) goto 54 <HWI_Install+0x4A : 107e5c >
  107e26:    45 a3       	r5 = r0 >> 3 			  ## hwi.c:59:36
  107e28:    00 a2       	r0 = r0 << 2 			  ## hwi.c:60:41
  107e2a:    80 f3 06 1c 	r6 = r0 & 28 			  ## hwi.c:60:41
  107e2e:    02 2b       	r2 = [addr(48)]  <.GCPI173_0 : 107e60 >			  ## hwi.c:69:5
  107e30:    60 e7 21 00 	[r2 + r0] = r1 			  ## hwi.c:69:20
  107e34:    78 80       	r0 = 15 			  ## hwi.c:69:20
  107e36:    00 f7 07 06 	r7 = r0 << r6 			  ## hwi.c:74:35
  107e3a:    dd e1 3f 87 	call -282394 <local_irq_disable : c2f24 >			  ## hwi.c:71:5
  107e3e:    28 a2       	r0 = r5 << 2 			  ## hwi.c:78:27
  107e40:    81 2a       	r1 = [addr(40)]  <.GCPI173_2 : 107e68 >			  ## hwi.c:78:27
  107e42:    40 d4       	r0 = r0 + r1 			  ## hwi.c:78:27
  107e44:    01 48       	r1 = [r0 + 0] 			  ## hwi.c:78:27
  107e46:    c0 f0 11 07 	r1 = r1 & ~r7 			  ## hwi.c:78:46
  107e4a:    22 a1       	r2 = r4 << 1 			  ## hwi.c:73:49
  107e4c:    80 f3 22 0e 	r2 = r2 & 14 			  ## hwi.c:73:49
  107e50:    02 d8       	r2 |= 1			  ## hwi.c:73:55
  107e52:    32 cf       	r2 <<= r6 			  ## hwi.c:75:39
  107e54:    11 da       	r1 |= r2 			  ## hwi.c:78:58
  107e56:    01 68       	[r0 + 0] = r1 			  ## hwi.c:78:24
  107e58:    dd e1 2f 86 	call -282428 <local_irq_enable : c2f20 >			  ## hwi.c:80:5
  107e5c:    17 c0       	{pc, r7-r4} = [sp++] 
  107e5e:    00 00       	nop


.GCPI173_0:
  107e60:    00 7f 00 00     < 32512 : 0x7F00 >

.GCPI173_1:
  107e64:    d0 2f 0c 00     < 798672 : 0xC2FD0 >

.GCPI173_2:
  107e68:    00 01 08 00     < 524544 : 0x80100 >

lrc_trace_trim:
  107e6c:    15 c2       	[--sp] = {rets, r5, r4} 			  ## clock.c:492:0
  107e6e:    05 2f       	r5 = [addr(112)]  <.GCPI179_4 : 107ee0 >			  ## clock.c:492:0
  107e70:    e8 4f       	r0 = [r5 + -4] 			  ## clock.c:496:19
  107e72:    84 f3 00 60 	r0 = r0 & 3758096384 			  ## clock.c:496:39
  107e76:    04 ef 00 00 	cmp r0, 2147483648			  ## clock.c:496:9
  107e7a:    29 10       	ifs (nzcv == 0) goto 82 <lrc_trace_trim+0x62 : 107ece >			  ## clock.c:496:9
  107e7c:    80 2e       	r0 = [addr(104)]  <.GCPI179_5 : 107ee4 >
  107e7e:    f0 e2 0f 41 	[r0 + -4] |= 65 			  ## clock.c:499:18
  107e82:    c1 4f       	r1 = [r0 + -4] 			  ## clock.c:500:23
  107e84:    89 c9       	r1 = r1.b (s) 			  ## clock.c:500:12
  107e86:    f9 9f       	cmp r1, -1			  ## clock.c:500:5
  107e88:    fc 1c       	ifs (nzcv > 0) goto -8 <lrc_trace_trim+0x16 : 107e82 >			  ## clock.c:500:5
  107e8a:    04 48       	r4 = [r0 + 0] 			  ## clock.c:501:24
  107e8c:    f0 e2 0f 40 	[r0 + -4] |= 64 			  ## clock.c:502:18
  107e90:    f0 e3 0f 01 	[r0 + -4] &= (~1) 			  ## clock.c:503:18
  107e94:    c0 2b       	r0 = [addr(60)]  <.GCPI179_0 : 107ed0 >			  ## clock.c:504:5
  107e96:    21 c6       	r1 = r4 			  ## clock.c:504:5
  107e98:    dd e1 0f 8a 	call -282304 <xprintf : c2fdc >			  ## clock.c:504:5
  107e9c:    28 48       	r0 = [r5 + 0] 			  ## clock.c:505:30
  107e9e:    11 ea ff 0f 	r1 = 4095 			  ## clock.c:505:35
  107ea2:    80 f0 05 01 	r5 = r0 & r1 			  ## clock.c:505:35
  107ea6:    a9 d0       	r1 = r5 + 2 			  ## clock.c:506:5
  107ea8:    c0 2a       	r0 = [addr(44)]  <.GCPI179_1 : 107ed4 >			  ## clock.c:506:5
  107eaa:    dd e1 7f 89 	call -282322 <xprintf : c2fdc >			  ## clock.c:506:5
  107eae:    28 a8       	r0 = r5 << 8 			  ## clock.c:507:39
  107eb0:    02 ed 00 00 	r0 = r0 + 512 			  ## clock.c:507:39
  107eb4:    41 2a       	r1 = [addr(36)]  <.GCPI179_2 : 107ed8 >			  ## clock.c:507:47
  107eb6:    09 48       	r1 = [r1 + 0] 			  ## clock.c:507:47
  107eb8:    08 06       	r0 *= r1 			  ## clock.c:507:45
  107eba:    61 a3       	r1 = r4 >> 3 			  ## clock.c:507:65
  107ebc:    40 fc 04 01 	r4 = r0 / r1 			  ## clock.c:507:58
  107ec0:    a1 d3       	r1 = r4 + -2 			  ## clock.c:508:5
  107ec2:    80 29       	r0 = [addr(24)]  <.GCPI179_3 : 107edc >			  ## clock.c:508:5
  107ec4:    dd e1 af 88 	call -282348 <xprintf : c2fdc >			  ## clock.c:508:5
  107ec8:    20 c6       	r0 = r4 			  ## clock.c:509:5
  107eca:    7c e1 df 0d 	call -1080902 <pll_config : 88 >			  ## clock.c:509:5
  107ece:    15 c0       	{pc, r5, r4} = [sp++] 


.GCPI179_0:
  107ed0:    1d b4 11 00     < 1160221 : 0x11B41D >

.GCPI179_1:
  107ed4:    40 b4 11 00     < 1160256 : 0x11B440 >

.GCPI179_2:
  107ed8:    0c 00 00 00     < 12 : 0xC >

.GCPI179_3:
  107edc:    61 b4 11 00     < 1160289 : 0x11B461 >

.GCPI179_4:
  107ee0:    24 18 09 00     < 596004 : 0x91824 >

.GCPI179_5:
  107ee4:    54 3c 09 00     < 605268 : 0x93C54 >

adc_add_sample_ch:
  107ee8:    b0 98       	cmp r0, 22			  ## adc_drv.c:89:0
  107eea:    07 18       	if (nzcv > 0) goto 14 <adc_add_sample_ch+0x12 : 107efa >			  ## adc_drv.c:90:9
  107eec:    00 a2       	r0 = r0 << 2 			  ## adc_drv.c:94:18
  107eee:    c1 28       	r1 = [addr(12)]  <.GCPI180_0 : 107efc >			  ## adc_drv.c:94:18
  107ef0:    0a d4       	r2 = r1 + r0 			  ## adc_drv.c:94:18
  107ef2:    12 58       	r2 = b[r2 + 0] 			  ## adc_drv.c:94:20
  107ef4:    52 d0       	r2 = r2 + 1 			  ## adc_drv.c:94:20
  107ef6:    40 e7 12 00 	b[r1 + r0] = r2 			  ## adc_drv.c:94:20
  107efa:    20 00       	rts


.GCPI180_0:
  107efc:    50 1f 00 00     < 8016 : 0x1F50 >

pll_ref_sel_init:
  107f00:    17 c2       	[--sp] = {rets, r7-r4} 			  ## clock.c:634:0
  107f02:    cd 2e       	r5 = [addr(236)]  <.GCPI181_5 : 107ff0 >			  ## clock.c:634:0
  107f04:    e9 48       	r1 = [r5 + 12] 			  ## clock.c:635:40
  107f06:    49 bd       	r1 = r1 >> 29 			  ## clock.c:635:45
  107f08:    08 ce       	cmp r1, r0			  ## clock.c:636:9
  107f0a:    66 10       	ifs (nzcv == 0) goto 204 <pll_ref_sel_init+0xD8 : 107fd8 >			  ## clock.c:636:9
  107f0c:    18 98       	cmp r0, 3			  ## clock.c:639:9
  107f0e:    35 10       	ifs (nzcv == 0) goto 106 <pll_ref_sel_init+0x7A : 107f7a >			  ## clock.c:639:9
  107f10:    20 98       	cmp r0, 4
  107f12:    62 11       	ifs (nzcv != 0) goto 196 <pll_ref_sel_init+0xD8 : 107fd8 >
  107f14:    48 2d       	r0 = [addr(212)]  <.GCPI181_3 : 107fe8 >			  ## clock.c:640:9
  107f16:    dd e1 1f 86 	call -282430 <xprintf : c2fdc >			  ## clock.c:640:9
  107f1a:    0e 2d       	r6 = [addr(208)]  <.GCPI181_4 : 107fec >			  ## clock.c:556:20
  107f1c:    37 48       	r7 = [r6 + 0] 			  ## clock.c:556:20
  107f1e:    29 49       	r1 = [r5 + 16] 			  ## clock.c:558:5
  107f20:    0c 2c       	r4 = [addr(192)]  <.GCPI181_1 : 107fe0 >			  ## clock.c:558:5
  107f22:    20 c6       	r0 = r4 			  ## clock.c:558:5
  107f24:    dd e1 af 85 	call -282444 <xprintf : c2fdc >			  ## clock.c:558:5
  107f28:    dd e1 cf 7f 	call -282632 <local_irq_disable : c2f24 >			  ## clock.c:559:5
  107f2c:    f0 e2 5b 02 	[r5 + -20] |= 2 			  ## clock.c:560:18
  107f30:    f0 e3 5b 20 	[r5 + -20] &= (~32) 			  ## clock.c:561:18
  107f34:    50 80       	r0 = 10 			  ## clock.c:562:5
  107f36:    7c e1 df 09 	call -1081030 <delay : 74 >			  ## clock.c:562:5
  107f3a:    30 48       	r0 = [r6 + 0] 			  ## clock.c:564:5
  107f3c:    89 2b       	r1 = [addr(184)]  <.GCPI181_6 : 107ff4 >			  ## clock.c:565:19
  107f3e:    e9 68       	[r5 + 12] = r1 			  ## clock.c:565:19
  107f40:    b9 d3       	r1 = r7 + -2 			  ## clock.c:556:20
  107f42:    4a 2b       	r2 = [addr(180)]  <.GCPI181_7 : 107ff8 >			  ## clock.c:564:5
  107f44:    91 da       	r1 &= r2 			  ## clock.c:564:5
  107f46:    12 ea ff 0f 	r2 = 4095 			  ## clock.c:564:5
  107f4a:    90 da       	r0 &= r2 			  ## clock.c:564:5
  107f4c:    08 da       	r0 |= r1 			  ## clock.c:564:5
  107f4e:    c9 2a       	r1 = [addr(172)]  <.GCPI181_8 : 107ffc >			  ## clock.c:564:5
  107f50:    08 da       	r0 |= r1 			  ## clock.c:564:5
  107f52:    28 69       	[r5 + 16] = r0 			  ## clock.c:566:19
  107f54:    00 e2 53 01 	[r5 + 12] |= 1 			  ## clock.c:568:18
  107f58:    40 81       	r0 = 40 			  ## clock.c:569:5
  107f5a:    7c e1 bf 08 	call -1081066 <delay : 74 >			  ## clock.c:569:5
  107f5e:    00 e2 53 02 	[r5 + 12] |= 2 			  ## clock.c:570:18
  107f62:    a0 80       	r0 = 20 			  ## clock.c:571:5
  107f64:    7c e1 6f 08 	call -1081076 <delay : 74 >			  ## clock.c:571:5
  107f68:    f0 e2 5b 20 	[r5 + -20] |= 32 			  ## clock.c:573:18
  107f6c:    dd e1 8f 7d 	call -282704 <local_irq_enable : c2f20 >			  ## clock.c:574:5
  107f70:    29 49       	r1 = [r5 + 16] 			  ## clock.c:575:5
  107f72:    20 c6       	r0 = r4 			  ## clock.c:575:5
  107f74:    dd e1 2f 83 	call -282524 <xprintf : c2fdc >			  ## clock.c:575:5
  107f78:    17 c0       	{pc, r7-r4} = [sp++] 			  ## clock.c:575:5
  107f7a:    00 2e       	r0 = [addr(96)]  <.GCPI181_0 : 107fdc >			  ## clock.c:643:9
  107f7c:    dd e1 ef 82 	call -282532 <xprintf : c2fdc >			  ## clock.c:643:9
  107f80:    29 49       	r1 = [r5 + 16] 			  ## clock.c:613:5
  107f82:    c4 2d       	r4 = [addr(92)]  <.GCPI181_1 : 107fe0 >			  ## clock.c:613:5
  107f84:    20 c6       	r0 = r4 			  ## clock.c:613:5
  107f86:    dd e1 9f 82 	call -282542 <xprintf : c2fdc >			  ## clock.c:613:5
  107f8a:    dd e1 bf 7c 	call -282730 <local_irq_disable : c2f24 >			  ## clock.c:614:5
  107f8e:    f0 e2 5b 02 	[r5 + -20] |= 2 			  ## clock.c:615:18
  107f92:    f0 e3 5b 20 	[r5 + -20] &= (~32) 			  ## clock.c:616:18
  107f96:    50 80       	r0 = 10 			  ## clock.c:617:5
  107f98:    7c e1 cf 06 	call -1081128 <delay : 74 >			  ## clock.c:617:5
  107f9c:    80 2c       	r0 = [addr(72)]  <.GCPI181_2 : 107fe4 >			  ## clock.c:618:5
  107f9e:    00 48       	r0 = [r0 + 0] 			  ## clock.c:618:5
  107fa0:    01 2e       	r1 = [addr(96)]  <.GCPI181_9 : 108000 >			  ## clock.c:620:19
  107fa2:    e9 68       	[r5 + 12] = r1 			  ## clock.c:620:19
  107fa4:    11 ea ff 0f 	r1 = 4095 			  ## clock.c:618:5
  107fa8:    88 da       	r0 &= r1 			  ## clock.c:618:5
  107faa:    81 2d       	r1 = [addr(88)]  <.GCPI181_10 : 108004 >			  ## clock.c:618:5
  107fac:    08 da       	r0 |= r1 			  ## clock.c:618:5
  107fae:    28 69       	[r5 + 16] = r0 			  ## clock.c:621:19
  107fb0:    00 e2 53 01 	[r5 + 12] |= 1 			  ## clock.c:622:18
  107fb4:    40 81       	r0 = 40 			  ## clock.c:623:5
  107fb6:    7c e1 df 05 	call -1081158 <delay : 74 >			  ## clock.c:623:5
  107fba:    00 e2 53 02 	[r5 + 12] |= 2 			  ## clock.c:624:18
  107fbe:    a0 80       	r0 = 20 			  ## clock.c:625:5
  107fc0:    7c e1 8f 05 	call -1081168 <delay : 74 >			  ## clock.c:625:5
  107fc4:    f0 e2 5b 20 	[r5 + -20] |= 32 			  ## clock.c:627:18
  107fc8:    dd e1 af 7a 	call -282796 <local_irq_enable : c2f20 >			  ## clock.c:628:5
  107fcc:    29 49       	r1 = [r5 + 16] 			  ## clock.c:629:5
  107fce:    20 c6       	r0 = r4 			  ## clock.c:629:5
  107fd0:    dd e1 4f 80 	call -282616 <xprintf : c2fdc >			  ## clock.c:629:5
  107fd4:    ff e1 af f4 	call -364 <lrc_trace_trim : 107e6c >			  ## clock.c:645:9
  107fd8:    17 c0       	{pc, r7-r4} = [sp++] 
  107fda:    00 00       	nop


.GCPI181_0:
  107fdc:    ed b5 11 00     < 1160685 : 0x11B5ED >

.GCPI181_1:
  107fe0:    82 b4 11 00     < 1160322 : 0x11B482 >

.GCPI181_2:
  107fe4:    e0 7e 00 00     < 32480 : 0x7EE0 >

.GCPI181_3:
  107fe8:    c6 b5 11 00     < 1160646 : 0x11B5C6 >

.GCPI181_4:
  107fec:    0c 00 00 00     < 12 : 0xC >

.GCPI181_5:
  107ff0:    14 18 09 00     < 595988 : 0x91814 >

.GCPI181_6:
  107ff4:    00 10 fe 81     < 2180911104 : 0x81FE1000 >

.GCPI181_7:
  107ff8:    00 c0 bf f9     < 4190093312 : 0xF9BFC000 >

.GCPI181_8:
  107ffc:    00 30 40 06     < 104869888 : 0x6403000 >

.GCPI181_9:
  108000:    4c 10 fe 61     < 1644040268 : 0x61FE104C >

.GCPI181_10:
  108004:    00 30 40 0a     < 171978752 : 0xA403000 >

vfs_hdl_malloc:
  108008:    40 80       	r0 = 8 			  ## vfs_resource.c:55:0
  10800a:    09 80       	r1 = 1 			  ## vfs_resource.c:56:12
  10800c:    ff fa af 72 	goto -4524 <my_malloc : 106e64 >			  ## vfs_resource.c:56:12


vfs_fhdl_free:
  108010:    ff fa 4f a5 	goto -2904 <my_free : 1074bc >			  ## vfs_resource.c:60:0


vfs_mount:
  108014:    1a c2       	[--sp] = {rets, r10-r4} 			  ## vfs.c:44:0
  108016:    f8 cd       	sp += -8 			  ## vfs.c:44:0
  108018:    15 c6       	r5 = r2 			  ## vfs.c:44:0
  10801a:    41 60       	[sp+ 4] = r1 			  ## vfs.c:44:0
  10801c:    04 c6       	r4 = r0 			  ## vfs.c:44:0
  10801e:    20 e8 49 00 	r9 = [r4 + 0] 			  ## vfs.c:45:25
  108022:    80 ef 90 00 	cmp r9, 0			  ## vfs.c:45:9
  108026:    07 11       	ifs (nzcv != 0) goto 14 <vfs_mount+0x22 : 108036 >			  ## vfs.c:45:9
  108028:    ef 04       	call -34 <vfs_hdl_malloc : 108008 >			  ## vfs.c:46:18
  10802a:    41 c6       	r9 = r0 			  ## vfs.c:46:18
  10802c:    60 e8 49 00 	[r4 + 0] = r9 			  ## vfs.c:46:16
  108030:    80 ef 90 00 	cmp r9, 0			  ## vfs.c:47:13
  108034:    2c 10       	ifs (nzcv == 0) goto 88 <vfs_mount+0x7A : 10808e >			  ## vfs.c:47:13
  108036:    04 60       	[sp] = r4 
  108038:    00 ed 9a 04 	r10 = r9 + 4 
  10803c:    c7 2d       	r7 = [addr(92)]  <.GCPI185_0 : 108098 >
  10803e:    c6 2d       	r6 = [addr(92)]  <.GCPI185_1 : 10809c >
  108040:    20 e4 08 17 	r8 = [addr(92)]  <.GCPI185_2 : 1080a0 >
  108044:    16 08       	goto 44 <vfs_mount+0x5E : 108072 >
  108046:    bc 48       	r4 = [r7 + 8] 			  ## vfs.c:55:26
  108048:    34 21       	if (r4 == 0) goto 38 <vfs_mount+0x5C : 108070 >
  10804a:    38 48       	r0 = [r7 + 0] 
  10804c:    55 20       	if (r5 == 0) goto 10 <vfs_mount+0x44 : 108058 >			  ## vfs.c:56:17
  10804e:    29 c6       	r1 = r5 			  ## vfs.c:57:26
  108050:    dd e1 6f 78 	call -282868 <strcmp : c2f60 >			  ## vfs.c:57:26
  108054:    d8 20       	if (r0 != 0) goto 26 <vfs_mount+0x5C : 108070 >			  ## vfs.c:57:26
  108056:    04 08       	goto 8 <vfs_mount+0x4C : 108060 >			  ## vfs.c:57:26
  108058:    81 c6       	r1 = r8 			  ## vfs.c:61:26
  10805a:    dd e1 1f 78 	call -282878 <strcmp : c2f60 >			  ## vfs.c:61:26
  10805e:    80 20       	if (r0 == 0) goto 16 <vfs_mount+0x5C : 108070 >			  ## vfs.c:61:26
  108060:    90 c6       	r0 = r10 			  ## vfs.c:66:22
  108062:    41 40       	r1 = [sp+ 4] 			  ## vfs.c:66:22
  108064:    ac 01       	call r4			  ## vfs.c:66:22
  108066:    f0 20       	if (r0 == 0) goto 30 <vfs_mount+0x72 : 108086 >			  ## vfs.c:66:22
  108068:    f9 4a       	r1 = [r7 + 44] 			  ## vfs.c:70:34
  10806a:    21 20       	if (r1 == 0) goto 4 <vfs_mount+0x5C : 108070 >			  ## vfs.c:70:34
  10806c:    90 c6       	r0 = r10 			  ## vfs.c:71:21
  10806e:    a9 01       	call r1			  ## vfs.c:71:21
  108070:    e7 8a       	r7 += 92 			  ## vfs.c:54:5
  108072:    3e ce       	cmp r7, r6			  ## vfs.c:54:5
  108074:    e8 13       	if (nzcv < 0) goto -48 <vfs_mount+0x32 : 108046 >			  ## vfs.c:54:5
  108076:    04 40       	r4 = [sp] 
  108078:    20 48       	r0 = [r4 + 0] 			  ## vfs.c:76:28
  10807a:    ca 04       	call -108 <vfs_fhdl_free : 108010 >			  ## vfs.c:76:14
  10807c:    00 80       	r0 = 0 			  ## vfs.c:76:14
  10807e:    20 68       	[r4 + 0] = r0 			  ## vfs.c:76:12
  108080:    10 ea 08 80 	r0 = 32776 			  ## vfs.c:76:12
  108084:    06 08       	goto 12 <vfs_mount+0x7E : 108092 >			  ## vfs.c:76:12
  108086:    60 e8 97 00 	[r9 + 0] = r7 			  ## vfs.c:67:27
  10808a:    00 80       	r0 = 0 			  ## vfs.c:67:27
  10808c:    02 08       	goto 4 <vfs_mount+0x7E : 108092 >			  ## vfs.c:67:27
  10808e:    10 ea 0a 80 	r0 = 32778 
  108092:    08 cd       	sp += 8 
  108094:    1a c0       	{pc, r10-r4} = [sp++] 
  108096:    00 00       	nop


.GCPI185_0:
  108098:    58 dc 11 00     < 1170520 : 0x11DC58 >

.GCPI185_1:
  10809c:    6c dd 11 00     < 1170796 : 0x11DD6C >

.GCPI185_2:
  1080a0:    c3 c2 11 00     < 1163971 : 0x11C2C3 >

vfs_file_close:
  1080a4:    14 c2       	[--sp] = {rets, r4} 			  ## vfs.c:297:0
  1080a6:    04 c6       	r4 = r0 			  ## vfs.c:297:0
  1080a8:    20 48       	r0 = [r4 + 0] 			  ## vfs.c:298:25
  1080aa:    f0 20       	if (r0 == 0) goto 30 <vfs_file_close+0x26 : 1080ca >			  ## vfs.c:298:25
  1080ac:    01 48       	r1 = [r0 + 0] 			  ## vfs.c:303:20
  1080ae:    d1 20       	if (r1 == 0) goto 26 <vfs_file_close+0x26 : 1080ca >
  1080b0:    0a 4b       	r2 = [r1 + 48] 			  ## vfs.c:304:58
  1080b2:    b2 20       	if (r2 == 0) goto 22 <vfs_file_close+0x26 : 1080ca >			  ## vfs.c:304:58
  1080b4:    01 c6       	r1 = r0 			  ## vfs.c:306:31
  1080b6:    24 e8 13 01 	r3 = [++ r1 = 4] 			  ## vfs.c:306:31
  1080ba:    43 20       	if (r3 == 0) goto 8 <vfs_file_close+0x20 : 1080c4 >			  ## vfs.c:306:31
  1080bc:    08 c6       	r0 = r1 			  ## vfs.c:307:19
  1080be:    aa 01       	call r2			  ## vfs.c:307:19
  1080c0:    48 20       	if (r0 != 0) goto 8 <vfs_file_close+0x26 : 1080ca >
  1080c2:    20 48       	r0 = [r4 + 0] 
  1080c4:    a5 04       	call -182 <vfs_fhdl_free : 108010 >			  ## vfs.c:312:20
  1080c6:    00 80       	r0 = 0 			  ## vfs.c:312:18
  1080c8:    20 68       	[r4 + 0] = r0 			  ## vfs.c:312:18
  1080ca:    14 c0       	{pc, r4} = [sp++] 


vfs_openbypath:
  1080cc:    16 c2       	[--sp] = {rets, r6-r4} 			  ## vfs.c:81:0
  1080ce:    15 c6       	r5 = r2 			  ## vfs.c:81:0
  1080d0:    0c c6       	r4 = r1 			  ## vfs.c:81:0
  1080d2:    06 c6       	r6 = r0 			  ## vfs.c:81:0
  1080d4:    20 48       	r0 = [r4 + 0] 			  ## vfs.c:83:25
  1080d6:    38 20       	if (r0 != 0) goto 6 <vfs_openbypath+0x12 : 1080de >			  ## vfs.c:83:25
  1080d8:    97 04       	call -210 <vfs_hdl_malloc : 108008 >			  ## vfs.c:84:20
  1080da:    20 68       	[r4 + 0] = r0 			  ## vfs.c:84:18
  1080dc:    80 21       	if (r0 == 0) goto 48 <vfs_openbypath+0x42 : 10810e >			  ## vfs.c:84:18
  1080de:    e6 20       	if (r6 == 0) goto 28 <vfs_openbypath+0x30 : 1080fc >
  1080e0:    31 48       	r1 = [r6 + 0] 			  ## vfs.c:99:27
  1080e2:    01 68       	[r0 + 0] = r1 			  ## vfs.c:99:18
  1080e4:    31 48       	r1 = [r6 + 0] 			  ## vfs.c:100:18
  1080e6:    cb 48       	r3 = [r1 + 12] 			  ## vfs.c:102:22
  1080e8:    c3 20       	if (r3 == 0) goto 24 <vfs_openbypath+0x36 : 108102 >			  ## vfs.c:102:22
  1080ea:    72 48       	r2 = [r6 + 4] 			  ## vfs.c:103:38
  1080ec:    01 d1       	r1 = r0 + 4 			  ## vfs.c:103:53
  1080ee:    10 c6       	r0 = r2 			  ## vfs.c:103:15
  1080f0:    2a c6       	r2 = r5 			  ## vfs.c:103:15
  1080f2:    ab 01       	call r3			  ## vfs.c:103:15
  1080f4:    05 c6       	r5 = r0 			  ## vfs.c:103:15
  1080f6:    7d 20       	if (r5 != 0) goto 14 <vfs_openbypath+0x3A : 108106 >
  1080f8:    05 80       	r5 = 0 
  1080fa:    07 08       	goto 14 <vfs_openbypath+0x3E : 10810a >
  1080fc:    15 ea 0b 80 	r5 = 32779 
  108100:    02 08       	goto 4 <vfs_openbypath+0x3A : 108106 >
  108102:    15 ea 0d 80 	r5 = 32781 
  108106:    20 c6       	r0 = r4 			  ## vfs.c:113:9
  108108:    cd 04       	call -102 <vfs_file_close : 1080a4 >			  ## vfs.c:113:9
  10810a:    28 c6       	r0 = r5 			  ## vfs.c:116:1
  10810c:    16 c0       	{pc, r6-r4} = [sp++] 			  ## vfs.c:116:1
  10810e:    15 ea 0a 80 	r5 = 32778 
  108112:    fb 0f       	goto -10 <vfs_openbypath+0x3E : 10810a >


vfs_fs_close:
  108114:    14 c2       	[--sp] = {rets, r4} 			  ## vfs.c:319:0
  108116:    04 c6       	r4 = r0 			  ## vfs.c:319:0
  108118:    20 48       	r0 = [r4 + 0] 			  ## vfs.c:320:25
  10811a:    f0 20       	if (r0 == 0) goto 30 <vfs_fs_close+0x26 : 10813a >			  ## vfs.c:320:25
  10811c:    01 48       	r1 = [r0 + 0] 			  ## vfs.c:326:18
  10811e:    91 20       	if (r1 == 0) goto 18 <vfs_fs_close+0x1E : 108132 >
  108120:    ca 4a       	r2 = [r1 + 44] 			  ## vfs.c:327:58
  108122:    72 20       	if (r2 == 0) goto 14 <vfs_fs_close+0x1E : 108132 >			  ## vfs.c:327:58
  108124:    01 c6       	r1 = r0 			  ## vfs.c:328:28
  108126:    24 e8 13 01 	r3 = [++ r1 = 4] 			  ## vfs.c:328:28
  10812a:    33 20       	if (r3 == 0) goto 6 <vfs_fs_close+0x1E : 108132 >			  ## vfs.c:328:28
  10812c:    08 c6       	r0 = r1 			  ## vfs.c:329:19
  10812e:    aa 01       	call r2			  ## vfs.c:329:19
  108130:    20 48       	r0 = [r4 + 0] 			  ## vfs.c:329:19
  108132:    ff e1 df f6 	call -294 <vfs_fhdl_free : 108010 >			  ## vfs.c:337:14
  108136:    00 80       	r0 = 0 			  ## vfs.c:337:12
  108138:    20 68       	[r4 + 0] = r0 			  ## vfs.c:337:12
  10813a:    14 c0       	{pc, r4} = [sp++] 


vfs_get_attrs:
  10813c:    1f c2       	[--sp] = {rets} 			  ## vfs.c:357:0
  10813e:    60 20       	if (r0 == 0) goto 12 <vfs_get_attrs+0x10 : 10814c >			  ## vfs.c:357:0
  108140:    02 48       	r2 = [r0 + 0] 			  ## vfs.c:363:20
  108142:    42 20       	if (r2 == 0) goto 8 <vfs_get_attrs+0x10 : 10814c >
  108144:    92 4b       	r2 = [r2 + 56] 			  ## vfs.c:364:58
  108146:    22 20       	if (r2 == 0) goto 4 <vfs_get_attrs+0x10 : 10814c >
  108148:    40 48       	r0 = [r0 + 4] 			  ## vfs.c:366:40
  10814a:    aa 01       	call r2			  ## vfs.c:366:16
  10814c:    1f c0       	{pc} = [sp++] 


midi_decode_init:
  10814e:    14 c2       	[--sp] = {rets, r4} 			  ## midi_api.c:152:0
  108150:    ec cd       	sp += -20 			  ## midi_api.c:152:0
  108152:    00 80       	r0 = 0 			  ## midi_api.c:152:0
  108154:    00 61       	[sp+ 16] = r0 			  ## midi_api.c:153:11
  108156:    c0 60       	[sp+ 12] = r0 			  ## midi_api.c:154:11
  108158:    80 90       	r0 = sp + 16 			  ## midi_api.c:154:11
  10815a:    01 80       	r1 = 0 			  ## midi_api.c:157:11
  10815c:    02 80       	r2 = 0 			  ## midi_api.c:157:11
  10815e:    ff e1 9f f5 	call -334 <vfs_mount : 108014 >			  ## midi_api.c:157:11
  108162:    b8 21       	if (r0 != 0) goto 54 <midi_decode_init+0x4C : 10819a >
  108164:    04 41       	r4 = [sp+ 16] 			  ## midi_api.c:162:26
  108166:    61 90       	r1 = sp + 12 
  108168:    82 2b       	r2 = [addr(56)]  <.GCPI190_0 : 1081a0 >			  ## midi_api.c:162:11
  10816a:    20 c6       	r0 = r4 			  ## midi_api.c:162:11
  10816c:    af 04       	call -162 <vfs_openbypath : 1080cc >			  ## midi_api.c:162:11
  10816e:    80 20       	if (r0 == 0) goto 16 <midi_decode_init+0x32 : 108180 >
  108170:    40 2b       	r0 = [addr(52)]  <.GCPI190_1 : 1081a4 >			  ## midi_api.c:164:9
  108172:    dd e1 3f 73 	call -283034 <xprintf : c2fdc >			  ## midi_api.c:164:9
  108176:    61 90       	r1 = sp + 12 			  ## midi_api.c:164:9
  108178:    02 2b       	r2 = [addr(48)]  <.GCPI190_2 : 1081a8 >			  ## midi_api.c:165:15
  10817a:    20 c6       	r0 = r4 			  ## midi_api.c:165:15
  10817c:    a7 04       	call -178 <vfs_openbypath : 1080cc >			  ## midi_api.c:165:15
  10817e:    b8 20       	if (r0 != 0) goto 22 <midi_decode_init+0x48 : 108196 >
  108180:    c0 40       	r0 = [sp+ 12] 			  ## midi_api.c:174:19
  108182:    01 90       	r1 = sp + 0 
  108184:    db 04       	call -74 <vfs_get_attrs : 10813c >			  ## midi_api.c:174:5
  108186:    40 2a       	r0 = [addr(36)]  <.GCPI190_3 : 1081ac >			  ## midi_api.c:175:35
  108188:    40 49       	r0 = [r0 + 20] 			  ## midi_api.c:175:35
  10818a:    81 40       	r1 = [sp+ 8] 			  ## midi_api.c:175:51
  10818c:    40 d4       	r0 = r0 + r1 			  ## midi_api.c:175:44
  10818e:    01 2a       	r1 = [addr(32)]  <.GCPI190_4 : 1081b0 >			  ## midi_api.c:175:19
  108190:    88 69       	[r1 + 24] = r0 			  ## midi_api.c:175:19
  108192:    60 90       	r0 = sp + 12 			  ## midi_api.c:175:19
  108194:    87 04       	call -242 <vfs_file_close : 1080a4 >			  ## midi_api.c:177:5
  108196:    80 90       	r0 = sp + 16 
  108198:    bd 04       	call -134 <vfs_fs_close : 108114 >
  10819a:    14 cd       	sp += 20 
  10819c:    14 c0       	{pc, r4} = [sp++] 
  10819e:    00 00       	nop


.GCPI190_0:
  1081a0:    fe ab 11 00     < 1158142 : 0x11ABFE >

.GCPI190_1:
  1081a4:    11 ab 11 00     < 1157905 : 0x11AB11 >

.GCPI190_2:
  1081a8:    51 ab 11 00     < 1157969 : 0x11AB51 >

.GCPI190_3:
  1081ac:    8c 7e 00 00     < 32396 : 0x7E8C >

.GCPI190_4:
  1081b0:    60 1c 00 00     < 7264 : 0x1C60 >

midi_ctrl_decode_init:
  1081b4:    14 c2       	[--sp] = {rets, r4} 			  ## midi_ctrl_api.c:104:0
  1081b6:    ec cd       	sp += -20 			  ## midi_ctrl_api.c:104:0
  1081b8:    00 80       	r0 = 0 			  ## midi_ctrl_api.c:104:0
  1081ba:    00 61       	[sp+ 16] = r0 			  ## midi_ctrl_api.c:105:11
  1081bc:    c0 60       	[sp+ 12] = r0 			  ## midi_ctrl_api.c:106:11
  1081be:    80 90       	r0 = sp + 16 			  ## midi_ctrl_api.c:106:11
  1081c0:    01 80       	r1 = 0 			  ## midi_ctrl_api.c:109:11
  1081c2:    02 80       	r2 = 0 			  ## midi_ctrl_api.c:109:11
  1081c4:    ff e1 6f f2 	call -436 <vfs_mount : 108014 >			  ## midi_ctrl_api.c:109:11
  1081c8:    e8 21       	if (r0 != 0) goto 60 <midi_ctrl_decode_init+0x52 : 108206 >
  1081ca:    04 41       	r4 = [sp+ 16] 			  ## midi_ctrl_api.c:114:26
  1081cc:    61 90       	r1 = sp + 12 
  1081ce:    c2 2b       	r2 = [addr(60)]  <.GCPI191_0 : 10820c >			  ## midi_ctrl_api.c:114:11
  1081d0:    20 c6       	r0 = r4 			  ## midi_ctrl_api.c:114:11
  1081d2:    ff e1 bf f7 	call -266 <vfs_openbypath : 1080cc >			  ## midi_ctrl_api.c:114:11
  1081d6:    90 20       	if (r0 == 0) goto 18 <midi_ctrl_decode_init+0x36 : 1081ea >
  1081d8:    80 2b       	r0 = [addr(56)]  <.GCPI191_1 : 108210 >			  ## midi_ctrl_api.c:116:9
  1081da:    dd e1 ff 6f 	call -283138 <xprintf : c2fdc >			  ## midi_ctrl_api.c:116:9
  1081de:    61 90       	r1 = sp + 12 			  ## midi_ctrl_api.c:116:9
  1081e0:    42 2b       	r2 = [addr(52)]  <.GCPI191_2 : 108214 >			  ## midi_ctrl_api.c:117:15
  1081e2:    20 c6       	r0 = r4 			  ## midi_ctrl_api.c:117:15
  1081e4:    ff e1 2f f7 	call -284 <vfs_openbypath : 1080cc >			  ## midi_ctrl_api.c:117:15
  1081e8:    c8 20       	if (r0 != 0) goto 24 <midi_ctrl_decode_init+0x4E : 108202 >
  1081ea:    c0 40       	r0 = [sp+ 12] 			  ## midi_ctrl_api.c:126:19
  1081ec:    01 90       	r1 = sp + 0 
  1081ee:    a6 04       	call -180 <vfs_get_attrs : 10813c >			  ## midi_ctrl_api.c:126:5
  1081f0:    80 2a       	r0 = [addr(40)]  <.GCPI191_3 : 108218 >			  ## midi_ctrl_api.c:127:40
  1081f2:    40 49       	r0 = [r0 + 20] 			  ## midi_ctrl_api.c:127:40
  1081f4:    81 40       	r1 = [sp+ 8] 			  ## midi_ctrl_api.c:127:56
  1081f6:    40 d4       	r0 = r0 + r1 			  ## midi_ctrl_api.c:127:49
  1081f8:    41 2a       	r1 = [addr(36)]  <.GCPI191_4 : 10821c >			  ## midi_ctrl_api.c:127:24
  1081fa:    c8 69       	[r1 + 28] = r0 			  ## midi_ctrl_api.c:127:24
  1081fc:    60 90       	r0 = sp + 12 			  ## midi_ctrl_api.c:127:24
  1081fe:    ff e1 1f f5 	call -350 <vfs_file_close : 1080a4 >			  ## midi_ctrl_api.c:129:5
  108202:    80 90       	r0 = sp + 16 
  108204:    87 04       	call -242 <vfs_fs_close : 108114 >
  108206:    14 cd       	sp += 20 
  108208:    14 c0       	{pc, r4} = [sp++] 
  10820a:    00 00       	nop


.GCPI191_0:
  10820c:    9f ab 11 00     < 1158047 : 0x11AB9F >

.GCPI191_1:
  108210:    bd ab 11 00     < 1158077 : 0x11ABBD >

.GCPI191_2:
  108214:    fe ab 11 00     < 1158142 : 0x11ABFE >

.GCPI191_3:
  108218:    8c 7e 00 00     < 32396 : 0x7E8C >

.GCPI191_4:
  10821c:    60 1c 00 00     < 7264 : 0x1C60 >

dac_vol:
  108220:    14 c2       	[--sp] = {rets, r4} 			  ## dac_api.c:253:0
  108222:    90 9b       	cmp r0, 114			  ## dac_api.c:254:9
  108224:    30 10       	ifs (nzcv == 0) goto 96 <dac_vol+0x66 : 108286 >			  ## dac_api.c:254:9
  108226:    68 99       	cmp r0, 45
  108228:    07 10       	ifs (nzcv == 0) goto 14 <dac_vol+0x18 : 108238 >
  10822a:    58 99       	cmp r0, 43
  10822c:    02 03       	ifs (nzcv == 0) {			  ## dac_api.c:255:20
  10822e:    40 2e       		r0 = [addr(100)]  <.GCPI192_0 : 108294 >			  ## dac_api.c:255:20
  108230:    00 e8 00 c7 		r0 = b[r0 + 31] 			  ## dac_api.c:255:20
  108234:    41 d0       		r1 = r0 + 1 
                               	}			  ## dac_api.c:255:20
  108236:    05 08       	goto 10 <dac_vol+0x22 : 108242 >
  108238:    c0 2d       	r0 = [addr(92)]  <.GCPI192_0 : 108294 >			  ## dac_api.c:257:26
  10823a:    00 e8 00 c7 	r0 = b[r0 + 31] 			  ## dac_api.c:257:26
  10823e:    70 22       	if (r0 == 0) goto 78 <dac_vol+0x6E : 10828e >			  ## dac_api.c:257:26
  108240:    c1 d3       	r1 = r0 + -1 			  ## dac_api.c:258:24
  108242:    08 c9       	r0 = r1.b 			  ## dac_api.c:265:9
  108244:    f8 98       	cmp r0, 31			  ## dac_api.c:265:9
  108246:    20 03       	if (nzcv >= 0) {			  ## dac_api.c:265:9
  108248:    f9 80       		r1 = 31 
                               	}			  ## dac_api.c:265:9
  10824a:    80 2c       	r0 = [addr(72)]  <.GCPI192_0 : 108294 >			  ## dac_api.c:266:21
  10824c:    40 e8 01 c7 	b[r0 + 31] = r1 			  ## dac_api.c:266:21
  108250:    08 c9       	r0 = r1.b 			  ## dac_api.c:265:9
  108252:    04 2c       	r4 = [addr(64)]  <.GCPI192_0 : 108294 >			  ## dac_api.c:268:23
  108254:    00 e8 42 08 	r2 = b[r4 + 32] 			  ## dac_api.c:268:23
  108258:    00 f4 20 01 	tst r2, 1			  ## dac_api.c:268:9
  10825c:    09 11       	ifs (nzcv != 0) goto 18 <dac_vol+0x50 : 108270 >			  ## dac_api.c:268:9
  10825e:    00 a1       	r0 = r0 << 1 			  ## dac_api.c:273:31
  108260:    83 2b       	r3 = [addr(56)]  <.GCPI192_1 : 108298 >			  ## dac_api.c:273:31
  108262:    c0 d4       	r0 = r0 + r3 			  ## dac_api.c:273:31
  108264:    00 50       	r0 = h[r0 + 0] 			  ## dac_api.c:273:31
  108266:    e0 71       	h[r4 + 28] = r0 			  ## dac_api.c:273:29
  108268:    c0 f3 20 01 	r0 = r2 & (~1) 			  ## dac_api.c:275:22
  10826c:    40 e8 40 08 	b[r4 + 32] = r0 			  ## dac_api.c:275:22
  108270:    a2 49       	r2 = [r4 + 24] 			  ## dac_api.c:277:17
  108272:    42 20       	if (r2 == 0) goto 8 <dac_vol+0x5C : 10827c >			  ## dac_api.c:277:17
  108274:    e0 51       	r0 = h[r4 + 28] 			  ## dac_api.c:278:9
  108276:    aa 01       	call r2			  ## dac_api.c:278:9
  108278:    00 e8 41 c7 	r1 = b[r4 + 31] 			  ## dac_api.c:278:9
  10827c:    e2 51       	r2 = h[r4 + 28] 			  ## dac_api.c:280:5
  10827e:    09 c9       	r1 = r1.b 			  ## dac_api.c:280:5
  108280:    c0 29       	r0 = [addr(28)]  <.GCPI192_2 : 10829c >			  ## dac_api.c:280:5
  108282:    dd e1 bf 6a 	call -283306 <xprintf : c2fdc >			  ## dac_api.c:280:5
  108286:    c0 28       	r0 = [addr(12)]  <.GCPI192_0 : 108294 >			  ## dac_api.c:282:20
  108288:    00 e8 00 c7 	r0 = b[r0 + 31] 			  ## dac_api.c:282:5
  10828c:    14 c0       	{pc, r4} = [sp++] 			  ## dac_api.c:282:5
  10828e:    01 80       	r1 = 0 
  108290:    00 80       	r0 = 0 
  108292:    df 0f       	goto -66 <dac_vol+0x32 : 108252 >


.GCPI192_0:
  108294:    a4 25 00 00     < 9636 : 0x25A4 >

.GCPI192_1:
  108298:    40 61 11 00     < 1139008 : 0x116140 >

.GCPI192_2:
  10829c:    6d b6 11 00     < 1160813 : 0x11B66D >

chip_versions:
  1082a0:    00 29       	r0 = [addr(16)]  <.GCPI193_0 : 1082b0 >			  ## cpu.c:16:0
  1082a2:    00 48       	r0 = [r0 + 0] 			  ## cpu.c:18:28
  1082a4:    80 f3 00 0f 	r0 = r0 & 15 			  ## cpu.c:27:28
  1082a8:    08 8a       	r0 += 65 			  ## cpu.c:27:17
  1082aa:    80 c9       	r0 = r0.b (s) 			  ## cpu.c:31:5
  1082ac:    20 00       	rts			  ## cpu.c:31:5
  1082ae:    00 00       	nop			  ## cpu.c:31:5


.GCPI193_0:
  1082b0:    38 3c 09 00     < 605240 : 0x93C38 >

audio_analog_lookup:
  1082b4:    16 c2       	[--sp] = {rets, r6-r4} 			  ## audio_dac_analog.c:81:0
  1082b6:    0c c6       	r4 = r1 			  ## audio_dac_analog.c:81:0
  1082b8:    05 c6       	r5 = r0 			  ## audio_dac_analog.c:81:0
  1082ba:    ff e1 bf a7 	call -2826 <app_power_get_vbat : 1077b4 >			  ## audio_dac_analog.c:82:23
  1082be:    01 c6       	r1 = r0 			  ## audio_dac_analog.c:82:23
  1082c0:    00 f4 50 01 	tst r5, 1			  ## audio_dac_analog.c:84:9
  1082c4:    c6 2f       	r6 = [addr(124)]  <.GCPI194_0 : 108340 >			  ## audio_dac_analog.c:84:9
  1082c6:    1c 10       	ifs (nzcv == 0) goto 56 <audio_analog_lookup+0x4C : 108300 >			  ## audio_dac_analog.c:84:9
  1082c8:    eb 04       	call -42 <chip_versions : 1082a0 >			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\cpu\sh54\dac_cpu.c:69:16
  1082ca:    12 ea 10 0e 	r2 = 3600 			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\cpu\sh54\dac_cpu.c:71:9
  1082ce:    18 9a       	cmp r0, 67			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\cpu\sh54\dac_cpu.c:71:9
  1082d0:    a0 03       	ifs (nzcv >= 0) {			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\cpu\sh54\dac_cpu.c:71:9
  1082d2:    12 ea b8 0b 		r2 = 3000 
                               	}			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\cpu\sh54\dac_cpu.c:71:9
  1082d6:    54 20       	if (r4 == 0) goto 10 <audio_analog_lookup+0x2E : 1082e2 >
  1082d8:    0a ce       	cmp r1, r2			  ## audio_dac_analog.c:95:17
  1082da:    0b 12       	if (nzcv >= 0) goto 22 <audio_analog_lookup+0x3E : 1082f2 >			  ## audio_dac_analog.c:95:17
  1082dc:    30 48       	r0 = [r6 + 0] 			  ## audio_dac_analog.c:97:17
  1082de:    60 d8       	r0 |= 4096			  ## audio_dac_analog.c:97:17
  1082e0:    0e 08       	goto 28 <audio_analog_lookup+0x4A : 1082fe >			  ## audio_dac_analog.c:97:17
  1082e2:    33 48       	r3 = [r6 + 0] 
  1082e4:    0d f3 30 80 	r0 = r3 | 4096 			  ## audio_dac_analog.c:88:17
  1082e8:    63 db       	r3 &= (~4096)			  ## audio_dac_analog.c:88:17
  1082ea:    0a ce       	cmp r1, r2			  ## audio_dac_analog.c:86:17
  1082ec:    20 03       	if (nzcv >= 0) {			  ## audio_dac_analog.c:86:17
  1082ee:    18 c6       		r0 = r3 
                               	}			  ## audio_dac_analog.c:86:17
  1082f0:    06 08       	goto 12 <audio_analog_lookup+0x4A : 1082fe >			  ## audio_dac_analog.c:86:17
  1082f2:    00 ed 20 96 	r0 = r2 + 150 			  ## audio_dac_analog.c:98:49
  1082f6:    08 ce       	cmp r1, r0			  ## audio_dac_analog.c:98:24
  1082f8:    03 19       	if (nzcv <= 0) goto 6 <audio_analog_lookup+0x4C : 108300 >			  ## audio_dac_analog.c:98:24
  1082fa:    30 48       	r0 = [r6 + 0] 			  ## audio_dac_analog.c:100:17
  1082fc:    60 db       	r0 &= (~4096)			  ## audio_dac_analog.c:100:17
  1082fe:    30 68       	[r6 + 0] = r0 
  108300:    00 f4 50 06 	tst r5, 6			  ## audio_dac_analog.c:116:9
  108304:    1b 10       	ifs (nzcv == 0) goto 54 <audio_analog_lookup+0x88 : 10833c >			  ## audio_dac_analog.c:116:9
  108306:    ff e1 5f a5 	call -2902 <app_power_get_vbat : 1077b4 >			  ## audio_dac_analog.c:53:23
  10830a:    c4 20       	if (r4 == 0) goto 24 <audio_analog_lookup+0x70 : 108324 >
  10830c:    28 ea 01 c0 	r1 = 6291456 
  108310:    12 ea f6 09 	r2 = 2550 			  ## audio_dac_analog.c:68:21
  108314:    02 ce       	cmp r0, r2			  ## audio_dac_analog.c:68:13
  108316:    0d 18       	if (nzcv > 0) goto 26 <audio_analog_lookup+0x7E : 108332 >			  ## audio_dac_analog.c:68:13
  108318:    01 80       	r1 = 0 
  10831a:    12 ea 91 09 	r2 = 2449 			  ## audio_dac_analog.c:71:20
  10831e:    02 ce       	cmp r0, r2			  ## audio_dac_analog.c:71:20
  108320:    08 19       	if (nzcv <= 0) goto 16 <audio_analog_lookup+0x7E : 108332 >			  ## audio_dac_analog.c:71:20
  108322:    0c 08       	goto 24 <audio_analog_lookup+0x88 : 10833c >			  ## audio_dac_analog.c:71:20
  108324:    12 ea c4 09 	r2 = 2500 			  ## audio_dac_analog.c:57:21
  108328:    28 ea 01 c0 	r1 = 6291456 			  ## audio_dac_analog.c:59:9
  10832c:    02 ce       	cmp r0, r2			  ## audio_dac_analog.c:59:9
  10832e:    90 03       	if (nzcv <= 0) {			  ## audio_dac_analog.c:59:9
  108330:    01 80       		r1 = 0 
                               	}			  ## audio_dac_analog.c:59:9
  108332:    f0 4f       	r0 = [r6 + -4] 
  108334:    c8 f3 00 60 	r0 = r0 & (~14680064) 
  108338:    08 da       	r0 |= r1 
  10833a:    f0 6f       	[r6 + -4] = r0 
  10833c:    16 c0       	{pc, r6-r4} = [sp++] 
  10833e:    00 00       	nop


.GCPI194_0:
  108340:    30 14 09 00     < 594992 : 0x91430 >

dac_power_on:
  108344:    16 c2       	[--sp] = {rets, r6-r4} 			  ## audio.c:73:0
  108346:    04 c6       	r4 = r0 			  ## audio.c:73:0
  108348:    91 29       	r1 = [addr(280)]  <.GCPI195_0 : 108460 >			  ## audio.c:46:5
  10834a:    48 80       	r0 = 9 			  ## audio.c:46:5
  10834c:    22 80       	r2 = 4 			  ## audio.c:46:5
  10834e:    ff e1 0f d6 	call -1344 <HWI_Install : 107e12 >			  ## audio.c:46:5
  108352:    50 29       	r0 = [addr(276)]  <.GCPI195_2 : 108468 >			  ## audio.c:46:5
  108354:    07 e3 00 c0 	[r0 + 0] &= (~25165824) 			  ## audio.c:48:5
  108358:    01 48       	r1 = [r0 + 0] 			  ## audio.c:48:5
  10835a:    01 68       	[r0 + 0] = r1 			  ## audio.c:48:5
  10835c:    15 29       	r5 = [addr(272)]  <.GCPI195_3 : 10846c >			  ## audio.c:48:5
  10835e:    0a e2 54 80 	[r5 + 16] |= 262144 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:20:5
  108362:    00 e2 54 40 	[r5 + 16] |= 64 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:21:5
  108366:    00 e2 54 20 	[r5 + 16] |= 32 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:23:5
  10836a:    0a e3 54 00 	[r5 + 16] &= (~524288) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:23:5
  10836e:    4e 2f       	r6 = [addr(244)]  <.GCPI195_1 : 108464 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_dac.c:90:37
  108370:    30 c6       	r0 = r6 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_dac.c:90:37
  108372:    24 e8 01 2e 	r1 = [++ r0 = 184] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_dac.c:90:37
  108376:    29 6f       	[r5 + -16] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_dac.c:90:22
  108378:    01 80       	r1 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_dac.c:90:22
  10837a:    e9 6e       	[r5 + -20] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_dac.c:92:22
  10837c:    69 6e       	[r5 + -28] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_dac.c:93:23
  10837e:    a9 6e       	[r5 + -24] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_dac.c:94:23
  108380:    81 50       	r1 = h[r0 + 8] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_dac.c:95:32
  108382:    49 a1       	r1 = r1 >> 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_dac.c:95:39
  108384:    69 6f       	[r5 + -12] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_dac.c:95:22
  108386:    fc e2 59 80 	[r5 + -28] |= 16384 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_dac.c:99:23
  10838a:    80 54       	r0 = h[r0 + 10] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_dac.c:100:33
  10838c:    00 f3 00 05 	r0 = r0 | 5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_dac.c:100:60
  108390:    68 6e       	[r5 + -28] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_dac.c:100:23
  108392:    44 20       	if (r4 == 0) goto 8 <dac_power_on+0x58 : 10839c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_dac.c:100:23
  108394:    10 ea e8 03 	r0 = 1000 			  ## dac_cpu.c:33:9
  108398:    7b e1 8f e5 	call -1082192 <udelay : 4c >			  ## dac_cpu.c:33:9
  10839c:    68 4e       	r0 = [r5 + -28] 			  ## dac_cpu.c:54:35
  10839e:    80 f3 00 e0 	r0 = r0 & 224 			  ## dac_cpu.c:54:44
  1083a2:    80 ef 00 c0 	cmp r0, 192			  ## dac_cpu.c:54:9
  1083a6:    3b 11       	ifs (nzcv != 0) goto 118 <dac_power_on+0xDA : 10841e >			  ## dac_cpu.c:54:9
  1083a8:    88 2c       	r0 = [addr(200)]  <.GCPI195_4 : 108470 >
  1083aa:    f0 e2 0d 01 	[r0 + -12] |= 1 			  ## dac_cpu.c:55:23
  1083ae:    f0 e3 0e 01 	[r0 + -8] &= (~1) 			  ## dac_cpu.c:56:23
  1083b2:    00 e3 03 01 	[r0 + 12] &= (~1) 			  ## dac_cpu.c:57:24
  1083b6:    f0 e3 0f 01 	[r0 + -4] &= (~1) 			  ## dac_cpu.c:58:22
  1083ba:    00 e3 00 01 	[r0 + 0] &= (~1) 			  ## dac_cpu.c:59:22
  1083be:    04 e3 54 40 	[r5 + 16] &= (~3221225472) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:199:5
  1083c2:    05 e3 54 70 	[r5 + 16] &= (~1006632960) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:206:5
  1083c6:    07 e3 54 80 	[r5 + 16] &= (~16777216) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:207:5
  1083ca:    09 e2 54 80 	[r5 + 16] |= 1048576 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:209:5
  1083ce:    0a e2 54 80 	[r5 + 16] |= 262144 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:211:5
  1083d2:    0b e3 54 78 	[r5 + 16] &= (~253952) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:212:5
  1083d6:    28 49       	r0 = [r5 + 16] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:216:5
  1083d8:    cd f3 00 e0 	r0 = r0 & (~7168) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:216:5
  1083dc:    0e f3 00 40 	r0 = r0 | 3072 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:216:5
  1083e0:    28 69       	[r5 + 16] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:216:5
  1083e2:    28 49       	r0 = [r5 + 16] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:217:5
  1083e4:    cf f3 00 40 	r0 = r0 & (~768) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:217:5
  1083e8:    48 d8       	r0 |= 512			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:217:5
  1083ea:    28 69       	[r5 + 16] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:217:5
  1083ec:    00 e2 54 80 	[r5 + 16] |= 128 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:219:5
  1083f0:    00 e2 54 40 	[r5 + 16] |= 64 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:220:5
  1083f4:    00 e2 54 20 	[r5 + 16] |= 32 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:221:5
  1083f8:    00 e2 54 10 	[r5 + 16] |= 16 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:222:5
  1083fc:    00 e3 54 0f 	[r5 + 16] &= (~15) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:223:5
  108400:    04 e3 55 70 	[r5 + 20] &= (~4026531840) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:226:5
  108404:    00 e3 55 02 	[r5 + 20] &= (~2) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:227:5
  108408:    04 e3 56 70 	[r5 + 24] &= (~4026531840) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:230:5
  10840c:    14 80       	r4 = 2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:230:5
  10840e:    10 80       	r0 = 2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:232:5
  108410:    01 80       	r1 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:232:5
  108412:    ff e1 ff f4 	call -354 <audio_analog_lookup : 1082b4 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:232:5
  108416:    07 e2 54 00 	[r5 + 16] |= 33554432 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:234:5
  10841a:    08 80       	r0 = 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:234:5
  10841c:    18 08       	goto 48 <dac_power_on+0x10A : 10844e >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:234:5
  10841e:    68 49       	r0 = [r5 + 20] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:142:5
  108420:    11 ea ff 0f 	r1 = 4095 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:142:5
  108424:    88 da       	r0 &= r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:142:5
  108426:    68 69       	[r5 + 20] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:142:5
  108428:    68 49       	r0 = [r5 + 20] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:162:5
  10842a:    c0 f3 00 78 	r0 = r0 & (~120) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:162:5
  10842e:    00 f3 00 38 	r0 = r0 | 56 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:162:5
  108432:    68 69       	[r5 + 20] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:162:5
  108434:    0e e2 55 f0 	[r5 + 20] |= 1920 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:163:5
  108438:    08 e2 55 c0 	[r5 + 20] |= 6291456 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:164:5
  10843c:    0c 80       	r4 = 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:164:5
  10843e:    08 80       	r0 = 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:166:5
  108440:    01 80       	r1 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:166:5
  108442:    ff e1 7f f3 	call -402 <audio_analog_lookup : 1082b4 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:166:5
  108446:    00 e3 55 04 	[r5 + 20] &= (~4) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:168:5
  10844a:    10 ea 00 08 	r0 = 2048 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:168:5
  10844e:    69 49       	r1 = [r5 + 20] 
  108450:    08 da       	r0 |= r1 
  108452:    68 69       	[r5 + 20] = r0 
  108454:    24 e8 60 19 	r0 = [++ r6 = 100] 
  108458:    20 da       	r0 |= r4 
  10845a:    30 68       	[r6 + 0] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:237:5
  10845c:    16 c0       	{pc, r6-r4} = [sp++] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:237:5
  10845e:    00 00       	nop			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_dac_analog.c:237:5


.GCPI195_0:
  108460:    f4 0a 00 00     < 2804 : 0xAF4 >

.GCPI195_1:
  108464:    60 1c 00 00     < 7264 : 0x1C60 >

.GCPI195_2:
  108468:    00 18 09 00     < 595968 : 0x91800 >

.GCPI195_3:
  10846c:    1c 14 09 00     < 594972 : 0x9141C >

.GCPI195_4:
  108470:    38 00 09 00     < 589880 : 0x90038 >

vfs_ioctl:
  108474:    14 c2       	[--sp] = {rets, r4} 			  ## vfs.c:372:0
  108476:    03 c6       	r3 = r0 			  ## vfs.c:372:0
  108478:    a3 20       	if (r3 == 0) goto 20 <vfs_ioctl+0x1A : 10848e >			  ## vfs.c:372:0
  10847a:    1c 48       	r4 = [r3 + 0] 			  ## vfs.c:378:20
  10847c:    10 ea 0d 80 	r0 = 32781 
  108480:    54 20       	if (r4 == 0) goto 10 <vfs_ioctl+0x18 : 10848c >
  108482:    20 e8 44 12 	r4 = [r4 + 72] 			  ## vfs.c:380:58
  108486:    24 20       	if (r4 == 0) goto 4 <vfs_ioctl+0x18 : 10848c >
  108488:    58 48       	r0 = [r3 + 4] 			  ## vfs.c:381:36
  10848a:    ac 01       	call r4			  ## vfs.c:381:16
  10848c:    14 c0       	{pc, r4} = [sp++] 
  10848e:    10 ea 0c 80 	r0 = 32780 
  108492:    14 c0       	{pc, r4} = [sp++] 


dev_open:
  108494:    17 c2       	[--sp] = {rets, r7-r4} 			  ## device_api.c:19:0
  108496:    fc cd       	sp += -4 			  ## device_api.c:19:0
  108498:    05 c6       	r5 = r0 			  ## device_api.c:19:0
  10849a:    04 80       	r4 = 0 			  ## device_api.c:23:20
  10849c:    04 60       	[sp] = r4 			  ## device_api.c:23:20
  10849e:    86 2d       	r6 = [addr(88)]  <.GCPI197_0 : 1084f8 >
  1084a0:    c7 2d       	r7 = [addr(92)]  <.GCPI197_1 : 1084fc >
  1084a2:    06 08       	goto 12 <dev_open+0x1C : 1084b0 >
  1084a4:    30 48       	r0 = [r6 + 0] 			  ## device_api.c:25:24
  1084a6:    29 c6       	r1 = r5 			  ## device_api.c:25:14
  1084a8:    dd e1 af 55 	call -283980 <strcmp : c2f60 >			  ## device_api.c:25:14
  1084ac:    40 20       	if (r0 == 0) goto 8 <dev_open+0x22 : 1084b6 >			  ## device_api.c:25:14
  1084ae:    66 88       	r6 += 12 			  ## device_api.c:24:5
  1084b0:    37 ce       	cmp r6, r7			  ## device_api.c:24:5
  1084b2:    f8 13       	if (nzcv < 0) goto -16 <dev_open+0x10 : 1084a4 >			  ## device_api.c:24:5
  1084b4:    1d 08       	goto 58 <dev_open+0x5C : 1084f0 >			  ## device_api.c:24:5
  1084b6:    70 48       	r0 = [r6 + 4] 			  ## device_api.c:26:22
  1084b8:    83 48       	r3 = [r0 + 8] 			  ## device_api.c:26:27
  1084ba:    01 90       	r1 = sp + 0 			  ## device_api.c:26:27
  1084bc:    04 80       	r4 = 0 
  1084be:    28 c6       	r0 = r5 			  ## device_api.c:26:19
  1084c0:    02 80       	r2 = 0 			  ## device_api.c:26:19
  1084c2:    ab 01       	call r3			  ## device_api.c:26:19
  1084c4:    05 40       	r5 = [sp] 			  ## device_api.c:27:25
  1084c6:    65 20       	if (r5 == 0) goto 12 <dev_open+0x40 : 1084d4 >
  1084c8:    90 20       	if (r0 == 0) goto 18 <dev_open+0x48 : 1084dc >			  ## device_api.c:31:17
  1084ca:    40 2b       	r0 = [addr(52)]  <.GCPI197_2 : 108500 >			  ## device_api.c:32:17
  1084cc:    dd e1 6f 58 	call -283892 <xprintf : c2fdc >			  ## device_api.c:32:17
  1084d0:    04 80       	r4 = 0 			  ## device_api.c:32:17
  1084d2:    0e 08       	goto 28 <dev_open+0x5C : 1084f0 >			  ## device_api.c:32:17
  1084d4:    00 2b       	r0 = [addr(48)]  <.GCPI197_3 : 108504 >			  ## device_api.c:28:17
  1084d6:    dd e1 1f 58 	call -283902 <xprintf : c2fdc >			  ## device_api.c:28:17
  1084da:    0a 08       	goto 20 <dev_open+0x5C : 1084f0 >			  ## device_api.c:28:17
  1084dc:    70 48       	r0 = [r6 + 4] 			  ## device_api.c:35:30
  1084de:    a8 68       	[r5 + 8] = r0 			  ## device_api.c:35:25
  1084e0:    dd e1 0f 52 	call -284096 <local_irq_disable : c2f24 >			  ## atomic.h:16:5
  1084e4:    28 48       	r0 = [r5 + 0] 			  ## atomic.h:18:14
  1084e6:    40 d0       	r0 = r0 + 1 			  ## atomic.h:19:22
  1084e8:    28 68       	[r5 + 0] = r0 			  ## atomic.h:19:16
  1084ea:    dd e1 9f 51 	call -284110 <local_irq_enable : c2f20 >			  ## atomic.h:21:5
  1084ee:    04 40       	r4 = [sp] 			  ## device_api.c:37:20
  1084f0:    20 c6       	r0 = r4 			  ## device_api.c:41:1
  1084f2:    04 cd       	sp += 4 			  ## device_api.c:41:1
  1084f4:    17 c0       	{pc, r7-r4} = [sp++] 			  ## device_api.c:41:1
  1084f6:    00 00       	nop			  ## device_api.c:41:1


.GCPI197_0:
  1084f8:    4c dc 11 00     < 1170508 : 0x11DC4C >

.GCPI197_1:
  1084fc:    58 dc 11 00     < 1170520 : 0x11DC58 >

.GCPI197_2:
  108500:    8a d5 11 00     < 1168778 : 0x11D58A >

.GCPI197_3:
  108504:    6c d5 11 00     < 1168748 : 0x11D56C >

dev_close:
  108508:    15 c2       	[--sp] = {rets, r5, r4} 			  ## device_api.c:98:0
  10850a:    04 c6       	r4 = r0 			  ## device_api.c:98:0
  10850c:    dd e1 af 50 	call -284140 <local_irq_disable : c2f24 >			  ## atomic.h:32:5
  108510:    20 48       	r0 = [r4 + 0] 			  ## atomic.h:34:14
  108512:    c5 d3       	r5 = r0 + -1 			  ## atomic.h:35:22
  108514:    25 68       	[r4 + 0] = r5 			  ## atomic.h:35:16
  108516:    dd e1 3f 50 	call -284154 <local_irq_enable : c2f20 >			  ## atomic.h:37:5
  10851a:    00 80       	r0 = 0 			  ## atomic.h:37:5
  10851c:    5d 20       	if (r5 != 0) goto 10 <dev_close+0x20 : 108528 >			  ## atomic.h:37:5
  10851e:    a1 48       	r1 = [r4 + 8] 			  ## device_api.c:101:21
  108520:    49 4a       	r1 = [r1 + 36] 			  ## device_api.c:101:26
  108522:    21 20       	if (r1 == 0) goto 4 <dev_close+0x20 : 108528 >			  ## device_api.c:101:26
  108524:    20 c6       	r0 = r4 			  ## device_api.c:102:20
  108526:    a9 01       	call r1			  ## device_api.c:102:20
  108528:    15 c0       	{pc, r5, r4} = [sp++] 


wdt_tx_con:
  10852a:    01 c6       	r1 = r0 			  ## wdt.c:23:0
  10852c:    10 ea 80 00 	r0 = 128 			  ## wdt.c:24:5
  108530:    7b fa ef fe 	goto -1081380 <p33_tx_1byte : 510 >			  ## wdt.c:24:5


wdt_close:
  108534:    00 80       	r0 = 0 			  ## wdt.c:45:0
  108536:    f9 0f       	goto -14 <wdt_tx_con : 10852a >			  ## wdt.c:46:5


vm_isr_response_index_register:
  108538:    01 29       	r1 = [addr(16)]  <.GCPI225_0 : 108548 >			  ## vm_sfc.c:93:0
  10853a:    24 e8 12 11 	r2 = [++ r1 = 68] 			  ## vm_sfc.c:111:26
  10853e:    00 f1 20 00 	r0 = r2 | setbit(r0) 			  ## vm_sfc.c:111:26
  108542:    08 68       	[r1 + 0] = r0 			  ## vm_sfc.c:111:26
  108544:    20 00       	rts			  ## vm_sfc.c:99:1
  108546:    00 00       	nop			  ## vm_sfc.c:99:1


.GCPI225_0:
  108548:    60 1c 00 00     < 7264 : 0x1C60 >

key_table_sel:
  10854c:    14 c2       	[--sp] = {rets, r4} 			  ## key.c:46:0
  10854e:    04 c6       	r4 = r0 			  ## key.c:46:0
  108550:    dd e1 8f 4e 	call -284208 <local_irq_disable : c2f24 >			  ## key.c:47:5
  108554:    c0 28       	r0 = [addr(12)]  <.GCPI226_0 : 108560 >			  ## key.c:48:20
  108556:    44 6a       	[r0 + 36] = r4 			  ## key.c:48:20
  108558:    dd e1 2f 4e 	call -284220 <local_irq_enable : c2f20 >			  ## key.c:49:5
  10855c:    14 c0       	{pc, r4} = [sp++] 			  ## key.c:49:5
  10855e:    00 00       	nop			  ## key.c:49:5


.GCPI226_0:
  108560:    60 1c 00 00     < 7264 : 0x1C60 >

decoder_init:
  108564:    15 c2       	[--sp] = {rets, r5, r4} 			  ## decoder_api.c:70:0
  108566:    04 80       	r4 = 0 			  ## decoder_api.c:70:0
  108568:    85 2a       	r5 = [addr(40)]  <.GCPI227_0 : 108590 >			  ## decoder_api.c:70:0
  10856a:    07 08       	goto 14 <decoder_init+0x16 : 10857a >			  ## decoder_api.c:70:0
  10856c:    20 e7 50 04 	r0 = [r5 + r4] 			  ## decoder_api.c:77:23
  108570:    01 80       	r1 = 0 			  ## decoder_api.c:78:9
  108572:    c2 81       	r2 = 56 			  ## decoder_api.c:78:9
  108574:    dd e1 2f 4f 	call -284188 <memset : c2f5c >			  ## decoder_api.c:78:9
  108578:    24 d1       	r4 = r4 + 4 			  ## decoder_api.c:76:5
  10857a:    c4 98       	cmp r4, 24			  ## decoder_api.c:76:5
  10857c:    f7 11       	ifs (nzcv != 0) goto -18 <decoder_init+0x8 : 10856c >			  ## decoder_api.c:76:5
  10857e:    40 29       	r0 = [addr(20)]  <.GCPI227_1 : 108594 >
  108580:    09 80       	r1 = 1 
  108582:    01 78       	b[r0 + 0] = r1 
  108584:    41 29       	r1 = [addr(20)]  <.GCPI227_2 : 108598 >			  ## decoder_api.c:81:5
  108586:    e0 80       	r0 = 28 			  ## decoder_api.c:81:5
  108588:    0a 80       	r2 = 1 			  ## decoder_api.c:81:5
  10858a:    ff e1 2f c4 	call -1916 <HWI_Install : 107e12 >			  ## decoder_api.c:81:5
  10858e:    15 c0       	{pc, r5, r4} = [sp++] 			  ## decoder_api.c:81:5


.GCPI227_0:
  108590:    00 0d 00 00     < 3328 : 0xD00 >

.GCPI227_1:
  108594:    28 1c 00 00     < 7208 : 0x1C28 >

.GCPI227_2:
  108598:    9c e9 10 00     < 1108380 : 0x10E99C >

device_open:
  10859c:    15 c2       	[--sp] = {rets, r5, r4} 			  ## device_mge.c:35:0
  10859e:    05 c6       	r5 = r0 			  ## device_mge.c:35:0
  1085a0:    04 80       	r4 = 0 			  ## device_mge.c:35:0
  1085a2:    0d 98       	cmp r5, 1			  ## device_mge.c:36:9
  1085a4:    10 11       	ifs (nzcv != 0) goto 32 <device_open+0x2A : 1085c6 >			  ## device_mge.c:36:9
  1085a6:    28 a2       	r0 = r5 << 2 			  ## device_mge.c:46:55
  1085a8:    41 2a       	r1 = [addr(36)]  <.GCPI228_0 : 1085cc >			  ## device_mge.c:46:55
  1085aa:    20 e7 10 00 	r0 = [r1 + r0] 			  ## device_mge.c:46:55
  1085ae:    ff e1 1f f7 	call -286 <dev_open : 108494 >			  ## device_mge.c:46:38
  1085b2:    29 a3       	r1 = r5 << 3 			  ## device_mge.c:46:27
  1085b4:    c2 29       	r2 = [addr(28)]  <.GCPI228_1 : 1085d0 >			  ## device_mge.c:46:27
  1085b6:    60 e7 20 01 	[r2 + r1] = r0 			  ## device_mge.c:46:36
  1085ba:    50 20       	if (r0 == 0) goto 10 <device_open+0x2A : 1085c6 >			  ## device_mge.c:46:36
  1085bc:    89 d4       	r1 = r1 + r2 			  ## device_mge.c:50:27
  1085be:    4a 58       	r2 = b[r1 + 4] 			  ## device_mge.c:50:42
  1085c0:    52 d0       	r2 = r2 + 1 			  ## device_mge.c:50:42
  1085c2:    4a 78       	b[r1 + 4] = r2 			  ## device_mge.c:50:42
  1085c4:    04 c6       	r4 = r0 			  ## device_mge.c:50:42
  1085c6:    20 c6       	r0 = r4 			  ## device_mge.c:55:1
  1085c8:    15 c0       	{pc, r5, r4} = [sp++] 			  ## device_mge.c:55:1
  1085ca:    00 00       	nop			  ## device_mge.c:55:1


.GCPI228_0:
  1085cc:    80 61 11 00     < 1139072 : 0x116180 >

.GCPI228_1:
  1085d0:    30 19 00 00     < 6448 : 0x1930 >

simple_dev_fs_mount:
  1085d4:    15 c2       	[--sp] = {rets, r5, r4} 			  ## simple_play_file.c:39:0
  1085d6:    04 c6       	r4 = r0 			  ## simple_play_file.c:39:0
  1085d8:    25 c6       	r5 = r4 			  ## simple_play_file.c:40:21
  1085da:    04 e8 50 86 	r0 = b[++ r5 = 26] 			  ## simple_play_file.c:40:21
  1085de:    de 04       	call -68 <device_open : 10859c >			  ## simple_play_file.c:40:21
  1085e0:    01 c6       	r1 = r0 			  ## simple_play_file.c:40:21
  1085e2:    e1 69       	[r4 + 28] = r1 			  ## simple_play_file.c:40:19
  1085e4:    a1 20       	if (r1 == 0) goto 20 <simple_dev_fs_mount+0x26 : 1085fa >			  ## simple_play_file.c:40:19
  1085e6:    42 2a       	r2 = [addr(36)]  <.GCPI229_1 : 10860c >			  ## simple_play_file.c:45:15
  1085e8:    20 c6       	r0 = r4 			  ## simple_play_file.c:45:15
  1085ea:    ff e1 3f d1 	call -1498 <vfs_mount : 108014 >			  ## simple_play_file.c:45:15
  1085ee:    01 c6       	r1 = r0 			  ## simple_play_file.c:45:15
  1085f0:    31 20       	if (r1 == 0) goto 6 <simple_dev_fs_mount+0x24 : 1085f8 >
  1085f2:    c0 29       	r0 = [addr(28)]  <.GCPI229_2 : 108610 >			  ## simple_play_file.c:47:9
  1085f4:    dd e1 2f 4f 	call -284188 <xprintf : c2fdc >			  ## simple_play_file.c:47:9
  1085f8:    15 c0       	{pc, r5, r4} = [sp++] 
  1085fa:    28 58       	r0 = b[r5 + 0] 			  ## simple_play_file.c:41:62
  1085fc:    40 27       	if (r0 == 0) goto -24 <simple_dev_fs_mount+0x12 : 1085e6 >			  ## simple_play_file.c:41:62
  1085fe:    80 28       	r0 = [addr(8)]  <.GCPI229_0 : 108608 >			  ## simple_play_file.c:42:9
  108600:    dd e1 cf 4e 	call -284200 <xprintf : c2fdc >			  ## simple_play_file.c:42:9
  108604:    15 c0       	{pc, r5, r4} = [sp++] 			  ## simple_play_file.c:42:9
  108606:    00 00       	nop			  ## simple_play_file.c:42:9


.GCPI229_0:
  108608:    a7 b8 11 00     < 1161383 : 0x11B8A7 >

.GCPI229_1:
  10860c:    cd b8 11 00     < 1161421 : 0x11B8CD >

.GCPI229_2:
  108610:    d5 b8 11 00     < 1161429 : 0x11B8D5 >

post_msg:
  108614:    01 c2       	[--sp] = {r3-r1} 			  ## msg.c:188:0
  108616:    14 c2       	[--sp] = {rets, r4} 			  ## msg.c:188:0
  108618:    f8 cd       	sp += -8 			  ## msg.c:188:0
  10861a:    dd e1 3f 48 	call -284410 <local_irq_disable : c2f24 >			  ## msg.c:193:5
  10861e:    80 90       	r0 = sp + 16 			  ## msg.c:193:5
  108620:    00 60       	[sp] = r0 			  ## msg.c:194:5
  108622:    80 2b       	r0 = [addr(56)]  <.GCPI230_0 : 10865c >			  ## msg.c:195:10
  108624:    00 ed 04 44 	r4 = r0 + 68 			  ## msg.c:195:10
  108628:    20 c6       	r0 = r4 			  ## msg.c:195:10
  10862a:    11 80       	r1 = 2 			  ## msg.c:195:10
  10862c:    dd e1 8f 4a 	call -284336 <cbuf_is_write_able : c2f80 >			  ## msg.c:195:10
  108630:    e0 20       	if (r0 == 0) goto 28 <post_msg+0x3A : 10864e >			  ## msg.c:195:10
  108632:    00 40       	r0 = [sp] 			  ## msg.c:200:60
  108634:    01 d1       	r1 = r0 + 4 			  ## msg.c:200:60
  108636:    01 60       	[sp] = r1 			  ## msg.c:200:60
  108638:    00 48       	r0 = [r0 + 0] 			  ## msg.c:200:60
  10863a:    11 ea ff 0f 	r1 = 4095 			  ## msg.c:201:16
  10863e:    88 da       	r0 &= r1 			  ## msg.c:201:16
  108640:    50 e9 00 01 	h[sp+ 4] = r0 			  ## msg.c:201:14
  108644:    21 90       	r1 = sp + 4 			  ## msg.c:201:14
  108646:    20 c6       	r0 = r4 			  ## msg.c:204:5
  108648:    12 80       	r2 = 2 			  ## msg.c:204:5
  10864a:    7b e1 ff ce 	call -1082914 <cbuf_write : 2c >			  ## msg.c:204:5
  10864e:    dd e1 7f 46 	call -284466 <local_irq_enable : c2f20 >
  108652:    08 cd       	sp += 8 
  108654:    04 c0       	{r4} = [sp++] 
  108656:    40 c4       	{rets} = [sp++] 
  108658:    0c cd       	sp += 12 
  10865a:    20 00       	rts


.GCPI230_0:
  10865c:    60 1d 00 00     < 7520 : 0x1D60 >

get_msg:
  108660:    18 c2       	[--sp] = {rets, r8-r4} 			  ## msg.c:120:0
  108662:    f8 cd       	sp += -8 			  ## msg.c:120:0
  108664:    04 c6       	r4 = r0 			  ## msg.c:120:0
  108666:    06 80       	r6 = 0 			  ## msg.c:120:0
  108668:    46 60       	[sp+ 4] = r6 			  ## msg.c:121:9
  10866a:    dd e1 bf 45 	call -284490 <local_irq_disable : c2f24 >			  ## msg.c:126:5
  10866e:    dd e1 9f 45 	call -284494 <local_irq_disable : c2f24 >			  ## msg.c:87:5
  108672:    88 2d       	r0 = [addr(216)]  <.GCPI231_0 : 10874c >			  ## msg.c:87:5
  108674:    00 ed 05 3e 	r5 = r0 + 62 			  ## msg.c:87:5
  108678:    20 e4 08 35 	r8 = [addr(212)]  <.GCPI231_1 : 108750 >			  ## msg.c:87:5
  10867c:    00 ed 80 88 	r0 = r8 + 136 
  108680:    01 80       	r1 = 0 
  108682:    09 08       	goto 18 <get_msg+0x36 : 108696 >
  108684:    02 48       	r2 = [r0 + 0] 			  ## msg.c:90:61
  108686:    00 f5 27 00 	r7 = clz(r2) 			  ## msg.c:90:9
  10868a:    07 99       	cmp r7, 32			  ## msg.c:91:13
  10868c:    09 11       	ifs (nzcv != 0) goto 18 <get_msg+0x40 : 1086a0 >			  ## msg.c:91:13
  10868e:    00 d1       	r0 = r0 + 4 			  ## msg.c:89:5
  108690:    06 8f       	r6 += -32 			  ## msg.c:89:5
  108692:    05 8a       	r5 += 64 			  ## msg.c:89:5
  108694:    49 d0       	r1 = r1 + 1 			  ## msg.c:89:39
  108696:    09 98       	cmp r1, 1			  ## msg.c:89:5
  108698:    f5 19       	if (nzcv <= 0) goto -22 <get_msg+0x24 : 108684 >			  ## msg.c:89:5
  10869a:    dd e1 1f 44 	call -284542 <local_irq_enable : c2f20 >			  ## msg.c:97:5
  10869e:    08 08       	goto 16 <get_msg+0x50 : 1086b0 >			  ## msg.c:97:5
  1086a0:    88 2b       	r0 = [addr(184)]  <.GCPI231_3 : 108758 >			  ## msg.c:129:15
  1086a2:    04 60       	[sp] = r4 			  ## msg.c:129:15
  1086a4:    c4 d7       	r4 = r0 - r7 			  ## msg.c:129:15
  1086a6:    dd e1 bf 43 	call -284554 <local_irq_enable : c2f20 >			  ## msg.c:92:13
  1086aa:    26 ce       	cmp r4, r6			  ## msg.c:129:9
  1086ac:    04 40       	r4 = [sp] 			  ## msg.c:129:9
  1086ae:    20 11       	ifs (nzcv != 0) goto 64 <get_msg+0x90 : 1086f0 >			  ## msg.c:129:9
  1086b0:    48 2a       	r0 = [addr(164)]  <.GCPI231_2 : 108754 >			  ## msg.c:139:16
  1086b2:    00 ed 05 44 	r5 = r0 + 68 			  ## msg.c:139:16
  1086b6:    21 90       	r1 = sp + 4 			  ## msg.c:139:16
  1086b8:    28 c6       	r0 = r5 			  ## msg.c:139:16
  1086ba:    12 80       	r2 = 2 			  ## msg.c:139:16
  1086bc:    dd e1 cf 45 	call -284488 <cbuf_read : c2f78 >			  ## msg.c:139:16
  1086c0:    10 98       	cmp r0, 2			  ## msg.c:141:9
  1086c2:    0e 11       	ifs (nzcv != 0) goto 28 <get_msg+0x80 : 1086e0 >			  ## msg.c:141:9
  1086c4:    10 ea ff 0f 	r0 = 4095 			  ## msg.c:154:23
  1086c8:    10 e9 01 01 	r1 = h[sp+ 4] 			  ## msg.c:154:14
  1086cc:    88 da       	r0 &= r1 			  ## msg.c:154:23
  1086ce:    20 68       	[r4 + 0] = r0 			  ## msg.c:154:12
  1086d0:    40 40       	r0 = [sp+ 4] 			  ## msg.c:155:21
  1086d2:    0d ef 00 00 	cmp r0, 8192			  ## msg.c:156:9
  1086d6:    2a 13       	if (nzcv < 0) goto 84 <get_msg+0xCC : 10872c >			  ## msg.c:156:9
  1086d8:    dd e1 2f 42 	call -284604 <local_irq_enable : c2f20 >			  ## msg.c:158:9
  1086dc:    e4 87       	r4 = -4 
  1086de:    33 08       	goto 102 <get_msg+0xE6 : 108746 >
  1086e0:    dd e1 ef 41 	call -284612 <local_irq_enable : c2f20 >			  ## msg.c:145:9
  1086e4:    10 00       	idle			  ## msg.c:149:9
  1086e6:    10 ea ff 0f 	r0 = 4095 			  ## msg.c:150:16
  1086ea:    20 68       	[r4 + 0] = r0 			  ## msg.c:150:16
  1086ec:    04 80       	r4 = 0 			  ## msg.c:150:16
  1086ee:    2b 08       	goto 86 <get_msg+0xE6 : 108746 >			  ## msg.c:150:16
  1086f0:    b8 dc       	r0 = -r7 			  ## msg.c:129:15
  1086f2:    80 d7       	r0 = r0 - r6 			  ## msg.c:129:15
  1086f4:    00 ed 06 1f 	r6 = r0 + 31 			  ## msg.c:129:15
  1086f8:    0e 99       	cmp r6, 33			  ## msg.c:73:9
  1086fa:    10 18       	if (nzcv > 0) goto 32 <get_msg+0xBC : 10871c >			  ## msg.c:73:9
  1086fc:    70 a5       	r0 = r6 >> 5 			  ## msg.c:78:5
  1086fe:    00 a2       	r0 = r0 << 2 			  ## msg.c:78:21
  108700:    00 ee 84 00 	r4 = r8 + r0 			  ## msg.c:78:5
  108704:    dd e1 ef 40 	call -284644 <local_irq_disable : c2f24 >			  ## msg.c:77:5
  108708:    24 e8 40 22 	r0 = [++ r4 = 136] 			  ## msg.c:78:27
  10870c:    80 f3 61 1f 	r1 = r6 & 31 			  ## msg.c:78:31
  108710:    c0 f1 00 01 	r0 = r0 & ~setbit(r1) 			  ## msg.c:78:27
  108714:    20 68       	[r4 + 0] = r0 			  ## msg.c:78:27
  108716:    04 40       	r4 = [sp] 			  ## msg.c:78:27
  108718:    dd e1 2f 40 	call -284668 <local_irq_enable : c2f20 >			  ## msg.c:79:5
  10871c:    38 a1       	r0 = r7 << 1 			  ## msg.c:132:18
  10871e:    28 d6       	r0 = r5 - r0 			  ## msg.c:132:18
  108720:    00 50       	r0 = h[r0 + 0] 			  ## msg.c:132:18
  108722:    20 68       	[r4 + 0] = r0 			  ## msg.c:132:16
  108724:    dd e1 cf 3f 	call -284680 <local_irq_enable : c2f20 >			  ## msg.c:135:9
  108728:    04 80       	r4 = 0 			  ## msg.c:135:9
  10872a:    0d 08       	goto 26 <get_msg+0xE6 : 108746 >			  ## msg.c:135:9
  10872c:    21 d1       	r1 = r4 + 4 			  ## msg.c:162:50
  10872e:    40 ac       	r0 = r0 >> 12 			  ## msg.c:162:66
  108730:    06 a2       	r6 = r0 << 2 			  ## msg.c:155:27
  108732:    28 c6       	r0 = r5 			  ## msg.c:162:16
  108734:    32 c6       	r2 = r6 			  ## msg.c:162:16
  108736:    dd e1 ff 41 	call -284610 <cbuf_read : c2f78 >			  ## msg.c:162:16
  10873a:    04 80       	r4 = 0 			  ## msg.c:171:5
  10873c:    30 ce       	cmp r6, r0			  ## msg.c:171:5
  10873e:    10 03       	ifs (nzcv != 0) {			  ## msg.c:171:5
  108740:    dc 87       		r4 = -5 
                               	}			  ## msg.c:171:5
  108742:    dd e1 df 3e 	call -284710 <local_irq_enable : c2f20 >			  ## msg.c:165:9
  108746:    20 c6       	r0 = r4 			  ## msg.c:172:1
  108748:    08 cd       	sp += 8 			  ## msg.c:172:1
  10874a:    18 c0       	{pc, r8-r4} = [sp++] 			  ## msg.c:172:1


.GCPI231_0:
  10874c:    92 60 11 00     < 1138834 : 0x116092 >

.GCPI231_1:
  108750:    60 1c 00 00     < 7264 : 0x1C60 >

.GCPI231_2:
  108754:    60 1d 00 00     < 7520 : 0x1D60 >

.GCPI231_3:
  108758:    20 00 ff ff     < 4294901792 : 0xFFFF0020 >

bsp_loop:
  10875c:    1f c2       	[--sp] = {rets} 			  ## bsp_loop.c:53:0
  10875e:    dd e1 1f 3e 	call -284734 <local_irq_disable : c2f24 >			  ## bsp_loop.c:40:5
  108762:    00 80       	r0 = 0 			  ## bsp_loop.c:43:5
  108764:    00 f5 00 00 	r0 = clz(r0) 			  ## bsp_loop.c:43:5
  108768:    40 c4       	{rets} = [sp++] 			  ## bsp_loop.c:48:5
  10876a:    dd fa 9f 3d 	goto -284750 <local_irq_enable : c2f20 >			  ## bsp_loop.c:48:5


unregist_dac_channel:
  10876e:    16 c2       	[--sp] = {rets, r6-r4} 			  ## dac_api.c:315:0
  108770:    04 c6       	r4 = r0 			  ## dac_api.c:315:0
  108772:    45 2c       	r5 = [addr(68)]  <.GCPI233_0 : 1087b8 >			  ## dac_api.c:315:0
  108774:    00 e8 51 87 	r1 = b[r5 + 30] 			  ## dac_api.c:315:0
  108778:    00 80       	r0 = 0 			  ## dac_api.c:315:0
  10877a:    0a 80       	r2 = 1 			  ## dac_api.c:315:0
  10877c:    08 08       	goto 16 <unregist_dac_channel+0x20 : 10878e >			  ## dac_api.c:315:0
  10877e:    80 f1 13 00 	r3 = r1 & setbit(r0) 			  ## dac_api.c:320:30
  108782:    03 10       	ifs (nzcv == 0) goto 6 <unregist_dac_channel+0x1C : 10878a >			  ## dac_api.c:320:30
  108784:    2b 48       	r3 = [r5 + 0] 			  ## dac_api.c:324:13
  108786:    1c ce       	cmp r3, r4			  ## dac_api.c:324:13
  108788:    05 10       	ifs (nzcv == 0) goto 10 <unregist_dac_channel+0x26 : 108794 >			  ## dac_api.c:324:13
  10878a:    2d d1       	r5 = r5 + 4 			  ## dac_api.c:319:5
  10878c:    40 d0       	r0 = r0 + 1 			  ## dac_api.c:319:42
  10878e:    10 98       	cmp r0, 2			  ## dac_api.c:319:5
  108790:    f6 19       	if (nzcv <= 0) goto -20 <unregist_dac_channel+0x10 : 10877e >			  ## dac_api.c:319:5
  108792:    11 08       	goto 34 <unregist_dac_channel+0x48 : 1087b6 >			  ## dac_api.c:319:5
  108794:    00 f7 26 00 	r6 = r2 << r0 			  ## dac_api.c:320:32
  108798:    dd e1 4f 3c 	call -284792 <local_irq_disable : c2f24 >			  ## dac_api.c:325:13
  10879c:    c0 29       	r0 = [addr(28)]  <.GCPI233_0 : 1087b8 >			  ## dac_api.c:326:24
  10879e:    04 e8 01 87 	r1 = b[++ r0 = 30] 			  ## dac_api.c:326:24
  1087a2:    c0 f0 11 06 	r1 = r1 & ~r6 			  ## dac_api.c:326:24
  1087a6:    01 78       	b[r0 + 0] = r1 			  ## dac_api.c:326:24
  1087a8:    00 80       	r0 = 0 			  ## dac_api.c:326:24
  1087aa:    28 68       	[r5 + 0] = r0 			  ## dac_api.c:328:30
  1087ac:    e8 68       	[r5 + 12] = r0 			  ## dac_api.c:329:29
  1087ae:    00 e3 43 02 	[r4 + 12] &= (~2) 			  ## dac_api.c:330:24
  1087b2:    dd e1 5f 3b 	call -284822 <local_irq_enable : c2f20 >			  ## dac_api.c:331:13
  1087b6:    16 c0       	{pc, r6-r4} = [sp++] 


.GCPI233_0:
  1087b8:    a4 25 00 00     < 9636 : 0x25A4 >

src_reless:
  1087bc:    15 c2       	[--sp] = {rets, r5, r4} 			  ## src_phy.c:94:0
  1087be:    04 c6       	r4 = r0 			  ## src_phy.c:94:0
  1087c0:    25 48       	r5 = [r4 + 0] 			  ## src_phy.c:95:28
  1087c2:    b5 20       	if (r5 == 0) goto 22 <src_reless+0x1E : 1087da >			  ## src_phy.c:95:28
  1087c4:    e8 4a       	r0 = [r5 + 44] 			  ## src_phy.c:100:33
  1087c6:    40 20       	if (r0 == 0) goto 8 <src_reless+0x14 : 1087d0 >			  ## src_phy.c:100:33
  1087c8:    ff e1 8f 67 	call -4880 <my_free : 1074bc >			  ## src_phy.c:101:22
  1087cc:    00 80       	r0 = 0 			  ## src_phy.c:101:20
  1087ce:    e8 6a       	[r5 + 44] = r0 			  ## src_phy.c:101:20
  1087d0:    28 c6       	r0 = r5 			  ## src_phy.c:105:21
  1087d2:    ff e1 3f 67 	call -4890 <my_free : 1074bc >			  ## src_phy.c:105:21
  1087d6:    00 80       	r0 = 0 			  ## src_phy.c:105:19
  1087d8:    20 68       	[r4 + 0] = r0 			  ## src_phy.c:105:19
  1087da:    15 c0       	{pc, r5, r4} = [sp++] 


decoder_stop_phy:
  1087dc:    16 c2       	[--sp] = {rets, r6-r4} 			  ## decoder_api.c:300:0
  1087de:    0d c6       	r5 = r1 			  ## decoder_api.c:300:0
  1087e0:    04 c6       	r4 = r0 			  ## decoder_api.c:300:0
  1087e2:    f4 22       	if (r4 == 0) goto 94 <decoder_stop_phy+0x66 : 108842 >			  ## decoder_api.c:300:0
  1087e4:    60 4a       	r0 = [r4 + 36] 			  ## decoder_api.c:305:20
  1087e6:    00 f4 00 01 	tst r0, 1			  ## decoder_api.c:305:9
  1087ea:    14 10       	ifs (nzcv == 0) goto 40 <decoder_stop_phy+0x38 : 108814 >			  ## decoder_api.c:305:9
  1087ec:    80 2d       	r0 = [addr(88)]  <.GCPI235_0 : 108844 >			  ## a_api.c:55:41
  1087ee:    00 ed 01 b8 	r1 = r0 + 184 			  ## a_api.c:55:41
  1087f2:    21 ce       	cmp r4, r1			  ## a_api.c:55:33
  1087f4:    09 11       	ifs (nzcv != 0) goto 18 <decoder_stop_phy+0x2C : 108808 >			  ## a_api.c:55:33
  1087f6:    00 e8 41 4d 	r1 = b[r4 + 53] 			  ## a_api.c:55:33
  1087fa:    19 98       	cmp r1, 3			  ## a_api.c:55:33
  1087fc:    05 11       	ifs (nzcv != 0) goto 10 <decoder_stop_phy+0x2C : 108808 >			  ## a_api.c:55:33
  1087fe:    20 e8 00 31 	r0 = [r0 + 196] 			  ## a_api.c:56:29
  108802:    01 80       	r1 = 0 			  ## a_api.c:56:9
  108804:    c2 80       	r2 = 24 			  ## a_api.c:56:9
  108806:    04 08       	goto 8 <decoder_stop_phy+0x34 : 108810 >			  ## a_api.c:56:9
  108808:    e0 48       	r0 = [r4 + 12] 			  ## decoder_api.c:308:32
  10880a:    40 20       	if (r0 == 0) goto 8 <decoder_stop_phy+0x38 : 108814 >
  10880c:    01 80       	r1 = 0 			  ## decoder_point.c:87:5
  10880e:    e2 81       	r2 = 60 			  ## decoder_point.c:87:5
  108810:    dd e1 4f 3a 	call -284856 <memset : c2f5c >
  108814:    00 ed 46 18 	r6 = r4 + 24 			  ## decoder_api.c:305:14
  108818:    00 e3 49 01 	[r4 + 36] &= (~1) 			  ## decoder_api.c:312:23
  10881c:    b5 20       	if (r5 == 0) goto 22 <decoder_stop_phy+0x58 : 108834 >			  ## decoder_api.c:312:23
  10881e:    80 2a       	r0 = [addr(40)]  <.GCPI235_1 : 108848 >			  ## decoder_api.c:315:9
  108820:    dd e1 cf 3d 	call -284744 <xprintf : c2fdc >			  ## decoder_api.c:315:9
  108824:    60 4a       	r0 = [r4 + 36] 			  ## decoder_api.c:316:27
  108826:    00 f4 00 02 	tst r0, 2			  ## decoder_api.c:316:9
  10882a:    04 10       	ifs (nzcv == 0) goto 8 <decoder_stop_phy+0x58 : 108834 >			  ## decoder_api.c:316:9
  10882c:    30 c6       	r0 = r6 			  ## decoder_api.c:317:26
  10882e:    7c e1 af 13 	call -1080716 <dac_cbuff_active : aa6 >			  ## decoder_api.c:317:26
  108832:    88 27       	if (r0 != 0) goto -16 <decoder_stop_phy+0x48 : 108824 >			  ## decoder_api.c:317:26
  108834:    30 c6       	r0 = r6 			  ## decoder_api.c:327:5
  108836:    9b 04       	call -202 <unregist_dac_channel : 10876e >			  ## decoder_api.c:327:5
  108838:    24 e8 40 0b 	r0 = [++ r4 = 44] 			  ## decoder_api.c:329:22
  10883c:    20 20       	if (r0 == 0) goto 4 <decoder_stop_phy+0x66 : 108842 >			  ## decoder_api.c:329:22
  10883e:    20 c6       	r0 = r4 			  ## decoder_api.c:330:9
  108840:    bd 04       	call -134 <src_reless : 1087bc >			  ## decoder_api.c:330:9
  108842:    16 c0       	{pc, r6-r4} = [sp++] 


.GCPI235_0:
  108844:    60 1d 00 00     < 7520 : 0x1D60 >

.GCPI235_1:
  108848:    09 a7 11 00     < 1156873 : 0x11A709 >

decoder_stop:
  10884c:    c7 0f       	goto -114 <decoder_stop_phy : 1087dc >			  ## decoder_api.c:335:0


vfs_openbyindex:
  10884e:    16 c2       	[--sp] = {rets, r6-r4} 			  ## vfs.c:119:0
  108850:    15 c6       	r5 = r2 			  ## vfs.c:119:0
  108852:    0c c6       	r4 = r1 			  ## vfs.c:119:0
  108854:    06 c6       	r6 = r0 			  ## vfs.c:119:0
  108856:    20 48       	r0 = [r4 + 0] 			  ## vfs.c:121:25
  108858:    48 20       	if (r0 != 0) goto 8 <vfs_openbyindex+0x14 : 108862 >			  ## vfs.c:121:25
  10885a:    ff e1 5f bd 	call -2134 <vfs_hdl_malloc : 108008 >			  ## vfs.c:122:20
  10885e:    20 68       	[r4 + 0] = r0 			  ## vfs.c:122:18
  108860:    50 21       	if (r0 == 0) goto 42 <vfs_openbyindex+0x3E : 10888c >			  ## vfs.c:122:18
  108862:    31 48       	r1 = [r6 + 0] 			  ## vfs.c:135:27
  108864:    01 68       	[r0 + 0] = r1 			  ## vfs.c:135:18
  108866:    31 48       	r1 = [r6 + 0] 			  ## vfs.c:136:18
  108868:    0b 49       	r3 = [r1 + 16] 			  ## vfs.c:138:22
  10886a:    93 20       	if (r3 == 0) goto 18 <vfs_openbyindex+0x30 : 10887e >			  ## vfs.c:138:22
  10886c:    72 48       	r2 = [r6 + 4] 			  ## vfs.c:139:39
  10886e:    01 d1       	r1 = r0 + 4 			  ## vfs.c:139:54
  108870:    10 c6       	r0 = r2 			  ## vfs.c:139:15
  108872:    2a c6       	r2 = r5 			  ## vfs.c:139:15
  108874:    ab 01       	call r3			  ## vfs.c:139:15
  108876:    05 c6       	r5 = r0 			  ## vfs.c:139:15
  108878:    4d 20       	if (r5 != 0) goto 8 <vfs_openbyindex+0x34 : 108882 >
  10887a:    05 80       	r5 = 0 
  10887c:    05 08       	goto 10 <vfs_openbyindex+0x3A : 108888 >
  10887e:    15 ea 0d 80 	r5 = 32781 
  108882:    20 c6       	r0 = r4 			  ## vfs.c:145:9
  108884:    ff e1 ef c0 	call -2020 <vfs_file_close : 1080a4 >			  ## vfs.c:145:9
  108888:    28 c6       	r0 = r5 			  ## vfs.c:148:1
  10888a:    16 c0       	{pc, r6-r4} = [sp++] 			  ## vfs.c:148:1
  10888c:    15 ea 0a 80 	r5 = 32778 
  108890:    fb 0f       	goto -10 <vfs_openbyindex+0x3A : 108888 >


check_dp:
  108892:    15 c2       	[--sp] = {rets, r5, r4} 			  ## decoder_point.c:52:0
  108894:    05 c6       	r5 = r0 			  ## decoder_point.c:52:0
  108896:    35 21       	if (r5 == 0) goto 38 <check_dp+0x2C : 1088be >			  ## decoder_point.c:52:0
  108898:    28 c6       	r0 = r5 			  ## decoder_point.c:58:22
  10889a:    14 e8 01 81 	r1 = h[++ r0 = 6] 			  ## decoder_point.c:58:22
  10889e:    ca d3       	r2 = r1 + -1 			  ## decoder_point.c:59:20
  1088a0:    52 c9       	r2 = r2.l 			  ## decoder_point.c:59:20
  1088a2:    04 80       	r4 = 0 			  ## decoder_point.c:59:20
  1088a4:    da 99       	cmp r2, 59			  ## decoder_point.c:59:20
  1088a6:    13 18       	if (nzcv > 0) goto 38 <check_dp+0x3C : 1088ce >			  ## decoder_point.c:59:20
  1088a8:    89 d0       	r1 = r1 + 2 			  ## decoder_point.c:62:41
  1088aa:    fe e1 8f b1 	call -10704 <CRC16 : 105ede >			  ## decoder_point.c:62:11
  1088ae:    01 c6       	r1 = r0 			  ## decoder_point.c:62:11
  1088b0:    6a 50       	r2 = h[r5 + 4] 			  ## decoder_point.c:62:11
  1088b2:    a1 20       	if (r1 == 0) goto 20 <check_dp+0x36 : 1088c8 >			  ## decoder_point.c:62:11
  1088b4:    0a ce       	cmp r1, r2
  1088b6:    08 11       	ifs (nzcv != 0) goto 16 <check_dp+0x36 : 1088c8 >
  1088b8:    00 ed 54 08 	r4 = r5 + 8 			  ## decoder_point.c:66:17
  1088bc:    08 08       	goto 16 <check_dp+0x3C : 1088ce >			  ## decoder_point.c:66:17
  1088be:    80 29       	r0 = [addr(24)]  <.GCPI238_1 : 1088d8 >			  ## decoder_point.c:55:9
  1088c0:    dd e1 cf 38 	call -284904 <xprintf : c2fdc >			  ## decoder_point.c:55:9
  1088c4:    04 80       	r4 = 0 			  ## decoder_point.c:55:9
  1088c6:    03 08       	goto 6 <check_dp+0x3C : 1088ce >			  ## decoder_point.c:55:9
  1088c8:    c0 28       	r0 = [addr(12)]  <.GCPI238_0 : 1088d4 >			  ## decoder_point.c:68:9
  1088ca:    dd e1 7f 38 	call -284914 <xprintf : c2fdc >			  ## decoder_point.c:68:9
  1088ce:    20 c6       	r0 = r4 			  ## decoder_point.c:72:1
  1088d0:    15 c0       	{pc, r5, r4} = [sp++] 			  ## decoder_point.c:72:1
  1088d2:    00 00       	nop			  ## decoder_point.c:72:1


.GCPI238_0:
  1088d4:    59 a8 11 00     < 1157209 : 0x11A859 >

.GCPI238_1:
  1088d8:    28 a8 11 00     < 1157160 : 0x11A828 >

sp_need_buf:
  1088dc:    11 ea 40 1f 	r1 = 8000 			  ## resample.c:652:0
  1088e0:    c0 fc 00 01 	r0 = r0 / r1 (s) 			  ## resample.c:653:15
  1088e4:    08 98       	cmp r0, 1			  ## resample.c:654:6
  1088e6:    d0 03       	ifs (nzcv <= 0) {			  ## resample.c:654:6
  1088e8:    08 80       		r0 = 1 
                               	}			  ## resample.c:654:6
  1088ea:    0f fc 00 20 	r0 = r0 * 640 			  ## resample.c:659:33
  1088ee:    01 ed 00 f0 	r0 = r0 + 496 			  ## resample.c:659:29
  1088f2:    20 00       	rts			  ## resample.c:659:2


change_speedpitch_coeff:
  1088f4:    17 c2       	[--sp] = {rets, r7-r4} 			  ## resample.c:93:0
  1088f6:    f4 cd       	sp += -12 			  ## resample.c:93:0
  1088f8:    81 60       	[sp+ 8] = r1 			  ## resample.c:93:0
  1088fa:    04 c6       	r4 = r0 			  ## resample.c:93:0
  1088fc:    02 60       	[sp] = r2 			  ## resample.c:93:0
  1088fe:    62 20       	if (r2 == 0) goto 12 <change_speedpitch_coeff+0x18 : 10890c >			  ## resample.c:93:0
  108900:    20 c6       	r0 = r4 			  ## resample.c:100:3
  108902:    01 80       	r1 = 0 			  ## resample.c:100:3
  108904:    12 ea f0 01 	r2 = 496 			  ## resample.c:100:3
  108908:    dd e1 8f 32 	call -285104 <memset : c2f5c >			  ## resample.c:100:3
  10890c:    82 40       	r2 = [sp+ 8] 
  10890e:    10 50       	r0 = h[r2 + 0] 			  ## resample.c:119:36
  108910:    44 60       	[sp+ 4] = r4 			  ## resample.c:119:36
  108912:    27 c6       	r7 = r4 			  ## resample.c:119:25
  108914:    64 e8 70 30 	[++ r7 = 192] = r0 			  ## resample.c:119:25
  108918:    11 54       	r1 = h[r2 + 2] 			  ## resample.c:120:49
  10891a:    01 06       	r1 *= r0 			  ## resample.c:120:49
  10891c:    49 a7       	r1 = r1 >> 7 			  ## resample.c:120:49
  10891e:    79 68       	[r7 + 4] = r1 			  ## resample.c:120:49
  108920:    52 58       	r2 = b[r2 + 4] 			  ## resample.c:123:53
  108922:    80 20       	if (r0 == 0) goto 16 <change_speedpitch_coeff+0x40 : 108934 >
  108924:    71 20       	if (r1 == 0) goto 14 <change_speedpitch_coeff+0x40 : 108934 >
  108926:    00 fc 13 0a 	r3 = r1 * 10 			  ## resample.c:26:36
  10892a:    40 fc 33 00 	r3 = r3 / r0 			  ## resample.c:26:40
  10892e:    2b 9a       	cmp r3, 69			  ## resample.c:27:7
  108930:    03 c6       	r3 = r0 			  ## resample.c:52:42
  108932:    06 13       	if (nzcv < 0) goto 12 <change_speedpitch_coeff+0x4C : 108940 >
  108934:    13 ea 40 1f 	r3 = 8000 
  108938:    3b 68       	[r7 + 0] = r3 			  ## resample.c:21:25
  10893a:    7b 68       	[r7 + 4] = r3 			  ## resample.c:21:25
  10893c:    11 ea 40 1f 	r1 = 8000 			  ## resample.c:56:35
  108940:    04 80       	r4 = 0 
  108942:    7c 69       	[r7 + 20] = r4 			  ## resample.c:36:28
  108944:    0c ad       	r4 = r1 << 13 			  ## resample.c:37:47
  108946:    c0 fc 44 03 	r4 = r4 / r3 (s) 			  ## resample.c:37:64
  10894a:    80 f6 45 8c 	r5 = sextra(r4, p:4, l:12) 			  ## resample.c:38:64
  10894e:    64 d7       	r4 = r4 - r5 			  ## resample.c:38:42
  108950:    bc 74       	h[r7 + 10] = r4 			  ## resample.c:38:21
  108952:    0c a5       	r4 = r1 << 5 			  ## resample.c:39:49
  108954:    40 fc 44 03 	r4 = r4 / r3 			  ## resample.c:39:54
  108958:    3c 69       	[r7 + 16] = r4 			  ## resample.c:39:25
  10895a:    26 ea 05 00 	r5 = 134217728 			  ## resample.c:40:19
  10895e:    40 fc 56 01 	r6 = r5 / r1 			  ## resample.c:40:19
  108962:    75 d0       	r5 = r6 + 1 			  ## resample.c:40:44
  108964:    2c 06       	r4 *= r5 			  ## resample.c:41:35
  108966:    fc 68       	[r7 + 12] = r4 			  ## resample.c:41:26
  108968:    ba 78       	b[r7 + 8] = r2 			  ## resample.c:42:20
  10896a:    1d 80       	r5 = 3 			  ## resample.c:42:20
  10896c:    1a 98       	cmp r2, 3			  ## resample.c:43:6
  10896e:    03 13       	if (nzcv < 0) goto 6 <change_speedpitch_coeff+0x82 : 108976 >			  ## resample.c:43:6
  108970:    45 80       	r5 = 8 
  108972:    4a 98       	cmp r2, 9			  ## resample.c:47:11
  108974:    01 13       	if (nzcv < 0) goto 2 <change_speedpitch_coeff+0x84 : 108978 >			  ## resample.c:47:11
  108976:    bd 78       	b[r7 + 8] = r5 
  108978:    0b ce       	cmp r1, r3			  ## resample.c:52:6
  10897a:    42 40       	r2 = [sp+ 4] 			  ## resample.c:52:6
  10897c:    08 19       	if (nzcv <= 0) goto 16 <change_speedpitch_coeff+0x9A : 10898e >			  ## resample.c:52:6
  10897e:    11 ea 00 20 	r1 = 8192 			  ## resample.c:54:22
  108982:    b9 74       	h[r7 + 10] = r1 			  ## resample.c:54:22
  108984:    01 81       	r1 = 32 			  ## resample.c:55:26
  108986:    39 69       	[r7 + 16] = r1 			  ## resample.c:55:26
  108988:    31 a5       	r1 = r6 << 5 			  ## resample.c:57:34
  10898a:    01 89       	r1 += 32 			  ## resample.c:57:34
  10898c:    f9 68       	[r7 + 12] = r1 			  ## resample.c:57:27
  10898e:    81 80       	r1 = 16 			  ## resample.c:130:23
  108990:    01 ed 26 e0 	r6 = r2 + 480 			  ## resample.c:130:23
  108994:    b1 73       	h[r6 + -8] = r1 			  ## resample.c:130:23
  108996:    81 40       	r1 = [sp+ 8] 			  ## resample.c:130:23
  108998:    4b 5a       	r3 = b[r1 + 5] 			  ## resample.c:131:51
  10899a:    49 5c       	r1 = b[r1 + 6] 			  ## resample.c:131:31
  10899c:    0d a4       	r5 = r1 << 4 			  ## resample.c:131:29
  10899e:    40 fc 52 03 	r2 = r5 / r3 			  ## resample.c:131:49
  1089a2:    f2 73       	h[r6 + -4] = r2 			  ## resample.c:131:24
  1089a4:    11 ea 40 1f 	r1 = 8000 			  ## resample.c:125:27
  1089a8:    40 fc 04 01 	r4 = r0 / r1 			  ## resample.c:125:27
  1089ac:    09 80       	r1 = 1 
  1089ae:    0d ef 00 fa 	cmp r0, 8000			  ## resample.c:126:6
  1089b2:    08 80       	r0 = 1 			  ## resample.c:126:6
  1089b4:    20 03       	if (nzcv >= 0) {			  ## resample.c:126:6
  1089b6:    20 c6       		r0 = r4 
                               	}			  ## resample.c:126:6
  1089b8:    1d ce       	cmp r3, r5			  ## resample.c:132:6
  1089ba:    06 18       	if (nzcv > 0) goto 12 <change_speedpitch_coeff+0xD4 : 1089c8 >			  ## resample.c:132:6
  1089bc:    52 c9       	r2 = r2.l 			  ## resample.c:136:33
  1089be:    11 ea 80 00 	r1 = 128 			  ## resample.c:136:33
  1089c2:    80 ef 20 81 	cmp r2, 129			  ## resample.c:136:11
  1089c6:    01 13       	if (nzcv < 0) goto 2 <change_speedpitch_coeff+0xD6 : 1089ca >			  ## resample.c:136:11
  1089c8:    f1 73       	h[r6 + -4] = r1 
  1089ca:    00 fc 01 f0 	r1 = r0 * 240 			  ## resample.c:140:38
  1089ce:    71 74       	h[r6 + 6] = r1 			  ## resample.c:140:31
  1089d0:    00 fc 01 50 	r1 = r0 * 80 			  ## resample.c:141:43
  1089d4:    f1 77       	h[r6 + -2] = r1 			  ## resample.c:141:26
  1089d6:    00 fc 00 a0 	r0 = r0 * 160 			  ## resample.c:142:46
  1089da:    b0 70       	h[r6 + 8] = r0 			  ## resample.c:142:31
  1089dc:    01 40       	r1 = [sp] 			  ## resample.c:142:31
  1089de:    44 40       	r4 = [sp+ 4] 			  ## resample.c:142:31
  1089e0:    51 21       	if (r1 == 0) goto 42 <change_speedpitch_coeff+0x118 : 108a0c >			  ## resample.c:142:31
  1089e2:    01 ed 40 c0 	r0 = r4 + 448 			  ## resample.c:145:24
  1089e6:    42 80       	r2 = 8 			  ## resample.c:145:3
  1089e8:    dd e1 2f 2b 	call -285340 <memcpy : c2f50 >			  ## resample.c:145:3
  1089ec:    01 ed 40 f0 	r0 = r4 + 496 			  ## resample.c:147:45
  1089f0:    f0 6e       	[r6 + -20] = r0 			  ## resample.c:147:28
  1089f2:    90 e8 61 81 	r1 = h[r6 + 6] (s) 			  ## resample.c:151:40
  1089f6:    0a a1       	r2 = r1 << 1 			  ## resample.c:151:69
  1089f8:    01 80       	r1 = 0 			  ## resample.c:151:3
  1089fa:    dd e1 ff 2a 	call -285346 <memset : c2f5c >			  ## resample.c:151:3
  1089fe:    c0 83       	r0 = 120 			  ## resample.c:152:33
  108a00:    70 70       	h[r6 + 4] = r0 			  ## resample.c:152:33
  108a02:    01 ed 40 e6 	r0 = r4 + 486 			  ## resample.c:151:53
  108a06:    00 50       	r0 = h[r0 + 0] 			  ## resample.c:153:46
  108a08:    30 70       	h[r6 + 0] = r0 			  ## resample.c:153:31
  108a0a:    03 08       	goto 6 <change_speedpitch_coeff+0x11E : 108a12 >			  ## resample.c:153:31
  108a0c:    01 ed 40 f0 	r0 = r4 + 496 			  ## resample.c:147:45
  108a10:    f0 6e       	[r6 + -20] = r0 			  ## resample.c:147:28
  108a12:    80 40       	r0 = [sp+ 8] 			  ## resample.c:157:36
  108a14:    40 5e       	r0 = b[r0 + 7] 			  ## resample.c:157:36
  108a16:    b8 7a       	b[r7 + 9] = r0 			  ## resample.c:157:25
  108a18:    00 80       	r0 = 0 			  ## resample.c:158:2
  108a1a:    0c cd       	sp += 12 			  ## resample.c:158:2
  108a1c:    17 c0       	{pc, r7-r4} = [sp++] 			  ## resample.c:158:2


src_hld_malloc:
  108a1e:    17 c2       	[--sp] = {rets, r7-r4} 			  ## src_phy.c:62:0
  108a20:    fc cd       	sp += -4 			  ## src_phy.c:62:0
  108a22:    0c c6       	r4 = r1 			  ## src_phy.c:62:0
  108a24:    05 c6       	r5 = r0 			  ## src_phy.c:62:0
  108a26:    80 81       	r0 = 48 			  ## src_phy.c:67:18
  108a28:    49 80       	r1 = 9 			  ## src_phy.c:67:18
  108a2a:    ff e1 bf 21 	call -7114 <my_malloc : 106e64 >			  ## src_phy.c:67:18
  108a2e:    06 c6       	r6 = r0 			  ## src_phy.c:67:18
  108a30:    06 21       	if (r6 == 0) goto 32 <src_hld_malloc+0x34 : 108a52 >
  108a32:    eb 48       	r3 = [r5 + 12] 			  ## src_phy.c:75:21
  108a34:    05 80       	r5 = 0 			  ## src_phy.c:75:21
  108a36:    02 90       	r2 = sp + 0 
  108a38:    00 80       	r0 = 0 			  ## src_phy.c:75:16
  108a3a:    19 80       	r1 = 3 			  ## src_phy.c:75:16
  108a3c:    ab 01       	call r3			  ## src_phy.c:75:16
  108a3e:    07 c6       	r7 = r0 			  ## src_phy.c:75:16
  108a40:    01 40       	r1 = [sp] 			  ## src_phy.c:78:38
  108a42:    ff e1 ff 20 	call -7138 <my_malloc : 106e64 >			  ## src_phy.c:78:18
  108a46:    a0 20       	if (r0 == 0) goto 20 <src_hld_malloc+0x3E : 108a5c >
  108a48:    f0 6a       	[r6 + 44] = r0 			  ## src_phy.c:85:42
  108a4a:    14 20       	if (r4 == 0) goto 2 <src_hld_malloc+0x30 : 108a4e >			  ## src_phy.c:85:42
  108a4c:    27 68       	[r4 + 0] = r7 			  ## src_phy.c:87:21
  108a4e:    35 c6       	r5 = r6 
  108a50:    0b 08       	goto 22 <src_hld_malloc+0x4A : 108a68 >
  108a52:    00 2a       	r0 = [addr(32)]  <.GCPI241_1 : 108a74 >			  ## src_phy.c:69:9
  108a54:    dd e1 2f 2c 	call -285308 <xprintf : c2fdc >			  ## src_phy.c:69:9
  108a58:    05 80       	r5 = 0 			  ## src_phy.c:69:9
  108a5a:    06 08       	goto 12 <src_hld_malloc+0x4A : 108a68 >
  108a5c:    30 c6       	r0 = r6 			  ## src_phy.c:80:9
  108a5e:    ff e1 df 52 	call -5542 <my_free : 1074bc >			  ## src_phy.c:80:9
  108a62:    c0 28       	r0 = [addr(12)]  <.GCPI241_0 : 108a70 >			  ## src_phy.c:81:9
  108a64:    dd e1 af 2b 	call -285324 <xprintf : c2fdc >			  ## src_phy.c:81:9
  108a68:    28 c6       	r0 = r5 			  ## src_phy.c:92:1
  108a6a:    04 cd       	sp += 4 			  ## src_phy.c:92:1
  108a6c:    17 c0       	{pc, r7-r4} = [sp++] 			  ## src_phy.c:92:1
  108a6e:    00 00       	nop			  ## src_phy.c:92:1


.GCPI241_0:
  108a70:    03 d5 11 00     < 1168643 : 0x11D503 >

.GCPI241_1:
  108a74:    d9 d4 11 00     < 1168601 : 0x11D4D9 >

src_max_in:
  108a78:    41 50       	r1 = h[r0 + 4] 			  ## src.c:72:0
  108a7a:    90 e8 02 02 	r2 = h[r0 + 8] (s) 			  ## src.c:77:21
  108a7e:    89 d4       	r1 = r1 + r2 			  ## src.c:77:19
  108a80:    09 a7       	r1 = r1 << 7 			  ## src.c:49:20
  108a82:    42 54       	r2 = h[r0 + 6] 			  ## src.c:75:18
  108a84:    11 ce       	cmp r2, r1			  ## src.c:80:9
  108a86:    91 03       	if (nzcv <= 0) {			  ## src.c:49:37
  108a88:    40 fc 11 02 		r1 = r1 / r2 			  ## src.c:49:37
  108a8c:    81 74       		h[r0 + 10] = r1 
                               	}			  ## src.c:83:26
  108a8e:    20 00       	rts			  ## src.c:83:26


src_open:
  108a90:    17 c2       	[--sp] = {rets, r7-r4} 			  ## src.c:88:0
  108a92:    1c c6       	r4 = r3 			  ## src.c:88:0
  108a94:    16 c6       	r6 = r2 			  ## src.c:88:0
  108a96:    0f c6       	r7 = r1 			  ## src.c:88:0
  108a98:    05 c6       	r5 = r0 			  ## src.c:88:0
  108a9a:    01 80       	r1 = 0 			  ## src.c:91:5
  108a9c:    12 ea 68 01 	r2 = 360 			  ## src.c:91:5
  108aa0:    dd e1 cf 25 	call -285512 <memset : c2f5c >			  ## src.c:91:5
  108aa4:    6f 70       	h[r5 + 4] = r7 			  ## src.c:93:28
  108aa6:    6e 74       	h[r5 + 6] = r6 			  ## src.c:94:29
  108aa8:    28 c6       	r0 = r5 			  ## src.c:95:18
  108aaa:    e6 04       	call -52 <src_max_in : 108a78 >			  ## src.c:95:18
  108aac:    2c 68       	[r5 + 0] = r4 			  ## src.c:96:17
  108aae:    40 28       	r0 = [addr(4)]  <.GCPI243_0 : 108ab4 >			  ## src.c:97:18
  108ab0:    e8 68       	[r5 + 12] = r0 			  ## src.c:97:18
  108ab2:    17 c0       	{pc, r7-r4} = [sp++] 			  ## src.c:97:18


.GCPI243_0:
  108ab4:    88 65 11 00     < 1140104 : 0x116588 >

link_src_sound:
  108ab8:    18 c2       	[--sp] = {rets, r8-r4} 			  ## src_phy.c:183:0
  108aba:    f4 cd       	sp += -12 			  ## src_phy.c:183:0
  108abc:    1f c6       	r7 = r3 			  ## src_phy.c:183:0
  108abe:    16 c6       	r6 = r2 			  ## src_phy.c:183:0
  108ac0:    04 c6       	r4 = r0 			  ## src_phy.c:183:0
  108ac2:    36 22       	if (r6 == 0) goto 70 <link_src_sound+0x52 : 108b0a >			  ## src_phy.c:183:0
  108ac4:    01 60       	[sp] = r1 			  ## src_phy.c:183:0
  108ac6:    25 48       	r5 = [r4 + 0] 			  ## src_phy.c:190:50
  108ac8:    20 e4 08 1b 	r8 = [addr(108)]  <.GCPI244_0 : 108b38 >			  ## src_phy.c:133:18
  108acc:    41 90       	r1 = sp + 8 
  108ace:    80 c6       	r0 = r8 			  ## src_phy.c:133:18
  108ad0:    a6 04       	call -180 <src_hld_malloc : 108a1e >			  ## src_phy.c:133:18
  108ad2:    00 22       	if (r0 == 0) goto 64 <link_src_sound+0x5C : 108b14 >
  108ad4:    42 42       	r2 = [sp+ 36] 
  108ad6:    40 60       	[sp+ 4] = r0 			  ## src_phy.c:152:15
  108ad8:    00 ed 01 08 	r1 = r0 + 8 			  ## src_phy.c:153:39
  108adc:    41 6a       	[r0 + 36] = r1 			  ## src_phy.c:153:25
  108ade:    c1 2d       	r1 = [addr(92)]  <.GCPI244_1 : 108b3c >			  ## src_phy.c:154:27
  108ae0:    81 6a       	[r0 + 40] = r1 			  ## src_phy.c:154:27
  108ae2:    60 e8 08 08 	[r0 + 32] = r8 			  ## src_phy.c:160:19
  108ae6:    c1 4a       	r1 = [r0 + 44] 			  ## src_phy.c:161:36
  108ae8:    c1 69       	[r0 + 28] = r1 			  ## src_phy.c:161:22
  108aea:    00 ed 03 1c 	r3 = r0 + 28 			  ## src_phy.c:159:29
  108aee:    03 68       	[r0 + 0] = r3 			  ## src_phy.c:166:21
  108af0:    03 2d       	r3 = [addr(80)]  <.GCPI244_2 : 108b40 >			  ## src_phy.c:167:20
  108af2:    43 e5 05 01 	d[r0 + 4] = r5, r3 			  ## src_phy.c:167:20
  108af6:    00 ed 03 24 	r3 = r0 + 36 			  ## src_phy.c:153:17
  108afa:    08 c6       	r0 = r1 			  ## src_phy.c:170:28
  108afc:    39 c6       	r1 = r7 			  ## src_phy.c:170:28
  108afe:    c8 04       	call -112 <src_open : 108a90 >			  ## src_phy.c:170:28
  108b00:    60 20       	if (r0 == 0) goto 12 <link_src_sound+0x56 : 108b0e >			  ## src_phy.c:170:28
  108b02:    41 40       	r1 = [sp+ 4] 			  ## src_phy.c:179:17
  108b04:    00 ed 10 08 	r0 = r1 + 8 			  ## src_phy.c:179:28
  108b08:    07 08       	goto 14 <link_src_sound+0x60 : 108b18 >			  ## src_phy.c:179:28
  108b0a:    c0 2b       	r0 = [addr(60)]  <.GCPI244_4 : 108b48 >			  ## src_phy.c:187:9
  108b0c:    0f 08       	goto 30 <link_src_sound+0x74 : 108b2c >			  ## src_phy.c:187:9
  108b0e:    20 90       	r0 = sp + 4 
  108b10:    ff e1 4f e5 	call -856 <src_reless : 1087bc >			  ## src_phy.c:175:9
  108b14:    00 80       	r0 = 0 
  108b16:    01 80       	r1 = 0 
  108b18:    61 68       	[r4 + 4] = r1 			  ## src_phy.c:190:26
  108b1a:    71 20       	if (r1 == 0) goto 14 <link_src_sound+0x72 : 108b2a >			  ## src_phy.c:191:9
  108b1c:    31 68       	[r6 + 0] = r1 			  ## src_phy.c:192:20
  108b1e:    00 e2 43 04 	[r4 + 12] |= 4 			  ## src_phy.c:193:30
  108b22:    01 40       	r1 = [sp] 			  ## src_phy.c:195:30
  108b24:    01 68       	[r0 + 0] = r1 			  ## src_phy.c:195:30
  108b26:    04 c6       	r4 = r0 			  ## src_phy.c:195:30
  108b28:    03 08       	goto 6 <link_src_sound+0x78 : 108b30 >
  108b2a:    80 29       	r0 = [addr(24)]  <.GCPI244_3 : 108b44 >			  ## src_phy.c:197:9
  108b2c:    dd e1 6f 25 	call -285524 <xprintf : c2fdc >
  108b30:    20 c6       	r0 = r4 			  ## src_phy.c:200:1
  108b32:    0c cd       	sp += 12 			  ## src_phy.c:200:1
  108b34:    18 c0       	{pc, r8-r4} = [sp++] 			  ## src_phy.c:200:1
  108b36:    00 00       	nop			  ## src_phy.c:200:1


.GCPI244_0:
  108b38:    88 65 11 00     < 1140104 : 0x116588 >

.GCPI244_1:
  108b3c:    9a 5e 10 00     < 1072794 : 0x105E9A >

.GCPI244_2:
  108b40:    30 eb 10 00     < 1108784 : 0x10EB30 >

.GCPI244_3:
  108b44:    4c d5 11 00     < 1168716 : 0x11D54C >

.GCPI244_4:
  108b48:    2d d5 11 00     < 1168685 : 0x11D52D >

get_dp:
  108b4c:    17 c2       	[--sp] = {rets, r7-r4} 			  ## decoder_point.c:20:0
  108b4e:    0c c6       	r4 = r1 			  ## decoder_point.c:20:0
  108b50:    06 c6       	r6 = r0 			  ## decoder_point.c:20:0
  108b52:    c6 21       	if (r6 == 0) goto 56 <get_dp+0x40 : 108b8c >			  ## decoder_point.c:20:0
  108b54:    b4 21       	if (r4 == 0) goto 54 <get_dp+0x40 : 108b8c >			  ## decoder_point.c:20:0
  108b56:    77 48       	r7 = [r6 + 4] 			  ## decoder_point.c:31:16
  108b58:    dd e1 4f 1e 	call -285752 <local_irq_disable : c2f24 >			  ## decoder_point.c:34:5
  108b5c:    38 4a       	r0 = [r7 + 32] 			  ## decoder_point.c:35:19
  108b5e:    a8 01       	call r0			  ## decoder_point.c:35:14
  108b60:    05 c6       	r5 = r0 			  ## decoder_point.c:35:14
  108b62:    e5 99       	cmp r5, 60			  ## decoder_point.c:36:9
  108b64:    18 18       	if (nzcv > 0) goto 48 <get_dp+0x4A : 108b96 >			  ## decoder_point.c:36:9
  108b66:    b0 48       	r0 = [r6 + 8] 			  ## decoder_point.c:37:62
  108b68:    b9 49       	r1 = [r7 + 24] 			  ## decoder_point.c:37:46
  108b6a:    a9 01       	call r1			  ## decoder_point.c:37:41
  108b6c:    01 c6       	r1 = r0 			  ## decoder_point.c:37:41
  108b6e:    00 ed 40 08 	r0 = r4 + 8 			  ## decoder_point.c:28:22
  108b72:    2a c6       	r2 = r5 			  ## decoder_point.c:37:9
  108b74:    dd e1 cf 1e 	call -285736 <memcpy : c2f50 >			  ## decoder_point.c:37:9
  108b78:    54 e8 45 81 	h[++ r4 = 6] = r5 			  ## decoder_point.c:38:20
  108b7c:    68 c9       	r0 = r5.l 			  ## decoder_point.c:39:41
  108b7e:    81 d0       	r1 = r0 + 2 			  ## decoder_point.c:39:52
  108b80:    20 c6       	r0 = r4 			  ## decoder_point.c:39:22
  108b82:    fe e1 cf 9a 	call -11432 <CRC16 : 105ede >			  ## decoder_point.c:39:22
  108b86:    e0 77       	h[r4 + -2] = r0 			  ## decoder_point.c:39:20
  108b88:    0c 80       	r4 = 1 
  108b8a:    0b 08       	goto 22 <get_dp+0x56 : 108ba2 >
  108b8c:    40 2a       	r0 = [addr(36)]  <.GCPI245_1 : 108bb0 >			  ## decoder_point.c:24:9
  108b8e:    dd e1 5f 22 	call -285622 <xprintf : c2fdc >			  ## decoder_point.c:24:9
  108b92:    04 80       	r4 = 0 			  ## decoder_point.c:24:9
  108b94:    08 08       	goto 16 <get_dp+0x5A : 108ba6 >
  108b96:    40 29       	r0 = [addr(20)]  <.GCPI245_0 : 108bac >			  ## decoder_point.c:44:9
  108b98:    29 c6       	r1 = r5 			  ## decoder_point.c:44:9
  108b9a:    e2 81       	r2 = 60 			  ## decoder_point.c:44:9
  108b9c:    dd e1 ef 21 	call -285636 <xprintf : c2fdc >			  ## decoder_point.c:44:9
  108ba0:    04 80       	r4 = 0 			  ## decoder_point.c:44:9
  108ba2:    dd e1 df 1b 	call -285830 <local_irq_enable : c2f20 >			  ## decoder_point.c:47:5
  108ba6:    20 c6       	r0 = r4 			  ## decoder_point.c:50:1
  108ba8:    17 c0       	{pc, r7-r4} = [sp++] 			  ## decoder_point.c:50:1
  108baa:    00 00       	nop			  ## decoder_point.c:50:1


.GCPI245_0:
  108bac:    03 a8 11 00     < 1157123 : 0x11A803 >

.GCPI245_1:
  108bb0:    d5 a7 11 00     < 1157077 : 0x11A7D5 >

decoder_io:
  108bb4:    1d c2       	[--sp] = {rets, r13-r4} 			  ## decoder_api.c:111:0
  108bb6:    d4 cd       	sp += -44 			  ## decoder_api.c:111:0
  108bb8:    1c c6       	r4 = r3 			  ## decoder_api.c:111:0
  108bba:    16 c6       	r6 = r2 			  ## decoder_api.c:111:0
  108bbc:    0d c6       	r5 = r1 			  ## decoder_api.c:111:0
  108bbe:    07 c6       	r7 = r0 			  ## decoder_api.c:111:0
  108bc0:    fd e1 2f 8d 	call -20060 <vfs_file_name : 103d68 >			  ## decoder_api.c:116:20
  108bc4:    20 e4 00 7f 	r0 = [addr(508)]  <.GCPI246_0 : 108dc4 >			  ## decoder_api.c:117:9
  108bc8:    21 80       	r1 = 4 			  ## decoder_api.c:117:9
  108bca:    fd e1 df 8d 	call -20038 <check_ext_api : 103d88 >			  ## decoder_api.c:117:9
  108bce:    01 c6       	r1 = r0 			  ## decoder_api.c:117:9
  108bd0:    00 80       	r0 = 0 			  ## decoder_api.c:117:9
  108bd2:    01 98       	cmp r1, 0			  ## decoder_api.c:117:9
  108bd4:    00 fb 31 0f 	ifs (nzcv != 0) goto 486 <decoder_io+0x20A : 108dbe >			  ## decoder_api.c:117:9
  108bd8:    44 60       	[sp+ 4] = r4 
  108bda:    50 ea 00 00 	r8 = 0 
  108bde:    60 e9 08 08 	[sp+ 32] = r8 			  ## decoder_api.c:132:14
  108be2:    11 ea 01 81 	r1 = 33025 
  108be6:    20 e4 0b 79 	r11 = [addr(484)]  <.GCPI246_2 : 108dcc >
  108bea:    00 ed fc 14 	r12 = sp + 20 
  108bee:    20 e4 09 78 	r9 = [addr(480)]  <.GCPI246_3 : 108dd0 >
  108bf2:    20 e4 0a 78 	r10 = [addr(480)]  <.GCPI246_4 : 108dd4 >
  108bf6:    04 80       	r4 = 0 
  108bf8:    c6 60       	[sp+ 12] = r6 
  108bfa:    05 61       	[sp+ 16] = r5 
  108bfc:    87 60       	[sp+ 8] = r7 
  108bfe:    38 08       	goto 112 <decoder_io+0xBC : 108c70 >
  108c00:    80 f1 50 04 	r0 = r5 & setbit(r4) 			  ## decoder_api.c:137:27
  108c04:    34 10       	ifs (nzcv == 0) goto 104 <decoder_io+0xBA : 108c6e >			  ## decoder_api.c:137:27
  108c06:    20 f7 4d 02 	r13 = r4 << 2 			  ## decoder_api.c:92:38
  108c0a:    20 e7 b1 0d 	r1 = [r11 + r13] 			  ## decoder_api.c:92:38
  108c0e:    a0 c6       	r0 = r12 			  ## decoder_api.c:93:5
  108c10:    a9 01       	call r1			  ## decoder_api.c:93:5
  108c12:    06 80       	r6 = 0 
  108c14:    9f c6       	r7 = r11 
  108c16:    8d c6       	r5 = r9 
  108c18:    14 08       	goto 40 <decoder_io+0x8E : 108c42 >
  108c1a:    26 ce       	cmp r4, r6			  ## decoder_api.c:95:13
  108c1c:    0f 10       	ifs (nzcv == 0) goto 30 <decoder_io+0x88 : 108c3c >			  ## decoder_api.c:95:13
  108c1e:    39 48       	r1 = [r7 + 0] 			  ## decoder_api.c:98:23
  108c20:    20 91       	r0 = sp + 36 
  108c22:    a9 01       	call r1			  ## decoder_api.c:99:9
  108c24:    80 41       	r0 = [sp+ 24] 			  ## decoder_api.c:100:29
  108c26:    41 42       	r1 = [sp+ 36] 			  ## decoder_api.c:100:17
  108c28:    08 ce       	cmp r1, r0			  ## decoder_api.c:100:34
  108c2a:    08 12       	if (nzcv >= 0) goto 16 <decoder_io+0x88 : 108c3c >			  ## decoder_api.c:100:34
  108c2c:    80 42       	r0 = [sp+ 40] 			  ## decoder_api.c:100:53
  108c2e:    41 41       	r1 = [sp+ 20] 			  ## decoder_api.c:100:41
  108c30:    08 ce       	cmp r1, r0			  ## decoder_api.c:100:13
  108c32:    32 03       	if (nzcv < 0) {			  ## decoder_api.c:107:34
  108c34:    28 48       		r0 = [r5 + 0] 			  ## decoder_api.c:107:34
  108c36:    01 80       		r1 = 0 			  ## decoder_api.c:341:5
  108c38:    ff e1 0f dd 		call -1120
                               	} <decoder_stop_phy : 1087dc >			  ## decoder_api.c:341:5
  108c3c:    3f d1       	r7 = r7 + 4 			  ## decoder_api.c:94:5
  108c3e:    2d d1       	r5 = r5 + 4 			  ## decoder_api.c:94:5
  108c40:    76 d0       	r6 = r6 + 1 			  ## decoder_api.c:94:36
  108c42:    36 98       	cmp r6, 6			  ## decoder_api.c:94:5
  108c44:    ea 11       	ifs (nzcv != 0) goto -44 <decoder_io+0x66 : 108c1a >			  ## decoder_api.c:94:5
  108c46:    87 40       	r7 = [sp+ 8] 
  108c48:    38 c6       	r0 = r7 			  ## decoder_api.c:143:9
  108c4a:    01 80       	r1 = 0 			  ## decoder_api.c:143:9
  108c4c:    fd e1 4f 9d 	call -19544 <vfs_seek : 103ff8 >			  ## decoder_api.c:143:9
  108c50:    60 e9 08 08 	[sp+ 32] = r8 			  ## decoder_api.c:145:15
  108c54:    20 e7 a5 0d 	r5 = [r10 + r13] 			  ## decoder_api.c:144:23
  108c58:    c6 40       	r6 = [sp+ 12] 
  108c5a:    30 c6       	r0 = r6 			  ## decoder_api.c:146:45
  108c5c:    ff e1 9f e1 	call -974 <check_dp : 108892 >			  ## decoder_api.c:146:45
  108c60:    02 c6       	r2 = r0 			  ## decoder_api.c:146:45
  108c62:    01 91       	r1 = sp + 32 			  ## decoder_api.c:146:45
  108c64:    38 c6       	r0 = r7 			  ## decoder_api.c:146:15
  108c66:    ad 01       	call r5			  ## decoder_api.c:146:15
  108c68:    01 c6       	r1 = r0 			  ## decoder_api.c:146:15
  108c6a:    05 41       	r5 = [sp+ 16] 
  108c6c:    81 20       	if (r1 == 0) goto 16 <decoder_io+0xCA : 108c7e >
  108c6e:    64 d0       	r4 = r4 + 1 			  ## decoder_api.c:136:61
  108c70:    2c 98       	cmp r4, 5			  ## decoder_api.c:136:5
  108c72:    c6 19       	if (nzcv <= 0) goto -116 <decoder_io+0x4C : 108c00 >			  ## decoder_api.c:136:5
  108c74:    41 20       	if (r1 == 0) goto 8 <decoder_io+0xCA : 108c7e >
  108c76:    10 2d       	r0 = [addr(336)]  <.GCPI246_1 : 108dc8 >			  ## decoder_api.c:222:9
  108c78:    dd e1 0f 1b 	call -285856 <xprintf : c2fdc >			  ## decoder_api.c:222:9
  108c7c:    9f 08       	goto 318 <decoder_io+0x208 : 108dbc >
  108c7e:    05 80       	r5 = 0 
  108c80:    c5 61       	[sp+ 28] = r5 			  ## decoder_api.c:154:25
  108c82:    85 61       	[sp+ 24] = r5 			  ## decoder_api.c:154:25
  108c84:    45 61       	[sp+ 20] = r5 			  ## decoder_api.c:154:25
  108c86:    a1 90       	r1 = sp + 20 			  ## decoder_api.c:154:25
  108c88:    38 c6       	r0 = r7 			  ## decoder_api.c:155:9
  108c8a:    ff e1 7f a5 	call -2898 <vfs_get_attrs : 10813c >			  ## decoder_api.c:155:9
  108c8e:    80 41       	r0 = [sp+ 24] 			  ## decoder_api.c:157:19
  108c90:    90 20       	if (r0 == 0) goto 18 <decoder_io+0xF0 : 108ca4 >
  108c92:    01 42       	r1 = [sp+ 32] 			  ## decoder_api.c:158:35
  108c94:    4a 48       	r2 = [r1 + 4] 			  ## decoder_api.c:375:16
  108c96:    40 62       	[sp+ 36] = r0 			  ## decoder_api.c:377:20
  108c98:    88 48       	r0 = [r1 + 8] 			  ## decoder_api.c:378:27
  108c9a:    53 4a       	r3 = [r2 + 36] 			  ## decoder_api.c:378:10
  108c9c:    22 91       	r2 = sp + 36 			  ## decoder_api.c:378:10
  108c9e:    11 ea 84 00 	r1 = 132 			  ## decoder_api.c:378:5
  108ca2:    ab 01       	call r3			  ## decoder_api.c:378:5
  108ca4:    04 42       	r4 = [sp+ 32] 			  ## decoder_api.c:160:25
  108ca6:    65 6a       	[r4 + 36] = r5 			  ## decoder_api.c:161:30
  108ca8:    27 c6       	r7 = r4 			  ## decoder_api.c:163:38
  108caa:    24 e8 78 06 	r8 = [++ r7 = 24] 			  ## decoder_api.c:163:38
  108cae:    00 41       	r0 = [sp+ 16] 			  ## decoder_api.c:166:13
  108cb0:    0d f4 00 80 	tst r0, 4096			  ## decoder_api.c:166:13
  108cb4:    42 10       	ifs (nzcv == 0) goto 132 <decoder_io+0x186 : 108d3a >
  108cb6:    65 49       	r5 = [r4 + 20] 			  ## decoder_api.c:167:62
  108cb8:    20 e4 09 47 	r9 = [addr(284)]  <.GCPI246_5 : 108dd8 >			  ## speed_api.c:23:5
  108cbc:    88 c6       	r0 = r9 			  ## speed_api.c:23:5
  108cbe:    dd e1 df 18 	call -285926 <xprintf : c2fdc >			  ## speed_api.c:23:5
  108cc2:    96 29       	r6 = [addr(280)]  <.GCPI246_6 : 108ddc >			  ## speed_api.c:26:22
  108cc4:    35 70       	h[r6 + 0] = r5 			  ## speed_api.c:26:22
  108cc6:    20 83       	r0 = 100 			  ## speed_api.c:30:27
  108cc8:    30 74       	h[r6 + 2] = r0 			  ## speed_api.c:30:27
  108cca:    80 82       	r0 = 80 			  ## speed_api.c:33:21
  108ccc:    70 7a       	b[r6 + 5] = r0 			  ## speed_api.c:33:21
  108cce:    10 ea 90 00 	r0 = 144 			  ## speed_api.c:34:22
  108cd2:    70 7c       	b[r6 + 6] = r0 			  ## speed_api.c:34:22
  108cd4:    20 80       	r0 = 4 			  ## speed_api.c:35:21
  108cd6:    70 78       	b[r6 + 4] = r0 			  ## speed_api.c:35:21
  108cd8:    08 80       	r0 = 1 			  ## speed_api.c:36:23
  108cda:    70 7e       	b[r6 + 7] = r0 			  ## speed_api.c:36:23
  108cdc:    88 c6       	r0 = r9 			  ## speed_api.c:68:5
  108cde:    dd e1 df 17 	call -285958 <xprintf : c2fdc >			  ## speed_api.c:68:5
  108ce2:    30 50       	r0 = h[r6 + 0] 			  ## speed_api.c:71:30
  108ce4:    ff e1 af df 	call -1036 <sp_need_buf : 1088dc >			  ## speed_api.c:71:16
  108ce8:    01 c6       	r1 = r0 			  ## speed_api.c:71:16
  108cea:    0e ef 10 3c 	cmp r1, 3008			  ## speed_api.c:72:9
  108cee:    06 19       	if (nzcv <= 0) goto 12 <decoder_io+0x148 : 108cfc >			  ## speed_api.c:72:9
  108cf0:    d0 28       	r0 = [addr(268)]  <.GCPI246_14 : 108dfc >			  ## speed_api.c:73:9
  108cf2:    dd e1 3f 17 	call -285978 <xprintf : c2fdc >			  ## speed_api.c:73:9
  108cf6:    00 80       	r0 = 0 			  ## decoder_api.c:167:34
  108cf8:    e0 69       	[r4 + 28] = r0 			  ## decoder_api.c:167:34
  108cfa:    1e 08       	goto 60 <decoder_io+0x184 : 108d38 >			  ## decoder_api.c:167:34
  108cfc:    4f 2e       	r7 = [addr(228)]  <.GCPI246_7 : 108de0 >			  ## speed_api.c:78:5
  108cfe:    c9 2d       	r1 = [addr(220)]  <.GCPI246_6 : 108ddc >			  ## speed_api.c:78:5
  108d00:    4a 2e       	r2 = [addr(228)]  <.GCPI246_8 : 108de4 >			  ## speed_api.c:78:5
  108d02:    38 c6       	r0 = r7 			  ## speed_api.c:78:5
  108d04:    ff e1 6f df 	call -1044 <change_speedpitch_coeff : 1088f4 >			  ## speed_api.c:78:5
  108d08:    0e 2e       	r6 = [addr(224)]  <.GCPI246_9 : 108de8 >			  ## speed_api.c:80:5
  108d0a:    30 c6       	r0 = r6 			  ## speed_api.c:80:5
  108d0c:    01 80       	r1 = 0 			  ## speed_api.c:80:5
  108d0e:    e2 80       	r2 = 28 			  ## speed_api.c:80:5
  108d10:    dd e1 4f 12 	call -286136 <memset : c2f5c >			  ## speed_api.c:80:5
  108d14:    88 2d       	r0 = [addr(216)]  <.GCPI246_10 : 108dec >			  ## speed_api.c:81:18
  108d16:    89 2d       	r1 = [addr(216)]  <.GCPI246_11 : 108df0 >			  ## speed_api.c:81:18
  108d18:    47 e5 01 00 	d[r0 + 0] = r1, r7 			  ## speed_api.c:81:18
  108d1c:    30 68       	[r6 + 0] = r0 			  ## speed_api.c:84:20
  108d1e:    48 2d       	r0 = [addr(212)]  <.GCPI246_12 : 108df4 >			  ## speed_api.c:85:19
  108d20:    70 68       	[r6 + 4] = r0 			  ## speed_api.c:85:19
  108d22:    37 c6       	r7 = r6 			  ## speed_api.c:86:28
  108d24:    64 e8 78 02 	[++ r7 = 8] = r8 			  ## speed_api.c:86:28
  108d28:    08 2d       	r0 = [addr(208)]  <.GCPI246_13 : 108df8 >			  ## speed_api.c:88:5
  108d2a:    dd e1 7f 15 	call -286034 <xprintf : c2fdc >			  ## speed_api.c:88:5
  108d2e:    e6 69       	[r4 + 28] = r6 			  ## decoder_api.c:167:34
  108d30:    00 e2 49 04 	[r4 + 36] |= 4 			  ## decoder_api.c:169:38
  108d34:    60 e8 78 00 	[r7 + 0] = r8 			  ## decoder_api.c:171:38
  108d38:    c6 40       	r6 = [sp+ 12] 
  108d3a:    00 80       	r0 = 0 
  108d3c:    f8 68       	[r7 + 12] = r0 			  ## decoder_api.c:179:30
  108d3e:    00 42       	r0 = [sp+ 32] 			  ## decoder_api.c:181:27
  108d40:    43 49       	r3 = [r0 + 20] 			  ## decoder_api.c:181:34
  108d42:    0c ef 30 fa 	cmp r3, 32000			  ## decoder_api.c:181:13
  108d46:    44 40       	r4 = [sp+ 4] 			  ## decoder_api.c:181:13
  108d48:    0c 11       	ifs (nzcv != 0) goto 24 <decoder_io+0x1AE : 108d62 >			  ## decoder_api.c:181:13
  108d4a:    48 2b       	r0 = [addr(180)]  <.GCPI246_15 : 108e00 >			  ## decoder_api.c:189:29
  108d4c:    01 80       	r1 = 0 			  ## decoder_api.c:189:29
  108d4e:    ff e1 6f e6 	call -820 <src_hld_malloc : 108a1e >			  ## decoder_api.c:189:29
  108d52:    40 62       	[sp+ 36] = r0 			  ## decoder_api.c:189:19
  108d54:    20 91       	r0 = sp + 36 			  ## decoder_api.c:189:19
  108d56:    ff e1 1f d3 	call -1438 <src_reless : 1087bc >			  ## decoder_api.c:190:13
  108d5a:    88 2a       	r0 = [addr(168)]  <.GCPI246_16 : 108e04 >			  ## decoder_api.c:191:13
  108d5c:    dd e1 ef 13 	call -286084 <xprintf : c2fdc >			  ## decoder_api.c:191:13
  108d60:    0a 08       	goto 20 <decoder_io+0x1C2 : 108d76 >			  ## decoder_api.c:191:13
  108d62:    11 ea 00 7d 	r1 = 32000 			  ## decoder_api.c:182:28
  108d66:    01 60       	[sp] = r1 			  ## decoder_api.c:182:28
  108d68:    00 ed 02 2c 	r2 = r0 + 44 			  ## decoder_api.c:184:61
  108d6c:    38 c6       	r0 = r7 			  ## decoder_api.c:182:28
  108d6e:    81 c6       	r1 = r8 			  ## decoder_api.c:182:28
  108d70:    ff e1 2f ea 	call -700 <link_src_sound : 108ab8 >			  ## decoder_api.c:182:28
  108d74:    07 c6       	r7 = r0 			  ## decoder_api.c:182:28
  108d76:    00 42       	r0 = [sp+ 32] 			  ## decoder_api.c:204:29
  108d78:    00 4a       	r0 = [r0 + 32] 			  ## decoder_api.c:204:42
  108d7a:    b8 68       	[r7 + 8] = r0 			  ## decoder_api.c:204:27
  108d7c:    06 98       	cmp r6, 0			  ## decoder_point.c:76:9
  108d7e:    13 03       	ifs (nzcv != 0) {			  ## decoder_point.c:79:20
  108d80:    30 d1       		r0 = r6 + 4 			  ## decoder_point.c:79:20
  108d82:    01 80       		r1 = 0 			  ## decoder_point.c:79:5
  108d84:    02 82       		r2 = 64 			  ## decoder_point.c:79:5
  108d86:    dd e1 9f 0e 		call -286254
                               	} <memset : c2f5c >			  ## decoder_point.c:79:5
  108d8a:    d4 20       	if (r4 == 0) goto 26 <decoder_io+0x1F2 : 108da6 >			  ## decoder_point.c:79:5
  108d8c:    00 42       	r0 = [sp+ 32] 			  ## decoder_api.c:208:13
  108d8e:    40 e8 04 0d 	b[r0 + 52] = r4 			  ## decoder_api.c:208:25
  108d92:    31 c6       	r1 = r6 			  ## decoder_api.c:210:25
  108d94:    ff e1 af ed 	call -588 <get_dp : 108b4c >			  ## decoder_api.c:210:25
  108d98:    08 98       	cmp r0, 1			  ## decoder_api.c:210:17
  108d9a:    05 11       	ifs (nzcv != 0) goto 10 <decoder_io+0x1F2 : 108da6 >			  ## decoder_api.c:210:17
  108d9c:    30 c6       	r0 = r6 			  ## decoder_api.c:212:35
  108d9e:    ff e1 8f d7 	call -1296 <check_dp : 108892 >			  ## decoder_api.c:212:35
  108da2:    01 42       	r1 = [sp+ 32] 			  ## decoder_api.c:212:17
  108da4:    c8 68       	[r1 + 12] = r0 			  ## decoder_api.c:212:33
  108da6:    00 42       	r0 = [sp+ 32] 			  ## decoder_api.c:218:9
  108da8:    41 4a       	r1 = [r0 + 36] 			  ## decoder_api.c:218:29
  108daa:    12 ea 03 05 	r2 = 1283 			  ## decoder_api.c:218:29
  108dae:    11 da       	r1 |= r2 			  ## decoder_api.c:218:29
  108db0:    41 6a       	[r0 + 36] = r1 			  ## decoder_api.c:218:29
  108db2:    7b e1 5f e7 	call -1082134 <kick_decoder : aa0 >			  ## decoder_api.c:219:9
  108db6:    00 2d       	r0 = [addr(80)]  <.GCPI246_17 : 108e08 >			  ## decoder_api.c:220:9
  108db8:    dd e1 0f 11 	call -286176 <xprintf : c2fdc >			  ## decoder_api.c:220:9
  108dbc:    00 42       	r0 = [sp+ 32] 			  ## decoder_api.c:231:12
  108dbe:    2c cd       	sp += 44 
  108dc0:    1d c0       	{pc, r13-r4} = [sp++] 
  108dc2:    00 00       	nop


.GCPI246_0:
  108dc4:    2d a7 11 00     < 1156909 : 0x11A72D >

.GCPI246_1:
  108dc8:    71 a7 11 00     < 1156977 : 0x11A771 >

.GCPI246_2:
  108dcc:    80 5f 11 00     < 1138560 : 0x115F80 >

.GCPI246_3:
  108dd0:    00 0d 00 00     < 3328 : 0xD00 >

.GCPI246_4:
  108dd4:    98 5f 11 00     < 1138584 : 0x115F98 >

.GCPI246_5:
  108dd8:    a2 b2 11 00     < 1159842 : 0x11B2A2 >

.GCPI246_6:
  108ddc:    08 28 00 00     < 10248 : 0x2808 >

.GCPI246_7:
  108de0:    10 28 00 00     < 10256 : 0x2810 >

.GCPI246_8:
  108de4:    d8 60 11 00     < 1138904 : 0x1160D8 >

.GCPI246_9:
  108de8:    d0 33 00 00     < 13264 : 0x33D0 >

.GCPI246_10:
  108dec:    ec 33 00 00     < 13292 : 0x33EC >

.GCPI246_11:
  108df0:    24 72 11 00     < 1143332 : 0x117224 >

.GCPI246_12:
  108df4:    40 78 10 00     < 1079360 : 0x107840 >

.GCPI246_13:
  108df8:    e7 b2 11 00     < 1159911 : 0x11B2E7 >

.GCPI246_14:
  108dfc:    be b2 11 00     < 1159870 : 0x11B2BE >

.GCPI246_15:
  108e00:    88 65 11 00     < 1140104 : 0x116588 >

.GCPI246_16:
  108e04:    32 a7 11 00     < 1156914 : 0x11A732 >

.GCPI246_17:
  108e08:    52 a7 11 00     < 1156946 : 0x11A752 >

play_one_file:
  108e0c:    19 c2       	[--sp] = {rets, r9-r4} 			  ## simple_play_file.c:183:0
  108e0e:    fc cd       	sp += -4 			  ## simple_play_file.c:183:0
  108e10:    07 c6       	r7 = r0 			  ## simple_play_file.c:183:0
  108e12:    20 e8 78 04 	r8 = [r7 + 16] 			  ## simple_play_file.c:185:50
  108e16:    b8 48       	r0 = [r7 + 8] 			  ## simple_play_file.c:122:25
  108e18:    01 80       	r1 = 0 			  ## simple_play_file.c:122:5
  108e1a:    ff e1 7f d1 	call -1490 <decoder_stop : 10884c >			  ## simple_play_file.c:122:5
  108e1e:    38 4a       	r0 = [r7 + 32] 			  ## simple_play_file.c:129:50
  108e20:    3c c6       	r4 = r7 			  ## simple_play_file.c:129:27
  108e22:    04 e8 41 4a 	r1 = b[++ r4 = 41] 			  ## simple_play_file.c:129:27
  108e26:    09 a2       	r1 = r1 << 2 			  ## simple_play_file.c:129:27
  108e28:    20 e7 02 01 	r2 = [r0 + r1] 			  ## simple_play_file.c:129:27
  108e2c:    20 e8 79 00 	r9 = [r7 + 0] 			  ## simple_play_file.c:127:34
  108e30:    3d d1       	r5 = r7 + 4 			  ## simple_play_file.c:128:35
  108e32:    88 c6       	r0 = r9 			  ## simple_play_file.c:69:11
  108e34:    29 c6       	r1 = r5 			  ## simple_play_file.c:69:11
  108e36:    ff e1 9f 94 	call -3438 <vfs_openbypath : 1080cc >			  ## simple_play_file.c:69:11
  108e3a:    06 c6       	r6 = r0 			  ## simple_play_file.c:69:11
  108e3c:    76 20       	if (r6 == 0) goto 14 <play_one_file+0x40 : 108e4c >			  ## simple_play_file.c:70:9
  108e3e:    c0 2e       	r0 = [addr(108)]  <.GCPI247_0 : 108eac >			  ## simple_play_file.c:71:9
  108e40:    31 c6       	r1 = r6 			  ## simple_play_file.c:71:9
  108e42:    dd e1 bf 0c 	call -286314 <xprintf : c2fdc >			  ## simple_play_file.c:71:9
  108e46:    30 c6       	r0 = r6 			  ## simple_play_file.c:203:5
  108e48:    04 cd       	sp += 4 			  ## simple_play_file.c:203:5
  108e4a:    19 c0       	{pc, r9-r4} = [sp++] 			  ## simple_play_file.c:203:5
  108e4c:    80 ef 80 00 	cmp r8, 0			  ## simple_play_file.c:76:9
  108e50:    0d 10       	ifs (nzcv == 0) goto 26 <play_one_file+0x60 : 108e6c >			  ## simple_play_file.c:76:9
  108e52:    88 c6       	r0 = r9 			  ## simple_play_file.c:77:15
  108e54:    29 c6       	r1 = r5 			  ## simple_play_file.c:77:15
  108e56:    82 c6       	r2 = r8 			  ## simple_play_file.c:77:15
  108e58:    ff e1 9f cf 	call -1550 <vfs_openbyindex : 10884e >			  ## simple_play_file.c:77:15
  108e5c:    06 c6       	r6 = r0 			  ## simple_play_file.c:77:15
  108e5e:    66 20       	if (r6 == 0) goto 12 <play_one_file+0x60 : 108e6c >
  108e60:    00 2d       	r0 = [addr(80)]  <.GCPI247_1 : 108eb0 >			  ## simple_play_file.c:79:13
  108e62:    31 c6       	r1 = r6 			  ## simple_play_file.c:79:13
  108e64:    82 c6       	r2 = r8 			  ## simple_play_file.c:79:13
  108e66:    dd e1 9f 0b 	call -286350 <xprintf : c2fdc >			  ## simple_play_file.c:79:13
  108e6a:    ed 0f       	goto -38 <play_one_file+0x3A : 108e46 >			  ## simple_play_file.c:79:13
  108e6c:    23 5a       	r3 = b[r4 + 1] 			  ## simple_play_file.c:141:24
  108e6e:    fa 48       	r2 = [r7 + 12] 			  ## simple_play_file.c:143:42
  108e70:    b9 51       	r1 = h[r7 + 24] 			  ## simple_play_file.c:142:35
  108e72:    78 48       	r0 = [r7 + 4] 			  ## simple_play_file.c:141:42
  108e74:    ff e1 ef e9 	call -708 <decoder_io : 108bb4 >			  ## simple_play_file.c:141:24
  108e78:    b8 68       	[r7 + 8] = r0 			  ## simple_play_file.c:141:22
  108e7a:    40 21       	if (r0 == 0) goto 40 <play_one_file+0x98 : 108ea4 >			  ## simple_play_file.c:141:22
  108e7c:    78 48       	r0 = [r7 + 4] 			  ## simple_play_file.c:149:22
  108e7e:    00 ed 72 14 	r2 = r7 + 20 			  ## simple_play_file.c:149:67
  108e82:    91 80       	r1 = 18 			  ## simple_play_file.c:149:5
  108e84:    ff e1 6f af 	call -2580 <vfs_ioctl : 108474 >			  ## simple_play_file.c:149:5
  108e88:    02 e5 73 04 	r3, r2 = d[r7 + 16] 			  ## simple_play_file.c:150:5
  108e8c:    21 5b       	r1 = b[r4 + -15] 			  ## simple_play_file.c:150:5
  108e8e:    20 5a       	r0 = b[r4 + 1] 			  ## simple_play_file.c:150:5
  108e90:    00 60       	[sp] = r0 			  ## simple_play_file.c:150:5
  108e92:    00 2a       	r0 = [addr(32)]  <.GCPI247_2 : 108eb4 >			  ## simple_play_file.c:150:5
  108e94:    dd e1 2f 0a 	call -286396 <xprintf : c2fdc >			  ## simple_play_file.c:150:5
  108e98:    f8 48       	r0 = [r7 + 12] 			  ## simple_play_file.c:187:41
  108e9a:    06 80       	r6 = 0 
  108e9c:    40 25       	if (r0 == 0) goto -88 <play_one_file+0x3A : 108e46 >
  108e9e:    39 49       	r1 = [r7 + 16] 			  ## simple_play_file.c:189:33
  108ea0:    01 68       	[r0 + 0] = r1 			  ## simple_play_file.c:189:24
  108ea2:    d1 0f       	goto -94 <play_one_file+0x3A : 108e46 >			  ## simple_play_file.c:189:24
  108ea4:    16 ea 01 81 	r6 = 33025 
  108ea8:    ce 0f       	goto -100 <play_one_file+0x3A : 108e46 >
  108eaa:    00 00       	nop


.GCPI247_0:
  108eac:    fc b8 11 00     < 1161468 : 0x11B8FC >

.GCPI247_1:
  108eb0:    29 b9 11 00     < 1161513 : 0x11B929 >

.GCPI247_2:
  108eb4:    5e b9 11 00     < 1161566 : 0x11B95E >

simple_play_file_operate:
  108eb8:    17 c2       	[--sp] = {rets, r7-r4} 			  ## simple_play_file.c:156:0
  108eba:    0c c6       	r4 = r1 			  ## simple_play_file.c:156:0
  108ebc:    05 c6       	r5 = r0 			  ## simple_play_file.c:156:0
  108ebe:    4e 80       	r6 = 9 			  ## simple_play_file.c:156:0
  108ec0:    07 2c       	r7 = [addr(64)]  <.GCPI248_0 : 108f00 >			  ## simple_play_file.c:156:0
  108ec2:    1b 08       	goto 54 <simple_play_file_operate+0x42 : 108efa >			  ## simple_play_file.c:156:0
  108ec4:    5c 99       	cmp r4, 43			  ## simple_play_file.c:160:13
  108ec6:    08 10       	ifs (nzcv == 0) goto 16 <simple_play_file_operate+0x20 : 108ed8 >			  ## simple_play_file.c:160:13
  108ec8:    6c 99       	cmp r4, 45
  108eca:    0e 11       	ifs (nzcv != 0) goto 28 <simple_play_file_operate+0x30 : 108ee8 >
  108ecc:    28 49       	r0 = [r5 + 16] 			  ## simple_play_file.c:162:26
  108ece:    c0 d3       	r0 = r0 + -1 			  ## simple_play_file.c:162:26
  108ed0:    28 69       	[r5 + 16] = r0 			  ## simple_play_file.c:162:26
  108ed2:    0a 11       	ifs (nzcv != 0) goto 20 <simple_play_file_operate+0x30 : 108ee8 >			  ## simple_play_file.c:162:26
  108ed4:    68 49       	r0 = [r5 + 20] 			  ## simple_play_file.c:164:40
  108ed6:    07 08       	goto 14 <simple_play_file_operate+0x2E : 108ee6 >			  ## simple_play_file.c:164:40
  108ed8:    00 e5 52 04 	r2, r0 = d[r5 + 16] 			  ## simple_play_file.c:169:40
  108edc:    41 d0       	r1 = r0 + 1 			  ## simple_play_file.c:168:26
  108ede:    08 80       	r0 = 1 			  ## simple_play_file.c:168:26
  108ee0:    0a ce       	cmp r1, r2			  ## simple_play_file.c:169:17
  108ee2:    90 03       	if (nzcv <= 0) {			  ## simple_play_file.c:169:17
  108ee4:    08 c6       		r0 = r1 
                               	}			  ## simple_play_file.c:169:17
  108ee6:    28 69       	[r5 + 16] = r0 
  108ee8:    28 c6       	r0 = r5 			  ## simple_play_file.c:173:15
  108eea:    90 04       	call -224 <play_one_file : 108e0c >			  ## simple_play_file.c:173:15
  108eec:    01 c6       	r1 = r0 			  ## simple_play_file.c:173:15
  108eee:    61 20       	if (r1 == 0) goto 12 <simple_play_file_operate+0x44 : 108efc >
  108ef0:    38 c6       	r0 = r7 			  ## simple_play_file.c:177:9
  108ef2:    32 c6       	r2 = r6 			  ## simple_play_file.c:177:9
  108ef4:    dd e1 2f 07 	call -286492 <xprintf : c2fdc >			  ## simple_play_file.c:177:9
  108ef8:    f6 d3       	r6 = r6 + -1 			  ## simple_play_file.c:159:5
  108efa:    4e 26       	if (r6 != 0) goto -56 <simple_play_file_operate+0xC : 108ec4 >
  108efc:    17 c0       	{pc, r7-r4} = [sp++] 
  108efe:    00 00       	nop


.GCPI248_0:
  108f00:    97 b9 11 00     < 1161623 : 0x11B997 >

play_next_file:
  108f04:    59 81       	r1 = 43 			  ## simple_play_file.c:210:0
  108f06:    d8 0f       	goto -80 <simple_play_file_operate : 108eb8 >			  ## simple_play_file.c:211:12


decoder_pause:
  108f08:    1f c2       	[--sp] = {rets} 			  ## decoder_api.c:272:0
  108f0a:    f0 20       	if (r0 == 0) goto 30 <decoder_pause+0x22 : 108f2a >			  ## decoder_api.c:272:0
  108f0c:    41 4a       	r1 = [r0 + 36] 			  ## decoder_api.c:288:24
  108f0e:    00 f4 10 01 	tst r1, 1			  ## decoder_api.c:273:9
  108f12:    0b 10       	ifs (nzcv == 0) goto 22 <decoder_pause+0x22 : 108f2a >			  ## decoder_api.c:273:9
  108f14:    41 4a       	r1 = [r0 + 36] 			  ## decoder_api.c:276:23
  108f16:    39 d9       	r1 ^= 128			  ## decoder_api.c:276:23
  108f18:    41 6a       	[r0 + 36] = r1 			  ## decoder_api.c:276:23
  108f1a:    41 4a       	r1 = [r0 + 36] 			  ## decoder_api.c:277:26
  108f1c:    89 c9       	r1 = r1.b (s) 			  ## decoder_api.c:277:11
  108f1e:    01 98       	cmp r1, 0			  ## decoder_api.c:277:9
  108f20:    a1 03       	ifs (nzcv >= 0) {			  ## decoder_api.c:278:27
  108f22:    0f e2 09 80 		[r0 + 36] |= 256 			  ## decoder_api.c:278:27
  108f26:    7b e1 bf db 		call -1082506
                               	} <kick_decoder : aa0 >			  ## decoder_api.c:279:9
  108f2a:    1f c0       	{pc} = [sp++] 


play_prev_file:
  108f2c:    69 81       	r1 = 45 			  ## simple_play_file.c:206:0
  108f2e:    c4 0f       	goto -120 <simple_play_file_operate : 108eb8 >			  ## simple_play_file.c:207:12


get_decoder_status:
  108f30:    01 c6       	r1 = r0 			  ## simple_play_file.c:17:0
  108f32:    10 ea 24 11 	r0 = 4388 			  ## simple_play_file.c:17:0
  108f36:    b1 20       	if (r1 == 0) goto 22 <get_decoder_status+0x1E : 108f4e >			  ## simple_play_file.c:17:0
  108f38:    49 4a       	r1 = [r1 + 36] 			  ## simple_play_file.c:22:29
  108f3a:    00 f4 10 01 	tst r1, 1			  ## simple_play_file.c:23:9
  108f3e:    07 10       	ifs (nzcv == 0) goto 14 <get_decoder_status+0x1E : 108f4e >			  ## simple_play_file.c:23:9
  108f40:    89 c9       	r1 = r1.b (s) 			  ## simple_play_file.c:27:12
  108f42:    10 ea 24 11 	r0 = 4388 			  ## simple_play_file.c:27:12
  108f46:    01 98       	cmp r1, 0			  ## simple_play_file.c:27:12
  108f48:    a0 03       	ifs (nzcv >= 0) {			  ## simple_play_file.c:27:12
  108f4a:    10 ea 23 11 		r0 = 4387 
                               	}			  ## simple_play_file.c:27:12
  108f4e:    20 00       	rts			  ## simple_play_file.c:28:1


wdt_rx_con:
  108f50:    10 ea 80 00 	r0 = 128 			  ## wdt.c:38:0
  108f54:    7b fa 0f ad 	goto -1084000 <p33_rx_1byte : 4f8 >			  ## wdt.c:39:12


__hw_lrc_time_set:
  108f58:    15 c2       	[--sp] = {rets, r5, r4} 			  ## power_hw.c:1215:0
  108f5a:    04 c6       	r4 = r0 			  ## power_hw.c:1215:0
  108f5c:    08 c6       	r0 = r1 			  ## power_hw.c:1216:5
  108f5e:    09 80       	r1 = 1 			  ## power_hw.c:1216:5
  108f60:    ff e1 ef 60 	call -5092 <__hw_set_osc_hz : 107b80 >			  ## power_hw.c:1216:5
  108f64:    24 21       	if (r4 == 0) goto 36 <__hw_lrc_time_set+0x32 : 108f8a >
  108f66:    80 81       	r0 = 48 			  ## power_hw.c:1219:9
  108f68:    49 80       	r1 = 9 			  ## power_hw.c:1219:9
  108f6a:    7b e1 1f ad 	call -1083998 <p33_tx_1byte : 510 >			  ## power_hw.c:1219:9
  108f6e:    00 2d       	r0 = [addr(80)]  <.GCPI255_0 : 108fc0 >			  ## power_hw.c:1221:74
  108f70:    20 e8 01 2c 	r1 = [r0 + 176] 			  ## power_hw.c:1221:74
  108f74:    0d ed 11 ac 	r1 = r1 + 3500 			  ## power_hw.c:1221:61
  108f78:    81 6a       	[r0 + 40] = r1 			  ## power_hw.c:1221:33
  108f7a:    a0 82       	r0 = 84 			  ## power_hw.c:1223:9
  108f7c:    21 82       	r1 = 68 			  ## power_hw.c:1223:9
  108f7e:    7b e1 7f ac 	call -1084018 <p33_tx_1byte : 510 >			  ## power_hw.c:1223:9
  108f82:    90 81       	r0 = 50 			  ## power_hw.c:1225:9
  108f84:    19 80       	r1 = 3 			  ## power_hw.c:1225:9
  108f86:    7b e1 3f ac 	call -1084026 <p33_tx_1byte : 510 >			  ## power_hw.c:1225:9
  108f8a:    44 2b       	r4 = [addr(52)]  <.GCPI255_0 : 108fc0 >			  ## power_hw.c:1228:38
  108f8c:    a0 4a       	r0 = [r4 + 40] 			  ## power_hw.c:1228:38
  108f8e:    ff e1 ff 6b 	call -4738 <__tcnt_us : 107d10 >			  ## power_hw.c:1228:20
  108f92:    e0 69       	[r4 + 28] = r0 			  ## power_hw.c:1228:18
  108f94:    21 4a       	r1 = [r4 + 32] 			  ## power_hw.c:1229:36
  108f96:    0d d4       	r5 = r1 + r0 			  ## power_hw.c:1229:41
  108f98:    10 ea 68 06 	r0 = 1640 			  ## power_hw.c:1229:58
  108f9c:    ff e1 8f 6b 	call -4752 <__tcnt_us : 107d10 >			  ## power_hw.c:1229:58
  108fa0:    2d d4       	r5 = r5 + r0 			  ## power_hw.c:1229:56
  108fa2:    65 6a       	[r4 + 36] = r5 			  ## power_hw.c:1229:26
  108fa4:    10 ea dc 05 	r0 = 1500 			  ## power_hw.c:1230:29
  108fa8:    ff e1 2f 6b 	call -4764 <__tcnt_us : 107d10 >			  ## power_hw.c:1230:29
  108fac:    2d d4       	r5 = r5 + r0 			  ## power_hw.c:1230:26
  108fae:    65 6a       	[r4 + 36] = r5 			  ## power_hw.c:1230:26
  108fb0:    10 ea dc 05 	r0 = 1500 			  ## power_hw.c:1231:29
  108fb4:    ff e1 cf 6a 	call -4776 <__tcnt_us : 107d10 >			  ## power_hw.c:1231:29
  108fb8:    40 d5       	r0 = r0 + r5 			  ## power_hw.c:1231:26
  108fba:    60 6a       	[r4 + 36] = r0 			  ## power_hw.c:1231:26
  108fbc:    15 c0       	{pc, r5, r4} = [sp++] 			  ## power_hw.c:1231:26
  108fbe:    00 00       	nop			  ## power_hw.c:1231:26


.GCPI255_0:
  108fc0:    cc 08 00 00     < 2252 : 0x8CC >

__hw_nv_timer_is_runnig:
  108fc4:    1f c2       	[--sp] = {rets} 			  ## lp_timer_hw.c:486:0
  108fc6:    a8 81       	r0 = 53 			  ## lp_timer_hw.c:489:13
  108fc8:    7b e1 6f a9 	call -1084116 <p33_rx_1byte : 4f8 >			  ## lp_timer_hw.c:489:13
  108fcc:    00 f6 00 21 	r0 = uextra(r0, p:1, l:1) 			  ## lp_timer_hw.c:489:12
  108fd0:    1f c0       	{pc} = [sp++] 			  ## lp_timer_hw.c:489:12


__hw_nv_timer_get_period:
  108fd2:    18 c2       	[--sp] = {rets, r8-r4} 			  ## lp_timer_hw.c:211:0
  108fd4:    dc e1 6f fa 	call -286900 <local_irq_disable : c2f24 >			  ## lp_timer_hw.c:216:5
  108fd8:    04 2e       	r4 = [addr(96)]  <.GCPI257_0 : 109038 >			  ## lp_timer_hw.c:216:5
  108fda:    0f e3 40 80 	[r4 + 0] &= (~256) 			  ## lp_timer_hw.c:216:5
  108fde:    00 e2 40 01 	[r4 + 0] |= 1 			  ## lp_timer_hw.c:216:5
  108fe2:    10 ea 80 00 	r0 = 128 			  ## lp_timer_hw.c:217:5
  108fe6:    dc e1 3f fa 	call -286906 <p33_buf : c2f30 >			  ## lp_timer_hw.c:217:5
  108fea:    20 82       	r0 = 68 			  ## lp_timer_hw.c:218:5
  108fec:    dc e1 0f fa 	call -286912 <p33_buf : c2f30 >			  ## lp_timer_hw.c:218:5
  108ff0:    00 80       	r0 = 0 			  ## lp_timer_hw.c:219:11
  108ff2:    dc e1 df f9 	call -286918 <p33_buf : c2f30 >			  ## lp_timer_hw.c:219:11
  108ff6:    40 c6       	r8 = r0 			  ## lp_timer_hw.c:219:11
  108ff8:    00 80       	r0 = 0 			  ## lp_timer_hw.c:220:12
  108ffa:    dc e1 9f f9 	call -286926 <p33_buf : c2f30 >			  ## lp_timer_hw.c:220:12
  108ffe:    05 c6       	r5 = r0 			  ## lp_timer_hw.c:220:12
  109000:    00 80       	r0 = 0 			  ## lp_timer_hw.c:221:12
  109002:    dc e1 5f f9 	call -286934 <p33_buf : c2f30 >			  ## lp_timer_hw.c:221:12
  109006:    06 c6       	r6 = r0 			  ## lp_timer_hw.c:221:12
  109008:    00 80       	r0 = 0 			  ## lp_timer_hw.c:222:12
  10900a:    dc e1 1f f9 	call -286942 <p33_buf : c2f30 >			  ## lp_timer_hw.c:222:12
  10900e:    07 c6       	r7 = r0 			  ## lp_timer_hw.c:222:12
  109010:    20 48       	r0 = [r4 + 0] 			  ## lp_timer_hw.c:223:5
  109012:    91 ea fe fe 	r1 = -258 			  ## lp_timer_hw.c:223:5
  109016:    88 da       	r0 &= r1 			  ## lp_timer_hw.c:223:5
  109018:    20 68       	[r4 + 0] = r0 			  ## lp_timer_hw.c:223:5
  10901a:    20 f7 80 18 	r0 = r8 << 24 			  ## lp_timer_hw.c:219:22
  10901e:    29 b0       	r1 = r5 << 16 			  ## lp_timer_hw.c:220:23
  109020:    08 da       	r0 |= r1 			  ## lp_timer_hw.c:220:9
  109022:    31 a8       	r1 = r6 << 8 			  ## lp_timer_hw.c:221:23
  109024:    00 f0 04 01 	r4 = r0 | r1 			  ## lp_timer_hw.c:221:9
  109028:    dc e1 af f7 	call -286988 <local_irq_enable : c2f20 >			  ## lp_timer_hw.c:223:5
  10902c:    00 f0 40 07 	r0 = r4 | r7 			  ## lp_timer_hw.c:222:9
  109030:    ff e1 af 68 	call -4844 <__tus_cnt : 107d48 >			  ## lp_timer_hw.c:226:12
  109034:    18 c0       	{pc, r8-r4} = [sp++] 
  109036:    00 00       	nop


.GCPI257_0:
  109038:    88 3c 09 00     < 605320 : 0x93C88 >

__hw_pdown_enter:
  10903c:    15 c2       	[--sp] = {rets, r5, r4} 			  ## pmu_analog.c:417:0
  10903e:    0c 2c       	r4 = [addr(192)]  <.GCPI259_0 : 109100 >			  ## pmu_analog.c:418:29
  109040:    00 e8 40 50 	r0 = b[r4 + 65] 			  ## pmu_analog.c:418:5
  109044:    7b e1 0f a9 	call -1084128 <SET_WVDD_LEV : 568 >			  ## pmu_analog.c:418:5
  109048:    10 80       	r0 = 2 			  ## p33.h:333:9
  10904a:    11 ea f7 00 	r1 = 247 			  ## p33.h:333:9
  10904e:    7b e1 3f a7 	call -1084186 <p33_and_1byte : 538 >			  ## p33.h:333:9
  109052:    20 80       	r0 = 4 			  ## p33.h:333:9
  109054:    11 ea fe 00 	r1 = 254 			  ## p33.h:333:9
  109058:    7b e1 ef a6 	call -1084196 <p33_and_1byte : 538 >			  ## p33.h:333:9
  10905c:    88 80       	r0 = 17 			  ## pmu_analog.c:427:15
  10905e:    7b e1 bf a4 	call -1084266 <p33_rx_1byte : 4f8 >			  ## pmu_analog.c:427:15
  109062:    0d 2a       	r5 = [addr(160)]  <.GCPI259_1 : 109104 >			  ## pmu_analog.c:427:13
  109064:    a8 7c       	b[r5 + 10] = r0 			  ## pmu_analog.c:427:13
  109066:    88 80       	r0 = 17 			  ## p33.h:333:9
  109068:    11 ea fe 00 	r1 = 254 			  ## p33.h:333:9
  10906c:    7b e1 4f a6 	call -1084216 <p33_and_1byte : 538 >			  ## p33.h:333:9
  109070:    00 e8 40 06 	r0 = b[r4 + 24] 			  ## pmu_analog.c:430:17
  109074:    18 98       	cmp r0, 3			  ## pmu_analog.c:430:9
  109076:    02 03       	ifs (nzcv == 0) {			  ## p33.h:331:9
  109078:    00 80       		r0 = 0 			  ## p33.h:331:9
  10907a:    21 80       		r1 = 4 			  ## p33.h:331:9
  10907c:    7b e1 0f a2 		call -1084352
                               	} <p33_or_1byte : 4c0 >			  ## p33.h:331:9
  109080:    30 80       	r0 = 6 			  ## p33.h:323:11
  109082:    7b e1 9f a3 	call -1084302 <p33_rx_1byte : 4f8 >			  ## p33.h:323:11
  109086:    b0 80       	r0 = 22 			  ## pmu_analog.c:436:5
  109088:    11 ea da 00 	r1 = 218 			  ## pmu_analog.c:436:5
  10908c:    7b e1 4f a5 	call -1084248 <p33_and_1byte : 538 >			  ## pmu_analog.c:436:5
  109090:    00 e8 40 0f 	r0 = b[r4 + 60] 			  ## pmu_analog.c:438:20
  109094:    10 98       	cmp r0, 2			  ## pmu_analog.c:438:9
  109096:    26 10       	ifs (nzcv == 0) goto 76 <__hw_pdown_enter+0xA8 : 1090e4 >			  ## pmu_analog.c:438:9
  109098:    00 2f       	r0 = [addr(112)]  <.GCPI259_2 : 109108 >			  ## pmu_analog.c:441:24
  10909a:    0c e3 00 04 	[r0 + 0] &= (~33792) 			  ## pmu_analog.c:441:24
  10909e:    20 c6       	r0 = r4 			  ## pmu_analog.c:444:21
  1090a0:    04 e8 01 8c 	r1 = b[++ r0 = 50] 			  ## pmu_analog.c:444:21
  1090a4:    00 5a       	r0 = b[r0 + 1] 			  ## pmu_analog.c:444:43
  1090a6:    08 da       	r0 |= r1 			  ## pmu_analog.c:444:32
  1090a8:    00 c9       	r0 = r0.b 			  ## pmu_analog.c:444:32
  1090aa:    0b 10       	ifs (nzcv == 0) goto 22 <__hw_pdown_enter+0x86 : 1090c2 >			  ## pmu_analog.c:444:32
  1090ac:    b0 80       	r0 = 22 			  ## pmu_analog.c:445:13
  1090ae:    81 81       	r1 = 48 			  ## pmu_analog.c:445:13
  1090b0:    7b e1 6f a0 	call -1084404 <p33_or_1byte : 4c0 >			  ## pmu_analog.c:445:13
  1090b4:    00 e8 40 cc 	r0 = b[r4 + 51] 			  ## pmu_analog.c:447:21
  1090b8:    40 20       	if (r0 == 0) goto 8 <__hw_pdown_enter+0x86 : 1090c2 >			  ## pmu_analog.c:447:21
  1090ba:    b0 80       	r0 = 22 			  ## pmu_analog.c:448:13
  1090bc:    21 80       	r1 = 4 			  ## pmu_analog.c:448:13
  1090be:    7b e1 ff 9f 	call -1084418 <p33_or_1byte : 4c0 >			  ## pmu_analog.c:448:13
  1090c2:    80 2c       	r0 = [addr(72)]  <.GCPI259_3 : 10910c >
  1090c4:    f0 e2 0c 03 	[r0 + -16] |= 3 			  ## pmu_analog.c:452:22
  1090c8:    f0 e3 0c 20 	[r0 + -16] &= (~32) 			  ## pmu_analog.c:453:22
  1090cc:    41 4f       	r1 = [r0 + -12] 			  ## pmu_analog.c:455:31
  1090ce:    80 f3 11 e0 	r1 = r1 & 224 			  ## pmu_analog.c:455:36
  1090d2:    60 e8 51 13 	[r5 + 76] = r1 			  ## pmu_analog.c:455:21
  1090d6:    f0 e3 0d e0 	[r0 + -12] &= (~224) 			  ## pmu_analog.c:456:22
  1090da:    41 2b       	r1 = [addr(52)]  <.GCPI259_4 : 109110 >			  ## pmu_analog.c:459:25
  1090dc:    00 e3 10 03 	[r1 + 0] &= (~3) 			  ## pmu_analog.c:459:25
  1090e0:    00 e3 04 03 	[r0 + 16] &= (~3) 			  ## pmu_analog.c:462:23
  1090e4:    08 80       	r0 = 1 			  ## p33.h:331:9
  1090e6:    41 80       	r1 = 8 			  ## p33.h:331:9
  1090e8:    7b e1 af 9e 	call -1084460 <p33_or_1byte : 4c0 >			  ## p33.h:331:9
  1090ec:    10 ea bf 00 	r0 = 191 			  ## pmu_analog.c:467:5
  1090f0:    00 e7 43 00 	r3 = b[r4 + r0] 			  ## pmu_analog.c:467:5
  1090f4:    28 80       	r0 = 5 			  ## pmu_analog.c:467:5
  1090f6:    19 80       	r1 = 3 			  ## pmu_analog.c:467:5
  1090f8:    1a 80       	r2 = 3 			  ## pmu_analog.c:467:5
  1090fa:    7b e1 df 9e 	call -1084454 <P33_CON_SET : 4d8 >			  ## pmu_analog.c:467:5
  1090fe:    15 c0       	{pc, r5, r4} = [sp++] 			  ## pmu_analog.c:467:5


.GCPI259_0:
  109100:    cc 08 00 00     < 2252 : 0x8CC >

.GCPI259_1:
  109104:    60 1c 00 00     < 7264 : 0x1C60 >

.GCPI259_2:
  109108:    80 3c 09 00     < 605312 : 0x93C80 >

.GCPI259_3:
  10910c:    10 18 09 00     < 595984 : 0x91810 >

.GCPI259_4:
  109110:    08 1c 09 00     < 597000 : 0x91C08 >

lrc_tmr1_udelay:
  109114:    17 c2       	[--sp] = {rets, r7-r4} 			  ## power_hw.c:222:0
  109116:    41 2d       	r1 = [addr(84)]  <.GCPI268_0 : 10916c >			  ## power_hw.c:222:0
  109118:    0a 48       	r2 = [r1 + 0] 			  ## power_hw.c:224:28
  10911a:    43 2d       	r3 = [addr(84)]  <.GCPI268_1 : 109170 >
  10911c:    5d 48       	r5 = [r3 + 4] 			  ## power_hw.c:225:35
  10911e:    dc 4f       	r4 = [r3 + -4] 			  ## power_hw.c:226:35
  109120:    1e 48       	r6 = [r3 + 0] 			  ## power_hw.c:227:35
  109122:    7b e1 bf a1 	call -1084362 <__get_lrc_hz : 55c >			  ## power_hw.c:230:30
  109126:    0f 48       	r7 = [r1 + 0] 			  ## power_hw.c:231:5
  109128:    c9 f3 77 c0 	r7 = r7 & (~1572864) 			  ## power_hw.c:231:5
  10912c:    a7 d8       	r7 |= 1048576			  ## power_hw.c:231:5
  10912e:    0f 68       	[r1 + 0] = r7 			  ## power_hw.c:231:5
  109130:    07 82       	r7 = 64 			  ## power_hw.c:232:18
  109132:    df 6f       	[r3 + -4] = r7 			  ## power_hw.c:232:18
  109134:    07 80       	r7 = 0 			  ## power_hw.c:232:18
  109136:    1f 68       	[r3 + 0] = r7 			  ## power_hw.c:233:18
  109138:    00 fc 00 64 	r0 = r0 * 100 			  ## power_hw.c:230:28
  10913c:    87 2b       	r7 = [addr(56)]  <.GCPI268_2 : 109174 >			  ## power_hw.c:230:45
  10913e:    40 fc 00 07 	r0 = r0 / r7 			  ## power_hw.c:230:45
  109142:    58 68       	[r3 + 4] = r0 			  ## power_hw.c:234:18
  109144:    4f 82       	r7 = 73 			  ## power_hw.c:235:18
  109146:    df 6f       	[r3 + -4] = r7 			  ## power_hw.c:235:18
  109148:    df 4f       	r7 = [r3 + -4] 			  ## power_hw.c:236:23
  10914a:    bf c9       	r7 = r7.b (s) 			  ## power_hw.c:236:12
  10914c:    ff 9f       	cmp r7, -1			  ## power_hw.c:236:5
  10914e:    fc 1c       	ifs (nzcv > 0) goto -8 <lrc_tmr1_udelay+0x34 : 109148 >			  ## power_hw.c:236:5
  109150:    f0 e2 3f 40 	[r3 + -4] |= 64 			  ## power_hw.c:237:18
  109154:    76 c9       	r6 = r6.l 			  ## power_hw.c:240:9
  109156:    36 d4       	r6 = r6 + r0 			  ## power_hw.c:240:18
  109158:    68 c9       	r0 = r5.l 			  ## power_hw.c:240:34
  10915a:    30 ce       	cmp r6, r0			  ## power_hw.c:240:9
  10915c:    30 03       	if (nzcv < 0) {			  ## power_hw.c:241:22
  10915e:    1e 68       		[r3 + 0] = r6 
                               	}			  ## power_hw.c:241:22
  109160:    58 68       	[r3 + 4] = r0 			  ## power_hw.c:243:18
  109162:    60 c9       	r0 = r4.l 			  ## power_hw.c:244:20
  109164:    d8 6f       	[r3 + -4] = r0 			  ## power_hw.c:244:18
  109166:    0a 68       	[r1 + 0] = r2 			  ## power_hw.c:245:18
  109168:    17 c0       	{pc, r7-r4} = [sp++] 			  ## power_hw.c:245:18
  10916a:    00 00       	nop			  ## power_hw.c:245:18


.GCPI268_0:
  10916c:    00 18 09 00     < 595968 : 0x91800 >

.GCPI268_1:
  109170:    10 04 09 00     < 590864 : 0x90410 >

.GCPI268_2:
  109174:    40 42 0f 00     < 1000000 : 0xF4240 >

__hw_pdown_exit:
  109178:    14 c2       	[--sp] = {rets, r4} 			  ## pmu_analog.c:472:0
  10917a:    28 80       	r0 = 5 			  ## pmu_analog.c:474:5
  10917c:    19 80       	r1 = 3 			  ## pmu_analog.c:474:5
  10917e:    1a 80       	r2 = 3 			  ## pmu_analog.c:474:5
  109180:    03 80       	r3 = 0 			  ## pmu_analog.c:474:5
  109182:    7b e1 9f 9a 	call -1084590 <P33_CON_SET : 4d8 >			  ## pmu_analog.c:474:5
  109186:    88 29       	r0 = [addr(152)]  <.GCPI269_2 : 109220 >			  ## pmu_analog.c:477:20
  109188:    0c e2 00 04 	[r0 + 0] |= 33792 			  ## pmu_analog.c:477:20
  10918c:    cc 28       	r4 = [addr(140)]  <.GCPI269_0 : 109218 >			  ## pmu_analog.c:479:17
  10918e:    00 e8 40 06 	r0 = b[r4 + 24] 			  ## pmu_analog.c:479:17
  109192:    18 98       	cmp r0, 3			  ## pmu_analog.c:479:9
  109194:    02 03       	ifs (nzcv == 0) {			  ## p33.h:333:9
  109196:    00 80       		r0 = 0 			  ## p33.h:333:9
  109198:    11 ea fb 00 		r1 = 251 			  ## p33.h:333:9
  10919c:    7b e1 cf 9c 		call -1084520
                               	} <p33_and_1byte : 538 >			  ## p33.h:333:9
  1091a0:    00 e8 40 0f 	r0 = b[r4 + 60] 			  ## pmu_analog.c:483:20
  1091a4:    10 98       	cmp r0, 2			  ## pmu_analog.c:483:9
  1091a6:    18 10       	ifs (nzcv == 0) goto 48 <__hw_pdown_exit+0x60 : 1091d8 >			  ## pmu_analog.c:483:9
  1091a8:    c4 2f       	r4 = [addr(124)]  <.GCPI269_3 : 109224 >
  1091aa:    00 e2 40 01 	[r4 + 0] |= 1 			  ## pmu_analog.c:492:25
  1091ae:    b2 04       	call -156 <lrc_tmr1_udelay : 109114 >			  ## pmu_analog.c:493:9
  1091b0:    00 e2 40 02 	[r4 + 0] |= 2 			  ## pmu_analog.c:494:26
  1091b4:    af 04       	call -162 <lrc_tmr1_udelay : 109114 >			  ## pmu_analog.c:495:9
  1091b6:    04 2f       	r4 = [addr(112)]  <.GCPI269_4 : 109228 >			  ## pmu_analog.c:495:9
  1091b8:    00 e2 44 01 	[r4 + 16] |= 1 			  ## pmu_analog.c:500:22
  1091bc:    ab 04       	call -170 <lrc_tmr1_udelay : 109114 >			  ## pmu_analog.c:501:9
  1091be:    00 e2 44 02 	[r4 + 16] |= 2 			  ## pmu_analog.c:502:22
  1091c2:    a8 04       	call -176 <lrc_tmr1_udelay : 109114 >			  ## pmu_analog.c:503:9
  1091c4:    80 2d       	r0 = [addr(88)]  <.GCPI269_1 : 10921c >			  ## pmu_analog.c:506:25
  1091c6:    20 e8 00 13 	r0 = [r0 + 76] 			  ## pmu_analog.c:506:25
  1091ca:    61 4f       	r1 = [r4 + -12] 			  ## pmu_analog.c:506:22
  1091cc:    08 da       	r0 |= r1 			  ## pmu_analog.c:506:22
  1091ce:    60 6f       	[r4 + -12] = r0 			  ## pmu_analog.c:506:22
  1091d0:    f0 e2 4c 18 	[r4 + -16] |= 24 			  ## pmu_analog.c:509:9
  1091d4:    f0 e2 4c 20 	[r4 + -16] |= 32 			  ## pmu_analog.c:510:22
  1091d8:    08 80       	r0 = 1 			  ## p33.h:333:9
  1091da:    11 ea f7 00 	r1 = 247 			  ## p33.h:333:9
  1091de:    7b e1 bf 9a 	call -1084586 <p33_and_1byte : 538 >			  ## p33.h:333:9
  1091e2:    00 80       	r0 = 0 			  ## pmu_analog.c:514:5
  1091e4:    7b e1 4f 9b 	call -1084568 <NV_RAM_POWER_GATE : 550 >			  ## pmu_analog.c:514:5
  1091e8:    10 80       	r0 = 2 			  ## p33.h:331:9
  1091ea:    41 80       	r1 = 8 			  ## p33.h:331:9
  1091ec:    7b e1 8f 96 	call -1084720 <p33_or_1byte : 4c0 >			  ## p33.h:331:9
  1091f0:    20 80       	r0 = 4 			  ## p33.h:331:9
  1091f2:    09 80       	r1 = 1 			  ## p33.h:331:9
  1091f4:    7b e1 4f 96 	call -1084728 <p33_or_1byte : 4c0 >			  ## p33.h:331:9
  1091f8:    40 2a       	r0 = [addr(36)]  <.GCPI269_1 : 10921c >			  ## pmu_analog.c:523:5
  1091fa:    80 5c       	r0 = b[r0 + 10] 			  ## pmu_analog.c:523:5
  1091fc:    00 f4 00 01 	tst r0, 1			  ## p33.h:330:9
  109200:    06 11       	ifs (nzcv != 0) goto 12 <__hw_pdown_exit+0x96 : 10920e >			  ## p33.h:330:9
  109202:    88 80       	r0 = 17 			  ## p33.h:333:9
  109204:    11 ea fe 00 	r1 = 254 			  ## p33.h:333:9
  109208:    7b e1 6f 99 	call -1084628 <p33_and_1byte : 538 >			  ## p33.h:333:9
  10920c:    14 c0       	{pc, r4} = [sp++] 			  ## p33.h:333:9
  10920e:    88 80       	r0 = 17 			  ## p33.h:331:9
  109210:    09 80       	r1 = 1 			  ## p33.h:331:9
  109212:    7b e1 5f 95 	call -1084758 <p33_or_1byte : 4c0 >			  ## p33.h:331:9
  109216:    14 c0       	{pc, r4} = [sp++] 			  ## p33.h:331:9


.GCPI269_0:
  109218:    cc 08 00 00     < 2252 : 0x8CC >

.GCPI269_1:
  10921c:    60 1c 00 00     < 7264 : 0x1C60 >

.GCPI269_2:
  109220:    80 3c 09 00     < 605312 : 0x93C80 >

.GCPI269_3:
  109224:    08 1c 09 00     < 597000 : 0x91C08 >

.GCPI269_4:
  109228:    10 18 09 00     < 595984 : 0x91810 >

sys_idle_deal:
  10922c:    1e c2       	[--sp] = {rets, r14-r4} 			  ## idle_deal.c:30:0
  10922e:    30 c5       	[--sp] = {macch, maccl} 			  ## idle_deal.c:30:0
  109230:    fc cd       	sp += -4 			  ## idle_deal.c:30:0
  109232:    ff e1 7f 3a 	call -6322 <dac_power_off : 107984 >			  ## idle_deal.c:14:5
  109236:    dc e1 5f e7 	call -287510 <local_irq_disable : c2f24 >			  ## power_api.c:176:5
  10923a:    20 e4 1d 57 	r13 = [addr(1372)]  <.GCPI270_0 : 109798 >			  ## power_api.c:177:10
  10923e:    00 e8 d0 c1 	r0 = b[r13 + 7] 			  ## power_api.c:177:10
  109242:    00 98       	cmp r0, 0			  ## power_api.c:177:10
  109244:    00 fb b1 0c 	ifs (nzcv != 0) goto 406 <sys_idle_deal+0x1B2 : 1093de >			  ## power_api.c:177:10
  109248:    ff e1 2f e8 	call -764 <wdt_rx_con : 108f50 >			  ## power_api.c:178:24
  10924c:    44 c6       	r12 = r0 			  ## power_api.c:178:24
  10924e:    ff e1 1f 97 	call -3358 <wdt_close : 108534 >			  ## power_api.c:180:13
  109252:    20 e4 10 52 	r0 = [addr(1352)]  <.GCPI270_1 : 10979c >			  ## power_api.c:182:23
  109256:    f1 87       	r1 = -2 			  ## power_api.c:182:23
  109258:    01 68       	[r0 + 0] = r1 			  ## power_api.c:182:23
  10925a:    20 e4 19 51 	r9 = [addr(1348)]  <.GCPI270_2 : 1097a0 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:807:18
  10925e:    00 e8 90 0c 	r0 = b[r9 + 48] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:807:18
  109262:    00 f4 00 04 	tst r0, 4			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:807:9
  109266:    00 fb 50 0b 	ifs (nzcv == 0) goto 362 <sys_idle_deal+0x1A8 : 1093d4 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:807:9
  10926a:    00 e8 90 0f 	r0 = b[r9 + 60] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:811:20
  10926e:    b8 20       	if (r0 != 0) goto 22 <sys_idle_deal+0x5A : 109286 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:811:20
  109270:    00 e8 d1 16 	r1 = b[r13 + 88] 
  109274:    a0 80       	r0 = 20 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:269:35
  109276:    19 20       	if (r1 != 0) goto 2 <sys_idle_deal+0x4E : 10927a >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:269:35
  109278:    00 80       	r0 = 0 
  10927a:    20 e4 11 4a 	r1 = [addr(1320)]  <.GCPI270_3 : 1097a4 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:269:21
  10927e:    09 58       	r1 = b[r1 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:269:13
  109280:    08 ce       	cmp r1, r0			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:812:13
  109282:    00 fb 73 0a 	if (nzcv < 0) goto 334 <sys_idle_deal+0x1A8 : 1093d4 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:812:13
  109286:    dc e1 df e4 	call -287590 <local_irq_disable : c2f24 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:817:5
  10928a:    00 e8 90 0f 	r0 = b[r9 + 60] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1241:20
  10928e:    10 98       	cmp r0, 2			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1241:9
  109290:    3d 11       	ifs (nzcv != 0) goto 122 <sys_idle_deal+0xE0 : 10930c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1241:9
  109292:    00 e8 90 4f 	r0 = b[r9 + 61] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1243:24
  109296:    10 98       	cmp r0, 2			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1243:13
  109298:    48 10       	ifs (nzcv == 0) goto 144 <sys_idle_deal+0xFE : 10932a >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1243:13
  10929a:    8c c6       	r4 = r9 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1247:40
  10929c:    24 e8 40 2b 	r0 = [++ r4 = 172] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1247:40
  1092a0:    01 80       	r1 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1194:5
  1092a2:    ff e1 df 46 	call -5926 <__hw_set_osc_hz : 107b80 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1194:5
  1092a6:    e0 4f       	r0 = [r4 + -4] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1196:23
  1092a8:    40 a6       	r0 = r0 >> 6 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1196:23
  1092aa:    e0 6f       	[r4 + -4] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1196:23
  1092ac:    80 81       	r0 = 48 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1198:5
  1092ae:    49 80       	r1 = 9 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1198:5
  1092b0:    7b e1 ef 92 	call -1084836 <p33_tx_1byte : 510 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1198:5
  1092b4:    10 ea dc 05 	r0 = 1500 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1200:29
  1092b8:    60 e8 90 0a 	[r9 + 40] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1200:29
  1092bc:    a0 82       	r0 = 84 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1202:5
  1092be:    89 83       	r1 = 113 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1202:5
  1092c0:    7b e1 6f 92 	call -1084852 <p33_tx_1byte : 510 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1202:5
  1092c4:    90 81       	r0 = 50 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1204:5
  1092c6:    19 80       	r1 = 3 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1204:5
  1092c8:    7b e1 2f 92 	call -1084860 <p33_tx_1byte : 510 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1204:5
  1092cc:    20 e8 90 0a 	r0 = [r9 + 40] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1206:38
  1092d0:    ff e1 ef 51 	call -5572 <__tcnt_us : 107d10 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1206:20
  1092d4:    60 e8 90 07 	[r9 + 28] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1206:18
  1092d8:    20 e8 91 08 	r1 = [r9 + 32] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1207:36
  1092dc:    0c d4       	r4 = r1 + r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1207:41
  1092de:    10 ea 68 06 	r0 = 1640 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1207:58
  1092e2:    ff e1 5f 51 	call -5590 <__tcnt_us : 107d10 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1207:58
  1092e6:    24 d4       	r4 = r4 + r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1207:56
  1092e8:    60 e8 94 09 	[r9 + 36] = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1207:26
  1092ec:    10 ea dc 05 	r0 = 1500 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1208:29
  1092f0:    ff e1 ef 50 	call -5604 <__tcnt_us : 107d10 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1208:29
  1092f4:    24 d4       	r4 = r4 + r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1208:26
  1092f6:    60 e8 94 09 	[r9 + 36] = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1208:26
  1092fa:    10 ea dc 05 	r0 = 1500 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1209:29
  1092fe:    ff e1 7f 50 	call -5618 <__tcnt_us : 107d10 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1209:29
  109302:    00 d5       	r0 = r0 + r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1209:26
  109304:    60 e8 90 09 	[r9 + 36] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1209:26
  109308:    00 e8 90 0f 	r0 = b[r9 + 60] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1249:20
  10930c:    c8 20       	if (r0 != 0) goto 24 <sys_idle_deal+0xFA : 109326 >
  10930e:    00 e8 92 4f 	r2 = b[r9 + 61] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1252:24
  109312:    7b e1 3f 92 	call -1084858 <__get_lrc_hz : 55c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1255:34
  109316:    01 c6       	r1 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1255:34
  109318:    02 98       	cmp r2, 0			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1255:34
  10931a:    69 10       	ifs (nzcv == 0) goto 210 <sys_idle_deal+0x1C2 : 1093ee >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1255:34
  10931c:    08 80       	r0 = 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1259:9
  10931e:    ff e1 bf e1 	call -970 <__hw_lrc_time_set : 108f58 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1259:9
  109322:    00 e8 90 0f 	r0 = b[r9 + 60] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1259:9
  109326:    40 e8 90 4f 	b[r9 + 61] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1262:30
  10932a:    88 c6       	r0 = r9 			  ## ../../include_lib/common/list.h:122:18
  10932c:    24 e8 05 03 	r5 = [++ r0 = 12] 			  ## ../../include_lib/common/list.h:122:18
  109330:    fc 87       	r4 = -1 
  109332:    28 ce       	cmp r5, r0			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:408:9
  109334:    16 10       	ifs (nzcv == 0) goto 44 <sys_idle_deal+0x136 : 109362 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:408:9
  109336:    00 ed 96 0c 	r6 = r9 + 12 
  10933a:    0e 08       	goto 28 <sys_idle_deal+0x12C : 109358 >
  10933c:    e9 48       	r1 = [r5 + 12] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:413:16
  10933e:    f8 87       	r0 = -1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:413:16
  109340:    61 20       	if (r1 == 0) goto 12 <sys_idle_deal+0x122 : 10934e >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:413:16
  109342:    49 48       	r1 = [r1 + 4] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:413:31
  109344:    41 20       	if (r1 == 0) goto 8 <sys_idle_deal+0x122 : 10934e >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:413:31
  109346:    a8 48       	r0 = [r5 + 8] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:414:43
  109348:    a9 01       	call r1			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:414:20
  10934a:    00 98       	cmp r0, 0
  10934c:    41 10       	ifs (nzcv == 0) goto 130 <sys_idle_deal+0x1A4 : 1093d0 >
  10934e:    20 ce       	cmp r4, r0			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:423:13
  109350:    90 03       	if (nzcv <= 0) {			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:423:13
  109352:    20 c6       		r0 = r4 
                               	}			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:423:13
  109354:    2d 48       	r5 = [r5 + 0] 
  109356:    04 c6       	r4 = r0 
  109358:    2e ce       	cmp r5, r6			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:412:5
  10935a:    f0 11       	ifs (nzcv != 0) goto -32 <sys_idle_deal+0x110 : 10933c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:412:5
  10935c:    60 d0       	r0 = r4 + 1 
  10935e:    08 98       	cmp r0, 1
  109360:    37 19       	if (nzcv <= 0) goto 110 <sys_idle_deal+0x1A4 : 1093d0 >
  109362:    ff e1 5f df 	call -1046 <wdt_rx_con : 108f50 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/wdt.c:120:18
  109366:    05 80       	r5 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/wdt.c:120:18
  109368:    00 f4 00 10 	tst r0, 16			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/wdt.c:121:9
  10936c:    09 10       	ifs (nzcv == 0) goto 18 <sys_idle_deal+0x154 : 109380 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/wdt.c:121:9
  10936e:    80 f3 00 0f 	r0 = r0 & 15 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/wdt.c:123:33
  109372:    00 a2       	r0 = r0 << 2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/wdt.c:123:16
  109374:    20 e4 11 0c 	r1 = [addr(1072)]  <.GCPI270_4 : 1097a8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/wdt.c:123:16
  109378:    20 e7 15 00 	r5 = [r1 + r0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/wdt.c:123:16
  10937c:    ff e1 ef 10 	call -7652 <wdt_clear : 10759c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/wdt.c:122:9
  109380:    0f fc 50 7a 	r0 = r5 * 1000 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:839:24
  109384:    40 a1       	r0 = r0 >> 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:839:41
  109386:    20 ce       	cmp r4, r0			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:840:21
  109388:    05 c6       	r5 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:840:21
  10938a:    90 03       	if (nzcv <= 0) {			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:840:21
  10938c:    25 c6       		r5 = r4 
                               	}			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:840:21
  10938e:    18 20       	if (r0 != 0) goto 2 <sys_idle_deal+0x166 : 109392 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:840:21
  109390:    25 c6       	r5 = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:840:21
  109392:    ff e1 7f e1 	call -978 <__hw_nv_timer_is_runnig : 108fc4 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:844:9
  109396:    40 20       	if (r0 == 0) goto 8 <sys_idle_deal+0x174 : 1093a0 >
  109398:    20 e4 10 04 	r0 = [addr(1040)]  <.GCPI270_5 : 1097ac >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:846:9
  10939c:    dc e1 ef e1 	call -287684 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:846:9
  1093a0:    20 e8 90 00 	r0 = [r9 + 0] 			  ## ../../include_lib/common/list.h:122:18
  1093a4:    41 ce       	cmp r0, r9			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:853:9
  1093a6:    20 e4 18 05 	r8 = [addr(1044)]  <.GCPI270_9 : 1097bc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:853:9
  1093aa:    00 fb 01 08 	ifs (nzcv != 0) goto 256 <sys_idle_deal+0x282 : 1094ae >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:853:9
  1093ae:    20 e8 90 2a 	r0 = [r9 + 168] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:316:30
  1093b2:    45 06       	macc = r0 * r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:316:16
  1093b4:    20 c8       	r0 = maccl 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:316:16
  1093b6:    29 c8       	r1 = macch 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:316:16
  1093b8:    20 e4 12 01 	r2 = [addr(1028)]  <.GCPI270_10 : 1097c0 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:318:11
  1093bc:    02 05       	macc /= r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:318:11
  1093be:    26 c8       	r6 = maccl 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:318:11
  1093c0:    20 e8 90 09 	r0 = [r9 + 36] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:91:52
  1093c4:    30 ce       	cmp r6, r0			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:91:32
  1093c6:    17 12       	if (nzcv >= 0) goto 46 <sys_idle_deal+0x1CA : 1093f6 >
  1093c8:    a0 81       	r0 = 52 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:357:5
  1093ca:    01 81       	r1 = 32 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:357:5
  1093cc:    7b e1 0f 8a 	call -1085120 <p33_tx_1byte : 510 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:357:5
  1093d0:    dc e1 6f da 	call -287924 <local_irq_enable : c2f20 >
  1093d4:    a0 c6       	r0 = r12 
  1093d6:    ff e1 8f 8a 	call -3760 <wdt_tx_con : 10852a >
  1093da:    ff e1 ff 0d 	call -7746 <wdt_clear : 10759c >
  1093de:    dc e1 ff d9 	call -287938 <local_irq_enable : c2f20 >
  1093e2:    00 80       	r0 = 0 			  ## idle_deal.c:19:5
  1093e4:    ff e1 ef 7a 	call -4260 <dac_power_on : 108344 >			  ## idle_deal.c:19:5
  1093e8:    04 cd       	sp += 4 			  ## idle_deal.c:19:5
  1093ea:    30 c4       	{macch, maccl} = [sp++] 			  ## idle_deal.c:19:5
  1093ec:    1e c0       	{pc, r14-r4} = [sp++] 			  ## idle_deal.c:19:5
  1093ee:    00 80       	r0 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1255:13
  1093f0:    ff e1 2f db 	call -1180 <__hw_lrc_time_set : 108f58 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1255:13
  1093f4:    9a 0f       	goto -204 <sys_idle_deal+0xFE : 10932a >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1255:13
  1093f6:    dc e1 5f d9 	call -287958 <local_irq_disable : c2f24 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:100:5
  1093fa:    0f e3 87 80 	[r8 + 28] &= (~256) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:100:5
  1093fe:    00 e2 87 01 	[r8 + 28] |= 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:100:5
  109402:    00 80       	r0 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:102:5
  109404:    dc e1 4f d9 	call -287960 <p33_buf : c2f30 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:102:5
  109408:    00 82       	r0 = 64 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:103:5
  10940a:    dc e1 1f d9 	call -287966 <p33_buf : c2f30 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:103:5
  10940e:    00 ed 90 bc 	r0 = r9 + 188 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:103:5
  109412:    01 58       	r1 = b[r0 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:107:19
  109414:    fa 87       	r2 = -1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:107:19
  109416:    00 f7 21 01 	r1 = r2 << r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:107:19
  10941a:    20 e8 93 07 	r3 = [r9 + 28] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:106:29
  10941e:    f3 d6       	r3 = r6 - r3 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:106:19
  109420:    c9 d4       	r1 = r1 + r3 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:106:35
  109422:    03 5a       	r3 = b[r0 + 1] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:108:19
  109424:    00 f7 23 03 	r3 = r2 << r3 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:108:19
  109428:    c9 d4       	r1 = r1 + r3 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:107:37
  10942a:    00 5c       	r0 = b[r0 + 2] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:109:19
  10942c:    00 f7 20 00 	r0 = r2 << r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:109:19
  109430:    0f d4       	r7 = r1 + r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:108:37
  109432:    7c b8       	r4 = r7 >> 24 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:112:28
  109434:    40 f3 40 80 	r0 = r4 ^ 128 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:113:14
  109438:    dc e1 af d7 	call -288012 <p33_buf : c2f30 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:115:5
  10943c:    02 f6 70 08 	r0 = uextra(r7, p:16, l:8) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:116:5
  109440:    dc e1 6f d7 	call -288020 <p33_buf : c2f30 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:116:5
  109444:    01 f6 70 08 	r0 = uextra(r7, p:8, l:8) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:117:5
  109448:    dc e1 2f d7 	call -288028 <p33_buf : c2f30 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:117:5
  10944c:    38 c9       	r0 = r7.b 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:118:5
  10944e:    dc e1 ff d6 	call -288034 <p33_buf : c2f30 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:118:5
  109452:    70 b8       	r0 = r6 >> 24 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:122:24
  109454:    dc e1 cf d6 	call -288040 <p33_buf : c2f30 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:122:5
  109458:    02 f6 60 08 	r0 = uextra(r6, p:16, l:8) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:123:5
  10945c:    dc e1 8f d6 	call -288048 <p33_buf : c2f30 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:123:5
  109460:    01 f6 60 08 	r0 = uextra(r6, p:8, l:8) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:124:5
  109464:    dc e1 4f d6 	call -288056 <p33_buf : c2f30 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:124:5
  109468:    30 c9       	r0 = r6.b 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:125:5
  10946a:    dc e1 1f d6 	call -288062 <p33_buf : c2f30 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:125:5
  10946e:    20 e8 80 07 	r0 = [r8 + 28] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:126:5
  109472:    91 ea fe fe 	r1 = -258 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:126:5
  109476:    88 da       	r0 &= r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:126:5
  109478:    60 e8 80 07 	[r8 + 28] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:126:5
  10947c:    dc e1 0f d5 	call -288096 <local_irq_enable : c2f20 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:126:5
  109480:    00 82       	r0 = 64 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:129:5
  109482:    21 c6       	r1 = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:129:5
  109484:    7b e1 4f 84 	call -1085304 <p33_tx_1byte : 510 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:129:5
  109488:    a0 81       	r0 = 52 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:357:5
  10948a:    01 81       	r1 = 32 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:357:5
  10948c:    7b e1 0f 84 	call -1085312 <p33_tx_1byte : 510 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:357:5
  109490:    f5 9f       	cmp r5, -2			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:865:13
  109492:    0a 10       	ifs (nzcv == 0) goto 20 <sys_idle_deal+0x27C : 1094a8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:865:13
  109494:    c0 82       	r0 = 88 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:364:5
  109496:    09 80       	r1 = 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:364:5
  109498:    7b e1 2f 81 	call -1085404 <p33_or_1byte : 4c0 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:364:5
  10949c:    a0 81       	r0 = 52 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:386:5
  10949e:    11 80       	r1 = 2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:386:5
  1094a0:    7b e1 6f 83 	call -1085332 <p33_tx_1byte : 510 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:386:5
  1094a4:    00 e2 85 10 	[r8 + 20] |= 16 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:388:5
  1094a8:    ff e1 3f d9 	call -1242 <__hw_nv_timer_get_period : 108fd2 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:870:19
  1094ac:    05 c6       	r5 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:870:19
  1094ae:    00 ed 94 0c 	r4 = r9 + 12 
  1094b2:    26 c6       	r6 = r4 
  1094b4:    06 08       	goto 12 <sys_idle_deal+0x296 : 1094c2 >
  1094b6:    f0 48       	r0 = [r6 + 12] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:667:16
  1094b8:    40 20       	if (r0 == 0) goto 8 <sys_idle_deal+0x296 : 1094c2 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:667:16
  1094ba:    81 48       	r1 = [r0 + 8] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:667:31
  1094bc:    21 20       	if (r1 == 0) goto 4 <sys_idle_deal+0x296 : 1094c2 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:667:31
  1094be:    b0 48       	r0 = [r6 + 8] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:668:38
  1094c0:    a9 01       	call r1			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:668:13
  1094c2:    36 48       	r6 = [r6 + 0] 
  1094c4:    34 ce       	cmp r6, r4			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:666:5
  1094c6:    f7 11       	ifs (nzcv != 0) goto -18 <sys_idle_deal+0x28A : 1094b6 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:666:5
  1094c8:    00 ed 94 0c 	r4 = r9 + 12 
  1094cc:    26 c6       	r6 = r4 
  1094ce:    07 08       	goto 14 <sys_idle_deal+0x2B2 : 1094de >
  1094d0:    f0 48       	r0 = [r6 + 12] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:672:16
  1094d2:    50 20       	if (r0 == 0) goto 10 <sys_idle_deal+0x2B2 : 1094de >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:672:16
  1094d4:    c2 48       	r2 = [r0 + 12] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:672:31
  1094d6:    32 20       	if (r2 == 0) goto 6 <sys_idle_deal+0x2B2 : 1094de >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:672:31
  1094d8:    b0 48       	r0 = [r6 + 8] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:673:37
  1094da:    29 c6       	r1 = r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:673:13
  1094dc:    aa 01       	call r2			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:673:13
  1094de:    36 48       	r6 = [r6 + 0] 
  1094e0:    34 ce       	cmp r6, r4			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:671:5
  1094e2:    f6 11       	ifs (nzcv != 0) goto -20 <sys_idle_deal+0x2A4 : 1094d0 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:671:5
  1094e4:    53 ea 00 00 	r11 = 0 
  1094e8:    00 80       	r0 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:604:5
  1094ea:    ff e1 ff 3f 	call -6146 <__hw_lrc_enable : 107cec >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:604:5
  1094ee:    20 e8 92 31 	r2 = [r9 + 196] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:610:20
  1094f2:    01 80       	r1 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:616:20
  1094f4:    42 20       	if (r2 == 0) goto 8 <sys_idle_deal+0x2D2 : 1094fe >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:616:20
  1094f6:    08 80       	r0 = 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:611:9
  1094f8:    aa 01       	call r2			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:611:9
  1094fa:    20 e8 91 31 	r1 = [r9 + 196] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:611:9
  1094fe:    20 e4 04 b1 	r4 = [addr(708)]  <.GCPI270_11 : 1097c4 >
  109502:    a0 4e       	r0 = [r4 + -24] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:319:24
  109504:    8a c6       	r2 = r9 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:319:12
  109506:    64 e8 20 11 	[++ r2 = 68] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:319:12
  10950a:    e0 4e       	r0 = [r4 + -20] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:320:24
  10950c:    50 68       	[r2 + 4] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:320:12
  10950e:    20 4f       	r0 = [r4 + -16] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:321:24
  109510:    90 68       	[r2 + 8] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:321:12
  109512:    60 4f       	r0 = [r4 + -12] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:322:24
  109514:    d0 68       	[r2 + 12] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:322:12
  109516:    e0 48       	r0 = [r4 + 12] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:331:24
  109518:    10 69       	[r2 + 16] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:331:12
  10951a:    20 49       	r0 = [r4 + 16] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:332:24
  10951c:    50 69       	[r2 + 20] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:332:12
  10951e:    60 49       	r0 = [r4 + 20] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:333:24
  109520:    90 69       	[r2 + 24] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:333:12
  109522:    a0 49       	r0 = [r4 + 24] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:334:24
  109524:    d0 69       	[r2 + 28] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:334:12
  109526:    20 e4 0a a8 	r10 = [addr(672)]  <.GCPI270_12 : 1097c8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:334:12
  10952a:    20 e8 a0 00 	r0 = [r10 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:348:23
  10952e:    10 6a       	[r2 + 32] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:348:12
  109530:    20 e4 06 a6 	r6 = [addr(664)]  <.GCPI270_13 : 1097cc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:348:12
  109534:    f0 4f       	r0 = [r6 + -4] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:349:22
  109536:    50 6a       	[r2 + 36] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:349:12
  109538:    30 48       	r0 = [r6 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:350:22
  10953a:    90 6a       	[r2 + 40] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:350:12
  10953c:    20 e4 07 a4 	r7 = [addr(656)]  <.GCPI270_14 : 1097d0 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:350:12
  109540:    38 48       	r0 = [r7 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:352:24
  109542:    d0 6a       	[r2 + 44] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:352:12
  109544:    60 e8 7b 00 	[r7 + 0] = r11 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:354:19
  109548:    60 e8 7b 00 	[r7 + 0] = r11 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:355:19
  10954c:    20 e8 80 f9 	r0 = [r8 + -28] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:368:23
  109550:    10 6b       	[r2 + 48] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:368:12
  109552:    60 e8 8b f9 	[r8 + -28] = r11 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:369:18
  109556:    f0 e2 89 40 	[r8 + -28] |= 64 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:370:18
  10955a:    21 20       	if (r1 == 0) goto 4 <sys_idle_deal+0x334 : 109560 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:370:18
  10955c:    10 80       	r0 = 2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:617:9
  10955e:    a9 01       	call r1			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:617:9
  109560:    ff e1 cf d6 	call -1320 <__hw_pdown_enter : 10903c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:620:5
  109564:    7b e1 ef 84 	call -1085284 <low_power_system_down : 604 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:892:5
  109568:    ff e1 6f e0 	call -1012 <__hw_pdown_exit : 109178 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:631:5
  10956c:    88 c6       	r0 = r9 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:392:21
  10956e:    24 e8 01 11 	r1 = [++ r0 = 68] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:392:21
  109572:    a1 6e       	[r4 + -24] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:392:19
  109574:    41 48       	r1 = [r0 + 4] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:393:21
  109576:    e1 6e       	[r4 + -20] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:393:19
  109578:    81 48       	r1 = [r0 + 8] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:394:21
  10957a:    21 6f       	[r4 + -16] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:394:19
  10957c:    c1 48       	r1 = [r0 + 12] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:395:20
  10957e:    61 6f       	[r4 + -12] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:395:18
  109580:    01 49       	r1 = [r0 + 16] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:397:21
  109582:    e1 68       	[r4 + 12] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:397:19
  109584:    41 49       	r1 = [r0 + 20] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:398:21
  109586:    21 69       	[r4 + 16] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:398:19
  109588:    81 49       	r1 = [r0 + 24] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:399:20
  10958a:    61 69       	[r4 + 20] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:399:18
  10958c:    c1 49       	r1 = [r0 + 28] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:400:20
  10958e:    a1 69       	[r4 + 24] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:400:18
  109590:    01 4a       	r1 = [r0 + 32] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:402:28
  109592:    60 e8 a1 00 	[r10 + 0] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:402:26
  109596:    41 4a       	r1 = [r0 + 36] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:403:20
  109598:    f1 6f       	[r6 + -4] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:403:18
  10959a:    81 4a       	r1 = [r0 + 40] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:404:20
  10959c:    31 68       	[r6 + 0] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:404:18
  10959e:    c1 4a       	r1 = [r0 + 44] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:406:21
  1095a0:    39 68       	[r7 + 0] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:406:19
  1095a2:    00 e2 70 40 	[r7 + 0] |= 64 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:407:19
  1095a6:    00 4b       	r0 = [r0 + 48] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:410:20
  1095a8:    60 e8 80 f9 	[r8 + -28] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/pmu_analog.c:410:18
  1095ac:    20 e8 91 32 	r1 = [r9 + 200] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:635:20
  1095b0:    21 20       	if (r1 == 0) goto 4 <sys_idle_deal+0x38A : 1095b6 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:635:20
  1095b2:    28 c6       	r0 = r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:636:9
  1095b4:    a9 01       	call r1			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:636:9
  1095b6:    08 80       	r0 = 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:640:5
  1095b8:    ff e1 8f 39 	call -6352 <__hw_lrc_enable : 107cec >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:640:5
  1095bc:    00 e8 90 4b 	r0 = b[r9 + 45] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:897:17
  1095c0:    00 98       	cmp r0, 0			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:897:17
  1095c2:    76 10       	ifs (nzcv == 0) goto 236 <sys_idle_deal+0x484 : 1096b0 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:897:17
  1095c4:    ff e1 5f d0 	call -1526 <__hw_nv_timer_get_period : 108fd2 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:898:9
  1095c8:    01 c6       	r1 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:898:9
  1095ca:    58 2e       	r0 = [addr(484)]  <.GCPI270_6 : 1097b0 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:898:9
  1095cc:    dc e1 6f d0 	call -288244 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:898:9
  1095d0:    dc e1 8f ca 	call -288432 <local_irq_disable : c2f24 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:163:5
  1095d4:    0f e3 87 80 	[r8 + 28] &= (~256) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:163:5
  1095d8:    00 e2 87 01 	[r8 + 28] |= 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:163:5
  1095dc:    00 81       	r0 = 32 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:164:5
  1095de:    dc e1 7f ca 	call -288434 <p33_buf : c2f30 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:164:5
  1095e2:    00 83       	r0 = 96 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:165:5
  1095e4:    dc e1 4f ca 	call -288440 <p33_buf : c2f30 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:165:5
  1095e8:    10 80       	r0 = 2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:166:5
  1095ea:    dc e1 1f ca 	call -288446 <p33_buf : c2f30 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:166:5
  1095ee:    00 80       	r0 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:167:5
  1095f0:    dc e1 ef c9 	call -288452 <p33_buf : c2f30 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:167:5
  1095f4:    00 80       	r0 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:168:11
  1095f6:    dc e1 bf c9 	call -288458 <p33_buf : c2f30 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:168:11
  1095fa:    00 60       	[sp] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:168:11
  1095fc:    00 80       	r0 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:169:12
  1095fe:    dc e1 7f c9 	call -288466 <p33_buf : c2f30 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:169:12
  109602:    07 c6       	r7 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:169:12
  109604:    00 80       	r0 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:170:12
  109606:    dc e1 3f c9 	call -288474 <p33_buf : c2f30 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:170:12
  10960a:    43 c6       	r11 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:170:12
  10960c:    00 80       	r0 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:171:12
  10960e:    dc e1 ff c8 	call -288482 <p33_buf : c2f30 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:171:12
  109612:    e2 c6       	r10 = r12 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:171:12
  109614:    44 c6       	r12 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:171:12
  109616:    20 e8 80 07 	r0 = [r8 + 28] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:172:5
  10961a:    91 ea fe fe 	r1 = -258 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:172:5
  10961e:    88 da       	r0 &= r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:172:5
  109620:    60 e8 80 07 	[r8 + 28] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:172:5
  109624:    dc e1 cf c7 	call -288520 <local_irq_enable : c2f20 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:172:5
  109628:    dc e1 cf c7 	call -288520 <local_irq_disable : c2f24 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:176:5
  10962c:    0f e3 87 80 	[r8 + 28] &= (~256) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:176:5
  109630:    00 e2 87 01 	[r8 + 28] |= 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:176:5
  109634:    10 ea 80 00 	r0 = 128 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:177:5
  109638:    dc e1 af c7 	call -288524 <p33_buf : c2f30 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:177:5
  10963c:    20 82       	r0 = 68 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:178:5
  10963e:    dc e1 7f c7 	call -288530 <p33_buf : c2f30 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:178:5
  109642:    00 80       	r0 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:179:11
  109644:    dc e1 4f c7 	call -288536 <p33_buf : c2f30 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:179:11
  109648:    46 c6       	r14 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:179:11
  10964a:    00 80       	r0 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:180:12
  10964c:    dc e1 0f c7 	call -288544 <p33_buf : c2f30 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:180:12
  109650:    04 c6       	r4 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:180:12
  109652:    00 80       	r0 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:181:12
  109654:    dc e1 cf c6 	call -288552 <p33_buf : c2f30 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:181:12
  109658:    06 c6       	r6 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:181:12
  10965a:    00 80       	r0 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:182:12
  10965c:    dc e1 8f c6 	call -288560 <p33_buf : c2f30 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:182:12
  109660:    20 e8 81 07 	r1 = [r8 + 28] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:183:5
  109664:    92 ea fe fe 	r2 = -258 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:183:5
  109668:    91 da       	r1 &= r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:183:5
  10966a:    60 e8 81 07 	[r8 + 28] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:183:5
  10966e:    01 40       	r1 = [sp] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:168:22
  109670:    09 b8       	r1 = r1 << 24 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:168:22
  109672:    3a b0       	r2 = r7 << 16 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:169:23
  109674:    11 da       	r1 |= r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:169:9
  109676:    20 f7 b2 08 	r2 = r11 << 8 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:170:23
  10967a:    11 da       	r1 |= r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:170:9
  10967c:    00 f0 17 0c 	r7 = r1 | r12 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:171:9
  109680:    d4 c6       	r12 = r10 
  109682:    20 f7 e1 18 	r1 = r14 << 24 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:179:22
  109686:    22 b0       	r2 = r4 << 16 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:180:23
  109688:    11 da       	r1 |= r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:180:9
  10968a:    32 a8       	r2 = r6 << 8 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:181:23
  10968c:    11 da       	r1 |= r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:181:9
  10968e:    00 f0 14 00 	r4 = r1 | r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:182:9
  109692:    dc e1 5f c4 	call -288630 <local_irq_enable : c2f20 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:183:5
  109696:    e0 d7       	r0 = r4 - r7 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:187:17
  109698:    ff e1 6f 35 	call -6484 <__tus_cnt : 107d48 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:899:9
  10969c:    01 c6       	r1 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:899:9
  10969e:    50 29       	r0 = [addr(276)]  <.GCPI270_7 : 1097b4 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:899:9
  1096a0:    dc e1 cf c9 	call -288456 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:899:9
  1096a4:    00 e8 91 4b 	r1 = b[r9 + 45] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:899:9
  1096a8:    31 20       	if (r1 == 0) goto 6 <sys_idle_deal+0x484 : 1096b0 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:899:9
  1096aa:    d0 28       	r0 = [addr(268)]  <.GCPI270_8 : 1097b8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:902:5
  1096ac:    dc e1 6f c9 	call -288468 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:902:5
  1096b0:    20 e8 90 00 	r0 = [r9 + 0] 			  ## ../../include_lib/common/list.h:122:18
  1096b4:    41 ce       	cmp r0, r9			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:760:9
  1096b6:    47 11       	ifs (nzcv != 0) goto 142 <sys_idle_deal+0x51A : 109746 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:760:9
  1096b8:    ff e1 4f c8 	call -1784 <__hw_nv_timer_is_runnig : 108fc4 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:763:19
  1096bc:    00 98       	cmp r0, 0			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:763:19
  1096be:    43 10       	ifs (nzcv == 0) goto 134 <sys_idle_deal+0x51A : 109746 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:763:19
  1096c0:    dc e1 0f c3 	call -288672 <local_irq_disable : c2f24 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:196:5
  1096c4:    0f e3 87 80 	[r8 + 28] &= (~256) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:196:5
  1096c8:    00 e2 87 01 	[r8 + 28] |= 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:196:5
  1096cc:    00 81       	r0 = 32 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:197:5
  1096ce:    dc e1 ff c2 	call -288674 <p33_buf : c2f30 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:197:5
  1096d2:    00 83       	r0 = 96 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:198:5
  1096d4:    dc e1 cf c2 	call -288680 <p33_buf : c2f30 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:198:5
  1096d8:    10 80       	r0 = 2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:199:5
  1096da:    dc e1 9f c2 	call -288686 <p33_buf : c2f30 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:199:5
  1096de:    00 80       	r0 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:200:5
  1096e0:    dc e1 6f c2 	call -288692 <p33_buf : c2f30 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:200:5
  1096e4:    00 80       	r0 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:201:11
  1096e6:    dc e1 3f c2 	call -288698 <p33_buf : c2f30 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:201:11
  1096ea:    07 c6       	r7 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:201:11
  1096ec:    00 80       	r0 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:202:12
  1096ee:    dc e1 ff c1 	call -288706 <p33_buf : c2f30 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:202:12
  1096f2:    05 c6       	r5 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:202:12
  1096f4:    00 80       	r0 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:203:12
  1096f6:    dc e1 bf c1 	call -288714 <p33_buf : c2f30 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:203:12
  1096fa:    06 c6       	r6 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:203:12
  1096fc:    00 80       	r0 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:204:12
  1096fe:    dc e1 7f c1 	call -288722 <p33_buf : c2f30 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:204:12
  109702:    04 c6       	r4 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:204:12
  109704:    20 e8 80 07 	r0 = [r8 + 28] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:205:5
  109708:    91 ea fe fe 	r1 = -258 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:205:5
  10970c:    88 da       	r0 &= r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:205:5
  10970e:    60 e8 80 07 	[r8 + 28] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:205:5
  109712:    38 b8       	r0 = r7 << 24 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:201:22
  109714:    29 b0       	r1 = r5 << 16 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:202:23
  109716:    08 da       	r0 |= r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:202:9
  109718:    31 a8       	r1 = r6 << 8 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:203:23
  10971a:    00 f0 05 01 	r5 = r0 | r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:203:9
  10971e:    dc e1 ff bf 	call -288770 <local_irq_enable : c2f20 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:205:5
  109722:    00 f0 50 04 	r0 = r5 | r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:204:9
  109726:    ff e1 ff 30 	call -6626 <__tus_cnt : 107d48 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:208:12
  10972a:    05 c6       	r5 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:208:12
  10972c:    c0 82       	r0 = 88 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:369:5
  10972e:    11 ea fe 00 	r1 = 254 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:369:5
  109732:    7b e1 1f 70 	call -1085950 <p33_and_1byte : 538 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:369:5
  109736:    c0 82       	r0 = 88 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:370:5
  109738:    01 82       	r1 = 64 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:370:5
  10973a:    7b e1 1f 6c 	call -1086078 <p33_or_1byte : 4c0 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:370:5
  10973e:    c0 82       	r0 = 88 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:371:5
  109740:    81 80       	r1 = 16 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:371:5
  109742:    7b e1 df 6b 	call -1086086 <p33_or_1byte : 4c0 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:371:5
  109746:    00 80       	r0 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:682:21
  109748:    40 e8 90 0b 	b[r9 + 44] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:682:21
  10974c:    20 e8 96 03 	r6 = [r9 + 12] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:683:5
  109750:    00 ed 94 0c 	r4 = r9 + 12 
  109754:    07 08       	goto 14 <sys_idle_deal+0x538 : 109764 >
  109756:    06 48       	r6 = [r0 + 0] 
  109758:    c1 48       	r1 = [r0 + 12] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:684:16
  10975a:    41 20       	if (r1 == 0) goto 8 <sys_idle_deal+0x538 : 109764 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:684:16
  10975c:    80 48       	r0 = [r0 + 8] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:685:31
  10975e:    0a 49       	r2 = [r1 + 16] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:685:21
  109760:    29 c6       	r1 = r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:685:13
  109762:    aa 01       	call r2			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:685:13
  109764:    30 c6       	r0 = r6 
  109766:    04 ce       	cmp r0, r4			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:683:5
  109768:    f6 11       	ifs (nzcv != 0) goto -20 <sys_idle_deal+0x52A : 109756 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:683:5
  10976a:    dc e1 9f bd 	call -288846 <local_irq_enable : c2f20 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:921:5
  10976e:    a0 c6       	r0 = r12 			  ## power_api.c:184:9
  109770:    ff e1 bf 6d 	call -4682 <wdt_tx_con : 10852a >			  ## power_api.c:184:9
  109774:    fe e1 2f f1 	call -8668 <wdt_clear : 10759c >			  ## power_api.c:185:9
  109778:    dc e1 2f bd 	call -288860 <local_irq_enable : c2f20 >			  ## power_api.c:189:9
  10977c:    00 80       	r0 = 0 			  ## power_api.c:189:9
  10977e:    60 e8 80 f9 	[r8 + -28] = r0 			  ## power_api.c:200:22
  109782:    f0 e2 89 06 	[r8 + -28] |= 6 			  ## power_api.c:201:22
  109786:    00 e8 d0 0e 	r0 = b[r13 + 56] 			  ## power_api.c:201:22
  10978a:    00 98       	cmp r0, 0			  ## power_api.c:201:22
  10978c:    ff fb 90 e2 	ifs (nzcv == 0) goto -942 <sys_idle_deal+0x1B6 : 1093e2 >			  ## power_api.c:201:22
  109790:    00 80       	r0 = 0 			  ## power_api.c:213:9
  109792:    ff e1 7f 5d 	call -5202 <dac_power_on : 108344 >			  ## power_api.c:213:9
  109796:    25 0e       	goto -950 <sys_idle_deal+0x1B6 : 1093e2 >			  ## power_api.c:213:9


.GCPI270_0:
  109798:    60 1c 00 00     < 7264 : 0x1C60 >

.GCPI270_1:
  10979c:    10 00 00 00     < 16 : 0x10 >

.GCPI270_2:
  1097a0:    cc 08 00 00     < 2252 : 0x8CC >

.GCPI270_3:
  1097a4:    48 19 00 00     < 6472 : 0x1948 >

.GCPI270_4:
  1097a8:    30 65 11 00     < 1140016 : 0x116530 >

.GCPI270_5:
  1097ac:    96 c7 11 00     < 1165206 : 0x11C796 >

.GCPI270_6:
  1097b0:    c1 c7 11 00     < 1165249 : 0x11C7C1 >

.GCPI270_7:
  1097b4:    da c7 11 00     < 1165274 : 0x11C7DA >

.GCPI270_8:
  1097b8:    f3 c7 11 00     < 1165299 : 0x11C7F3 >

.GCPI270_9:
  1097bc:    6c 3c 09 00     < 605292 : 0x93C6C >

.GCPI270_10:
  1097c0:    40 42 0f 00     < 1000000 : 0xF4240 >

.GCPI270_11:
  1097c4:    20 00 09 00     < 589856 : 0x90020 >

.GCPI270_12:
  1097c8:    90 00 09 00     < 589968 : 0x90090 >

.GCPI270_13:
  1097cc:    04 24 09 00     < 599044 : 0x92404 >

.GCPI270_14:
  1097d0:    40 14 09 00     < 595008 : 0x91440 >

common_msg_deal:
  1097d4:    15 c2       	[--sp] = {rets, r5, r4} 			  ## common_msg.c:35:0
  1097d6:    86 ef 00 13 	cmp r0, 1555			  ## common_msg.c:36:5
  1097da:    37 10       	ifs (nzcv == 0) goto 110 <common_msg_deal+0x76 : 10984a >			  ## common_msg.c:36:5
  1097dc:    78 98       	cmp r0, 15
  1097de:    1b 10       	ifs (nzcv == 0) goto 54 <common_msg_deal+0x42 : 109816 >
  1097e0:    88 98       	cmp r0, 17
  1097e2:    19 10       	ifs (nzcv == 0) goto 50 <common_msg_deal+0x42 : 109816 >
  1097e4:    c8 98       	cmp r0, 25
  1097e6:    23 10       	ifs (nzcv == 0) goto 70 <common_msg_deal+0x5A : 10982e >
  1097e8:    d0 98       	cmp r0, 26
  1097ea:    23 10       	ifs (nzcv == 0) goto 70 <common_msg_deal+0x5E : 109832 >
  1097ec:    68 98       	cmp r0, 13
  1097ee:    1e 11       	ifs (nzcv != 0) goto 60 <common_msg_deal+0x58 : 10982c >
  1097f0:    fe e1 4f ed 	call -8792 <wdt_clear : 10759c >			  ## common_msg.c:38:9
  1097f4:    fe e1 2f fc 	call -8316 <adc_get_voltage : 10777c >			  ## app_power_mg.c:58:15
  1097f8:    05 a2       	r5 = r0 << 2 			  ## app_power_mg.c:58:48
  1097fa:    87 ef 50 d0 	cmp r5, 2000			  ## app_power_mg.c:62:9
  1097fe:    84 03       	if (nzcv > 0) {			  ## app_power_mg.c:65:9
  109800:    18 80       		r0 = 3 
                               	} else {			  ## app_power_mg.c:65:9
  109802:    20 80       		r0 = 4 
                               	}			  ## app_power_mg.c:63:9
  109804:    ff e1 cf 37 	call -6408 <pll_ref_sel_init : 107f00 >			  ## app_power_mg.c:63:9
  109808:    4c 28       	r4 = [addr(132)]  <.GCPI271_1 : 10988c >			  ## app_power_mg.c:69:16
  10980a:    e0 50       	r0 = h[r4 + 12] 			  ## app_power_mg.c:69:16
  10980c:    28 ce       	cmp r5, r0			  ## app_power_mg.c:69:9
  10980e:    29 19       	if (nzcv <= 0) goto 82 <common_msg_deal+0x8E : 109862 >			  ## app_power_mg.c:69:9
  109810:    00 80       	r0 = 0 			  ## app_power_mg.c:76:23
  109812:    e0 74       	h[r4 + 14] = r0 			  ## app_power_mg.c:76:23
  109814:    32 08       	goto 100 <common_msg_deal+0xA6 : 10987a >			  ## app_power_mg.c:76:23
  109816:    00 2f       	r0 = [addr(112)]  <.GCPI271_0 : 109888 >			  ## common_msg.c:59:9
  109818:    dc e1 0f be 	call -288832 <xprintf : c2fdc >			  ## common_msg.c:59:9
  10981c:    00 2f       	r0 = [addr(112)]  <.GCPI271_1 : 10988c >			  ## common_msg.c:60:19
  10981e:    11 ea ff 00 	r1 = 255 			  ## common_msg.c:60:19
  109822:    81 78       	b[r0 + 8] = r1 
  109824:    11 ea 00 06 	r1 = 1536 
  109828:    ff e1 4f 6f 	call -4632 <post_msg : 108614 >
  10982c:    15 c0       	{pc, r5, r4} = [sp++] 
  10982e:    68 81       	r0 = 45 			  ## common_msg.c:49:9
  109830:    01 08       	goto 2 <common_msg_deal+0x60 : 109834 >			  ## common_msg.c:49:9
  109832:    58 81       	r0 = 43 			  ## common_msg.c:45:9
  109834:    11 ea ff 00 	r1 = 255 
  109838:    ff e1 2f 4f 	call -5660 <dac_vol : 108220 >
  10983c:    80 2d       	r0 = [addr(88)]  <.GCPI271_3 : 109894 >
  10983e:    00 e8 01 c7 	r1 = b[r0 + 31] 
  109842:    40 2d       	r0 = [addr(84)]  <.GCPI271_4 : 109898 >
  109844:    dc e1 af bc 	call -288876 <xprintf : c2fdc >
  109848:    15 c0       	{pc, r5, r4} = [sp++] 
  10984a:    40 2c       	r0 = [addr(68)]  <.GCPI271_2 : 109890 >			  ## common_msg.c:53:9
  10984c:    dc e1 6f bc 	call -288884 <xprintf : c2fdc >			  ## common_msg.c:53:9
  109850:    c0 2b       	r0 = [addr(60)]  <.GCPI271_1 : 10988c >			  ## toy_main.c:53:14
  109852:    81 58       	r1 = b[r0 + 8] 			  ## toy_main.c:53:14
  109854:    49 d0       	r1 = r1 + 1 			  ## toy_main.c:53:14
  109856:    81 78       	b[r0 + 8] = r1 			  ## toy_main.c:53:14
  109858:    81 58       	r1 = b[r0 + 8] 			  ## toy_main.c:54:9
  10985a:    41 98       	cmp r1, 8			  ## toy_main.c:54:9
  10985c:    e3 13       	if (nzcv < 0) goto -58 <common_msg_deal+0x50 : 109824 >			  ## toy_main.c:54:9
  10985e:    01 80       	r1 = 0 			  ## toy_main.c:55:19
  109860:    e0 0f       	goto -64 <common_msg_deal+0x4E : 109822 >			  ## toy_main.c:55:19
  109862:    e0 54       	r0 = h[r4 + 14] 			  ## app_power_mg.c:70:22
  109864:    40 d0       	r0 = r0 + 1 			  ## app_power_mg.c:70:22
  109866:    e0 74       	h[r4 + 14] = r0 			  ## app_power_mg.c:70:22
  109868:    40 c9       	r0 = r0.l 			  ## app_power_mg.c:70:22
  10986a:    50 98       	cmp r0, 10			  ## app_power_mg.c:71:13
  10986c:    06 11       	ifs (nzcv != 0) goto 12 <common_msg_deal+0xA6 : 10987a >			  ## app_power_mg.c:71:13
  10986e:    c0 2a       	r0 = [addr(44)]  <.GCPI271_5 : 10989c >			  ## app_power_mg.c:72:13
  109870:    dc e1 4f bb 	call -288920 <xprintf : c2fdc >			  ## app_power_mg.c:72:13
  109874:    79 80       	r1 = 15 			  ## app_power_mg.c:73:13
  109876:    ff e1 df 6c 	call -4710 <post_msg : 108614 >			  ## app_power_mg.c:73:13
  10987a:    20 e8 40 19 	r0 = [r4 + 100] 			  ## audio.c:64:25
  10987e:    09 80       	r1 = 1 			  ## audio.c:64:5
  109880:    ff e1 8f 51 	call -5584 <audio_analog_lookup : 1082b4 >			  ## audio.c:64:5
  109884:    15 c0       	{pc, r5, r4} = [sp++] 			  ## audio.c:64:5
  109886:    00 00       	nop			  ## audio.c:64:5


.GCPI271_0:
  109888:    60 b8 11 00     < 1161312 : 0x11B860 >

.GCPI271_1:
  10988c:    60 1c 00 00     < 7264 : 0x1C60 >

.GCPI271_2:
  109890:    3a b8 11 00     < 1161274 : 0x11B83A >

.GCPI271_3:
  109894:    a4 25 00 00     < 9636 : 0x25A4 >

.GCPI271_4:
  109898:    1e b8 11 00     < 1161246 : 0x11B81E >

.GCPI271_5:
  10989c:    53 ae 11 00     < 1158739 : 0x11AE53 >

device_close:
  1098a0:    15 c2       	[--sp] = {rets, r5, r4} 			  ## device_mge.c:66:0
  1098a2:    08 98       	cmp r0, 1			  ## device_mge.c:67:35
  1098a4:    16 18       	if (nzcv > 0) goto 44 <device_close+0x32 : 1098d2 >			  ## device_mge.c:67:35
  1098a6:    01 a3       	r1 = r0 << 3 			  ## device_mge.c:67:66
  1098a8:    42 2b       	r2 = [addr(52)]  <.GCPI272_0 : 1098dc >			  ## device_mge.c:67:66
  1098aa:    54 d4       	r4 = r2 + r1 			  ## device_mge.c:67:66
  1098ac:    21 c6       	r1 = r4 			  ## device_mge.c:67:66
  1098ae:    04 e8 12 01 	r2 = b[++ r1 = 4] 			  ## device_mge.c:67:66
  1098b2:    f0 20       	if (r0 == 0) goto 30 <device_close+0x32 : 1098d2 >			  ## device_mge.c:67:66
  1098b4:    e2 20       	if (r2 == 0) goto 28 <device_close+0x32 : 1098d2 >
  1098b6:    d0 d3       	r0 = r2 + -1 			  ## device_mge.c:78:42
  1098b8:    08 78       	b[r1 + 0] = r0 			  ## device_mge.c:78:42
  1098ba:    00 c9       	r0 = r0.b 			  ## device_mge.c:78:42
  1098bc:    0a 11       	ifs (nzcv != 0) goto 20 <device_close+0x32 : 1098d2 >			  ## device_mge.c:78:42
  1098be:    65 87       	r5 = -20 
  1098c0:    20 48       	r0 = [r4 + 0] 			  ## device_mge.c:82:51
  1098c2:    ff e1 1f 62 	call -5054 <dev_close : 108508 >			  ## device_mge.c:82:19
  1098c6:    60 20       	if (r0 == 0) goto 12 <device_close+0x34 : 1098d4 >			  ## device_mge.c:83:17
  1098c8:    6d d0       	r5 = r5 + 1 			  ## device_mge.c:87:28
  1098ca:    fa 11       	ifs (nzcv != 0) goto -12 <device_close+0x20 : 1098c0 >			  ## device_mge.c:87:28
  1098cc:    40 29       	r0 = [addr(20)]  <.GCPI272_1 : 1098e0 >			  ## device_mge.c:90:9
  1098ce:    dc e1 5f b8 	call -289014 <xprintf : c2fdc >			  ## device_mge.c:90:9
  1098d2:    15 c0       	{pc, r5, r4} = [sp++] 
  1098d4:    00 80       	r0 = 0 			  ## device_mge.c:84:48
  1098d6:    20 68       	[r4 + 0] = r0 			  ## device_mge.c:84:48
  1098d8:    15 c0       	{pc, r5, r4} = [sp++] 			  ## device_mge.c:84:48
  1098da:    00 00       	nop			  ## device_mge.c:84:48


.GCPI272_0:
  1098dc:    30 19 00 00     < 6448 : 0x1930 >

.GCPI272_1:
  1098e0:    82 b8 11 00     < 1161346 : 0x11B882 >

simple_dev_fs_close:
  1098e4:    14 c2       	[--sp] = {rets, r4} 			  ## simple_play_file.c:31:0
  1098e6:    04 c6       	r4 = r0 			  ## simple_play_file.c:31:0
  1098e8:    20 d1       	r0 = r4 + 4 			  ## simple_play_file.c:32:28
  1098ea:    ff e1 bf 3d 	call -6218 <vfs_file_close : 1080a4 >			  ## simple_play_file.c:32:5
  1098ee:    20 c6       	r0 = r4 			  ## simple_play_file.c:33:5
  1098f0:    ff e1 0f 41 	call -6112 <vfs_fs_close : 108114 >			  ## simple_play_file.c:33:5
  1098f4:    00 e8 40 86 	r0 = b[r4 + 26] 			  ## simple_play_file.c:34:5
  1098f8:    d3 04       	call -90 <device_close : 1098a0 >			  ## simple_play_file.c:34:5
  1098fa:    14 c0       	{pc, r4} = [sp++] 			  ## simple_play_file.c:34:5


midi_dec_config:
  1098fc:    1f c2       	[--sp] = {rets} 			  ## midi_config.c:21:0
  1098fe:    60 20       	if (r0 == 0) goto 12 <midi_dec_config+0x10 : 10990c >			  ## midi_config.c:21:0
  109900:    43 48       	r3 = [r0 + 4] 			  ## midi_config.c:26:62
  109902:    43 20       	if (r3 == 0) goto 8 <midi_dec_config+0x10 : 10990c >
  109904:    80 48       	r0 = [r0 + 8] 			  ## midi_config.c:27:33
  109906:    20 20       	if (r0 == 0) goto 4 <midi_dec_config+0x10 : 10990c >
  109908:    5b 4a       	r3 = [r3 + 36] 			  ## midi_config.c:32:10
  10990a:    ab 01       	call r3			  ## midi_config.c:32:5
  10990c:    1f c0       	{pc} = [sp++] 


control_stop:
  10990e:    15 c2       	[--sp] = {rets, r5, r4} 			  ## midi_synth.c:999:0
  109910:    30 c5       	[--sp] = {macch, maccl} 			  ## midi_synth.c:999:0
  109912:    13 80       	r3 = 2 			  ## midi_synth.c:1000:15
  109914:    0b 78       	b[r1 + 0] = r3 			  ## midi_synth.c:1000:15
  109916:    00 fc 22 07 	r2 = r2 * 7 			  ## midi_synth.c:1001:7
  10991a:    80 d4       	r0 = r0 + r2 			  ## midi_synth.c:1001:7
  10991c:    12 ea 4c 04 	r2 = 1100 			  ## midi_synth.c:1001:7
  109920:    00 e7 02 02 	r2 = b[r0 + r2] 			  ## midi_synth.c:1001:7
  109924:    52 20       	if (r2 == 0) goto 10 <control_stop+0x22 : 109930 >			  ## midi_synth.c:1001:7
  109926:    08 80       	r0 = 1 			  ## midi_synth.c:1004:23
  109928:    08 7e       	b[r1 + 3] = r0 			  ## midi_synth.c:1004:23
  10992a:    00 80       	r0 = 0 			  ## midi_synth.c:1004:23
  10992c:    30 c4       	{macch, maccl} = [sp++] 
  10992e:    15 c0       	{pc, r5, r4} = [sp++] 
  109930:    0a 5c       	r2 = b[r1 + 2] 			  ## midi_synth.c:1002:13
  109932:    5a 20       	if (r2 != 0) goto 10 <control_stop+0x30 : 10993e >			  ## midi_synth.c:1002:13
  109934:    12 ea 48 04 	r2 = 1096 			  ## midi_synth.c:1002:27
  109938:    00 e7 00 02 	r0 = b[r0 + r2] 			  ## midi_synth.c:1002:27
  10993c:    48 27       	if (r0 != 0) goto -24 <control_stop+0x18 : 109926 >			  ## midi_synth.c:1002:27
  10993e:    88 58       	r0 = b[r1 + 8] 			  ## midi_synth.c:1007:14
  109940:    18 98       	cmp r0, 3			  ## midi_synth.c:1007:6
  109942:    01 03       	ifs (nzcv == 0) {			  ## midi_synth.c:1009:16
  109944:    00 80       		r0 = 0 			  ## midi_synth.c:1009:16
  109946:    88 78       		b[r1 + 8] = r0 
                               	}			  ## midi_synth.c:1009:16
  109948:    02 80       	r2 = 0 			  ## midi_synth.c:1009:16
  10994a:    0a 7e       	b[r1 + 3] = r2 			  ## midi_synth.c:1012:22
  10994c:    00 ed 10 58 	r0 = r1 + 88 			  ## midi_synth.c:1012:22
  109950:    03 54       	r3 = h[r0 + 2] 			  ## midi_synth.c:1014:24
  109952:    83 68       	[r0 + 8] = r3 			  ## midi_synth.c:1014:22
  109954:    42 70       	h[r0 + 4] = r2 			  ## midi_synth.c:1015:19
  109956:    00 ed 13 1c 	r3 = r1 + 28 			  ## midi_synth.c:1015:19
  10995a:    5a 6b       	[r3 + 52] = r2 			  ## midi_synth.c:1016:23
  10995c:    08 80       	r0 = 1 			  ## midi_synth.c:1016:23
  10995e:    18 78       	b[r3 + 0] = r0 			  ## midi_synth.c:1018:18
  109960:    00 ed 14 bc 	r4 = r1 + 188 			  ## midi_synth.c:1018:18
  109964:    25 58       	r5 = b[r4 + 0] 			  ## midi_synth.c:1019:23
  109966:    25 26       	if (r5 == 0) goto -60 <control_stop+0x1E : 10992c >			  ## midi_synth.c:1019:23
  109968:    90 e8 11 31 	r1 = h[r1 + 196] (s) 			  ## midi_synth.c:1021:3
  10996c:    9d 4b       	r5 = [r3 + 56] 			  ## midi_synth.c:1021:3
  10996e:    e9 06       	macc = r5 * r1 (s) 			  ## midi_synth.c:1021:3
  109970:    c0 f9 01 0f 	r1 = macc >>> 15 			  ## midi_synth.c:1021:3
  109974:    99 6b       	[r3 + 56] = r1 			  ## midi_synth.c:1021:3
  109976:    22 78       	b[r4 + 0] = r2 			  ## midi_synth.c:1022:28
  109978:    d9 0f       	goto -78 <control_stop+0x1E : 10992c >			  ## midi_synth.c:1022:28


sr_renew_waveinfo:
  10997a:    14 c2       	[--sp] = {rets, r4} 			  ## midi_synth.c:1041:0
  10997c:    83 58       	r3 = b[r0 + 8] 			  ## midi_synth.c:1042:16
  10997e:    03 21       	if (r3 == 0) goto 32 <sr_renew_waveinfo+0x26 : 1099a0 >			  ## midi_synth.c:1042:6
  109980:    03 4b       	r3 = [r0 + 48] 			  ## midi_synth.c:1047:48
  109982:    d4 d3       	r4 = r2 + -1 			  ## midi_synth.c:1049:33
  109984:    41 e5 04 0b 	d[r0 + 44] = r4, r1 			  ## midi_synth.c:1049:21
  109988:    64 d4       	r4 = r4 + r1 			  ## midi_synth.c:1051:41
  10998a:    44 6b       	[r0 + 52] = r4 			  ## midi_synth.c:1051:21
  10998c:    89 d4       	r1 = r1 + r2 			  ## midi_synth.c:1052:42
  10998e:    81 6a       	[r0 + 40] = r1 			  ## midi_synth.c:1052:22
  109990:    11 ad       	r1 = r2 << 13 			  ## midi_synth.c:1047:24
  109992:    c0 fc 11 03 	r1 = r1 / r3 (s) 			  ## midi_synth.c:1047:36
  109996:    02 49       	r2 = [r0 + 16] 			  ## midi_synth.c:1053:48
  109998:    11 06       	r1 *= r2 			  ## midi_synth.c:1053:58
  10999a:    49 ad       	r1 = r1 >> 13 			  ## midi_synth.c:1053:70
  10999c:    01 69       	[r0 + 16] = r1 			  ## midi_synth.c:1053:29
  10999e:    14 c0       	{pc, r4} = [sp++] 			  ## midi_synth.c:1053:29
  1099a0:    0a ad       	r2 = r1 << 13 			  ## midi_synth.c:1068:24
  1099a2:    83 4a       	r3 = [r0 + 40] 			  ## midi_synth.c:1068:45
  1099a4:    db d3       	r3 = r3 + -1 			  ## midi_synth.c:1068:54
  1099a6:    c0 fc 22 03 	r2 = r2 / r3 (s) 			  ## midi_synth.c:1068:32
  1099aa:    03 49       	r3 = [r0 + 16] 			  ## midi_synth.c:1069:48
  1099ac:    1a 06       	r2 *= r3 			  ## midi_synth.c:1069:58
  1099ae:    52 ad       	r2 = r2 >> 13 			  ## midi_synth.c:1069:70
  1099b0:    02 69       	[r0 + 16] = r2 			  ## midi_synth.c:1069:29
  1099b2:    81 6a       	[r0 + 40] = r1 			  ## midi_synth.c:1070:22
  1099b4:    14 c0       	{pc, r4} = [sp++] 			  ## midi_synth.c:1070:22


control_pan:
  1099b6:    00 fc 22 07 	r2 = r2 * 7 			  ## midi_synth.c:1028:0
  1099ba:    80 d4       	r0 = r0 + r2 			  ## midi_synth.c:1030:10
  1099bc:    12 ea 4e 04 	r2 = 1102 			  ## midi_synth.c:1030:10
  1099c0:    00 e7 00 02 	r0 = b[r0 + r2] 			  ## midi_synth.c:1030:10
  1099c4:    8a 4b       	r2 = [r1 + 56] 			  ## midi_synth.c:1031:21
  1099c6:    80 d4       	r0 = r0 + r2 			  ## midi_synth.c:1030:63
  1099c8:    1f ed 03 c0 	r3 = r0 + -64 			  ## midi_synth.c:1031:8
  1099cc:    fb 99       	cmp r3, 63			  ## midi_synth.c:1034:11
  1099ce:    18 c6       	r0 = r3 			  ## midi_synth.c:1034:11
  1099d0:    a0 03       	ifs (nzcv >= 0) {			  ## midi_synth.c:1034:11
  1099d2:    f8 81       		r0 = 63 
                               	}			  ## midi_synth.c:1034:11
  1099d4:    0a 86       	r2 = -63 			  ## midi_synth.c:1032:12
  1099d6:    0b 9e       	cmp r3, -63			  ## midi_synth.c:1032:6
  1099d8:    a0 03       	ifs (nzcv >= 0) {			  ## midi_synth.c:1032:6
  1099da:    02 c6       		r2 = r0 
                               	}			  ## midi_synth.c:1032:6
  1099dc:    20 ee 20 40 	r0 = 64 - r2 			  ## midi_synth.c:1036:33
  1099e0:    43 29       	r3 = [addr(20)]  <.GCPI277_0 : 1099f4 >			  ## midi_synth.c:1036:21
  1099e2:    00 e7 30 00 	r0 = b[r3 + r0] 			  ## midi_synth.c:1036:21
  1099e6:    c8 6b       	[r1 + 60] = r0 			  ## midi_synth.c:1036:19
  1099e8:    98 d4       	r0 = r3 + r2 			  ## midi_synth.c:1036:21
  1099ea:    00 e8 00 10 	r0 = b[r0 + 64] 			  ## midi_synth.c:1037:21
  1099ee:    60 e8 10 10 	[r1 + 64] = r0 			  ## midi_synth.c:1037:19
  1099f2:    20 00       	rts			  ## midi_synth.c:1038:1


.GCPI277_0:
  1099f4:    9c 99 11 00     < 1153436 : 0x11999C >

control_volume:
  1099f8:    14 c2       	[--sp] = {rets, r4} 			  ## midi_synth.c:975:0
  1099fa:    00 fc 22 07 	r2 = r2 * 7 			  ## midi_synth.c:980:14
  1099fe:    80 d4       	r0 = r0 + r2 			  ## midi_synth.c:980:14
  109a00:    04 ed 03 48 	r3 = r0 + 1096 
  109a04:    18 5a       	r0 = b[r3 + 1] 			  ## midi_synth.c:980:14
  109a06:    1a 5c       	r2 = b[r3 + 2] 			  ## midi_synth.c:981:26
  109a08:    10 06       	r0 *= r2 			  ## midi_synth.c:981:24
  109a0a:    40 a7       	r0 = r0 >> 7 			  ## midi_synth.c:984:88
  109a0c:    c2 2a       	r2 = [addr(44)]  <.GCPI278_0 : 109a38 >			  ## midi_synth.c:984:65
  109a0e:    00 e7 22 00 	r2 = b[r2 + r0] 			  ## midi_synth.c:984:59
  109a12:    08 c6       	r0 = r1 			  ## midi_synth.c:984:46
  109a14:    14 e8 04 12 	r4 = h[++ r0 = 72] 			  ## midi_synth.c:984:46
  109a18:    22 06       	r2 *= r4 			  ## midi_synth.c:984:57
  109a1a:    52 a9       	r2 = r2 >> 9 			  ## midi_synth.c:984:96
  109a1c:    54 e8 12 a9 	h[++ r1 = 166] = r2 			  ## midi_synth.c:984:22
  109a20:    1b 5e       	r3 = b[r3 + 3] 			  ## midi_synth.c:986:6
  109a22:    0b 9a       	cmp r3, 65			  ## midi_synth.c:986:6
  109a24:    23 03       	if (nzcv >= 0) {			  ## midi_synth.c:988:51
  109a26:    13 ea 3c b5 		r3 = 46396 			  ## midi_synth.c:988:51
  109a2a:    1a 06       		r2 *= r3 			  ## midi_synth.c:988:51
  109a2c:    52 b0       		r2 = r2 >> 16 			  ## midi_synth.c:988:60
  109a2e:    0a 70       		h[r1 + 0] = r2 
                               	}			  ## midi_synth.c:988:23
  109a30:    41 51       	r1 = h[r0 + 20] 			  ## midi_synth.c:994:27
  109a32:    09 ae       	r1 = r1 << 14 			  ## midi_synth.c:994:46
  109a34:    81 68       	[r0 + 8] = r1 			  ## midi_synth.c:994:25
  109a36:    14 c0       	{pc, r4} = [sp++] 			  ## midi_synth.c:994:25


.GCPI278_0:
  109a38:    34 9a 11 00     < 1153588 : 0x119A34 >

toy_midi_ctrl_note_on:
  109a3c:    1e c2       	[--sp] = {rets, r14-r4} 			  ## toy_midi_ctrl.c:61:0
  109a3e:    30 c5       	[--sp] = {macch, maccl} 			  ## toy_midi_ctrl.c:61:0
  109a40:    f0 cd       	sp += -16 			  ## toy_midi_ctrl.c:61:0
  109a42:    00 98       	cmp r0, 0			  ## toy_midi_ctrl.c:61:0
  109a44:    00 fb 00 2f 	ifs (nzcv == 0) goto 1504 <toy_midi_ctrl_note_on+0x5EC : 10a028 >			  ## toy_midi_ctrl.c:61:0
  109a48:    20 e8 09 02 	r9 = [r0 + 8] 			  ## toy_midi_ctrl.c:65:27
  109a4c:    20 e4 10 78 	r0 = [addr(1504)]  <.GCPI279_0 : 10a030 >			  ## midi_ctrl_api.c:187:36
  109a50:    10 e3 07 80 	[r0 + 92] &= (~128) 			  ## midi_ctrl_api.c:187:36
  109a54:    1f e2 07 80 	[r0 + 92] |= 256 			  ## midi_ctrl_api.c:188:36
  109a58:    03 ed 9b 24 	r11 = r9 + 804 
  109a5c:    90 e8 b0 73 	r0 = h[r11 + -52] (s) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:471:32
  109a60:    c0 f3 14 80 	r4 = r1 & (~128) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:444:14
  109a64:    02 ed 9c f0 	r12 = r9 + 752 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:444:14
  109a68:    04 ed 98 d0 	r8 = r9 + 1232 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:444:14
  109a6c:    08 98       	cmp r0, 1			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:471:3
  109a6e:    c2 60       	[sp+ 12] = r2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:471:3
  109a70:    23 1b       	ifs (nzcv < 0) goto 70 <toy_midi_ctrl_note_on+0x7C : 109ab8 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:471:3
  109a72:    05 80       	r5 = 0 
  109a74:    07 80       	r7 = 0 
  109a76:    06 80       	r6 = 0 
  109a78:    20 e8 81 fa 	r1 = [r8 + -24] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:473:22
  109a7c:    80 f1 11 06 	r1 = r1 & setbit(r6) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:473:37
  109a80:    10 10       	ifs (nzcv == 0) goto 32 <toy_midi_ctrl_note_on+0x66 : 109aa2 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:473:8
  109a82:    20 e8 81 07 	r1 = [r8 + 28] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:475:43
  109a86:    49 d5       	r1 = r1 + r5 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:476:21
  109a88:    4b 58       	r3 = b[r1 + 4] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:476:21
  109a8a:    1a ce       	cmp r3, r2			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:476:34
  109a8c:    0e 11       	ifs (nzcv != 0) goto 28 <toy_midi_ctrl_note_on+0x6E : 109aaa >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:476:34
  109a8e:    4b 5a       	r3 = b[r1 + 5] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:476:49
  109a90:    1c ce       	cmp r3, r4			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:476:9
  109a92:    0b 11       	ifs (nzcv != 0) goto 22 <toy_midi_ctrl_note_on+0x6E : 109aaa >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:476:9
  109a94:    88 c6       	r0 = r9 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:478:6
  109a96:    ff e1 af f3 	call -396 <control_stop : 10990e >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:478:6
  109a9a:    c2 40       	r2 = [sp+ 12] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:478:6
  109a9c:    10 e8 c0 00 	r0 = h[r12 + 0] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:478:6
  109aa0:    04 08       	goto 8 <toy_midi_ctrl_note_on+0x6E : 109aaa >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:478:6
  109aa2:    3f 20       	if (r7 != 0) goto 6 <toy_midi_ctrl_note_on+0x6E : 109aaa >
  109aa4:    60 e8 b6 f6 	[r11 + -40] = r6 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:485:32
  109aa8:    0f 80       	r7 = 1 
  109aaa:    00 ed 55 e0 	r5 = r5 + 224 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:471:17
  109aae:    76 d0       	r6 = r6 + 1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:471:50
  109ab0:    c1 c9       	r1 = r0.l (s) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:471:19
  109ab2:    31 ce       	cmp r6, r1			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:471:3
  109ab4:    e1 1b       	ifs (nzcv < 0) goto -62 <toy_midi_ctrl_note_on+0x3C : 109a78 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:471:3
  109ab6:    01 08       	goto 2 <toy_midi_ctrl_note_on+0x7E : 109aba >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:471:3
  109ab8:    07 80       	r7 = 0 
  109aba:    10 a2       	r0 = r2 << 2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:491:17
  109abc:    88 cb       	r0 += r9 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:491:30
  109abe:    11 ea d8 03 	r1 = 984 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:491:30
  109ac2:    20 e7 01 01 	r1 = [r0 + r1] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:491:17
  109ac6:    80 e7 10 04 	r0 = b[r1 + r4] (s) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:491:17
  109aca:    05 ed 9a ec 	r10 = r9 + 1516 
  109ace:    30 20       	if (r0 == 0) goto 6 <toy_midi_ctrl_note_on+0x9A : 109ad6 >
  109ad0:    02 c6       	r2 = r0 
  109ad2:    9a 20       	if (r2 != 0) goto 18 <toy_midi_ctrl_note_on+0xAA : 109ae6 >
  109ad4:    1f 08       	goto 62 <toy_midi_ctrl_note_on+0xD8 : 109b14 >
  109ad6:    e3 d3       	r3 = r4 + -1 
  109ad8:    fb 9f       	cmp r3, -1			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:497:4
  109ada:    00 fb fd 09 	ifs (nzcv <= 0) goto 318 <toy_midi_ctrl_note_on+0x1E0 : 109c1c >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:497:4
  109ade:    00 e7 12 03 	r2 = b[r1 + r3] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:499:9
  109ae2:    db d3       	r3 = r3 + -1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:499:9
  109ae4:    92 27       	if (r2 == 0) goto -14 <toy_midi_ctrl_note_on+0x9C : 109ad8 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:499:9
  109ae6:    20 e8 a0 0f 	r0 = [r10 + 60] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:522:21
  109aea:    18 98       	cmp r0, 3			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:522:8
  109aec:    13 10       	ifs (nzcv == 0) goto 38 <toy_midi_ctrl_note_on+0xD8 : 109b14 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:522:8
  109aee:    20 e8 c0 fb 	r0 = [r12 + -20] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:524:29
  109af2:    c1 40       	r1 = [sp+ 12] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:524:47
  109af4:    09 a1       	r1 = r1 << 1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:524:47
  109af6:    89 cb       	r1 += r9 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:524:60
  109af8:    13 ea 18 04 	r3 = 1048 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:524:60
  109afc:    10 e7 11 03 	r1 = h[r1 + r3] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:524:47
  109b00:    89 d4       	r1 = r1 + r2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:524:83
  109b02:    09 a5       	r1 = r1 << 5 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:524:102
  109b04:    40 d4       	r0 = r0 + r1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:524:29
  109b06:    1f ed 01 e0 	r1 = r0 + -32 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:524:44
  109b0a:    03 ed 90 00 	r0 = r9 + 768 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:525:27
  109b0e:    02 81       	r2 = 32 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:525:5
  109b10:    dc e1 ef a1 	call -289732 <memcpy : c2f50 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:525:5
  109b14:    3f 22       	if (r7 != 0) goto 70 <toy_midi_ctrl_note_on+0x120 : 109b5c >
  109b16:    90 e8 b0 73 	r0 = h[r11 + -52] (s) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:537:13
  109b1a:    c3 d3       	r3 = r0 + -1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:537:13
  109b1c:    03 98       	cmp r3, 0			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:537:4
  109b1e:    00 fb 1b 28 	ifs (nzcv < 0) goto 1282 <toy_midi_ctrl_note_on+0x5E8 : 10a024 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:537:4
  109b22:    20 e8 80 07 	r0 = [r8 + 28] 
  109b26:    07 80       	r7 = 0 
  109b28:    fa 87       	r2 = -1 
  109b2a:    00 fc 31 e0 	r1 = r3 * 224 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:537:4
  109b2e:    45 d4       	r5 = r0 + r1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:537:4
  109b30:    19 c6       	r1 = r3 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:537:4
  109b32:    2b 58       	r3 = b[r5 + 0] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:539:48
  109b34:    13 98       	cmp r3, 2			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:539:9
  109b36:    04 11       	ifs (nzcv != 0) goto 8 <toy_midi_ctrl_note_on+0x104 : 109b40 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:539:9
  109b38:    20 e8 56 15 	r6 = [r5 + 84] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:541:49
  109b3c:    32 ce       	cmp r6, r2			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:541:10
  109b3e:    06 13       	if (nzcv < 0) goto 12 <toy_midi_ctrl_note_on+0x110 : 109b4c >
  109b40:    1f ed 55 20 	r5 = r5 + -224 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:537:49
  109b44:    c9 d3       	r1 = r1 + -1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:537:49
  109b46:    f9 9f       	cmp r1, -1			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:537:4
  109b48:    f4 1c       	ifs (nzcv > 0) goto -24 <toy_midi_ctrl_note_on+0xF6 : 109b32 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:537:4
  109b4a:    08 08       	goto 16 <toy_midi_ctrl_note_on+0x120 : 109b5c >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:537:4
  109b4c:    60 e8 b1 f6 	[r11 + -40] = r1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:545:33
  109b50:    cb d3       	r3 = r1 + -1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:545:33
  109b52:    0f 80       	r7 = 1 
  109b54:    fb 9f       	cmp r3, -1			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:537:4
  109b56:    32 c6       	r2 = r6 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:537:4
  109b58:    e8 1c       	ifs (nzcv > 0) goto -48 <toy_midi_ctrl_note_on+0xEE : 109b2a >
  109b5a:    07 08       	goto 14 <toy_midi_ctrl_note_on+0x12E : 109b6a >
  109b5c:    0f 98       	cmp r7, 1			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:551:7
  109b5e:    00 fb 11 26 	ifs (nzcv != 0) goto 1218 <toy_midi_ctrl_note_on+0x5E8 : 10a024 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:551:7
  109b62:    20 e8 80 07 	r0 = [r8 + 28] 
  109b66:    20 e8 b1 f6 	r1 = [r11 + -40] 
  109b6a:    05 80       	r5 = 0 
  109b6c:    07 ed 97 b8 	r7 = r9 + 1976 
  109b70:    3d 7c       	b[r7 + 2] = r5 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2108:22
  109b72:    20 e8 82 fa 	r2 = [r8 + -24] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2109:30
  109b76:    c0 f1 22 01 	r2 = r2 & ~setbit(r1) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2109:30
  109b7a:    60 e8 82 fa 	[r8 + -24] = r2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2109:30
  109b7e:    07 ed 92 be 	r2 = r9 + 1982 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2118:15
  109b82:    12 50       	r2 = h[r2 + 0] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2118:26
  109b84:    52 d0       	r2 = r2 + 1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2118:26
  109b86:    7a 74       	h[r7 + 6] = r2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2118:26
  109b88:    10 e8 b2 00 	r2 = h[r11 + 0] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2121:31
  109b8c:    c3 40       	r3 = [sp+ 12] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2121:31
  109b8e:    00 f1 22 03 	r2 = r2 | setbit(r3) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2121:31
  109b92:    50 e8 b2 00 	h[r11 + 0] = r2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2121:31
  109b96:    00 fc 11 e0 	r1 = r1 * 224 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2123:67
  109b9a:    00 ee 0d 01 	r13 = r0 + r1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2123:67
  109b9e:    a8 c6       	r0 = r13 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2124:2
  109ba0:    01 80       	r1 = 0 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2124:2
  109ba2:    12 ea e0 00 	r2 = 224 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2124:2
  109ba6:    dc e1 9f 9d 	call -289870 <memset : c2f5c >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2124:2
  109baa:    20 e8 a1 0f 	r1 = [r10 + 60] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2127:20
  109bae:    07 ed 90 90 	r0 = r9 + 1936 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2127:20
  109bb2:    19 98       	cmp r1, 3			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2127:57
  109bb4:    49 11       	ifs (nzcv != 0) goto 146 <toy_midi_ctrl_note_on+0x20C : 109c48 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2127:57
  109bb6:    00 e8 b1 c3 	r1 = b[r11 + 15] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2127:90
  109bba:    01 98       	cmp r1, 0			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2127:90
  109bbc:    45 11       	ifs (nzcv != 0) goto 138 <toy_midi_ctrl_note_on+0x20C : 109c48 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2127:90
  109bbe:    81 4f       	r1 = [r0 + -8] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2132:60
  109bc0:    0a a2       	r2 = r1 << 2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2132:33
  109bc2:    07 ed 93 24 	r3 = r9 + 1828 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2132:33
  109bc6:    d2 d4       	r2 = r2 + r3 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2132:33
  109bc8:    56 48       	r6 = [r2 + 4] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2132:33
  109bca:    60 e8 b6 f7 	[r11 + -36] = r6 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2132:31
  109bce:    12 4b       	r2 = [r2 + 48] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2133:32
  109bd0:    50 e8 b2 fa 	h[r11 + -22] = r2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2133:30
  109bd4:    12 ea f7 ff 	r2 = 65527 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2135:29
  109bd8:    50 e8 b2 fb 	h[r11 + -18] = r2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2135:29
  109bdc:    02 80       	r2 = 0 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2135:29
  109bde:    60 e8 b2 f8 	[r11 + -32] = r2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2136:29
  109be2:    16 ea 44 0c 	r6 = 3140 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2137:30
  109be6:    50 e8 b6 7b 	h[r11 + -20] = r6 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2137:30
  109bea:    16 ea 00 10 	r6 = 4096 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2138:27
  109bee:    50 e8 b6 7d 	h[r11 + -12] = r6 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2138:27
  109bf2:    40 e8 b2 3e 	b[r11 + -8] = r2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2139:26
  109bf6:    20 e4 12 12 	r2 = [addr(1096)]  <.GCPI279_4 : 10a040 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2141:31
  109bfa:    60 e8 b2 f9 	[r11 + -28] = r2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2141:31
  109bfe:    12 ea 00 40 	r2 = 16384 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2142:30
  109c02:    50 e8 b2 7c 	h[r11 + -16] = r2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2142:30
  109c06:    1a 48       	r2 = [r3 + 0] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2145:38
  109c08:    49 d0       	r1 = r1 + 1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2144:21
  109c0a:    0a ce       	cmp r1, r2			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2145:7
  109c0c:    20 03       	if (nzcv >= 0) {			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2145:7
  109c0e:    01 80       		r1 = 0 
                               	}			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2145:7
  109c10:    81 6f       	[r0 + -8] = r1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2147:23
  109c12:    01 58       	r1 = b[r0 + 0] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2150:20
  109c14:    d1 20       	if (r1 == 0) goto 26 <toy_midi_ctrl_note_on+0x1F4 : 109c30 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2150:20
  109c16:    40 e8 b1 bd 	b[r11 + -10] = r1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2165:29
  109c1a:    16 08       	goto 44 <toy_midi_ctrl_note_on+0x20C : 109c48 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2165:29
  109c1c:    63 d0       	r3 = r4 + 1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:507:54
  109c1e:    fb 9b       	cmp r3, 127			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:507:5
  109c20:    ff fb 6c f5 	ifs (nzcv > 0) goto -340 <toy_midi_ctrl_note_on+0x94 : 109ad0 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:507:5
  109c24:    00 e7 12 03 	r2 = b[r1 + r3] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:509:24
  109c28:    5b d0       	r3 = r3 + 1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:509:10
  109c2a:    02 ce       	cmp r0, r2			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:509:10
  109c2c:    f8 1a       	ifs (nzcv >= 0) goto -16 <toy_midi_ctrl_note_on+0x1E2 : 109c1e >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:509:10
  109c2e:    51 0f       	goto -350 <toy_midi_ctrl_note_on+0x96 : 109ad2 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:509:10
  109c30:    07 ed 91 84 	r1 = r9 + 1924 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2152:40
  109c34:    09 58       	r1 = b[r1 + 0] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2152:40
  109c36:    09 d5       	r1 = r1 + r4 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2152:49
  109c38:    8a c9       	r2 = r1.b (s) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2152:49
  109c3a:    02 98       	cmp r2, 0			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2153:8
  109c3c:    22 c6       	r2 = r4 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2153:8
  109c3e:    a0 03       	ifs (nzcv >= 0) {			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2153:8
  109c40:    0a c6       		r2 = r1 
                               	}			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2153:8
  109c42:    40 e8 b2 bd 	b[r11 + -10] = r2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2152:29
  109c46:    02 78       	b[r0 + 0] = r2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2161:25
  109c48:    00 ed d1 b8 	r1 = r13 + 184 
  109c4c:    0d 78       	b[r1 + 0] = r5 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2171:18
  109c4e:    40 e8 d4 41 	b[r13 + 5] = r4 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2173:18
  109c52:    f9 83       	r1 = 127 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2174:18
  109c54:    40 e8 d1 81 	b[r13 + 6] = r1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2174:18
  109c58:    c3 40       	r3 = [sp+ 12] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2174:18
  109c5a:    40 e8 d3 01 	b[r13 + 4] = r3 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2175:17
  109c5e:    06 ed 91 44 	r1 = r9 + 1604 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2175:17
  109c62:    09 5a       	r1 = b[r1 + 1] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2177:19
  109c64:    01 98       	cmp r1, 0			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2177:6
  109c66:    21 c6       	r1 = r4 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2177:6
  109c68:    0e 10       	ifs (nzcv == 0) goto 28 <toy_midi_ctrl_note_on+0x24A : 109c86 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2177:6
  109c6a:    00 ee 91 03 	r1 = r9 + r3 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2179:17
  109c6e:    12 ea 46 06 	r2 = 1606 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2179:17
  109c72:    80 e7 11 02 	r1 = b[r1 + r2] (s) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2179:17
  109c76:    0a d5       	r2 = r1 + r4 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2179:15
  109c78:    fa 9b       	cmp r2, 127			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2180:7
  109c7a:    11 c6       	r1 = r2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2180:7
  109c7c:    a0 03       	ifs (nzcv >= 0) {			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2180:7
  109c7e:    f9 83       		r1 = 127 
                               	}			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2180:7
  109c80:    02 98       	cmp r2, 0			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2182:7
  109c82:    d0 03       	ifs (nzcv <= 0) {			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2182:7
  109c84:    01 80       		r1 = 0 
                               	}			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2182:7
  109c86:    00 fc 32 07 	r2 = r3 * 7 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2186:25
  109c8a:    8a cb       	r2 += r9 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2186:25
  109c8c:    13 ea 48 04 	r3 = 1096 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2186:25
  109c90:    00 e7 23 03 	r3 = b[r2 + r3] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2186:25
  109c94:    0a 80       	r2 = 1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2186:81
  109c96:    03 9a       	cmp r3, 64			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2186:81
  109c98:    90 03       	if (nzcv <= 0) {			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2186:81
  109c9a:    02 80       		r2 = 0 
                               	}			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2186:81
  109c9c:    40 e8 d2 80 	b[r13 + 2] = r2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2186:22
  109ca0:    10 e8 b2 f9 	r2 = h[r11 + -26] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2188:24
  109ca4:    00 fc 22 ff 	r2 = r2 * 255 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2189:45
  109ca8:    52 a8       	r2 = r2 >> 8 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2189:72
  109caa:    60 e8 d2 12 	[r13 + 72] = r2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2189:22
  109cae:    00 e8 b2 bd 	r2 = b[r11 + -10] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2195:23
  109cb2:    89 d6       	r1 = r1 - r2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2195:21
  109cb4:    8a c9       	r2 = r1.b (s) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2202:18
  109cb6:    0b b8       	r3 = r1 << 24 
  109cb8:    02 98       	cmp r2, 0			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2202:7
  109cba:    87 60       	[sp+ 8] = r7 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2202:7
  109cbc:    69 80       	r1 = 13 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2202:7
  109cbe:    0d 1b       	ifs (nzcv < 0) goto 26 <toy_midi_ctrl_note_on+0x29E : 109cda >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2202:7
  109cc0:    06 ef 30 30 	cmp r3, 184549376			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2213:4
  109cc4:    14 1d       	ifs (nzcv <= 0) goto 40 <toy_midi_ctrl_note_on+0x2B2 : 109cee >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2213:4
  109cc6:    69 80       	r1 = 13 
  109cc8:    c9 d3       	r1 = r1 + -1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2216:12
  109cca:    12 b8       	r2 = r2 << 24 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2213:11
  109ccc:    14 ee 23 74 	r3 = r2 + 4093640704 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2213:11
  109cd0:    da b8       	r2 = r3 >>> 24 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2213:11
  109cd2:    06 ef 30 30 	cmp r3, 184549376			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2213:4
  109cd6:    f8 1c       	ifs (nzcv > 0) goto -16 <toy_midi_ctrl_note_on+0x28C : 109cc8 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2213:4
  109cd8:    0a 08       	goto 20 <toy_midi_ctrl_note_on+0x2B2 : 109cee >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2213:4
  109cda:    fb 9f       	cmp r3, -1			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2204:4
  109cdc:    08 1c       	ifs (nzcv > 0) goto 16 <toy_midi_ctrl_note_on+0x2B2 : 109cee >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2204:4
  109cde:    69 80       	r1 = 13 
  109ce0:    49 d0       	r1 = r1 + 1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2207:12
  109ce2:    12 b8       	r2 = r2 << 24 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2204:11
  109ce4:    16 ee 23 40 	r3 = r2 + 201326592 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2204:11
  109ce8:    da b8       	r2 = r3 >>> 24 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2204:11
  109cea:    03 98       	cmp r3, 0			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2204:4
  109cec:    f9 1b       	ifs (nzcv < 0) goto -14 <toy_midi_ctrl_note_on+0x2A4 : 109ce0 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2204:4
  109cee:    12 a1       	r2 = r2 << 1 
  109cf0:    20 e4 03 d0 	r3 = [addr(832)]  <.GCPI279_1 : 10a034 >
  109cf4:    10 e7 32 02 	r2 = h[r3 + r2] 
  109cf8:    20 e8 b5 ff 	r5 = [r11 + -4] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2221:55
  109cfc:    2b a2       	r3 = r5 << 2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2221:24
  109cfe:    20 e4 06 ce 	r6 = [addr(824)]  <.GCPI279_2 : 10a038 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2221:24
  109d02:    20 e7 63 03 	r3 = [r6 + r3] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2221:24
  109d06:    1a 06       	r2 *= r3 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2221:22
  109d08:    52 ad       	r2 = r2 >> 13 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2221:69
  109d0a:    10 e8 b3 7d 	r3 = h[r11 + -12] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2223:55
  109d0e:    1a 06       	r2 *= r3 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2223:53
  109d10:    09 c9       	r1 = r1.b 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2223:96
  109d12:    40 f7 21 01 	r1 = r2 >> r1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2223:93
  109d16:    ec c6       	r12 = r13 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2223:29
  109d18:    64 e8 c1 04 	[++ r12 = 16] = r1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2223:29
  109d1c:    20 e8 b1 f7 	r1 = [r11 + -36] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2226:42
  109d20:    60 e8 c1 04 	[r12 + 16] = r1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2226:22
  109d24:    10 e8 b1 fb 	r1 = h[r11 + -18] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2227:26
  109d28:    a2 c6       	r2 = r12 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2227:24
  109d2a:    64 e8 21 14 	[++ r2 = 80] = r1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2227:24
  109d2e:    83 80       	r3 = 16 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2227:24
  109d30:    00 ed c6 a8 	r6 = r12 + 168 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2227:24
  109d34:    33 7a       	b[r6 + 1] = r3 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2228:28
  109d36:    10 e8 b6 78 	r6 = h[r11 + -32] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2229:40
  109d3a:    96 77       	h[r2 + -6] = r6 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2229:20
  109d3c:    00 ed c2 4a 	r2 = r12 + 74 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2229:12
  109d40:    00 ed c3 50 	r3 = r12 + 80 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2227:12
  109d44:    1d 98       	cmp r5, 3			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2233:3
  109d46:    0b 1b       	ifs (nzcv < 0) goto 22 <toy_midi_ctrl_note_on+0x322 : 109d5e >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2233:3
  109d48:    c9 06       	macc = r1 * r1 (s) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2236:4
  109d4a:    c0 f9 01 10 	r1 = macc >>> 16 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2236:4
  109d4e:    19 68       	[r3 + 0] = r1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2236:4
  109d50:    16 50       	r6 = h[r2 + 0] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2238:25
  109d52:    36 06       	r6 *= r6 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2238:48
  109d54:    76 b0       	r6 = r6 >> 16 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2238:69
  109d56:    16 70       	h[r2 + 0] = r6 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2238:22
  109d58:    6d d3       	r5 = r5 + -3 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2235:18
  109d5a:    15 98       	cmp r5, 2			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2233:3
  109d5c:    f5 1c       	ifs (nzcv > 0) goto -22 <toy_midi_ctrl_note_on+0x30C : 109d48 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2233:3
  109d5e:    a5 20       	if (r5 == 0) goto 20 <toy_midi_ctrl_note_on+0x338 : 109d74 >
  109d60:    15 ea ff ff 	r5 = 65535 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2243:4
  109d64:    cd 06       	macc = r1 * r5 (s) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2243:4
  109d66:    c0 f9 01 10 	r1 = macc >>> 16 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2243:4
  109d6a:    19 68       	[r3 + 0] = r1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2243:4
  109d6c:    16 50       	r6 = h[r2 + 0] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2244:25
  109d6e:    35 06       	r5 *= r6 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2244:48
  109d70:    6e b0       	r6 = r5 >> 16 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2244:57
  109d72:    16 70       	h[r2 + 0] = r6 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2244:22
  109d74:    c5 40       	r5 = [sp+ 12] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2247:52
  109d76:    2d a1       	r5 = r5 << 1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2247:52
  109d78:    00 ee 9e 05 	r14 = r9 + r5 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2247:52
  109d7c:    15 ea 9a 07 	r5 = 1946 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2247:52
  109d80:    10 e7 e5 05 	r5 = h[r14 + r5] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2247:52
  109d84:    29 06       	r1 *= r5 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2247:50
  109d86:    c9 af       	r1 = r1 >>> 15 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2247:83
  109d88:    19 68       	[r3 + 0] = r1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2247:25
  109d8a:    80 fc 51 06 	r1 = r5 * r6 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2248:42
  109d8e:    49 af       	r1 = r1 >> 15 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2248:75
  109d90:    11 70       	h[r2 + 0] = r1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2248:21
  109d92:    03 ed 91 14 	r1 = r9 + 788 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2253:41
  109d96:    09 50       	r1 = h[r1 + 0] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2253:41
  109d98:    aa c6       	r2 = r13 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2253:21
  109d9a:    54 e8 21 17 	h[++ r2 = 92] = r1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2253:21
  109d9e:    03 ed 96 16 	r6 = r9 + 790 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2254:46
  109da2:    31 50       	r1 = h[r6 + 0] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2254:46
  109da4:    91 70       	h[r2 + 8] = r1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2254:26
  109da6:    10 e8 b1 fa 	r1 = h[r11 + -22] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2259:23
  109daa:    60 e8 d1 0a 	[r13 + 40] = r1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2259:21
  109dae:    10 e8 b1 7a 	r1 = h[r11 + -24] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2260:22
  109db2:    60 e8 d1 0c 	[r13 + 48] = r1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2260:20
  109db6:    10 e8 b2 79 	r2 = h[r11 + -28] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2261:24
  109dba:    60 e8 d2 0b 	[r13 + 44] = r2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2261:22
  109dbe:    89 d4       	r1 = r1 + r2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2262:42
  109dc0:    60 e8 d1 0d 	[r13 + 52] = r1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2262:20
  109dc4:    00 e8 b3 3e 	r3 = b[r11 + -8] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2263:37
  109dc8:    40 e8 d3 02 	b[r13 + 8] = r3 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2263:17
  109dcc:    20 e8 b5 f7 	r5 = [r11 + -36] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2265:81
  109dd0:    20 e8 b1 f0 	r1 = [r11 + -64] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2265:50
  109dd4:    4a d5       	r2 = r1 + r5 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2265:37
  109dd6:    60 e8 d2 06 	[r13 + 24] = r2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2265:26
  109dda:    20 e8 a7 0f 	r7 = [r10 + 60] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2267:20
  109dde:    00 ed d1 18 	r1 = r13 + 24 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2265:18
  109de2:    1f 98       	cmp r7, 3			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2267:57
  109de4:    03 11       	ifs (nzcv != 0) goto 6 <toy_midi_ctrl_note_on+0x3B0 : 109dec >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2267:57
  109de6:    00 e8 b7 c3 	r7 = b[r11 + 15] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2267:90
  109dea:    77 22       	if (r7 == 0) goto 78 <toy_midi_ctrl_note_on+0x3FE : 109e3a >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2267:90
  109dec:    40 4b       	r0 = [r0 + 52] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2278:20
  109dee:    e0 22       	if (r0 == 0) goto 92 <toy_midi_ctrl_note_on+0x410 : 109e4c >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2278:20
  109df0:    17 c6       	r7 = r2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2280:24
  109df2:    08 e8 70 40 	r0 = b[r7 ++= 1] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2280:24
  109df6:    ad c6       	r5 = r13 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2280:22
  109df8:    44 e8 50 47 	b[++ r5 = 29] = r0 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2280:22
  109dfc:    0f 68       	[r1 + 0] = r7 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2281:28
  109dfe:    40 22       	if (r0 == 0) goto 72 <toy_midi_ctrl_note_on+0x40C : 109e48 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2281:28
  109e00:    20 98       	cmp r0, 4			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2287:13
  109e02:    24 13       	if (nzcv < 0) goto 72 <toy_midi_ctrl_note_on+0x410 : 109e4c >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2287:13
  109e04:    60 e9 0a 01 	[sp+ 4] = r10 
  109e08:    57 5a       	r7 = b[r2 + 5] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2291:23
  109e0a:    50 58       	r0 = b[r2 + 4] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2291:38
  109e0c:    41 f6 70 08 	r0 <= insert(r7, p:8, l:8) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2291:36
  109e10:    00 e8 2a c0 	r10 = b[r2 + 3] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2290:25
  109e14:    17 5c       	r7 = b[r2 + 2] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2290:40
  109e16:    41 f6 a7 08 	r7 <= insert(r10, p:8, l:8) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2290:38
  109e1a:    03 98       	cmp r3, 0			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2292:9
  109e1c:    04 03       	ifs (nzcv == 0) {			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2299:41
  109e1e:    12 d1       		r2 = r2 + 4 
                               	} else {			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2299:41
  109e20:    92 d1       		r2 = r2 + 6 
                               	}			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2294:41
  109e22:    0a 68       	[r1 + 0] = r2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2294:41
  109e24:    f9 c9       	r1 = r7.l (s) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2294:41
  109e26:    c2 c9       	r2 = r0.l (s) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2294:41
  109e28:    a8 c6       	r0 = r13 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2294:41
  109e2a:    ff e1 6f da 	call -1204 <sr_renew_waveinfo : 10997a >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2294:41
  109e2e:    28 58       	r0 = b[r5 + 0] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2302:35
  109e30:    00 d3       	r0 = r0 + -4 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2302:43
  109e32:    28 78       	b[r5 + 0] = r0 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2302:23
  109e34:    20 e9 0a 01 	r10 = [sp+ 4] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2302:23
  109e38:    09 08       	goto 18 <toy_midi_ctrl_note_on+0x410 : 109e4c >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2302:23
  109e3a:    c0 4f       	r0 = [r0 + -4] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2269:51
  109e3c:    40 d5       	r0 = r0 + r5 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2269:38
  109e3e:    08 68       	[r1 + 0] = r0 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2269:27
  109e40:    00 80       	r0 = 0 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2274:21
  109e42:    40 e8 d0 47 	b[r13 + 29] = r0 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2274:21
  109e46:    02 08       	goto 4 <toy_midi_ctrl_note_on+0x410 : 109e4c >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2274:21
  109e48:    90 d0       	r0 = r2 + 2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2285:40
  109e4a:    08 68       	[r1 + 0] = r0 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2285:29
  109e4c:    05 80       	r5 = 0 
  109e4e:    60 e8 d5 05 	[r13 + 20] = r5 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2306:24
  109e52:    88 c6       	r0 = r9 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2308:2
  109e54:    a9 c6       	r1 = r13 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2308:2
  109e56:    c7 40       	r7 = [sp+ 12] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2308:2
  109e58:    3a c6       	r2 = r7 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2308:2
  109e5a:    ff e1 cf da 	call -1192 <control_pan : 1099b6 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2308:2
  109e5e:    88 c6       	r0 = r9 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2309:2
  109e60:    3a c6       	r2 = r7 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2309:2
  109e62:    ff e1 9f dc 	call -1134 <control_volume : 1099f8 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2309:2
  109e66:    20 83       	r0 = 100 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2320:29
  109e68:    60 e8 d0 36 	[r13 + 216] = r0 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2320:29
  109e6c:    20 e8 a0 0f 	r0 = [r10 + 60] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2322:19
  109e70:    08 98       	cmp r0, 1			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2322:6
  109e72:    02 03       	ifs (nzcv == 0) {			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2324:23
  109e74:    08 80       		r0 = 1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2324:23
  109e76:    81 40       		r1 = [sp+ 8] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2324:23
  109e78:    08 7c       		b[r1 + 2] = r0 
                               	}			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2324:23
  109e7a:    00 ed d0 48 	r0 = r13 + 72 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2188:12
  109e7e:    60 e8 d5 03 	[r13 + 12] = r5 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2329:24
  109e82:    40 e8 d5 c0 	b[r13 + 3] = r5 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2330:24
  109e86:    09 80       	r1 = 1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2330:24
  109e88:    40 e8 d1 00 	b[r13 + 0] = r1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2331:17
  109e8c:    40 e8 d1 40 	b[r13 + 1] = r1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2332:18
  109e90:    03 ed 92 10 	r2 = r9 + 784 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2334:45
  109e94:    12 50       	r2 = h[r2 + 0] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2334:27
  109e96:    12 b0       	r2 = r2 << 16 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2334:54
  109e98:    60 e8 d2 13 	[r13 + 76] = r2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2334:24
  109e9c:    00 e8 b2 fd 	r2 = b[r11 + -9] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2336:24
  109ea0:    92 20       	if (r2 == 0) goto 18 <toy_midi_ctrl_note_on+0x478 : 109eb4 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2336:24
  109ea2:    c3 40       	r3 = [sp+ 12] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2338:30
  109ea4:    1b a9       	r3 = r3 << 9 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2338:30
  109ea6:    c0 f3 22 f0 	r2 = r2 & (~240) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2338:66
  109eaa:    1a da       	r2 |= r3 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2338:36
  109eac:    50 e8 d2 82 	h[r13 + 10] = r2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2338:23
  109eb0:    40 e8 d1 42 	b[r13 + 9] = r1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2339:20
  109eb4:    20 e8 c1 00 	r1 = [r12 + 0] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2342:40
  109eb8:    01 68       	[r0 + 0] = r1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2342:22
  109eba:    10 ea 08 06 	r0 = 1544 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2343:53
  109ebe:    10 e7 e0 00 	r0 = h[r14 + r0] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2343:53
  109ec2:    08 06       	r0 *= r1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2343:51
  109ec4:    c0 a8       	r0 = r0 >>> 8 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2343:84
  109ec6:    60 e8 c0 00 	[r12 + 0] = r0 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2343:28
  109eca:    10 e8 b1 fe 	r1 = h[r11 + -6] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2344:24
  109ece:    00 ed d0 bc 	r0 = r13 + 188 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2344:24
  109ed2:    01 23       	if (r1 == 0) goto 96 <toy_midi_ctrl_note_on+0x4F8 : 109f34 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2344:6
  109ed4:    00 ed d1 64 	r1 = r13 + 100 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2254:12
  109ed8:    0a 80       	r2 = 1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2254:12
  109eda:    02 78       	b[r0 + 0] = r2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2347:21
  109edc:    20 e8 b0 f0 	r0 = [r11 + -64] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2350:39
  109ee0:    10 e8 b2 7c 	r2 = h[r11 + -16] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2349:21
  109ee4:    33 50       	r3 = h[r6 + 0] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2348:12
  109ee6:    42 f6 32 10 	r2 <= insert(r3, p:16, l:16) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2349:19
  109eea:    80 d4       	r0 = r0 + r2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2350:26
  109eec:    aa c6       	r2 = r13 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2350:23
  109eee:    64 e8 20 30 	[++ r2 = 192] = r0 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2350:23
  109ef2:    13 ea ff 7f 	r3 = 32767 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2351:19
  109ef6:    53 70       	h[r2 + 4] = r3 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2351:19
  109ef8:    03 80       	r3 = 0 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2351:19
  109efa:    0b 70       	h[r1 + 0] = r3 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2352:27
  109efc:    51 49       	r1 = [r2 + 20] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2359:41
  109efe:    4b d0       	r3 = r1 + 1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2359:41
  109f00:    53 69       	[r2 + 20] = r3 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2359:41
  109f02:    00 e7 02 01 	r2 = b[r0 + r1] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2359:17
  109f06:    c0 f3 21 80 	r1 = r2 & (~128) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2360:22
  109f0a:    95 c9       	r5 = r2.b (s) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2359:17
  109f0c:    00 ed d2 d4 	r2 = r13 + 212 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2359:37
  109f10:    05 98       	cmp r5, 0			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2361:4
  109f12:    13 1b       	ifs (nzcv < 0) goto 38 <toy_midi_ctrl_note_on+0x4FE : 109f3a >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2361:4
  109f14:    3e 80       	r6 = 7 
  109f16:    5d d0       	r5 = r3 + 1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2363:39
  109f18:    15 68       	[r2 + 0] = r5 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2363:39
  109f1a:    00 e7 03 03 	r3 = b[r0 + r3] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2363:15
  109f1e:    c0 f3 37 80 	r7 = r3 & (~128) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2364:24
  109f22:    f6 c9       	r6 = r6.l (s) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2364:35
  109f24:    37 cf       	r7 <<= r6 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2364:32
  109f26:    39 da       	r1 |= r7 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2364:45
  109f28:    9b c9       	r3 = r3.b (s) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2363:15
  109f2a:    f6 d1       	r6 = r6 + 7 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2365:14
  109f2c:    fb 9f       	cmp r3, -1			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2361:4
  109f2e:    2b c6       	r3 = r5 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2363:39
  109f30:    f2 1c       	ifs (nzcv > 0) goto -28 <toy_midi_ctrl_note_on+0x4DA : 109f16 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2363:39
  109f32:    04 08       	goto 8 <toy_midi_ctrl_note_on+0x500 : 109f3c >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2363:39
  109f34:    01 80       	r1 = 0 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2402:30
  109f36:    01 78       	b[r0 + 0] = r1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2402:30
  109f38:    56 08       	goto 172 <toy_midi_ctrl_note_on+0x5AA : 109fe6 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2402:30
  109f3a:    1d c6       	r5 = r3 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2376:41
  109f3c:    60 e8 d1 32 	[r13 + 200] = r1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2369:24
  109f40:    09 98       	cmp r1, 1			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2371:7
  109f42:    51 1b       	ifs (nzcv < 0) goto 162 <toy_midi_ctrl_note_on+0x5AA : 109fe6 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2371:7
  109f44:    60 e9 0a 01 	[sp+ 4] = r10 
  109f48:    c4 60       	[sp+ 12] = r4 
  109f4a:    00 ed d3 c8 	r3 = r13 + 200 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2369:13
  109f4e:    83 60       	[sp+ 8] = r3 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2374:46
  109f50:    20 e8 b3 ff 	r3 = [r11 + -4] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2374:46
  109f54:    00 ed 5e 01 	r14 = r5 + 1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2376:41
  109f58:    60 e8 2e 00 	[r2 + 0] = r14 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2376:41
  109f5c:    00 e7 07 05 	r7 = b[r0 + r5] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2376:17
  109f60:    00 ed 5c 02 	r12 = r5 + 2 
  109f64:    60 e8 2c 00 	[r2 + 0] = r12 
  109f68:    1b a2       	r3 = r3 << 2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2374:19
  109f6a:    0e 2d       	r6 = [addr(208)]  <.GCPI279_3 : 10a03c >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2374:19
  109f6c:    20 e7 63 03 	r3 = [r6 + r3] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2374:19
  109f70:    16 ea c8 00 	r6 = 200 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2374:63
  109f74:    c0 fc 33 06 	r3 = r3 / r6 (s) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2374:63
  109f78:    03 60       	[sp] = r3 
  109f7a:    00 e7 06 0e 	r6 = b[r0 + r14] 
  109f7e:    c0 f3 73 80 	r3 = r7 & (~128) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2377:22
  109f82:    bf c9       	r7 = r7.b (s) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2376:17
  109f84:    07 98       	cmp r7, 0			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2380:4
  109f86:    16 1b       	ifs (nzcv < 0) goto 44 <toy_midi_ctrl_note_on+0x578 : 109fb4 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2380:4
  109f88:    3f 80       	r7 = 7 
  109f8a:    ec d0       	r4 = r5 + 3 
  109f8c:    14 68       	[r2 + 0] = r4 
  109f8e:    fc c9       	r4 = r7.l (s) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2383:35
  109f90:    c0 f3 67 80 	r7 = r6 & (~128) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2383:24
  109f94:    27 cf       	r7 <<= r4 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2383:32
  109f96:    3b da       	r3 |= r7 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2383:45
  109f98:    47 d5       	r7 = r0 + r5 
  109f9a:    00 e8 7a 80 	r10 = b[r7 + 2] 
  109f9e:    6d d0       	r5 = r5 + 1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2380:4
  109fa0:    e7 d1       	r7 = r4 + 7 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2384:14
  109fa2:    b4 c9       	r4 = r6.b (s) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2383:24
  109fa4:    fc 9f       	cmp r4, -1			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2380:4
  109fa6:    96 c6       	r6 = r10 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2380:4
  109fa8:    f0 1c       	ifs (nzcv > 0) goto -32 <toy_midi_ctrl_note_on+0x54E : 109f8a >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2380:4
  109faa:    00 ed 5c 02 	r12 = r5 + 2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2386:8
  109fae:    00 ed 5e 01 	r14 = r5 + 1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2386:8
  109fb2:    01 08       	goto 2 <toy_midi_ctrl_note_on+0x57A : 109fb6 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2386:8
  109fb4:    72 c6       	r10 = r6 
  109fb6:    00 ed e4 02 	r4 = r14 + 2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2389:37
  109fba:    14 68       	[r2 + 0] = r4 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2389:37
  109fbc:    a0 cb       	r0 += r12 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2389:13
  109fbe:    00 58       	r0 = b[r0 + 0] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2389:13
  109fc0:    00 a8       	r0 = r0 << 8 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2390:21
  109fc2:    00 f0 00 0a 	r0 = r0 | r10 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2390:27
  109fc6:    c0 c9       	r0 = r0.l (s) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2393:24
  109fc8:    04 40       	r4 = [sp] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2393:24
  109fca:    c0 fc 00 04 	r0 = r0 / r4 (s) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2393:31
  109fce:    aa c6       	r2 = r13 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2393:22
  109fd0:    64 e8 20 34 	[++ r2 = 208] = r0 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2393:22
  109fd4:    80 fc 30 04 	r0 = r3 * r4 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2394:32
  109fd8:    d0 6f       	[r2 + -4] = r0 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2394:22
  109fda:    c8 d3       	r0 = r1 + -1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2396:24
  109fdc:    81 40       	r1 = [sp+ 8] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2396:24
  109fde:    08 68       	[r1 + 0] = r0 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2396:24
  109fe0:    c4 40       	r4 = [sp+ 12] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2396:24
  109fe2:    20 e9 0a 01 	r10 = [sp+ 4] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2396:24
  109fe6:    10 ea ba 00 	r0 = 186 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2404:12
  109fea:    09 80       	r1 = 1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2404:12
  109fec:    40 e7 d1 00 	b[r13 + r0] = r1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2404:28
  109ff0:    20 e8 b0 f6 	r0 = [r11 + -40] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2405:33
  109ff4:    20 e8 81 fa 	r1 = [r8 + -24] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2405:30
  109ff8:    00 f1 10 00 	r0 = r1 | setbit(r0) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2405:30
  109ffc:    60 e8 80 fa 	[r8 + -24] = r0 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_synth.c:2405:30
  10a000:    00 e8 a0 00 	r0 = b[r10 + 0] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:555:21
  10a004:    50 20       	if (r0 == 0) goto 10 <toy_midi_ctrl_note_on+0x5D4 : 10a010 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:555:21
  10a006:    00 e5 a3 02 	r3, r0 = d[r10 + 8] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:557:70
  10a00a:    21 c6       	r1 = r4 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:557:5
  10a00c:    fa 83       	r2 = 127 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:557:5
  10a00e:    ab 01       	call r3			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:557:5
  10a010:    00 e8 a0 40 	r0 = b[r10 + 1] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:559:21
  10a014:    70 20       	if (r0 == 0) goto 14 <toy_midi_ctrl_note_on+0x5E8 : 10a024 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:559:21
  10a016:    20 e8 b0 f6 	r0 = [r11 + -40] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:561:40
  10a01a:    88 cb       	r0 += r9 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:561:18
  10a01c:    11 ea c0 04 	r1 = 1216 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:561:18
  10a020:    40 e7 04 01 	b[r0 + r1] = r4 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:561:54
  10a024:    7b e1 cf 53 	call -1086856 <kick_decoder : aa0 >			  ## midi_ctrl_api.c:190:5
  10a028:    10 cd       	sp += 16 
  10a02a:    30 c4       	{macch, maccl} = [sp++] 
  10a02c:    1e c0       	{pc, r14-r4} = [sp++] 
  10a02e:    00 00       	nop


.GCPI279_0:
  10a030:    50 1e 00 00     < 7760 : 0x1E50 >

.GCPI279_1:
  10a034:    1c 9a 11 00     < 1153564 : 0x119A1C >

.GCPI279_2:
  10a038:    78 99 11 00     < 1153400 : 0x119978 >

.GCPI279_3:
  10a03c:    54 99 11 00     < 1153364 : 0x119954 >

.GCPI279_4:
  10a040:    00 00 ff ff     < 4294901760 : 0xFFFF0000 >

toy_midi_ctrl_set_prog:
  10a044:    16 c2       	[--sp] = {rets, r6-r4} 			  ## toy_midi_ctrl.c:52:0
  10a046:    d0 22       	if (r0 == 0) goto 90 <toy_midi_ctrl_set_prog+0x5E : 10a0a2 >			  ## toy_midi_ctrl.c:52:0
  10a048:    80 48       	r0 = [r0 + 8] 			  ## toy_midi_ctrl.c:56:27
  10a04a:    83 2d       	r3 = [addr(88)]  <.GCPI280_0 : 10a0a4 >			  ## midi_ctrl_api.c:178:36
  10a04c:    10 e3 37 80 	[r3 + 92] &= (~128) 			  ## midi_ctrl_api.c:178:36
  10a050:    1f e2 37 80 	[r3 + 92] |= 256 			  ## midi_ctrl_api.c:179:36
  10a054:    00 ed 13 80 	r3 = r1 + 128 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:427:15
  10a058:    4a 98       	cmp r2, 9			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:425:6
  10a05a:    10 03       	ifs (nzcv != 0) {			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:425:6
  10a05c:    0b c6       		r3 = r1 
                               	}			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:425:6
  10a05e:    04 ed 01 38 	r1 = r0 + 1080 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:429:19
  10a062:    00 e7 14 02 	r4 = b[r1 + r2] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:429:6
  10a066:    23 ce       	cmp r4, r3			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:429:6
  10a068:    1a 10       	ifs (nzcv == 0) goto 52 <toy_midi_ctrl_set_prog+0x5A : 10a09e >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:429:6
  10a06a:    40 e7 13 02 	b[r1 + r2] = r3 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:431:30
  10a06e:    02 ed 01 e4 	r1 = r0 + 740 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:431:30
  10a072:    8c 48       	r4 = [r1 + 8] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:433:70
  10a074:    0d 48       	r5 = [r1 + 0] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:432:29
  10a076:    5b d5       	r3 = r3 + r5 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:432:29
  10a078:    1b 5c       	r3 = b[r3 + 2] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:433:57
  10a07a:    1d a1       	r5 = r3 << 1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:433:57
  10a07c:    64 d5       	r4 = r4 + r5 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:433:57
  10a07e:    24 50       	r4 = h[r4 + 0] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:433:57
  10a080:    15 a1       	r5 = r2 << 1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:433:3
  10a082:    2d d4       	r5 = r5 + r0 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:433:16
  10a084:    16 ea 18 04 	r6 = 1048 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:433:16
  10a088:    50 e7 54 06 	h[r5 + r6] = r4 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:433:39
  10a08c:    c9 4f       	r1 = [r1 + -4] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:434:59
  10a08e:    1b a7       	r3 = r3 << 7 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:434:84
  10a090:    c9 d4       	r1 = r1 + r3 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:434:46
  10a092:    12 a2       	r2 = r2 << 2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:434:3
  10a094:    80 d4       	r0 = r0 + r2 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:434:16
  10a096:    12 ea d8 03 	r2 = 984 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:434:16
  10a09a:    60 e7 01 02 	[r0 + r2] = r1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:434:35
  10a09e:    7b e1 ff 4f 	call -1086978 <kick_decoder : aa0 >			  ## midi_ctrl_api.c:181:5
  10a0a2:    16 c0       	{pc, r6-r4} = [sp++] 


.GCPI280_0:
  10a0a4:    50 1e 00 00     < 7760 : 0x1E50 >

dac_sr_api:
  10a0a8:    14 c2       	[--sp] = {rets, r4} 			  ## dac_api.c:118:0
  10a0aa:    0d ef 00 fa 	cmp r0, 8000			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_dac.c:143:5
  10a0ae:    12 10       	ifs (nzcv == 0) goto 36 <dac_sr_api+0x2C : 10a0d4 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_dac.c:143:5
  10a0b0:    11 ea e0 2e 	r1 = 12000 
  10a0b4:    01 ce       	cmp r0, r1
  10a0b6:    10 10       	ifs (nzcv == 0) goto 32 <dac_sr_api+0x30 : 10a0d8 >
  10a0b8:    0c ef 00 fa 	cmp r0, 32000
  10a0bc:    09 10       	ifs (nzcv == 0) goto 18 <dac_sr_api+0x28 : 10a0d0 >
  10a0be:    11 ea c0 5d 	r1 = 24000 
  10a0c2:    01 ce       	cmp r0, r1
  10a0c4:    0b 10       	ifs (nzcv == 0) goto 22 <dac_sr_api+0x34 : 10a0dc >
  10a0c6:    0d ef 00 7a 	cmp r0, 16000
  10a0ca:    02 11       	ifs (nzcv != 0) goto 4 <dac_sr_api+0x28 : 10a0d0 >
  10a0cc:    14 80       	r4 = 2 
  10a0ce:    07 08       	goto 14 <dac_sr_api+0x36 : 10a0de >
  10a0d0:    24 80       	r4 = 4 
  10a0d2:    05 08       	goto 10 <dac_sr_api+0x36 : 10a0de >
  10a0d4:    04 80       	r4 = 0 
  10a0d6:    03 08       	goto 6 <dac_sr_api+0x36 : 10a0de >
  10a0d8:    54 80       	r4 = 10 
  10a0da:    01 08       	goto 2 <dac_sr_api+0x36 : 10a0de >
  10a0dc:    64 80       	r4 = 12 
  10a0de:    dc e1 1f 72 	call -291262 <local_irq_disable : c2f24 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_dac.c:193:5
  10a0e2:    00 29       	r0 = [addr(16)]  <.GCPI281_0 : 10a0f4 >
  10a0e4:    01 48       	r1 = [r0 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_dac.c:194:28
  10a0e6:    c0 f3 11 0e 	r1 = r1 & (~14) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_dac.c:195:13
  10a0ea:    21 da       	r1 |= r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_dac.c:196:33
  10a0ec:    01 68       	[r0 + 0] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_dac.c:196:23
  10a0ee:    dc e1 7f 71 	call -291282 <local_irq_enable : c2f20 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_dac.c:197:5
  10a0f2:    14 c0       	{pc, r4} = [sp++] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_dac.c:197:5


.GCPI281_0:
  10a0f4:    00 14 09 00     < 594944 : 0x91400 >

HWI_Uninstall:
  10a0f8:    15 c2       	[--sp] = {rets, r5, r4} 			  ## hwi.c:88:0
  10a0fa:    01 a2       	r1 = r0 << 2 			  ## hwi.c:90:41
  10a0fc:    02 2b       	r2 = [addr(48)]  <.GCPI282_0 : 10a12c >			  ## hwi.c:92:5
  10a0fe:    03 2b       	r3 = [addr(48)]  <.GCPI282_1 : 10a130 >			  ## hwi.c:92:20
  10a100:    60 e7 23 01 	[r2 + r1] = r3 			  ## hwi.c:92:20
  10a104:    80 f3 11 1c 	r1 = r1 & 28 			  ## hwi.c:90:41
  10a108:    7a 80       	r2 = 15 			  ## hwi.c:97:35
  10a10a:    00 f7 24 01 	r4 = r2 << r1 			  ## hwi.c:97:35
  10a10e:    40 a1       	r0 = r0 >> 1 			  ## hwi.c:101:27
  10a110:    80 f3 05 7c 	r5 = r0 & 124 			  ## hwi.c:89:36
  10a114:    dc e1 6f 70 	call -291316 <local_irq_disable : c2f24 >			  ## hwi.c:94:5
  10a118:    c0 29       	r0 = [addr(28)]  <.GCPI282_2 : 10a134 >			  ## hwi.c:94:5
  10a11a:    40 d5       	r0 = r0 + r5 			  ## hwi.c:94:5
  10a11c:    01 48       	r1 = [r0 + 0] 			  ## hwi.c:101:27
  10a11e:    c0 f0 11 04 	r1 = r1 & ~r4 			  ## hwi.c:101:46
  10a122:    01 68       	[r0 + 0] = r1 			  ## hwi.c:101:24
  10a124:    dc e1 cf 6f 	call -291336 <local_irq_enable : c2f20 >			  ## hwi.c:103:5
  10a128:    15 c0       	{pc, r5, r4} = [sp++] 
  10a12a:    00 00       	nop


.GCPI282_0:
  10a12c:    00 7f 00 00     < 32512 : 0x7F00 >

.GCPI282_1:
  10a130:    9c 0a 00 00     < 2716 : 0xA9C >

.GCPI282_2:
  10a134:    00 01 08 00     < 524544 : 0x80100 >

audio_adc_init_api:
  10a138:    14 c2       	[--sp] = {rets, r4} 			  ## adc_api.c:55:0
  10a13a:    08 98       	cmp r0, 1			  ## audio_adc_cpu.c:22:9
  10a13c:    19 28       	r1 = [addr(384)]  <.GCPI283_0 : 10a2bc >			  ## audio_adc_cpu.c:22:9
  10a13e:    0c 10       	ifs (nzcv == 0) goto 24 <audio_adc_init_api+0x20 : 10a158 >			  ## audio_adc_cpu.c:22:9
  10a140:    58 21       	if (r0 != 0) goto 42 <audio_adc_init_api+0x34 : 10a16c >
  10a142:    00 e2 11 02 	[r1 + 4] |= 2 			  ## audio_adc_cpu.c:23:23
  10a146:    00 e3 12 02 	[r1 + 8] &= (~2) 			  ## audio_adc_cpu.c:24:23
  10a14a:    00 e3 17 02 	[r1 + 28] &= (~2) 			  ## audio_adc_cpu.c:25:24
  10a14e:    00 e3 13 02 	[r1 + 12] &= (~2) 			  ## audio_adc_cpu.c:26:22
  10a152:    00 e3 14 02 	[r1 + 16] &= (~2) 			  ## audio_adc_cpu.c:27:22
  10a156:    0a 08       	goto 20 <audio_adc_init_api+0x34 : 10a16c >			  ## audio_adc_cpu.c:27:22
  10a158:    fc e2 18 80 	[r1 + -32] |= 16384 			  ## audio_adc_cpu.c:38:27
  10a15c:    fc e3 19 80 	[r1 + -28] &= (~16384) 			  ## audio_adc_cpu.c:39:27
  10a160:    fc e3 1e 80 	[r1 + -8] &= (~16384) 			  ## audio_adc_cpu.c:40:28
  10a164:    fc e3 1a 80 	[r1 + -24] &= (~16384) 			  ## audio_adc_cpu.c:41:26
  10a168:    fc e3 1b 80 	[r1 + -20] &= (~16384) 			  ## audio_adc_cpu.c:42:26
  10a16c:    52 2d       	r2 = [addr(340)]  <.GCPI283_1 : 10a2c0 >
  10a16e:    d3 4f       	r3 = [r2 + -4] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:156:5
  10a170:    c6 f3 33 e0 	r3 = r3 & (~117440512) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:156:5
  10a174:    c3 d8       	r3 |= 16777216			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:156:5
  10a176:    d3 6f       	[r2 + -4] = r3 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:156:5
  10a178:    f8 e2 2f 00 	[r2 + -4] |= 8388608 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:157:5
  10a17c:    f8 e3 2f f0 	[r2 + -4] &= (~7864320) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:158:5
  10a180:    d3 4f       	r3 = [r2 + -4] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:159:5
  10a182:    ca f3 33 c0 	r3 = r3 & (~393216) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:159:5
  10a186:    93 d8       	r3 |= 262144			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:159:5
  10a188:    d3 6f       	[r2 + -4] = r3 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:159:5
  10a18a:    fb e3 2f 80 	[r2 + -4] &= (~65536) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:160:5
  10a18e:    fe e2 2f 00 	[r2 + -4] |= 2048 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:161:5
  10a192:    fe e3 2f c0 	[r2 + -4] &= (~1536) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:162:5
  10a196:    ff e2 2f c0 	[r2 + -4] |= 384 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:163:5
  10a19a:    f0 e2 2f 40 	[r2 + -4] |= 64 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:164:5
  10a19e:    f0 e2 2f 20 	[r2 + -4] |= 32 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:165:5
  10a1a2:    f0 e3 2f 02 	[r2 + -4] &= (~2) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:166:5
  10a1a6:    f0 e3 2f 01 	[r2 + -4] &= (~1) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:167:5
  10a1aa:    13 48       	r3 = [r2 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:171:5
  10a1ac:    c5 f3 33 70 	r3 = r3 & (~1006632960) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:171:5
  10a1b0:    05 f3 33 e0 	r3 = r3 | 469762048 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:171:5
  10a1b4:    13 68       	[r2 + 0] = r3 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:171:5
  10a1b6:    13 48       	r3 = [r2 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:172:5
  10a1b8:    c7 f3 33 60 	r3 = r3 & (~58720256) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:172:5
  10a1bc:    c3 d8       	r3 |= 16777216			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:172:5
  10a1be:    13 68       	[r2 + 0] = r3 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:172:5
  10a1c0:    13 48       	r3 = [r2 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:173:5
  10a1c2:    c8 f3 33 f0 	r3 = r3 & (~7864320) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:173:5
  10a1c6:    b3 d8       	r3 |= 4194304			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:173:5
  10a1c8:    13 68       	[r2 + 0] = r3 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:173:5
  10a1ca:    0a e2 20 80 	[r2 + 0] |= 262144 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:174:5
  10a1ce:    0b e2 20 00 	[r2 + 0] |= 131072 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:175:5
  10a1d2:    0b e2 20 80 	[r2 + 0] |= 65536 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:176:5
  10a1d6:    13 48       	r3 = [r2 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:177:5
  10a1d8:    cc 2e       	r4 = [addr(236)]  <.GCPI283_2 : 10a2c4 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:177:5
  10a1da:    a3 da       	r3 &= r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:177:5
  10a1dc:    14 ea e0 b1 	r4 = 45536 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:177:5
  10a1e0:    23 da       	r3 |= r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:177:5
  10a1e2:    13 68       	[r2 + 0] = r3 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:177:5
  10a1e4:    06 e3 21 00 	[r2 + 4] &= (~134217728) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:181:5
  10a1e8:    07 e2 21 80 	[r2 + 4] |= 16777216 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:182:5
  10a1ec:    0c e3 21 80 	[r2 + 4] &= (~16384) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:183:5
  10a1f0:    b0 21       	if (r0 == 0) goto 54 <audio_adc_init_api+0xF0 : 10a228 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:185:9
  10a1f2:    11 ea 01 a0 	r1 = 40961 
  10a1f6:    08 98       	cmp r0, 1
  10a1f8:    5f 11       	ifs (nzcv != 0) goto 190 <audio_adc_init_api+0x180 : 10a2b8 >
  10a1fa:    0e e3 21 00 	[r2 + 4] &= (~2048) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:57:5
  10a1fe:    50 48       	r0 = [r2 + 4] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:58:5
  10a200:    ca f3 00 c0 	r0 = r0 & (~393216) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:58:5
  10a204:    90 d8       	r0 |= 262144			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:58:5
  10a206:    50 68       	[r2 + 4] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:58:5
  10a208:    50 48       	r0 = [r2 + 4] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:59:5
  10a20a:    cb f3 00 c0 	r0 = r0 & (~98304) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:59:5
  10a20e:    80 d8       	r0 |= 65536			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:59:5
  10a210:    50 68       	[r2 + 4] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:59:5
  10a212:    48 2b       	r0 = [addr(180)]  <.GCPI283_3 : 10a2c8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:59:5
  10a214:    d1 4f       	r1 = [r2 + -4] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:65:5
  10a216:    cc f3 11 70 	r1 = r1 & (~61440) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:65:5
  10a21a:    79 d8       	r1 |= 32768			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:65:5
  10a21c:    d1 6f       	[r2 + -4] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:65:5
  10a21e:    f0 e2 2f 10 	[r2 + -4] |= 16 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:65:5
  10a222:    d1 4f       	r1 = [r2 + -4] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:72:9
  10a224:    19 d8       	r1 |= 8			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:72:9
  10a226:    42 08       	goto 132 <audio_adc_init_api+0x174 : 10a2ac >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:72:9
  10a228:    00 e2 11 02 	[r1 + 4] |= 2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:79:5
  10a22c:    00 e3 13 02 	[r1 + 12] &= (~2) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:80:5
  10a230:    00 e3 14 02 	[r1 + 16] &= (~2) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:81:5
  10a234:    fd e2 18 00 	[r1 + -32] |= 8192 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:91:9
  10a238:    fd e3 1a 00 	[r1 + -24] &= (~8192) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:92:9
  10a23c:    fd e3 1b 00 	[r1 + -20] &= (~8192) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:93:9
  10a240:    f0 e3 2f 10 	[r2 + -4] &= (~16) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:105:5
  10a244:    f0 e3 2f 08 	[r2 + -4] &= (~8) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:106:5
  10a248:    f0 e3 2f 04 	[r2 + -4] &= (~4) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:107:5
  10a24c:    04 e2 20 00 	[r2 + 0] |= 2147483648 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:108:5
  10a250:    04 e2 20 80 	[r2 + 0] |= 1073741824 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:109:5
  10a254:    80 2f       	r0 = [addr(120)]  <.GCPI283_4 : 10a2cc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:109:5
  10a256:    0e e2 21 00 	[r2 + 4] |= 2048 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:110:5
  10a25a:    51 48       	r1 = [r2 + 4] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:111:5
  10a25c:    ca f3 11 c0 	r1 = r1 & (~393216) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:111:5
  10a260:    91 d8       	r1 |= 262144			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:111:5
  10a262:    51 68       	[r2 + 4] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:111:5
  10a264:    51 48       	r1 = [r2 + 4] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:112:5
  10a266:    cb f3 11 c0 	r1 = r1 & (~98304) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:112:5
  10a26a:    81 d8       	r1 |= 65536			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:112:5
  10a26c:    51 68       	[r2 + 4] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:112:5
  10a26e:    05 e3 21 80 	[r2 + 4] &= (~268435456) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:112:5
  10a272:    06 e3 21 80 	[r2 + 4] &= (~67108864) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:123:9
  10a276:    07 e2 21 00 	[r2 + 4] |= 33554432 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:123:9
  10a27a:    51 48       	r1 = [r2 + 4] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:127:5
  10a27c:    c8 f3 11 78 	r1 = r1 & (~16252928) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:127:5
  10a280:    08 f3 11 e0 	r1 = r1 | 7340032 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:127:5
  10a284:    51 68       	[r2 + 4] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:127:5
  10a286:    51 48       	r1 = [r2 + 4] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:128:5
  10a288:    cd f3 11 40 	r1 = r1 & (~12288) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:128:5
  10a28c:    61 d8       	r1 |= 4096			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:128:5
  10a28e:    51 68       	[r2 + 4] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:128:5
  10a290:    0e e3 21 80 	[r2 + 4] &= (~1024) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:128:5
  10a294:    51 48       	r1 = [r2 + 4] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:128:5
  10a296:    cf f3 11 7e 	r1 = r1 & (~1016) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:128:5
  10a29a:    00 f3 11 38 	r1 = r1 | 56 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:128:5
  10a29e:    51 68       	[r2 + 4] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:128:5
  10a2a0:    00 e2 21 04 	[r2 + 4] |= 4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:128:5
  10a2a4:    51 48       	r1 = [r2 + 4] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:148:5
  10a2a6:    c0 f3 11 03 	r1 = r1 & (~3) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:148:5
  10a2aa:    09 d8       	r1 |= 2			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/analog/audio_adc_analog.c:148:5
  10a2ac:    01 68       	[r0 + 0] = r1 
  10a2ae:    10 ea 1c 82 	r0 = 33308 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_adc.c:212:16
  10a2b2:    fe e1 2f b3 	call -10652 <audio_adc_init : 10791a >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_adc.c:212:16
  10a2b6:    01 c6       	r1 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_adc.c:212:16
  10a2b8:    08 c6       	r0 = r1 			  ## adc_api.c:56:5
  10a2ba:    14 c0       	{pc, r4} = [sp++] 


.GCPI283_0:
  10a2bc:    28 00 09 00     < 589864 : 0x90028 >

.GCPI283_1:
  10a2c0:    38 14 09 00     < 595000 : 0x91438 >

.GCPI283_2:
  10a2c4:    00 00 ff ff     < 4294901760 : 0xFFFF0000 >

.GCPI283_3:
  10a2c8:    34 14 09 00     < 594996 : 0x91434 >

.GCPI283_4:
  10a2cc:    3c 14 09 00     < 595004 : 0x9143C >

read_audio_adc_sr:
  10a2d0:    80 29       	r0 = [addr(24)]  <.GCPI284_1 : 10a2e8 >			  ## audio_adc.c:141:0
  10a2d2:    00 48       	r0 = [r0 + 0] 			  ## audio_adc.c:143:23
  10a2d4:    00 f6 00 42 	r0 = uextra(r0, p:2, l:2) 			  ## audio_adc.c:144:5
  10a2d8:    08 d9       	r0 ^= 2			  ## audio_adc.c:144:5
  10a2da:    00 a2       	r0 = r0 << 2 			  ## audio_adc.c:144:5
  10a2dc:    81 28       	r1 = [addr(8)]  <.GCPI284_0 : 10a2e4 >			  ## audio_adc.c:144:5
  10a2de:    20 e7 10 00 	r0 = [r1 + r0] 			  ## audio_adc.c:144:5
  10a2e2:    20 00       	rts			  ## audio_adc.c:144:5


.GCPI284_0:
  10a2e4:    30 d9 11 00     < 1169712 : 0x11D930 >

.GCPI284_1:
  10a2e8:    1c 14 09 00     < 594972 : 0x9141C >

clz64:
  10a2ec:    29 c8       	r1 = macch 			  ## math_fix.c:64:0
  10a2ee:    22 c8       	r2 = maccl 			  ## math_fix.c:84:5
  10a2f0:    03 80       	r3 = 0 			  ## math_fix.c:87:5
  10a2f2:    c8 bf       	r0 = r1 >>> 31 			  ## math_fix.c:87:5
  10a2f4:    13 03       	ifs (nzcv != 0) {			  ## math_fix.c:87:5
  10a2f6:    c9 da       		r1 = ~r1 			  ## math_fix.c:87:5
  10a2f8:    d2 da       		r2 = ~r2 			  ## math_fix.c:87:5
  10a2fa:    0a 88       		r2 += 1 			  ## math_fix.c:87:5
  10a2fc:    19 dc       		r1 += r3 + c 
                               	}			  ## math_fix.c:87:5
  10a2fe:    00 f5 10 00 	r0 = clz(r1) 			  ## math_fix.c:87:5
  10a302:    00 99       	cmp r0, 32			  ## math_fix.c:87:5
  10a304:    01 03       	ifs (nzcv == 0) {			  ## math_fix.c:87:5
  10a306:    00 f5 22 00 		r2 = clz(r2) 			  ## math_fix.c:87:5
  10a30a:    80 d4       		r0 = r0 + r2 
                               	}			  ## math_fix.c:87:5
  10a30c:    20 00       	rts			  ## math_fix.c:111:5


logAprx:
  10a30e:    17 c2       	[--sp] = {rets, r7-r4} 			  ## math_fix.c:117:0
  10a310:    30 c5       	[--sp] = {macch, maccl} 			  ## math_fix.c:117:0
  10a312:    f8 cd       	sp += -8 			  ## math_fix.c:117:0
  10a314:    42 60       	[sp+ 4] = r2 			  ## math_fix.c:117:0
  10a316:    01 60       	[sp] = r1 			  ## math_fix.c:117:0
  10a318:    01 c6       	r1 = r0 			  ## math_fix.c:51:5
  10a31a:    01 98       	cmp r1, 0			  ## math_fix.c:51:5
  10a31c:    b0 03       	ifs (nzcv < 0) {			  ## math_fix.c:51:5
  10a31e:    89 dc       		r1 = -r1 
                               	}			  ## math_fix.c:51:5
  10a320:    00 f5 11 00 	r1 = clz(r1) 			  ## math_fix.c:51:5
  10a324:    20 ee 11 1f 	r1 = 31 - r1 			  ## math_fix.c:126:19
  10a328:    20 ee 13 1c 	r3 = 28 - r1 			  ## math_fix.c:127:19
  10a32c:    00 f7 02 03 	r2 = r0 << r3 			  ## math_fix.c:128:5
  10a330:    9c dc       	r4 = -r3 			  ## math_fix.c:128:5
  10a332:    e0 cf       	r0 >>>= r4 			  ## math_fix.c:128:5
  10a334:    03 98       	cmp r3, 0			  ## math_fix.c:128:5
  10a336:    d0 03       	ifs (nzcv <= 0) {			  ## math_fix.c:128:5
  10a338:    02 c6       		r2 = r0 
                               	}			  ## math_fix.c:128:5
  10a33a:    14 ee 20 70 	r0 = r2 + 4026531840 			  ## math_fix.c:130:5
  10a33e:    25 ea 03 80 	r3 = 268435456 			  ## math_fix.c:130:5
  10a342:    c3 06       	macc = r0 * r3 (s) 			  ## math_fix.c:130:5
  10a344:    15 ee 20 80 	r0 = r2 + 268435456 			  ## math_fix.c:131:5
  10a348:    80 05       	macc /= r0 (s) 			  ## math_fix.c:131:5
  10a34a:    20 c8       	r0 = maccl 			  ## math_fix.c:131:5
  10a34c:    c0 06       	macc = r0 * r0 (s) 			  ## math_fix.c:134:5
  10a34e:    e2 80       	r2 = 28 			  ## math_fix.c:127:19
  10a350:    80 f9 03 02 	r3 = macc >>> r2 			  ## math_fix.c:134:5
  10a354:    84 2e       	r4 = [addr(104)]  <.GCPI286_1 : 10a3bc >			  ## math_fix.c:135:5
  10a356:    dc 06       	macc = r3 * r4 (s) 			  ## math_fix.c:135:5
  10a358:    80 f9 07 02 	r7 = macc >>> r2 			  ## math_fix.c:135:5
  10a35c:    06 80       	r6 = 0 
  10a35e:    84 2d       	r4 = [addr(88)]  <.GCPI286_0 : 10a3b8 >
  10a360:    07 08       	goto 14 <logAprx+0x62 : 10a370 >
  10a362:    a5 d5       	r5 = r4 + r6 			  ## math_fix.c:138:14
  10a364:    6d 48       	r5 = [r5 + 4] 			  ## math_fix.c:138:14
  10a366:    ed d5       	r5 = r5 + r7 			  ## math_fix.c:138:11
  10a368:    dd 06       	macc = r3 * r5 (s) 			  ## math_fix.c:139:9
  10a36a:    36 d1       	r6 = r6 + 4 			  ## math_fix.c:136:5
  10a36c:    80 f9 07 02 	r7 = macc >>> r2 			  ## math_fix.c:139:9
  10a370:    46 98       	cmp r6, 8			  ## math_fix.c:136:5
  10a372:    f7 11       	ifs (nzcv != 0) goto -18 <logAprx+0x54 : 10a362 >			  ## math_fix.c:136:5
  10a374:    14 ee 72 80 	r2 = r7 + 1073741824 			  ## math_fix.c:141:7
  10a378:    d0 06       	macc = r2 * r0 (s) 			  ## math_fix.c:142:5
  10a37a:    d8 80       	r0 = 27 			  ## math_fix.c:143:5
  10a37c:    80 de       	macc >>>= r0 			  ## math_fix.c:143:5
  10a37e:    88 dc       	r0 = -r1 			  ## math_fix.c:129:12
  10a380:    01 2c       	r1 = [addr(64)]  <.GCPI286_2 : 10a3c0 >			  ## math_fix.c:144:5
  10a382:    c8 07       	macc -= r1 * r0 (s) 			  ## math_fix.c:144:5
  10a384:    b3 04       	call -154 <clz64 : 10a2ec >			  ## math_fix.c:150:23
  10a386:    1f ed 01 dd 	r1 = r0 + -35 			  ## math_fix.c:150:15
  10a38a:    01 98       	cmp r1, 0			  ## math_fix.c:151:9
  10a38c:    02 1d       	ifs (nzcv <= 0) goto 4 <logAprx+0x84 : 10a392 >			  ## math_fix.c:151:9
  10a38e:    81 dd       	macc <<= r1 			  ## math_fix.c:153:9
  10a390:    03 08       	goto 6 <logAprx+0x8A : 10a398 >			  ## math_fix.c:153:9
  10a392:    20 ee 01 23 	r1 = 35 - r0 			  ## math_fix.c:157:9
  10a396:    81 de       	macc >>>= r1 			  ## math_fix.c:157:9
  10a398:    43 40       	r3 = [sp+ 4] 
  10a39a:    29 c8       	r1 = macch 			  ## math_fix.c:159:5
  10a39c:    22 c8       	r2 = maccl 			  ## math_fix.c:159:5
  10a39e:    01 40       	r1 = [sp] 			  ## math_fix.c:159:5
  10a3a0:    0a 68       	[r1 + 0] = r2 			  ## math_fix.c:159:5
  10a3a2:    c0 d2       	r0 = r0 + -5 			  ## math_fix.c:162:14
  10a3a4:    18 68       	[r3 + 0] = r0 			  ## math_fix.c:162:10
  10a3a6:    0a 48       	r2 = [r1 + 0] 			  ## math_fix.c:163:9
  10a3a8:    01 80       	r1 = 0 			  ## math_fix.c:163:9
  10a3aa:    12 20       	if (r2 == 0) goto 2 <logAprx+0xA0 : 10a3ae >			  ## math_fix.c:163:9
  10a3ac:    01 c6       	r1 = r0 			  ## math_fix.c:163:9
  10a3ae:    19 68       	[r3 + 0] = r1 			  ## math_fix.c:164:13
  10a3b0:    08 cd       	sp += 8 			  ## math_fix.c:164:13
  10a3b2:    30 c4       	{macch, maccl} = [sp++] 			  ## math_fix.c:164:13
  10a3b4:    17 c0       	{pc, r7-r4} = [sp++] 			  ## math_fix.c:164:13
  10a3b6:    00 00       	nop			  ## math_fix.c:164:13


.GCPI286_0:
  10a3b8:    9c 96 11 00     < 1152668 : 0x11969C >

.GCPI286_1:
  10a3bc:    49 92 24 09     < 153391689 : 0x9249249 >

.GCPI286_2:
  10a3c0:    fe 85 5c 2c     < 744261118 : 0x2C5C85FE >

db2mag:
  10a3c4:    1a c2       	[--sp] = {rets, r10-r4} 			  ## math_fix.c:300:0
  10a3c6:    30 c5       	[--sp] = {macch, maccl} 			  ## math_fix.c:300:0
  10a3c8:    f0 cd       	sp += -16 			  ## math_fix.c:300:0
  10a3ca:    43 60       	[sp+ 4] = r3 			  ## math_fix.c:300:0
  10a3cc:    02 60       	[sp] = r2 			  ## math_fix.c:300:0
  10a3ce:    0e c6       	r6 = r1 			  ## math_fix.c:300:0
  10a3d0:    d1 29       	r1 = [addr(284)]  <.GCPI287_1 : 10a4ec >			  ## math_fix.c:304:5
  10a3d2:    c1 06       	macc = r0 * r1 (s) 			  ## math_fix.c:304:5
  10a3d4:    c0 f9 04 1c 	r4 = macc >>> 28 			  ## math_fix.c:304:5
  10a3d8:    61 90       	r1 = sp + 12 
  10a3da:    42 90       	r2 = sp + 8 
  10a3dc:    50 80       	r0 = 10 			  ## math_fix.c:256:5
  10a3de:    97 04       	call -210 <logAprx : 10a30e >			  ## math_fix.c:256:5
  10a3e0:    c0 40       	r0 = [sp+ 12] 			  ## math_fix.c:257:5
  10a3e2:    c4 06       	macc = r0 * r4 (s) 			  ## math_fix.c:257:5
  10a3e4:    86 de       	macc >>>= r6 			  ## math_fix.c:258:5
  10a3e6:    82 04       	call -252 <clz64 : 10a2ec >			  ## math_fix.c:264:31
  10a3e8:    1f ed 02 d8 	r2 = r0 + -40 			  ## math_fix.c:264:23
  10a3ec:    0a 98       	cmp r2, 1			  ## math_fix.c:265:9
  10a3ee:    02 1b       	ifs (nzcv < 0) goto 4 <db2mag+0x30 : 10a3f4 >			  ## math_fix.c:265:9
  10a3f0:    82 dd       	macc <<= r2 			  ## math_fix.c:267:9
  10a3f2:    03 08       	goto 6 <db2mag+0x36 : 10a3fa >			  ## math_fix.c:267:9
  10a3f4:    20 ee 00 28 	r0 = 40 - r0 			  ## math_fix.c:271:9
  10a3f8:    80 de       	macc >>>= r0 			  ## math_fix.c:271:9
  10a3fa:    28 c8       	r0 = macch 			  ## math_fix.c:273:5
  10a3fc:    21 c8       	r1 = maccl 			  ## math_fix.c:273:5
  10a3fe:    c1 60       	[sp+ 12] = r1 			  ## math_fix.c:273:5
  10a400:    80 40       	r0 = [sp+ 8] 			  ## math_fix.c:275:12
  10a402:    80 d4       	r0 = r0 + r2 			  ## math_fix.c:275:12
  10a404:    80 60       	[sp+ 8] = r0 			  ## math_fix.c:275:12
  10a406:    f8 98       	cmp r0, 31			  ## math_fix.c:277:9
  10a408:    05 1b       	ifs (nzcv < 0) goto 10 <db2mag+0x50 : 10a414 >			  ## math_fix.c:277:9
  10a40a:    10 8f       	r0 += -30 			  ## math_fix.c:279:34
  10a40c:    c1 cf       	r1 >>>= r0 			  ## math_fix.c:279:23
  10a40e:    c1 60       	[sp+ 12] = r1 			  ## math_fix.c:279:15
  10a410:    f0 80       	r0 = 30 			  ## math_fix.c:279:15
  10a412:    80 60       	[sp+ 8] = r0 			  ## math_fix.c:280:16
  10a414:    ca 2d       	r2 = [addr(220)]  <.GCPI287_2 : 10a4f0 >			  ## math_fix.c:208:5
  10a416:    ca 06       	macc = r1 * r2 (s) 			  ## math_fix.c:208:5
  10a418:    f1 80       	r1 = 30 			  ## math_fix.c:208:5
  10a41a:    80 f9 02 01 	r2 = macc >>> r1 			  ## math_fix.c:208:5
  10a41e:    c0 f7 28 00 	r8 = r2 >>> r0 			  ## math_fix.c:213:16
  10a422:    00 f7 83 00 	r3 = r8 << r0 			  ## math_fix.c:214:22
  10a426:    d2 d6       	r2 = r2 - r3 			  ## math_fix.c:214:16
  10a428:    cb 2c       	r3 = [addr(204)]  <.GCPI287_3 : 10a4f4 >			  ## math_fix.c:221:5
  10a42a:    d3 06       	macc = r2 * r3 (s) 			  ## math_fix.c:221:5
  10a42c:    c0 d0       	r0 = r0 + 3 			  ## math_fix.c:221:5
  10a42e:    80 f9 09 00 	r9 = macc >>> r0 			  ## math_fix.c:221:5
  10a432:    14 ee 9a 7c 	r10 = r9 + 4227858432 			  ## math_fix.c:225:12
  10a436:    06 ef 90 80 	cmp r9, 67108864			  ## math_fix.c:223:9
  10a43a:    d0 03       	ifs (nzcv <= 0) {			  ## math_fix.c:223:9
  10a43c:    ca c6       		r10 = r9 
                               	}			  ## math_fix.c:223:9
  10a43e:    80 fd aa 00 	macc = r10 * r10 (s) 			  ## math_fix.c:229:5
  10a442:    15 ee a0 20 	r0 = r10 + 671088640 			  ## math_fix.c:231:5
  10a446:    de 80       	r6 = 27 			  ## math_fix.c:229:5
  10a448:    80 f9 07 06 	r7 = macc >>> r6 			  ## math_fix.c:229:5
  10a44c:    c7 06       	macc = r0 * r7 (s) 			  ## math_fix.c:231:5
  10a44e:    80 f9 00 06 	r0 = macc >>> r6 			  ## math_fix.c:231:5
  10a452:    4b 2a       	r3 = [addr(164)]  <.GCPI287_4 : 10a4f8 >			  ## math_fix.c:232:5
  10a454:    c3 06       	macc = r0 * r3 (s) 			  ## math_fix.c:232:5
  10a456:    15 ee a5 c0 	r5 = r10 + 402653184 			  ## math_fix.c:234:10
  10a45a:    80 f9 04 01 	r4 = macc >>> r1 			  ## math_fix.c:232:5
  10a45e:    00 80       	r0 = 0 
  10a460:    8b 28       	r3 = [addr(136)]  <.GCPI287_0 : 10a4e8 >
  10a462:    0c 08       	goto 24 <db2mag+0xB8 : 10a47c >
  10a464:    1a d4       	r2 = r3 + r0 			  ## math_fix.c:237:9
  10a466:    52 48       	r2 = [r2 + 4] 			  ## math_fix.c:237:9
  10a468:    ea 06       	macc = r5 * r2 (s) 			  ## math_fix.c:237:9
  10a46a:    80 f9 02 01 	r2 = macc >>> r1 			  ## math_fix.c:237:9
  10a46e:    12 d5       	r2 = r2 + r4 			  ## math_fix.c:238:13
  10a470:    fa 06       	macc = r7 * r2 (s) 			  ## math_fix.c:239:9
  10a472:    00 d1       	r0 = r0 + 4 			  ## math_fix.c:234:5
  10a474:    14 ee 55 70 	r5 = r5 + 4026531840 			  ## math_fix.c:234:5
  10a478:    80 f9 04 06 	r4 = macc >>> r6 			  ## math_fix.c:239:9
  10a47c:    20 98       	cmp r0, 4			  ## math_fix.c:234:5
  10a47e:    f2 11       	ifs (nzcv != 0) goto -28 <db2mag+0xA0 : 10a464 >			  ## math_fix.c:234:5
  10a480:    c0 2f       	r0 = [addr(124)]  <.GCPI287_5 : 10a4fc >			  ## math_fix.c:223:9
  10a482:    06 ef 90 80 	cmp r9, 67108864			  ## math_fix.c:223:9
  10a486:    d0 03       	ifs (nzcv <= 0) {			  ## math_fix.c:223:9
  10a488:    24 ea 00 80 		r0 = 1073741824 
                               	}			  ## math_fix.c:223:9
  10a48c:    00 ee a1 04 	r1 = r10 + r4 			  ## math_fix.c:242:23
  10a490:    16 ee 11 00 	r1 = r1 + 134217728 			  ## math_fix.c:242:7
  10a494:    c8 06       	macc = r1 * r0 (s) 			  ## math_fix.c:243:5
  10a496:    f0 80       	r0 = 30 			  ## math_fix.c:243:5
  10a498:    80 f9 02 00 	r2 = macc >>> r0 			  ## math_fix.c:243:5
  10a49c:    13 c6       	r3 = r2 			  ## math_fix.c:51:5
  10a49e:    03 98       	cmp r3, 0			  ## math_fix.c:51:5
  10a4a0:    b0 03       	ifs (nzcv < 0) {			  ## math_fix.c:51:5
  10a4a2:    9b dc       		r3 = -r3 
                               	}			  ## math_fix.c:51:5
  10a4a4:    00 f5 33 00 	r3 = clz(r3) 			  ## math_fix.c:51:5
  10a4a8:    19 d3       	r1 = r3 + -4 			  ## math_fix.c:245:5
  10a4aa:    00 f7 20 01 	r0 = r2 << r1 			  ## math_fix.c:245:5
  10a4ae:    20 ee 33 04 	r3 = 4 - r3 			  ## math_fix.c:245:5
  10a4b2:    da cf       	r2 >>>= r3 			  ## math_fix.c:245:5
  10a4b4:    01 98       	cmp r1, 0			  ## math_fix.c:245:5
  10a4b6:    d0 03       	ifs (nzcv <= 0) {			  ## math_fix.c:245:5
  10a4b8:    10 c6       		r0 = r2 
                               	}			  ## math_fix.c:245:5
  10a4ba:    20 ee 82 1b 	r2 = 27 - r8 			  ## math_fix.c:247:27
  10a4be:    89 d4       	r1 = r1 + r2 			  ## math_fix.c:247:32
  10a4c0:    20 ee 12 18 	r2 = 24 - r1 			  ## math_fix.c:284:19
  10a4c4:    c1 80       	r1 = 24 			  ## math_fix.c:284:19
  10a4c6:    c3 80       	r3 = 24 			  ## math_fix.c:284:19
  10a4c8:    10 20       	if (r0 == 0) goto 2 <db2mag+0x108 : 10a4cc >			  ## math_fix.c:284:19
  10a4ca:    13 c6       	r3 = r2 			  ## math_fix.c:284:19
  10a4cc:    00 f7 02 03 	r2 = r0 << r3 			  ## math_fix.c:285:5
  10a4d0:    9c dc       	r4 = -r3 			  ## math_fix.c:285:5
  10a4d2:    e0 cf       	r0 >>>= r4 			  ## math_fix.c:285:5
  10a4d4:    03 98       	cmp r3, 0			  ## math_fix.c:285:5
  10a4d6:    d0 03       	ifs (nzcv <= 0) {			  ## math_fix.c:285:5
  10a4d8:    02 c6       		r2 = r0 
                               	}			  ## math_fix.c:285:5
  10a4da:    00 40       	r0 = [sp] 			  ## math_fix.c:285:5
  10a4dc:    02 68       	[r0 + 0] = r2 			  ## math_fix.c:285:5
  10a4de:    40 40       	r0 = [sp+ 4] 			  ## math_fix.c:286:9
  10a4e0:    01 68       	[r0 + 0] = r1 			  ## math_fix.c:286:9
  10a4e2:    10 cd       	sp += 16 			  ## math_fix.c:286:9
  10a4e4:    30 c4       	{macch, maccl} = [sp++] 			  ## math_fix.c:286:9
  10a4e6:    1a c0       	{pc, r10-r4} = [sp++] 			  ## math_fix.c:286:9


.GCPI287_0:
  10a4e8:    d8 d8 11 00     < 1169624 : 0x11D8D8 >

.GCPI287_1:
  10a4ec:    cd cc cc 00     < 13421773 : 0xCCCCCD >

.GCPI287_2:
  10a4f0:    95 1d 55 5c     < 1549082005 : 0x5C551D95 >

.GCPI287_3:
  10a4f4:    fe 85 5c 2c     < 744261118 : 0x2C5C85FE >

.GCPI287_4:
  10a4f8:    89 88 88 00     < 8947849 : 0x888889 >

.GCPI287_5:
  10a4fc:    38 a6 84 69     < 1770300984 : 0x6984A638 >

cosAprx:
  10a500:    19 c2       	[--sp] = {rets, r9-r4} 			  ## math_fix.c:403:0
  10a502:    30 c5       	[--sp] = {macch, maccl} 			  ## math_fix.c:403:0
  10a504:    c3 bf       	r3 = r0 >>> 31 			  ## math_fix.c:403:0
  10a506:    c4 d4       	r4 = r0 + r3 			  ## math_fix.c:403:0
  10a508:    63 da       	r3 ^= r4 			  ## math_fix.c:403:0
  10a50a:    dc bf       	r4 = r3 >>> 31 			  ## math_fix.c:418:18
  10a50c:    64 a7       	r4 = r4 >> 7 			  ## math_fix.c:418:18
  10a50e:    e4 d4       	r4 = r4 + r3 			  ## math_fix.c:418:18
  10a510:    84 f3 44 7e 	r4 = r4 & 4261412864 			  ## math_fix.c:418:18
  10a514:    1c d7       	r4 = r3 - r4 			  ## math_fix.c:418:18
  10a516:    e3 d6       	r3 = r4 - r3 			  ## math_fix.c:418:11
  10a518:    c0 d4       	r0 = r0 + r3 			  ## math_fix.c:418:11
  10a51a:    27 ee 08 00 	r8 = 33554432 - r0 			  ## math_fix.c:421:16
  10a51e:    07 ef 00 80 	cmp r0, 16777216			  ## math_fix.c:419:9
  10a522:    d0 03       	ifs (nzcv <= 0) {			  ## math_fix.c:419:9
  10a524:    40 c6       		r8 = r0 
                               	}			  ## math_fix.c:419:9
  10a526:    27 ee 85 80 	r5 = 16777216 - r8 			  ## math_fix.c:425:16
  10a52a:    08 ef 80 00 	cmp r8, 8388608			  ## math_fix.c:423:9
  10a52e:    d0 03       	ifs (nzcv <= 0) {			  ## math_fix.c:423:9
  10a530:    85 c6       		r5 = r8 
                               	}			  ## math_fix.c:423:9
  10a532:    08 ef 50 00 	cmp r5, 8388608			  ## math_fix.c:428:9
  10a536:    09 10       	ifs (nzcv == 0) goto 18 <cosAprx+0x4A : 10a54a >			  ## math_fix.c:428:9
  10a538:    ad 20       	if (r5 != 0) goto 20 <cosAprx+0x4E : 10a54e >
  10a53a:    24 ea 03 7f 	r3 = 4278190080 			  ## math_fix.c:430:14
  10a53e:    08 ef 80 00 	cmp r8, 8388608			  ## math_fix.c:430:14
  10a542:    d0 03       	ifs (nzcv <= 0) {			  ## math_fix.c:430:14
  10a544:    27 ea 03 80 		r3 = 16777216 
                               	}			  ## math_fix.c:430:14
  10a548:    3b 08       	goto 118 <cosAprx+0xC0 : 10a5c0 >			  ## math_fix.c:430:14
  10a54a:    03 80       	r3 = 0 
  10a54c:    39 08       	goto 114 <cosAprx+0xC0 : 10a5c0 >
  10a54e:    28 c6       	r0 = r5 			  ## math_fix.c:51:5
  10a550:    00 98       	cmp r0, 0			  ## math_fix.c:51:5
  10a552:    b0 03       	ifs (nzcv < 0) {			  ## math_fix.c:51:5
  10a554:    80 dc       		r0 = -r0 
                               	}			  ## math_fix.c:51:5
  10a556:    00 f5 00 00 	r0 = clz(r0) 			  ## math_fix.c:51:5
  10a55a:    20 ee 03 0c 	r3 = 12 - r0 			  ## math_fix.c:441:26
  10a55e:    04 80       	r4 = 0 
  10a560:    03 98       	cmp r3, 0			  ## math_fix.c:442:9
  10a562:    18 c6       	r0 = r3 			  ## math_fix.c:442:9
  10a564:    d0 03       	ifs (nzcv <= 0) {			  ## math_fix.c:442:9
  10a566:    00 80       		r0 = 0 
                               	}			  ## math_fix.c:442:9
  10a568:    c0 f7 50 00 	r0 = r5 >>> r0 			  ## math_fix.c:442:9
  10a56c:    45 2e       	r5 = [addr(100)]  <.GCPI288_1 : 10a5d0 >			  ## math_fix.c:448:5
  10a56e:    c5 06       	macc = r0 * r5 (s) 			  ## math_fix.c:448:5
  10a570:    51 ea 18 00 	r9 = 24 			  ## math_fix.c:448:5
  10a574:    80 f9 00 09 	r0 = macc >>> r9 			  ## math_fix.c:448:5
  10a578:    c0 06       	macc = r0 * r0 (s) 			  ## math_fix.c:449:5
  10a57a:    80 f9 06 09 	r6 = macc >>> r9 			  ## math_fix.c:449:5
  10a57e:    40 2d       	r0 = [addr(84)]  <.GCPI288_2 : 10a5d4 >			  ## math_fix.c:450:5
  10a580:    c6 06       	macc = r0 * r6 (s) 			  ## math_fix.c:450:5
  10a582:    80 f9 07 09 	r7 = macc >>> r9 			  ## math_fix.c:450:5
  10a586:    40 2c       	r0 = [addr(68)]  <.GCPI288_0 : 10a5cc >
  10a588:    07 08       	goto 14 <cosAprx+0x98 : 10a598 >
  10a58a:    05 d5       	r5 = r0 + r4 			  ## math_fix.c:453:9
  10a58c:    6d 48       	r5 = [r5 + 4] 			  ## math_fix.c:453:9
  10a58e:    ed d5       	r5 = r5 + r7 			  ## math_fix.c:453:9
  10a590:    ee 06       	macc = r5 * r6 (s) 			  ## math_fix.c:453:9
  10a592:    24 d1       	r4 = r4 + 4 			  ## math_fix.c:451:5
  10a594:    80 f9 07 09 	r7 = macc >>> r9 			  ## math_fix.c:453:9
  10a598:    24 98       	cmp r4, 4			  ## math_fix.c:451:5
  10a59a:    f7 11       	ifs (nzcv != 0) goto -18 <cosAprx+0x8A : 10a58a >			  ## math_fix.c:451:5
  10a59c:    17 ee 74 80 	r4 = r7 + 16777216 			  ## math_fix.c:455:7
  10a5a0:    00 80       	r0 = 0 
  10a5a2:    bd 80       	r5 = 23 
  10a5a4:    06 08       	goto 12 <cosAprx+0xB2 : 10a5b2 >
  10a5a6:    e4 06       	macc = r4 * r4 (s) 			  ## math_fix.c:458:9
  10a5a8:    40 d0       	r0 = r0 + 1 			  ## math_fix.c:456:33
  10a5aa:    80 f9 04 05 	r4 = macc >>> r5 			  ## math_fix.c:458:9
  10a5ae:    14 ee 44 7f 	r4 = r4 + 4278190080 			  ## math_fix.c:459:11
  10a5b2:    03 ce       	cmp r0, r3			  ## math_fix.c:456:5
  10a5b4:    f8 1b       	ifs (nzcv < 0) goto -16 <cosAprx+0xA6 : 10a5a6 >			  ## math_fix.c:456:5
  10a5b6:    a3 dc       	r3 = -r4 			  ## math_fix.c:463:13
  10a5b8:    08 ef 80 00 	cmp r8, 8388608			  ## math_fix.c:461:9
  10a5bc:    d0 03       	ifs (nzcv <= 0) {			  ## math_fix.c:461:9
  10a5be:    23 c6       		r3 = r4 
                               	}			  ## math_fix.c:461:9
  10a5c0:    0b 68       	[r1 + 0] = r3 
  10a5c2:    c0 80       	r0 = 24 
  10a5c4:    10 68       	[r2 + 0] = r0 
  10a5c6:    30 c4       	{macch, maccl} = [sp++] 
  10a5c8:    19 c0       	{pc, r9-r4} = [sp++] 
  10a5ca:    00 00       	nop


.GCPI288_0:
  10a5cc:    e0 d8 11 00     < 1169632 : 0x11D8E0 >

.GCPI288_1:
  10a5d0:    6b 3f 24 03     < 52707179 : 0x3243F6B >

.GCPI288_2:
  10a5d4:    ab aa 0a 00     < 699051 : 0xAAAAB >

sinAprx:
  10a5d8:    98 ee 00 00 	r0 = r0 - 8388608 			  ## math_fix.c:470:0
  10a5dc:    91 0f       	goto -222 <cosAprx : 10a500 >			  ## math_fix.c:473:5


howling_init:
  10a5de:    1b c2       	[--sp] = {rets, r11-r4} 			  ## notch_howling.c:299:0
  10a5e0:    30 c5       	[--sp] = {macch, maccl} 			  ## notch_howling.c:299:0
  10a5e2:    ec cd       	sp += -20 			  ## notch_howling.c:299:0
  10a5e4:    15 c6       	r5 = r2 			  ## notch_howling.c:299:0
  10a5e6:    0f c6       	r7 = r1 			  ## notch_howling.c:299:0
  10a5e8:    06 c6       	r6 = r0 			  ## notch_howling.c:299:0
  10a5ea:    04 80       	r4 = 0 			  ## notch_howling.c:299:0
  10a5ec:    01 80       	r1 = 0 			  ## notch_howling.c:301:2
  10a5ee:    12 ea d8 0a 	r2 = 2776 			  ## notch_howling.c:301:2
  10a5f2:    dc e1 3f 4b 	call -292506 <memset : c2f5c >			  ## notch_howling.c:301:2
  10a5f6:    0a ed 60 c4 	r0 = r6 + 2756 			  ## notch_howling.c:302:13
  10a5fa:    50 ea 08 00 	r8 = 8 			  ## notch_howling.c:302:13
  10a5fe:    29 c6       	r1 = r5 			  ## notch_howling.c:302:2
  10a600:    42 80       	r2 = 8 			  ## notch_howling.c:302:2
  10a602:    dc e1 5f 4a 	call -292534 <memcpy : c2f50 >			  ## notch_howling.c:302:2
  10a606:    0a ed 60 d8 	r0 = r6 + 2776 			  ## notch_howling.c:304:16
  10a60a:    09 ed 69 ac 	r9 = r6 + 2476 			  ## notch_howling.c:304:16
  10a60e:    60 e8 90 fd 	[r9 + -12] = r0 			  ## notch_howling.c:305:26
  10a612:    01 80       	r1 = 0 			  ## notch_howling.c:306:2
  10a614:    42 81       	r2 = 40 			  ## notch_howling.c:306:2
  10a616:    dc e1 1f 4a 	call -292542 <memset : c2f5c >			  ## notch_howling.c:306:2
  10a61a:    0b ed 60 00 	r0 = r6 + 2816 			  ## notch_howling.c:307:12
  10a61e:    60 e8 90 fe 	[r9 + -8] = r0 			  ## notch_howling.c:308:23
  10a622:    01 80       	r1 = 0 			  ## notch_howling.c:309:2
  10a624:    82 80       	r2 = 16 			  ## notch_howling.c:309:2
  10a626:    dc e1 9f 49 	call -292558 <memset : c2f5c >			  ## notch_howling.c:309:2
  10a62a:    07 60       	[sp] = r7 			  ## notch_howling.c:315:22
  10a62c:    b8 48       	r0 = [r7 + 8] 			  ## notch_howling.c:315:22
  10a62e:    39 49       	r1 = [r7 + 16] 			  ## notch_howling.c:315:41
  10a630:    31 68       	[r6 + 0] = r1 			  ## notch_howling.c:316:16
  10a632:    52 ea 01 00 	r10 = 1 			  ## notch_howling.c:316:16
  10a636:    50 e8 6a 01 	h[r6 + 4] = r10 			  ## notch_howling.c:317:10
  10a63a:    7a 48       	r2 = [r7 + 4] 			  ## notch_howling.c:318:16
  10a63c:    02 ed 65 24 	r5 = r6 + 548 			  ## notch_howling.c:318:16
  10a640:    6a 6f       	[r5 + -12] = r2 			  ## notch_howling.c:318:7
  10a642:    3a 48       	r2 = [r7 + 0] 			  ## notch_howling.c:319:19
  10a644:    aa 6f       	[r5 + -8] = r2 			  ## notch_howling.c:319:10
  10a646:    32 85       	r2 = -90 			  ## notch_howling.c:321:2
  10a648:    27 ea 03 00 	r3 = 33554432 			  ## notch_howling.c:321:2
  10a64c:    d3 06       	macc = r2 * r3 (s) 			  ## notch_howling.c:321:2
  10a64e:    08 06       	r0 *= r1 			  ## notch_howling.c:315:32
  10a650:    11 ea e8 03 	r1 = 1000 			  ## notch_howling.c:315:52
  10a654:    c0 fc 00 01 	r0 = r0 / r1 (s) 			  ## notch_howling.c:315:52
  10a658:    80 05       	macc /= r0 (s) 			  ## notch_howling.c:322:2
  10a65a:    27 c8       	r7 = maccl 			  ## notch_howling.c:322:2
  10a65c:    02 ed 62 20 	r2 = r6 + 544 			  ## notch_howling.c:323:22
  10a660:    00 ed fb 04 	r11 = sp + 4 			  ## notch_howling.c:323:22
  10a664:    38 c6       	r0 = r7 			  ## notch_howling.c:323:2
  10a666:    c9 80       	r1 = 25 			  ## notch_howling.c:323:2
  10a668:    9b c6       	r3 = r11 			  ## notch_howling.c:323:2
  10a66a:    ff e1 bf ea 	call -682 <db2mag : 10a3c4 >			  ## notch_howling.c:323:2
  10a66e:    b8 dc       	r0 = -r7 			  ## notch_howling.c:324:9
  10a670:    c9 80       	r1 = 25 			  ## notch_howling.c:324:2
  10a672:    2a c6       	r2 = r5 			  ## notch_howling.c:324:2
  10a674:    9b c6       	r3 = r11 			  ## notch_howling.c:324:2
  10a676:    ff e1 5f ea 	call -694 <db2mag : 10a3c4 >			  ## notch_howling.c:324:2
  10a67a:    33 c6       	r3 = r6 			  ## notch_howling.c:324:2
  10a67c:    50 80       	r0 = 10 			  ## notch_howling.c:326:15
  10a67e:    58 71       	h[r3 + 20] = r0 			  ## notch_howling.c:326:15
  10a680:    00 40       	r0 = [sp] 			  ## notch_howling.c:327:24
  10a682:    c0 48       	r0 = [r0 + 12] 			  ## notch_howling.c:327:24
  10a684:    68 68       	[r5 + 4] = r0 			  ## notch_howling.c:327:15
  10a686:    10 2c       	r0 = [addr(320)]  <.GCPI290_0 : 10a7c8 >			  ## fftfun.c:17:10
  10a688:    60 e8 90 03 	[r9 + 12] = r0 			  ## fftfun.c:17:10
  10a68c:    10 ea 00 01 	r0 = 256 			  ## fftfun.c:18:14
  10a690:    60 e8 90 04 	[r9 + 16] = r0 			  ## fftfun.c:18:14
  10a694:    60 e8 90 ff 	[r9 + -4] = r0 			  ## fftfun.c:21:8
  10a698:    60 e8 9a 02 	[r9 + 8] = r10 			  ## fftfun.c:22:12
  10a69c:    48 e5 9a 00 	d[r9 + 0] = r10, r8 			  ## fftfun.c:23:17
  10a6a0:    0b ed 38 10 	r8 = r3 + 2832 			  ## notch_howling.c:310:12
  10a6a4:    18 48       	r0 = [r3 + 0] 			  ## notch_howling.c:334:9
  10a6a6:    11 ea c1 5d 	r1 = 24001 			  ## notch_howling.c:334:6
  10a6aa:    01 ce       	cmp r0, r1			  ## notch_howling.c:334:6
  10a6ac:    5b 1b       	ifs (nzcv < 0) goto 182 <howling_init+0x186 : 10a764 >			  ## notch_howling.c:334:6
  10a6ae:    59 50       	r1 = h[r3 + 4] 			  ## notch_howling.c:336:10
  10a6b0:    01 98       	cmp r1, 0			  ## notch_howling.c:336:7
  10a6b2:    6c 10       	ifs (nzcv == 0) goto 216 <howling_init+0x1AE : 10a78c >			  ## notch_howling.c:336:7
  10a6b4:    11 ea 40 01 	r1 = 320 			  ## notch_howling.c:339:17
  10a6b8:    99 70       	h[r3 + 8] = r1 			  ## notch_howling.c:339:17
  10a6ba:    20 e8 97 fd 	r7 = [r9 + -12] 			  ## notch_howling.c:340:35
  10a6be:    11 ea 58 1b 	r1 = 7000 			  ## notch_howling.c:27:2
  10a6c2:    27 ea 02 00 	r2 = 33554432 			  ## notch_howling.c:27:2
  10a6c6:    ca 06       	macc = r1 * r2 (s) 			  ## notch_howling.c:27:2
  10a6c8:    80 05       	macc /= r0 (s) 			  ## notch_howling.c:28:2
  10a6ca:    26 c8       	r6 = maccl 			  ## notch_howling.c:28:2
  10a6cc:    61 90       	r1 = sp + 12 
  10a6ce:    42 90       	r2 = sp + 8 
  10a6d0:    30 c6       	r0 = r6 			  ## notch_howling.c:34:2
  10a6d2:    03 60       	[sp] = r3 			  ## notch_howling.c:34:2
  10a6d4:    81 04       	call -254 <sinAprx : 10a5d8 >			  ## notch_howling.c:34:2
  10a6d6:    81 90       	r1 = sp + 16 
  10a6d8:    30 c6       	r0 = r6 			  ## notch_howling.c:35:2
  10a6da:    ff e1 1f f1 	call -478 <cosAprx : 10a500 >			  ## notch_howling.c:35:2
  10a6de:    28 ea 00 00 	r0 = 8388608 			  ## notch_howling.c:36:2
  10a6e2:    c1 40       	r1 = [sp+ 12] 			  ## notch_howling.c:36:2
  10a6e4:    c8 06       	macc = r1 * r0 (s) 			  ## notch_howling.c:36:2
  10a6e6:    49 2e       	r1 = [addr(228)]  <.GCPI290_1 : 10a7cc >			  ## notch_howling.c:37:2
  10a6e8:    81 05       	macc /= r1 (s) 			  ## notch_howling.c:37:2
  10a6ea:    21 c8       	r1 = maccl 			  ## notch_howling.c:37:2
  10a6ec:    27 ea 02 80 	r2 = 16777216 			  ## notch_howling.c:38:16
  10a6f0:    d2 06       	macc = r2 * r2 (s) 			  ## notch_howling.c:39:2
  10a6f2:    17 ee 12 80 	r2 = r1 + 16777216 			  ## notch_howling.c:38:16
  10a6f6:    82 05       	macc /= r2 (s) 			  ## notch_howling.c:40:2
  10a6f8:    22 c8       	r2 = maccl 			  ## notch_howling.c:40:2
  10a6fa:    03 41       	r3 = [sp+ 16] 			  ## notch_howling.c:42:24
  10a6fc:    1c a1       	r4 = r3 << 1 			  ## notch_howling.c:44:2
  10a6fe:    e2 06       	macc = r4 * r2 (s) 			  ## notch_howling.c:44:2
  10a700:    d4 80       	r4 = 26 			  ## notch_howling.c:44:2
  10a702:    80 f9 06 04 	r6 = macc >>> r4 			  ## notch_howling.c:44:2
  10a706:    fe 68       	[r7 + 12] = r6 			  ## notch_howling.c:44:2
  10a708:    14 ee 11 7f 	r1 = r1 + 4278190080 			  ## notch_howling.c:45:2
  10a70c:    ca 06       	macc = r1 * r2 (s) 			  ## notch_howling.c:45:2
  10a70e:    80 f9 01 04 	r1 = macc >>> r4 			  ## notch_howling.c:45:2
  10a712:    79 68       	[r7 + 4] = r1 			  ## notch_howling.c:45:2
  10a714:    27 ee 31 80 	r1 = 16777216 - r3 			  ## notch_howling.c:42:22
  10a718:    c9 a1       	r1 = r1 >>> 1 			  ## notch_howling.c:46:2
  10a71a:    ca 06       	macc = r1 * r2 (s) 			  ## notch_howling.c:46:2
  10a71c:    80 f9 01 04 	r1 = macc >>> r4 			  ## notch_howling.c:46:2
  10a720:    39 68       	[r7 + 0] = r1 			  ## notch_howling.c:46:2
  10a722:    38 69       	[r7 + 16] = r0 			  ## notch_howling.c:48:11
  10a724:    28 ea 00 80 	r0 = 4194304 			  ## notch_howling.c:49:11
  10a728:    b8 68       	[r7 + 8] = r0 			  ## notch_howling.c:49:11
  10a72a:    00 ed 70 14 	r0 = r7 + 20 			  ## notch_howling.c:342:21
  10a72e:    39 c6       	r1 = r7 			  ## notch_howling.c:342:4
  10a730:    a2 80       	r2 = 20 			  ## notch_howling.c:342:4
  10a732:    dc e1 df 40 	call -292838 <memcpy : c2f50 >			  ## notch_howling.c:342:4
  10a736:    03 40       	r3 = [sp] 
  10a738:    10 80       	r0 = 2 			  ## notch_howling.c:343:27
  10a73a:    60 e8 90 fc 	[r9 + -16] = r0 			  ## notch_howling.c:343:27
  10a73e:    18 48       	r0 = [r3 + 0] 			  ## notch_howling.c:344:25
  10a740:    c1 bf       	r1 = r0 >>> 31 			  ## notch_howling.c:344:36
  10a742:    49 b7       	r1 = r1 >> 23 			  ## notch_howling.c:344:36
  10a744:    40 d4       	r0 = r0 + r1 			  ## notch_howling.c:344:36
  10a746:    c0 a9       	r0 = r0 >>> 9 			  ## notch_howling.c:344:36
  10a748:    e8 68       	[r5 + 12] = r0 			  ## notch_howling.c:344:20
  10a74a:    02 ed 30 34 	r0 = r3 + 564 
  10a74e:    01 80       	r1 = 0 
  10a750:    05 08       	goto 10 <howling_init+0x17E : 10a75c >
  10a752:    ea 48       	r2 = [r5 + 12] 			  ## notch_howling.c:348:25
  10a754:    0a 06       	r2 *= r1 			  ## notch_howling.c:348:20
  10a756:    68 e8 02 01 	[r0 ++= 4] = r2 			  ## notch_howling.c:348:16
  10a75a:    49 d0       	r1 = r1 + 1 			  ## notch_howling.c:346:36
  10a75c:    80 ef 10 80 	cmp r1, 128			  ## notch_howling.c:346:4
  10a760:    f8 11       	ifs (nzcv != 0) goto -16 <howling_init+0x174 : 10a752 >			  ## notch_howling.c:346:4
  10a762:    25 08       	goto 74 <howling_init+0x1D0 : 10a7ae >			  ## notch_howling.c:346:4
  10a764:    c1 bf       	r1 = r0 >>> 31 			  ## notch_howling.c:366:35
  10a766:    49 b8       	r1 = r1 >> 24 			  ## notch_howling.c:366:35
  10a768:    40 d4       	r0 = r0 + r1 			  ## notch_howling.c:366:35
  10a76a:    c0 a8       	r0 = r0 >>> 8 			  ## notch_howling.c:366:35
  10a76c:    e8 68       	[r5 + 12] = r0 			  ## notch_howling.c:366:19
  10a76e:    10 ea a0 00 	r0 = 160 			  ## notch_howling.c:367:16
  10a772:    98 70       	h[r3 + 8] = r0 			  ## notch_howling.c:367:16
  10a774:    02 ed 30 34 	r0 = r3 + 564 
  10a778:    05 08       	goto 10 <howling_init+0x1A6 : 10a784 >
  10a77a:    e9 48       	r1 = [r5 + 12] 			  ## notch_howling.c:371:24
  10a77c:    21 06       	r1 *= r4 			  ## notch_howling.c:371:19
  10a77e:    68 e8 01 01 	[r0 ++= 4] = r1 			  ## notch_howling.c:371:15
  10a782:    64 d0       	r4 = r4 + 1 			  ## notch_howling.c:369:35
  10a784:    80 ef 40 80 	cmp r4, 128			  ## notch_howling.c:369:3
  10a788:    f8 11       	ifs (nzcv != 0) goto -16 <howling_init+0x19C : 10a77a >			  ## notch_howling.c:369:3
  10a78a:    11 08       	goto 34 <howling_init+0x1D0 : 10a7ae >			  ## notch_howling.c:369:3
  10a78c:    11 ea a0 00 	r1 = 160 			  ## notch_howling.c:354:17
  10a790:    99 70       	h[r3 + 8] = r1 			  ## notch_howling.c:354:17
  10a792:    40 a8       	r0 = r0 >> 8 			  ## notch_howling.c:354:17
  10a794:    e8 68       	[r5 + 12] = r0 			  ## notch_howling.c:355:20
  10a796:    02 ed 30 34 	r0 = r3 + 564 
  10a79a:    01 80       	r1 = 0 
  10a79c:    05 08       	goto 10 <howling_init+0x1CA : 10a7a8 >
  10a79e:    ea 48       	r2 = [r5 + 12] 			  ## notch_howling.c:359:25
  10a7a0:    0a 06       	r2 *= r1 			  ## notch_howling.c:359:20
  10a7a2:    68 e8 02 01 	[r0 ++= 4] = r2 			  ## notch_howling.c:359:16
  10a7a6:    49 d0       	r1 = r1 + 1 			  ## notch_howling.c:357:36
  10a7a8:    80 ef 10 80 	cmp r1, 128			  ## notch_howling.c:357:4
  10a7ac:    f8 11       	ifs (nzcv != 0) goto -16 <howling_init+0x1C0 : 10a79e >			  ## notch_howling.c:357:4
  10a7ae:    60 e8 38 03 	[r3 + 12] = r8 			  ## notch_howling.c:376:13
  10a7b2:    90 e8 30 02 	r0 = h[r3 + 8] (s) 			  ## notch_howling.c:377:24
  10a7b6:    02 a1       	r2 = r0 << 1 			  ## notch_howling.c:377:37
  10a7b8:    80 c6       	r0 = r8 			  ## notch_howling.c:377:2
  10a7ba:    01 80       	r1 = 0 			  ## notch_howling.c:377:2
  10a7bc:    dc e1 ef 3c 	call -292964 <memset : c2f5c >			  ## notch_howling.c:377:2
  10a7c0:    14 cd       	sp += 20 			  ## notch_howling.c:377:2
  10a7c2:    30 c4       	{macch, maccl} = [sp++] 			  ## notch_howling.c:377:2
  10a7c4:    1b c0       	{pc, r11-r4} = [sp++] 			  ## notch_howling.c:377:2
  10a7c6:    00 00       	nop			  ## notch_howling.c:377:2


.GCPI290_0:
  10a7c8:    04 69 11 00     < 1140996 : 0x116904 >

.GCPI290_1:
  10a7cc:    33 33 b3 00     < 11744051 : 0xB33333 >

howling_ps_needbuf:
  10a7d0:    01 c6       	r1 = r0 			  ## shift_anysrh.c:184:0
  10a7d2:    10 ea bc 00 	r0 = 188 			  ## shift_anysrh.c:187:6
  10a7d6:    00 f4 10 01 	tst r1, 1			  ## shift_anysrh.c:187:6
  10a7da:    10 03       	ifs (nzcv != 0) {			  ## shift_anysrh.c:187:6
  10a7dc:    10 ea bc 07 		r0 = 1980 
                               	}			  ## shift_anysrh.c:187:6
  10a7e0:    06 ed 02 60 	r2 = r0 + 1632 			  ## shift_anysrh.c:194:7
  10a7e4:    00 f4 10 02 	tst r1, 2			  ## shift_anysrh.c:192:6
  10a7e8:    10 03       	ifs (nzcv != 0) {			  ## shift_anysrh.c:192:6
  10a7ea:    10 c6       		r0 = r2 
                               	}			  ## shift_anysrh.c:192:6
  10a7ec:    20 00       	rts			  ## shift_anysrh.c:197:2


howling_ps_open:
  10a7ee:    17 c2       	[--sp] = {rets, r7-r4} 			  ## shift_anysrh.c:50:0
  10a7f0:    f8 cd       	sp += -8 			  ## shift_anysrh.c:50:0
  10a7f2:    1e c6       	r6 = r3 			  ## shift_anysrh.c:50:0
  10a7f4:    17 c6       	r7 = r2 			  ## shift_anysrh.c:50:0
  10a7f6:    41 60       	[sp+ 4] = r1 			  ## shift_anysrh.c:50:0
  10a7f8:    05 c6       	r5 = r0 			  ## shift_anysrh.c:50:0
  10a7fa:    01 80       	r1 = 0 			  ## shift_anysrh.c:52:2
  10a7fc:    12 ea bc 00 	r2 = 188 			  ## shift_anysrh.c:52:2
  10a800:    dc e1 cf 3a 	call -293032 <memset : c2f5c >			  ## shift_anysrh.c:52:2
  10a804:    78 48       	r0 = [r7 + 4] 			  ## shift_anysrh.c:57:39
  10a806:    28 68       	[r5 + 0] = r0 			  ## shift_anysrh.c:57:25
  10a808:    00 ed 54 bc 	r4 = r5 + 188 			  ## shift_anysrh.c:55:8
  10a80c:    00 f4 00 01 	tst r0, 1			  ## shift_anysrh.c:59:6
  10a810:    7e 10       	ifs (nzcv == 0) goto 252 <howling_ps_open+0x120 : 10a90e >			  ## shift_anysrh.c:59:6
  10a812:    06 60       	[sp] = r6 
  10a814:    6c 68       	[r5 + 4] = r4 			  ## shift_anysrh.c:61:25
  10a816:    20 c6       	r0 = r4 			  ## shift_anysrh.c:14:2
  10a818:    01 80       	r1 = 0 			  ## shift_anysrh.c:14:2
  10a81a:    12 ea 00 07 	r2 = 1792 			  ## shift_anysrh.c:14:2
  10a81e:    dc e1 df 39 	call -293062 <memset : c2f5c >			  ## shift_anysrh.c:14:2
  10a822:    90 e8 70 00 	r0 = h[r7 + 0] (s) 			  ## shift_anysrh.c:16:25
  10a826:    12 ea 00 40 	r2 = 16384 			  ## shift_anysrh.c:16:25
  10a82a:    00 ed 51 ec 	r1 = r5 + 236 
  10a82e:    1d ee 00 00 	r0 = r0 + 8192 			  ## shift_anysrh.c:16:24
  10a832:    03 a1       	r3 = r0 << 1 			  ## shift_anysrh.c:19:68
  10a834:    42 e5 13 f8 	d[r1 + -32] = r3, r2 			  ## pitch_sr_context_cpu.h:359:16
  10a838:    14 80       	r4 = 2 			  ## pitch_sr_context_cpu.h:363:19
  10a83a:    4c 6d       	[r1 + -44] = r4 			  ## pitch_sr_context_cpu.h:363:19
  10a83c:    4b 98       	cmp r3, 9			  ## pitch_sr_context_cpu.h:367:28
  10a83e:    d3 03       	ifs (nzcv <= 0) {			  ## pitch_sr_context_cpu.h:367:28
  10a840:    12 ea 44 ac 		r2 = 44100 			  ## pitch_sr_context_cpu.h:367:28
  10a844:    4a 6e       		[r1 + -28] = r2 			  ## pitch_sr_context_cpu.h:369:18
  10a846:    0a 6e       		[r1 + -32] = r2 			  ## pitch_sr_context_cpu.h:370:17
  10a848:    13 ea 44 ac 		r3 = 44100 
                               	}			  ## pitch_sr_context_cpu.h:375:31
  10a84c:    8b 6e       	[r1 + -24] = r3 			  ## pitch_sr_context_cpu.h:373:23
  10a84e:    1c d1       	r4 = r3 + 4 			  ## pitch_sr_context_cpu.h:374:46
  10a850:    26 ea 06 00 	r6 = 134217728 			  ## pitch_sr_context_cpu.h:374:29
  10a854:    c0 fc 64 04 	r4 = r6 / r4 (s) 			  ## pitch_sr_context_cpu.h:374:29
  10a858:    cc 6d       	[r1 + -36] = r4 			  ## pitch_sr_context_cpu.h:374:16
  10a85a:    13 ce       	cmp r2, r3			  ## pitch_sr_context_cpu.h:375:6
  10a85c:    08 1d       	ifs (nzcv <= 0) goto 16 <howling_ps_open+0x80 : 10a86e >			  ## pitch_sr_context_cpu.h:375:6
  10a85e:    1b a5       	r3 = r3 << 5 			  ## pitch_sr_context_cpu.h:382:38
  10a860:    c0 fc 32 02 	r2 = r3 / r2 (s) 			  ## pitch_sr_context_cpu.h:382:46
  10a864:    0a 98       	cmp r2, 1			  ## pitch_sr_context_cpu.h:383:7
  10a866:    d0 03       	ifs (nzcv <= 0) {			  ## pitch_sr_context_cpu.h:383:7
  10a868:    0a 80       		r2 = 1 
                               	}			  ## pitch_sr_context_cpu.h:383:7
  10a86a:    13 a8       	r3 = r2 << 8 			  ## pitch_sr_context_cpu.h:387:44
  10a86c:    03 08       	goto 6 <howling_ps_open+0x86 : 10a874 >			  ## pitch_sr_context_cpu.h:387:44
  10a86e:    13 ea 00 20 	r3 = 8192 
  10a872:    02 81       	r2 = 32 
  10a874:    06 40       	r6 = [sp] 
  10a876:    0a 6d       	[r1 + -48] = r2 			  ## pitch_sr_context_cpu.h:382:21
  10a878:    cb 6a       	[r1 + 44] = r3 			  ## pitch_sr_context_cpu.h:382:21
  10a87a:    0a 2f       	r2 = [addr(240)]  <.GCPI292_0 : 10a96c >			  ## pitch_sr_context_cpu.h:427:19
  10a87c:    4a 6b       	[r1 + 52] = r2 			  ## pitch_sr_context_cpu.h:427:19
  10a87e:    09 80       	r1 = 1 			  ## pitch_sr_context_cpu.h:427:19
  10a880:    0d ef 00 00 	cmp r0, 8192			  ## ps_for69_cal.h:214:19
  10a884:    a0 03       	ifs (nzcv >= 0) {			  ## ps_for69_cal.h:214:19
  10a886:    11 80       		r1 = 2 
                               	}			  ## ps_for69_cal.h:214:19
  10a888:    06 ed 54 d8 	r4 = r5 + 1752 			  ## ps_for69_cal.h:214:19
  10a88c:    a1 70       	h[r4 + 8] = r1 			  ## ps_for69_cal.h:214:17
  10a88e:    41 40       	r1 = [sp+ 4] 
  10a890:    0c ef 10 fa 	cmp r1, 32000			  ## ps_for69_cal.h:218:7
  10a894:    0a 1b       	ifs (nzcv < 0) goto 20 <howling_ps_open+0xBC : 10a8aa >			  ## ps_for69_cal.h:218:7
  10a896:    10 ea 00 02 	r0 = 512 			  ## ps_for69_cal.h:220:21
  10a89a:    e0 68       	[r4 + 12] = r0 			  ## ps_for69_cal.h:220:21
  10a89c:    10 ea 40 02 	r0 = 576 			  ## ps_for69_cal.h:220:21
  10a8a0:    11 ea 00 01 	r1 = 256 			  ## ps_for69_cal.h:220:21
  10a8a4:    12 ea 80 00 	r2 = 128 			  ## ps_for69_cal.h:220:21
  10a8a8:    16 08       	goto 44 <howling_ps_open+0xE8 : 10a8d6 >			  ## ps_for69_cal.h:220:21
  10a8aa:    10 ea c0 5d 	r0 = 24000 			  ## ps_for69_cal.h:225:13
  10a8ae:    08 ce       	cmp r1, r0			  ## ps_for69_cal.h:225:13
  10a8b0:    0a 1b       	ifs (nzcv < 0) goto 20 <howling_ps_open+0xD8 : 10a8c6 >			  ## ps_for69_cal.h:225:13
  10a8b2:    10 ea 90 01 	r0 = 400 			  ## ps_for69_cal.h:227:21
  10a8b6:    e0 68       	[r4 + 12] = r0 			  ## ps_for69_cal.h:227:21
  10a8b8:    10 ea a4 01 	r0 = 420 			  ## ps_for69_cal.h:227:21
  10a8bc:    11 ea c8 00 	r1 = 200 			  ## ps_for69_cal.h:227:21
  10a8c0:    12 ea 80 00 	r2 = 128 			  ## ps_for69_cal.h:227:21
  10a8c4:    08 08       	goto 16 <howling_ps_open+0xE8 : 10a8d6 >			  ## ps_for69_cal.h:227:21
  10a8c6:    10 ea 00 01 	r0 = 256 
  10a8ca:    e0 68       	[r4 + 12] = r0 
  10a8cc:    10 ea f8 00 	r0 = 248 
  10a8d0:    11 ea 80 00 	r1 = 128 
  10a8d4:    02 82       	r2 = 64 
  10a8d6:    41 e5 42 04 	d[r4 + 16] = r2, r1 
  10a8da:    a0 69       	[r4 + 24] = r0 
  10a8dc:    20 48       	r0 = [r4 + 0] 			  ## ps_for69_cal.h:251:14
  10a8de:    82 ef 00 b6 	cmp r0, 694			  ## ps_for69_cal.h:251:6
  10a8e2:    12 1b       	ifs (nzcv < 0) goto 36 <howling_ps_open+0x11A : 10a908 >			  ## ps_for69_cal.h:251:6
  10a8e4:    01 ed 50 24 	r0 = r5 + 292 			  ## shift_anysrh.c:24:37
  10a8e8:    06 80       	r6 = 0 			  ## shift_anysrh.c:24:37
  10a8ea:    01 80       	r1 = 0 			  ## ps_for69_cal.h:253:3
  10a8ec:    12 ea ac 05 	r2 = 1452 			  ## ps_for69_cal.h:253:3
  10a8f0:    dc e1 4f 33 	call -293272 <memset : c2f5c >			  ## ps_for69_cal.h:253:3
  10a8f4:    10 ea 58 02 	r0 = 600 			  ## ps_for69_cal.h:253:3
  10a8f8:    a0 73       	h[r4 + -8] = r0 			  ## ps_for69_cal.h:254:22
  10a8fa:    90 e8 40 fe 	r0 = h[r4 + -6] (s) 			  ## ps_for69_cal.h:255:45
  10a8fe:    2f ee 00 16 	r0 = 600 - r0 			  ## ps_for69_cal.h:255:43
  10a902:    20 68       	[r4 + 0] = r0 			  ## ps_for69_cal.h:255:22
  10a904:    a6 77       	h[r4 + -6] = r6 			  ## ps_for69_cal.h:256:19
  10a906:    06 40       	r6 = [sp] 			  ## ps_for69_cal.h:256:19
  10a908:    28 48       	r0 = [r5 + 0] 
  10a90a:    07 ed 54 bc 	r4 = r5 + 1980 			  ## shift_anysrh.c:63:9
  10a90e:    00 f4 00 02 	tst r0, 2			  ## shift_anysrh.c:66:6
  10a912:    24 10       	ifs (nzcv == 0) goto 72 <howling_ps_open+0x16E : 10a95c >			  ## shift_anysrh.c:66:6
  10a914:    ac 68       	[r5 + 8] = r4 			  ## shift_anysrh.c:68:28
  10a916:    90 e8 77 80 	r7 = h[r7 + 2] (s) 			  ## shift_anysrh.c:69:56
  10a91a:    20 c6       	r0 = r4 			  ## freq_shift.h:160:5
  10a91c:    01 80       	r1 = 0 			  ## freq_shift.h:160:5
  10a91e:    12 ea 60 06 	r2 = 1632 			  ## freq_shift.h:160:5
  10a922:    dc e1 bf 31 	call -293322 <memset : c2f5c >			  ## freq_shift.h:160:5
  10a926:    09 80       	r1 = 1 			  ## freq_shift.h:170:9
  10a928:    06 ed 40 58 	r0 = r4 + 1624 			  ## freq_shift.h:170:9
  10a92c:    41 68       	[r0 + 4] = r1 			  ## freq_shift.h:175:30
  10a92e:    57 98       	cmp r7, 10			  ## freq_shift.h:165:14
  10a930:    3a c6       	r2 = r7 			  ## freq_shift.h:165:14
  10a932:    a0 03       	ifs (nzcv >= 0) {			  ## freq_shift.h:165:14
  10a934:    52 80       		r2 = 10 
                               	}			  ## freq_shift.h:165:14
  10a936:    b3 87       	r3 = -10 			  ## freq_shift.h:165:14
  10a938:    b7 9f       	cmp r7, -10			  ## freq_shift.h:161:9
  10a93a:    a0 03       	ifs (nzcv >= 0) {			  ## freq_shift.h:161:9
  10a93c:    13 c6       		r3 = r2 
                               	}			  ## freq_shift.h:161:9
  10a93e:    13 20       	if (r3 == 0) goto 2 <howling_ps_open+0x154 : 10a942 >
  10a940:    19 c6       	r1 = r3 			  ## freq_shift.h:170:9
  10a942:    f9 9f       	cmp r1, -1			  ## freq_shift.h:176:9
  10a944:    d2 03       	ifs (nzcv <= 0) {			  ## freq_shift.h:178:34
  10a946:    fa 87       		r2 = -1 			  ## freq_shift.h:178:34
  10a948:    42 68       		[r0 + 4] = r2 			  ## freq_shift.h:178:34
  10a94a:    89 dc       		r1 = -r1 
                               	}			  ## freq_shift.h:179:19
  10a94c:    42 40       	r2 = [sp+ 4] 			  ## freq_shift.h:181:56
  10a94e:    c0 fc 21 01 	r1 = r2 / r1 (s) 			  ## freq_shift.h:181:56
  10a952:    2b ea 02 80 	r2 = 65536 			  ## freq_shift.h:181:49
  10a956:    c0 fc 21 01 	r1 = r2 / r1 (s) 			  ## freq_shift.h:181:49
  10a95a:    c1 6f       	[r0 + -4] = r1 			  ## freq_shift.h:181:30
  10a95c:    00 ed 50 0c 	r0 = r5 + 12 			  ## shift_anysrh.c:74:25
  10a960:    31 c6       	r1 = r6 			  ## shift_anysrh.c:74:2
  10a962:    42 80       	r2 = 8 			  ## shift_anysrh.c:74:2
  10a964:    dc e1 4f 2f 	call -293400 <memcpy : c2f50 >			  ## shift_anysrh.c:74:2
  10a968:    08 cd       	sp += 8 			  ## shift_anysrh.c:74:2
  10a96a:    17 c0       	{pc, r7-r4} = [sp++] 			  ## shift_anysrh.c:74:2


.GCPI292_0:
  10a96c:    f8 67 11 00     < 1140728 : 0x1167F8 >

echo_needbuf:
  10a970:    01 e5 10 02 	r0, r1 = d[r1 + 8] 			  ## echo_main.c:375:0
  10a974:    08 06       	r0 *= r1 			  ## echo_main.c:379:36
  10a976:    11 ea e8 03 	r1 = 1000 			  ## echo_main.c:381:6
  10a97a:    40 fc 00 01 	r0 = r0 / r1 			  ## echo_main.c:381:6
  10a97e:    00 a1       	r0 = r0 << 1 			  ## echo_main.c:386:21
  10a980:    01 ed 00 ec 	r0 = r0 + 492 			  ## echo_main.c:386:14
  10a984:    20 00       	rts			  ## echo_main.c:388:2


iirfilter_sinfun:
  10a986:    15 c2       	[--sp] = {rets, r5, r4} 			  ## filter_h.h:44:0
  10a988:    30 c5       	[--sp] = {macch, maccl} 			  ## filter_h.h:44:0
  10a98a:    c1 da       	r1 = ~r0 			  ## filter_h.h:53:2
  10a98c:    82 2f       	r2 = [addr(120)]  <.GCPI294_0 : 10aa04 >			  ## filter_h.h:53:2
  10a98e:    0a ce       	cmp r1, r2			  ## filter_h.h:53:2
  10a990:    d0 03       	ifs (nzcv <= 0) {			  ## filter_h.h:53:2
  10a992:    11 c6       		r1 = r2 
                               	}			  ## filter_h.h:53:2
  10a994:    09 d4       	r1 = r1 + r0 			  ## filter_h.h:53:2
  10a996:    02 2f       	r2 = [addr(112)]  <.GCPI294_1 : 10aa08 >			  ## filter_h.h:53:2
  10a998:    89 d4       	r1 = r1 + r2 			  ## filter_h.h:53:2
  10a99a:    40 fc 13 02 	r3 = r1 / r2 			  ## filter_h.h:53:2
  10a99e:    1a 06       	r2 *= r3 			  ## filter_h.h:53:2
  10a9a0:    8a d6       	r2 = r1 - r2 			  ## filter_h.h:53:2
  10a9a2:    51 d6       	r1 = r2 - r1 			  ## filter_h.h:53:2
  10a9a4:    0b d4       	r3 = r1 + r0 			  ## filter_h.h:53:2
  10a9a6:    14 ea 10 c9 	r4 = 51472 			  ## filter_h.h:57:13
  10a9aa:    f9 87       	r1 = -1 			  ## filter_h.h:53:2
  10a9ac:    0a 80       	r2 = 1 			  ## filter_h.h:53:2
  10a9ae:    1c ce       	cmp r3, r4			  ## filter_h.h:57:6
  10a9b0:    d0 03       	ifs (nzcv <= 0) {			  ## filter_h.h:57:6
  10a9b2:    09 80       		r1 = 1 
                               	}			  ## filter_h.h:57:6
  10a9b4:    03 80       	r3 = 0 
  10a9b6:    0c ef 00 00 	cmp r0, 32768			  ## filter_h.h:63:6
  10a9ba:    08 1d       	ifs (nzcv <= 0) goto 16 <iirfilter_sinfun+0x46 : 10a9cc >			  ## filter_h.h:63:6
  10a9bc:    0a 80       	r2 = 1 
  10a9be:    03 80       	r3 = 0 
  10a9c0:    5b d0       	r3 = r3 + 1 			  ## filter_h.h:69:14
  10a9c2:    12 a1       	r2 = r2 << 1 			  ## filter_h.h:68:24
  10a9c4:    c0 a1       	r0 = r0 >>> 1 			  ## filter_h.h:67:24
  10a9c6:    0c ef 00 00 	cmp r0, 32768			  ## filter_h.h:65:3
  10a9ca:    fa 1c       	ifs (nzcv > 0) goto -12 <iirfilter_sinfun+0x3A : 10a9c0 >			  ## filter_h.h:65:3
  10a9cc:    80 fc 04 00 	r4 = r0 * r0 			  ## filter_h.h:73:17
  10a9d0:    15 ea c1 67 	r5 = 26561 			  ## filter_h.h:74:2
  10a9d4:    ec 06       	macc = r5 * r4 (s) 			  ## filter_h.h:74:2
  10a9d6:    c0 f9 04 0e 	r4 = macc >>> 14 			  ## filter_h.h:74:2
  10a9da:    05 2b       	r5 = [addr(48)]  <.GCPI294_2 : 10aa0c >			  ## filter_h.h:76:2
  10a9dc:    e8 06       	macc = r5 * r0 (s) 			  ## filter_h.h:76:2
  10a9de:    e2 07       	macc -= r4 * r2 (s) 			  ## filter_h.h:77:2
  10a9e0:    20 ee 30 0e 	r0 = 14 - r3 			  ## filter_h.h:78:2
  10a9e4:    80 f9 00 00 	r0 = macc >>> r0 			  ## filter_h.h:78:2
  10a9e8:    12 ea 7d 03 	r2 = 893 			  ## filter_h.h:82:2
  10a9ec:    02 06       	r2 *= r0 			  ## filter_h.h:82:2
  10a9ee:    d0 06       	macc = r2 * r0 (s) 			  ## filter_h.h:82:2
  10a9f0:    12 ea 83 0c 	r2 = 3203 			  ## filter_h.h:83:13
  10a9f4:    10 06       	r0 *= r2 			  ## filter_h.h:83:13
  10a9f6:    c0 f9 02 10 	r2 = macc >>> 16 			  ## filter_h.h:82:2
  10a9fa:    80 d4       	r0 = r0 + r2 			  ## filter_h.h:83:17
  10a9fc:    c0 ac       	r0 = r0 >>> 12 			  ## filter_h.h:83:24
  10a9fe:    08 06       	r0 *= r1 			  ## filter_h.h:87:10
  10aa00:    30 c4       	{macch, maccl} = [sp++] 
  10aa02:    15 c0       	{pc, r5, r4} = [sp++] 


.GCPI294_0:
  10aa04:    df 6d fe ff     < 4294864351 : 0xFFFE6DDF >

.GCPI294_1:
  10aa08:    20 92 01 00     < 102944 : 0x19220 >

.GCPI294_2:
  10aa0c:    f3 45 01 00     < 83443 : 0x145F3 >

filter_init:
  10aa10:    18 c2       	[--sp] = {rets, r8-r4} 			  ## filter_h.h:110:0
  10aa12:    30 c5       	[--sp] = {macch, maccl} 			  ## filter_h.h:110:0
  10aa14:    04 c6       	r4 = r0 			  ## filter_h.h:110:0
  10aa16:    10 ea 6f b1 	r0 = 45423 			  ## filter_h.h:126:12
  10aa1a:    08 06       	r0 *= r1 			  ## filter_h.h:126:12
  10aa1c:    c1 bf       	r1 = r0 >>> 31 			  ## filter_h.h:130:3
  10aa1e:    c0 a7       	r0 = r0 >>> 7 			  ## filter_h.h:126:21
  10aa20:    12 ea 7a 5a 	r2 = 23162 			  ## filter_h.h:126:21
  10aa24:    ca 06       	macc = r1 * r2 (s) 			  ## filter_h.h:130:3
  10aa26:    e0 dc       	macc <<= 32 			  ## filter_h.h:130:3
  10aa28:    02 07       	macc += r0 * r2 			  ## filter_h.h:130:3
  10aa2a:    10 ea 02 bf 	r0 = 48898 			  ## filter_h.h:94:9
  10aa2e:    ab 04       	call -170 <iirfilter_sinfun : 10a986 >			  ## filter_h.h:94:9
  10aa30:    05 c6       	r5 = r0 			  ## filter_h.h:94:9
  10aa32:    10 ea 7a 5a 	r0 = 23162 			  ## filter_h.h:121:12
  10aa36:    a7 04       	call -178 <iirfilter_sinfun : 10a986 >			  ## filter_h.h:121:12
  10aa38:    06 c6       	r6 = r0 			  ## filter_h.h:121:12
  10aa3a:    86 05       	macc /= r6 (s) 			  ## filter_h.h:130:3
  10aa3c:    20 c8       	r0 = maccl 			  ## filter_h.h:130:3
  10aa3e:    a3 04       	call -186 <iirfilter_sinfun : 10a986 >			  ## filter_h.h:130:3
  10aa40:    f0 06       	macc = r6 * r0 (s) 			  ## filter_h.h:130:3
  10aa42:    c0 f9 00 10 	r0 = macc >>> 16 			  ## filter_h.h:130:3
  10aa46:    1b ee 01 80 	r1 = r0 + 65536 			  ## filter_h.h:131:40
  10aa4a:    24 ea 02 80 	r2 = 1073741824 			  ## filter_h.h:131:29
  10aa4e:    c0 fc 21 01 	r1 = r2 / r1 (s) 			  ## filter_h.h:131:29
  10aa52:    2b ee 52 80 	r2 = 65536 - r5 			  ## filter_h.h:132:3
  10aa56:    ca 06       	macc = r1 * r2 (s) 			  ## filter_h.h:132:3
  10aa58:    aa dc       	r2 = -r5 			  ## filter_h.h:136:3
  10aa5a:    c0 f9 03 0b 	r3 = macc >>> 11 			  ## filter_h.h:132:3
  10aa5e:    ca 06       	macc = r1 * r2 (s) 			  ## filter_h.h:136:3
  10aa60:    2b ee 00 80 	r0 = 65536 - r0 			  ## filter_h.h:137:3
  10aa64:    c0 f9 02 09 	r2 = macc >>> 9 			  ## filter_h.h:136:3
  10aa68:    c8 06       	macc = r1 * r0 (s) 			  ## filter_h.h:137:3
  10aa6a:    c0 f9 00 0a 	r0 = macc >>> 10 			  ## filter_h.h:137:3
  10aa6e:    19 a1       	r1 = r3 << 1 			  ## filter_h.h:134:10
  10aa70:    43 e5 41 00 	d[r4 + 0] = r1, r3 			  ## filter_h.h:203:11
  10aa74:    43 e5 42 02 	d[r4 + 8] = r2, r3 			  ## filter_h.h:205:11
  10aa78:    20 69       	[r4 + 16] = r0 			  ## filter_h.h:207:11
  10aa7a:    30 c4       	{macch, maccl} = [sp++] 			  ## filter_h.h:207:11
  10aa7c:    18 c0       	{pc, r8-r4} = [sp++] 			  ## filter_h.h:207:11


iirfilter_cal_coef:
  10aa7e:    16 c2       	[--sp] = {rets, r6-r4} 			  ## filter_h.h:217:0
  10aa80:    30 c5       	[--sp] = {macch, maccl} 			  ## filter_h.h:217:0
  10aa82:    01 48       	r1 = [r0 + 0] 			  ## filter_h.h:228:2
  10aa84:    12 ea 00 20 	r2 = 8192 			  ## filter_h.h:228:2
  10aa88:    ca 06       	macc = r1 * r2 (s) 			  ## filter_h.h:228:2
  10aa8a:    03 80       	r3 = 0 			  ## filter_h.h:228:2
  10aa8c:    29 ea 01 80 	r1 = 1048576 			  ## filter_h.h:229:2
  10aa90:    8b 07       	macc += r1 * r3 (s) 			  ## filter_h.h:229:2
  10aa92:    c0 f9 01 0d 	r1 = macc >>> 13 			  ## filter_h.h:230:2
  10aa96:    44 48       	r4 = [r0 + 4] 			  ## filter_h.h:232:2
  10aa98:    e2 06       	macc = r4 * r2 (s) 			  ## filter_h.h:232:2
  10aa9a:    c4 48       	r4 = [r0 + 12] 			  ## filter_h.h:233:2
  10aa9c:    a3 07       	macc += r4 * r3 (s) 			  ## filter_h.h:233:2
  10aa9e:    c0 f9 04 0d 	r4 = macc >>> 13 			  ## filter_h.h:234:2
  10aaa2:    85 48       	r5 = [r0 + 8] 			  ## filter_h.h:236:2
  10aaa4:    ea 06       	macc = r5 * r2 (s) 			  ## filter_h.h:236:2
  10aaa6:    02 49       	r2 = [r0 + 16] 			  ## filter_h.h:237:2
  10aaa8:    93 07       	macc += r2 * r3 (s) 			  ## filter_h.h:237:2
  10aaaa:    c0 f9 02 0d 	r2 = macc >>> 13 			  ## filter_h.h:238:2
  10aaae:    03 e5 05 03 	r5, r3 = d[r0 + 12] 			  ## filter_h.h:240:7
  10aab2:    0e a2       	r6 = r1 << 2 			  ## filter_h.h:243:42
  10aab4:    2d a2       	r5 = r5 << 2 			  ## filter_h.h:244:44
  10aab6:    ad dc       	r5 = -r5 			  ## filter_h.h:244:39
  10aab8:    46 e5 05 05 	d[r0 + 20] = r5, r6 			  ## filter_h.h:243:37
  10aabc:    55 aa       	r5 = r2 >> 10 			  ## filter_h.h:245:28
  10aabe:    d6 bf       	r6 = r2 >>> 31 			  ## filter_h.h:245:16
  10aac0:    36 b6       	r6 = r6 << 22 			  ## filter_h.h:245:28
  10aac2:    35 da       	r5 |= r6 			  ## filter_h.h:245:28
  10aac4:    12 b6       	r2 = r2 << 22 			  ## filter_h.h:245:28
  10aac6:    14 c7       	maccl = r2 			  ## filter_h.h:246:52
  10aac8:    2d c7       	macch = r5 			  ## filter_h.h:246:52
  10aaca:    81 05       	macc /= r1 (s) 			  ## filter_h.h:246:52
  10aacc:    22 c8       	r2 = maccl 			  ## filter_h.h:246:52
  10aace:    c2 69       	[r0 + 28] = r2 			  ## filter_h.h:246:37
  10aad0:    1a a2       	r2 = r3 << 2 			  ## filter_h.h:247:44
  10aad2:    92 dc       	r2 = -r2 			  ## filter_h.h:247:39
  10aad4:    02 6a       	[r0 + 32] = r2 			  ## filter_h.h:247:37
  10aad6:    62 aa       	r2 = r4 >> 10 			  ## filter_h.h:248:28
  10aad8:    e3 bf       	r3 = r4 >>> 31 			  ## filter_h.h:248:16
  10aada:    1b b6       	r3 = r3 << 22 			  ## filter_h.h:248:28
  10aadc:    1a da       	r2 |= r3 			  ## filter_h.h:248:28
  10aade:    23 b6       	r3 = r4 << 22 			  ## filter_h.h:248:28
  10aae0:    1c c7       	maccl = r3 			  ## filter_h.h:249:52
  10aae2:    15 c7       	macch = r2 			  ## filter_h.h:249:52
  10aae4:    81 05       	macc /= r1 (s) 			  ## filter_h.h:249:52
  10aae6:    21 c8       	r1 = maccl 			  ## filter_h.h:249:52
  10aae8:    41 6a       	[r0 + 36] = r1 			  ## filter_h.h:249:37
  10aaea:    30 c4       	{macch, maccl} = [sp++] 			  ## filter_h.h:249:37
  10aaec:    16 c0       	{pc, r6-r4} = [sp++] 			  ## filter_h.h:249:37


echo_parm_init:
  10aaee:    16 c2       	[--sp] = {rets, r6-r4} 			  ## echo_main.c:393:0
  10aaf0:    4a 48       	r2 = [r1 + 4] 			  ## echo_main.c:395:39
  10aaf2:    12 ac       	r2 = r2 << 12 			  ## echo_main.c:395:27
  10aaf4:    23 83       	r3 = 100 			  ## echo_main.c:395:47
  10aaf6:    40 fc 22 03 	r2 = r2 / r3 			  ## echo_main.c:395:47
  10aafa:    c2 68       	[r0 + 12] = r2 			  ## echo_main.c:395:21
  10aafc:    43 49       	r3 = [r0 + 20] 			  ## echo_main.c:395:21
  10aafe:    02 c6       	r2 = r0 			  ## echo_main.c:398:16
  10ab00:    24 e8 25 27 	r5 = [++ r2 = 156] 			  ## echo_main.c:398:16
  10ab04:    1c c6       	r4 = r3 			  ## echo_main.c:398:16
  10ab06:    45 20       	if (r5 == 0) goto 8 <echo_parm_init+0x22 : 10ab10 >			  ## echo_main.c:398:16
  10ab08:    0c 48       	r4 = [r1 + 0] 			  ## echo_main.c:400:42
  10ab0a:    1c 06       	r4 *= r3 			  ## echo_main.c:400:29
  10ab0c:    40 fc 44 05 	r4 = r4 / r5 			  ## echo_main.c:400:48
  10ab10:    23 ce       	cmp r4, r3			  ## echo_main.c:407:6
  10ab12:    d0 03       	ifs (nzcv <= 0) {			  ## echo_main.c:407:6
  10ab14:    23 c6       		r3 = r4 
                               	}			  ## echo_main.c:407:6
  10ab16:    14 49       	r4 = [r2 + 16] 			  ## echo_main.c:412:16
  10ab18:    64 20       	if (r4 == 0) goto 12 <echo_parm_init+0x38 : 10ab26 >			  ## echo_main.c:412:16
  10ab1a:    d3 68       	[r2 + 12] = r3 			  ## echo_main.c:419:23
  10ab1c:    9b 20       	if (r3 != 0) goto 18 <echo_parm_init+0x42 : 10ab30 >			  ## echo_main.c:419:23
  10ab1e:    00 ed 03 a8 	r3 = r0 + 168 			  ## echo_main.c:419:13
  10ab22:    fc 87       	r4 = -1 
  10ab24:    04 08       	goto 8 <echo_parm_init+0x40 : 10ab2e >
  10ab26:    93 68       	[r2 + 8] = r3 			  ## echo_main.c:414:22
  10ab28:    00 ed 03 a8 	r3 = r0 + 168 			  ## echo_main.c:414:22
  10ab2c:    04 80       	r4 = 0 
  10ab2e:    1c 68       	[r3 + 0] = r4 
  10ab30:    cb 48       	r3 = [r1 + 12] 			  ## echo_main.c:427:17
  10ab32:    23 21       	if (r3 == 0) goto 36 <echo_parm_init+0x6A : 10ab58 >			  ## echo_main.c:427:17
  10ab34:    03 69       	[r0 + 16] = r3 			  ## echo_main.c:429:25
  10ab36:    04 c6       	r4 = r0 			  ## echo_main.c:430:24
  10ab38:    64 e8 43 51 	[++ r4 = 324] = r3 			  ## echo_main.c:430:24
  10ab3c:    00 fc 35 03 	r5 = r3 * 3 			  ## echo_main.c:431:59
  10ab40:    65 68       	[r4 + 4] = r5 			  ## echo_main.c:431:24
  10ab42:    1b a1       	r3 = r3 << 1 			  ## echo_main.c:432:73
  10ab44:    27 ea 05 80 	r5 = 16777216 			  ## echo_main.c:432:39
  10ab48:    40 fc 53 03 	r3 = r5 / r3 			  ## echo_main.c:432:39
  10ab4c:    a3 68       	[r4 + 8] = r3 			  ## echo_main.c:432:28
  10ab4e:    01 ed 03 54 	r3 = r0 + 340 			  ## echo_main.c:433:13
  10ab52:    04 80       	r4 = 0 			  ## echo_main.c:433:13
  10ab54:    a5 82       	r5 = 84 			  ## echo_main.c:433:13
  10ab56:    05 08       	goto 10 <echo_parm_init+0x74 : 10ab62 >			  ## echo_main.c:433:13
  10ab58:    00 ed 03 10 	r3 = r0 + 16 
  10ab5c:    14 ea 00 40 	r4 = 16384 
  10ab60:    ad 82       	r5 = 85 
  10ab62:    06 80       	r6 = 0 
  10ab64:    1e 68       	[r3 + 0] = r6 
  10ab66:    2b a2       	r3 = r5 << 2 
  10ab68:    60 e7 04 03 	[r0 + r3] = r4 
  10ab6c:    88 48       	r0 = [r1 + 8] 			  ## echo_main.c:443:45
  10ab6e:    50 68       	[r2 + 4] = r0 			  ## echo_main.c:443:32
  10ab70:    00 80       	r0 = 0 			  ## echo_main.c:449:2
  10ab72:    16 c0       	{pc, r6-r4} = [sp++] 			  ## echo_main.c:449:2


echo_open:
  10ab74:    18 c2       	[--sp] = {rets, r8-r4} 			  ## echo_main.c:455:0
  10ab76:    f8 cd       	sp += -8 			  ## echo_main.c:455:0
  10ab78:    43 60       	[sp+ 4] = r3 			  ## echo_main.c:455:0
  10ab7a:    17 c6       	r7 = r2 			  ## echo_main.c:455:0
  10ab7c:    01 60       	[sp] = r1 			  ## echo_main.c:455:0
  10ab7e:    05 c6       	r5 = r0 			  ## echo_main.c:455:0
  10ab80:    04 80       	r4 = 0 			  ## echo_main.c:455:0
  10ab82:    01 80       	r1 = 0 			  ## echo_main.c:458:2
  10ab84:    12 ea ec 01 	r2 = 492 			  ## echo_main.c:458:2
  10ab88:    dc e1 8f 1e 	call -293936 <memset : c2f5c >			  ## echo_main.c:458:2
  10ab8c:    01 e5 72 02 	r2, r1 = d[r7 + 8] 
  10ab90:    01 ed 50 ec 	r0 = r5 + 492 			  ## echo_main.c:473:33
  10ab94:    e8 69       	[r5 + 28] = r0 			  ## echo_main.c:473:21
  10ab96:    11 06       	r1 *= r2 			  ## echo_main.c:473:21
  10ab98:    12 ea e8 03 	r2 = 1000 			  ## echo_main.c:473:21
  10ab9c:    40 fc 18 02 	r8 = r1 / r2 			  ## echo_main.c:473:21
  10aba0:    20 f7 82 01 	r2 = r8 << 1 			  ## echo_main.c:482:37
  10aba4:    01 80       	r1 = 0 			  ## echo_main.c:482:2
  10aba6:    dc e1 9f 1d 	call -293966 <memset : c2f5c >			  ## echo_main.c:482:2
  10abaa:    20 80       	r0 = 4 			  ## echo_main.c:482:2
  10abac:    00 ed 56 80 	r6 = r5 + 128 
  10abb0:    70 6e       	[r6 + -28] = r0 			  ## buf_manager.h:95:17
  10abb2:    44 e5 60 f7 	d[r6 + -36] = r0, r4 			  ## buf_manager.h:96:13
  10abb6:    70 49       	r0 = [r6 + 20] 			  ## buf_manager.h:40:49
  10abb8:    00 a2       	r0 = r0 << 2 			  ## buf_manager.h:40:18
  10abba:    40 d5       	r0 = r0 + r5 
  10abbc:    00 ed 04 6c 	r4 = r0 + 108 			  ## buf_manager.h:40:18
  10abc0:    20 c6       	r0 = r4 			  ## buf_manager.h:41:2
  10abc2:    01 80       	r1 = 0 			  ## buf_manager.h:41:2
  10abc4:    62 80       	r2 = 12 			  ## buf_manager.h:41:2
  10abc6:    dc e1 9f 1c 	call -293998 <memset : c2f5c >			  ## buf_manager.h:41:2
  10abca:    70 49       	r0 = [r6 + 20] 			  ## buf_manager.h:42:21
  10abcc:    c0 d0       	r0 = r0 + 3 			  ## buf_manager.h:42:21
  10abce:    70 69       	[r6 + 20] = r0 			  ## buf_manager.h:42:21
  10abd0:    b4 6e       	[r6 + -24] = r4 			  ## buf_manager.h:98:13
  10abd2:    30 4e       	r0 = [r6 + -32] 			  ## buf_manager.h:99:47
  10abd4:    02 a1       	r2 = r0 << 1 			  ## buf_manager.h:99:38
  10abd6:    20 c6       	r0 = r4 			  ## buf_manager.h:99:2
  10abd8:    01 80       	r1 = 0 			  ## buf_manager.h:99:2
  10abda:    dc e1 ff 1b 	call -294018 <memset : c2f5c >			  ## buf_manager.h:99:2
  10abde:    60 e8 58 05 	[r5 + 20] = r8 			  ## echo_main.c:495:20
  10abe2:    f8 48       	r0 = [r7 + 12] 			  ## echo_main.c:497:36
  10abe4:    f0 69       	[r6 + 28] = r0 			  ## echo_main.c:497:19
  10abe6:    78 48       	r0 = [r7 + 4] 			  ## echo_main.c:500:38
  10abe8:    28 68       	[r5 + 0] = r0 			  ## echo_main.c:500:21
  10abea:    38 48       	r0 = [r7 + 0] 			  ## echo_main.c:501:38
  10abec:    68 68       	[r5 + 4] = r0 			  ## echo_main.c:501:21
  10abee:    b0 49       	r0 = [r6 + 24] 			  ## echo_main.c:504:16
  10abf0:    30 21       	if (r0 == 0) goto 38 <echo_open+0xA4 : 10ac18 >			  ## echo_main.c:504:16
  10abf2:    00 ed 54 c4 	r4 = r5 + 196 			  ## echo_main.c:506:25
  10abf6:    20 c6       	r0 = r4 			  ## echo_main.c:506:3
  10abf8:    31 82       	r1 = 70 			  ## echo_main.c:506:3
  10abfa:    ff e1 9f f0 	call -494 <filter_init : 10aa10 >			  ## echo_main.c:506:3
  10abfe:    01 ed 57 00 	r7 = r5 + 256 			  ## echo_main.c:507:15
  10ac02:    38 c6       	r0 = r7 			  ## echo_main.c:507:3
  10ac04:    11 ea 96 00 	r1 = 150 			  ## echo_main.c:507:3
  10ac08:    ff e1 2f f0 	call -508 <filter_init : 10aa10 >			  ## echo_main.c:507:3
  10ac0c:    20 c6       	r0 = r4 			  ## echo_main.c:509:3
  10ac0e:    ff e1 6f f3 	call -404 <iirfilter_cal_coef : 10aa7e >			  ## echo_main.c:509:3
  10ac12:    38 c6       	r0 = r7 			  ## echo_main.c:510:3
  10ac14:    ff e1 3f f3 	call -410 <iirfilter_cal_coef : 10aa7e >			  ## echo_main.c:510:3
  10ac18:    28 c6       	r0 = r5 			  ## echo_main.c:514:2
  10ac1a:    01 40       	r1 = [sp] 			  ## echo_main.c:514:2
  10ac1c:    ff e1 7f f6 	call -306 <echo_parm_init : 10aaee >			  ## echo_main.c:514:2
  10ac20:    70 4a       	r0 = [r6 + 36] 			  ## echo_main.c:516:32
  10ac22:    a8 68       	[r5 + 8] = r0 			  ## echo_main.c:516:20
  10ac24:    01 ed 50 5c 	r0 = r5 + 348 			  ## echo_main.c:518:20
  10ac28:    41 40       	r1 = [sp+ 4] 			  ## echo_main.c:518:2
  10ac2a:    42 80       	r2 = 8 			  ## echo_main.c:518:2
  10ac2c:    dc e1 0f 19 	call -294112 <memcpy : c2f50 >			  ## echo_main.c:518:2
  10ac30:    00 80       	r0 = 0 			  ## echo_main.c:520:2
  10ac32:    08 cd       	sp += 8 			  ## echo_main.c:520:2
  10ac34:    18 c0       	{pc, r8-r4} = [sp++] 			  ## echo_main.c:520:2


regist_audio_adc_channel:
  10ac36:    18 c2       	[--sp] = {rets, r8-r4} 			  ## adc_api.c:96:0
  10ac38:    02 2b       	r2 = [addr(48)]  <.GCPI299_0 : 10ac68 >			  ## adc_api.c:96:0
  10ac3a:    13 d1       	r3 = r2 + 4 			  ## adc_api.c:96:0
  10ac3c:    00 e8 24 04 	r4 = b[r2 + 16] 			  ## adc_api.c:96:0
  10ac40:    07 80       	r7 = 0 			  ## adc_api.c:96:0
  10ac42:    50 ea 01 00 	r8 = 1 			  ## adc_api.c:96:0
  10ac46:    3e c6       	r6 = r7 			  ## adc_api.c:96:0
  10ac48:    0e 98       	cmp r6, 1			  ## adc_api.c:98:5
  10ac4a:    0d 18       	if (nzcv > 0) goto 26 <regist_audio_adc_channel+0x30 : 10ac66 >			  ## adc_api.c:98:5
  10ac4c:    80 f1 45 06 	r5 = r4 & setbit(r6) 			  ## adc_api.c:99:32
  10ac50:    1b d1       	r3 = r3 + 4 			  ## adc_api.c:99:13
  10ac52:    77 d0       	r7 = r6 + 1 			  ## adc_api.c:98:42
  10ac54:    8d 27       	if (r5 != 0) goto -16 <regist_audio_adc_channel+0x10 : 10ac46 >			  ## adc_api.c:98:42
  10ac56:    00 f7 84 06 	r4 = r8 << r6 			  ## adc_api.c:99:34
  10ac5a:    98 6f       	[r3 + -8] = r0 			  ## adc_api.c:102:32
  10ac5c:    19 68       	[r3 + 0] = r1 			  ## adc_api.c:103:31
  10ac5e:    04 e8 20 04 	r0 = b[++ r2 = 16] 			  ## adc_api.c:104:28
  10ac62:    20 da       	r0 |= r4 			  ## adc_api.c:104:28
  10ac64:    10 78       	b[r2 + 0] = r0 			  ## adc_api.c:104:28
  10ac66:    18 c0       	{pc, r8-r4} = [sp++] 


.GCPI299_0:
  10ac68:    48 26 00 00     < 9800 : 0x2648 >

audio_adc_enable:
  10ac6c:    80 28       	r0 = [addr(8)]  <.GCPI300_0 : 10ac74 >			  ## audio_adc.c:128:0
  10ac6e:    00 e2 00 03 	[r0 + 0] |= 3 			  ## audio_adc.c:132:22
  10ac72:    20 00       	rts			  ## audio_adc.c:133:1


.GCPI300_0:
  10ac74:    1c 14 09 00     < 594972 : 0x9141C >

dac_mute:
  10ac78:    c1 2a       	r1 = [addr(44)]  <.GCPI301_0 : 10aca4 >			  ## dac_api.c:286:0
  10ac7a:    00 e8 12 08 	r2 = b[r1 + 32] 			  ## dac_api.c:286:0
  10ac7e:    60 20       	if (r0 == 0) goto 12 <dac_mute+0x14 : 10ac8c >			  ## dac_api.c:287:9
  10ac80:    00 f3 20 01 	r0 = r2 | 1 			  ## dac_api.c:288:22
  10ac84:    40 e8 10 08 	b[r1 + 32] = r0 			  ## dac_api.c:288:22
  10ac88:    00 80       	r0 = 0 			  ## dac_api.c:288:22
  10ac8a:    0a 08       	goto 20 <dac_mute+0x28 : 10aca0 >			  ## dac_api.c:288:22
  10ac8c:    c0 f3 20 01 	r0 = r2 & (~1) 			  ## dac_api.c:291:22
  10ac90:    0a c6       	r2 = r1 			  ## dac_api.c:291:22
  10ac92:    44 e8 20 08 	b[++ r2 = 32] = r0 			  ## dac_api.c:291:22
  10ac96:    d0 5f       	r0 = b[r2 + -1] 			  ## dac_api.c:292:27
  10ac98:    00 a1       	r0 = r0 << 1 			  ## dac_api.c:292:27
  10ac9a:    c2 28       	r2 = [addr(12)]  <.GCPI301_1 : 10aca8 >			  ## dac_api.c:292:27
  10ac9c:    10 e7 20 00 	r0 = h[r2 + r0] 			  ## dac_api.c:292:27
  10aca0:    c8 71       	h[r1 + 28] = r0 
  10aca2:    20 00       	rts


.GCPI301_0:
  10aca4:    a4 25 00 00     < 9636 : 0x25A4 >

.GCPI301_1:
  10aca8:    40 61 11 00     < 1139008 : 0x116140 >

unregist_audio_adc_channel:
  10acac:    16 c2       	[--sp] = {rets, r6-r4} 			  ## adc_api.c:111:0
  10acae:    04 c6       	r4 = r0 			  ## adc_api.c:111:0
  10acb0:    85 2c       	r5 = [addr(72)]  <.GCPI302_0 : 10acf8 >			  ## adc_api.c:111:0
  10acb2:    00 e8 51 04 	r1 = b[r5 + 16] 			  ## adc_api.c:111:0
  10acb6:    00 80       	r0 = 0 			  ## adc_api.c:111:0
  10acb8:    0a 80       	r2 = 1 			  ## adc_api.c:111:0
  10acba:    08 08       	goto 16 <unregist_audio_adc_channel+0x20 : 10accc >			  ## adc_api.c:111:0
  10acbc:    80 f1 13 00 	r3 = r1 & setbit(r0) 			  ## adc_api.c:116:38
  10acc0:    03 10       	ifs (nzcv == 0) goto 6 <unregist_audio_adc_channel+0x1C : 10acc8 >			  ## adc_api.c:116:38
  10acc2:    2b 48       	r3 = [r5 + 0] 			  ## adc_api.c:120:13
  10acc4:    1c ce       	cmp r3, r4			  ## adc_api.c:120:13
  10acc6:    05 10       	ifs (nzcv == 0) goto 10 <unregist_audio_adc_channel+0x26 : 10acd2 >			  ## adc_api.c:120:13
  10acc8:    2d d1       	r5 = r5 + 4 			  ## adc_api.c:115:5
  10acca:    40 d0       	r0 = r0 + 1 			  ## adc_api.c:115:42
  10accc:    08 98       	cmp r0, 1			  ## adc_api.c:115:5
  10acce:    f6 19       	if (nzcv <= 0) goto -20 <unregist_audio_adc_channel+0x10 : 10acbc >			  ## adc_api.c:115:5
  10acd0:    11 08       	goto 34 <unregist_audio_adc_channel+0x48 : 10acf4 >			  ## adc_api.c:115:5
  10acd2:    00 f7 26 00 	r6 = r2 << r0 			  ## adc_api.c:116:40
  10acd6:    dc e1 5f 12 	call -294326 <local_irq_disable : c2f24 >			  ## adc_api.c:121:13
  10acda:    c0 29       	r0 = [addr(28)]  <.GCPI302_0 : 10acf8 >			  ## adc_api.c:122:32
  10acdc:    04 e8 01 04 	r1 = b[++ r0 = 16] 			  ## adc_api.c:122:32
  10ace0:    c0 f0 11 06 	r1 = r1 & ~r6 			  ## adc_api.c:122:32
  10ace4:    01 78       	b[r0 + 0] = r1 			  ## adc_api.c:122:32
  10ace6:    00 80       	r0 = 0 			  ## adc_api.c:122:32
  10ace8:    28 68       	[r5 + 0] = r0 			  ## adc_api.c:124:36
  10acea:    a8 68       	[r5 + 8] = r0 			  ## adc_api.c:125:35
  10acec:    00 e3 43 02 	[r4 + 12] &= (~2) 			  ## adc_api.c:126:24
  10acf0:    dc e1 6f 11 	call -294356 <local_irq_enable : c2f20 >			  ## adc_api.c:127:13
  10acf4:    16 c0       	{pc, r6-r4} = [sp++] 
  10acf6:    00 00       	nop


.GCPI302_0:
  10acf8:    48 26 00 00     < 9800 : 0x2648 >

audio_adc_disable:
  10acfc:    80 28       	r0 = [addr(8)]  <.GCPI303_0 : 10ad04 >			  ## audio_adc.c:136:0
  10acfe:    00 e3 00 03 	[r0 + 0] &= (~3) 			  ## audio_adc.c:137:22
  10ad02:    20 00       	rts			  ## audio_adc.c:138:1


.GCPI303_0:
  10ad04:    1c 14 09 00     < 594972 : 0x9141C >

rec_phy_suspend:
  10ad08:    80 28       	r0 = [addr(8)]  <.GCPI304_0 : 10ad10 >			  ## encoder_api.c:37:0
  10ad0a:    00 ed 00 e4 	r0 = r0 + 228 			  ## encoder_api.c:38:5
  10ad0e:    ce 0f       	goto -100 <unregist_audio_adc_channel : 10acac >			  ## encoder_api.c:38:5


.GCPI304_0:
  10ad10:    60 1c 00 00     < 7264 : 0x1C60 >

encode_file_fs_close:
  10ad14:    14 c2       	[--sp] = {rets, r4} 			  ## toy_record.c:126:0
  10ad16:    c4 29       	r4 = [addr(28)]  <.GCPI305_0 : 10ad34 >			  ## toy_record.c:127:5
  10ad18:    00 ed 40 74 	r0 = r4 + 116 			  ## toy_record.c:127:5
  10ad1c:    fe e1 2f 9c 	call -11388 <vfs_file_close : 1080a4 >			  ## toy_record.c:127:5
  10ad20:    00 ed 40 70 	r0 = r4 + 112 			  ## toy_record.c:128:5
  10ad24:    fe e1 6f 9f 	call -11284 <vfs_fs_close : 108114 >			  ## toy_record.c:128:5
  10ad28:    00 e8 40 1f 	r0 = b[r4 + 124] 			  ## toy_record.c:129:5
  10ad2c:    ff e1 8f 5b 	call -5264 <device_close : 1098a0 >			  ## toy_record.c:129:5
  10ad30:    14 c0       	{pc, r4} = [sp++] 			  ## toy_record.c:129:5
  10ad32:    00 00       	nop			  ## toy_record.c:129:5


.GCPI305_0:
  10ad34:    60 1d 00 00     < 7520 : 0x1D60 >

encode_stop:
  10ad38:    17 c2       	[--sp] = {rets, r7-r4} 			  ## toy_record.c:133:0
  10ad3a:    fc cd       	sp += -4 			  ## toy_record.c:133:0
  10ad3c:    4d 2b       	r5 = [addr(180)]  <.GCPI306_0 : 10adf0 >			  ## toy_record.c:134:25
  10ad3e:    20 e8 50 20 	r0 = [r5 + 128] 			  ## toy_record.c:134:25
  10ad42:    08 98       	cmp r0, 1			  ## toy_record.c:134:9
  10ad44:    50 11       	ifs (nzcv != 0) goto 160 <encode_stop+0xAE : 10ade6 >			  ## toy_record.c:134:9
  10ad46:    20 e8 54 1d 	r4 = [r5 + 116] 			  ## toy_record.c:135:26
  10ad4a:    d8 04       	call -80 <audio_adc_disable : 10acfc >			  ## encoder_api.c:62:5
  10ad4c:    8e 2a       	r6 = [addr(168)]  <.GCPI306_1 : 10adf4 >			  ## encoder_api.c:63:5
  10ad4e:    30 c6       	r0 = r6 			  ## encoder_api.c:63:5
  10ad50:    24 e8 01 3c 	r1 = [++ r0 = 240] 			  ## encoder_api.c:63:5
  10ad54:    92 ea fe fd 	r2 = -514 			  ## encoder_api.c:63:5
  10ad58:    91 da       	r1 &= r2 			  ## encoder_api.c:63:5
  10ad5a:    01 68       	[r0 + 0] = r1 			  ## encoder_api.c:63:5
  10ad5c:    c8 29       	r0 = [addr(156)]  <.GCPI306_2 : 10adf8 >			  ## encoder_api.c:64:5
  10ad5e:    dc e1 df 13 	call -294278 <xprintf : c2fdc >			  ## encoder_api.c:64:5
  10ad62:    30 4a       	r0 = [r6 + 32] 			  ## encoder_api.c:65:17
  10ad64:    b0 23       	if (r0 == 0) goto 118 <encode_stop+0xA4 : 10addc >			  ## encoder_api.c:65:17
  10ad66:    10 e2 50 02 	[r5 + 64] |= 2 			  ## encoder_api.c:69:17
  10ad6a:    08 29       	r0 = [addr(144)]  <.GCPI306_3 : 10adfc >			  ## encoder_api.c:71:5
  10ad6c:    dc e1 6f 13 	call -294292 <xprintf : c2fdc >			  ## encoder_api.c:71:5
  10ad70:    0b 08       	goto 22 <encode_stop+0x50 : 10ad88 >			  ## encoder_api.c:71:5
  10ad72:    20 e8 50 10 	r0 = [r5 + 64] 			  ## encoder_api.c:73:18
  10ad76:    00 f4 00 04 	tst r0, 4			  ## encoder_api.c:73:13
  10ad7a:    09 11       	ifs (nzcv != 0) goto 18 <encode_stop+0x56 : 10ad8e >			  ## encoder_api.c:73:13
  10ad7c:    08 80       	r0 = 1 			  ## encoder_api.c:76:9
  10ad7e:    dc e1 3f 0d 	call -294490 <bit_set_swi : c2f28 >			  ## encoder_api.c:76:9
  10ad82:    20 83       	r0 = 100 			  ## encoder_api.c:77:9
  10ad84:    7a e1 6f 97 	call -1092884 <delay : 74 >			  ## encoder_api.c:77:9
  10ad88:    e8 4a       	r0 = [r5 + 44] 			  ## encoder_api.c:72:17
  10ad8a:    80 49       	r0 = [r0 + 24] 			  ## encoder_api.c:72:17
  10ad8c:    28 27       	if (r0 != 0) goto -28 <encode_stop+0x3A : 10ad72 >			  ## encoder_api.c:72:17
  10ad8e:    00 2f       	r0 = [addr(112)]  <.GCPI306_4 : 10ae00 >			  ## encoder_api.c:80:5
  10ad90:    dc e1 4f 12 	call -294328 <xprintf : c2fdc >			  ## encoder_api.c:80:5
  10ad94:    0b 08       	goto 22 <encode_stop+0x74 : 10adac >			  ## encoder_api.c:80:5
  10ad96:    20 e8 50 10 	r0 = [r5 + 64] 			  ## encoder_api.c:82:18
  10ad9a:    00 f4 00 04 	tst r0, 4			  ## encoder_api.c:82:13
  10ad9e:    09 11       	ifs (nzcv != 0) goto 18 <encode_stop+0x7A : 10adb2 >			  ## encoder_api.c:82:13
  10ada0:    10 80       	r0 = 2 			  ## encoder_api.c:85:9
  10ada2:    dc e1 1f 0c 	call -294526 <bit_set_swi : c2f28 >			  ## encoder_api.c:85:9
  10ada6:    20 83       	r0 = 100 			  ## encoder_api.c:86:9
  10ada8:    7a e1 4f 96 	call -1092920 <delay : 74 >			  ## encoder_api.c:86:9
  10adac:    28 4b       	r0 = [r5 + 48] 			  ## encoder_api.c:81:17
  10adae:    80 49       	r0 = [r0 + 24] 			  ## encoder_api.c:81:17
  10adb0:    28 27       	if (r0 != 0) goto -28 <encode_stop+0x5E : 10ad96 >			  ## encoder_api.c:81:17
  10adb2:    00 2d       	r0 = [addr(80)]  <.GCPI306_5 : 10ae04 >			  ## encoder_api.c:88:5
  10adb4:    dc e1 2f 11 	call -294364 <xprintf : c2fdc >			  ## encoder_api.c:88:5
  10adb8:    10 e3 50 01 	[r5 + 64] &= (~1) 			  ## encoder_api.c:89:17
  10adbc:    e8 80       	r0 = 29 			  ## encoder_api.c:90:5
  10adbe:    ff e1 bf 99 	call -3274 <HWI_Uninstall : 10a0f8 >			  ## encoder_api.c:90:5
  10adc2:    f0 80       	r0 = 30 			  ## encoder_api.c:91:5
  10adc4:    ff e1 8f 99 	call -3280 <HWI_Uninstall : 10a0f8 >			  ## encoder_api.c:91:5
  10adc8:    07 80       	r7 = 0 			  ## encoder_api.c:91:5
  10adca:    07 60       	[sp] = r7 			  ## encoder_api.c:93:9
  10adcc:    02 90       	r2 = sp + 0 			  ## encoder_api.c:93:9
  10adce:    20 c6       	r0 = r4 			  ## encoder_api.c:94:11
  10add0:    b1 80       	r1 = 22 			  ## encoder_api.c:94:11
  10add2:    fe e1 ff b4 	call -10594 <vfs_ioctl : 108474 >			  ## encoder_api.c:94:11
  10add6:    98 04       	call -208 <rec_phy_suspend : 10ad08 >			  ## encoder_api.c:95:5
  10add8:    37 6a       	[r6 + 32] = r7 			  ## encoder_api.c:96:13
  10adda:    01 08       	goto 2 <encode_stop+0xA6 : 10adde >			  ## encoder_api.c:96:13
  10addc:    95 04       	call -214 <rec_phy_suspend : 10ad08 >			  ## encoder_api.c:66:9
  10adde:    9a 04       	call -204 <encode_file_fs_close : 10ad14 >			  ## toy_record.c:136:9
  10ade0:    00 80       	r0 = 0 			  ## toy_record.c:137:25
  10ade2:    60 e8 50 20 	[r5 + 128] = r0 			  ## toy_record.c:137:25
  10ade6:    fe e1 7f 5b 	call -13458 <audio_adc_off_api : 107958 >			  ## toy_record.c:139:5
  10adea:    04 cd       	sp += 4 			  ## toy_record.c:139:5
  10adec:    17 c0       	{pc, r7-r4} = [sp++] 			  ## toy_record.c:139:5
  10adee:    00 00       	nop			  ## toy_record.c:139:5


.GCPI306_0:
  10adf0:    60 1d 00 00     < 7520 : 0x1D60 >

.GCPI306_1:
  10adf4:    60 1c 00 00     < 7264 : 0x1C60 >

.GCPI306_2:
  10adf8:    df ac 11 00     < 1158367 : 0x11ACDF >

.GCPI306_3:
  10adfc:    fd ac 11 00     < 1158397 : 0x11ACFD >

.GCPI306_4:
  10ae00:    1d ad 11 00     < 1158429 : 0x11AD1D >

.GCPI306_5:
  10ae04:    3d ad 11 00     < 1158461 : 0x11AD3D >

mp2_open:
  10ae08:    16 c2       	[--sp] = {rets, r6-r4} 			  ## mp2_test.c:43:0
  10ae0a:    16 c6       	r6 = r2 			  ## mp2_test.c:43:0
  10ae0c:    0d c6       	r5 = r1 			  ## mp2_test.c:43:0
  10ae0e:    04 c6       	r4 = r0 			  ## mp2_test.c:43:0
  10ae10:    01 80       	r1 = 0 			  ## mp2_test.c:45:2
  10ae12:    12 ea 14 0c 	r2 = 3092 			  ## mp2_test.c:45:2
  10ae16:    dc e1 1f 0a 	call -294590 <memset : c2f5c >			  ## mp2_test.c:45:2
  10ae1a:    0b ed 40 f4 	r0 = r4 + 3060 			  ## mp2_test.c:46:19
  10ae1e:    31 c6       	r1 = r6 			  ## mp2_test.c:46:2
  10ae20:    62 80       	r2 = 12 			  ## mp2_test.c:46:2
  10ae22:    dc e1 5f 09 	call -294614 <memcpy : c2f50 >			  ## mp2_test.c:46:2
  10ae26:    00 82       	r0 = 64 			  ## mp2_test.c:47:20
  10ae28:    0c ed 46 08 	r6 = r4 + 3080 			  ## mp2_test.c:47:20
  10ae2c:    b0 68       	[r6 + 8] = r0 			  ## mp2_test.c:47:20
  10ae2e:    28 50       	r0 = h[r5 + 0] 			  ## mp2_test.c:48:29
  10ae30:    13 ea 80 3e 	r3 = 16000 			  ## mp2_test.c:49:6
  10ae34:    10 20       	if (r0 == 0) goto 2 <mp2_open+0x30 : 10ae38 >			  ## mp2_test.c:49:6
  10ae36:    03 c6       	r3 = r0 			  ## mp2_test.c:49:6
  10ae38:    a3 70       	h[r4 + 8] = r3 			  ## mp2_test.c:48:16
  10ae3a:    28 54       	r0 = h[r5 + 2] 			  ## mp2_test.c:53:33
  10ae3c:    a0 74       	h[r4 + 10] = r0 			  ## mp2_test.c:53:20
  10ae3e:    51 29       	r1 = [addr(276)]  <.GCPI307_4 : 10af54 >			  ## mp2_test.c:54:53
  10ae40:    01 06       	r1 *= r0 			  ## mp2_test.c:54:53
  10ae42:    c0 fc 11 03 	r1 = r1 / r3 (s) 			  ## mp2_test.c:54:59
  10ae46:    49 a3       	r1 = r1 >> 3 			  ## mp2_test.c:54:75
  10ae48:    8c f3 15 7f 	r5 = r1 & 65280 			  ## mp2_test.c:55:6
  10ae4c:    12 ea ff 00 	r2 = 255 
  10ae50:    80 ef 50 ff 	cmp r5, 255			  ## mp2_test.c:55:6
  10ae54:    90 03       	if (nzcv <= 0) {			  ## mp2_test.c:55:6
  10ae56:    0a c6       		r2 = r1 
                               	}			  ## mp2_test.c:55:6
  10ae58:    62 74       	h[r4 + 6] = r2 			  ## mp2_test.c:54:22
  10ae5a:    09 80       	r1 = 1 			  ## encodemp2.c:185:11
  10ae5c:    0c ef 30 fa 	cmp r3, 32000			  ## encodemp2.c:185:11
  10ae60:    20 03       	if (nzcv >= 0) {			  ## encodemp2.c:185:11
  10ae62:    01 80       		r1 = 0 
                               	}			  ## encodemp2.c:185:11
  10ae64:    00 f7 32 01 	r2 = r3 << r1 			  ## encodemp2.c:185:6
  10ae68:    19 80       	r1 = 3 
  10ae6a:    0c ef 30 fa 	cmp r3, 32000			  ## encodemp2.c:185:6
  10ae6e:    20 03       	if (nzcv >= 0) {			  ## encodemp2.c:185:6
  10ae70:    01 80       		r1 = 0 
                               	}			  ## encodemp2.c:185:6
  10ae72:    0c ef 20 fa 	cmp r2, 32000			  ## encodemp2.c:191:6
  10ae76:    b1 03       	ifs (nzcv < 0) {			  ## encodemp2.c:194:23
  10ae78:    c9 d0       		r1 = r1 + 3 			  ## encodemp2.c:194:23
  10ae7a:    12 a1       		r2 = r2 << 1 
                               	}			  ## encodemp2.c:193:15
  10ae7c:    21 7e       	b[r4 + 3] = r1 			  ## encodemp2.c:183:22
  10ae7e:    0b 80       	r3 = 1 			  ## encodemp2.c:183:22
  10ae80:    15 ea 7f bb 	r5 = 47999 			  ## encodemp2.c:197:11
  10ae84:    15 ce       	cmp r2, r5			  ## encodemp2.c:197:6
  10ae86:    09 1c       	ifs (nzcv > 0) goto 18 <mp2_open+0x92 : 10ae9a >			  ## encodemp2.c:197:6
  10ae88:    03 80       	r3 = 0 
  10ae8a:    15 ea 43 ac 	r5 = 44099 			  ## encodemp2.c:201:16
  10ae8e:    15 ce       	cmp r2, r5			  ## encodemp2.c:201:11
  10ae90:    04 1c       	ifs (nzcv > 0) goto 8 <mp2_open+0x92 : 10ae9a >			  ## encodemp2.c:201:11
  10ae92:    13 80       	r3 = 2 
  10ae94:    0c ef 20 fa 	cmp r2, 32000			  ## encodemp2.c:205:11
  10ae98:    02 1b       	ifs (nzcv < 0) goto 4 <mp2_open+0x96 : 10ae9e >			  ## encodemp2.c:205:11
  10ae9a:    c9 d4       	r1 = r1 + r3 
  10ae9c:    21 7e       	b[r4 + 3] = r1 
  10ae9e:    09 c9       	r1 = r1.b 			  ## encodemp2.c:210:18
  10aea0:    09 a1       	r1 = r1 << 1 			  ## encodemp2.c:210:18
  10aea2:    0a 2a       	r2 = [addr(160)]  <.GCPI307_0 : 10af44 >			  ## encodemp2.c:210:18
  10aea4:    10 e7 21 01 	r1 = h[r2 + r1] 			  ## encodemp2.c:210:18
  10aea8:    a1 70       	h[r4 + 8] = r1 			  ## encodemp2.c:210:16
  10aeaa:    0d fc 00 7a 	r0 = r0 * 16000 			  ## encodemp2.c:217:27
  10aeae:    40 fc 01 01 	r1 = r0 / r1 			  ## encodemp2.c:217:32
  10aeb2:    00 80       	r0 = 0 
  10aeb4:    01 9a       	cmp r1, 64			  ## encodemp2.c:218:8
  10aeb6:    0a 18       	if (nzcv > 0) goto 20 <mp2_open+0xC4 : 10aecc >			  ## encodemp2.c:218:8
  10aeb8:    08 80       	r0 = 1 
  10aeba:    e1 99       	cmp r1, 60			  ## encodemp2.c:222:13
  10aebc:    07 18       	if (nzcv > 0) goto 14 <mp2_open+0xC4 : 10aecc >			  ## encodemp2.c:222:13
  10aebe:    10 80       	r0 = 2 
  10aec0:    81 99       	cmp r1, 48			  ## encodemp2.c:226:14
  10aec2:    04 18       	if (nzcv > 0) goto 8 <mp2_open+0xC4 : 10aecc >			  ## encodemp2.c:226:14
  10aec4:    18 80       	r0 = 3 			  ## encodemp2.c:233:4
  10aec6:    41 99       	cmp r1, 40			  ## encodemp2.c:233:4
  10aec8:    90 03       	if (nzcv <= 0) {			  ## encodemp2.c:233:4
  10aeca:    20 80       		r0 = 4 
                               	}			  ## encodemp2.c:233:4
  10aecc:    01 c9       	r1 = r0.b 			  ## encodemp2.c:366:22
  10aece:    82 2f       	r2 = [addr(120)]  <.GCPI307_1 : 10af48 >			  ## encodemp2.c:366:22
  10aed0:    52 d4       	r2 = r2 + r1 			  ## encodemp2.c:366:22
  10aed2:    12 58       	r2 = b[r2 + 0] 			  ## encodemp2.c:366:22
  10aed4:    22 7a       	b[r4 + 1] = r2 			  ## encodemp2.c:366:19
  10aed6:    09 a2       	r1 = r1 << 2 			  ## encodemp2.c:367:25
  10aed8:    42 2f       	r2 = [addr(116)]  <.GCPI307_2 : 10af4c >			  ## encodemp2.c:367:25
  10aeda:    20 e7 22 01 	r2 = [r2 + r1] 			  ## encodemp2.c:367:25
  10aede:    b2 6f       	[r6 + -8] = r2 			  ## encodemp2.c:367:23
  10aee0:    02 2f       	r2 = [addr(112)]  <.GCPI307_3 : 10af50 >			  ## encodemp2.c:368:28
  10aee2:    20 e7 21 01 	r1 = [r2 + r1] 			  ## encodemp2.c:368:28
  10aee6:    f1 6f       	[r6 + -4] = r1 			  ## encodemp2.c:368:26
  10aee8:    20 7c       	b[r4 + 2] = r0 			  ## encodemp2.c:370:18
  10aeea:    0b ed 40 74 	r0 = r4 + 2932 			  ## encodemp2.c:372:2
  10aeee:    11 ea 00 04 	r1 = 1024 			  ## encodemp2.c:372:2
  10aef2:    68 e8 01 01 	[r0 ++= 4] = r1 			  ## encodemp2.c:374:28
  10aef6:    01 8f       	r1 += -32 			  ## encodemp2.c:372:11
  10aef8:    fc 11       	ifs (nzcv != 0) goto -8 <mp2_open+0xEA : 10aef2 >			  ## encodemp2.c:372:2
  10aefa:    c0 80       	r0 = 24 			  ## encodemp2.c:380:21
  10aefc:    06 ed 41 54 	r1 = r4 + 1620 			  ## encodemp2.c:380:21
  10af00:    c8 7d       	b[r1 + -2] = r0 			  ## encodemp2.c:380:21
  10af02:    68 83       	r0 = 109 			  ## encodemp2.c:381:26
  10af04:    c8 7f       	b[r1 + -1] = r0 			  ## encodemp2.c:381:26
  10af06:    a0 82       	r0 = 84 			  ## encodemp2.c:382:26
  10af08:    08 78       	b[r1 + 0] = r0 			  ## encodemp2.c:382:26
  10af0a:    08 7a       	b[r1 + 1] = r0 			  ## encodemp2.c:383:26
  10af0c:    20 5c       	r0 = b[r4 + 2] 			  ## encodemp2.c:384:38
  10af0e:    00 a4       	r0 = r0 << 4 			  ## encodemp2.c:384:45
  10af10:    22 5e       	r2 = b[r4 + 3] 			  ## encodemp2.c:384:72
  10af12:    c0 f3 22 f0 	r2 = r2 & (~240) 			  ## encodemp2.c:384:83
  10af16:    10 da       	r0 |= r2 			  ## encodemp2.c:384:51
  10af18:    08 7c       	b[r1 + 2] = r0 			  ## encodemp2.c:384:26
  10af1a:    60 5c       	r0 = b[r4 + 6] 			  ## encodemp2.c:385:37
  10af1c:    08 7e       	b[r1 + 3] = r0 			  ## encodemp2.c:385:26
  10af1e:    06 ed 41 53 	r1 = r4 + 1619 			  ## encodemp2.c:381:3
  10af22:    28 80       	r0 = 5 			  ## encodemp2.c:381:3
  10af24:    40 e5 61 00 	d[r6 + 0] = r1, r0 			  ## encodemp2.c:386:23
  10af28:    f0 4e       	r0 = [r6 + -20] 			  ## encodemp2.c:389:57
  10af2a:    73 4f       	r3 = [r6 + -12] 			  ## encodemp2.c:389:27
  10af2c:    2a 80       	r2 = 5 			  ## encodemp2.c:389:9
  10af2e:    ab 01       	call r3			  ## encodemp2.c:389:9
  10af30:    31 50       	r1 = h[r6 + 0] 			  ## encodemp2.c:390:27
  10af32:    09 d6       	r1 = r1 - r0 			  ## encodemp2.c:390:27
  10af34:    31 70       	h[r6 + 0] = r1 			  ## encodemp2.c:390:27
  10af36:    0c ed 41 0a 	r1 = r4 + 3082 			  ## encodemp2.c:387:12
  10af3a:    09 50       	r1 = h[r1 + 0] 			  ## encodemp2.c:391:25
  10af3c:    40 d4       	r0 = r0 + r1 			  ## encodemp2.c:391:25
  10af3e:    30 74       	h[r6 + 2] = r0 			  ## encodemp2.c:391:25
  10af40:    16 c0       	{pc, r6-r4} = [sp++] 			  ## encodemp2.c:391:25
  10af42:    00 00       	nop			  ## encodemp2.c:391:25


.GCPI307_0:
  10af44:    26 a5 11 00     < 1156390 : 0x11A526 >

.GCPI307_1:
  10af48:    38 a5 11 00     < 1156408 : 0x11A538 >

.GCPI307_2:
  10af4c:    40 a5 11 00     < 1156416 : 0x11A540 >

.GCPI307_3:
  10af50:    54 a5 11 00     < 1156436 : 0x11A554 >

.GCPI307_4:
  10af54:    00 dc 05 00     < 384000 : 0x5DC00 >

usb_set_die:
  10af58:    48 88       	r0 += 9 			  ## gpio.c:107:0
  10af5a:    0a 80       	r2 = 1 			  ## gpio.c:107:0
  10af5c:    02 cf       	r2 <<= r0 			  ## gpio.c:107:0
  10af5e:    01 98       	cmp r1, 0			  ## gpio.c:109:9
  10af60:    40 29       	r0 = [addr(20)]  <.GCPI308_0 : 10af74 >			  ## gpio.c:109:9
  10af62:    09 03       	ifs (nzcv == 0) {			  ## gpio.c:112:30
  10af64:    01 48       		r1 = [r0 + 0] 			  ## gpio.c:112:30
  10af66:    c0 f0 11 02 		r1 = r1 & ~r2 
                               	} else {			  ## gpio.c:112:30
  10af6a:    01 48       		r1 = [r0 + 0] 			  ## gpio.c:110:30
  10af6c:    11 da       		r1 |= r2 
                               	}			  ## gpio.c:110:30
  10af6e:    01 68       	[r0 + 0] = r1 			  ## gpio.c:110:30
  10af70:    20 00       	rts			  ## gpio.c:110:30
  10af72:    00 00       	nop			  ## gpio.c:110:30


.GCPI308_0:
  10af74:    90 00 09 00     < 589968 : 0x90090 >

gpio2reg:
  10af78:    01 c6       	r1 = r0 			  ## gpio.c:41:0
  10af7a:    00 80       	r0 = 0 			  ## gpio.c:41:0
  10af7c:    29 99       	cmp r1, 37			  ## gpio.c:42:9
  10af7e:    93 03       	if (nzcv <= 0) {			  ## gpio.c:45:31
  10af80:    48 a4       		r0 = r1 >> 4 			  ## gpio.c:45:31
  10af82:    00 a2       		r0 = r0 << 2 			  ## gpio.c:45:46
  10af84:    81 28       		r1 = [addr(8)]  <.GCPI309_0 : 10af8c >			  ## gpio.c:45:31
  10af86:    20 e7 10 00 		r0 = [r1 + r0] 
                               	}			  ## gpio.c:45:31
  10af8a:    20 00       	rts			  ## gpio.c:46:1


.GCPI309_0:
  10af8c:    58 64 11 00     < 1139800 : 0x116458 >

gpio_set_die:
  10af90:    16 c2       	[--sp] = {rets, r6-r4} 			  ## gpio.c:361:0
  10af92:    0c c6       	r4 = r1 			  ## gpio.c:361:0
  10af94:    02 c6       	r2 = r0 			  ## gpio.c:361:0
  10af96:    2a 99       	cmp r2, 37			  ## gpio.c:365:9
  10af98:    05 13       	if (nzcv < 0) goto 10 <gpio_set_die+0x14 : 10afa4 >			  ## gpio.c:365:9
  10af9a:    1f ed 20 db 	r0 = r2 + -37 			  ## gpio.c:367:30
  10af9e:    21 c6       	r1 = r4 			  ## gpio.c:367:13
  10afa0:    db 04       	call -74 <usb_set_die : 10af58 >			  ## gpio.c:367:13
  10afa2:    16 c0       	{pc, r6-r4} = [sp++] 			  ## gpio.c:367:13
  10afa4:    10 c6       	r0 = r2 			  ## gpio.c:374:9
  10afa6:    e8 04       	call -48 <gpio2reg : 10af78 >			  ## gpio.c:374:9
  10afa8:    05 c6       	r5 = r0 			  ## gpio.c:374:9
  10afaa:    15 21       	if (r5 == 0) goto 34 <gpio_set_die+0x3E : 10afce >
  10afac:    80 f3 20 0f 	r0 = r2 & 15 			  ## gpio.c:379:12
  10afb0:    09 80       	r1 = 1 			  ## gpio.c:379:12
  10afb2:    00 f7 16 00 	r6 = r1 << r0 			  ## gpio.c:379:12
  10afb6:    db e1 5f fb 	call -295062 <local_irq_disable : c2f24 >			  ## gpio.c:380:5
  10afba:    04 98       	cmp r4, 0			  ## gpio.c:381:9
  10afbc:    09 03       	ifs (nzcv == 0) {			  ## gpio.c:384:16
  10afbe:    e8 48       		r0 = [r5 + 12] 			  ## gpio.c:384:16
  10afc0:    c0 f0 00 06 		r0 = r0 & ~r6 
                               	} else {			  ## gpio.c:384:16
  10afc4:    e8 48       		r0 = [r5 + 12] 			  ## gpio.c:382:16
  10afc6:    30 da       		r0 |= r6 
                               	}			  ## gpio.c:382:16
  10afc8:    e8 68       	[r5 + 12] = r0 			  ## gpio.c:382:16
  10afca:    db e1 9f fa 	call -295086 <local_irq_enable : c2f20 >			  ## gpio.c:386:5
  10afce:    16 c0       	{pc, r6-r4} = [sp++] 


usb_output:
  10afd0:    c1 28       	r1 = [addr(12)]  <.GCPI311_0 : 10afdc >			  ## gpio.c:74:0
  10afd2:    0a 48       	r2 = [r1 + 0] 			  ## gpio.c:79:30
  10afd4:    c0 f1 20 00 	r0 = r2 & ~setbit(r0) 			  ## gpio.c:79:30
  10afd8:    08 68       	[r1 + 0] = r0 			  ## gpio.c:79:30
  10afda:    20 00       	rts			  ## gpio.c:79:30


.GCPI311_0:
  10afdc:    90 00 09 00     < 589968 : 0x90090 >

gpio_write:
  10afe0:    15 c2       	[--sp] = {rets, r5, r4} 			  ## gpio.c:180:0
  10afe2:    02 c6       	r2 = r0 			  ## gpio.c:180:0
  10afe4:    2a 99       	cmp r2, 37			  ## gpio.c:184:9
  10afe6:    04 13       	if (nzcv < 0) goto 8 <gpio_write+0x10 : 10aff0 >			  ## gpio.c:184:9
  10afe8:    1f ed 20 db 	r0 = r2 + -37 			  ## gpio.c:186:29
  10afec:    f1 04       	call -30 <usb_output : 10afd0 >			  ## gpio.c:186:13
  10afee:    15 c0       	{pc, r5, r4} = [sp++] 			  ## gpio.c:186:13
  10aff0:    10 c6       	r0 = r2 			  ## gpio.c:193:9
  10aff2:    c2 04       	call -124 <gpio2reg : 10af78 >			  ## gpio.c:193:9
  10aff4:    04 c6       	r4 = r0 			  ## gpio.c:193:9
  10aff6:    a4 20       	if (r4 == 0) goto 20 <gpio_write+0x2C : 10b00c >
  10aff8:    80 f3 25 0f 	r5 = r2 & 15 			  ## gpio.c:198:12
  10affc:    db e1 2f f9 	call -295132 <local_irq_disable : c2f24 >			  ## gpio.c:199:5
  10b000:    20 48       	r0 = [r4 + 0] 			  ## gpio.c:203:16
  10b002:    c0 f1 00 05 	r0 = r0 & ~setbit(r5) 			  ## gpio.c:203:16
  10b006:    20 68       	[r4 + 0] = r0 			  ## gpio.c:203:16
  10b008:    db e1 af f8 	call -295148 <local_irq_enable : c2f20 >			  ## gpio.c:205:5
  10b00c:    15 c0       	{pc, r5, r4} = [sp++] 


usb_set_direction:
  10b00e:    80 d0       	r0 = r0 + 2 			  ## gpio.c:63:0
  10b010:    0a 80       	r2 = 1 			  ## gpio.c:63:0
  10b012:    02 cf       	r2 <<= r0 			  ## gpio.c:63:0
  10b014:    01 98       	cmp r1, 0			  ## gpio.c:65:9
  10b016:    00 29       	r0 = [addr(16)]  <.GCPI313_0 : 10b028 >			  ## gpio.c:65:9
  10b018:    09 03       	ifs (nzcv == 0) {			  ## gpio.c:68:30
  10b01a:    01 48       		r1 = [r0 + 0] 			  ## gpio.c:68:30
  10b01c:    c0 f0 11 02 		r1 = r1 & ~r2 
                               	} else {			  ## gpio.c:68:30
  10b020:    01 48       		r1 = [r0 + 0] 			  ## gpio.c:66:30
  10b022:    11 da       		r1 |= r2 
                               	}			  ## gpio.c:66:30
  10b024:    01 68       	[r0 + 0] = r1 			  ## gpio.c:66:30
  10b026:    20 00       	rts			  ## gpio.c:66:30


.GCPI313_0:
  10b028:    90 00 09 00     < 589968 : 0x90090 >

gpio_set_direction:
  10b02c:    16 c2       	[--sp] = {rets, r6-r4} 			  ## gpio.c:146:0
  10b02e:    0c c6       	r4 = r1 			  ## gpio.c:146:0
  10b030:    02 c6       	r2 = r0 			  ## gpio.c:146:0
  10b032:    2a 99       	cmp r2, 37			  ## gpio.c:150:9
  10b034:    0b 13       	if (nzcv < 0) goto 22 <gpio_set_direction+0x20 : 10b04c >			  ## gpio.c:150:9
  10b036:    00 2c       	r0 = [addr(64)]  <.GCPI314_0 : 10b078 >			  ## gpio.c:138:22
  10b038:    01 80       	r1 = 0 			  ## gpio.c:138:22
  10b03a:    01 68       	[r0 + 0] = r1 			  ## gpio.c:138:22
  10b03c:    00 2c       	r0 = [addr(64)]  <.GCPI314_1 : 10b07c >			  ## gpio.c:139:30
  10b03e:    0e e2 00 10 	[r0 + 0] |= 2304 			  ## gpio.c:139:30
  10b042:    1f ed 20 db 	r0 = r2 + -37 			  ## gpio.c:153:36
  10b046:    21 c6       	r1 = r4 			  ## gpio.c:153:13
  10b048:    e2 04       	call -60 <usb_set_direction : 10b00e >			  ## gpio.c:153:13
  10b04a:    16 c0       	{pc, r6-r4} = [sp++] 			  ## gpio.c:153:13
  10b04c:    10 c6       	r0 = r2 			  ## gpio.c:160:9
  10b04e:    94 04       	call -216 <gpio2reg : 10af78 >			  ## gpio.c:160:9
  10b050:    05 c6       	r5 = r0 			  ## gpio.c:160:9
  10b052:    15 21       	if (r5 == 0) goto 34 <gpio_set_direction+0x4A : 10b076 >
  10b054:    80 f3 20 0f 	r0 = r2 & 15 			  ## gpio.c:165:12
  10b058:    09 80       	r1 = 1 			  ## gpio.c:165:12
  10b05a:    00 f7 16 00 	r6 = r1 << r0 			  ## gpio.c:165:12
  10b05e:    db e1 1f f6 	call -295230 <local_irq_disable : c2f24 >			  ## gpio.c:167:5
  10b062:    04 98       	cmp r4, 0			  ## gpio.c:168:9
  10b064:    09 03       	ifs (nzcv == 0) {			  ## gpio.c:171:16
  10b066:    a8 48       		r0 = [r5 + 8] 			  ## gpio.c:171:16
  10b068:    c0 f0 00 06 		r0 = r0 & ~r6 
                               	} else {			  ## gpio.c:171:16
  10b06c:    a8 48       		r0 = [r5 + 8] 			  ## gpio.c:169:16
  10b06e:    30 da       		r0 |= r6 
                               	}			  ## gpio.c:169:16
  10b070:    a8 68       	[r5 + 8] = r0 			  ## gpio.c:169:16
  10b072:    db e1 5f f5 	call -295254 <local_irq_enable : c2f20 >			  ## gpio.c:173:5
  10b076:    16 c0       	{pc, r6-r4} = [sp++] 


.GCPI314_0:
  10b078:    00 24 09 00     < 599040 : 0x92400 >

.GCPI314_1:
  10b07c:    90 00 09 00     < 589968 : 0x90090 >

__hw_enter_soft_poweroff:
  10b080:    16 c2       	[--sp] = {rets, r6-r4} 			  ## pmu_analog.c:643:0
  10b082:    d4 2f       	r4 = [addr(380)]  <.GCPI316_0 : 10b200 >			  ## pmu_analog.c:643:0
  10b084:    20 58       	r0 = b[r4 + 0] 			  ## pmu_analog.c:643:0
  10b086:    f8 22       	if (r0 != 0) goto 94 <__hw_enter_soft_poweroff+0x66 : 10b0e6 >			  ## pmu_analog.c:643:0
  10b088:    08 80       	r0 = 1 			  ## pmu_analog.c:643:0
  10b08a:    20 78       	b[r4 + 0] = r0 			  ## pmu_analog.c:643:0
  10b08c:    00 80       	r0 = 0 			  ## p33.h:331:9
  10b08e:    21 80       	r1 = 4 			  ## p33.h:331:9
  10b090:    7a e1 6f a1 	call -1092564 <p33_or_1byte : 4c0 >			  ## p33.h:331:9
  10b094:    15 2f       	r5 = [addr(368)]  <.GCPI316_1 : 10b204 >			  ## pmu_analog.c:43:17
  10b096:    00 e8 50 06 	r0 = b[r5 + 24] 			  ## pmu_analog.c:43:17
  10b09a:    18 98       	cmp r0, 3			  ## pmu_analog.c:43:9
  10b09c:    1e 11       	ifs (nzcv != 0) goto 60 <__hw_enter_soft_poweroff+0x5A : 10b0da >			  ## pmu_analog.c:43:9
  10b09e:    30 80       	r0 = 6 			  ## pmu_analog.c:45:9
  10b0a0:    01 80       	r1 = 0 			  ## pmu_analog.c:45:9
  10b0a2:    1a 80       	r2 = 3 			  ## pmu_analog.c:45:9
  10b0a4:    23 80       	r3 = 4 			  ## pmu_analog.c:45:9
  10b0a6:    7a e1 7f a1 	call -1092562 <P33_CON_SET : 4d8 >			  ## pmu_analog.c:45:9
  10b0aa:    00 e8 50 90 	r0 = b[r5 + 66] 			  ## pmu_analog.c:17:20
  10b0ae:    80 ef 00 ff 	cmp r0, 255			  ## pmu_analog.c:17:9
  10b0b2:    0a 10       	ifs (nzcv == 0) goto 20 <__hw_enter_soft_poweroff+0x48 : 10b0c8 >			  ## pmu_analog.c:17:9
  10b0b4:    09 80       	r1 = 1 			  ## pmu_analog.c:18:9
  10b0b6:    ff e1 bf f6 	call -298 <gpio_set_die : 10af90 >			  ## pmu_analog.c:18:9
  10b0ba:    2e c6       	r6 = r5 			  ## pmu_analog.c:19:20
  10b0bc:    04 e8 60 90 	r0 = b[++ r6 = 66] 			  ## pmu_analog.c:19:20
  10b0c0:    8f 04       	call -226 <gpio_write : 10afe0 >			  ## pmu_analog.c:19:9
  10b0c2:    30 58       	r0 = b[r6 + 0] 			  ## pmu_analog.c:20:28
  10b0c4:    01 80       	r1 = 0 			  ## pmu_analog.c:20:9
  10b0c6:    b2 04       	call -156 <gpio_set_direction : 10b02c >			  ## pmu_analog.c:20:9
  10b0c8:    08 80       	r0 = 1 			  ## pmu_analog.c:50:9
  10b0ca:    7a e1 bf b2 	call -1092010 <delay_nus : 724 >			  ## pmu_analog.c:50:9
  10b0ce:    30 80       	r0 = 6 			  ## pmu_analog.c:53:9
  10b0d0:    01 80       	r1 = 0 			  ## pmu_analog.c:53:9
  10b0d2:    1a 80       	r2 = 3 			  ## pmu_analog.c:53:9
  10b0d4:    1b 80       	r3 = 3 			  ## pmu_analog.c:53:9
  10b0d6:    7a e1 ff 9f 	call -1092610 <P33_CON_SET : 4d8 >			  ## pmu_analog.c:53:9
  10b0da:    21 58       	r1 = b[r4 + 0] 
  10b0dc:    10 80       	r0 = 2 
  10b0de:    19 20       	if (r1 != 0) goto 2 <__hw_enter_soft_poweroff+0x62 : 10b0e2 >
  10b0e0:    f8 87       	r0 = -1 
  10b0e2:    40 e8 50 06 	b[r5 + 24] = r0 			  ## power_hw.c:1093:18
  10b0e6:    d4 29       	r4 = [addr(284)]  <.GCPI316_1 : 10b204 >			  ## pmu_analog.c:648:20
  10b0e8:    20 e8 40 35 	r0 = [r4 + 212] 			  ## pmu_analog.c:648:20
  10b0ec:    10 20       	if (r0 == 0) goto 2 <__hw_enter_soft_poweroff+0x70 : 10b0f0 >			  ## pmu_analog.c:648:20
  10b0ee:    a8 01       	call r0			  ## pmu_analog.c:650:9
  10b0f0:    fe e1 0f a2 	call -11200 <wdt_close : 108534 >			  ## pmu_analog.c:656:5
  10b0f4:    b8 80       	r0 = 23 			  ## p33.h:333:9
  10b0f6:    11 ea fb 00 	r1 = 251 			  ## p33.h:333:9
  10b0fa:    7a e1 df a1 	call -1092550 <p33_and_1byte : 538 >			  ## p33.h:333:9
  10b0fe:    10 80       	r0 = 2 			  ## p33.h:333:9
  10b100:    11 ea f7 00 	r1 = 247 			  ## p33.h:333:9
  10b104:    7a e1 8f a1 	call -1092560 <p33_and_1byte : 538 >			  ## p33.h:333:9
  10b108:    88 80       	r0 = 17 			  ## p33.h:333:9
  10b10a:    11 ea fe 00 	r1 = 254 			  ## p33.h:333:9
  10b10e:    7a e1 3f a1 	call -1092570 <p33_and_1byte : 538 >			  ## p33.h:333:9
  10b112:    10 ea a2 00 	r0 = 162 			  ## pmu_analog.c:672:5
  10b116:    21 80       	r1 = 4 			  ## pmu_analog.c:672:5
  10b118:    0a 80       	r2 = 1 			  ## pmu_analog.c:672:5
  10b11a:    0b 80       	r3 = 1 			  ## pmu_analog.c:672:5
  10b11c:    7a e1 cf 9d 	call -1092680 <P33_CON_SET : 4d8 >			  ## pmu_analog.c:672:5
  10b120:    b0 80       	r0 = 22 			  ## pmu_analog.c:676:5
  10b122:    01 80       	r1 = 0 			  ## pmu_analog.c:676:5
  10b124:    7a e1 4f 9f 	call -1092632 <p33_tx_1byte : 510 >			  ## pmu_analog.c:676:5
  10b128:    b8 80       	r0 = 23 			  ## pmu_analog.c:677:5
  10b12a:    11 ea ef 00 	r1 = 239 			  ## pmu_analog.c:677:5
  10b12e:    7a e1 3f a0 	call -1092602 <p33_and_1byte : 538 >			  ## pmu_analog.c:677:5
  10b132:    c0 82       	r0 = 88 			  ## pmu_analog.c:678:5
  10b134:    01 80       	r1 = 0 			  ## pmu_analog.c:678:5
  10b136:    7a e1 bf 9e 	call -1092650 <p33_tx_1byte : 510 >			  ## pmu_analog.c:678:5
  10b13a:    c8 82       	r0 = 89 			  ## pmu_analog.c:679:5
  10b13c:    01 80       	r1 = 0 			  ## pmu_analog.c:679:5
  10b13e:    7a e1 7f 9e 	call -1092658 <p33_tx_1byte : 510 >			  ## pmu_analog.c:679:5
  10b142:    b0 81       	r0 = 54 			  ## pmu_analog.c:680:5
  10b144:    01 80       	r1 = 0 			  ## pmu_analog.c:680:5
  10b146:    7a e1 3f 9e 	call -1092666 <p33_tx_1byte : 510 >			  ## pmu_analog.c:680:5
  10b14a:    b8 81       	r0 = 55 			  ## pmu_analog.c:681:5
  10b14c:    11 80       	r1 = 2 			  ## pmu_analog.c:681:5
  10b14e:    7a e1 ff 9d 	call -1092674 <p33_tx_1byte : 510 >			  ## pmu_analog.c:681:5
  10b152:    c0 81       	r0 = 56 			  ## pmu_analog.c:683:5
  10b154:    89 80       	r1 = 17 			  ## pmu_analog.c:683:5
  10b156:    7a e1 bf 9d 	call -1092682 <p33_tx_1byte : 510 >			  ## pmu_analog.c:683:5
  10b15a:    c8 81       	r0 = 57 			  ## pmu_analog.c:684:5
  10b15c:    89 80       	r1 = 17 			  ## pmu_analog.c:684:5
  10b15e:    7a e1 7f 9d 	call -1092690 <p33_tx_1byte : 510 >			  ## pmu_analog.c:684:5
  10b162:    d0 81       	r0 = 58 			  ## pmu_analog.c:685:5
  10b164:    99 81       	r1 = 51 			  ## pmu_analog.c:685:5
  10b166:    7a e1 3f 9d 	call -1092698 <p33_tx_1byte : 510 >			  ## pmu_analog.c:685:5
  10b16a:    d8 81       	r0 = 59 			  ## pmu_analog.c:686:5
  10b16c:    19 80       	r1 = 3 			  ## pmu_analog.c:686:5
  10b16e:    7a e1 ff 9c 	call -1092706 <p33_tx_1byte : 510 >			  ## pmu_analog.c:686:5
  10b172:    90 83       	r0 = 114 			  ## p33.h:331:9
  10b174:    01 81       	r1 = 32 			  ## p33.h:331:9
  10b176:    7a e1 3f 9a 	call -1092794 <p33_or_1byte : 4c0 >			  ## p33.h:331:9
  10b17a:    10 80       	r0 = 2 			  ## p33.h:331:9
  10b17c:    01 81       	r1 = 32 			  ## p33.h:331:9
  10b17e:    7a e1 ff 99 	call -1092802 <p33_or_1byte : 4c0 >			  ## p33.h:331:9
  10b182:    30 80       	r0 = 6 			  ## pmu_analog.c:691:5
  10b184:    39 80       	r1 = 7 			  ## pmu_analog.c:691:5
  10b186:    0a 80       	r2 = 1 			  ## pmu_analog.c:691:5
  10b188:    0b 80       	r3 = 1 			  ## pmu_analog.c:691:5
  10b18a:    7a e1 5f 9a 	call -1092790 <P33_CON_SET : 4d8 >			  ## pmu_analog.c:691:5
  10b18e:    80 81       	r0 = 48 			  ## p33.h:333:9
  10b190:    11 ea fe 00 	r1 = 254 			  ## p33.h:333:9
  10b194:    7a e1 0f 9d 	call -1092704 <p33_and_1byte : 538 >			  ## p33.h:333:9
  10b198:    80 81       	r0 = 48 			  ## p33.h:331:9
  10b19a:    09 80       	r1 = 1 			  ## p33.h:331:9
  10b19c:    7a e1 0f 99 	call -1092832 <p33_or_1byte : 4c0 >			  ## p33.h:331:9
  10b1a0:    80 81       	r0 = 48 			  ## p33.h:331:9
  10b1a2:    11 80       	r1 = 2 			  ## p33.h:331:9
  10b1a4:    7a e1 cf 98 	call -1092840 <p33_or_1byte : 4c0 >			  ## p33.h:331:9
  10b1a8:    00 80       	r0 = 0 			  ## p33.h:331:9
  10b1aa:    11 ea 80 00 	r1 = 128 			  ## p33.h:331:9
  10b1ae:    7a e1 7f 98 	call -1092850 <p33_or_1byte : 4c0 >			  ## p33.h:331:9
  10b1b2:    88 81       	r0 = 49 			  ## pmu_analog.c:698:5
  10b1b4:    81 81       	r1 = 48 			  ## pmu_analog.c:698:5
  10b1b6:    7a e1 bf 9a 	call -1092778 <p33_tx_1byte : 510 >			  ## pmu_analog.c:698:5
  10b1ba:    a0 82       	r0 = 84 			  ## pmu_analog.c:699:5
  10b1bc:    01 80       	r1 = 0 			  ## pmu_analog.c:699:5
  10b1be:    7a e1 7f 9a 	call -1092786 <p33_tx_1byte : 510 >			  ## pmu_analog.c:699:5
  10b1c2:    a0 81       	r0 = 52 			  ## pmu_analog.c:700:5
  10b1c4:    09 80       	r1 = 1 			  ## pmu_analog.c:700:5
  10b1c6:    7a e1 3f 9a 	call -1092794 <p33_tx_1byte : 510 >			  ## pmu_analog.c:700:5
  10b1ca:    20 80       	r0 = 4 			  ## pmu_analog.c:705:5
  10b1cc:    09 80       	r1 = 1 			  ## pmu_analog.c:705:5
  10b1ce:    1a 80       	r2 = 3 			  ## pmu_analog.c:705:5
  10b1d0:    03 80       	r3 = 0 			  ## pmu_analog.c:705:5
  10b1d2:    7a e1 1f 98 	call -1092862 <P33_CON_SET : 4d8 >			  ## pmu_analog.c:705:5
  10b1d6:    20 80       	r0 = 4 			  ## p33.h:333:9
  10b1d8:    11 ea fe 00 	r1 = 254 			  ## p33.h:333:9
  10b1dc:    7a e1 cf 9a 	call -1092776 <p33_and_1byte : 538 >			  ## p33.h:333:9
  10b1e0:    08 80       	r0 = 1 			  ## p33.h:333:9
  10b1e2:    11 ea f7 00 	r1 = 247 			  ## p33.h:333:9
  10b1e6:    7a e1 7f 9a 	call -1092786 <p33_and_1byte : 538 >			  ## p33.h:333:9
  10b1ea:    10 ea bf 00 	r0 = 191 			  ## pmu_analog.c:717:5
  10b1ee:    00 e7 43 00 	r3 = b[r4 + r0] 			  ## pmu_analog.c:717:5
  10b1f2:    28 80       	r0 = 5 			  ## pmu_analog.c:717:5
  10b1f4:    19 80       	r1 = 3 			  ## pmu_analog.c:717:5
  10b1f6:    1a 80       	r2 = 3 			  ## pmu_analog.c:717:5
  10b1f8:    7a e1 ef 96 	call -1092900 <P33_CON_SET : 4d8 >			  ## pmu_analog.c:717:5
  10b1fc:    16 c0       	{pc, r6-r4} = [sp++] 			  ## pmu_analog.c:717:5
  10b1fe:    00 00       	nop			  ## pmu_analog.c:717:5


.GCPI316_0:
  10b200:    44 19 00 00     < 6468 : 0x1944 >

.GCPI316_1:
  10b204:    cc 08 00 00     < 2252 : 0x8CC >

sys_softoff:
  10b208:    7a e1 8f a9 	call -1092304 <power_set_soft_poweroff : 73c >			  ## power_api.c:219:0
  10b20c:    ff 0f       	goto -2 <sys_softoff+0x4 : 10b20c >			  ## power_api.c:222:5
  10b20e:    00 00       	nop


app:
  10b210:    ac cd       	sp += -84 			  ## toy_main.c:70:0
  10b212:    20 e4 40 a9 	r0 = [addr(4772)]  <.GCPI319_0 : 10c4b8 >			  ## toy_main.c:71:5
  10b216:    db e1 1f ee 	call -295486 <xprintf : c2fdc >			  ## toy_main.c:71:5
  10b21a:    20 e4 40 a8 	r0 = [addr(4768)]  <.GCPI319_1 : 10c4bc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/efuse.c:56:19
  10b21e:    00 4a       	r0 = [r0 + 32] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/efuse.c:56:19
  10b220:    20 e4 51 4d 	r1 = [addr(5428)]  <.GCPI319_168 : 10c758 >			  ## toy_main.c:72:9
  10b224:    01 ce       	cmp r0, r1			  ## toy_main.c:72:9
  10b226:    07 11       	ifs (nzcv != 0) goto 14 <app+0x26 : 10b236 >			  ## toy_main.c:72:9
  10b228:    20 e4 50 4a 	r0 = [addr(5416)]  <.GCPI319_167 : 10c754 >			  ## toy_main.c:73:9
  10b22c:    db e1 6f ed 	call -295508 <xprintf : c2fdc >			  ## toy_main.c:73:9
  10b230:    fe e1 0f 98 	call -11520 <wdt_close : 108534 >			  ## toy_main.c:74:9
  10b234:    ff 0f       	goto -2 <app+0x24 : 10b234 >			  ## toy_main.c:75:9
  10b236:    48 80       	r0 = 9 			  ## toy_main.c:78:5
  10b238:    fe e1 ef 97 	call -11524 <vm_isr_response_index_register : 108538 >			  ## toy_main.c:78:5
  10b23c:    18 80       	r0 = 3 			  ## toy_main.c:79:5
  10b23e:    fe e1 bf 97 	call -11530 <vm_isr_response_index_register : 108538 >			  ## toy_main.c:79:5
  10b242:    20 e4 40 9f 	r0 = [addr(4732)]  <.GCPI319_2 : 10c4c0 >			  ## toy_main.c:88:15
  10b246:    54 ea 00 00 	r12 = 0 			  ## toy_main.c:88:15
  10b24a:    40 e8 0c 02 	b[r0 + 8] = r12 			  ## toy_main.c:88:15
  10b24e:    60 91       	r0 = sp + 44 			  ## toy_main.c:88:15
  10b250:    80 88       	r0 += 16 			  ## toy_main.c:88:15
  10b252:    80 60       	[sp+ 8] = r0 			  ## toy_main.c:88:15
  10b254:    20 e4 48 9b 	r8 = [addr(4716)]  <.GCPI319_3 : 10c4c4 >			  ## toy_main.c:88:15
  10b258:    00 ed 80 44 	r0 = r8 + 68 			  ## toy_main.c:88:15
  10b25c:    80 61       	[sp+ 24] = r0 			  ## toy_main.c:88:15
  10b25e:    20 e4 57 2e 	r7 = [addr(5304)]  <.GCPI319_152 : 10c718 >			  ## toy_main.c:88:15
  10b262:    0d 80       	r5 = 1 			  ## toy_main.c:88:15
  10b264:    00 ed 70 2c 	r0 = r7 + 44 			  ## toy_main.c:88:15
  10b268:    40 61       	[sp+ 20] = r0 			  ## toy_main.c:88:15
  10b26a:    55 ea 23 11 	r13 = 4387 			  ## toy_main.c:88:15
  10b26e:    51 ea ff 0f 	r9 = 4095 			  ## toy_main.c:88:15
  10b272:    20 e4 4a 9b 	r10 = [addr(4716)]  <.GCPI319_10 : 10c4e0 >			  ## toy_main.c:88:15
  10b276:    20 e4 5e 0a 	r14 = [addr(5160)]  <.GCPI319_122 : 10c6a0 >			  ## toy_main.c:88:15
  10b27a:    20 e4 5b 0d 	r11 = [addr(5172)]  <.GCPI319_126 : 10c6b0 >			  ## toy_main.c:88:15
  10b27e:    20 e4 46 9a 	r6 = [addr(4712)]  <.GCPI319_12 : 10c4e8 >			  ## toy_main.c:88:15
  10b282:    60 e9 0c 01 	[sp+ 4] = r12 			  ## toy_main.c:88:15
  10b286:    d7 09       	goto 942 <app+0x426 : 10b636 >			  ## toy_main.c:88:15
  10b288:    20 e8 e0 00 	r0 = [r14 + 0] 			  ## toy_midi_ctrl.c:279:18
  10b28c:    09 80       	r1 = 1 			  ## toy_midi_ctrl.c:279:5
  10b28e:    fe e1 df ad 	call -10822 <decoder_stop : 10884c >			  ## toy_midi_ctrl.c:279:5
  10b292:    00 80       	r0 = 0 			  ## toy_midi_ctrl.c:280:5
  10b294:    fe e1 af 95 	call -11596 <key_table_sel : 10854c >			  ## toy_midi_ctrl.c:280:5
  10b298:    54 ea 00 00 	r12 = 0 			  ## toy_main.c:88:15
  10b29c:    20 e4 48 89 	r8 = [addr(4644)]  <.GCPI319_3 : 10c4c4 >			  ## toy_main.c:88:15
  10b2a0:    0d 80       	r5 = 1 			  ## toy_main.c:88:15
  10b2a2:    55 ea 23 11 	r13 = 4387 
  10b2a6:    20 e4 4a 8e 	r10 = [addr(4664)]  <.GCPI319_10 : 10c4e0 >
  10b2aa:    20 e4 46 8f 	r6 = [addr(4668)]  <.GCPI319_12 : 10c4e8 >
  10b2ae:    c3 09       	goto 902 <app+0x426 : 10b636 >
  10b2b0:    00 ed 6a 08 	r10 = r6 + 8 			  ## notch_howling_api.c:188:26
  10b2b4:    60 e8 6a 09 	[r6 + 36] = r10 			  ## notch_howling_api.c:188:26
  10b2b8:    20 e4 40 d1 	r0 = [addr(4932)]  <.GCPI319_82 : 10c600 >			  ## notch_howling_api.c:189:28
  10b2bc:    b0 6a       	[r6 + 40] = r0 			  ## notch_howling_api.c:189:28
  10b2be:    20 e4 40 d1 	r0 = [addr(4932)]  <.GCPI319_83 : 10c604 >			  ## notch_howling_api.c:193:21
  10b2c2:    30 6a       	[r6 + 32] = r0 			  ## notch_howling_api.c:193:21
  10b2c4:    30 c6       	r0 = r6 			  ## notch_howling_api.c:194:24
  10b2c6:    64 e8 04 07 	[++ r0 = 28] = r4 			  ## notch_howling_api.c:194:24
  10b2ca:    30 68       	[r6 + 0] = r0 			  ## notch_howling_api.c:196:23
  10b2cc:    20 e4 40 ce 	r0 = [addr(4920)]  <.GCPI319_84 : 10c608 >			  ## notch_howling_api.c:197:22
  10b2d0:    40 e5 6c 01 	d[r6 + 4] = r12, r0 			  ## notch_howling_api.c:197:22
  10b2d4:    00 ed 62 24 	r2 = r6 + 36 			  ## notch_howling_api.c:188:26
  10b2d8:    20 c6       	r0 = r4 			  ## notch_howling_api.c:201:5
  10b2da:    39 c6       	r1 = r7 			  ## notch_howling_api.c:201:5
  10b2dc:    ff e1 ff 97 	call -3330 <howling_init : 10a5de >			  ## notch_howling_api.c:201:5
  10b2e0:    60 e8 d6 01 	[r13 + 4] = r6 			  ## notch_howling_api.c:33:26
  10b2e4:    00 e2 d3 04 	[r13 + 12] |= 4 			  ## notch_howling_api.c:38:30
  10b2e8:    20 e4 40 ba 	r0 = [addr(4840)]  <.GCPI319_71 : 10c5d4 >			  ## notch_howling_api.c:38:30
  10b2ec:    b0 68       	[r6 + 8] = r0 			  ## notch_howling_api.c:40:30
  10b2ee:    44 c6       	r12 = r0 			  ## howling_pitchshifter_api.c:40:65
  10b2f0:    08 80       	r0 = 1 			  ## howling_pitchshifter_api.c:26:19
  10b2f2:    ff e1 df a6 	call -2854 <howling_ps_needbuf : 10a7d0 >			  ## howling_pitchshifter_api.c:26:19
  10b2f6:    05 c6       	r5 = r0 			  ## howling_pitchshifter_api.c:26:19
  10b2f8:    20 e4 40 c6 	r0 = [addr(4888)]  <.GCPI319_87 : 10c614 >			  ## howling_pitchshifter_api.c:27:5
  10b2fc:    29 c6       	r1 = r5 			  ## howling_pitchshifter_api.c:27:5
  10b2fe:    db e1 df e6 	call -295718 <xprintf : c2fdc >			  ## howling_pitchshifter_api.c:27:5
  10b302:    87 ef 50 bc 	cmp r5, 1980			  ## howling_pitchshifter_api.c:28:9
  10b306:    1e 19       	if (nzcv <= 0) goto 60 <app+0x134 : 10b344 >			  ## howling_pitchshifter_api.c:28:9
  10b308:    20 e4 40 cb 	r0 = [addr(4908)]  <.GCPI319_96 : 10c638 >			  ## howling_pitchshifter_api.c:29:9
  10b30c:    11 ea bc 07 	r1 = 1980 			  ## howling_pitchshifter_api.c:29:9
  10b310:    2a c6       	r2 = r5 			  ## howling_pitchshifter_api.c:29:9
  10b312:    db e1 3f e6 	call -295738 <xprintf : c2fdc >			  ## howling_pitchshifter_api.c:29:9
  10b316:    60 e8 ab 01 	[r10 + 4] = r11 			  ## howling_pitchshifter_api.c:40:26
  10b31a:    20 e4 40 bd 	r0 = [addr(4852)]  <.GCPI319_86 : 10c610 >			  ## howling_pitchshifter_api.c:49:9
  10b31e:    db e1 df e5 	call -295750 <xprintf : c2fdc >			  ## howling_pitchshifter_api.c:49:9
  10b322:    20 e8 a6 00 	r6 = [r10 + 0] 			  ## howling_pitchshifter_api.c:49:9
  10b326:    d3 c6       	r11 = r10 			  ## howling_pitchshifter_api.c:49:9
  10b328:    0f 80       	r7 = 1 			  ## howling_pitchshifter_api.c:49:9
  10b32a:    53 08       	goto 166 <app+0x1C2 : 10b3d2 >			  ## howling_pitchshifter_api.c:49:9
  10b32c:    20 c6       	r0 = r4 			  ## toy_record.c:119:9
  10b32e:    09 80       	r1 = 1 			  ## toy_record.c:119:9
  10b330:    fe e1 cf a8 	call -10984 <decoder_stop : 10884c >			  ## toy_record.c:119:9
  10b334:    ff e1 ef ce 	call -1572 <encode_file_fs_close : 10ad14 >			  ## toy_record.c:120:9
  10b338:    20 e4 47 f7 	r7 = [addr(5084)]  <.GCPI319_152 : 10c718 >
  10b33c:    0d 80       	r5 = 1 
  10b33e:    54 ea 00 00 	r12 = 0 
  10b342:    79 09       	goto 754 <app+0x426 : 10b636 >
  10b344:    20 e4 44 b4 	r4 = [addr(4816)]  <.GCPI319_88 : 10c618 >
  10b348:    20 c6       	r0 = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/ae_howling/code/howling_phy.c:75:5
  10b34a:    01 80       	r1 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/ae_howling/code/howling_phy.c:75:5
  10b34c:    c2 81       	r2 = 56 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/ae_howling/code/howling_phy.c:75:5
  10b34e:    db e1 5f e0 	call -295926 <memset : c2f5c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/ae_howling/code/howling_phy.c:75:5
  10b352:    0f 80       	r7 = 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/ae_howling/code/howling_phy.c:75:5
  10b354:    27 6b       	[r4 + 48] = r7 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/ae_howling/code/howling_phy.c:78:9
  10b356:    20 e4 50 03 	r0 = [addr(5132)]  <.GCPI319_171 : 10c764 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/ae_howling/code/howling_phy.c:78:9
  10b35a:    25 c6       	r5 = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/ae_howling/code/howling_phy.c:78:9
  10b35c:    64 e8 50 0b 	[++ r5 = 44] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/ae_howling/code/howling_phy.c:78:9
  10b360:    20 e4 40 ae 	r0 = [addr(4792)]  <.GCPI319_89 : 10c61c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/ae_howling/code/howling_phy.c:54:5
  10b364:    91 ea 38 ff 	r1 = -200 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/ae_howling/code/howling_phy.c:54:5
  10b368:    db e1 8f e3 	call -295824 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/ae_howling/code/howling_phy.c:54:5
  10b36c:    90 e8 41 8b 	r1 = h[r4 + 46] (s) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/ae_howling/code/howling_phy.c:56:5
  10b370:    20 e4 40 ab 	r0 = [addr(4780)]  <.GCPI319_90 : 10c620 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/ae_howling/code/howling_phy.c:56:5
  10b374:    db e1 2f e3 	call -295836 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/ae_howling/code/howling_phy.c:56:5
  10b378:    21 4b       	r1 = [r4 + 48] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/ae_howling/code/howling_phy.c:57:5
  10b37a:    20 e4 40 aa 	r0 = [addr(4776)]  <.GCPI319_91 : 10c624 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/ae_howling/code/howling_phy.c:57:5
  10b37e:    db e1 df e2 	call -295846 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/ae_howling/code/howling_phy.c:57:5
  10b382:    20 e4 40 a9 	r0 = [addr(4772)]  <.GCPI319_92 : 10c628 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/ae_howling/code/howling_phy.c:83:5
  10b386:    20 e4 46 a9 	r6 = [addr(4772)]  <.GCPI319_93 : 10c62c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/ae_howling/code/howling_phy.c:83:5
  10b38a:    31 c6       	r1 = r6 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/ae_howling/code/howling_phy.c:83:5
  10b38c:    db e1 6f e2 	call -295860 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/ae_howling/code/howling_phy.c:83:5
  10b390:    00 ed 4b 08 	r11 = r4 + 8 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/ae_howling/code/howling_phy.c:89:26
  10b394:    60 e8 4b 09 	[r4 + 36] = r11 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/ae_howling/code/howling_phy.c:89:26
  10b398:    20 e4 40 99 	r0 = [addr(4708)]  <.GCPI319_82 : 10c600 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/ae_howling/code/howling_phy.c:90:28
  10b39c:    a0 6a       	[r4 + 40] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/ae_howling/code/howling_phy.c:90:28
  10b39e:    20 e4 40 a4 	r0 = [addr(4752)]  <.GCPI319_94 : 10c630 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/ae_howling/code/howling_phy.c:94:21
  10b3a2:    20 6a       	[r4 + 32] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/ae_howling/code/howling_phy.c:94:21
  10b3a4:    20 c6       	r0 = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/ae_howling/code/howling_phy.c:95:24
  10b3a6:    64 e8 06 07 	[++ r0 = 28] = r6 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/ae_howling/code/howling_phy.c:95:24
  10b3aa:    20 68       	[r4 + 0] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/ae_howling/code/howling_phy.c:97:23
  10b3ac:    20 e4 40 a1 	r0 = [addr(4740)]  <.GCPI319_95 : 10c634 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/ae_howling/code/howling_phy.c:98:22
  10b3b0:    40 e5 4c 01 	d[r4 + 4] = r12, r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/ae_howling/code/howling_phy.c:98:22
  10b3b4:    00 ed 43 24 	r3 = r4 + 36 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/ae_howling/code/howling_phy.c:89:26
  10b3b8:    30 c6       	r0 = r6 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/ae_howling/code/howling_phy.c:102:5
  10b3ba:    81 c6       	r1 = r8 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/ae_howling/code/howling_phy.c:102:5
  10b3bc:    2a c6       	r2 = r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/ae_howling/code/howling_phy.c:102:5
  10b3be:    ff e1 6f a1 	call -3028 <howling_ps_open : 10a7ee >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/ae_howling/code/howling_phy.c:102:5
  10b3c2:    60 e8 a4 01 	[r10 + 4] = r4 			  ## howling_pitchshifter_api.c:40:26
  10b3c6:    00 e2 a3 04 	[r10 + 12] |= 4 			  ## howling_pitchshifter_api.c:45:30
  10b3ca:    20 e4 40 82 	r0 = [addr(4616)]  <.GCPI319_71 : 10c5d4 >			  ## howling_pitchshifter_api.c:45:30
  10b3ce:    a0 68       	[r4 + 8] = r0 			  ## howling_pitchshifter_api.c:47:30
  10b3d0:    06 c6       	r6 = r0 			  ## echo_api.c:52:51
  10b3d2:    65 91       	r5 = sp + 44 
  10b3d4:    28 c6       	r0 = r5 			  ## echo_api.c:32:5
  10b3d6:    01 80       	r1 = 0 			  ## echo_api.c:32:5
  10b3d8:    42 81       	r2 = 40 			  ## echo_api.c:32:5
  10b3da:    db e1 ff db 	call -296066 <memset : c2f5c >			  ## echo_api.c:32:5
  10b3de:    20 e4 40 97 	r0 = [addr(4700)]  <.GCPI319_97 : 10c63c >			  ## echo_api.c:33:5
  10b3e2:    db e1 bf df 	call -295946 <xprintf : c2fdc >			  ## echo_api.c:33:5
  10b3e6:    e0 81       	r0 = 60 			  ## echo_api.c:34:44
  10b3e8:    00 63       	[sp+ 48] = r0 			  ## echo_api.c:34:44
  10b3ea:    10 ea c8 00 	r0 = 200 			  ## echo_api.c:35:44
  10b3ee:    c0 62       	[sp+ 44] = r0 			  ## echo_api.c:35:44
  10b3f0:    10 ea 00 02 	r0 = 512 			  ## echo_api.c:36:46
  10b3f4:    80 63       	[sp+ 56] = r0 			  ## echo_api.c:36:46
  10b3f6:    47 63       	[sp+ 52] = r7 			  ## echo_api.c:37:46
  10b3f8:    20 83       	r0 = 100 			  ## echo_api.c:38:46
  10b3fa:    80 64       	[sp+ 72] = r0 			  ## echo_api.c:38:46
  10b3fc:    60 e9 08 11 	[sp+ 68] = r8 			  ## echo_api.c:39:46
  10b400:    10 ea b8 0b 	r0 = 3000 			  ## echo_api.c:40:46
  10b404:    c0 63       	[sp+ 60] = r0 			  ## echo_api.c:40:46
  10b406:    10 ea 00 10 	r0 = 4096 			  ## echo_api.c:41:46
  10b40a:    00 64       	[sp+ 64] = r0 			  ## echo_api.c:41:46
  10b40c:    20 e4 40 8c 	r0 = [addr(4656)]  <.GCPI319_98 : 10c640 >			  ## echo_api.c:42:15
  10b410:    c0 64       	[sp+ 76] = r0 			  ## echo_api.c:42:15
  10b412:    10 ea ac 14 	r0 = 5292 			  ## echo_api.c:43:19
  10b416:    00 65       	[sp+ 80] = r0 			  ## echo_api.c:43:19
  10b418:    00 80       	r0 = 0 			  ## echo_api.c:131:15
  10b41a:    84 40       	r4 = [sp+ 8] 			  ## echo_api.c:131:15
  10b41c:    21 c6       	r1 = r4 			  ## echo_api.c:131:15
  10b41e:    ff e1 7f aa 	call -2738 <echo_needbuf : 10a970 >			  ## echo_api.c:131:15
  10b422:    42 c6       	r10 = r0 			  ## echo_api.c:131:15
  10b424:    20 e4 40 87 	r0 = [addr(4636)]  <.GCPI319_99 : 10c644 >			  ## echo_api.c:132:5
  10b428:    91 c6       	r1 = r10 			  ## echo_api.c:132:5
  10b42a:    db e1 7f dd 	call -296018 <xprintf : c2fdc >			  ## echo_api.c:132:5
  10b42e:    20 e4 47 86 	r7 = [addr(4632)]  <.GCPI319_100 : 10c648 >
  10b432:    38 c6       	r0 = r7 			  ## echo_api.c:133:5
  10b434:    01 80       	r1 = 0 			  ## echo_api.c:133:5
  10b436:    c2 82       	r2 = 88 			  ## echo_api.c:133:5
  10b438:    db e1 0f d9 	call -296160 <memset : c2f5c >			  ## echo_api.c:133:5
  10b43c:    00 ed 7c 2c 	r12 = r7 + 44 			  ## echo_api.c:136:9
  10b440:    a0 c6       	r0 = r12 			  ## echo_api.c:136:9
  10b442:    29 c6       	r1 = r5 			  ## echo_api.c:136:9
  10b444:    82 80       	r2 = 16 			  ## echo_api.c:136:9
  10b446:    db e1 3f d8 	call -296186 <memcpy : c2f50 >			  ## echo_api.c:136:9
  10b44a:    00 ed 7d 3c 	r13 = r7 + 60 			  ## echo_api.c:137:9
  10b44e:    a8 c6       	r0 = r13 			  ## echo_api.c:137:9
  10b450:    21 c6       	r1 = r4 			  ## echo_api.c:137:9
  10b452:    82 80       	r2 = 16 			  ## echo_api.c:137:9
  10b454:    db e1 cf d7 	call -296200 <memcpy : c2f50 >			  ## echo_api.c:137:9
  10b458:    39 4b       	r1 = [r7 + 48] 			  ## echo_api.c:108:5
  10b45a:    20 e4 40 7c 	r0 = [addr(4592)]  <.GCPI319_101 : 10c64c >			  ## echo_api.c:108:5
  10b45e:    db e1 df db 	call -296070 <xprintf : c2fdc >			  ## echo_api.c:108:5
  10b462:    f9 4a       	r1 = [r7 + 44] 			  ## echo_api.c:109:5
  10b464:    20 e4 40 7a 	r0 = [addr(4584)]  <.GCPI319_102 : 10c650 >			  ## echo_api.c:109:5
  10b468:    db e1 8f db 	call -296080 <xprintf : c2fdc >			  ## echo_api.c:109:5
  10b46c:    b9 4b       	r1 = [r7 + 56] 			  ## echo_api.c:110:5
  10b46e:    20 e4 40 79 	r0 = [addr(4580)]  <.GCPI319_103 : 10c654 >			  ## echo_api.c:110:5
  10b472:    db e1 3f db 	call -296090 <xprintf : c2fdc >			  ## echo_api.c:110:5
  10b476:    79 4b       	r1 = [r7 + 52] 			  ## echo_api.c:111:5
  10b478:    20 e4 40 77 	r0 = [addr(4572)]  <.GCPI319_104 : 10c658 >			  ## echo_api.c:111:5
  10b47c:    db e1 ef da 	call -296100 <xprintf : c2fdc >			  ## echo_api.c:111:5
  10b480:    3c c6       	r4 = r7 			  ## echo_api.c:113:5
  10b482:    24 e8 41 12 	r1 = [++ r4 = 72] 			  ## echo_api.c:113:5
  10b486:    20 e4 40 75 	r0 = [addr(4564)]  <.GCPI319_105 : 10c65c >			  ## echo_api.c:113:5
  10b48a:    db e1 7f da 	call -296114 <xprintf : c2fdc >			  ## echo_api.c:113:5
  10b48e:    e1 4f       	r1 = [r4 + -4] 			  ## echo_api.c:114:5
  10b490:    20 e4 40 73 	r0 = [addr(4556)]  <.GCPI319_106 : 10c660 >			  ## echo_api.c:114:5
  10b494:    db e1 2f da 	call -296124 <xprintf : c2fdc >			  ## echo_api.c:114:5
  10b498:    f9 4b       	r1 = [r7 + 60] 			  ## echo_api.c:115:5
  10b49a:    20 e4 40 72 	r0 = [addr(4552)]  <.GCPI319_107 : 10c664 >			  ## echo_api.c:115:5
  10b49e:    db e1 df d9 	call -296134 <xprintf : c2fdc >			  ## echo_api.c:115:5
  10b4a2:    a1 4f       	r1 = [r4 + -8] 			  ## echo_api.c:116:5
  10b4a4:    20 e4 40 70 	r0 = [addr(4544)]  <.GCPI319_108 : 10c668 >			  ## echo_api.c:116:5
  10b4a8:    db e1 8f d9 	call -296144 <xprintf : c2fdc >			  ## echo_api.c:116:5
  10b4ac:    c1 44       	r1 = [sp+ 76] 			  ## echo_api.c:148:48
  10b4ae:    61 68       	[r4 + 4] = r1 			  ## echo_api.c:148:24
  10b4b0:    20 e4 40 6e 	r0 = [addr(4536)]  <.GCPI319_109 : 10c66c >			  ## echo_api.c:149:5
  10b4b4:    db e1 2f d9 	call -296156 <xprintf : c2fdc >			  ## echo_api.c:149:5
  10b4b8:    01 45       	r1 = [sp+ 80] 			  ## echo_api.c:150:15
  10b4ba:    4a ce       	cmp r1, r10			  ## echo_api.c:150:9
  10b4bc:    0f 12       	if (nzcv >= 0) goto 30 <app+0x2CC : 10b4dc >			  ## echo_api.c:150:9
  10b4be:    20 e4 40 6e 	r0 = [addr(4536)]  <.GCPI319_112 : 10c678 >			  ## echo_api.c:151:9
  10b4c2:    92 c6       	r2 = r10 			  ## echo_api.c:151:9
  10b4c4:    db e1 af d8 	call -296172 <xprintf : c2fdc >			  ## echo_api.c:151:9
  10b4c8:    54 ea 00 00 	r12 = 0 			  ## toy_main.c:88:15
  10b4cc:    60 e8 bc 01 	[r11 + 4] = r12 			  ## echo_api.c:52:26
  10b4d0:    20 e4 40 4f 	r0 = [addr(4412)]  <.GCPI319_86 : 10c610 >			  ## echo_api.c:61:9
  10b4d4:    db e1 2f d8 	call -296188 <xprintf : c2fdc >			  ## echo_api.c:61:9
  10b4d8:    9d c6       	r5 = r11 			  ## echo_api.c:61:9
  10b4da:    22 08       	goto 68 <app+0x310 : 10b520 >
  10b4dc:    00 ed 75 08 	r5 = r7 + 8 			  ## echo_api.c:158:23
  10b4e0:    7d 6a       	[r7 + 36] = r5 			  ## echo_api.c:158:23
  10b4e2:    20 e4 40 47 	r0 = [addr(4380)]  <.GCPI319_82 : 10c600 >			  ## echo_api.c:159:25
  10b4e6:    b8 6a       	[r7 + 40] = r0 			  ## echo_api.c:159:25
  10b4e8:    20 e4 40 61 	r0 = [addr(4484)]  <.GCPI319_110 : 10c670 >			  ## echo_api.c:164:18
  10b4ec:    38 6a       	[r7 + 32] = r0 			  ## echo_api.c:164:18
  10b4ee:    20 e8 70 13 	r0 = [r7 + 76] 			  ## echo_api.c:165:38
  10b4f2:    f8 69       	[r7 + 28] = r0 			  ## echo_api.c:165:21
  10b4f4:    00 ed 71 1c 	r1 = r7 + 28 			  ## echo_api.c:164:18
  10b4f8:    39 68       	[r7 + 0] = r1 			  ## echo_api.c:167:20
  10b4fa:    20 e4 41 5e 	r1 = [addr(4472)]  <.GCPI319_111 : 10c674 >			  ## echo_api.c:168:19
  10b4fe:    41 e5 76 01 	d[r7 + 4] = r6, r1 			  ## echo_api.c:168:19
  10b502:    00 ed 73 24 	r3 = r7 + 36 			  ## echo_api.c:158:23
  10b506:    a1 c6       	r1 = r12 			  ## echo_api.c:172:5
  10b508:    aa c6       	r2 = r13 			  ## echo_api.c:172:5
  10b50a:    ff e1 3f b3 	call -2458 <echo_open : 10ab74 >			  ## echo_api.c:172:5
  10b50e:    60 e8 b7 01 	[r11 + 4] = r7 			  ## echo_api.c:52:26
  10b512:    00 e2 b3 04 	[r11 + 12] |= 4 			  ## echo_api.c:57:30
  10b516:    20 e4 40 2f 	r0 = [addr(4284)]  <.GCPI319_71 : 10c5d4 >			  ## echo_api.c:59:30
  10b51a:    b8 68       	[r7 + 8] = r0 			  ## echo_api.c:59:30
  10b51c:    54 ea 00 00 	r12 = 0 			  ## toy_main.c:88:15
  10b520:    20 e4 47 7d 	r7 = [addr(4596)]  <.GCPI319_152 : 10c718 >
  10b524:    c0 40       	r0 = [sp+ 12] 
  10b526:    80 ce       	cmp r8, r0			  ## speak_api.c:150:9
  10b528:    55 ea 23 11 	r13 = 4387 			  ## speak_api.c:150:9
  10b52c:    20 e4 3a ec 	r10 = [addr(4016)]  <.GCPI319_10 : 10c4e0 >			  ## speak_api.c:150:9
  10b530:    20 e4 4b 5f 	r11 = [addr(4476)]  <.GCPI319_126 : 10c6b0 >			  ## speak_api.c:150:9
  10b534:    05 11       	ifs (nzcv != 0) goto 10 <app+0x330 : 10b540 >			  ## speak_api.c:150:9
  10b536:    20 e4 38 e3 	r8 = [addr(3980)]  <.GCPI319_3 : 10c4c4 >
  10b53a:    20 e4 46 23 	r6 = [addr(4236)]  <.GCPI319_68 : 10c5c8 >
  10b53e:    0e 08       	goto 28 <app+0x34C : 10b55c >
  10b540:    00 60       	[sp] = r0 			  ## speak_api.c:151:24
  10b542:    20 e4 46 21 	r6 = [addr(4228)]  <.GCPI319_68 : 10c5c8 >			  ## speak_api.c:151:24
  10b546:    00 ed 62 18 	r2 = r6 + 24 			  ## speak_api.c:151:24
  10b54a:    28 c6       	r0 = r5 			  ## speak_api.c:151:24
  10b54c:    20 e4 41 21 	r1 = [addr(4228)]  <.GCPI319_71 : 10c5d4 >			  ## speak_api.c:151:24
  10b550:    83 c6       	r3 = r8 			  ## speak_api.c:151:24
  10b552:    fe e1 1f ab 	call -10910 <link_src_sound : 108ab8 >			  ## speak_api.c:151:24
  10b556:    05 c6       	r5 = r0 			  ## speak_api.c:151:24
  10b558:    20 e4 38 da 	r8 = [addr(3944)]  <.GCPI319_3 : 10c4c4 >			  ## speak_api.c:151:24
  10b55c:    30 c6       	r0 = r6 			  ## speak_api.c:157:9
  10b55e:    2e ce       	cmp r5, r6			  ## speak_api.c:154:9
  10b560:    14 03       	ifs (nzcv != 0) {			  ## speak_api.c:157:9
  10b562:    20 e4 41 46 		r1 = [addr(4376)] 
                               	} else { <.GCPI319_113 : 10c67c >			  ## speak_api.c:157:9
  10b566:    01 80       		r1 = 0 
                               	}			  ## speak_api.c:155:9
  10b568:    ff e1 5f b6 	call -2358 <regist_audio_adc_channel : 10ac36 >			  ## speak_api.c:155:9
  10b56c:    04 80       	r4 = 0 			  ## speak_api.c:155:9
  10b56e:    28 c6       	r0 = r5 			  ## speak_api.c:160:5
  10b570:    01 80       	r1 = 0 			  ## speak_api.c:160:5
  10b572:    fc e1 2f 48 	call -30460 <regist_dac_channel : 103e7a >			  ## speak_api.c:160:5
  10b576:    75 69       	[r6 + 20] = r5 			  ## speak_api.c:161:28
  10b578:    ff e1 8f b7 	call -2320 <audio_adc_enable : 10ac6c >			  ## speak_api.c:166:5
  10b57c:    00 e2 63 01 	[r6 + 12] |= 1 			  ## speak_api.c:167:29
  10b580:    0d 80       	r5 = 1 
  10b582:    20 e4 46 3f 	r6 = [addr(4348)]  <.GCPI319_114 : 10c680 >
  10b586:    17 08       	goto 46 <app+0x3A6 : 10b5b6 >
  10b588:    a0 98       	cmp r0, 20
  10b58a:    03 10       	ifs (nzcv == 0) goto 6 <app+0x382 : 10b592 >
  10b58c:    ff e1 2f 12 	call -7612 <common_msg_deal : 1097d4 >			  ## toy_speaker.c:67:13
  10b590:    12 08       	goto 36 <app+0x3A6 : 10b5b6 >			  ## toy_speaker.c:67:13
  10b592:    94 20       	if (r4 == 0) goto 18 <app+0x396 : 10b5a6 >
  10b594:    20 e4 40 3c 	r0 = [addr(4336)]  <.GCPI319_116 : 10c688 >			  ## toy_speaker.c:57:17
  10b598:    db e1 0f d2 	call -296384 <xprintf : c2fdc >			  ## toy_speaker.c:57:17
  10b59c:    04 80       	r4 = 0 			  ## toy_speaker.c:57:17
  10b59e:    00 80       	r0 = 0 			  ## toy_speaker.c:59:17
  10b5a0:    ff e1 af b6 	call -2348 <dac_mute : 10ac78 >			  ## toy_speaker.c:59:17
  10b5a4:    08 08       	goto 16 <app+0x3A6 : 10b5b6 >			  ## toy_speaker.c:59:17
  10b5a6:    20 e4 40 39 	r0 = [addr(4324)]  <.GCPI319_117 : 10c68c >			  ## toy_speaker.c:52:17
  10b5aa:    db e1 7f d1 	call -296402 <xprintf : c2fdc >			  ## toy_speaker.c:52:17
  10b5ae:    0c 80       	r4 = 1 
  10b5b0:    08 80       	r0 = 1 			  ## toy_speaker.c:54:17
  10b5b2:    ff e1 1f b6 	call -2366 <dac_mute : 10ac78 >			  ## toy_speaker.c:54:17
  10b5b6:    e0 90       	r0 = sp + 28 
  10b5b8:    fe e1 2f 85 	call -12124 <get_msg : 108660 >			  ## toy_speaker.c:43:15
  10b5bc:    01 c6       	r1 = r0 			  ## toy_speaker.c:43:15
  10b5be:    51 20       	if (r1 == 0) goto 10 <app+0x3BA : 10b5ca >
  10b5c0:    60 e9 09 07 	[sp+ 28] = r9 			  ## toy_speaker.c:45:20
  10b5c4:    30 c6       	r0 = r6 			  ## toy_speaker.c:46:13
  10b5c6:    db e1 9f d0 	call -296430 <xprintf : c2fdc >			  ## toy_speaker.c:46:13
  10b5ca:    c0 41       	r0 = [sp+ 28] 			  ## toy_speaker.c:49:17
  10b5cc:    86 ef 00 00 	cmp r0, 1536			  ## toy_speaker.c:49:9
  10b5d0:    db 11       	ifs (nzcv != 0) goto -74 <app+0x378 : 10b588 >			  ## toy_speaker.c:49:9
  10b5d2:    34 20       	if (r4 == 0) goto 6 <app+0x3CA : 10b5da >
  10b5d4:    00 80       	r0 = 0 			  ## toy_speaker.c:73:9
  10b5d6:    ff e1 ff b4 	call -2402 <dac_mute : 10ac78 >			  ## toy_speaker.c:73:9
  10b5da:    20 e4 30 fb 	r0 = [addr(4076)]  <.GCPI319_68 : 10c5c8 >			  ## speak_api.c:172:26
  10b5de:    c0 48       	r0 = [r0 + 12] 			  ## speak_api.c:172:26
  10b5e0:    00 f4 00 01 	tst r0, 1			  ## speak_api.c:172:9
  10b5e4:    20 e4 36 c0 	r6 = [addr(3840)]  <.GCPI319_12 : 10c4e8 >			  ## speak_api.c:172:9
  10b5e8:    19 10       	ifs (nzcv == 0) goto 50 <app+0x40C : 10b61c >			  ## speak_api.c:172:9
  10b5ea:    20 e4 40 26 	r0 = [addr(4248)]  <.GCPI319_115 : 10c684 >			  ## speak_api.c:173:9
  10b5ee:    db e1 5f cf 	call -296470 <xprintf : c2fdc >			  ## speak_api.c:173:9
  10b5f2:    20 e4 34 f5 	r4 = [addr(4052)]  <.GCPI319_68 : 10c5c8 >			  ## speak_api.c:173:9
  10b5f6:    00 e3 43 01 	[r4 + 12] &= (~1) 			  ## speak_api.c:174:33
  10b5fa:    20 c6       	r0 = r4 			  ## speak_api.c:175:9
  10b5fc:    ff e1 6f b5 	call -2388 <unregist_audio_adc_channel : 10acac >			  ## speak_api.c:175:9
  10b600:    60 49       	r0 = [r4 + 20] 			  ## speak_api.c:177:41
  10b602:    fe e1 4f 8b 	call -11928 <unregist_dac_channel : 10876e >			  ## speak_api.c:177:9
  10b606:    a0 49       	r0 = [r4 + 24] 			  ## speak_api.c:180:32
  10b608:    40 20       	if (r0 == 0) goto 8 <app+0x402 : 10b612 >			  ## speak_api.c:180:32
  10b60a:    00 ed 40 18 	r0 = r4 + 24 			  ## speak_api.c:181:13
  10b60e:    fe e1 5f 8d 	call -11862 <src_reless : 1087bc >			  ## speak_api.c:181:13
  10b612:    20 c6       	r0 = r4 			  ## speak_api.c:185:9
  10b614:    01 80       	r1 = 0 			  ## speak_api.c:185:9
  10b616:    02 81       	r2 = 32 			  ## speak_api.c:185:9
  10b618:    db e1 0f ca 	call -296640 <memset : c2f5c >			  ## speak_api.c:185:9
  10b61c:    00 41       	r0 = [sp+ 16] 			  ## toy_speaker.c:77:5
  10b61e:    ff e1 3f 54 	call -5498 <dac_sr_api : 10a0a8 >			  ## toy_speaker.c:77:5
  10b622:    00 80       	r0 = 0 
  10b624:    fe e1 2f 79 	call -12508 <key_table_sel : 10854c >
  10b628:    06 08       	goto 12 <app+0x426 : 10b636 >
  10b62a:    20 e4 40 29 	r0 = [addr(4260)]  <.GCPI319_134 : 10c6d0 >			  ## toy_midi_ctrl.c:154:9
  10b62e:    db e1 5f cd 	call -296534 <xprintf : c2fdc >			  ## toy_midi_ctrl.c:154:9
  10b632:    54 ea 00 00 	r12 = 0 			  ## toy_main.c:88:15
  10b636:    80 41       	r0 = [sp+ 24] 			  ## msg.c:217:5
  10b638:    db e1 ef ca 	call -296612 <cbuf_clear : c2f98 >			  ## msg.c:217:5
  10b63c:    20 e4 30 a0 	r0 = [addr(3712)]  <.GCPI319_2 : 10c4c0 >			  ## toy_main.c:99:17
  10b640:    80 58       	r0 = b[r0 + 8] 			  ## toy_main.c:99:17
  10b642:    38 98       	cmp r0, 7			  ## toy_main.c:99:9
  10b644:    00 fb c8 6d 	if (nzcv > 0) goto 3512 <.GJTIE319_1_1_+0x3CE : 10c400 >			  ## toy_main.c:99:9
  10b648:    01 a1       	r1 = r0 << 1 
  10b64a:    b9 01       	tbh [r1]


.GJTIL319_0_0_:
  10b64c:    16 00     < 22 : 0x16 >
  10b64e:    18 01     < 280 : 0x118 >
  10b650:    23 02     < 547 : 0x223 >
  10b652:    75 03     < 885 : 0x375 >
  10b654:    11 04     < 1041 : 0x411 >
  10b656:    dc 04     < 1244 : 0x4DC >
  10b658:    08 00     < 8 : 0x8 >
  10b65a:    bd 06     < 1725 : 0x6BD >
  10b65c:    20 e4 30 98 	r0 = [addr(3680)]  <.GCPI319_2 : 10c4c0 >
  10b660:    01 c6       	r1 = r0 
  10b662:    88 58       	r0 = b[r1 + 8] 			  ## toy_main.c:146:22
  10b664:    40 d0       	r0 = r0 + 1 			  ## toy_main.c:146:22
  10b666:    88 78       	b[r1 + 8] = r0 			  ## toy_main.c:146:22
  10b668:    88 58       	r0 = b[r1 + 8] 			  ## toy_main.c:147:17
  10b66a:    40 98       	cmp r0, 8			  ## toy_main.c:147:17
  10b66c:    21 03       	if (nzcv >= 0) {			  ## toy_main.c:148:27
  10b66e:    20 e4 30 94 		r0 = [addr(3664)]  <.GCPI319_2 : 10c4c0 >			  ## toy_main.c:148:27
  10b672:    40 e8 0c 02 		b[r0 + 8] = r12 
                               	}			  ## toy_main.c:148:27
  10b676:    df 0f       	goto -66 <app+0x426 : 10b636 >			  ## toy_main.c:148:27
  10b678:    20 e4 40 26 	r0 = [addr(4248)]  <.GCPI319_151 : 10c714 >			  ## toy_music.c:67:5
  10b67c:    fe e1 6f 76 	call -12596 <key_table_sel : 10854c >			  ## toy_music.c:67:5
  10b680:    fe e1 0f 77 	call -12576 <decoder_init : 108564 >			  ## toy_music.c:68:5
  10b684:    38 c6       	r0 = r7 			  ## toy_music.c:70:5
  10b686:    01 80       	r1 = 0 			  ## toy_music.c:70:5
  10b688:    c2 82       	r2 = 88 			  ## toy_music.c:70:5
  10b68a:    db e1 7f c6 	call -296754 <memset : c2f5c >			  ## toy_music.c:70:5
  10b68e:    0e 80       	r6 = 1 			  ## toy_music.c:70:5
  10b690:    20 e4 45 22 	r5 = [addr(4232)]  <.GCPI319_153 : 10c71c >			  ## toy_music.c:70:5
  10b694:    28 c6       	r0 = r5 			  ## toy_music.c:71:5
  10b696:    01 80       	r1 = 0 			  ## toy_music.c:71:5
  10b698:    12 ea 54 01 	r2 = 340 			  ## toy_music.c:71:5
  10b69c:    db e1 ef c5 	call -296772 <memset : c2f5c >			  ## toy_music.c:71:5
  10b6a0:    00 ed 74 20 	r4 = r7 + 32 			  ## toy_music.c:71:5
  10b6a4:    40 e8 4c be 	b[r4 + -6] = r12 			  ## toy_music.c:76:29
  10b6a8:    3e 69       	[r7 + 16] = r6 			  ## toy_music.c:77:29
  10b6aa:    20 e4 3a 8d 	r10 = [addr(3636)]  <.GCPI319_10 : 10c4e0 >			  ## toy_music.c:77:29
  10b6ae:    20 e4 36 8e 	r6 = [addr(3640)]  <.GCPI319_12 : 10c4e8 >			  ## toy_music.c:77:29
  10b6b2:    55 ea 23 11 	r13 = 4387 			  ## toy_music.c:77:29
  10b6b6:    40 e8 4c 82 	b[r4 + 10] = r12 			  ## toy_music.c:78:29
  10b6ba:    28 80       	r0 = 5 			  ## toy_music.c:78:29
  10b6bc:    b8 71       	h[r7 + 24] = r0 			  ## toy_music.c:79:29
  10b6be:    fd 68       	[r7 + 12] = r5 			  ## toy_music.c:80:29
  10b6c0:    0d 80       	r5 = 1 			  ## toy_music.c:80:29
  10b6c2:    20 e4 41 17 	r1 = [addr(4188)]  <.GCPI319_154 : 10c720 >			  ## toy_music.c:81:29
  10b6c6:    79 6a       	[r7 + 36] = r1 			  ## toy_music.c:81:29
  10b6c8:    20 e4 41 16 	r1 = [addr(4184)]  <.GCPI319_155 : 10c724 >			  ## toy_music.c:82:29
  10b6cc:    39 6a       	[r7 + 32] = r1 			  ## toy_music.c:82:29
  10b6ce:    a0 78       	b[r4 + 8] = r0 			  ## toy_music.c:83:29
  10b6d0:    38 c6       	r0 = r7 			  ## toy_music.c:84:5
  10b6d2:    fe e1 ff 77 	call -12546 <simple_dev_fs_mount : 1085d4 >			  ## toy_music.c:84:5
  10b6d6:    00 ed 70 4c 	r0 = r7 + 76 			  ## toy_music.c:84:5
  10b6da:    40 e8 0c be 	b[r0 + -6] = r12 			  ## toy_music.c:98:29
  10b6de:    fd 6b       	[r7 + 60] = r5 			  ## toy_music.c:99:29
  10b6e0:    40 e8 0c 82 	b[r0 + 10] = r12 			  ## toy_music.c:100:29
  10b6e4:    41 80       	r1 = 8 			  ## toy_music.c:101:29
  10b6e6:    81 73       	h[r0 + -8] = r1 			  ## toy_music.c:101:29
  10b6e8:    20 e4 41 0f 	r1 = [addr(4156)]  <.GCPI319_156 : 10c728 >			  ## toy_music.c:102:29
  10b6ec:    e1 6a       	[r4 + 44] = r1 			  ## toy_music.c:102:29
  10b6ee:    85 78       	b[r0 + 8] = r5 			  ## toy_music.c:103:29
  10b6f0:    40 41       	r0 = [sp+ 20] 			  ## toy_music.c:104:5
  10b6f2:    fe e1 ff 76 	call -12578 <simple_dev_fs_mount : 1085d4 >			  ## toy_music.c:104:5
  10b6f6:    91 80       	r1 = 18 			  ## toy_music.c:113:5
  10b6f8:    fe e1 cf 78 	call -12520 <post_msg : 108614 >			  ## toy_music.c:113:5
  10b6fc:    32 08       	goto 100 <.GJTIE319_0_0_+0x106 : 10b762 >			  ## toy_music.c:113:5
  10b6fe:    20 e4 40 14 	r0 = [addr(4176)]  <.GCPI319_166 : 10c750 >			  ## toy_music.c:128:13
  10b702:    db e1 bf c6 	call -296746 <xprintf : c2fdc >			  ## toy_music.c:128:13
  10b706:    38 c6       	r0 = r7 			  ## toy_music.c:129:19
  10b708:    fe e1 0f b8 	call -10496 <play_one_file : 108e0c >			  ## toy_music.c:129:19
  10b70c:    a0 22       	if (r0 == 0) goto 84 <.GJTIE319_0_0_+0x106 : 10b762 >
  10b70e:    55 08       	goto 170 <.GJTIE319_0_0_+0x15E : 10b7ba >
  10b710:    20 e4 40 0b 	r0 = [addr(4140)]  <.GCPI319_162 : 10c740 >			  ## toy_music.c:149:13
  10b714:    db e1 2f c6 	call -296764 <xprintf : c2fdc >			  ## toy_music.c:149:13
  10b718:    b8 48       	r0 = [r7 + 8] 			  ## toy_music.c:293:25
  10b71a:    09 80       	r1 = 1 			  ## toy_music.c:293:5
  10b71c:    fe e1 6f 89 	call -11988 <decoder_stop : 10884c >			  ## toy_music.c:293:5
  10b720:    f9 48       	r1 = [r7 + 12] 			  ## toy_music.c:294:24
  10b722:    31 20       	if (r1 == 0) goto 6 <.GJTIE319_0_0_+0xCE : 10b72a >			  ## toy_music.c:294:24
  10b724:    b8 48       	r0 = [r7 + 8] 			  ## toy_music.c:295:35
  10b726:    fe e1 1f a1 	call -11230 <get_dp : 108b4c >			  ## toy_music.c:295:21
  10b72a:    38 c6       	r0 = r7 			  ## toy_music.c:302:36
  10b72c:    04 e8 02 0a 	r2 = b[++ r0 = 40] 			  ## toy_music.c:302:36
  10b730:    01 5a       	r1 = b[r0 + 1] 			  ## toy_music.c:301:21
  10b732:    49 d0       	r1 = r1 + 1 			  ## toy_music.c:301:21
  10b734:    0b c9       	r3 = r1.b 			  ## toy_music.c:301:21
  10b736:    1a ce       	cmp r3, r2			  ## toy_music.c:302:9
  10b738:    20 03       	if (nzcv >= 0) {			  ## toy_music.c:302:9
  10b73a:    01 80       		r1 = 0 
                               	}			  ## toy_music.c:302:9
  10b73c:    01 7a       	b[r0 + 1] = r1 			  ## toy_music.c:303:26
  10b73e:    08 c9       	r0 = r1.b 			  ## toy_music.c:311:23
  10b740:    00 fc 00 44 	r0 = r0 * 68 			  ## toy_music.c:311:23
  10b744:    20 e4 31 f5 	r1 = [addr(4052)]  <.GCPI319_153 : 10c71c >			  ## toy_music.c:311:23
  10b748:    40 d4       	r0 = r0 + r1 			  ## toy_music.c:311:23
  10b74a:    f8 68       	[r7 + 12] = r0 			  ## toy_music.c:311:20
  10b74c:    05 10       	ifs (nzcv == 0) goto 10 <.GJTIE319_0_0_+0xFC : 10b758 >			  ## toy_music.c:311:20
  10b74e:    01 48       	r1 = [r0 + 0] 			  ## toy_music.c:319:22
  10b750:    08 80       	r0 = 1 			  ## toy_music.c:319:22
  10b752:    31 20       	if (r1 == 0) goto 6 <.GJTIE319_0_0_+0xFE : 10b75a >
  10b754:    08 c6       	r0 = r1 
  10b756:    01 08       	goto 2 <.GJTIE319_0_0_+0xFE : 10b75a >
  10b758:    08 80       	r0 = 1 
  10b75a:    38 69       	[r7 + 16] = r0 
  10b75c:    38 c6       	r0 = r7 			  ## toy_music.c:327:12
  10b75e:    fe e1 5f b5 	call -10582 <play_one_file : 108e0c >			  ## toy_music.c:327:12
  10b762:    e0 90       	r0 = sp + 28 
  10b764:    fe e1 cf 77 	call -12552 <get_msg : 108660 >			  ## toy_music.c:119:15
  10b768:    04 c6       	r4 = r0 			  ## toy_music.c:119:15
  10b76a:    fe e1 7f 7f 	call -12306 <bsp_loop : 10875c >			  ## toy_music.c:120:9
  10b76e:    74 20       	if (r4 == 0) goto 14 <.GJTIE319_0_0_+0x122 : 10b77e >			  ## toy_music.c:120:9
  10b770:    60 e9 09 07 	[sp+ 28] = r9 			  ## toy_music.c:122:20
  10b774:    20 e4 30 ed 	r0 = [addr(4020)]  <.GCPI319_157 : 10c72c >			  ## toy_music.c:123:13
  10b778:    21 c6       	r1 = r4 			  ## toy_music.c:123:13
  10b77a:    db e1 ff c2 	call -296866 <xprintf : c2fdc >			  ## toy_music.c:123:13
  10b77e:    c0 41       	r0 = [sp+ 28] 			  ## toy_music.c:126:17
  10b780:    18 ed 01 00 	r1 = r0 + -2048 			  ## toy_music.c:126:9
  10b784:    81 98       	cmp r1, 16			  ## toy_music.c:126:9
  10b786:    29 18       	if (nzcv > 0) goto 82 <.GJTIE319_0_0_+0x17E : 10b7da >			  ## toy_music.c:126:9
  10b788:    00 f7 51 01 	r1 = r5 << r1 
  10b78c:    12 ea 03 d8 	r2 = 55299 
  10b790:    00 f2 21 00 	tst r1, r2
  10b794:    0a 11       	ifs (nzcv != 0) goto 20 <.GJTIE319_0_0_+0x14E : 10b7aa >
  10b796:    20 e4 32 f1 	r2 = [addr(4036)]  <.GCPI319_169 : 10c75c >
  10b79a:    00 f2 21 00 	tst r1, r2
  10b79e:    11 10       	ifs (nzcv == 0) goto 34 <.GJTIE319_0_0_+0x166 : 10b7c2 >
  10b7a0:    20 e4 30 e3 	r0 = [addr(3980)]  <.GCPI319_158 : 10c730 >			  ## toy_music.c:194:13
  10b7a4:    db e1 af c1 	call -296908 <xprintf : c2fdc >			  ## toy_music.c:194:13
  10b7a8:    dc 0f       	goto -72 <.GJTIE319_0_0_+0x106 : 10b762 >			  ## toy_music.c:194:13
  10b7aa:    20 e4 30 e4 	r0 = [addr(3984)]  <.GCPI319_161 : 10c73c >			  ## toy_music.c:164:13
  10b7ae:    db e1 5f c1 	call -296918 <xprintf : c2fdc >			  ## toy_music.c:164:13
  10b7b2:    b8 48       	r0 = [r7 + 8] 			  ## toy_music.c:165:38
  10b7b4:    09 80       	r1 = 1 			  ## toy_music.c:165:13
  10b7b6:    fe e1 9f 84 	call -12142 <decoder_stop : 10884c >			  ## toy_music.c:165:13
  10b7ba:    38 c6       	r0 = r7 
  10b7bc:    fe e1 2f ba 	call -10428 <play_next_file : 108f04 >
  10b7c0:    d0 0f       	goto -96 <.GJTIE319_0_0_+0x106 : 10b762 >
  10b7c2:    0f f4 10 40 	tst r1, 768
  10b7c6:    09 10       	ifs (nzcv == 0) goto 18 <.GJTIE319_0_0_+0x17E : 10b7da >
  10b7c8:    20 e4 30 da 	r0 = [addr(3944)]  <.GCPI319_159 : 10c734 >			  ## toy_music.c:175:13
  10b7cc:    db e1 6f c0 	call -296948 <xprintf : c2fdc >			  ## toy_music.c:175:13
  10b7d0:    78 4b       	r0 = [r7 + 52] 			  ## toy_music.c:176:38
  10b7d2:    09 80       	r1 = 1 			  ## toy_music.c:176:13
  10b7d4:    fe e1 af 83 	call -12172 <decoder_stop : 10884c >			  ## toy_music.c:176:13
  10b7d8:    c4 0f       	goto -120 <.GJTIE319_0_0_+0x106 : 10b762 >			  ## toy_music.c:176:13
  10b7da:    1f ed 01 f3 	r1 = r0 + -13 
  10b7de:    59 98       	cmp r1, 11
  10b7e0:    37 18       	if (nzcv > 0) goto 110 <.GJTIE319_4_4_+0x60 : 10b850 >
  10b7e2:    b1 01       	tbb [r1]


.GJTIS319_4_4_:
  10b7e4:    29     < 41 : 0x29 >
  10b7e5:    25     < 37 : 0x25 >
  10b7e6:    25     < 37 : 0x25 >
  10b7e7:    25     < 37 : 0x25 >
  10b7e8:    25     < 37 : 0x25 >
  10b7e9:    24     < 36 : 0x24 >
  10b7ea:    25     < 37 : 0x25 >
  10b7eb:    1c     < 28 : 0x1C >
  10b7ec:    17     < 23 : 0x17 >
  10b7ed:    0f     < 15 : 0xF >
  10b7ee:    0e     < 14 : 0xE >
  10b7ef:    06     < 6 : 0x6 >
  10b7f0:    20 e4 30 d1 	r0 = [addr(3908)]  <.GCPI319_160 : 10c738 >			  ## toy_music.c:170:13
  10b7f4:    db e1 2f bf 	call -296988 <xprintf : c2fdc >			  ## toy_music.c:170:13
  10b7f8:    40 41       	r0 = [sp+ 20] 			  ## toy_music.c:171:13
  10b7fa:    fe e1 7f b0 	call -10738 <play_one_file : 108e0c >			  ## toy_music.c:171:13
  10b7fe:    b1 0f       	goto -158 <.GJTIE319_0_0_+0x106 : 10b762 >			  ## toy_music.c:171:13
  10b800:    87 0f       	goto -242 <.GJTIE319_0_0_+0xB4 : 10b710 >
  10b802:    20 e4 30 d1 	r0 = [addr(3908)]  <.GCPI319_164 : 10c748 >			  ## toy_music.c:140:13
  10b806:    db e1 9f be 	call -297006 <xprintf : c2fdc >			  ## toy_music.c:140:13
  10b80a:    38 c6       	r0 = r7 			  ## toy_music.c:141:13
  10b80c:    fe e1 ef b8 	call -10468 <play_prev_file : 108f2c >			  ## toy_music.c:141:13
  10b810:    a8 0f       	goto -176 <.GJTIE319_0_0_+0x106 : 10b762 >			  ## toy_music.c:141:13
  10b812:    20 e4 30 cc 	r0 = [addr(3888)]  <.GCPI319_163 : 10c744 >			  ## toy_music.c:144:13
  10b816:    db e1 1f be 	call -297022 <xprintf : c2fdc >			  ## toy_music.c:144:13
  10b81a:    cf 0f       	goto -98 <.GJTIE319_0_0_+0x15E : 10b7ba >			  ## toy_music.c:144:13
  10b81c:    20 e4 30 cb 	r0 = [addr(3884)]  <.GCPI319_165 : 10c74c >			  ## toy_music.c:136:13
  10b820:    db e1 cf bd 	call -297032 <xprintf : c2fdc >			  ## toy_music.c:136:13
  10b824:    b8 48       	r0 = [r7 + 8] 			  ## toy_music.c:137:39
  10b826:    fe e1 ff b6 	call -10530 <decoder_pause : 108f08 >			  ## toy_music.c:137:13
  10b82a:    9b 0f       	goto -202 <.GJTIE319_0_0_+0x106 : 10b762 >			  ## toy_music.c:137:13
  10b82c:    68 0f       	goto -304 <.GJTIE319_0_0_+0xA2 : 10b6fe >
  10b82e:    c0 41       	r0 = [sp+ 28] 
  10b830:    fe e1 0f fd 	call -8288 <common_msg_deal : 1097d4 >			  ## toy_music.c:206:13
  10b834:    96 0f       	goto -212 <.GJTIE319_0_0_+0x106 : 10b762 >			  ## toy_music.c:206:13
  10b836:    b8 48       	r0 = [r7 + 8] 			  ## toy_music.c:200:63
  10b838:    fe e1 af b7 	call -10508 <get_decoder_status : 108f30 >			  ## toy_music.c:200:32
  10b83c:    45 ce       	cmp r0, r13			  ## toy_music.c:200:75
  10b83e:    f7 10       	ifs (nzcv == 0) goto -18 <.GJTIE319_4_4_+0x3E : 10b82e >			  ## toy_music.c:200:75
  10b840:    78 4b       	r0 = [r7 + 52] 			  ## toy_music.c:201:63
  10b842:    fe e1 5f b7 	call -10518 <get_decoder_status : 108f30 >			  ## toy_music.c:201:32
  10b846:    45 ce       	cmp r0, r13			  ## toy_music.c:200:17
  10b848:    10 03       	ifs (nzcv != 0) {			  ## toy_music.c:203:17
  10b84a:    fe e1 ff ce 		call -9762
                               	} <sys_idle_deal : 10922c >			  ## toy_music.c:203:17
  10b84e:    ef 0f       	goto -34 <.GJTIE319_4_4_+0x3E : 10b82e >			  ## toy_music.c:203:17
  10b850:    86 ef 00 00 	cmp r0, 1536
  10b854:    ec 11       	ifs (nzcv != 0) goto -40 <.GJTIE319_4_4_+0x3E : 10b82e >
  10b856:    b8 48       	r0 = [r7 + 8] 			  ## toy_music.c:211:30
  10b858:    09 80       	r1 = 1 			  ## toy_music.c:211:5
  10b85a:    fe e1 7f 7f 	call -12306 <decoder_stop : 10884c >			  ## toy_music.c:211:5
  10b85e:    00 e5 71 02 	r1, r0 = d[r7 + 8] 			  ## toy_music.c:213:59
  10b862:    fe e1 3f 97 	call -11546 <get_dp : 108b4c >			  ## toy_music.c:213:17
  10b866:    38 c6       	r0 = r7 			  ## toy_music.c:220:5
  10b868:    ff e1 cf 03 	call -8072 <simple_dev_fs_close : 1098e4 >			  ## toy_music.c:220:5
  10b86c:    78 4b       	r0 = [r7 + 52] 			  ## toy_music.c:221:30
  10b86e:    09 80       	r1 = 1 			  ## toy_music.c:221:5
  10b870:    fe e1 cf 7e 	call -12328 <decoder_stop : 10884c >			  ## toy_music.c:221:5
  10b874:    40 41       	r0 = [sp+ 20] 			  ## toy_music.c:222:5
  10b876:    ff e1 5f 03 	call -8086 <simple_dev_fs_close : 1098e4 >			  ## toy_music.c:222:5
  10b87a:    d3 0e       	goto -602 <app+0x412 : 10b622 >			  ## toy_music.c:222:5
  10b87c:    20 e4 30 95 	r0 = [addr(3668)]  <.GCPI319_135 : 10c6d4 >			  ## toy_midi.c:35:5
  10b880:    db e1 cf ba 	call -297128 <xprintf : c2fdc >			  ## toy_midi.c:35:5
  10b884:    fe e1 ef 66 	call -13092 <decoder_init : 108564 >			  ## toy_midi.c:36:5
  10b888:    fe e1 1f 46 	call -14142 <midi_decode_init : 10814e >			  ## toy_midi.c:37:5
  10b88c:    20 e4 30 92 	r0 = [addr(3656)]  <.GCPI319_136 : 10c6d8 >			  ## toy_midi.c:38:5
  10b890:    fe e1 cf 65 	call -13128 <key_table_sel : 10854c >			  ## toy_midi.c:38:5
  10b894:    20 e4 36 91 	r6 = [addr(3652)]  <.GCPI319_137 : 10c6dc >			  ## toy_midi.c:38:5
  10b898:    30 c6       	r0 = r6 			  ## toy_midi.c:40:5
  10b89a:    01 80       	r1 = 0 			  ## toy_midi.c:40:5
  10b89c:    c2 82       	r2 = 88 			  ## toy_midi.c:40:5
  10b89e:    db e1 df b5 	call -297286 <memset : c2f5c >			  ## toy_midi.c:40:5
  10b8a2:    00 ed 64 20 	r4 = r6 + 32 			  ## toy_midi.c:40:5
  10b8a6:    40 e8 4c be 	b[r4 + -6] = r12 			  ## toy_midi.c:41:30
  10b8aa:    35 69       	[r6 + 16] = r5 			  ## toy_midi.c:42:30
  10b8ac:    80 80       	r0 = 16 			  ## toy_midi.c:43:30
  10b8ae:    b0 71       	h[r6 + 24] = r0 			  ## toy_midi.c:43:30
  10b8b0:    20 e4 30 8b 	r0 = [addr(3628)]  <.GCPI319_138 : 10c6e0 >			  ## toy_midi.c:44:30
  10b8b4:    30 6a       	[r6 + 32] = r0 			  ## toy_midi.c:44:30
  10b8b6:    a5 78       	b[r4 + 8] = r5 			  ## toy_midi.c:45:30
  10b8b8:    30 c6       	r0 = r6 			  ## toy_midi.c:46:5
  10b8ba:    fe e1 bf 68 	call -13034 <simple_dev_fs_mount : 1085d4 >			  ## toy_midi.c:46:5
  10b8be:    91 80       	r1 = 18 			  ## toy_midi.c:47:5
  10b8c0:    fe e1 8f 6a 	call -12976 <post_msg : 108614 >			  ## toy_midi.c:47:5
  10b8c4:    00 ed 60 4c 	r0 = r6 + 76 			  ## toy_midi.c:47:5
  10b8c8:    40 e8 0c be 	b[r0 + -6] = r12 			  ## toy_midi.c:49:30
  10b8cc:    f5 6b       	[r6 + 60] = r5 			  ## toy_midi.c:50:30
  10b8ce:    11 ea ff 00 	r1 = 255 			  ## toy_midi.c:51:30
  10b8d2:    81 7c       	b[r0 + 10] = r1 			  ## toy_midi.c:51:30
  10b8d4:    41 80       	r1 = 8 			  ## toy_midi.c:52:30
  10b8d6:    81 73       	h[r0 + -8] = r1 			  ## toy_midi.c:52:30
  10b8d8:    20 e4 31 82 	r1 = [addr(3592)]  <.GCPI319_139 : 10c6e4 >			  ## toy_midi.c:53:30
  10b8dc:    e1 6a       	[r4 + 44] = r1 			  ## toy_midi.c:53:30
  10b8de:    85 78       	b[r0 + 8] = r5 			  ## toy_midi.c:54:30
  10b8e0:    00 ed 64 2c 	r4 = r6 + 44 			  ## toy_midi.c:49:30
  10b8e4:    20 e4 26 fe 	r6 = [addr(3064)]  <.GCPI319_10 : 10c4e0 >			  ## toy_midi.c:49:30
  10b8e8:    20 c6       	r0 = r4 			  ## toy_midi.c:55:5
  10b8ea:    fe e1 3f 67 	call -13082 <simple_dev_fs_mount : 1085d4 >			  ## toy_midi.c:55:5
  10b8ee:    53 08       	goto 166 <.GJTIE319_4_4_+0x1A6 : 10b996 >			  ## toy_midi.c:55:5
  10b8f0:    20 e4 30 80 	r0 = [addr(3584)]  <.GCPI319_143 : 10c6f4 >			  ## toy_midi.c:111:13
  10b8f4:    db e1 2f b7 	call -297244 <xprintf : c2fdc >			  ## toy_midi.c:111:13
  10b8f8:    20 e4 36 78 	r6 = [addr(3552)]  <.GCPI319_137 : 10c6dc >			  ## toy_midi.c:111:13
  10b8fc:    b0 48       	r0 = [r6 + 8] 			  ## toy_midi.c:112:39
  10b8fe:    09 80       	r1 = 1 			  ## toy_midi.c:112:13
  10b900:    fe e1 4f 7a 	call -12472 <decoder_stop : 10884c >			  ## toy_midi.c:112:13
  10b904:    30 c6       	r0 = r6 			  ## toy_midi.c:113:13
  10b906:    20 e4 26 f6 	r6 = [addr(3032)]  <.GCPI319_10 : 10c4e0 >			  ## toy_midi.c:113:13
  10b90a:    fe e1 bf af 	call -10762 <play_next_file : 108f04 >			  ## toy_midi.c:113:13
  10b90e:    43 08       	goto 134 <.GJTIE319_4_4_+0x1A6 : 10b996 >			  ## toy_midi.c:113:13
  10b910:    20 e4 30 76 	r0 = [addr(3544)]  <.GCPI319_141 : 10c6ec >			  ## toy_midi.c:122:13
  10b914:    db e1 2f b6 	call -297276 <xprintf : c2fdc >			  ## toy_midi.c:122:13
  10b918:    20 e4 30 70 	r0 = [addr(3520)]  <.GCPI319_137 : 10c6dc >			  ## toy_midi.c:123:39
  10b91c:    40 4b       	r0 = [r0 + 52] 			  ## toy_midi.c:123:39
  10b91e:    09 80       	r1 = 1 			  ## toy_midi.c:123:13
  10b920:    fe e1 4f 79 	call -12504 <decoder_stop : 10884c >			  ## toy_midi.c:123:13
  10b924:    38 08       	goto 112 <.GJTIE319_4_4_+0x1A6 : 10b996 >			  ## toy_midi.c:123:13
  10b926:    20 e4 30 77 	r0 = [addr(3548)]  <.GCPI319_147 : 10c704 >			  ## toy_midi.c:89:13
  10b92a:    db e1 7f b5 	call -297298 <xprintf : c2fdc >			  ## toy_midi.c:89:13
  10b92e:    20 e4 30 6b 	r0 = [addr(3500)]  <.GCPI319_137 : 10c6dc >			  ## toy_midi.c:90:19
  10b932:    fe e1 bf a6 	call -11050 <play_one_file : 108e0c >			  ## toy_midi.c:90:19
  10b936:    f0 22       	if (r0 == 0) goto 94 <.GJTIE319_4_4_+0x1A6 : 10b996 >
  10b938:    20 e4 30 68 	r0 = [addr(3488)]  <.GCPI319_137 : 10c6dc >
  10b93c:    fe e1 2f ae 	call -10812 <play_next_file : 108f04 >
  10b940:    2a 08       	goto 84 <.GJTIE319_4_4_+0x1A6 : 10b996 >
  10b942:    20 e4 30 73 	r0 = [addr(3532)]  <.GCPI319_150 : 10c710 >			  ## toy_midi.c:72:13
  10b946:    db e1 9f b4 	call -297326 <xprintf : c2fdc >			  ## toy_midi.c:72:13
  10b94a:    20 e4 32 6f 	r2 = [addr(3516)]  <.GCPI319_148 : 10c708 >			  ## toy_midi.c:74:28
  10b94e:    04 e8 21 02 	r1 = b[++ r2 = 8] 			  ## toy_midi.c:74:28
  10b952:    08 80       	r0 = 1 			  ## toy_midi.c:74:33
  10b954:    11 20       	if (r1 == 0) goto 2 <.GJTIE319_4_4_+0x168 : 10b958 >			  ## toy_midi.c:74:33
  10b956:    00 80       	r0 = 0 
  10b958:    10 78       	b[r2 + 0] = r0 
  10b95a:    20 e4 30 60 	r0 = [addr(3456)]  <.GCPI319_137 : 10c6dc >			  ## toy_midi.c:79:42
  10b95e:    80 48       	r0 = [r0 + 8] 			  ## toy_midi.c:79:42
  10b960:    11 ea a4 00 	r1 = 164 			  ## toy_midi.c:79:13
  10b964:    fe e1 af fc 	call -8300 <midi_dec_config : 1098fc >			  ## toy_midi.c:79:13
  10b968:    16 08       	goto 44 <.GJTIE319_4_4_+0x1A6 : 10b996 >			  ## toy_midi.c:79:13
  10b96a:    20 e4 30 67 	r0 = [addr(3484)]  <.GCPI319_148 : 10c708 >			  ## toy_midi.c:82:34
  10b96e:    80 58       	r0 = b[r0 + 8] 			  ## toy_midi.c:82:34
  10b970:    08 98       	cmp r0, 1			  ## toy_midi.c:82:17
  10b972:    11 11       	ifs (nzcv != 0) goto 34 <.GJTIE319_4_4_+0x1A6 : 10b996 >			  ## toy_midi.c:82:17
  10b974:    20 e4 30 65 	r0 = [addr(3476)]  <.GCPI319_149 : 10c70c >			  ## toy_midi.c:83:17
  10b978:    db e1 0f b3 	call -297376 <xprintf : c2fdc >			  ## toy_midi.c:83:17
  10b97c:    20 e4 30 57 	r0 = [addr(3420)]  <.GCPI319_137 : 10c6dc >			  ## toy_midi.c:84:45
  10b980:    80 48       	r0 = [r0 + 8] 			  ## toy_midi.c:84:45
  10b982:    11 ea a3 00 	r1 = 163 			  ## midi_config.c:63:5
  10b986:    02 80       	r2 = 0 			  ## midi_config.c:63:5
  10b988:    fe e1 8f fb 	call -8336 <midi_dec_config : 1098fc >			  ## midi_config.c:63:5
  10b98c:    04 08       	goto 8 <.GJTIE319_4_4_+0x1A6 : 10b996 >
  10b98e:    20 e4 30 56 	r0 = [addr(3416)]  <.GCPI319_140 : 10c6e8 >			  ## toy_midi.c:126:13
  10b992:    db e1 3f b2 	call -297402 <xprintf : c2fdc >			  ## toy_midi.c:126:13
  10b996:    e0 90       	r0 = sp + 28 
  10b998:    fe e1 2f 66 	call -13116 <get_msg : 108660 >			  ## toy_midi.c:59:15
  10b99c:    01 c6       	r1 = r0 			  ## toy_midi.c:59:15
  10b99e:    51 20       	if (r1 == 0) goto 10 <.GJTIE319_4_4_+0x1BA : 10b9aa >
  10b9a0:    60 e9 09 07 	[sp+ 28] = r9 			  ## toy_midi.c:61:20
  10b9a4:    30 c6       	r0 = r6 			  ## toy_midi.c:62:13
  10b9a6:    db e1 9f b1 	call -297422 <xprintf : c2fdc >			  ## toy_midi.c:62:13
  10b9aa:    fe e1 7f 6d 	call -12882 <bsp_loop : 10875c >			  ## toy_midi.c:64:9
  10b9ae:    c0 41       	r0 = [sp+ 28] 			  ## toy_midi.c:66:23
  10b9b0:    41 ce       	cmp r0, r9			  ## toy_midi.c:66:13
  10b9b2:    f1 10       	ifs (nzcv == 0) goto -30 <.GJTIE319_4_4_+0x1A6 : 10b996 >			  ## toy_midi.c:66:13
  10b9b4:    1f ed 01 f3 	r1 = r0 + -13 
  10b9b8:    89 98       	cmp r1, 17
  10b9ba:    42 18       	if (nzcv > 0) goto 132 <.GJTIE319_3_3_+0x70 : 10ba40 >
  10b9bc:    b1 01       	tbb [r1]


.GJTIS319_3_3_:
  10b9be:    30     < 48 : 0x30 >
  10b9bf:    2c     < 44 : 0x2C >
  10b9c0:    2c     < 44 : 0x2C >
  10b9c1:    2c     < 44 : 0x2C >
  10b9c2:    2c     < 44 : 0x2C >
  10b9c3:    2b     < 43 : 0x2B >
  10b9c4:    2c     < 44 : 0x2C >
  10b9c5:    21     < 33 : 0x21 >
  10b9c6:    1c     < 28 : 0x1C >
  10b9c7:    13     < 19 : 0x13 >
  10b9c8:    2c     < 44 : 0x2C >
  10b9c9:    0b     < 11 : 0xB >
  10b9ca:    2c     < 44 : 0x2C >
  10b9cb:    2c     < 44 : 0x2C >
  10b9cc:    2c     < 44 : 0x2C >
  10b9cd:    2c     < 44 : 0x2C >
  10b9ce:    0a     < 10 : 0xA >
  10b9cf:    09     < 9 : 0x9 >
  10b9d0:    cc 0f       	goto -104 <.GJTIE319_4_4_+0x17A : 10b96a >
  10b9d2:    b7 0f       	goto -146 <.GJTIE319_4_4_+0x152 : 10b942 >
  10b9d4:    20 e4 30 46 	r0 = [addr(3352)]  <.GCPI319_142 : 10c6f0 >			  ## toy_midi.c:117:13
  10b9d8:    db e1 0f b0 	call -297472 <xprintf : c2fdc >			  ## toy_midi.c:117:13
  10b9dc:    20 c6       	r0 = r4 			  ## toy_midi.c:118:13
  10b9de:    fe e1 5f a1 	call -11222 <play_one_file : 108e0c >			  ## toy_midi.c:118:13
  10b9e2:    d9 0f       	goto -78 <.GJTIE319_4_4_+0x1A6 : 10b996 >			  ## toy_midi.c:118:13
  10b9e4:    20 e4 30 45 	r0 = [addr(3348)]  <.GCPI319_145 : 10c6fc >			  ## toy_midi.c:101:13
  10b9e8:    db e1 8f af 	call -297488 <xprintf : c2fdc >			  ## toy_midi.c:101:13
  10b9ec:    20 e4 30 3b 	r0 = [addr(3308)]  <.GCPI319_137 : 10c6dc >			  ## toy_midi.c:102:13
  10b9f0:    fe e1 cf a9 	call -10952 <play_prev_file : 108f2c >			  ## toy_midi.c:102:13
  10b9f4:    d0 0f       	goto -96 <.GJTIE319_4_4_+0x1A6 : 10b996 >			  ## toy_midi.c:102:13
  10b9f6:    20 e4 30 40 	r0 = [addr(3328)]  <.GCPI319_144 : 10c6f8 >			  ## toy_midi.c:105:13
  10b9fa:    db e1 ff ae 	call -297506 <xprintf : c2fdc >			  ## toy_midi.c:105:13
  10b9fe:    9c 0f       	goto -200 <.GJTIE319_4_4_+0x148 : 10b938 >			  ## toy_midi.c:105:13
  10ba00:    20 e4 30 3f 	r0 = [addr(3324)]  <.GCPI319_146 : 10c700 >			  ## toy_midi.c:97:13
  10ba04:    db e1 af ae 	call -297516 <xprintf : c2fdc >			  ## toy_midi.c:97:13
  10ba08:    20 e4 30 34 	r0 = [addr(3280)]  <.GCPI319_137 : 10c6dc >			  ## toy_midi.c:98:40
  10ba0c:    80 48       	r0 = [r0 + 8] 			  ## toy_midi.c:98:40
  10ba0e:    fe e1 bf a7 	call -11018 <decoder_pause : 108f08 >			  ## toy_midi.c:98:13
  10ba12:    c1 0f       	goto -126 <.GJTIE319_4_4_+0x1A6 : 10b996 >			  ## toy_midi.c:98:13
  10ba14:    88 0f       	goto -240 <.GJTIE319_4_4_+0x136 : 10b926 >
  10ba16:    c0 41       	r0 = [sp+ 28] 
  10ba18:    fe e1 cf ed 	call -8776 <common_msg_deal : 1097d4 >			  ## toy_midi.c:138:13
  10ba1c:    bc 0f       	goto -136 <.GJTIE319_4_4_+0x1A6 : 10b996 >			  ## toy_midi.c:138:13
  10ba1e:    20 e4 30 2f 	r0 = [addr(3260)]  <.GCPI319_137 : 10c6dc >			  ## toy_midi.c:132:64
  10ba22:    80 48       	r0 = [r0 + 8] 			  ## toy_midi.c:132:64
  10ba24:    fe e1 4f a8 	call -11000 <get_decoder_status : 108f30 >			  ## toy_midi.c:132:32
  10ba28:    45 ce       	cmp r0, r13			  ## toy_midi.c:132:76
  10ba2a:    f5 10       	ifs (nzcv == 0) goto -22 <.GJTIE319_3_3_+0x46 : 10ba16 >			  ## toy_midi.c:132:76
  10ba2c:    20 e4 30 2b 	r0 = [addr(3244)]  <.GCPI319_137 : 10c6dc >			  ## toy_midi.c:133:64
  10ba30:    40 4b       	r0 = [r0 + 52] 			  ## toy_midi.c:133:64
  10ba32:    fe e1 df a7 	call -11014 <get_decoder_status : 108f30 >			  ## toy_midi.c:133:32
  10ba36:    45 ce       	cmp r0, r13			  ## toy_midi.c:132:17
  10ba38:    10 03       	ifs (nzcv != 0) {			  ## toy_midi.c:135:17
  10ba3a:    fe e1 7f bf 		call -10258
                               	} <sys_idle_deal : 10922c >			  ## toy_midi.c:135:17
  10ba3e:    eb 0f       	goto -42 <.GJTIE319_3_3_+0x46 : 10ba16 >			  ## toy_midi.c:135:17
  10ba40:    17 ed 01 fa 	r1 = r0 + -2054 
  10ba44:    11 98       	cmp r1, 2
  10ba46:    ff fb 33 f5 	if (nzcv < 0) goto -346 <.GJTIE319_4_4_+0x100 : 10b8f0 >
  10ba4a:    17 ed 01 f8 	r1 = r0 + -2056 
  10ba4e:    11 98       	cmp r1, 2
  10ba50:    ff fb e3 f5 	if (nzcv < 0) goto -324 <.GJTIE319_4_4_+0x120 : 10b910 >
  10ba54:    11 ea 0a 08 	r1 = 2058 
  10ba58:    01 ce       	cmp r0, r1
  10ba5a:    99 10       	ifs (nzcv == 0) goto -206 <.GJTIE319_4_4_+0x19E : 10b98e >
  10ba5c:    86 ef 00 00 	cmp r0, 1536
  10ba60:    da 11       	ifs (nzcv != 0) goto -76 <.GJTIE319_3_3_+0x46 : 10ba16 >
  10ba62:    20 e4 36 1e 	r6 = [addr(3192)]  <.GCPI319_137 : 10c6dc >
  10ba66:    b0 48       	r0 = [r6 + 8] 			  ## toy_midi.c:143:31
  10ba68:    09 80       	r1 = 1 			  ## toy_midi.c:143:5
  10ba6a:    fe e1 ff 6e 	call -12834 <decoder_stop : 10884c >			  ## toy_midi.c:143:5
  10ba6e:    30 c6       	r0 = r6 			  ## toy_midi.c:144:5
  10ba70:    fe e1 8f f3 	call -8592 <simple_dev_fs_close : 1098e4 >			  ## toy_midi.c:144:5
  10ba74:    70 4b       	r0 = [r6 + 52] 			  ## toy_midi.c:145:31
  10ba76:    20 e4 2a 9a 	r10 = [addr(2664)]  <.GCPI319_10 : 10c4e0 >			  ## toy_midi.c:145:31
  10ba7a:    09 80       	r1 = 1 			  ## toy_midi.c:145:5
  10ba7c:    fe e1 6f 6e 	call -12852 <decoder_stop : 10884c >			  ## toy_midi.c:145:5
  10ba80:    20 c6       	r0 = r4 			  ## toy_midi.c:146:5
  10ba82:    fe e1 ff f2 	call -8610 <simple_dev_fs_close : 1098e4 >			  ## toy_midi.c:146:5
  10ba86:    00 80       	r0 = 0 			  ## toy_midi.c:147:5
  10ba88:    fe e1 0f 56 	call -13632 <key_table_sel : 10854c >			  ## toy_midi.c:147:5
  10ba8c:    20 e4 26 96 	r6 = [addr(2648)]  <.GCPI319_12 : 10c4e8 >			  ## toy_midi.c:147:5
  10ba90:    d2 0d       	goto -1116 <app+0x426 : 10b636 >			  ## toy_midi.c:147:5
  10ba92:    20 e4 20 ff 	r0 = [addr(3068)]  <.GCPI319_118 : 10c690 >			  ## toy_midi_ctrl.c:131:5
  10ba96:    db e1 1f aa 	call -297662 <xprintf : c2fdc >			  ## toy_midi_ctrl.c:131:5
  10ba9a:    20 e4 20 fe 	r0 = [addr(3064)]  <.GCPI319_119 : 10c694 >			  ## toy_midi_ctrl.c:137:28
  10ba9e:    50 e8 0c 00 	h[r0 + 0] = r12 			  ## toy_midi_ctrl.c:137:28
  10baa2:    20 e4 20 fd 	r0 = [addr(3060)]  <.GCPI319_120 : 10c698 >			  ## toy_midi_ctrl.c:148:5
  10baa6:    fe e1 1f 55 	call -13662 <key_table_sel : 10854c >			  ## toy_midi_ctrl.c:148:5
  10baaa:    fe e1 bf 55 	call -13642 <decoder_init : 108564 >			  ## toy_midi_ctrl.c:149:5
  10baae:    00 80       	r0 = 0 			  ## toy_main.c:88:15
  10bab0:    20 e4 2c fa 	r12 = [addr(3048)]  <.GCPI319_121 : 10c69c >			  ## toy_main.c:88:15
  10bab4:    60 e8 c0 00 	[r12 + 0] = r0 			  ## toy_midi_ctrl.c:150:36
  10bab8:    fe e1 cf 37 	call -14600 <midi_ctrl_decode_init : 1081b4 >			  ## toy_midi_ctrl.c:151:5
  10babc:    00 80       	r0 = 0 			  ## toy_midi_ctrl.c:152:25
  10babe:    01 81       	r1 = 32 			  ## toy_midi_ctrl.c:152:25
  10bac0:    02 80       	r2 = 0 			  ## toy_midi_ctrl.c:152:25
  10bac2:    03 80       	r3 = 0 			  ## toy_midi_ctrl.c:152:25
  10bac4:    fe e1 6f 87 	call -12052 <decoder_io : 108bb4 >			  ## toy_midi_ctrl.c:152:25
  10bac8:    04 c6       	r4 = r0 			  ## toy_midi_ctrl.c:152:25
  10baca:    60 e8 e4 00 	[r14 + 0] = r4 			  ## toy_midi_ctrl.c:152:23
  10bace:    04 98       	cmp r4, 0			  ## toy_midi_ctrl.c:152:23
  10bad0:    ff fb b0 da 	ifs (nzcv == 0) goto -1194 <app+0x41A : 10b62a >			  ## toy_midi_ctrl.c:152:23
  10bad4:    66 48       	r6 = [r4 + 4] 			  ## toy_midi_ctrl.c:304:56
  10bad6:    44 62       	[sp+ 36] = r4 			  ## toy_midi_ctrl.c:307:22
  10bad8:    20 e4 20 f2 	r0 = [addr(3016)]  <.GCPI319_123 : 10c6a4 >			  ## toy_midi_ctrl.c:308:32
  10badc:    80 62       	[sp+ 40] = r0 			  ## toy_midi_ctrl.c:308:32
  10bade:    a0 48       	r0 = [r4 + 8] 			  ## toy_midi_ctrl.c:309:27
  10bae0:    73 4a       	r3 = [r6 + 36] 			  ## toy_midi_ctrl.c:309:10
  10bae2:    22 91       	r2 = sp + 36 			  ## toy_midi_ctrl.c:309:10
  10bae4:    11 ea ab 00 	r1 = 171 			  ## toy_midi_ctrl.c:309:5
  10bae8:    ab 01       	call r3			  ## toy_midi_ctrl.c:309:5
  10baea:    c4 62       	[sp+ 44] = r4 			  ## toy_midi_ctrl.c:312:27
  10baec:    05 80       	r5 = 0 			  ## toy_midi_ctrl.c:312:27
  10baee:    40 e9 05 0c 	b[sp+ 48] = r5 			  ## toy_midi_ctrl.c:313:38
  10baf2:    20 e4 20 ed 	r0 = [addr(2996)]  <.GCPI319_124 : 10c6a8 >			  ## toy_midi_ctrl.c:314:42
  10baf6:    40 63       	[sp+ 52] = r0 			  ## toy_midi_ctrl.c:314:42
  10baf8:    a0 48       	r0 = [r4 + 8] 			  ## toy_midi_ctrl.c:315:27
  10bafa:    73 4a       	r3 = [r6 + 36] 			  ## toy_midi_ctrl.c:315:10
  10bafc:    62 91       	r2 = sp + 44 			  ## toy_midi_ctrl.c:315:10
  10bafe:    11 ea ac 00 	r1 = 172 			  ## toy_midi_ctrl.c:315:5
  10bb02:    ab 01       	call r3			  ## toy_midi_ctrl.c:315:5
  10bb04:    20 e8 c0 00 	r0 = [r12 + 0] 			  ## toy_midi_ctrl.c:317:36
  10bb08:    11 ea 02 02 	r1 = 514 			  ## toy_midi_ctrl.c:317:36
  10bb0c:    08 da       	r0 |= r1 			  ## toy_midi_ctrl.c:317:36
  10bb0e:    60 e8 c0 00 	[r12 + 0] = r0 			  ## toy_midi_ctrl.c:317:36
  10bb12:    a0 48       	r0 = [r4 + 8] 			  ## toy_midi_ctrl.c:318:27
  10bb14:    73 4a       	r3 = [r6 + 36] 			  ## toy_midi_ctrl.c:318:10
  10bb16:    11 ea a5 00 	r1 = 165 			  ## toy_midi_ctrl.c:318:5
  10bb1a:    a2 c6       	r2 = r12 			  ## toy_midi_ctrl.c:318:5
  10bb1c:    ab 01       	call r3			  ## toy_midi_ctrl.c:318:5
  10bb1e:    04 80       	r4 = 0 
  10bb20:    20 e4 26 e2 	r6 = [addr(2952)]  <.GCPI319_125 : 10c6ac >
  10bb24:    0d 08       	goto 26 <.GJTIE319_3_3_+0x170 : 10bb40 >
  10bb26:    00 e7 61 04 	r1 = b[r6 + r4] 
  10bb2a:    20 e8 e0 00 	r0 = [r14 + 0] 
  10bb2e:    4c 98       	cmp r4, 9			  ## toy_midi_ctrl.c:173:13
  10bb30:    18 03       	ifs (nzcv != 0) {			  ## toy_midi_ctrl.c:176:13
  10bb32:    2a c9       		r2 = r5.b 
                               	} else {			  ## toy_midi_ctrl.c:176:13
  10bb34:    39 d9       		r1 ^= 128			  ## toy_midi_ctrl.c:174:81
  10bb36:    4a 80       		r2 = 9 
                               	}			  ## toy_midi_ctrl.c:174:13
  10bb38:    ff e1 4f 28 	call -6904 <toy_midi_ctrl_set_prog : 10a044 >			  ## toy_midi_ctrl.c:174:13
  10bb3c:    6d d0       	r5 = r5 + 1 			  ## toy_midi_ctrl.c:172:5
  10bb3e:    64 d0       	r4 = r4 + 1 			  ## toy_midi_ctrl.c:172:62
  10bb40:    84 98       	cmp r4, 16			  ## toy_midi_ctrl.c:172:5
  10bb42:    f1 11       	ifs (nzcv != 0) goto -30 <.GJTIE319_3_3_+0x156 : 10bb26 >			  ## toy_midi_ctrl.c:172:5
  10bb44:    20 e8 e0 00 	r0 = [r14 + 0] 			  ## toy_midi_ctrl.c:179:27
  10bb48:    52 ea 00 00 	r10 = 0 			  ## toy_midi_ctrl.c:179:27
  10bb4c:    e1 81       	r1 = 60 			  ## toy_midi_ctrl.c:179:5
  10bb4e:    02 80       	r2 = 0 			  ## toy_midi_ctrl.c:179:5
  10bb50:    fe e1 4f f7 	call -8472 <toy_midi_ctrl_note_on : 109a3c >			  ## toy_midi_ctrl.c:179:5
  10bb54:    50 ea 00 01 	r8 = 256 			  ## toy_midi_ctrl.c:179:5
  10bb58:    00 ec ad 00 	r13 = r10.b 
  10bb5c:    7e 08       	goto 252 <.GJTIE319_3_3_+0x28A : 10bc5a >
  10bb5e:    20 e8 e0 00 	r0 = [r14 + 0] 			  ## toy_midi_ctrl.c:206:35
  10bb62:    aa c6       	r2 = r13 			  ## toy_midi_ctrl.c:206:13
  10bb64:    fe e1 af f6 	call -8492 <toy_midi_ctrl_note_on : 109a3c >			  ## toy_midi_ctrl.c:206:13
  10bb68:    78 08       	goto 240 <.GJTIE319_3_3_+0x28A : 10bc5a >			  ## toy_midi_ctrl.c:206:13
  10bb6a:    20 e8 e0 00 	r0 = [r14 + 0] 			  ## toy_midi_ctrl.c:232:36
  10bb6e:    00 98       	cmp r0, 0
  10bb70:    74 10       	ifs (nzcv == 0) goto 232 <.GJTIE319_3_3_+0x28A : 10bc5a >
  10bb72:    85 48       	r5 = [r0 + 8] 			  ## toy_midi_ctrl.c:74:27
  10bb74:    20 e4 20 d0 	r0 = [addr(2880)]  <.GCPI319_128 : 10c6b8 >
  10bb78:    10 e3 07 80 	[r0 + 92] &= (~128) 			  ## midi_ctrl_api.c:196:36
  10bb7c:    1f e2 07 80 	[r0 + 92] |= 256 			  ## midi_ctrl_api.c:197:36
  10bb80:    02 ed 5c f0 	r12 = r5 + 752 
  10bb84:    90 e8 c0 00 	r0 = h[r12 + 0] (s) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:579:31
  10bb88:    08 98       	cmp r0, 1			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:579:2
  10bb8a:    1d 1b       	ifs (nzcv < 0) goto 58 <.GJTIE319_3_3_+0x1F6 : 10bbc6 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:579:2
  10bb8c:    07 80       	r7 = 0 
  10bb8e:    04 80       	r4 = 0 
  10bb90:    04 ed 51 d0 	r1 = r5 + 1232 
  10bb94:    8a 4e       	r2 = [r1 + -24] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:581:20
  10bb96:    80 f1 22 04 	r2 = r2 & setbit(r4) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:581:35
  10bb9a:    0f 10       	ifs (nzcv == 0) goto 30 <.GJTIE319_3_3_+0x1EA : 10bbba >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:581:35
  10bb9c:    c9 49       	r1 = [r1 + 28] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:583:28
  10bb9e:    c9 d5       	r1 = r1 + r7 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:584:17
  10bba0:    4a 58       	r2 = b[r1 + 4] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:584:17
  10bba2:    55 ce       	cmp r2, r13			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:584:30
  10bba4:    0a 11       	ifs (nzcv != 0) goto 20 <.GJTIE319_3_3_+0x1EA : 10bbba >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:584:30
  10bba6:    4a 5a       	r2 = b[r1 + 5] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:584:42
  10bba8:    16 ce       	cmp r2, r6			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:584:8
  10bbaa:    07 11       	ifs (nzcv != 0) goto 14 <.GJTIE319_3_3_+0x1EA : 10bbba >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:584:8
  10bbac:    28 c6       	r0 = r5 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:586:10
  10bbae:    aa c6       	r2 = r13 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:586:10
  10bbb0:    fe e1 df ea 	call -8870 <control_stop : 10990e >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:586:10
  10bbb4:    80 20       	if (r0 == 0) goto 16 <.GJTIE319_3_3_+0x1F6 : 10bbc6 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:586:10
  10bbb6:    10 e8 c0 00 	r0 = h[r12 + 0] 
  10bbba:    00 ed 77 e0 	r7 = r7 + 224 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:579:16
  10bbbe:    64 d0       	r4 = r4 + 1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:579:49
  10bbc0:    c1 c9       	r1 = r0.l (s) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:579:18
  10bbc2:    21 ce       	cmp r4, r1			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:579:2
  10bbc4:    e5 1b       	ifs (nzcv < 0) goto -54 <.GJTIE319_3_3_+0x1C0 : 10bb90 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:579:2
  10bbc6:    7a e1 bf 76 	call -1093930 <kick_decoder : aa0 >			  ## midi_ctrl_api.c:199:5
  10bbca:    20 e4 27 d3 	r7 = [addr(2892)]  <.GCPI319_152 : 10c718 >			  ## midi_ctrl_api.c:199:5
  10bbce:    45 08       	goto 138 <.GJTIE319_3_3_+0x28A : 10bc5a >			  ## midi_ctrl_api.c:199:5
  10bbd0:    20 e4 20 b0 	r0 = [addr(2752)]  <.GCPI319_119 : 10c694 >			  ## toy_midi_ctrl.c:269:22
  10bbd4:    01 50       	r1 = h[r0 + 0] 			  ## toy_midi_ctrl.c:269:22
  10bbd6:    68 80       	r0 = 13 			  ## toy_midi_ctrl.c:269:22
  10bbd8:    01 98       	cmp r1, 0			  ## toy_midi_ctrl.c:269:22
  10bbda:    6c 11       	ifs (nzcv != 0) goto 216 <.GJTIE319_2_2_+0x20 : 10bcb4 >			  ## toy_midi_ctrl.c:269:22
  10bbdc:    fe e1 6f b2 	call -10676 <sys_idle_deal : 10922c >			  ## toy_midi_ctrl.c:271:17
  10bbe0:    c0 41       	r0 = [sp+ 28] 			  ## toy_midi_ctrl.c:271:17
  10bbe2:    68 08       	goto 208 <.GJTIE319_2_2_+0x20 : 10bcb4 >			  ## toy_midi_ctrl.c:271:17
  10bbe4:    40 cb       	r8 += r0 
  10bbe6:    20 e8 e0 00 	r0 = [r14 + 0] 			  ## toy_midi_ctrl.c:246:38
  10bbea:    10 23       	if (r0 == 0) goto 98 <.GJTIE319_3_3_+0x27E : 10bc4e >			  ## toy_midi_ctrl.c:246:38
  10bbec:    81 48       	r1 = [r0 + 8] 			  ## toy_midi_ctrl.c:92:27
  10bbee:    20 e4 20 b2 	r0 = [addr(2760)]  <.GCPI319_128 : 10c6b8 >
  10bbf2:    10 e3 07 80 	[r0 + 92] &= (~128) 			  ## midi_ctrl_api.c:214:36
  10bbf6:    1f e2 07 80 	[r0 + 92] |= 256 			  ## midi_ctrl_api.c:215:36
  10bbfa:    20 f7 d0 01 	r0 = r13 << 1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:616:2
  10bbfe:    40 d4       	r0 = r0 + r1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:616:15
  10bc00:    12 ea 08 06 	r2 = 1544 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:616:32
  10bc04:    50 e7 08 02 	h[r0 + r2] = r8 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:616:32
  10bc08:    02 ed 10 f0 	r0 = r1 + 752 
  10bc0c:    90 e8 00 00 	r0 = h[r0 + 0] (s) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:617:39
  10bc10:    08 98       	cmp r0, 1			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:617:2
  10bc12:    1b 1b       	ifs (nzcv < 0) goto 54 <.GJTIE319_3_3_+0x27A : 10bc4a >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:617:2
  10bc14:    04 ed 11 d0 	r1 = r1 + 1232 
  10bc18:    8a 4e       	r2 = [r1 + -24] 
  10bc1a:    40 ec 83 00 	r3 = r8.l 
  10bc1e:    05 80       	r5 = 0 
  10bc20:    0e 80       	r6 = 1 
  10bc22:    34 c6       	r4 = r6 
  10bc24:    80 f1 26 05 	r6 = r2 & setbit(r5) 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:619:35
  10bc28:    0c 10       	ifs (nzcv == 0) goto 24 <.GJTIE319_3_3_+0x272 : 10bc42 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:619:35
  10bc2a:    ce 49       	r6 = [r1 + 28] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:621:21
  10bc2c:    00 fc 55 e0 	r5 = r5 * 224 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:621:51
  10bc30:    ad d5       	r5 = r5 + r6 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:621:51
  10bc32:    6e 58       	r6 = b[r5 + 4] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:621:51
  10bc34:    75 ce       	cmp r6, r13			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:621:8
  10bc36:    03 03       	ifs (nzcv == 0) {			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:624:44
  10bc38:    20 e8 56 12 		r6 = [r5 + 72] 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:624:44
  10bc3c:    1e 06       		r6 *= r3 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:624:54
  10bc3e:    f6 a8       		r6 = r6 >>> 8 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:624:65
  10bc40:    2e 69       		[r5 + 16] = r6 
                               	}			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:624:31
  10bc42:    66 d0       	r6 = r4 + 1 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:617:2
  10bc44:    25 c9       	r5 = r4.b 			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:617:18
  10bc46:    28 ce       	cmp r5, r0			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:617:2
  10bc48:    ec 1b       	ifs (nzcv < 0) goto -40 <.GJTIE319_3_3_+0x252 : 10bc22 >			  ## /home/xiaoqiang/Desktop/sh54/midi/compressor_v23_0504_limiter/./src/midi_play.c:617:2
  10bc4a:    7a e1 9f 72 	call -1094062 <kick_decoder : aa0 >			  ## midi_ctrl_api.c:217:5
  10bc4e:    40 ec 81 00 	r1 = r8.l 			  ## toy_midi_ctrl.c:247:13
  10bc52:    20 e4 20 9a 	r0 = [addr(2664)]  <.GCPI319_129 : 10c6bc >			  ## toy_midi_ctrl.c:247:13
  10bc56:    db e1 1f 9c 	call -298110 <xprintf : c2fdc >			  ## toy_midi_ctrl.c:247:13
  10bc5a:    e0 90       	r0 = sp + 28 
  10bc5c:    fe e1 0f 50 	call -13824 <get_msg : 108660 >			  ## toy_midi_ctrl.c:181:15
  10bc60:    05 c6       	r5 = r0 			  ## toy_midi_ctrl.c:181:15
  10bc62:    fe e1 bf 57 	call -13578 <bsp_loop : 10875c >			  ## toy_midi_ctrl.c:182:9
  10bc66:    65 20       	if (r5 == 0) goto 12 <.GJTIE319_3_3_+0x2A4 : 10bc74 >			  ## toy_midi_ctrl.c:182:9
  10bc68:    60 e9 09 07 	[sp+ 28] = r9 			  ## toy_midi_ctrl.c:185:20
  10bc6c:    98 c6       	r0 = r11 			  ## toy_midi_ctrl.c:186:13
  10bc6e:    29 c6       	r1 = r5 			  ## toy_midi_ctrl.c:186:13
  10bc70:    db e1 4f 9b 	call -298136 <xprintf : c2fdc >			  ## toy_midi_ctrl.c:186:13
  10bc74:    c0 41       	r0 = [sp+ 28] 			  ## toy_midi_ctrl.c:189:17
  10bc76:    1f ed 01 e1 	r1 = r0 + -31 			  ## toy_midi_ctrl.c:189:9
  10bc7a:    89 98       	cmp r1, 17			  ## toy_midi_ctrl.c:189:9
  10bc7c:    36 18       	if (nzcv > 0) goto 108 <.GJTIE319_2_2_+0x56 : 10bcea >			  ## toy_midi_ctrl.c:189:9
  10bc7e:    e6 81       	r6 = 60 
  10bc80:    b1 01       	tbb [r1]


.GJTIS319_2_2_:
  10bc82:    2e     < 46 : 0x2E >
  10bc83:    28     < 40 : 0x28 >
  10bc84:    22     < 34 : 0x22 >
  10bc85:    1c     < 28 : 0x1C >
  10bc86:    0e     < 14 : 0xE >
  10bc87:    0e     < 14 : 0xE >
  10bc88:    0e     < 14 : 0xE >
  10bc89:    17     < 23 : 0x17 >
  10bc8a:    15     < 21 : 0x15 >
  10bc8b:    13     < 19 : 0x13 >
  10bc8c:    11     < 17 : 0x11 >
  10bc8d:    0e     < 14 : 0xE >
  10bc8e:    0e     < 14 : 0xE >
  10bc8f:    0e     < 14 : 0xE >
  10bc90:    3c     < 60 : 0x3C >
  10bc91:    47     < 71 : 0x47 >
  10bc92:    0c     < 12 : 0xC >
  10bc93:    09     < 9 : 0x9 >
  10bc94:    10 ea f0 ff 	r0 = 65520 
  10bc98:    a5 0f       	goto -182 <.GJTIE319_3_3_+0x214 : 10bbe4 >
  10bc9a:    80 80       	r0 = 16 
  10bc9c:    a3 0f       	goto -186 <.GJTIE319_3_3_+0x214 : 10bbe4 >
  10bc9e:    00 08       	goto 0 <.GJTIE319_2_2_+0xC : 10bca0 >
  10bca0:    00 08       	goto 0 <.GJTIE319_2_2_+0xE : 10bca2 >
  10bca2:    07 08       	goto 14 <.GJTIE319_2_2_+0x1E : 10bcb2 >
  10bca4:    0e 82       	r6 = 65 
  10bca6:    61 0f       	goto -318 <.GJTIE319_3_3_+0x19A : 10bb6a >
  10bca8:    06 82       	r6 = 64 
  10bcaa:    5f 0f       	goto -322 <.GJTIE319_3_3_+0x19A : 10bb6a >
  10bcac:    f6 81       	r6 = 62 
  10bcae:    5d 0f       	goto -326 <.GJTIE319_3_3_+0x19A : 10bb6a >
  10bcb0:    5c 0f       	goto -328 <.GJTIE319_3_3_+0x19A : 10bb6a >
  10bcb2:    00 08       	goto 0 <.GJTIE319_2_2_+0x20 : 10bcb4 >
  10bcb4:    fe e1 ef d8 	call -9444 <common_msg_deal : 1097d4 >			  ## toy_midi_ctrl.c:274:13
  10bcb8:    d0 0f       	goto -96 <.GJTIE319_3_3_+0x28A : 10bc5a >			  ## toy_midi_ctrl.c:274:13
  10bcba:    20 e4 20 81 	r0 = [addr(2564)]  <.GCPI319_130 : 10c6c0 >			  ## toy_midi_ctrl.c:203:13
  10bcbe:    db e1 df 98 	call -298214 <xprintf : c2fdc >			  ## toy_midi_ctrl.c:203:13
  10bcc2:    09 82       	r1 = 65 
  10bcc4:    4c 0f       	goto -360 <.GJTIE319_3_3_+0x18E : 10bb5e >
  10bcc6:    20 e4 20 7f 	r0 = [addr(2556)]  <.GCPI319_131 : 10c6c4 >			  ## toy_midi_ctrl.c:199:13
  10bcca:    db e1 7f 98 	call -298226 <xprintf : c2fdc >			  ## toy_midi_ctrl.c:199:13
  10bcce:    01 82       	r1 = 64 
  10bcd0:    46 0f       	goto -372 <.GJTIE319_3_3_+0x18E : 10bb5e >
  10bcd2:    20 e4 20 7d 	r0 = [addr(2548)]  <.GCPI319_132 : 10c6c8 >			  ## toy_midi_ctrl.c:195:13
  10bcd6:    db e1 1f 98 	call -298238 <xprintf : c2fdc >			  ## toy_midi_ctrl.c:195:13
  10bcda:    f1 81       	r1 = 62 
  10bcdc:    40 0f       	goto -384 <.GJTIE319_3_3_+0x18E : 10bb5e >
  10bcde:    20 e4 20 7b 	r0 = [addr(2540)]  <.GCPI319_133 : 10c6cc >			  ## toy_midi_ctrl.c:191:13
  10bce2:    db e1 bf 97 	call -298250 <xprintf : c2fdc >			  ## toy_midi_ctrl.c:191:13
  10bce6:    e1 81       	r1 = 60 
  10bce8:    3a 0f       	goto -396 <.GJTIE319_3_3_+0x18E : 10bb5e >
  10bcea:    68 98       	cmp r0, 13
  10bcec:    ff fb 00 f7 	ifs (nzcv == 0) goto -288 <.GJTIE319_3_3_+0x200 : 10bbd0 >
  10bcf0:    86 ef 00 00 	cmp r0, 1536
  10bcf4:    df 11       	ifs (nzcv != 0) goto -66 <.GJTIE319_2_2_+0x20 : 10bcb4 >
  10bcf6:    ff fa 7f ac 	goto -2674 <app+0x78 : 10b288 >
  10bcfa:    1f ed aa ff 	r10 = r10 + -1 			  ## toy_midi_ctrl.c:252:24
  10bcfe:    00 ec a0 00 	r0 = r10.b 			  ## toy_midi_ctrl.c:252:24
  10bd02:    78 98       	cmp r0, 15			  ## toy_midi_ctrl.c:253:17
  10bd04:    20 e4 22 69 	r2 = [addr(2468)]  <.GCPI319_125 : 10c6ac >			  ## toy_midi_ctrl.c:253:17
  10bd08:    20 03       	if (nzcv >= 0) {			  ## toy_midi_ctrl.c:253:17
  10bd0a:    52 ea 0f 00 		r10 = 15 
                               	}			  ## toy_midi_ctrl.c:253:17
  10bd0e:    0a 08       	goto 20 <.GJTIE319_2_2_+0x90 : 10bd24 >			  ## toy_midi_ctrl.c:253:17
  10bd10:    00 ed a0 01 	r0 = r10 + 1 			  ## toy_midi_ctrl.c:258:24
  10bd14:    01 c9       	r1 = r0.b 			  ## toy_midi_ctrl.c:258:24
  10bd16:    52 ea 00 00 	r10 = 0 			  ## toy_midi_ctrl.c:259:17
  10bd1a:    79 98       	cmp r1, 15			  ## toy_midi_ctrl.c:259:17
  10bd1c:    20 e4 22 63 	r2 = [addr(2444)]  <.GCPI319_125 : 10c6ac >			  ## toy_midi_ctrl.c:259:17
  10bd20:    90 03       	if (nzcv <= 0) {			  ## toy_midi_ctrl.c:259:17
  10bd22:    42 c6       		r10 = r0 
                               	}			  ## toy_midi_ctrl.c:259:17
  10bd24:    00 ec a1 00 	r1 = r10.b 			  ## toy_midi_ctrl.c:263:13
  10bd28:    00 e7 22 01 	r2 = b[r2 + r1] 			  ## toy_midi_ctrl.c:263:13
  10bd2c:    20 e4 20 61 	r0 = [addr(2436)]  <.GCPI319_127 : 10c6b4 >			  ## toy_midi_ctrl.c:263:13
  10bd30:    db e1 4f 95 	call -298328 <xprintf : c2fdc >			  ## toy_midi_ctrl.c:263:13
  10bd34:    11 0f       	goto -478 <.GJTIE319_3_3_+0x188 : 10bb58 >			  ## toy_midi_ctrl.c:263:13
  10bd36:    53 ea 00 00 	r11 = 0 			  ## toy_main.c:88:15
  10bd3a:    20 e4 20 20 	r0 = [addr(2176)]  <.GCPI319_65 : 10c5bc >			  ## toy_speaker.c:33:5
  10bd3e:    fe e1 5f 40 	call -14326 <key_table_sel : 10854c >			  ## toy_speaker.c:33:5
  10bd42:    fc e1 3f 4b 	call -30362 <dac_sr_read : 1046ac >			  ## toy_speaker.c:35:18
  10bd46:    00 61       	[sp+ 16] = r0 			  ## toy_speaker.c:35:18
  10bd48:    10 ea c0 5d 	r0 = 24000 			  ## toy_speaker.c:36:5
  10bd4c:    ff e1 cf 1a 	call -7336 <dac_sr_api : 10a0a8 >			  ## toy_speaker.c:36:5
  10bd50:    20 e4 20 1b 	r0 = [addr(2156)]  <.GCPI319_66 : 10c5c0 >			  ## speak_api.c:108:5
  10bd54:    db e1 2f 94 	call -298364 <xprintf : c2fdc >			  ## speak_api.c:108:5
  10bd58:    e8 80       	r0 = 29 			  ## speak_api.c:110:5
  10bd5a:    ff e1 df 1c 	call -7270 <HWI_Uninstall : 10a0f8 >			  ## speak_api.c:110:5
  10bd5e:    e8 80       	r0 = 29 			  ## speak_api.c:111:5
  10bd60:    20 e4 21 18 	r1 = [addr(2144)]  <.GCPI319_67 : 10c5c4 >			  ## speak_api.c:111:5
  10bd64:    0a 80       	r2 = 1 			  ## speak_api.c:111:5
  10bd66:    fe e1 4f 05 	call -16216 <HWI_Install : 107e12 >			  ## speak_api.c:111:5
  10bd6a:    20 e4 2d 17 	r13 = [addr(2140)]  <.GCPI319_68 : 10c5c8 >
  10bd6e:    a8 c6       	r0 = r13 			  ## speak_api.c:113:5
  10bd70:    01 80       	r1 = 0 			  ## speak_api.c:113:5
  10bd72:    02 81       	r2 = 32 			  ## speak_api.c:113:5
  10bd74:    db e1 2f 8f 	call -298524 <memset : c2f5c >			  ## speak_api.c:113:5
  10bd78:    20 e4 24 14 	r4 = [addr(2128)]  <.GCPI319_69 : 10c5cc >			  ## speak_api.c:113:5
  10bd7c:    20 c6       	r0 = r4 			  ## speak_api.c:114:5
  10bd7e:    20 e4 21 14 	r1 = [addr(2128)]  <.GCPI319_70 : 10c5d0 >			  ## speak_api.c:114:5
  10bd82:    12 ea 00 02 	r2 = 512 			  ## speak_api.c:114:5
  10bd86:    db e1 5f 90 	call -298486 <cbuf_init : c2f94 >			  ## speak_api.c:114:5
  10bd8a:    60 e8 d4 00 	[r13 + 0] = r4 			  ## speak_api.c:115:29
  10bd8e:    00 80       	r0 = 0 			  ## speak_api.c:116:5
  10bd90:    ff e1 2f 1d 	call -7260 <audio_adc_init_api : 10a138 >			  ## speak_api.c:116:5
  10bd94:    ff e1 cf 29 	call -6856 <read_audio_adc_sr : 10a2d0 >			  ## speak_api.c:118:18
  10bd98:    40 c6       	r8 = r0 			  ## speak_api.c:118:18
  10bd9a:    fc e1 7f 48 	call -30450 <dac_sr_read : 1046ac >			  ## speak_api.c:119:18
  10bd9e:    c0 60       	[sp+ 12] = r0 			  ## speak_api.c:119:18
  10bda0:    20 e4 20 0c 	r0 = [addr(2096)]  <.GCPI319_71 : 10c5d4 >			  ## speak_api.c:125:5
  10bda4:    20 e4 21 0c 	r1 = [addr(2096)]  <.GCPI319_72 : 10c5d8 >			  ## speak_api.c:125:5
  10bda8:    12 ea 00 04 	r2 = 1024 			  ## speak_api.c:125:5
  10bdac:    db e1 2f 8f 	call -298524 <cbuf_init : c2f94 >			  ## speak_api.c:125:5
  10bdb0:    20 e8 dc 00 	r12 = [r13 + 0] 			  ## notch_howling_api.c:33:60
  10bdb4:    20 e4 20 6a 	r0 = [addr(2472)]  <.GCPI319_170 : 10c760 >			  ## notch_howling_api.c:20:33
  10bdb8:    c0 62       	[sp+ 44] = r0 			  ## notch_howling_api.c:20:33
  10bdba:    27 ea 00 00 	r0 = 33554432 			  ## notch_howling_api.c:21:33
  10bdbe:    00 63       	[sp+ 48] = r0 			  ## notch_howling_api.c:21:33
  10bdc0:    50 80       	r0 = 10 			  ## notch_howling_api.c:22:33
  10bdc2:    40 63       	[sp+ 52] = r0 			  ## notch_howling_api.c:22:33
  10bdc4:    2a ea 00 48 	r0 = 819200 			  ## notch_howling_api.c:23:33
  10bdc8:    80 63       	[sp+ 56] = r0 			  ## notch_howling_api.c:23:33
  10bdca:    60 e9 08 0f 	[sp+ 60] = r8 			  ## notch_howling_api.c:24:33
  10bdce:    15 ea 90 0d 	r5 = 3472 			  ## /home/xiaoqiang/Desktop/sh54/notchHowling/./src/notch_howling.c:287:3
  10bdd2:    52 ea c0 5d 	r10 = 24000 			  ## /home/xiaoqiang/Desktop/sh54/notchHowling/./src/notch_howling.c:287:3
  10bdd6:    c2 ce       	cmp r8, r10			  ## /home/xiaoqiang/Desktop/sh54/notchHowling/./src/notch_howling.c:287:3
  10bdd8:    d0 03       	ifs (nzcv <= 0) {			  ## /home/xiaoqiang/Desktop/sh54/notchHowling/./src/notch_howling.c:287:3
  10bdda:    15 ea 50 0c 		r5 = 3152 
                               	}			  ## /home/xiaoqiang/Desktop/sh54/notchHowling/./src/notch_howling.c:287:3
  10bdde:    20 e4 10 ff 	r0 = [addr(2044)]  <.GCPI319_73 : 10c5dc >			  ## notch_howling_api.c:174:5
  10bde2:    29 c6       	r1 = r5 			  ## notch_howling_api.c:174:5
  10bde4:    db e1 af 8f 	call -298508 <xprintf : c2fdc >			  ## notch_howling_api.c:174:5
  10bde8:    20 e4 16 fd 	r6 = [addr(2036)]  <.GCPI319_74 : 10c5e0 >
  10bdec:    30 c6       	r0 = r6 			  ## notch_howling_api.c:175:5
  10bdee:    01 80       	r1 = 0 			  ## notch_howling_api.c:175:5
  10bdf0:    22 83       	r2 = 100 			  ## notch_howling_api.c:175:5
  10bdf2:    db e1 3f 8b 	call -298650 <memset : c2f5c >			  ## notch_howling_api.c:175:5
  10bdf6:    00 ed 67 2c 	r7 = r6 + 44 			  ## notch_howling_api.c:178:9
  10bdfa:    61 91       	r1 = sp + 44 			  ## notch_howling_api.c:178:9
  10bdfc:    38 c6       	r0 = r7 			  ## notch_howling_api.c:178:9
  10bdfe:    a2 80       	r2 = 20 			  ## notch_howling_api.c:178:9
  10be00:    db e1 6f 8a 	call -298676 <memcpy : c2f50 >			  ## notch_howling_api.c:178:9
  10be04:    f1 4a       	r1 = [r6 + 44] 			  ## notch_howling_api.c:154:5
  10be06:    20 e4 10 f7 	r0 = [addr(2012)]  <.GCPI319_75 : 10c5e4 >			  ## notch_howling_api.c:154:5
  10be0a:    db e1 7f 8e 	call -298546 <xprintf : c2fdc >			  ## notch_howling_api.c:154:5
  10be0e:    31 4b       	r1 = [r6 + 48] 			  ## notch_howling_api.c:155:5
  10be10:    20 e4 10 f5 	r0 = [addr(2004)]  <.GCPI319_76 : 10c5e8 >			  ## notch_howling_api.c:155:5
  10be14:    db e1 2f 8e 	call -298556 <xprintf : c2fdc >			  ## notch_howling_api.c:155:5
  10be18:    71 4b       	r1 = [r6 + 52] 			  ## notch_howling_api.c:156:5
  10be1a:    20 e4 10 f4 	r0 = [addr(2000)]  <.GCPI319_77 : 10c5ec >			  ## notch_howling_api.c:156:5
  10be1e:    db e1 df 8d 	call -298566 <xprintf : c2fdc >			  ## notch_howling_api.c:156:5
  10be22:    b1 4b       	r1 = [r6 + 56] 			  ## notch_howling_api.c:157:5
  10be24:    20 e4 10 f2 	r0 = [addr(1992)]  <.GCPI319_78 : 10c5f0 >			  ## notch_howling_api.c:157:5
  10be28:    db e1 8f 8d 	call -298576 <xprintf : c2fdc >			  ## notch_howling_api.c:157:5
  10be2c:    f1 4b       	r1 = [r6 + 60] 			  ## notch_howling_api.c:158:5
  10be2e:    20 e4 10 f1 	r0 = [addr(1988)]  <.GCPI319_79 : 10c5f4 >			  ## notch_howling_api.c:158:5
  10be32:    db e1 3f 8d 	call -298586 <xprintf : c2fdc >			  ## notch_howling_api.c:158:5
  10be36:    20 e4 10 f0 	r0 = [addr(1984)]  <.GCPI319_80 : 10c5f8 >			  ## notch_howling_api.c:182:5
  10be3a:    20 e4 14 f0 	r4 = [addr(1984)]  <.GCPI319_81 : 10c5fc >			  ## notch_howling_api.c:182:5
  10be3e:    21 c6       	r1 = r4 			  ## notch_howling_api.c:182:5
  10be40:    db e1 cf 8c 	call -298600 <xprintf : c2fdc >			  ## notch_howling_api.c:182:5
  10be44:    c2 ce       	cmp r8, r10			  ## notch_howling_api.c:183:9
  10be46:    ff fb 3d a3 	ifs (nzcv <= 0) goto -2970 <app+0xA0 : 10b2b0 >			  ## notch_howling_api.c:183:9
  10be4a:    20 e4 10 f0 	r0 = [addr(1984)]  <.GCPI319_85 : 10c60c >			  ## notch_howling_api.c:184:9
  10be4e:    11 ea 50 0c 	r1 = 3152 			  ## notch_howling_api.c:184:9
  10be52:    2a c6       	r2 = r5 			  ## notch_howling_api.c:184:9
  10be54:    db e1 2f 8c 	call -298620 <xprintf : c2fdc >			  ## notch_howling_api.c:184:9
  10be58:    60 e8 db 01 	[r13 + 4] = r11 			  ## notch_howling_api.c:33:26
  10be5c:    20 e4 10 ec 	r0 = [addr(1968)]  <.GCPI319_86 : 10c610 >			  ## notch_howling_api.c:42:9
  10be60:    db e1 cf 8b 	call -298632 <xprintf : c2fdc >			  ## notch_howling_api.c:42:9
  10be64:    20 e8 dc 00 	r12 = [r13 + 0] 			  ## notch_howling_api.c:42:9
  10be68:    ea c6       	r10 = r13 
  10be6a:    ff fa 1f a4 	goto -2942 <app+0xE0 : 10b2f0 >
  10be6e:    20 e4 10 bb 	r0 = [addr(1772)]  <.GCPI319_41 : 10c55c >			  ## toy_linein.c:24:5
  10be72:    fe e1 bf 36 	call -14634 <key_table_sel : 10854c >			  ## toy_linein.c:24:5
  10be76:    20 e4 10 ba 	r0 = [addr(1768)]  <.GCPI319_42 : 10c560 >			  ## toy_linein.c:25:5
  10be7a:    db e1 ff 8a 	call -298658 <xprintf : c2fdc >			  ## toy_linein.c:25:5
  10be7e:    06 80       	r6 = 0 			  ## toy_linein.c:25:5
  10be80:    20 e4 15 b8 	r5 = [addr(1760)]  <.GCPI319_43 : 10c564 >			  ## toy_linein.c:25:5
  10be84:    28 c6       	r0 = r5 			  ## toy_linein.c:26:5
  10be86:    01 80       	r1 = 0 			  ## toy_linein.c:26:5
  10be88:    a2 80       	r2 = 20 			  ## toy_linein.c:26:5
  10be8a:    db e1 7f 86 	call -298802 <memset : c2f5c >			  ## toy_linein.c:26:5
  10be8e:    20 e4 14 b6 	r4 = [addr(1752)]  <.GCPI319_44 : 10c568 >			  ## toy_linein.c:26:5
  10be92:    20 c6       	r0 = r4 			  ## toy_linein.c:27:5
  10be94:    20 e4 11 b5 	r1 = [addr(1748)]  <.GCPI319_45 : 10c56c >			  ## toy_linein.c:27:5
  10be98:    12 ea 00 04 	r2 = 1024 			  ## toy_linein.c:27:5
  10be9c:    db e1 af 87 	call -298764 <cbuf_init : c2f94 >			  ## toy_linein.c:27:5
  10bea0:    2c 68       	[r5 + 0] = r4 			  ## toy_linein.c:28:33
  10bea2:    fc e1 3f 40 	call -30714 <dac_sr_read : 1046ac >			  ## toy_linein.c:30:14
  10bea6:    42 c6       	r10 = r0 			  ## toy_linein.c:30:14
  10bea8:    10 ea c0 5d 	r0 = 24000 			  ## toy_linein.c:32:5
  10beac:    ff e1 cf 0f 	call -7688 <dac_sr_api : 10a0a8 >			  ## toy_linein.c:32:5
  10beb0:    08 80       	r0 = 1 			  ## toy_linein.c:33:5
  10beb2:    ff e1 1f 14 	call -7550 <audio_adc_init_api : 10a138 >			  ## toy_linein.c:33:5
  10beb6:    28 c6       	r0 = r5 			  ## toy_linein.c:34:5
  10beb8:    01 80       	r1 = 0 			  ## toy_linein.c:34:5
  10beba:    fb e1 ef fd 	call -32836 <regist_dac_channel : 103e7a >			  ## toy_linein.c:34:5
  10bebe:    28 c6       	r0 = r5 			  ## toy_linein.c:35:5
  10bec0:    01 80       	r1 = 0 			  ## toy_linein.c:35:5
  10bec2:    ff e1 8f 6b 	call -4752 <regist_audio_adc_channel : 10ac36 >			  ## toy_linein.c:35:5
  10bec6:    ff e1 1f 6d 	call -4702 <audio_adc_enable : 10ac6c >			  ## toy_linein.c:37:5
  10beca:    e8 48       	r0 = [r5 + 12] 			  ## toy_linein.c:38:33
  10becc:    11 ea 01 04 	r1 = 1025 			  ## toy_linein.c:38:33
  10bed0:    08 da       	r0 |= r1 			  ## toy_linein.c:38:33
  10bed2:    e8 68       	[r5 + 12] = r0 			  ## toy_linein.c:38:33
  10bed4:    20 e4 25 24 	r5 = [addr(2192)]  <.GCPI319_172 : 10c768 >			  ## toy_linein.c:38:33
  10bed8:    29 4e       	r1 = [r5 + -32] 			  ## toy_linein.c:92:5
  10beda:    20 e4 10 a5 	r0 = [addr(1684)]  <.GCPI319_46 : 10c570 >			  ## toy_linein.c:92:5
  10bede:    db e1 df 87 	call -298758 <xprintf : c2fdc >			  ## toy_linein.c:92:5
  10bee2:    69 4e       	r1 = [r5 + -28] 			  ## toy_linein.c:93:5
  10bee4:    20 e4 10 a3 	r0 = [addr(1676)]  <.GCPI319_47 : 10c574 >			  ## toy_linein.c:93:5
  10bee8:    db e1 8f 87 	call -298768 <xprintf : c2fdc >			  ## toy_linein.c:93:5
  10beec:    a9 4e       	r1 = [r5 + -24] 			  ## toy_linein.c:94:5
  10beee:    20 e4 10 a2 	r0 = [addr(1672)]  <.GCPI319_48 : 10c578 >			  ## toy_linein.c:94:5
  10bef2:    db e1 3f 87 	call -298778 <xprintf : c2fdc >			  ## toy_linein.c:94:5
  10bef6:    e9 4e       	r1 = [r5 + -20] 			  ## toy_linein.c:95:5
  10bef8:    20 e4 10 a0 	r0 = [addr(1664)]  <.GCPI319_49 : 10c57c >			  ## toy_linein.c:95:5
  10befc:    db e1 ef 86 	call -298788 <xprintf : c2fdc >			  ## toy_linein.c:95:5
  10bf00:    29 4f       	r1 = [r5 + -16] 			  ## toy_linein.c:96:5
  10bf02:    20 e4 10 9f 	r0 = [addr(1660)]  <.GCPI319_50 : 10c580 >			  ## toy_linein.c:96:5
  10bf06:    db e1 9f 86 	call -298798 <xprintf : c2fdc >			  ## toy_linein.c:96:5
  10bf0a:    69 4f       	r1 = [r5 + -12] 			  ## toy_linein.c:97:5
  10bf0c:    20 e4 10 9d 	r0 = [addr(1652)]  <.GCPI319_51 : 10c584 >			  ## toy_linein.c:97:5
  10bf10:    db e1 4f 86 	call -298808 <xprintf : c2fdc >			  ## toy_linein.c:97:5
  10bf14:    a9 4f       	r1 = [r5 + -8] 			  ## toy_linein.c:98:5
  10bf16:    20 e4 10 9c 	r0 = [addr(1648)]  <.GCPI319_52 : 10c588 >			  ## toy_linein.c:98:5
  10bf1a:    db e1 ff 85 	call -298818 <xprintf : c2fdc >			  ## toy_linein.c:98:5
  10bf1e:    e9 4f       	r1 = [r5 + -4] 			  ## toy_linein.c:99:5
  10bf20:    20 e4 10 9a 	r0 = [addr(1640)]  <.GCPI319_53 : 10c58c >			  ## toy_linein.c:99:5
  10bf24:    db e1 af 85 	call -298828 <xprintf : c2fdc >			  ## toy_linein.c:99:5
  10bf28:    29 48       	r1 = [r5 + 0] 			  ## toy_linein.c:100:5
  10bf2a:    20 e4 10 99 	r0 = [addr(1636)]  <.GCPI319_54 : 10c590 >			  ## toy_linein.c:100:5
  10bf2e:    db e1 5f 85 	call -298838 <xprintf : c2fdc >			  ## toy_linein.c:100:5
  10bf32:    69 48       	r1 = [r5 + 4] 			  ## toy_linein.c:101:5
  10bf34:    20 e4 10 97 	r0 = [addr(1628)]  <.GCPI319_55 : 10c594 >			  ## toy_linein.c:101:5
  10bf38:    db e1 0f 85 	call -298848 <xprintf : c2fdc >			  ## toy_linein.c:101:5
  10bf3c:    a9 48       	r1 = [r5 + 8] 			  ## toy_linein.c:102:5
  10bf3e:    20 e4 10 96 	r0 = [addr(1624)]  <.GCPI319_56 : 10c598 >			  ## toy_linein.c:102:5
  10bf42:    db e1 bf 84 	call -298858 <xprintf : c2fdc >			  ## toy_linein.c:102:5
  10bf46:    e9 48       	r1 = [r5 + 12] 			  ## toy_linein.c:103:5
  10bf48:    20 e4 10 94 	r0 = [addr(1616)]  <.GCPI319_57 : 10c59c >			  ## toy_linein.c:103:5
  10bf4c:    db e1 6f 84 	call -298868 <xprintf : c2fdc >			  ## toy_linein.c:103:5
  10bf50:    29 49       	r1 = [r5 + 16] 			  ## toy_linein.c:104:5
  10bf52:    20 e4 10 93 	r0 = [addr(1612)]  <.GCPI319_58 : 10c5a0 >			  ## toy_linein.c:104:5
  10bf56:    db e1 1f 84 	call -298878 <xprintf : c2fdc >			  ## toy_linein.c:104:5
  10bf5a:    69 49       	r1 = [r5 + 20] 			  ## toy_linein.c:105:5
  10bf5c:    20 e4 10 91 	r0 = [addr(1604)]  <.GCPI319_59 : 10c5a4 >			  ## toy_linein.c:105:5
  10bf60:    db e1 cf 83 	call -298888 <xprintf : c2fdc >			  ## toy_linein.c:105:5
  10bf64:    a9 49       	r1 = [r5 + 24] 			  ## toy_linein.c:106:5
  10bf66:    20 e4 10 90 	r0 = [addr(1600)]  <.GCPI319_60 : 10c5a8 >			  ## toy_linein.c:106:5
  10bf6a:    db e1 7f 83 	call -298898 <xprintf : c2fdc >			  ## toy_linein.c:106:5
  10bf6e:    e9 49       	r1 = [r5 + 28] 			  ## toy_linein.c:107:5
  10bf70:    20 e4 10 8e 	r0 = [addr(1592)]  <.GCPI319_61 : 10c5ac >			  ## toy_linein.c:107:5
  10bf74:    db e1 2f 83 	call -298908 <xprintf : c2fdc >			  ## toy_linein.c:107:5
  10bf78:    20 e4 14 8d 	r4 = [addr(1588)]  <.GCPI319_62 : 10c5b0 >
  10bf7c:    17 08       	goto 46 <.GJTIE319_2_2_+0x318 : 10bfac >
  10bf7e:    a0 98       	cmp r0, 20
  10bf80:    03 10       	ifs (nzcv == 0) goto 6 <.GJTIE319_2_2_+0x2F4 : 10bf88 >
  10bf82:    fe e1 7f c2 	call -10162 <common_msg_deal : 1097d4 >			  ## toy_linein.c:71:13
  10bf86:    12 08       	goto 36 <.GJTIE319_2_2_+0x318 : 10bfac >			  ## toy_linein.c:71:13
  10bf88:    96 20       	if (r6 == 0) goto 18 <.GJTIE319_2_2_+0x308 : 10bf9c >
  10bf8a:    20 e4 10 8a 	r0 = [addr(1576)]  <.GCPI319_63 : 10c5b4 >			  ## toy_linein.c:61:17
  10bf8e:    db e1 5f 82 	call -298934 <xprintf : c2fdc >			  ## toy_linein.c:61:17
  10bf92:    06 80       	r6 = 0 			  ## toy_linein.c:61:17
  10bf94:    00 80       	r0 = 0 			  ## toy_linein.c:63:17
  10bf96:    ff e1 ff 66 	call -4898 <dac_mute : 10ac78 >			  ## toy_linein.c:63:17
  10bf9a:    08 08       	goto 16 <.GJTIE319_2_2_+0x318 : 10bfac >			  ## toy_linein.c:63:17
  10bf9c:    20 e4 10 86 	r0 = [addr(1560)]  <.GCPI319_64 : 10c5b8 >			  ## toy_linein.c:56:17
  10bfa0:    db e1 cf 81 	call -298952 <xprintf : c2fdc >			  ## toy_linein.c:56:17
  10bfa4:    0e 80       	r6 = 1 
  10bfa6:    08 80       	r0 = 1 			  ## toy_linein.c:58:17
  10bfa8:    ff e1 6f 66 	call -4916 <dac_mute : 10ac78 >			  ## toy_linein.c:58:17
  10bfac:    e0 90       	r0 = sp + 28 
  10bfae:    fe e1 7f 35 	call -14674 <get_msg : 108660 >			  ## toy_linein.c:46:15
  10bfb2:    05 c6       	r5 = r0 			  ## toy_linein.c:46:15
  10bfb4:    fe e1 2f 3d 	call -14428 <bsp_loop : 10875c >			  ## toy_linein.c:47:9
  10bfb8:    65 20       	if (r5 == 0) goto 12 <.GJTIE319_2_2_+0x332 : 10bfc6 >			  ## toy_linein.c:47:9
  10bfba:    60 e9 09 07 	[sp+ 28] = r9 			  ## toy_linein.c:50:20
  10bfbe:    20 c6       	r0 = r4 			  ## toy_linein.c:51:13
  10bfc0:    29 c6       	r1 = r5 			  ## toy_linein.c:51:13
  10bfc2:    db e1 bf 80 	call -298986 <xprintf : c2fdc >			  ## toy_linein.c:51:13
  10bfc6:    c0 41       	r0 = [sp+ 28] 			  ## toy_linein.c:53:17
  10bfc8:    86 ef 00 00 	cmp r0, 1536			  ## toy_linein.c:53:9
  10bfcc:    d8 11       	ifs (nzcv != 0) goto -80 <.GJTIE319_2_2_+0x2EA : 10bf7e >			  ## toy_linein.c:53:9
  10bfce:    0d 80       	r5 = 1 
  10bfd0:    36 20       	if (r6 == 0) goto 6 <.GJTIE319_2_2_+0x344 : 10bfd8 >
  10bfd2:    00 80       	r0 = 0 			  ## toy_linein.c:77:9
  10bfd4:    ff e1 0f 65 	call -4960 <dac_mute : 10ac78 >			  ## toy_linein.c:77:9
  10bfd8:    20 e4 16 62 	r6 = [addr(1416)]  <.GCPI319_43 : 10c564 >
  10bfdc:    00 e3 63 01 	[r6 + 12] &= (~1) 			  ## toy_linein.c:80:33
  10bfe0:    ff e1 cf 68 	call -4840 <audio_adc_disable : 10acfc >			  ## toy_linein.c:81:5
  10bfe4:    30 c6       	r0 = r6 			  ## toy_linein.c:82:5
  10bfe6:    ff e1 1f 66 	call -4926 <unregist_audio_adc_channel : 10acac >			  ## toy_linein.c:82:5
  10bfea:    30 c6       	r0 = r6 			  ## toy_linein.c:83:5
  10bfec:    fe e1 ff 3b 	call -14466 <unregist_dac_channel : 10876e >			  ## toy_linein.c:83:5
  10bff0:    fd e1 2f cb 	call -18076 <audio_adc_off_api : 107958 >			  ## toy_linein.c:84:5
  10bff4:    90 c6       	r0 = r10 			  ## toy_linein.c:85:5
  10bff6:    ff e1 7f 05 	call -8018 <dac_sr_api : 10a0a8 >			  ## toy_linein.c:85:5
  10bffa:    00 80       	r0 = 0 			  ## toy_linein.c:86:5
  10bffc:    fe e1 6f 2a 	call -15028 <key_table_sel : 10854c >			  ## toy_linein.c:86:5
  10c000:    ff fa ff 94 	goto -3426 <app+0x92 : 10b2a2 >			  ## toy_linein.c:86:5
  10c004:    20 e4 10 37 	r0 = [addr(1244)]  <.GCPI319_11 : 10c4e4 >			  ## toy_record.c:34:5
  10c008:    fe e1 0f 2a 	call -15040 <key_table_sel : 10854c >			  ## toy_record.c:34:5
  10c00c:    fe e1 af 2a 	call -15020 <decoder_init : 108564 >			  ## toy_record.c:35:5
  10c010:    00 ed 8c 64 	r12 = r8 + 100 			  ## toy_record.c:37:5
  10c014:    04 80       	r4 = 0 			  ## toy_record.c:37:5
  10c016:    a0 c6       	r0 = r12 			  ## toy_record.c:37:5
  10c018:    01 80       	r1 = 0 			  ## toy_record.c:37:5
  10c01a:    02 81       	r2 = 32 			  ## toy_record.c:37:5
  10c01c:    db e1 ef 79 	call -299204 <memset : c2f5c >			  ## toy_record.c:37:5
  10c020:    15 ea 0c 10 	r5 = 4108 			  ## toy_record.c:37:5
  10c024:    a1 09       	goto 834 <.GJTIE319_1_1_+0x336 : 10c368 >			  ## toy_record.c:37:5
  10c026:    b1 01       	tbb [r1]


.GJTIS319_1_1_:
  10c028:    05     < 5 : 0x5 >
  10c029:    40     < 64 : 0x40 >
  10c02a:    40     < 64 : 0x40 >
  10c02b:    05     < 5 : 0x5 >
  10c02c:    40     < 64 : 0x40 >
  10c02d:    40     < 64 : 0x40 >
  10c02e:    05     < 5 : 0x5 >
  10c02f:    40     < 64 : 0x40 >
  10c030:    40     < 64 : 0x40 >
  10c031:    0c     < 12 : 0xC >
  10c032:    20 c6       	r0 = r4 			  ## toy_record.c:92:13
  10c034:    09 80       	r1 = 1 			  ## toy_record.c:92:13
  10c036:    fe e1 9f 40 	call -14318 <decoder_stop : 10884c >			  ## toy_record.c:92:13
  10c03a:    ff e1 bf 66 	call -4906 <encode_file_fs_close : 10ad14 >			  ## toy_record.c:93:13
  10c03e:    94 09       	goto 808 <.GJTIE319_1_1_+0x336 : 10c368 >			  ## toy_record.c:93:13
  10c040:    20 e4 10 2a 	r0 = [addr(1192)]  <.GCPI319_13 : 10c4ec >			  ## toy_record.c:86:13
  10c044:    db e1 af 7c 	call -299116 <xprintf : c2fdc >			  ## toy_record.c:86:13
  10c048:    ff e1 6f 67 	call -4884 <encode_stop : 10ad38 >			  ## toy_record.c:87:13
  10c04c:    8d 09       	goto 794 <.GJTIE319_1_1_+0x336 : 10c368 >			  ## toy_record.c:87:13
  10c04e:    ff e1 3f 67 	call -4890 <encode_stop : 10ad38 >			  ## toy_record.c:62:13
  10c052:    20 c6       	r0 = r4 			  ## toy_record.c:63:13
  10c054:    09 80       	r1 = 1 			  ## toy_record.c:63:13
  10c056:    fe e1 9f 3f 	call -14350 <decoder_stop : 10884c >			  ## toy_record.c:63:13
  10c05a:    a0 c6       	r0 = r12 			  ## toy_record.c:64:23
  10c05c:    20 e4 11 26 	r1 = [addr(1176)]  <.GCPI319_16 : 10c4f8 >			  ## toy_record.c:64:23
  10c060:    db e1 ef 77 	call -299268 <strcmp : c2f60 >			  ## toy_record.c:64:23
  10c064:    00 98       	cmp r0, 0			  ## toy_record.c:64:23
  10c066:    44 10       	ifs (nzcv == 0) goto 136 <.GJTIE319_1_1_+0xBE : 10c0f0 >			  ## toy_record.c:64:23
  10c068:    20 e4 10 24 	r0 = [addr(1168)]  <.GCPI319_17 : 10c4fc >			  ## toy_record.c:67:17
  10c06c:    db e1 6f 7b 	call -299156 <xprintf : c2fdc >			  ## toy_record.c:67:17
  10c070:    7b 09       	goto 758 <.GJTIE319_1_1_+0x336 : 10c368 >			  ## toy_record.c:67:17
  10c072:    20 e8 80 20 	r0 = [r8 + 128] 			  ## toy_record.c:49:39
  10c076:    08 98       	cmp r0, 1			  ## toy_record.c:49:17
  10c078:    24 11       	ifs (nzcv != 0) goto 72 <.GJTIE319_1_1_+0x90 : 10c0c2 >			  ## toy_record.c:49:17
  10c07a:    ff e1 df 65 	call -4934 <encode_stop : 10ad38 >			  ## toy_record.c:51:17
  10c07e:    a1 80       	r1 = 20 			  ## toy_record.c:52:17
  10c080:    fe e1 8f 2c 	call -14960 <post_msg : 108614 >			  ## toy_record.c:52:17
  10c084:    71 09       	goto 738 <.GJTIE319_1_1_+0x336 : 10c368 >			  ## toy_record.c:52:17
  10c086:    20 e8 80 20 	r0 = [r8 + 128] 			  ## toy_record.c:99:28
  10c08a:    08 98       	cmp r0, 1			  ## toy_record.c:99:17
  10c08c:    01 03       	ifs (nzcv == 0) {			  ## toy_record.c:100:17
  10c08e:    90 82       		r0 = 82 			  ## toy_record.c:100:17
  10c090:    7a e1 cf 69 		call -1094344
                               	} <putchar : dcc >			  ## toy_record.c:100:17
  10c094:    20 c6       	r0 = r4 			  ## toy_record.c:102:32
  10c096:    fe e1 bf 74 	call -12650 <get_decoder_status : 108f30 >			  ## toy_record.c:102:32
  10c09a:    45 ce       	cmp r0, r13			  ## toy_record.c:102:63
  10c09c:    05 10       	ifs (nzcv == 0) goto 10 <.GJTIE319_1_1_+0x76 : 10c0a8 >			  ## toy_record.c:102:63
  10c09e:    20 e8 80 20 	r0 = [r8 + 128] 			  ## toy_record.c:103:29
  10c0a2:    28 20       	if (r0 != 0) goto 4 <.GJTIE319_1_1_+0x76 : 10c0a8 >			  ## toy_record.c:103:29
  10c0a4:    fe e1 2f 8c 	call -11900 <sys_idle_deal : 10922c >			  ## toy_record.c:105:17
  10c0a8:    c0 41       	r0 = [sp+ 28] 
  10c0aa:    fe e1 3f b9 	call -10458 <common_msg_deal : 1097d4 >			  ## toy_record.c:109:13
  10c0ae:    5c 09       	goto 696 <.GJTIE319_1_1_+0x336 : 10c368 >			  ## toy_record.c:109:13
  10c0b0:    0d f4 50 80 	tst r5, 4096			  ## toy_record.c:77:17
  10c0b4:    15 11       	ifs (nzcv != 0) goto 42 <.GJTIE319_1_1_+0xAE : 10c0e0 >			  ## toy_record.c:77:17
  10c0b6:    20 e4 10 0f 	r0 = [addr(1084)]  <.GCPI319_15 : 10c4f4 >			  ## toy_record.c:81:17
  10c0ba:    db e1 ff 78 	call -299234 <xprintf : c2fdc >			  ## toy_record.c:81:17
  10c0be:    65 d8       	r5 |= 4096			  ## toy_record.c:82:35
  10c0c0:    53 09       	goto 678 <.GJTIE319_1_1_+0x336 : 10c368 >			  ## toy_record.c:82:35
  10c0c2:    20 c6       	r0 = r4 			  ## toy_record.c:55:17
  10c0c4:    09 80       	r1 = 1 			  ## toy_record.c:55:17
  10c0c6:    fe e1 1f 3c 	call -14462 <decoder_stop : 10884c >			  ## toy_record.c:55:17
  10c0ca:    ff e1 3f 62 	call -5050 <encode_file_fs_close : 10ad14 >			  ## toy_record.c:56:17
  10c0ce:    00 80       	r0 = 0 			  ## toy_record.c:147:15
  10c0d0:    ff e1 2f 03 	call -8092 <audio_adc_init_api : 10a138 >			  ## toy_record.c:147:15
  10c0d4:    30 22       	if (r0 == 0) goto 70 <.GJTIE319_1_1_+0xEA : 10c11c >			  ## toy_record.c:148:9
  10c0d6:    20 e4 10 0f 	r0 = [addr(1084)]  <.GCPI319_23 : 10c514 >			  ## toy_record.c:149:9
  10c0da:    db e1 ff 77 	call -299266 <xprintf : c2fdc >			  ## toy_record.c:149:9
  10c0de:    2f 09       	goto 606 <.GJTIE319_1_1_+0x30C : 10c33e >			  ## toy_record.c:149:9
  10c0e0:    20 e4 10 03 	r0 = [addr(1036)]  <.GCPI319_14 : 10c4f0 >			  ## toy_record.c:78:17
  10c0e4:    db e1 af 77 	call -299276 <xprintf : c2fdc >			  ## toy_record.c:78:17
  10c0e8:    10 ea ff ef 	r0 = 61439 			  ## toy_record.c:79:35
  10c0ec:    85 da       	r5 &= r0 			  ## toy_record.c:79:35
  10c0ee:    3c 09       	goto 632 <.GJTIE319_1_1_+0x336 : 10c368 >			  ## toy_record.c:79:35
  10c0f0:    84 c6       	r4 = r8 			  ## enc_in_norfs.c:45:19
  10c0f2:    04 e8 40 1f 	r0 = b[++ r4 = 124] 			  ## enc_in_norfs.c:45:19
  10c0f6:    fe e1 1f 25 	call -15198 <device_open : 10859c >			  ## enc_in_norfs.c:45:19
  10c0fa:    01 c6       	r1 = r0 			  ## enc_in_norfs.c:45:19
  10c0fc:    21 6f       	[r4 + -16] = r1 			  ## enc_in_norfs.c:45:17
  10c0fe:    41 23       	if (r1 == 0) goto 104 <.GJTIE319_1_1_+0x136 : 10c168 >			  ## enc_in_norfs.c:45:17
  10c100:    00 ed 84 70 	r4 = r8 + 112 			  ## enc_in_norfs.c:50:11
  10c104:    20 c6       	r0 = r4 			  ## enc_in_norfs.c:50:11
  10c106:    20 e4 02 fc 	r2 = [addr(1008)]  <.GCPI319_16 : 10c4f8 >			  ## enc_in_norfs.c:50:11
  10c10a:    fd e1 3f f8 	call -16634 <vfs_mount : 108014 >			  ## enc_in_norfs.c:50:11
  10c10e:    01 c6       	r1 = r0 			  ## enc_in_norfs.c:50:11
  10c110:    01 23       	if (r1 == 0) goto 96 <.GJTIE319_1_1_+0x140 : 10c172 >			  ## enc_in_norfs.c:51:9
  10c112:    20 e4 00 fb 	r0 = [addr(1004)]  <.GCPI319_18 : 10c500 >			  ## enc_in_norfs.c:52:9
  10c116:    db e1 1f 76 	call -299326 <xprintf : c2fdc >			  ## enc_in_norfs.c:52:9
  10c11a:    ea 08       	goto 468 <.GJTIE319_1_1_+0x2BE : 10c2f0 >
  10c11c:    86 c6       	r6 = r8 			  ## toy_record.c:154:20
  10c11e:    08 80       	r0 = 1 			  ## toy_record.c:154:20
  10c120:    44 e8 60 1f 	b[++ r6 = 124] = r0 			  ## toy_record.c:154:20
  10c124:    a0 c6       	r0 = r12 			  ## toy_record.c:155:5
  10c126:    20 e4 07 f4 	r7 = [addr(976)]  <.GCPI319_16 : 10c4f8 >			  ## toy_record.c:155:5
  10c12a:    39 c6       	r1 = r7 			  ## toy_record.c:155:5
  10c12c:    db e1 af 71 	call -299468 <strcpy : c2f64 >			  ## toy_record.c:155:5
  10c130:    30 58       	r0 = b[r6 + 0] 			  ## enc_in_norfs.c:18:19
  10c132:    fe e1 3f 23 	call -15258 <device_open : 10859c >			  ## enc_in_norfs.c:18:19
  10c136:    01 c6       	r1 = r0 			  ## enc_in_norfs.c:18:19
  10c138:    31 6f       	[r6 + -16] = r1 			  ## enc_in_norfs.c:18:17
  10c13a:    91 22       	if (r1 == 0) goto 82 <.GJTIE319_1_1_+0x15C : 10c18e >			  ## enc_in_norfs.c:18:17
  10c13c:    00 ed 8d 70 	r13 = r8 + 112 			  ## enc_in_norfs.c:23:11
  10c140:    a8 c6       	r0 = r13 			  ## enc_in_norfs.c:23:11
  10c142:    3a c6       	r2 = r7 			  ## enc_in_norfs.c:23:11
  10c144:    fd e1 6f f6 	call -16692 <vfs_mount : 108014 >			  ## enc_in_norfs.c:23:11
  10c148:    07 c6       	r7 = r0 			  ## enc_in_norfs.c:23:11
  10c14a:    20 e4 0a e5 	r10 = [addr(916)]  <.GCPI319_10 : 10c4e0 >
  10c14e:    67 22       	if (r7 == 0) goto 76 <.GJTIE319_1_1_+0x16A : 10c19c >			  ## enc_in_norfs.c:24:9
  10c150:    20 e4 00 eb 	r0 = [addr(940)]  <.GCPI319_18 : 10c500 >			  ## enc_in_norfs.c:25:9
  10c154:    39 c6       	r1 = r7 			  ## enc_in_norfs.c:25:9
  10c156:    db e1 1f 74 	call -299390 <xprintf : c2fdc >			  ## enc_in_norfs.c:25:9
  10c15a:    00 e8 80 1f 	r0 = b[r8 + 124] 			  ## enc_in_norfs.c:26:9
  10c15e:    fe e1 ff b9 	call -10434 <device_close : 1098a0 >			  ## enc_in_norfs.c:26:9
  10c162:    55 ea 23 11 	r13 = 4387 			  ## enc_in_norfs.c:26:9
  10c166:    e5 08       	goto 458 <.GJTIE319_1_1_+0x300 : 10c332 >			  ## enc_in_norfs.c:26:9
  10c168:    20 e4 00 e8 	r0 = [addr(928)]  <.GCPI319_21 : 10c50c >			  ## enc_in_norfs.c:47:9
  10c16c:    db e1 6f 73 	call -299412 <xprintf : c2fdc >			  ## enc_in_norfs.c:47:9
  10c170:    c3 08       	goto 390 <.GJTIE319_1_1_+0x2C6 : 10c2f8 >			  ## enc_in_norfs.c:47:9
  10c172:    20 e8 80 1c 	r0 = [r8 + 112] 			  ## enc_in_norfs.c:56:26
  10c176:    00 ed 82 78 	r2 = r8 + 120 			  ## enc_in_norfs.c:56:11
  10c17a:    c1 80       	r1 = 24 			  ## enc_in_norfs.c:56:11
  10c17c:    fe e1 af 17 	call -15628 <vfs_ioctl : 108474 >			  ## enc_in_norfs.c:56:11
  10c180:    01 c6       	r1 = r0 			  ## enc_in_norfs.c:56:11
  10c182:    01 98       	cmp r1, 0			  ## enc_in_norfs.c:57:9
  10c184:    00 fb 30 0a 	ifs (nzcv == 0) goto 326 <.GJTIE319_1_1_+0x29C : 10c2ce >			  ## enc_in_norfs.c:57:9
  10c188:    20 e4 00 de 	r0 = [addr(888)]  <.GCPI319_19 : 10c504 >			  ## enc_in_norfs.c:58:9
  10c18c:    ac 08       	goto 344 <.GJTIE319_1_1_+0x2B4 : 10c2e6 >			  ## enc_in_norfs.c:58:9
  10c18e:    20 e4 00 df 	r0 = [addr(892)]  <.GCPI319_21 : 10c50c >			  ## enc_in_norfs.c:20:9
  10c192:    db e1 3f 72 	call -299450 <xprintf : c2fdc >			  ## enc_in_norfs.c:20:9
  10c196:    17 ea 0f 80 	r7 = 32783 			  ## enc_in_norfs.c:20:9
  10c19a:    c7 08       	goto 398 <.GJTIE319_1_1_+0x2F8 : 10c32a >			  ## enc_in_norfs.c:20:9
  10c19c:    81 c6       	r1 = r8 			  ## vfs.c:220:25
  10c19e:    24 e8 10 1d 	r0 = [++ r1 = 116] 			  ## vfs.c:220:25
  10c1a2:    ce 4f       	r6 = [r1 + -4] 			  ## enc_in_norfs.c:29:31
  10c1a4:    78 20       	if (r0 != 0) goto 14 <.GJTIE319_1_1_+0x182 : 10c1b4 >			  ## enc_in_norfs.c:29:31
  10c1a6:    fd e1 ff f2 	call -16802 <vfs_hdl_malloc : 108008 >			  ## vfs.c:221:20
  10c1aa:    60 e8 80 1d 	[r8 + 116] = r0 			  ## vfs.c:221:18
  10c1ae:    00 98       	cmp r0, 0			  ## vfs.c:221:18
  10c1b0:    00 fb 70 0d 	ifs (nzcv == 0) goto 430 <.GJTIE319_1_1_+0x330 : 10c362 >			  ## vfs.c:221:18
  10c1b4:    31 48       	r1 = [r6 + 0] 			  ## vfs.c:234:27
  10c1b6:    01 68       	[r0 + 0] = r1 			  ## vfs.c:234:18
  10c1b8:    31 48       	r1 = [r6 + 0] 			  ## vfs.c:235:18
  10c1ba:    cf 49       	r7 = [r1 + 28] 			  ## vfs.c:237:22
  10c1bc:    07 98       	cmp r7, 0
  10c1be:    00 fb 30 0a 	ifs (nzcv == 0) goto 326 <.GJTIE319_1_1_+0x2D6 : 10c308 >
  10c1c2:    73 48       	r3 = [r6 + 4] 			  ## vfs.c:238:38
  10c1c4:    01 d1       	r1 = r0 + 4 			  ## vfs.c:238:53
  10c1c6:    00 ed 82 78 	r2 = r8 + 120 			  ## vfs.c:238:15
  10c1ca:    18 c6       	r0 = r3 			  ## vfs.c:238:15
  10c1cc:    af 01       	call r7			  ## vfs.c:238:15
  10c1ce:    07 c6       	r7 = r0 			  ## vfs.c:238:15
  10c1d0:    07 98       	cmp r7, 0
  10c1d2:    00 fb b1 09 	ifs (nzcv != 0) goto 310 <.GJTIE319_1_1_+0x2DA : 10c30c >
  10c1d6:    00 ed 8a 3c 	r10 = r8 + 60 
  10c1da:    20 e8 a1 0f 	r1 = [r10 + 60] 			  ## enc_in_norfs.c:37:5
  10c1de:    20 e4 00 ce 	r0 = [addr(824)]  <.GCPI319_24 : 10c518 >			  ## enc_in_norfs.c:37:5
  10c1e2:    db e1 bf 6f 	call -299530 <xprintf : c2fdc >			  ## enc_in_norfs.c:37:5
  10c1e6:    20 e8 a8 0e 	r8 = [r10 + 56] 			  ## toy_record.c:161:38
  10c1ea:    20 e4 06 b5 	r6 = [addr(724)]  <.GCPI319_2 : 10c4c0 >			  ## toy_record.c:161:38
  10c1ee:    00 ed 67 e4 	r7 = r6 + 228 			  ## encoder_api.c:31:5
  10c1f2:    38 c6       	r0 = r7 			  ## encoder_api.c:31:5
  10c1f4:    01 80       	r1 = 0 			  ## encoder_api.c:31:5
  10c1f6:    a2 80       	r2 = 20 			  ## encoder_api.c:31:5
  10c1f8:    db e1 0f 6b 	call -299680 <memset : c2f5c >			  ## encoder_api.c:31:5
  10c1fc:    20 e4 0d c7 	r13 = [addr(796)]  <.GCPI319_25 : 10c51c >			  ## encoder_api.c:31:5
  10c200:    a8 c6       	r0 = r13 			  ## encoder_api.c:32:5
  10c202:    20 e4 01 c7 	r1 = [addr(796)]  <.GCPI319_26 : 10c520 >			  ## encoder_api.c:32:5
  10c206:    12 ea 00 14 	r2 = 5120 			  ## encoder_api.c:32:5
  10c20a:    db e1 3f 6c 	call -299642 <cbuf_init : c2f94 >			  ## encoder_api.c:32:5
  10c20e:    64 e8 6d 39 	[++ r6 = 228] = r13 			  ## encoder_api.c:33:22
  10c212:    38 c6       	r0 = r7 			  ## encoder_api.c:34:5
  10c214:    20 e4 01 c3 	r1 = [addr(780)]  <.GCPI319_27 : 10c524 >			  ## encoder_api.c:34:5
  10c218:    ff e1 df 50 	call -5606 <regist_audio_adc_channel : 10ac36 >			  ## encoder_api.c:34:5
  10c21c:    20 e4 00 c2 	r0 = [addr(776)]  <.GCPI319_28 : 10c528 >			  ## ump3_encoder.c:35:5
  10c220:    db e1 cf 6d 	call -299592 <xprintf : c2fdc >			  ## ump3_encoder.c:35:5
  10c224:    20 e4 07 c1 	r7 = [addr(772)]  <.GCPI319_29 : 10c52c >
  10c228:    38 c6       	r0 = r7 			  ## ump3_encoder.c:42:5
  10c22a:    20 e4 01 c1 	r1 = [addr(772)]  <.GCPI319_30 : 10c530 >			  ## ump3_encoder.c:42:5
  10c22e:    12 ea 00 04 	r2 = 1024 			  ## ump3_encoder.c:42:5
  10c232:    db e1 ff 6a 	call -299682 <cbuf_init : c2f94 >			  ## ump3_encoder.c:42:5
  10c236:    20 e4 00 bf 	r0 = [addr(764)]  <.GCPI319_31 : 10c534 >			  ## ump3_encoder.c:43:5
  10c23a:    db e1 ff 6c 	call -299618 <xprintf : c2fdc >			  ## ump3_encoder.c:43:5
  10c23e:    20 e4 00 a1 	r0 = [addr(644)]  <.GCPI319_3 : 10c4c4 >			  ## ump3_encoder.c:45:24
  10c242:    60 e8 08 0a 	[r0 + 40] = r8 			  ## ump3_encoder.c:45:24
  10c246:    20 e4 08 9f 	r8 = [addr(636)]  <.GCPI319_3 : 10c4c4 >			  ## ump3_encoder.c:45:24
  10c24a:    30 48       	r0 = [r6 + 0] 			  ## ump3_encoder.c:46:26
  10c24c:    40 e5 87 0b 	d[r8 + 44] = r7, r0 			  ## ump3_encoder.c:46:24
  10c250:    20 e4 07 b9 	r7 = [addr(740)]  <.GCPI319_32 : 10c538 >			  ## ump3_encoder.c:46:24
  10c254:    60 e8 87 0e 	[r8 + 56] = r7 			  ## ump3_encoder.c:48:24
  10c258:    20 e4 00 b8 	r0 = [addr(736)]  <.GCPI319_33 : 10c53c >			  ## ump3_encoder.c:49:25
  10c25c:    60 e8 80 0d 	[r8 + 52] = r0 			  ## ump3_encoder.c:49:25
  10c260:    ff e1 6f 03 	call -8084 <read_audio_adc_sr : 10a2d0 >			  ## ump3_encoder.c:50:27
  10c264:    50 e8 a0 00 	h[r10 + 0] = r0 			  ## ump3_encoder.c:50:25
  10c268:    80 82       	r0 = 80 			  ## ump3_encoder.c:53:25
  10c26a:    50 e8 a0 80 	h[r10 + 2] = r0 			  ## ump3_encoder.c:53:25
  10c26e:    20 e4 00 b4 	r0 = [addr(720)]  <.GCPI319_34 : 10c540 >			  ## ump3_encoder.c:56:5
  10c272:    db e1 3f 6b 	call -299674 <xprintf : c2fdc >			  ## ump3_encoder.c:56:5
  10c276:    38 c6       	r0 = r7 			  ## ump3_encoder.c:58:5
  10c278:    91 c6       	r1 = r10 			  ## ump3_encoder.c:58:5
  10c27a:    20 e4 02 b2 	r2 = [addr(712)]  <.GCPI319_35 : 10c544 >			  ## ump3_encoder.c:58:5
  10c27e:    ff e1 3f 5c 	call -5242 <mp2_open : 10ae08 >			  ## ump3_encoder.c:58:5
  10c282:    00 ed 80 28 	r0 = r8 + 40 			  ## ump3_encoder.c:45:24
  10c286:    20 e4 01 8e 	r1 = [addr(568)]  <.GCPI319_2 : 10c4c0 >			  ## encoder_api.c:105:13
  10c28a:    08 6a       	[r1 + 32] = r0 			  ## encoder_api.c:105:13
  10c28c:    e8 80       	r0 = 29 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/encoder_mge/code/encoder_mge.c:203:5
  10c28e:    20 e4 01 ae 	r1 = [addr(696)]  <.GCPI319_36 : 10c548 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/encoder_mge/code/encoder_mge.c:203:5
  10c292:    02 80       	r2 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/encoder_mge/code/encoder_mge.c:203:5
  10c294:    fd e1 df db 	call -17542 <HWI_Install : 107e12 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/encoder_mge/code/encoder_mge.c:203:5
  10c298:    f0 80       	r0 = 30 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/encoder_mge/code/encoder_mge.c:204:5
  10c29a:    20 e4 01 ac 	r1 = [addr(688)]  <.GCPI319_37 : 10c54c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/encoder_mge/code/encoder_mge.c:204:5
  10c29e:    0a 80       	r2 = 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/encoder_mge/code/encoder_mge.c:204:5
  10c2a0:    fd e1 7f db 	call -17554 <HWI_Install : 107e12 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/encoder_mge/code/encoder_mge.c:204:5
  10c2a4:    0f 80       	r7 = 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/encoder_mge/code/encoder_mge.c:204:5
  10c2a6:    60 e8 a7 01 	[r10 + 4] = r7 			  ## encoder_api.c:108:25
  10c2aa:    f0 48       	r0 = [r6 + 12] 			  ## encoder_api.c:55:5
  10c2ac:    11 ea 01 02 	r1 = 513 			  ## encoder_api.c:55:5
  10c2b0:    08 da       	r0 |= r1 			  ## encoder_api.c:55:5
  10c2b2:    f0 68       	[r6 + 12] = r0 			  ## encoder_api.c:55:5
  10c2b4:    ff e1 af 4d 	call -5708 <audio_adc_enable : 10ac6c >			  ## encoder_api.c:56:5
  10c2b8:    20 e4 00 a5 	r0 = [addr(660)]  <.GCPI319_38 : 10c550 >			  ## encoder_api.c:110:9
  10c2bc:    db e1 ef 68 	call -299748 <xprintf : c2fdc >			  ## encoder_api.c:110:9
  10c2c0:    60 e8 87 20 	[r8 + 128] = r7 			  ## toy_record.c:176:21
  10c2c4:    55 ea 23 11 	r13 = 4387 			  ## toy_record.c:176:21
  10c2c8:    20 e4 0a 85 	r10 = [addr(532)]  <.GCPI319_10 : 10c4e0 >			  ## toy_record.c:176:21
  10c2cc:    37 08       	goto 110 <.GJTIE319_1_1_+0x30A : 10c33c >			  ## toy_record.c:176:21
  10c2ce:    80 c6       	r0 = r8 			  ## enc_in_norfs.c:61:55
  10c2d0:    24 e8 02 1e 	r2 = [++ r0 = 120] 			  ## enc_in_norfs.c:61:55
  10c2d4:    80 4f       	r0 = [r0 + -8] 			  ## enc_in_norfs.c:61:32
  10c2d6:    00 ed 81 74 	r1 = r8 + 116 			  ## enc_in_norfs.c:61:11
  10c2da:    fe e1 8f 2b 	call -14992 <vfs_openbyindex : 10884e >			  ## enc_in_norfs.c:61:11
  10c2de:    01 c6       	r1 = r0 			  ## enc_in_norfs.c:61:11
  10c2e0:    61 23       	if (r1 == 0) goto 108 <.GJTIE319_1_1_+0x31C : 10c34e >			  ## enc_in_norfs.c:62:9
  10c2e2:    20 e4 00 89 	r0 = [addr(548)]  <.GCPI319_20 : 10c508 >			  ## enc_in_norfs.c:63:9
  10c2e6:    db e1 9f 67 	call -299790 <xprintf : c2fdc >
  10c2ea:    20 c6       	r0 = r4 			  ## enc_in_norfs.c:70:5
  10c2ec:    fd e1 2f f1 	call -16860 <vfs_fs_close : 108114 >			  ## enc_in_norfs.c:70:5
  10c2f0:    00 e8 80 1f 	r0 = b[r8 + 124] 
  10c2f4:    fe e1 4f ad 	call -10840 <device_close : 1098a0 >
  10c2f8:    20 e4 00 85 	r0 = [addr(532)]  <.GCPI319_22 : 10c510 >			  ## toy_record.c:71:17
  10c2fc:    db e1 ef 66 	call -299812 <xprintf : c2fdc >			  ## toy_record.c:71:17
  10c300:    ff e1 8f 50 	call -5616 <encode_file_fs_close : 10ad14 >			  ## toy_record.c:72:17
  10c304:    04 80       	r4 = 0 			  ## toy_record.c:72:17
  10c306:    30 08       	goto 96 <.GJTIE319_1_1_+0x336 : 10c368 >			  ## toy_record.c:72:17
  10c308:    17 ea 0d 80 	r7 = 32781 
  10c30c:    00 ed 80 74 	r0 = r8 + 116 			  ## vfs.c:244:9
  10c310:    fd e1 8f ec 	call -17008 <vfs_file_close : 1080a4 >			  ## vfs.c:244:9
  10c314:    58 2f       	r0 = [addr(500)]  <.GCPI319_20 : 10c508 >			  ## enc_in_norfs.c:31:9
  10c316:    39 c6       	r1 = r7 			  ## enc_in_norfs.c:31:9
  10c318:    db e1 0f 66 	call -299840 <xprintf : c2fdc >			  ## enc_in_norfs.c:31:9
  10c31c:    a8 c6       	r0 = r13 			  ## enc_in_norfs.c:32:9
  10c31e:    fd e1 9f ef 	call -16910 <vfs_fs_close : 108114 >			  ## enc_in_norfs.c:32:9
  10c322:    00 e8 80 1f 	r0 = b[r8 + 124] 			  ## enc_in_norfs.c:33:9
  10c326:    fe e1 bf ab 	call -10890 <device_close : 1098a0 >			  ## enc_in_norfs.c:33:9
  10c32a:    55 ea 23 11 	r13 = 4387 
  10c32e:    20 e4 0a 6c 	r10 = [addr(432)]  <.GCPI319_10 : 10c4e0 >
  10c332:    20 e4 00 88 	r0 = [addr(544)]  <.GCPI319_39 : 10c554 >			  ## toy_record.c:158:9
  10c336:    39 c6       	r1 = r7 			  ## toy_record.c:158:9
  10c338:    db e1 0f 65 	call -299872 <xprintf : c2fdc >			  ## toy_record.c:158:9
  10c33c:    de 2a       	r6 = [addr(428)]  <.GCPI319_12 : 10c4e8 >
  10c33e:    00 e8 81 1f 	r1 = b[r8 + 124] 			  ## toy_record.c:58:17
  10c342:    20 e4 00 85 	r0 = [addr(532)]  <.GCPI319_40 : 10c558 >			  ## toy_record.c:58:17
  10c346:    a2 c6       	r2 = r12 			  ## toy_record.c:58:17
  10c348:    db e1 8f 64 	call -299888 <xprintf : c2fdc >			  ## toy_record.c:58:17
  10c34c:    0d 08       	goto 26 <.GJTIE319_1_1_+0x336 : 10c368 >			  ## toy_record.c:58:17
  10c34e:    20 e8 80 1d 	r0 = [r8 + 116] 			  ## enc_in_norfs.c:67:28
  10c352:    69 c9       	r1 = r5.l 			  ## enc_in_norfs.c:67:35
  10c354:    02 80       	r2 = 0 			  ## enc_in_norfs.c:67:12
  10c356:    03 80       	r3 = 0 			  ## enc_in_norfs.c:67:12
  10c358:    fe e1 cf 42 	call -14248 <decoder_io : 108bb4 >			  ## enc_in_norfs.c:67:12
  10c35c:    04 c6       	r4 = r0 			  ## enc_in_norfs.c:67:12
  10c35e:    4c 20       	if (r4 != 0) goto 8 <.GJTIE319_1_1_+0x336 : 10c368 >
  10c360:    cb 0f       	goto -106 <.GJTIE319_1_1_+0x2C6 : 10c2f8 >
  10c362:    17 ea 0a 80 	r7 = 32778 
  10c366:    d6 0f       	goto -84 <.GJTIE319_1_1_+0x2E2 : 10c314 >
  10c368:    e0 90       	r0 = sp + 28 
  10c36a:    fe e1 9f 17 	call -15630 <get_msg : 108660 >			  ## toy_record.c:40:15
  10c36e:    07 c6       	r7 = r0 			  ## toy_record.c:40:15
  10c370:    fe e1 4f 1f 	call -15384 <bsp_loop : 10875c >			  ## toy_record.c:41:9
  10c374:    67 20       	if (r7 == 0) goto 12 <.GJTIE319_1_1_+0x350 : 10c382 >			  ## toy_record.c:41:9
  10c376:    60 e9 09 07 	[sp+ 28] = r9 			  ## toy_record.c:43:20
  10c37a:    30 c6       	r0 = r6 			  ## toy_record.c:44:13
  10c37c:    39 c6       	r1 = r7 			  ## toy_record.c:44:13
  10c37e:    db e1 df 62 	call -299942 <xprintf : c2fdc >			  ## toy_record.c:44:13
  10c382:    c0 41       	r0 = [sp+ 28] 			  ## toy_record.c:47:17
  10c384:    17 ed 01 f8 	r1 = r0 + -2056 			  ## toy_record.c:47:9
  10c388:    49 98       	cmp r1, 9			  ## toy_record.c:47:9
  10c38a:    ff fb c9 e4 	if (nzcv <= 0) goto -872 <.GJTIE319_2_2_+0x392 : 10c026 >			  ## toy_record.c:47:9
  10c38e:    58 98       	cmp r0, 11
  10c390:    ff fb f0 e6 	ifs (nzcv == 0) goto -802 <.GJTIE319_1_1_+0x40 : 10c072 >
  10c394:    68 98       	cmp r0, 13
  10c396:    ff fb 60 e7 	ifs (nzcv == 0) goto -788 <.GJTIE319_1_1_+0x54 : 10c086 >
  10c39a:    a0 98       	cmp r0, 20
  10c39c:    ff fb 70 e5 	ifs (nzcv == 0) goto -850 <.GJTIE319_1_1_+0x1C : 10c04e >
  10c3a0:    e0 98       	cmp r0, 28
  10c3a2:    ff fb 50 e8 	ifs (nzcv == 0) goto -758 <.GJTIE319_1_1_+0x7E : 10c0b0 >
  10c3a6:    86 ef 00 00 	cmp r0, 1536
  10c3aa:    ff fb d1 e7 	ifs (nzcv != 0) goto -774 <.GJTIE319_1_1_+0x76 : 10c0a8 >
  10c3ae:    00 80       	r0 = 0 			  ## toy_record.c:115:5
  10c3b0:    fe e1 cf 0c 	call -15976 <key_table_sel : 10854c >			  ## toy_record.c:115:5
  10c3b4:    20 e8 80 20 	r0 = [r8 + 128] 			  ## toy_record.c:116:31
  10c3b8:    08 98       	cmp r0, 1			  ## toy_record.c:116:9
  10c3ba:    ff fb 71 7b 	ifs (nzcv != 0) goto -4242 <app+0x11C : 10b32c >			  ## toy_record.c:116:9
  10c3be:    ff e1 bf 4b 	call -5770 <encode_stop : 10ad38 >			  ## toy_record.c:117:9
  10c3c2:    ff fa 9f 7b 	goto -4238 <app+0x128 : 10b338 >			  ## toy_record.c:117:9
  10c3c6:    10 29       	r0 = [addr(272)]  <.GCPI319_8 : 10c4d8 >			  ## toy_idle.c:17:5
  10c3c8:    db e1 8f 60 	call -300016 <xprintf : c2fdc >			  ## toy_idle.c:17:5
  10c3cc:    10 29       	r0 = [addr(272)]  <.GCPI319_9 : 10c4dc >			  ## toy_idle.c:18:5
  10c3ce:    fe e1 df 0b 	call -16006 <key_table_sel : 10854c >			  ## toy_idle.c:18:5
  10c3d2:    02 08       	goto 4 <.GJTIE319_1_1_+0x3A6 : 10c3d8 >			  ## toy_idle.c:18:5
  10c3d4:    fe e1 ef 9f 	call -11268 <common_msg_deal : 1097d4 >			  ## toy_idle.c:36:13
  10c3d8:    e0 90       	r0 = sp + 28 
  10c3da:    fe e1 1f 14 	call -15742 <get_msg : 108660 >			  ## toy_idle.c:21:15
  10c3de:    01 c6       	r1 = r0 			  ## toy_idle.c:21:15
  10c3e0:    51 20       	if (r1 == 0) goto 10 <.GJTIE319_1_1_+0x3BA : 10c3ec >
  10c3e2:    60 e9 09 07 	[sp+ 28] = r9 			  ## toy_idle.c:23:20
  10c3e6:    90 c6       	r0 = r10 			  ## toy_idle.c:24:13
  10c3e8:    db e1 8f 5f 	call -300048 <xprintf : c2fdc >			  ## toy_idle.c:24:13
  10c3ec:    fe e1 6f 1b 	call -15508 <bsp_loop : 10875c >			  ## toy_idle.c:26:9
  10c3f0:    c0 41       	r0 = [sp+ 28] 			  ## toy_idle.c:28:23
  10c3f2:    41 ce       	cmp r0, r9			  ## toy_idle.c:28:13
  10c3f4:    f1 10       	ifs (nzcv == 0) goto -30 <.GJTIE319_1_1_+0x3A6 : 10c3d8 >			  ## toy_idle.c:28:13
  10c3f6:    86 ef 00 00 	cmp r0, 1536
  10c3fa:    ec 11       	ifs (nzcv != 0) goto -40 <.GJTIE319_1_1_+0x3A2 : 10c3d4 >
  10c3fc:    ff fa 1f 91 	goto -3550 <app+0x412 : 10b622 >
  10c400:    80 ef 00 ff 	cmp r0, 255
  10c404:    ff fb a1 92 	ifs (nzcv != 0) goto -3500 <.GJTIE319_0_0_ : 10b65c >
  10c408:    00 80       	r0 = 0 
  10c40a:    c0 62       	[sp+ 44] = r0 			  ## toy_softoff.c:22:11
  10c40c:    40 62       	[sp+ 36] = r0 			  ## toy_softoff.c:23:11
  10c40e:    fe e1 9f 0a 	call -16046 <decoder_init : 108564 >			  ## toy_softoff.c:25:5
  10c412:    60 91       	r0 = sp + 44 
  10c414:    01 80       	r1 = 0 			  ## toy_softoff.c:27:11
  10c416:    02 80       	r2 = 0 			  ## toy_softoff.c:27:11
  10c418:    fd e1 cf df 	call -17416 <vfs_mount : 108014 >			  ## toy_softoff.c:27:11
  10c41c:    01 c6       	r1 = r0 			  ## toy_softoff.c:27:11
  10c41e:    e9 23       	if (r1 != 0) goto 124 <.GJTIE319_1_1_+0x46A : 10c49c >
  10c420:    c0 42       	r0 = [sp+ 44] 			  ## toy_softoff.c:32:26
  10c422:    21 91       	r1 = sp + 36 
  10c424:    8a 2a       	r2 = [addr(168)]  <.GCPI319_5 : 10c4cc >			  ## toy_softoff.c:32:11
  10c426:    fd e1 1f e5 	call -17246 <vfs_openbypath : 1080cc >			  ## toy_softoff.c:32:11
  10c42a:    01 c6       	r1 = r0 			  ## toy_softoff.c:32:11
  10c42c:    b9 23       	if (r1 != 0) goto 118 <.GJTIE319_1_1_+0x472 : 10c4a4 >
  10c42e:    40 42       	r0 = [sp+ 36] 			  ## toy_softoff.c:38:22
  10c430:    49 80       	r1 = 9 			  ## toy_softoff.c:38:11
  10c432:    02 80       	r2 = 0 			  ## toy_softoff.c:38:11
  10c434:    03 80       	r3 = 0 			  ## toy_softoff.c:38:11
  10c436:    fe e1 df 3b 	call -14470 <decoder_io : 108bb4 >			  ## toy_softoff.c:38:11
  10c43a:    40 c6       	r8 = r0 			  ## toy_softoff.c:38:11
  10c43c:    80 ef 80 00 	cmp r8, 0			  ## toy_softoff.c:39:9
  10c440:    35 10       	ifs (nzcv == 0) goto 106 <.GJTIE319_1_1_+0x47A : 10c4ac >			  ## toy_softoff.c:39:9
  10c442:    e5 90       	r5 = sp + 28 
  10c444:    51 ea 01 00 	r9 = 1 
  10c448:    14 ea 01 48 	r4 = 18433 
  10c44c:    17 ea ff 0f 	r7 = 4095 
  10c450:    4e 28       	r6 = [addr(132)]  <.GCPI319_7 : 10c4d4 >
  10c452:    02 08       	goto 4 <.GJTIE319_1_1_+0x426 : 10c458 >
  10c454:    fd e1 2f 8a 	call -20156 <wdt_clear : 10759c >			  ## toy_softoff.c:64:13
  10c458:    28 c6       	r0 = r5 			  ## toy_softoff.c:47:15
  10c45a:    fe e1 1f 10 	call -15870 <get_msg : 108660 >			  ## toy_softoff.c:47:15
  10c45e:    01 c6       	r1 = r0 			  ## toy_softoff.c:47:15
  10c460:    41 20       	if (r1 == 0) goto 8 <.GJTIE319_1_1_+0x438 : 10c46a >
  10c462:    c7 61       	[sp+ 28] = r7 			  ## toy_softoff.c:49:20
  10c464:    30 c6       	r0 = r6 			  ## toy_softoff.c:50:13
  10c466:    db e1 9f 5b 	call -300174 <xprintf : c2fdc >			  ## toy_softoff.c:50:13
  10c46a:    c0 41       	r0 = [sp+ 28] 			  ## toy_softoff.c:53:17
  10c46c:    68 98       	cmp r0, 13			  ## toy_softoff.c:53:9
  10c46e:    f2 10       	ifs (nzcv == 0) goto -28 <.GJTIE319_1_1_+0x422 : 10c454 >			  ## toy_softoff.c:53:9
  10c470:    18 ed 00 00 	r0 = r0 + -2048 
  10c474:    70 98       	cmp r0, 14
  10c476:    f0 18       	if (nzcv > 0) goto -32 <.GJTIE319_1_1_+0x426 : 10c458 >
  10c478:    00 f7 90 00 	r0 = r9 << r0 
  10c47c:    00 f2 40 00 	tst r0, r4
  10c480:    eb 10       	ifs (nzcv == 0) goto -42 <.GJTIE319_1_1_+0x426 : 10c458 >
  10c482:    80 c6       	r0 = r8 			  ## toy_softoff.c:57:13
  10c484:    01 80       	r1 = 0 			  ## toy_softoff.c:57:13
  10c486:    fe e1 1f 1e 	call -15422 <decoder_stop : 10884c >			  ## toy_softoff.c:57:13
  10c48a:    20 91       	r0 = sp + 36 
  10c48c:    fd e1 af e0 	call -17388 <vfs_file_close : 1080a4 >
  10c490:    60 91       	r0 = sp + 44 
  10c492:    fd e1 ff e3 	call -17282 <vfs_fs_close : 108114 >
  10c496:    ff e1 7f 6b 	call -4754 <sys_softoff : 10b208 >			  ## toy_softoff.c:61:13
  10c49a:    ff 0f       	goto -2 <.GJTIE319_1_1_+0x468 : 10c49a >			  ## toy_softoff.c:61:13
  10c49c:    c0 2a       	r0 = [addr(44)]  <.GCPI319_4 : 10c4c8 >			  ## toy_softoff.c:29:9
  10c49e:    db e1 df 59 	call -300230 <xprintf : c2fdc >			  ## toy_softoff.c:29:9
  10c4a2:    f9 0f       	goto -14 <.GJTIE319_1_1_+0x464 : 10c496 >
  10c4a4:    c0 2a       	r0 = [addr(44)]  <.GCPI319_6 : 10c4d0 >			  ## toy_softoff.c:34:9
  10c4a6:    db e1 9f 59 	call -300238 <xprintf : c2fdc >			  ## toy_softoff.c:34:9
  10c4aa:    f2 0f       	goto -28 <.GJTIE319_1_1_+0x45E : 10c490 >
  10c4ac:    40 2a       	r0 = [addr(36)]  <.GCPI319_6 : 10c4d0 >			  ## toy_softoff.c:40:9
  10c4ae:    01 80       	r1 = 0 			  ## toy_softoff.c:40:9
  10c4b0:    db e1 4f 59 	call -300248 <xprintf : c2fdc >			  ## toy_softoff.c:40:9
  10c4b4:    ea 0f       	goto -44 <.GJTIE319_1_1_+0x458 : 10c48a >			  ## toy_softoff.c:40:9
  10c4b6:    00 00       	nop			  ## toy_softoff.c:40:9


.GCPI319_0:
  10c4b8:    03 bd 11 00     < 1162499 : 0x11BD03 >

.GCPI319_1:
  10c4bc:    8c 7e 00 00     < 32396 : 0x7E8C >

.GCPI319_2:
  10c4c0:    60 1c 00 00     < 7264 : 0x1C60 >

.GCPI319_3:
  10c4c4:    60 1d 00 00     < 7520 : 0x1D60 >

.GCPI319_4:
  10c4c8:    c0 c3 11 00     < 1164224 : 0x11C3C0 >

.GCPI319_5:
  10c4cc:    e8 c3 11 00     < 1164264 : 0x11C3E8 >

.GCPI319_6:
  10c4d0:    01 c4 11 00     < 1164289 : 0x11C401 >

.GCPI319_7:
  10c4d4:    2d c4 11 00     < 1164333 : 0x11C42D >

.GCPI319_8:
  10c4d8:    d3 b9 11 00     < 1161683 : 0x11B9D3 >

.GCPI319_9:
  10c4dc:    68 dc 10 00     < 1105000 : 0x10DC68 >

.GCPI319_10:
  10c4e0:    75 bd 11 00     < 1162613 : 0x11BD75 >

.GCPI319_11:
  10c4e4:    6c dd 10 00     < 1105260 : 0x10DD6C >

.GCPI319_12:
  10c4e8:    78 c2 11 00     < 1163896 : 0x11C278 >

.GCPI319_13:
  10c4ec:    a2 c3 11 00     < 1164194 : 0x11C3A2 >

.GCPI319_14:
  10c4f0:    5d c3 11 00     < 1164125 : 0x11C35D >

.GCPI319_15:
  10c4f4:    80 c3 11 00     < 1164160 : 0x11C380 >

.GCPI319_16:
  10c4f8:    c3 c2 11 00     < 1163971 : 0x11C2C3 >

.GCPI319_17:
  10c4fc:    0a c3 11 00     < 1164042 : 0x11C30A >

.GCPI319_18:
  10c500:    ea c1 11 00     < 1163754 : 0x11C1EA >

.GCPI319_19:
  10c504:    56 c2 11 00     < 1163862 : 0x11C256 >

.GCPI319_20:
  10c508:    0c c2 11 00     < 1163788 : 0x11C20C >

.GCPI319_21:
  10c50c:    c9 c1 11 00     < 1163721 : 0x11C1C9 >

.GCPI319_22:
  10c510:    35 c3 11 00     < 1164085 : 0x11C335 >

.GCPI319_23:
  10c514:    98 c2 11 00     < 1163928 : 0x11C298 >

.GCPI319_24:
  10c518:    33 c2 11 00     < 1163827 : 0x11C233 >

.GCPI319_25:
  10c51c:    5c 26 00 00     < 9820 : 0x265C >

.GCPI319_26:
  10c520:    7c 26 00 00     < 9852 : 0x267C >

.GCPI319_27:
  10c524:    18 0d 00 00     < 3352 : 0xD18 >

.GCPI319_28:
  10c528:    7d ad 11 00     < 1158525 : 0x11AD7D >

.GCPI319_29:
  10c52c:    7c 3a 00 00     < 14972 : 0x3A7C >

.GCPI319_30:
  10c530:    9c 3a 00 00     < 15004 : 0x3A9C >

.GCPI319_31:
  10c534:    9f ad 11 00     < 1158559 : 0x11AD9F >

.GCPI319_32:
  10c538:    9c 3e 00 00     < 16028 : 0x3E9C >

.GCPI319_33:
  10c53c:    80 9c 11 00     < 1154176 : 0x119C80 >

.GCPI319_34:
  10c540:    b3 ad 11 00     < 1158579 : 0x11ADB3 >

.GCPI319_35:
  10c544:    74 60 11 00     < 1138804 : 0x116074 >

.GCPI319_36:
  10c548:    74 05 11 00     < 1115508 : 0x110574 >

.GCPI319_37:
  10c54c:    b4 05 11 00     < 1115572 : 0x1105B4 >

.GCPI319_38:
  10c550:    5d ad 11 00     < 1158493 : 0x11AD5D >

.GCPI319_39:
  10c554:    c9 c2 11 00     < 1163977 : 0x11C2C9 >

.GCPI319_40:
  10c558:    e9 c2 11 00     < 1164009 : 0x11C2E9 >

.GCPI319_41:
  10c55c:    88 dc 10 00     < 1105032 : 0x10DC88 >

.GCPI319_42:
  10c560:    f4 b9 11 00     < 1161716 : 0x11B9F4 >

.GCPI319_43:
  10c564:    5c 26 00 00     < 9820 : 0x265C >

.GCPI319_44:
  10c568:    70 26 00 00     < 9840 : 0x2670 >

.GCPI319_45:
  10c56c:    90 26 00 00     < 9872 : 0x2690 >

.GCPI319_46:
  10c570:    62 ba 11 00     < 1161826 : 0x11BA62 >

.GCPI319_47:
  10c574:    8c ba 11 00     < 1161868 : 0x11BA8C >

.GCPI319_48:
  10c578:    b6 ba 11 00     < 1161910 : 0x11BAB6 >

.GCPI319_49:
  10c57c:    e0 ba 11 00     < 1161952 : 0x11BAE0 >

.GCPI319_50:
  10c580:    0a bb 11 00     < 1161994 : 0x11BB0A >

.GCPI319_51:
  10c584:    34 bb 11 00     < 1162036 : 0x11BB34 >

.GCPI319_52:
  10c588:    5e bb 11 00     < 1162078 : 0x11BB5E >

.GCPI319_53:
  10c58c:    88 bb 11 00     < 1162120 : 0x11BB88 >

.GCPI319_54:
  10c590:    b2 bb 11 00     < 1162162 : 0x11BBB2 >

.GCPI319_55:
  10c594:    dc bb 11 00     < 1162204 : 0x11BBDC >

.GCPI319_56:
  10c598:    06 bc 11 00     < 1162246 : 0x11BC06 >

.GCPI319_57:
  10c59c:    30 bc 11 00     < 1162288 : 0x11BC30 >

.GCPI319_58:
  10c5a0:    5a bc 11 00     < 1162330 : 0x11BC5A >

.GCPI319_59:
  10c5a4:    84 bc 11 00     < 1162372 : 0x11BC84 >

.GCPI319_60:
  10c5a8:    ae bc 11 00     < 1162414 : 0x11BCAE >

.GCPI319_61:
  10c5ac:    d8 bc 11 00     < 1162456 : 0x11BCD8 >

.GCPI319_62:
  10c5b0:    18 ba 11 00     < 1161752 : 0x11BA18 >

.GCPI319_63:
  10c5b4:    4c ba 11 00     < 1161804 : 0x11BA4C >

.GCPI319_64:
  10c5b8:    38 ba 11 00     < 1161784 : 0x11BA38 >

.GCPI319_65:
  10c5bc:    8c dd 10 00     < 1105292 : 0x10DD8C >

.GCPI319_66:
  10c5c0:    04 b3 11 00     < 1159940 : 0x11B304 >

.GCPI319_67:
  10c5c4:    4e 78 10 00     < 1079374 : 0x10784E >

.GCPI319_68:
  10c5c8:    5c 26 00 00     < 9820 : 0x265C >

.GCPI319_69:
  10c5cc:    7c 26 00 00     < 9852 : 0x267C >

.GCPI319_70:
  10c5d0:    9c 26 00 00     < 9884 : 0x269C >

.GCPI319_71:
  10c5d4:    9c 28 00 00     < 10396 : 0x289C >

.GCPI319_72:
  10c5d8:    bc 28 00 00     < 10428 : 0x28BC >

.GCPI319_73:
  10c5dc:    18 b1 11 00     < 1159448 : 0x11B118 >

.GCPI319_74:
  10c5e0:    b0 34 00 00     < 13488 : 0x34B0 >

.GCPI319_75:
  10c5e4:    b0 b1 11 00     < 1159600 : 0x11B1B0 >

.GCPI319_76:
  10c5e8:    d7 b1 11 00     < 1159639 : 0x11B1D7 >

.GCPI319_77:
  10c5ec:    fb b1 11 00     < 1159675 : 0x11B1FB >

.GCPI319_78:
  10c5f0:    27 b2 11 00     < 1159719 : 0x11B227 >

.GCPI319_79:
  10c5f4:    53 b2 11 00     < 1159763 : 0x11B253 >

.GCPI319_80:
  10c5f8:    48 b1 11 00     < 1159496 : 0x11B148 >

.GCPI319_81:
  10c5fc:    14 35 00 00     < 13588 : 0x3514 >

.GCPI319_82:
  10c600:    9a 5e 10 00     < 1072794 : 0x105E9A >

.GCPI319_83:
  10c604:    08 6a 11 00     < 1141256 : 0x116A08 >

.GCPI319_84:
  10c608:    14 78 10 00     < 1079316 : 0x107814 >

.GCPI319_85:
  10c60c:    73 b1 11 00     < 1159539 : 0x11B173 >

.GCPI319_86:
  10c610:    81 b2 11 00     < 1159809 : 0x11B281 >

.GCPI319_87:
  10c614:    b7 b0 11 00     < 1159351 : 0x11B0B7 >

.GCPI319_88:
  10c618:    78 34 00 00     < 13432 : 0x3478 >

.GCPI319_89:
  10c61c:    df d5 11 00     < 1168863 : 0x11D5DF >

.GCPI319_90:
  10c620:    0a d6 11 00     < 1168906 : 0x11D60A >

.GCPI319_91:
  10c624:    35 d6 11 00     < 1168949 : 0x11D635 >

.GCPI319_92:
  10c628:    61 d6 11 00     < 1168993 : 0x11D661 >

.GCPI319_93:
  10c62c:    bc 2c 00 00     < 11452 : 0x2CBC >

.GCPI319_94:
  10c630:    ac 65 11 00     < 1140140 : 0x1165AC >

.GCPI319_95:
  10c634:    90 ff 10 00     < 1114000 : 0x10FF90 >

.GCPI319_96:
  10c638:    e1 b0 11 00     < 1159393 : 0x11B0E1 >

.GCPI319_97:
  10c63c:    86 ae 11 00     < 1158790 : 0x11AE86 >

.GCPI319_98:
  10c640:    64 41 00 00     < 16740 : 0x4164 >

.GCPI319_99:
  10c644:    a1 ae 11 00     < 1158817 : 0x11AEA1 >

.GCPI319_100:
  10c648:    10 56 00 00     < 22032 : 0x5610 >

.GCPI319_101:
  10c64c:    25 af 11 00     < 1158949 : 0x11AF25 >

.GCPI319_102:
  10c650:    56 af 11 00     < 1158998 : 0x11AF56 >

.GCPI319_103:
  10c654:    84 af 11 00     < 1159044 : 0x11AF84 >

.GCPI319_104:
  10c658:    c1 af 11 00     < 1159105 : 0x11AFC1 >

.GCPI319_105:
  10c65c:    fd af 11 00     < 1159165 : 0x11AFFD >

.GCPI319_106:
  10c660:    2c b0 11 00     < 1159212 : 0x11B02C >

.GCPI319_107:
  10c664:    57 b0 11 00     < 1159255 : 0x11B057 >

.GCPI319_108:
  10c668:    87 b0 11 00     < 1159303 : 0x11B087 >

.GCPI319_109:
  10c66c:    c8 ae 11 00     < 1158856 : 0x11AEC8 >

.GCPI319_110:
  10c670:    98 65 11 00     < 1140120 : 0x116598 >

.GCPI319_111:
  10c674:    e8 77 10 00     < 1079272 : 0x1077E8 >

.GCPI319_112:
  10c678:    f0 ae 11 00     < 1158896 : 0x11AEF0 >

.GCPI319_113:
  10c67c:    1e 0d 00 00     < 3358 : 0xD1E >

.GCPI319_114:
  10c680:    51 c4 11 00     < 1164369 : 0x11C451 >

.GCPI319_115:
  10c684:    2c b3 11 00     < 1159980 : 0x11B32C >

.GCPI319_116:
  10c688:    8d c4 11 00     < 1164429 : 0x11C48D >

.GCPI319_117:
  10c68c:    75 c4 11 00     < 1164405 : 0x11C475 >

.GCPI319_118:
  10c690:    d1 be 11 00     < 1162961 : 0x11BED1 >

.GCPI319_119:
  10c694:    4c 63 00 00     < 25420 : 0x634C >

.GCPI319_120:
  10c698:    0c dd 10 00     < 1105164 : 0x10DD0C >

.GCPI319_121:
  10c69c:    50 63 00 00     < 25424 : 0x6350 >

.GCPI319_122:
  10c6a0:    54 63 00 00     < 25428 : 0x6354 >

.GCPI319_123:
  10c6a4:    c6 dc 10 00     < 1105094 : 0x10DCC6 >

.GCPI319_124:
  10c6a8:    e4 dc 10 00     < 1105124 : 0x10DCE4 >

.GCPI319_125:
  10c6ac:    10 d9 11 00     < 1169680 : 0x11D910 >

.GCPI319_126:
  10c6b0:    2a bf 11 00     < 1163050 : 0x11BF2A >

.GCPI319_127:
  10c6b4:    d3 bf 11 00     < 1163219 : 0x11BFD3 >

.GCPI319_128:
  10c6b8:    50 1e 00 00     < 7760 : 0x1E50 >

.GCPI319_129:
  10c6bc:    af bf 11 00     < 1163183 : 0x11BFAF >

.GCPI319_130:
  10c6c0:    97 bf 11 00     < 1163159 : 0x11BF97 >

.GCPI319_131:
  10c6c4:    7f bf 11 00     < 1163135 : 0x11BF7F >

.GCPI319_132:
  10c6c8:    67 bf 11 00     < 1163111 : 0x11BF67 >

.GCPI319_133:
  10c6cc:    4f bf 11 00     < 1163087 : 0x11BF4F >

.GCPI319_134:
  10c6d0:    fd be 11 00     < 1163005 : 0x11BEFD >

.GCPI319_135:
  10c6d4:    54 bd 11 00     < 1162580 : 0x11BD54 >

.GCPI319_136:
  10c6d8:    2c dd 10 00     < 1105196 : 0x10DD2C >

.GCPI319_137:
  10c6dc:    50 4e 00 00     < 20048 : 0x4E50 >

.GCPI319_138:
  10c6e0:    00 62 11 00     < 1139200 : 0x116200 >

.GCPI319_139:
  10c6e4:    04 62 11 00     < 1139204 : 0x116204 >

.GCPI319_140:
  10c6e8:    af be 11 00     < 1162927 : 0x11BEAF >

.GCPI319_141:
  10c6ec:    8b be 11 00     < 1162891 : 0x11BE8B >

.GCPI319_142:
  10c6f0:    6e be 11 00     < 1162862 : 0x11BE6E >

.GCPI319_143:
  10c6f4:    4c be 11 00     < 1162828 : 0x11BE4C >

.GCPI319_144:
  10c6f8:    2c be 11 00     < 1162796 : 0x11BE2C >

.GCPI319_145:
  10c6fc:    0c be 11 00     < 1162764 : 0x11BE0C >

.GCPI319_146:
  10c700:    f3 bd 11 00     < 1162739 : 0x11BDF3 >

.GCPI319_147:
  10c704:    d2 bd 11 00     < 1162706 : 0x11BDD2 >

.GCPI319_148:
  10c708:    2c 39 00 00     < 14636 : 0x392C >

.GCPI319_149:
  10c70c:    bf bd 11 00     < 1162687 : 0x11BDBF >

.GCPI319_150:
  10c710:    98 bd 11 00     < 1162648 : 0x11BD98 >

.GCPI319_151:
  10c714:    4c dd 10 00     < 1105228 : 0x10DD4C >

.GCPI319_152:
  10c718:    5c 26 00 00     < 9820 : 0x265C >

.GCPI319_153:
  10c71c:    b4 26 00 00     < 9908 : 0x26B4 >

.GCPI319_154:
  10c720:    f8 62 11 00     < 1139448 : 0x1162F8 >

.GCPI319_155:
  10c724:    00 63 11 00     < 1139456 : 0x116300 >

.GCPI319_156:
  10c728:    14 63 11 00     < 1139476 : 0x116314 >

.GCPI319_157:
  10c72c:    36 c0 11 00     < 1163318 : 0x11C036 >

.GCPI319_158:
  10c730:    70 c1 11 00     < 1163632 : 0x11C170 >

.GCPI319_159:
  10c734:    49 c1 11 00     < 1163593 : 0x11C149 >

.GCPI319_160:
  10c738:    29 c1 11 00     < 1163561 : 0x11C129 >

.GCPI319_161:
  10c73c:    04 c1 11 00     < 1163524 : 0x11C104 >

.GCPI319_162:
  10c740:    e2 c0 11 00     < 1163490 : 0x11C0E2 >

.GCPI319_163:
  10c744:    bf c0 11 00     < 1163455 : 0x11C0BF >

.GCPI319_164:
  10c748:    9c c0 11 00     < 1163420 : 0x11C09C >

.GCPI319_165:
  10c74c:    80 c0 11 00     < 1163392 : 0x11C080 >

.GCPI319_166:
  10c750:    5c c0 11 00     < 1163356 : 0x11C05C >

.GCPI319_167:
  10c754:    28 bd 11 00     < 1162536 : 0x11BD28 >

.GCPI319_168:
  10c758:    99 66 aa 55     < 1437230745 : 0x55AA6699 >

.GCPI319_169:
  10c75c:    24 24 01 00     < 74788 : 0x12424 >

.GCPI319_170:
  10c760:    00 00 60 ff     < 4284481536 : 0xFF600000 >

.GCPI319_171:
  10c764:    38 ff f6 ff     < 4294377272 : 0xFFF6FF38 >

.GCPI319_172:
  10c768:    20 14 09 00     < 594976 : 0x91420 >

c_main:
  10c76c:    a0 cd       	sp += -96 			  ## main.c:30:0
  10c76e:    30 80       	r0 = 6 			  ## main.c:31:5
  10c770:    39 80       	r1 = 7 			  ## main.c:31:5
  10c772:    0a 80       	r2 = 1 			  ## main.c:31:5
  10c774:    0b 80       	r3 = 1 			  ## main.c:31:5
  10c776:    79 e1 ff ea 	call -1098402 <P33_CON_SET : 4d8 >			  ## main.c:31:5
  10c77a:    20 e4 5a 27 	r10 = [addr(5276)]  <.GCPI320_133 : 10dc18 >			  ## main.c:31:5
  10c77e:    00 e2 a8 0c 	[r10 + 32] |= 12 			  ## main.c:35:21
  10c782:    20 e4 40 a0 	r0 = [addr(4736)]  <.GCPI320_0 : 10da04 >			  ## main.c:40:5
  10c786:    20 e4 41 a0 	r1 = [addr(4736)]  <.GCPI320_1 : 10da08 >			  ## main.c:40:5
  10c78a:    db e1 7f 41 	call -301010 <mask_init : c2fbc >			  ## main.c:40:5
  10c78e:    00 80       	r0 = 0 
  10c790:    20 e4 41 9e 	r1 = [addr(4728)]  <.GCPI320_2 : 10da0c >
  10c794:    20 e4 42 9e 	r2 = [addr(4728)]  <.GCPI320_3 : 10da10 >
  10c798:    03 08       	goto 6 <c_main+0x34 : 10c7a0 >
  10c79a:    60 e7 12 00 	[r1 + r0] = r2 			  ## init.c:44:20
  10c79e:    00 d1       	r0 = r0 + 4 			  ## init.c:43:5
  10c7a0:    80 ef 00 80 	cmp r0, 128			  ## init.c:43:5
  10c7a4:    fa 11       	ifs (nzcv != 0) goto -12 <c_main+0x2E : 10c79a >			  ## init.c:43:5
  10c7a6:    20 e4 56 1d 	r6 = [addr(5236)]  <.GCPI320_134 : 10dc1c >
  10c7aa:    ff e3 6b 40 	[r6 + -20] &= (~768) 			  ## clock.c:224:5
  10c7ae:    20 e4 5b 1c 	r11 = [addr(5232)]  <.GCPI320_135 : 10dc20 >			  ## clock.c:224:5
  10c7b2:    00 e3 bf 40 	[r11 + 60] &= (~64) 			  ## uart.c:26:20
  10c7b6:    00 e3 bf 20 	[r11 + 60] &= (~32) 			  ## uart.c:27:20
  10c7ba:    00 e2 bf 10 	[r11 + 60] |= 16 			  ## uart.c:28:20
  10c7be:    f0 e3 b1 10 	[r11 + -60] &= (~16) 			  ## uart.c:30:19
  10c7c2:    f0 e2 b1 20 	[r11 + -60] |= 32 			  ## uart.c:31:19
  10c7c6:    f0 e2 b2 30 	[r11 + -56] |= 48 			  ## uart.c:32:19
  10c7ca:    20 e4 40 92 	r0 = [addr(4680)]  <.GCPI320_4 : 10da14 >			  ## clock.c:254:10
  10c7ce:    20 e4 41 92 	r1 = [addr(4680)]  <.GCPI320_5 : 10da18 >			  ## clock.c:254:10
  10c7d2:    db e1 5f 3c 	call -301174 <strcmp : c2f60 >			  ## clock.c:254:10
  10c7d6:    d0 23       	if (r0 == 0) goto 122 <c_main+0xE6 : 10c852 >
  10c7d8:    20 e4 40 8e 	r0 = [addr(4664)]  <.GCPI320_4 : 10da14 >			  ## clock.c:257:10
  10c7dc:    01 c6       	r1 = r0 			  ## clock.c:257:10
  10c7de:    db e1 ff 3b 	call -301186 <strcmp : c2f60 >			  ## clock.c:257:10
  10c7e2:    20 e4 54 10 	r4 = [addr(5184)]  <.GCPI320_136 : 10dc24 >			  ## clock.c:257:10
  10c7e6:    c0 23       	if (r0 == 0) goto 120 <c_main+0xF4 : 10c860 >			  ## clock.c:257:10
  10c7e8:    20 e4 40 8a 	r0 = [addr(4648)]  <.GCPI320_4 : 10da14 >			  ## clock.c:260:10
  10c7ec:    20 e4 41 8b 	r1 = [addr(4652)]  <.GCPI320_6 : 10da1c >			  ## clock.c:260:10
  10c7f0:    db e1 6f 3b 	call -301204 <strcmp : c2f60 >			  ## clock.c:260:10
  10c7f4:    50 23       	if (r0 == 0) goto 106 <c_main+0xF4 : 10c860 >			  ## clock.c:260:10
  10c7f6:    20 e4 40 87 	r0 = [addr(4636)]  <.GCPI320_4 : 10da14 >			  ## clock.c:263:10
  10c7fa:    20 e4 41 89 	r1 = [addr(4644)]  <.GCPI320_7 : 10da20 >			  ## clock.c:263:10
  10c7fe:    db e1 ff 3a 	call -301218 <strcmp : c2f60 >			  ## clock.c:263:10
  10c802:    b0 22       	if (r0 == 0) goto 86 <c_main+0xEE : 10c85a >			  ## clock.c:263:10
  10c804:    20 e4 40 83 	r0 = [addr(4620)]  <.GCPI320_4 : 10da14 >			  ## clock.c:266:10
  10c808:    20 e4 41 86 	r1 = [addr(4632)]  <.GCPI320_8 : 10da24 >			  ## clock.c:266:10
  10c80c:    db e1 8f 3a 	call -301232 <strcmp : c2f60 >			  ## clock.c:266:10
  10c810:    40 22       	if (r0 == 0) goto 72 <c_main+0xEE : 10c85a >			  ## clock.c:266:10
  10c812:    20 e4 40 80 	r0 = [addr(4608)]  <.GCPI320_4 : 10da14 >			  ## clock.c:269:10
  10c816:    20 e4 41 84 	r1 = [addr(4624)]  <.GCPI320_9 : 10da28 >			  ## clock.c:269:10
  10c81a:    db e1 1f 3a 	call -301246 <strcmp : c2f60 >			  ## clock.c:269:10
  10c81e:    d0 21       	if (r0 == 0) goto 58 <c_main+0xEE : 10c85a >			  ## clock.c:269:10
  10c820:    20 e4 40 7c 	r0 = [addr(4592)]  <.GCPI320_4 : 10da14 >			  ## clock.c:272:10
  10c824:    20 e4 41 81 	r1 = [addr(4612)]  <.GCPI320_10 : 10da2c >			  ## clock.c:272:10
  10c828:    db e1 af 39 	call -301260 <strcmp : c2f60 >			  ## clock.c:272:10
  10c82c:    60 21       	if (r0 == 0) goto 44 <c_main+0xEE : 10c85a >			  ## clock.c:272:10
  10c82e:    20 e4 40 79 	r0 = [addr(4580)]  <.GCPI320_4 : 10da14 >			  ## clock.c:275:10
  10c832:    20 e4 41 7f 	r1 = [addr(4604)]  <.GCPI320_11 : 10da30 >			  ## clock.c:275:10
  10c836:    db e1 3f 39 	call -301274 <strcmp : c2f60 >			  ## clock.c:275:10
  10c83a:    f0 20       	if (r0 == 0) goto 30 <c_main+0xEE : 10c85a >			  ## clock.c:275:10
  10c83c:    20 e4 40 75 	r0 = [addr(4564)]  <.GCPI320_4 : 10da14 >			  ## clock.c:278:10
  10c840:    20 e4 41 7c 	r1 = [addr(4592)]  <.GCPI320_12 : 10da34 >			  ## clock.c:278:10
  10c844:    db e1 cf 38 	call -301288 <strcmp : c2f60 >			  ## clock.c:278:10
  10c848:    04 80       	r4 = 0 			  ## clock.c:278:10
  10c84a:    a8 20       	if (r0 != 0) goto 20 <c_main+0xF4 : 10c860 >			  ## clock.c:278:10
  10c84c:    fd e1 6f 97 	call -19732 <lrc_clk_get : 107b3c >			  ## clock.c:279:16
  10c850:    06 08       	goto 12 <c_main+0xF2 : 10c85e >			  ## clock.c:279:16
  10c852:    20 e4 40 79 	r0 = [addr(4580)]  <.GCPI320_13 : 10da38 >			  ## clock.c:170:12
  10c856:    44 4b       	r4 = [r0 + 52] 			  ## clock.c:170:12
  10c858:    03 08       	goto 6 <c_main+0xF4 : 10c860 >			  ## clock.c:170:12
  10c85a:    fd e1 1f 96 	call -19774 <lsb_clk_get : 107b20 >
  10c85e:    04 c6       	r4 = r0 
  10c860:    20 e4 40 f1 	r0 = [addr(5060)]  <.GCPI320_137 : 10dc28 >			  ## uart.c:35:34
  10c864:    40 fc 40 00 	r0 = r4 / r0 			  ## uart.c:35:34
  10c868:    40 a2       	r0 = r0 >> 2 			  ## uart.c:35:40
  10c86a:    c0 d3       	r0 = r0 + -1 			  ## uart.c:35:44
  10c86c:    20 e4 41 ef 	r1 = [addr(5052)]  <.GCPI320_138 : 10dc2c >			  ## uart.c:35:44
  10c870:    48 68       	[r1 + 4] = r0 			  ## uart.c:35:16
  10c872:    10 ea 01 30 	r0 = 12289 			  ## uart.c:36:15
  10c876:    c8 6f       	[r1 + -4] = r0 			  ## uart.c:36:15
  10c878:    fd e2 1f 00 	[r1 + -4] |= 8192 			  ## uart.c:37:15
  10c87c:    00 81       	r0 = 32 			  ## uart.c:38:15
  10c87e:    08 68       	[r1 + 0] = r0 			  ## uart.c:38:15
  10c880:    20 e4 40 6e 	r0 = [addr(4536)]  <.GCPI320_14 : 10da3c >			  ## main.c:45:5
  10c884:    db e1 af 3a 	call -301228 <xprintf : c2fdc >			  ## main.c:45:5
  10c888:    10 ea 94 00 	r0 = 148 			  ## main.c:47:5
  10c88c:    01 80       	r1 = 0 			  ## main.c:47:5
  10c88e:    79 e1 ff e3 	call -1098626 <p33_tx_1byte : 510 >			  ## main.c:47:5
  10c892:    b4 48       	r4 = [r6 + 8] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:28:19
  10c894:    20 e4 49 68 	r9 = [addr(4512)]  <.GCPI320_13 : 10da38 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:30:24
  10c898:    88 c6       	r0 = r9 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:30:24
  10c89a:    24 e8 01 17 	r1 = [++ r0 = 92] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:30:24
  10c89e:    21 da       	r1 |= r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:30:24
  10c8a0:    01 68       	[r0 + 0] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:30:24
  10c8a2:    20 e4 40 67 	r0 = [addr(4508)]  <.GCPI320_15 : 10da40 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:32:5
  10c8a6:    21 c6       	r1 = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:32:5
  10c8a8:    db e1 8f 39 	call -301264 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:32:5
  10c8ac:    00 f4 40 01 	tst r4, 1			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:35:9
  10c8b0:    11 03       	ifs (nzcv != 0) {			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:36:9
  10c8b2:    20 e4 40 64 		r0 = [addr(4496)]  <.GCPI320_16 : 10da44 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:36:9
  10c8b6:    db e1 1f 39 		call -301278
                               	} <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:36:9
  10c8ba:    00 f4 40 02 	tst r4, 2			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:39:9
  10c8be:    11 03       	ifs (nzcv != 0) {			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:40:9
  10c8c0:    20 e4 40 61 		r0 = [addr(4484)]  <.GCPI320_17 : 10da48 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:40:9
  10c8c4:    db e1 af 38 		call -301292
                               	} <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:40:9
  10c8c8:    00 f4 40 04 	tst r4, 4			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:43:9
  10c8cc:    11 03       	ifs (nzcv != 0) {			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:44:9
  10c8ce:    20 e4 40 5f 		r0 = [addr(4476)]  <.GCPI320_18 : 10da4c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:44:9
  10c8d2:    db e1 3f 38 		call -301306
                               	} <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:44:9
  10c8d6:    00 f4 40 08 	tst r4, 8			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:47:9
  10c8da:    11 03       	ifs (nzcv != 0) {			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:48:9
  10c8dc:    20 e4 40 5c 		r0 = [addr(4464)]  <.GCPI320_19 : 10da50 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:48:9
  10c8e0:    db e1 cf 37 		call -301320
                               	} <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:48:9
  10c8e4:    88 81       	r0 = 49 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:59:11
  10c8e6:    79 e1 7f e0 	call -1098738 <p33_rx_1byte : 4f8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:59:11
  10c8ea:    80 c9       	r0 = r0.b (s) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:59:11
  10c8ec:    00 98       	cmp r0, 0			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:60:9
  10c8ee:    46 60       	[sp+ 4] = r6 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:60:9
  10c8f0:    07 1b       	ifs (nzcv < 0) goto 14 <c_main+0x194 : 10c900 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:60:9
  10c8f2:    20 e4 40 61 	r0 = [addr(4484)]  <.GCPI320_29 : 10da78 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:61:9
  10c8f6:    db e1 1f 37 	call -301342 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:61:9
  10c8fa:    1b e2 97 80 	[r9 + 92] |= 65536 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:62:29
  10c8fe:    4b 08       	goto 150 <c_main+0x22A : 10c996 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:62:29
  10c900:    88 81       	r0 = 49 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:65:5
  10c902:    01 82       	r1 = 64 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:65:5
  10c904:    79 e1 cf dd 	call -1098824 <p33_or_1byte : 4c0 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:65:5
  10c908:    90 80       	r0 = 18 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:67:11
  10c90a:    79 e1 5f df 	call -1098774 <p33_rx_1byte : 4f8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:67:11
  10c90e:    04 c6       	r4 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:67:11
  10c910:    88 c6       	r0 = r9 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:69:24
  10c912:    24 e8 01 17 	r1 = [++ r0 = 92] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:69:24
  10c916:    22 a8       	r2 = r4 << 8 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:69:32
  10c918:    11 da       	r1 |= r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:69:24
  10c91a:    01 68       	[r0 + 0] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:69:24
  10c91c:    20 e4 40 4d 	r0 = [addr(4404)]  <.GCPI320_20 : 10da54 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:71:5
  10c920:    21 c6       	r1 = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:71:5
  10c922:    db e1 bf 35 	call -301386 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:71:5
  10c926:    00 f4 40 01 	tst r4, 1			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:74:9
  10c92a:    11 03       	ifs (nzcv != 0) {			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:75:9
  10c92c:    20 e4 40 4a 		r0 = [addr(4392)]  <.GCPI320_21 : 10da58 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:75:9
  10c930:    db e1 4f 35 		call -301400
                               	} <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:75:9
  10c934:    00 f4 40 02 	tst r4, 2			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:78:9
  10c938:    11 03       	ifs (nzcv != 0) {			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:79:9
  10c93a:    20 e4 40 48 		r0 = [addr(4384)]  <.GCPI320_22 : 10da5c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:79:9
  10c93e:    db e1 df 34 		call -301414
                               	} <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:79:9
  10c942:    00 f4 40 04 	tst r4, 4			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:82:9
  10c946:    11 03       	ifs (nzcv != 0) {			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:83:9
  10c948:    20 e4 40 45 		r0 = [addr(4372)]  <.GCPI320_23 : 10da60 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:83:9
  10c94c:    db e1 6f 34 		call -301428
                               	} <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:83:9
  10c950:    00 f4 40 08 	tst r4, 8			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:86:9
  10c954:    11 03       	ifs (nzcv != 0) {			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:87:9
  10c956:    20 e4 40 43 		r0 = [addr(4364)]  <.GCPI320_24 : 10da64 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:87:9
  10c95a:    db e1 ff 33 		call -301442
                               	} <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:87:9
  10c95e:    00 f4 40 10 	tst r4, 16			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:90:9
  10c962:    11 03       	ifs (nzcv != 0) {			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:91:9
  10c964:    20 e4 40 40 		r0 = [addr(4352)]  <.GCPI320_25 : 10da68 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:91:9
  10c968:    db e1 8f 33 		call -301456
                               	} <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:91:9
  10c96c:    00 f4 40 20 	tst r4, 32			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:94:9
  10c970:    11 03       	ifs (nzcv != 0) {			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:95:9
  10c972:    20 e4 40 3e 		r0 = [addr(4344)]  <.GCPI320_26 : 10da6c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:95:9
  10c976:    db e1 1f 33 		call -301470
                               	} <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:95:9
  10c97a:    a5 c9       	r5 = r4.b (s) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:67:11
  10c97c:    00 f4 40 40 	tst r4, 64			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:98:9
  10c980:    11 03       	ifs (nzcv != 0) {			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:99:9
  10c982:    20 e4 40 3b 		r0 = [addr(4332)]  <.GCPI320_27 : 10da70 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:99:9
  10c986:    db e1 9f 32 		call -301486
                               	} <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:99:9
  10c98a:    fd 9f       	cmp r5, -1			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:102:9
  10c98c:    d1 03       	ifs (nzcv <= 0) {			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:103:9
  10c98e:    20 e4 40 39 		r0 = [addr(4324)]  <.GCPI320_28 : 10da74 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:103:9
  10c992:    db e1 3f 32 		call -301498
                               	} <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_reset.c:103:9
  10c996:    20 e4 40 39 	r0 = [addr(4324)]  <.GCPI320_30 : 10da7c >			  ## power_api.c:275:5
  10c99a:    20 e4 41 39 	r1 = [addr(4324)]  <.GCPI320_31 : 10da80 >			  ## power_api.c:275:5
  10c99e:    db e1 df 31 	call -301510 <xprintf : c2fdc >			  ## power_api.c:275:5
  10c9a2:    20 e4 48 38 	r8 = [addr(4320)]  <.GCPI320_32 : 10da84 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1130:20
  10c9a6:    27 80       	r7 = 4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1130:20
  10c9a8:    00 ed 84 38 	r4 = r8 + 56 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1130:20
  10c9ac:    a7 79       	b[r4 + -8] = r7 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1130:20
  10c9ae:    06 80       	r6 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1130:20
  10c9b0:    66 7c       	b[r4 + 6] = r6 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1132:33
  10c9b2:    00 ed 85 c0 	r5 = r8 + 192 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1132:33
  10c9b6:    2e 6f       	[r5 + -16] = r6 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1134:33
  10c9b8:    a6 7d       	b[r4 + -6] = r6 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1136:24
  10c9ba:    20 e4 40 33 	r0 = [addr(4300)]  <.GCPI320_33 : 10da88 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1137:5
  10c9be:    01 80       	r1 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1137:5
  10c9c0:    db e1 cf 30 	call -301544 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1137:5
  10c9c4:    a6 7f       	b[r4 + -5] = r6 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1139:24
  10c9c6:    20 e4 40 31 	r0 = [addr(4292)]  <.GCPI320_34 : 10da8c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1140:5
  10c9ca:    01 80       	r1 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1140:5
  10c9cc:    db e1 6f 30 	call -301556 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1140:5
  10c9d0:    a7 7a       	b[r4 + 9] = r7 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1143:33
  10c9d2:    66 70       	h[r4 + 4] = r6 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:482:25
  10c9d4:    a6 7c       	b[r4 + 10] = r6 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:486:26
  10c9d6:    2e 7a       	b[r5 + 1] = r6 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:488:25
  10c9d8:    10 ea 00 7d 	r0 = 32000 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:490:5
  10c9dc:    09 80       	r1 = 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:490:5
  10c9de:    fd e1 ff 8c 	call -20066 <__hw_set_osc_hz : 107b80 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:490:5
  10c9e2:    79 e1 1f da 	call -1098942 <spi_get_port : 528 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:492:5
  10c9e6:    01 c6       	r1 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:492:5
  10c9e8:    20 e4 40 29 	r0 = [addr(4260)]  <.GCPI320_35 : 10da90 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:492:5
  10c9ec:    db e1 6f 2f 	call -301588 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:492:5
  10c9f0:    60 58       	r0 = b[r4 + 4] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:494:5
  10c9f2:    10 98       	cmp r0, 2			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:494:5
  10c9f4:    14 03       	ifs (nzcv != 0) {			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:494:5
  10c9f6:    20 e4 41 28 		r1 = [addr(4256)] 
                               	} else { <.GCPI320_37 : 10da98 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:494:5
  10c9fa:    20 e4 41 26 		r1 = [addr(4248)] 
                               	} <.GCPI320_36 : 10da94 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:494:5
  10c9fe:    aa 4e       	r2 = [r5 + -24] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:494:5
  10ca00:    20 e4 40 26 	r0 = [addr(4248)]  <.GCPI320_38 : 10da9c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:494:5
  10ca04:    db e1 af 2e 	call -301612 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:494:5
  10ca08:    60 58       	r0 = b[r4 + 4] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:496:20
  10ca0a:    10 98       	cmp r0, 2			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:496:9
  10ca0c:    03 03       	ifs (nzcv == 0) {			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:497:27
  10ca0e:    80 c6       		r0 = r8 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:497:27
  10ca10:    24 e8 01 2a 		r1 = [++ r0 = 168] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:497:27
  10ca14:    49 a6       		r1 = r1 >> 6 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:497:27
  10ca16:    01 68       		[r0 + 0] = r1 
                               	}			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:497:27
  10ca18:    80 80       	r0 = 16 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:497:27
  10ca1a:    84 c6       	r4 = r8 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:500:27
  10ca1c:    44 e8 40 4e 	b[++ r4 = 57] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:500:27
  10ca20:    20 e4 40 1f 	r0 = [addr(4220)]  <.GCPI320_39 : 10daa0 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:501:5
  10ca24:    81 80       	r1 = 16 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:501:5
  10ca26:    82 80       	r2 = 16 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:501:5
  10ca28:    db e1 8f 2d 	call -301648 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:501:5
  10ca2c:    00 80       	r0 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:501:5
  10ca2e:    60 7e       	b[r4 + 7] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:503:30
  10ca30:    80 81       	r0 = 48 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:505:5
  10ca32:    49 80       	r1 = 9 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:505:5
  10ca34:    79 e1 cf d6 	call -1099048 <p33_tx_1byte : 510 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:505:5
  10ca38:    0f e3 a6 80 	[r10 + 24] &= (~256) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:507:5
  10ca3c:    0d e2 a6 00 	[r10 + 24] |= 8192 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:509:5
  10ca40:    20 5e       	r0 = b[r4 + 3] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:511:24
  10ca42:    00 98       	cmp r0, 0			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:511:24
  10ca44:    00 fb 61 09 	ifs (nzcv != 0) goto 300 <c_main+0x408 : 10cb74 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:511:24
  10ca48:    20 e8 80 2c 	r0 = [r8 + 176] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:517:74
  10ca4c:    0d ed 00 ac 	r0 = r0 + 3500 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:517:61
  10ca50:    60 e8 80 0a 	[r8 + 40] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:517:33
  10ca54:    88 81       	r0 = 49 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:518:9
  10ca56:    21 82       	r1 = 68 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:518:9
  10ca58:    79 e1 af d5 	call -1099084 <p33_tx_1byte : 510 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:518:9
  10ca5c:    a0 82       	r0 = 84 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:519:9
  10ca5e:    21 82       	r1 = 68 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:519:9
  10ca60:    79 e1 6f d5 	call -1099092 <p33_tx_1byte : 510 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:519:9
  10ca64:    0d 80       	r5 = 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:215:31
  10ca66:    08 80       	r0 = 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:215:31
  10ca68:    fd e1 ef 8f 	call -19972 <p33_rd_page : 107c68 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:215:31
  10ca6c:    04 c6       	r4 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:215:31
  10ca6e:    07 80       	r7 = 0 
  10ca70:    00 80       	r0 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:216:31
  10ca72:    fd e1 9f 8f 	call -19982 <p33_rd_page : 107c68 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:216:31
  10ca76:    fc 9f       	cmp r4, -1			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:217:41
  10ca78:    1b 10       	ifs (nzcv == 0) goto 54 <c_main+0x344 : 10cab0 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:217:41
  10ca7a:    c1 c9       	r1 = r0.l (s) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:217:41
  10ca7c:    f9 9f       	cmp r1, -1			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:217:41
  10ca7e:    18 1c       	ifs (nzcv > 0) goto 48 <c_main+0x344 : 10cab0 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:217:41
  10ca80:    02 f6 00 08 	r0 = uextra(r0, p:16, l:8) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:218:52
  10ca84:    61 b1       	r1 = r4 >> 17 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:220:17
  10ca86:    8f f3 11 80 	r1 = r1 & 256 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:220:17
  10ca8a:    01 da       	r1 |= r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:220:17
  10ca8c:    88 dc       	r0 = -r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:224:17
  10ca8e:    06 f4 40 80 	tst r4, 67108864			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:224:17
  10ca92:    00 03       	ifs (nzcv == 0) {			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:224:17
  10ca94:    08 c6       		r0 = r1 
                               	}			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:224:17
  10ca96:    07 ed 00 53 	r0 = r0 + 1875 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:224:17
  10ca9a:    20 e4 41 65 	r1 = [addr(4500)]  <.GCPI320_139 : 10dc30 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:230:44
  10ca9e:    40 fc 10 00 	r0 = r1 / r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:230:44
  10caa2:    40 a3       	r0 = r0 >> 3 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:230:57
  10caa4:    89 c6       	r1 = r9 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:230:32
  10caa6:    64 e8 10 14 	[++ r1 = 80] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:230:32
  10caaa:    08 80       	r0 = 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:230:32
  10caac:    48 78       	b[r1 + 4] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:230:32
  10caae:    60 08       	goto 192 <c_main+0x404 : 10cb70 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:230:32
  10cab0:    fd e1 5f 90 	call -19958 <LRC_CLK_EN : 107cbe >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:241:5
  10cab4:    88 c6       	r0 = r9 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:241:5
  10cab6:    44 e8 05 15 	b[++ r0 = 84] = r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:241:5
  10caba:    20 e4 32 fa 	r2 = [addr(4072)]  <.GCPI320_40 : 10daa4 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:248:24
  10cabe:    17 78       	b[r2 + 0] = r7 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:248:24
  10cac0:    45 78       	b[r0 + 4] = r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:248:24
  10cac2:    f0 e3 aa 3e 	[r10 + -24] &= (~62) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:252:5
  10cac6:    08 80       	r0 = 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:255:5
  10cac8:    fd e1 0f 91 	call -19936 <__hw_lrc_enable : 107cec >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:255:5
  10cacc:    20 e8 a0 fa 	r0 = [r10 + -24] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:126:19
  10cad0:    00 f4 00 01 	tst r0, 1			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:126:9
  10cad4:    02 11       	ifs (nzcv != 0) goto 4 <c_main+0x36E : 10cada >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:126:9
  10cad6:    4c 08       	goto 152 <c_main+0x404 : 10cb70 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:126:9
  10cad8:    00 00       	nop			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:131:9
  10cada:    20 e8 a0 fa 	r0 = [r10 + -24] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:130:22
  10cade:    80 c9       	r0 = r0.b (s) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:130:36
  10cae0:    00 98       	cmp r0, 0			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:130:5
  10cae2:    fa 1a       	ifs (nzcv >= 0) goto -12 <c_main+0x36C : 10cad8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:130:5
  10cae4:    20 e8 a3 fb 	r3 = [r10 + -20] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:136:24
  10cae8:    00 80       	r0 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:139:5
  10caea:    fd e1 ff 8f 	call -19970 <__hw_lrc_enable : 107cec >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:139:5
  10caee:    03 22       	if (r3 == 0) goto 64 <c_main+0x3C4 : 10cb30 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:139:5
  10caf0:    18 80       	r0 = 3 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:150:80
  10caf2:    20 e4 41 50 	r1 = [addr(4416)]  <.GCPI320_140 : 10dc34 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:150:80
  10caf6:    0c c7       	maccl = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:150:80
  10caf8:    05 c7       	macch = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:150:80
  10cafa:    03 05       	macc /= r3 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:150:80
  10cafc:    23 c8       	r3 = maccl 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:150:80
  10cafe:    00 e8 91 16 	r1 = b[r9 + 88] 
  10cb02:    a0 80       	r0 = 20 
  10cb04:    19 20       	if (r1 != 0) goto 2 <c_main+0x39C : 10cb08 >
  10cb06:    00 80       	r0 = 0 
  10cb08:    20 e4 31 e7 	r1 = [addr(3996)]  <.GCPI320_41 : 10daa8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:104:9
  10cb0c:    0c 48       	r4 = [r1 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:104:9
  10cb0e:    34 21       	if (r4 == 0) goto 38 <c_main+0x3CA : 10cb36 >
  10cb10:    c4 d3       	r4 = r0 + -1 
  10cb12:    05 80       	r5 = 0 
  10cb14:    06 08       	goto 12 <c_main+0x3B6 : 10cb22 >
  10cb16:    3e a2       	r6 = r7 << 2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:110:54
  10cb18:    8f d5       	r7 = r1 + r6 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:110:35
  10cb1a:    7f 48       	r7 = [r7 + 4] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:110:35
  10cb1c:    60 e7 17 06 	[r1 + r6] = r7 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:110:33
  10cb20:    6d d0       	r5 = r5 + 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:109:33
  10cb22:    2f c9       	r7 = r5.b 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:109:21
  10cb24:    3c ce       	cmp r7, r4			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:109:9
  10cb26:    f7 1b       	ifs (nzcv < 0) goto -18 <c_main+0x3AA : 10cb16 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:109:9
  10cb28:    24 a2       	r4 = r4 << 2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:112:9
  10cb2a:    60 e7 13 04 	[r1 + r4] = r3 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:112:33
  10cb2e:    0b 08       	goto 22 <c_main+0x3DA : 10cb46 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:112:33
  10cb30:    f0 e2 aa 01 	[r10 + -24] |= 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:143:22
  10cb34:    1d 08       	goto 58 <c_main+0x404 : 10cb70 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:143:22
  10cb36:    20 e4 34 dc 	r4 = [addr(3952)]  <.GCPI320_41 : 10daa8 >
  10cb3a:    05 c6       	r5 = r0 
  10cb3c:    03 08       	goto 6 <c_main+0x3D8 : 10cb44 >
  10cb3e:    68 e8 43 01 	[r4 ++= 4] = r3 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:106:33
  10cb42:    ed d3       	r5 = r5 + -1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:105:9
  10cb44:    cd 27       	if (r5 != 0) goto -8 <c_main+0x3D2 : 10cb3e >
  10cb46:    03 80       	r3 = 0 
  10cb48:    04 c6       	r4 = r0 
  10cb4a:    04 08       	goto 8 <c_main+0x3E8 : 10cb54 >
  10cb4c:    28 e8 15 01 	r5 = [r1 ++= 4] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:116:16
  10cb50:    5b d5       	r3 = r3 + r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:116:13
  10cb52:    e4 d3       	r4 = r4 + -1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:115:5
  10cb54:    bc 27       	if (r4 != 0) goto -10 <c_main+0x3E0 : 10cb4c >
  10cb56:    a1 80       	r1 = 20 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:119:30
  10cb58:    40 fc 31 01 	r1 = r3 / r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:119:30
  10cb5c:    60 e8 91 14 	[r9 + 80] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:119:24
  10cb60:    11 58       	r1 = b[r2 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:159:17
  10cb62:    08 ce       	cmp r1, r0			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:159:9
  10cb64:    91 03       	if (nzcv <= 0) {			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:160:27
  10cb66:    48 d0       		r0 = r1 + 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:160:27
  10cb68:    10 78       		b[r2 + 0] = r0 
                               	}			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:160:27
  10cb6a:    08 80       	r0 = 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:175:5
  10cb6c:    fd e1 ef 8b 	call -20100 <__hw_lrc_enable : 107cec >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lrc_hw.c:175:5
  10cb70:    00 e8 80 0f 	r0 = b[r8 + 60] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:523:20
  10cb74:    08 98       	cmp r0, 1			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:523:9
  10cb76:    12 03       	ifs (nzcv != 0) {			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:524:9
  10cb78:    10 ea a5 00 		r0 = 165 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:524:9
  10cb7c:    01 80       		r1 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:524:9
  10cb7e:    79 e1 7f cc 		call -1099378
                               	} <p33_tx_1byte : 510 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:524:9
  10cb82:    90 81       	r0 = 50 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:527:5
  10cb84:    19 80       	r1 = 3 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:527:5
  10cb86:    79 e1 3f cc 	call -1099386 <p33_tx_1byte : 510 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:527:5
  10cb8a:    20 e8 84 0a 	r4 = [r8 + 40] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:529:38
  10cb8e:    20 c6       	r0 = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:529:20
  10cb90:    fd e1 ef 8b 	call -20100 <__tcnt_us : 107d10 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:529:20
  10cb94:    05 c6       	r5 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:529:20
  10cb96:    60 e8 85 07 	[r8 + 28] = r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:529:18
  10cb9a:    0f 80       	r7 = 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:529:18
  10cb9c:    08 80       	r0 = 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:530:20
  10cb9e:    fd e1 7f 8b 	call -20114 <__tcnt_us : 107d10 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:530:20
  10cba2:    60 e8 80 08 	[r8 + 32] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:530:18
  10cba6:    fd e1 ff 8c 	call -20066 <__tus_cnt : 107d48 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:531:5
  10cbaa:    03 c6       	r3 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:531:5
  10cbac:    28 c6       	r0 = r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:531:5
  10cbae:    fd e1 bf 8c 	call -20074 <__tus_cnt : 107d48 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:531:5
  10cbb2:    02 c6       	r2 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:531:5
  10cbb4:    20 e4 30 bd 	r0 = [addr(3828)]  <.GCPI320_42 : 10daac >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:531:5
  10cbb8:    19 c6       	r1 = r3 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:531:5
  10cbba:    23 c6       	r3 = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:531:5
  10cbbc:    db e1 ef 20 	call -302052 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:531:5
  10cbc0:    84 c6       	r4 = r8 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:533:5
  10cbc2:    04 e8 41 48 	r1 = b[++ r4 = 33] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:533:5
  10cbc6:    b0 81       	r0 = 54 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:533:5
  10cbc8:    79 e1 2f ca 	call -1099452 <p33_tx_1byte : 510 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:533:5
  10cbcc:    e1 5f       	r1 = b[r4 + -1] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:534:5
  10cbce:    b8 81       	r0 = 55 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:534:5
  10cbd0:    79 e1 ef c9 	call -1099460 <p33_tx_1byte : 510 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:534:5
  10cbd4:    02 e5 81 07 	r1, r2 = d[r8 + 28] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:535:5
  10cbd8:    20 e4 30 b5 	r0 = [addr(3796)]  <.GCPI320_43 : 10dab0 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:535:5
  10cbdc:    db e1 ef 1f 	call -302084 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:535:5
  10cbe0:    01 e5 80 07 	r0, r1 = d[r8 + 28] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:537:36
  10cbe4:    0c d4       	r4 = r1 + r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:537:41
  10cbe6:    10 ea 68 06 	r0 = 1640 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:537:58
  10cbea:    fd e1 1f 89 	call -20190 <__tcnt_us : 107d10 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:537:58
  10cbee:    24 d4       	r4 = r4 + r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:537:56
  10cbf0:    60 e8 84 09 	[r8 + 36] = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:537:26
  10cbf4:    10 ea dc 05 	r0 = 1500 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:538:29
  10cbf8:    fd e1 af 88 	call -20204 <__tcnt_us : 107d10 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:538:29
  10cbfc:    24 d4       	r4 = r4 + r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:538:26
  10cbfe:    60 e8 84 09 	[r8 + 36] = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:538:26
  10cc02:    10 ea dc 05 	r0 = 1500 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:539:29
  10cc06:    fd e1 3f 88 	call -20218 <__tcnt_us : 107d10 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:539:29
  10cc0a:    03 d5       	r3 = r0 + r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:539:26
  10cc0c:    60 e8 83 09 	[r8 + 36] = r3 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:539:26
  10cc10:    18 c6       	r0 = r3 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:540:5
  10cc12:    fd e1 9f 89 	call -20174 <__tus_cnt : 107d48 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:540:5
  10cc16:    02 c6       	r2 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:540:5
  10cc18:    20 e4 30 a6 	r0 = [addr(3736)]  <.GCPI320_44 : 10dab4 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:540:5
  10cc1c:    19 c6       	r1 = r3 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:540:5
  10cc1e:    db e1 df 1d 	call -302150 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:540:5
  10cc22:    a0 83       	r0 = 116 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:542:5
  10cc24:    11 ea a0 00 	r1 = 160 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:542:5
  10cc28:    79 e1 2f c7 	call -1099548 <p33_tx_1byte : 510 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:542:5
  10cc2c:    b8 80       	r0 = 23 			  ## ../../include_lib/cpu/sh54/asm/power/p33.h:333:9
  10cc2e:    11 ea fb 00 	r1 = 251 			  ## ../../include_lib/cpu/sh54/asm/power/p33.h:333:9
  10cc32:    79 e1 1f c8 	call -1099518 <p33_and_1byte : 538 >			  ## ../../include_lib/cpu/sh54/asm/power/p33.h:333:9
  10cc36:    30 80       	r0 = 6 			  ## ../../include_lib/cpu/sh54/asm/power/p33.h:333:9
  10cc38:    00 ed 81 c0 	r1 = r8 + 192 
  10cc3c:    08 78       	b[r1 + 0] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:553:27
  10cc3e:    20 80       	r0 = 4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:553:27
  10cc40:    c8 7f       	b[r1 + -1] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:554:27
  10cc42:    04 80       	r4 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:554:27
  10cc44:    28 80       	r0 = 5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:556:5
  10cc46:    19 80       	r1 = 3 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:556:5
  10cc48:    1a 80       	r2 = 3 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:556:5
  10cc4a:    03 80       	r3 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:556:5
  10cc4c:    79 e1 4f c4 	call -1099640 <P33_CON_SET : 4d8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:556:5
  10cc50:    28 80       	r0 = 5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:557:5
  10cc52:    01 80       	r1 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:557:5
  10cc54:    1a 80       	r2 = 3 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:557:5
  10cc56:    33 80       	r3 = 6 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:557:5
  10cc58:    79 e1 ef c3 	call -1099652 <P33_CON_SET : 4d8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:557:5
  10cc5c:    28 80       	r0 = 5 			  ## ../../include_lib/cpu/sh54/asm/power/p33.h:323:11
  10cc5e:    79 e1 bf c4 	call -1099626 <p33_rx_1byte : 4f8 >			  ## ../../include_lib/cpu/sh54/asm/power/p33.h:323:11
  10cc62:    80 f3 00 07 	r0 = r0 & 7 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:559:5
  10cc66:    05 a2       	r5 = r0 << 2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:559:5
  10cc68:    28 80       	r0 = 5 			  ## ../../include_lib/cpu/sh54/asm/power/p33.h:323:11
  10cc6a:    79 e1 5f c4 	call -1099638 <p33_rx_1byte : 4f8 >			  ## ../../include_lib/cpu/sh54/asm/power/p33.h:323:11
  10cc6e:    20 e4 31 92 	r1 = [addr(3656)]  <.GCPI320_45 : 10dab8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:559:5
  10cc72:    20 e7 11 05 	r1 = [r1 + r5] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:559:5
  10cc76:    40 a2       	r0 = r0 >> 2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:559:5
  10cc78:    80 f3 00 1c 	r0 = r0 & 28 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:559:5
  10cc7c:    20 e4 32 8f 	r2 = [addr(3644)]  <.GCPI320_46 : 10dabc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:559:5
  10cc80:    20 e7 22 00 	r2 = [r2 + r0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:559:5
  10cc84:    20 e4 30 8e 	r0 = [addr(3640)]  <.GCPI320_47 : 10dac0 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:559:5
  10cc88:    db e1 8f 1a 	call -302256 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:559:5
  10cc8c:    00 80       	r0 = 0 			  ## ../../include_lib/cpu/sh54/asm/power/p33.h:331:9
  10cc8e:    11 ea 80 00 	r1 = 128 			  ## ../../include_lib/cpu/sh54/asm/power/p33.h:331:9
  10cc92:    79 e1 5f c1 	call -1099734 <p33_or_1byte : 4c0 >			  ## ../../include_lib/cpu/sh54/asm/power/p33.h:331:9
  10cc96:    b0 80       	r0 = 22 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:563:5
  10cc98:    01 80       	r1 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:563:5
  10cc9a:    32 80       	r2 = 6 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:563:5
  10cc9c:    03 80       	r3 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:563:5
  10cc9e:    79 e1 bf c1 	call -1099722 <P33_CON_SET : 4d8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:563:5
  10cca2:    10 80       	r0 = 2 			  ## ../../include_lib/cpu/sh54/asm/power/p33.h:331:9
  10cca4:    01 82       	r1 = 64 			  ## ../../include_lib/cpu/sh54/asm/power/p33.h:331:9
  10cca6:    79 e1 bf c0 	call -1099754 <p33_or_1byte : 4c0 >			  ## ../../include_lib/cpu/sh54/asm/power/p33.h:331:9
  10ccaa:    b8 80       	r0 = 23 			  ## ../../include_lib/cpu/sh54/asm/power/p33.h:333:9
  10ccac:    11 ea df 00 	r1 = 223 			  ## ../../include_lib/cpu/sh54/asm/power/p33.h:333:9
  10ccb0:    79 e1 2f c4 	call -1099644 <p33_and_1byte : 538 >			  ## ../../include_lib/cpu/sh54/asm/power/p33.h:333:9
  10ccb4:    08 80       	r0 = 1 			  ## ../../include_lib/cpu/sh54/asm/power/p33.h:333:9
  10ccb6:    11 ea f7 00 	r1 = 247 			  ## ../../include_lib/cpu/sh54/asm/power/p33.h:333:9
  10ccba:    79 e1 df c3 	call -1099654 <p33_and_1byte : 538 >			  ## ../../include_lib/cpu/sh54/asm/power/p33.h:333:9
  10ccbe:    00 80       	r0 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:568:5
  10ccc0:    79 e1 6f c4 	call -1099636 <NV_RAM_POWER_GATE : 550 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:568:5
  10ccc4:    b0 80       	r0 = 22 			  ## ../../include_lib/cpu/sh54/asm/power/p33.h:331:9
  10ccc6:    01 82       	r1 = 64 			  ## ../../include_lib/cpu/sh54/asm/power/p33.h:331:9
  10ccc8:    79 e1 af bf 	call -1099788 <p33_or_1byte : 4c0 >			  ## ../../include_lib/cpu/sh54/asm/power/p33.h:331:9
  10cccc:    30 80       	r0 = 6 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:574:5
  10ccce:    29 80       	r1 = 5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:574:5
  10ccd0:    0a 80       	r2 = 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:574:5
  10ccd2:    03 80       	r3 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:574:5
  10ccd4:    79 e1 0f c0 	call -1099776 <P33_CON_SET : 4d8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:574:5
  10ccd8:    30 80       	r0 = 6 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:575:5
  10ccda:    31 80       	r1 = 6 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:575:5
  10ccdc:    0a 80       	r2 = 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:575:5
  10ccde:    0b 80       	r3 = 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:575:5
  10cce0:    79 e1 af bf 	call -1099788 <P33_CON_SET : 4d8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:575:5
  10cce4:    08 80       	r0 = 1 			  ## ../../include_lib/cpu/sh54/asm/power/p33.h:333:9
  10cce6:    11 ea df 00 	r1 = 223 			  ## ../../include_lib/cpu/sh54/asm/power/p33.h:333:9
  10ccea:    79 e1 5f c2 	call -1099702 <p33_and_1byte : 538 >			  ## ../../include_lib/cpu/sh54/asm/power/p33.h:333:9
  10ccee:    60 e8 88 00 	[r8 + 0] = r8 			  ## ../../include_lib/common/list.h:195:16
  10ccf2:    60 e8 88 01 	[r8 + 4] = r8 			  ## ../../include_lib/common/list.h:196:16
  10ccf6:    c0 82       	r0 = 88 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:398:5
  10ccf8:    81 82       	r1 = 80 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:398:5
  10ccfa:    79 e1 9f c0 	call -1099758 <p33_tx_1byte : 510 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:398:5
  10ccfe:    c0 82       	r0 = 88 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:399:5
  10cd00:    69 82       	r1 = 77 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:399:5
  10cd02:    79 e1 5f c0 	call -1099766 <p33_tx_1byte : 510 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:399:5
  10cd06:    00 e2 a6 04 	[r10 + 24] |= 4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:403:5
  10cd0a:    00 ed 85 0c 	r5 = r8 + 12 			  ## ../../include_lib/common/list.h:195:16
  10cd0e:    60 e8 85 03 	[r8 + 12] = r5 			  ## ../../include_lib/common/list.h:195:16
  10cd12:    60 e8 85 04 	[r8 + 16] = r5 			  ## ../../include_lib/common/list.h:196:16
  10cd16:    c8 82       	r0 = 89 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:477:5
  10cd18:    81 82       	r1 = 80 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:477:5
  10cd1a:    79 e1 9f bf 	call -1099790 <p33_tx_1byte : 510 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:477:5
  10cd1e:    c8 82       	r0 = 89 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:478:5
  10cd20:    e9 82       	r1 = 93 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:478:5
  10cd22:    79 e1 5f bf 	call -1099798 <p33_tx_1byte : 510 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:478:5
  10cd26:    00 e2 a6 08 	[r10 + 24] |= 8 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/lp_timer_hw.c:482:5
  10cd2a:    20 e4 31 66 	r1 = [addr(3480)]  <.GCPI320_48 : 10dac4 >
  10cd2e:    00 ed 10 a8 	r0 = r1 + 168 
  10cd32:    20 e8 12 3e 	r2 = [r1 + 248] 
  10cd36:    60 e9 0a 00 	[sp] = r10 
  10cd3a:    05 08       	goto 10 <c_main+0x5DA : 10cd46 >
  10cd3c:    80 f1 23 04 	r3 = r2 & setbit(r4) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:62:29
  10cd40:    09 10       	ifs (nzcv == 0) goto 18 <c_main+0x5E8 : 10cd54 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:62:13
  10cd42:    80 88       	r0 += 16 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:61:5
  10cd44:    64 d0       	r4 = r4 + 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:61:43
  10cd46:    24 98       	cmp r4, 4			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:61:5
  10cd48:    f9 1d       	ifs (nzcv <= 0) goto -14 <c_main+0x5D0 : 10cd3c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:61:5
  10cd4a:    20 e4 30 5f 	r0 = [addr(3452)]  <.GCPI320_49 : 10dac8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:69:5
  10cd4e:    db e1 5f 14 	call -302454 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:69:5
  10cd52:    17 08       	goto 46 <c_main+0x616 : 10cd82 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:69:5
  10cd54:    00 f7 73 04 	r3 = r7 << r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:62:31
  10cd58:    1a da       	r2 |= r3 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:63:27
  10cd5a:    60 e8 12 3e 	[r1 + 248] = r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:63:27
  10cd5e:    01 80       	r1 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:63:27
  10cd60:    c1 68       	[r0 + 12] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:64:13
  10cd62:    81 68       	[r0 + 8] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:64:13
  10cd64:    41 68       	[r0 + 4] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:64:13
  10cd66:    01 68       	[r0 + 0] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:64:13
  10cd68:    c0 20       	if (r0 == 0) goto 24 <c_main+0x616 : 10cd82 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:64:13
  10cd6a:    20 e4 32 58 	r2 = [addr(3424)]  <.GCPI320_50 : 10dacc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:940:16
  10cd6e:    41 e5 02 02 	d[r0 + 8] = r2, r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:940:16
  10cd72:    20 e8 81 04 	r1 = [r8 + 16] 			  ## ../../include_lib/common/list.h:154:28
  10cd76:    60 e8 80 04 	[r8 + 16] = r0 			  ## ../../include_lib/common/list.h:136:16
  10cd7a:    45 e5 01 00 	d[r0 + 0] = r1, r5 			  ## ../../include_lib/common/list.h:137:16
  10cd7e:    08 68       	[r1 + 0] = r0 			  ## ../../include_lib/common/list.h:139:16
  10cd80:    05 08       	goto 10 <c_main+0x620 : 10cd8c >
  10cd82:    20 e4 30 53 	r0 = [addr(3404)]  <.GCPI320_51 : 10dad0 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:937:9
  10cd86:    db e1 9f 12 	call -302510 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:937:9
  10cd8a:    00 80       	r0 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:937:9
  10cd8c:    60 e8 90 0f 	[r9 + 60] = r0 			  ## power_api.c:320:16
  10cd90:    20 e4 30 50 	r0 = [addr(3392)]  <.GCPI320_52 : 10dad4 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1109:33
  10cd94:    81 c6       	r1 = r8 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1109:33
  10cd96:    64 e8 10 31 	[++ r1 = 196] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1109:33
  10cd9a:    20 e4 30 4f 	r0 = [addr(3388)]  <.GCPI320_53 : 10dad8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1110:33
  10cd9e:    48 68       	[r1 + 4] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1110:33
  10cda0:    20 e4 30 4e 	r0 = [addr(3384)]  <.GCPI320_54 : 10dadc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1111:37
  10cda4:    08 69       	[r1 + 16] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1111:37
  10cda6:    52 ea 00 00 	r10 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1111:37
  10cdaa:    40 e8 8a 4c 	b[r8 + 49] = r10 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_hw.c:1099:25
  10cdae:    60 e8 ba f2 	[r11 + -56] = r10 			  ## port_init.c:78:19
  10cdb2:    60 e8 ba f7 	[r11 + -36] = r10 			  ## port_init.c:79:20
  10cdb6:    60 e8 ba fb 	[r11 + -20] = r10 			  ## port_init.c:81:19
  10cdba:    10 80       	r0 = 2 			  ## port_init.c:82:20
  10cdbc:    60 e8 b0 00 	[r11 + 0] = r0 			  ## port_init.c:82:20
  10cdc0:    50 80       	r0 = 10 			  ## port_init.c:85:19
  10cdc2:    60 e8 b0 04 	[r11 + 16] = r0 			  ## port_init.c:85:19
  10cdc6:    60 e8 ba 09 	[r11 + 36] = r10 			  ## port_init.c:86:20
  10cdca:    10 ea ff ff 	r0 = 65535 			  ## port_init.c:27:19
  10cdce:    60 e8 b0 f5 	[r11 + -44] = r0 			  ## port_init.c:27:19
  10cdd2:    60 e8 ba f6 	[r11 + -40] = r10 			  ## port_init.c:28:19
  10cdd6:    60 e8 b0 fe 	[r11 + -8] = r0 			  ## port_init.c:32:19
  10cdda:    60 e8 ba ff 	[r11 + -4] = r10 			  ## port_init.c:33:19
  10cdde:    60 e8 b0 07 	[r11 + 28] = r0 			  ## port_init.c:37:19
  10cde2:    80 80       	r0 = 16 			  ## port_init.c:38:19
  10cde4:    60 e9 0b 02 	[sp+ 8] = r11 			  ## port_init.c:38:19
  10cde8:    60 e8 b0 08 	[r11 + 32] = r0 			  ## port_init.c:38:19
  10cdec:    20 e4 30 92 	r0 = [addr(3656)]  <.GCPI320_141 : 10dc38 >			  ## port_init.c:38:19
  10cdf0:    60 e8 0a 00 	[r0 + 0] = r10 			  ## port_init.c:91:18
  10cdf4:    60 e8 0a 00 	[r0 + 0] = r10 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/gpio.c:138:22
  10cdf8:    20 e4 3b 90 	r11 = [addr(3648)]  <.GCPI320_142 : 10dc3c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/gpio.c:138:22
  10cdfc:    0e e2 b0 10 	[r11 + 0] |= 2304 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/gpio.c:138:22
  10ce00:    0f e3 b0 00 	[r11 + 0] &= (~512) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/gpio.c:138:22
  10ce04:    0d e3 b0 00 	[r11 + 0] &= (~8192) 
  10ce08:    0e e3 b0 80 	[r11 + 0] &= (~1024) 
  10ce0c:    0c e3 b0 80 	[r11 + 0] &= (~16384) 
  10ce10:    10 ea a8 00 	r0 = 168 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:561:16
  10ce14:    79 e1 0f b7 	call -1100064 <p33_rx_1byte : 4f8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:561:16
  10ce18:    10 ea 93 00 	r0 = 147 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:562:16
  10ce1c:    79 e1 cf b6 	call -1100072 <p33_rx_1byte : 4f8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:562:16
  10ce20:    20 e4 3c 2f 	r12 = [addr(3260)]  <.GCPI320_55 : 10dae0 >
  10ce24:    20 e4 3d 2f 	r13 = [addr(3260)]  <.GCPI320_56 : 10dae4 >
  10ce28:    20 e4 37 36 	r7 = [addr(3288)]  <.GCPI320_64 : 10db04 >
  10ce2c:    20 e4 38 33 	r8 = [addr(3276)]  <.GCPI320_62 : 10dafc >
  10ce30:    20 e4 3e 30 	r14 = [addr(3264)]  <.GCPI320_60 : 10daf4 >
  10ce34:    1f 09       	goto 574 <c_main+0x908 : 10d074 >
  10ce36:    20 f7 a0 02 	r0 = r10 << 2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:476:16
  10ce3a:    a0 cb       	r0 += r12 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:476:16
  10ce3c:    20 e8 09 01 	r9 = [r0 + 4] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:476:16
  10ce40:    80 ef 90 00 	cmp r9, 0			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:477:18
  10ce44:    00 fb 40 11 	ifs (nzcv == 0) goto 552 <c_main+0x904 : 10d070 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:477:18
  10ce48:    80 ef a0 07 	cmp r10, 7
  10ce4c:    00 fb 08 11 	if (nzcv > 0) goto 544 <c_main+0x904 : 10d070 >
  10ce50:    00 e8 90 00 	r0 = b[r9 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:402:52
  10ce54:    00 fc a1 05 	r1 = r10 * 5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:402:52
  10ce58:    40 e7 d0 01 	b[r13 + r1] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:402:44
  10ce5c:    a9 cb       	r1 += r13 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:402:44
  10ce5e:    00 e8 90 40 	r0 = b[r9 + 1] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:403:49
  10ce62:    08 7a       	b[r1 + 1] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:403:41
  10ce64:    00 e8 92 80 	r2 = b[r9 + 2] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:404:49
  10ce68:    0a 7c       	b[r1 + 2] = r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:404:41
  10ce6a:    00 e8 92 c0 	r2 = b[r9 + 3] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:405:49
  10ce6e:    0a 7e       	b[r1 + 3] = r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:405:41
  10ce70:    00 e8 93 01 	r3 = b[r9 + 4] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:406:49
  10ce74:    4b 78       	b[r1 + 4] = r3 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:406:41
  10ce76:    c0 f3 21 0f 	r1 = r2 & (~15) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:411:46
  10ce7a:    2a 99       	cmp r2, 37			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:410:9
  10ce7c:    20 03       	if (nzcv >= 0) {			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:410:9
  10ce7e:    29 81       		r1 = 37 
                               	}			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:410:9
  10ce80:    61 20       	if (r1 == 0) goto 12 <c_main+0x722 : 10ce8e >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:410:9
  10ce82:    81 98       	cmp r1, 16
  10ce84:    04 10       	ifs (nzcv == 0) goto 8 <c_main+0x722 : 10ce8e >
  10ce86:    29 99       	cmp r1, 37
  10ce88:    17 10       	ifs (nzcv == 0) goto 46 <c_main+0x74C : 10ceb8 >
  10ce8a:    01 99       	cmp r1, 32
  10ce8c:    30 11       	ifs (nzcv != 0) goto 96 <c_main+0x782 : 10ceee >
  10ce8e:    c0 f3 24 0f 	r4 = r2 & (~15) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:263:45
  10ce92:    c0 f3 25 f0 	r5 = r2 & (~240) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:264:24
  10ce96:    00 f4 20 f0 	tst r2, 240			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:266:5
  10ce9a:    2e 10       	ifs (nzcv == 0) goto 92 <c_main+0x78C : 10cef8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:266:5
  10ce9c:    84 98       	cmp r4, 16
  10ce9e:    35 10       	ifs (nzcv == 0) goto 106 <c_main+0x79E : 10cf0a >
  10cea0:    04 99       	cmp r4, 32
  10cea2:    00 fb 51 0e 	ifs (nzcv != 0) goto 458 <c_main+0x904 : 10d070 >
  10cea6:    00 80       	r0 = 0 
  10cea8:    20 98       	cmp r0, 4			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:293:9
  10ceaa:    38 18       	if (nzcv > 0) goto 112 <c_main+0x7B0 : 10cf1c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:293:9
  10ceac:    00 e7 e1 00 	r1 = b[r14 + r0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:294:22
  10ceb0:    40 d0       	r0 = r0 + 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:293:48
  10ceb2:    29 ce       	cmp r5, r1			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:294:17
  10ceb4:    f9 11       	ifs (nzcv != 0) goto -14 <c_main+0x73C : 10cea8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:294:17
  10ceb6:    38 08       	goto 112 <c_main+0x7BC : 10cf28 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:294:17
  10ceb8:    32 99       	cmp r2, 38			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:357:5
  10ceba:    00 fb a0 09 	ifs (nzcv == 0) goto 308 <c_main+0x886 : 10cff2 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:357:5
  10cebe:    2a 99       	cmp r2, 37
  10cec0:    00 fb 91 0a 	ifs (nzcv != 0) goto 338 <c_main+0x8AA : 10d016 >
  10cec4:    0d e2 b0 00 	[r11 + 0] |= 8192 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:361:9
  10cec8:    00 e2 b0 04 	[r11 + 0] |= 4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:362:9
  10cecc:    20 e8 b1 00 	r1 = [r11 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:362:9
  10ced0:    00 98       	cmp r0, 0			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:363:13
  10ced2:    00 fb 90 0a 	ifs (nzcv == 0) goto 338 <c_main+0x8BC : 10d028 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:363:13
  10ced6:    00 f3 10 40 	r0 = r1 | 64 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:364:13
  10ceda:    60 e8 b0 00 	[r11 + 0] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:364:13
  10cede:    00 e3 b0 10 	[r11 + 0] &= (~16) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:365:13
  10cee2:    00 ec a0 00 	r0 = r10.b 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:366:13
  10cee6:    fd e1 1f 74 	call -20862 <P33_OR_WKUP_EDGE : 107d6c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:366:13
  10ceea:    44 80       	r4 = 8 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:366:13
  10ceec:    b4 08       	goto 360 <c_main+0x8EA : 10d056 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:366:13
  10ceee:    20 e4 30 06 	r0 = [addr(3096)]  <.GCPI320_65 : 10db08 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:433:9
  10cef2:    db e1 3f 07 	call -302874 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:433:9
  10cef6:    bc 08       	goto 376 <c_main+0x904 : 10d070 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:433:9
  10cef8:    00 80       	r0 = 0 
  10cefa:    78 98       	cmp r0, 15			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:269:9
  10cefc:    18 18       	if (nzcv > 0) goto 48 <c_main+0x7C2 : 10cf2e >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:269:9
  10cefe:    00 e7 71 00 	r1 = b[r7 + r0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:270:22
  10cf02:    40 d0       	r0 = r0 + 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:269:48
  10cf04:    29 ce       	cmp r5, r1			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:270:17
  10cf06:    f9 11       	ifs (nzcv != 0) goto -14 <c_main+0x78E : 10cefa >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:270:17
  10cf08:    18 08       	goto 48 <c_main+0x7CE : 10cf3a >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:270:17
  10cf0a:    00 80       	r0 = 0 
  10cf0c:    10 98       	cmp r0, 2			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:281:9
  10cf0e:    18 18       	if (nzcv > 0) goto 48 <c_main+0x7D4 : 10cf40 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:281:9
  10cf10:    00 e7 81 00 	r1 = b[r8 + r0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:282:22
  10cf14:    40 d0       	r0 = r0 + 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:281:48
  10cf16:    29 ce       	cmp r5, r1			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:282:17
  10cf18:    f9 11       	ifs (nzcv != 0) goto -14 <c_main+0x7A0 : 10cf0c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:282:17
  10cf1a:    18 08       	goto 48 <c_main+0x7E0 : 10cf4c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:282:17
  10cf1c:    20 e4 20 f4 	r0 = [addr(3024)]  <.GCPI320_59 : 10daf0 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:299:9
  10cf20:    21 82       	r1 = 68 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:299:9
  10cf22:    2a c6       	r2 = r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:299:9
  10cf24:    db e1 af 05 	call -302924 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:299:9
  10cf28:    20 e4 30 46 	r0 = [addr(3352)]  <.GCPI320_144 : 10dc44 >
  10cf2c:    11 08       	goto 34 <c_main+0x7E4 : 10cf50 >
  10cf2e:    20 e4 20 f4 	r0 = [addr(3024)]  <.GCPI320_63 : 10db00 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:275:9
  10cf32:    09 82       	r1 = 65 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:275:9
  10cf34:    2a c6       	r2 = r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:275:9
  10cf36:    db e1 1f 05 	call -302942 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:275:9
  10cf3a:    2a ea 00 10 	r0 = 589824 
  10cf3e:    08 08       	goto 16 <c_main+0x7E4 : 10cf50 >
  10cf40:    20 e4 20 ed 	r0 = [addr(2996)]  <.GCPI320_61 : 10daf8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:287:9
  10cf44:    11 82       	r1 = 66 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:287:9
  10cf46:    2a c6       	r2 = r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:287:9
  10cf48:    db e1 8f 04 	call -302960 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:287:9
  10cf4c:    20 e4 30 3c 	r0 = [addr(3312)]  <.GCPI320_143 : 10dc40 >
  10cf50:    81 48       	r1 = [r0 + 8] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:309:15
  10cf52:    00 f1 11 05 	r1 = r1 | setbit(r5) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:309:15
  10cf56:    81 68       	[r0 + 8] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:309:15
  10cf58:    01 4a       	r1 = [r0 + 32] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:310:16
  10cf5a:    00 f1 11 05 	r1 = r1 | setbit(r5) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:310:16
  10cf5e:    01 6a       	[r0 + 32] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:310:16
  10cf60:    09 80       	r1 = 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:309:18
  10cf62:    29 cf       	r1 <<= r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:309:18
  10cf64:    00 e8 92 00 	r2 = b[r9 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:309:18
  10cf68:    00 e8 93 40 	r3 = b[r9 + 1] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:311:15
  10cf6c:    d3 20       	if (r3 == 0) goto 26 <c_main+0x81C : 10cf88 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:311:9
  10cf6e:    72 20       	if (r2 == 0) goto 14 <c_main+0x812 : 10cf7e >
  10cf70:    02 49       	r2 = [r0 + 16] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:313:22
  10cf72:    0a da       	r2 |= r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:313:22
  10cf74:    02 69       	[r0 + 16] = r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:313:22
  10cf76:    42 49       	r2 = [r0 + 20] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:314:22
  10cf78:    c0 f0 21 01 	r1 = r2 & ~r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:314:22
  10cf7c:    41 69       	[r0 + 20] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:314:22
  10cf7e:    00 ec a0 00 	r0 = r10.b 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:316:9
  10cf82:    fd e1 3f 6f 	call -21018 <P33_OR_WKUP_EDGE : 107d6c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:316:9
  10cf86:    0c 08       	goto 24 <c_main+0x834 : 10cfa0 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:316:9
  10cf88:    72 20       	if (r2 == 0) goto 14 <c_main+0x82C : 10cf98 >
  10cf8a:    02 49       	r2 = [r0 + 16] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:319:22
  10cf8c:    c0 f0 22 01 	r2 = r2 & ~r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:319:22
  10cf90:    02 69       	[r0 + 16] = r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:319:22
  10cf92:    42 49       	r2 = [r0 + 20] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:320:22
  10cf94:    11 da       	r1 |= r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:320:22
  10cf96:    41 69       	[r0 + 20] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:320:22
  10cf98:    00 ec a0 00 	r0 = r10.b 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:322:9
  10cf9c:    fd e1 ef 6e 	call -21028 <P33_AND_WKUP_EDGE : 107d7c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:322:9
  10cfa0:    00 ec a6 00 	r6 = r10.b 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:325:5
  10cfa4:    30 c6       	r0 = r6 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:325:5
  10cfa6:    fd e1 1f 6f 	call -21022 <P33_OR_WKUP_CPND : 107d8c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:325:5
  10cfaa:    30 c6       	r0 = r6 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:326:5
  10cfac:    fd e1 6f 6f 	call -21012 <P33_OR_WKUP_EN : 107d9c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:326:5
  10cfb0:    08 80       	r0 = 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:141:1
  10cfb2:    00 f7 00 0a 	r0 = r0 << r10 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:141:1
  10cfb6:    00 e8 91 01 	r1 = b[r9 + 4] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:327:15
  10cfba:    61 20       	if (r1 == 0) goto 12 <c_main+0x85C : 10cfc8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:327:9
  10cfbc:    01 c9       	r1 = r0.b 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:141:1
  10cfbe:    10 ea 95 00 	r0 = 149 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:141:1
  10cfc2:    79 e1 df a7 	call -1100550 <p33_or_1byte : 4c0 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:141:1
  10cfc6:    08 08       	goto 16 <c_main+0x86C : 10cfd8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:141:1
  10cfc8:    11 ea ff 00 	r1 = 255 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:141:1
  10cfcc:    c0 f0 11 00 	r1 = r1 & ~r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:141:1
  10cfd0:    10 ea 95 00 	r0 = 149 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:141:1
  10cfd4:    79 e1 0f ab 	call -1100448 <p33_and_1byte : 538 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:141:1
  10cfd8:    30 c6       	r0 = r6 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:333:5
  10cfda:    21 c6       	r1 = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:333:5
  10cfdc:    2a c6       	r2 = r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:333:5
  10cfde:    fd e1 5f 6e 	call -21046 <P3_PORT_SET : 107dac >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:333:5
  10cfe2:    10 ea aa 00 	r0 = 170 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:335:5
  10cfe6:    01 80       	r1 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:335:5
  10cfe8:    1a 80       	r2 = 3 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:335:5
  10cfea:    03 80       	r3 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:335:5
  10cfec:    79 e1 4f a7 	call -1100568 <P33_CON_SET : 4d8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:335:5
  10cff0:    3f 08       	goto 126 <c_main+0x904 : 10d070 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:335:5
  10cff2:    0c e2 b0 80 	[r11 + 0] |= 16384 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:377:9
  10cff6:    00 e2 b0 08 	[r11 + 0] |= 8 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:378:9
  10cffa:    20 e8 b1 00 	r1 = [r11 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:378:9
  10cffe:    00 22       	if (r0 == 0) goto 64 <c_main+0x8D4 : 10d040 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:379:13
  10d000:    00 f3 10 80 	r0 = r1 | 128 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:380:13
  10d004:    60 e8 b0 00 	[r11 + 0] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:380:13
  10d008:    00 e3 b0 20 	[r11 + 0] &= (~32) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:381:13
  10d00c:    00 ec a0 00 	r0 = r10.b 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:382:13
  10d010:    fd e1 cf 6a 	call -21160 <P33_OR_WKUP_EDGE : 107d6c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:382:13
  10d014:    1f 08       	goto 62 <c_main+0x8E8 : 10d054 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:382:13
  10d016:    da 8e       	r2 += -37 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:391:9
  10d018:    20 e4 20 b3 	r0 = [addr(2764)]  <.GCPI320_57 : 10dae8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:391:9
  10d01c:    20 e4 21 b3 	r1 = [addr(2764)]  <.GCPI320_58 : 10daec >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:391:9
  10d020:    da e1 cf fd 	call -303176 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:391:9
  10d024:    04 80       	r4 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:391:9
  10d026:    17 08       	goto 46 <c_main+0x8EA : 10d056 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:391:9
  10d028:    c0 f3 10 40 	r0 = r1 & (~64) 
  10d02c:    60 e8 b0 00 	[r11 + 0] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:368:13
  10d030:    00 e2 b0 10 	[r11 + 0] |= 16 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:369:13
  10d034:    00 ec a0 00 	r0 = r10.b 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:370:13
  10d038:    fd e1 0f 6a 	call -21184 <P33_AND_WKUP_EDGE : 107d7c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:370:13
  10d03c:    44 80       	r4 = 8 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:370:13
  10d03e:    0b 08       	goto 22 <c_main+0x8EA : 10d056 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:370:13
  10d040:    c0 f3 10 80 	r0 = r1 & (~128) 
  10d044:    60 e8 b0 00 	[r11 + 0] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:384:13
  10d048:    00 e2 b0 20 	[r11 + 0] |= 32 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:385:13
  10d04c:    00 ec a0 00 	r0 = r10.b 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:386:13
  10d050:    fd e1 4f 69 	call -21208 <P33_AND_WKUP_EDGE : 107d7c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:386:13
  10d054:    4c 80       	r4 = 9 
  10d056:    00 ec a5 00 	r5 = r10.b 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:394:5
  10d05a:    28 c6       	r0 = r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:394:5
  10d05c:    fd e1 6f 69 	call -21204 <P33_OR_WKUP_CPND : 107d8c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:394:5
  10d060:    28 c6       	r0 = r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:395:5
  10d062:    fd e1 bf 69 	call -21194 <P33_OR_WKUP_EN : 107d9c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:395:5
  10d066:    28 c6       	r0 = r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:397:5
  10d068:    29 81       	r1 = 37 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:397:5
  10d06a:    22 c6       	r2 = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:397:5
  10d06c:    fd e1 ef 69 	call -21188 <P3_PORT_SET : 107dac >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:397:5
  10d070:    00 ed aa 01 	r10 = r10 + 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:475:42
  10d074:    80 ef a0 08 	cmp r10, 8			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:475:5
  10d078:    ff fb d1 ed 	ifs (nzcv != 0) goto -582 <c_main+0x6CA : 10ce36 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:475:5
  10d07c:    10 ea 92 00 	r0 = 146 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:482:5
  10d080:    11 ea ff 00 	r1 = 255 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:482:5
  10d084:    79 e1 4f a4 	call -1100664 <p33_tx_1byte : 510 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:482:5
  10d088:    05 40       	r5 = [sp] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:482:5
  10d08a:    00 e2 57 10 	[r5 + 28] |= 16 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:489:5
  10d08e:    10 ea af 00 	r0 = 175 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:568:5
  10d092:    01 80       	r1 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:568:5
  10d094:    79 e1 cf a3 	call -1100680 <p33_tx_1byte : 510 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:568:5
  10d098:    20 e4 21 9c 	r1 = [addr(2672)]  <.GCPI320_66 : 10db0c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:574:5
  10d09c:    51 ea 01 00 	r9 = 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:574:5
  10d0a0:    40 80       	r0 = 8 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:574:5
  10d0a2:    0a 80       	r2 = 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:574:5
  10d0a4:    fd e1 5f 6b 	call -21142 <HWI_Install : 107e12 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:574:5
  10d0a8:    47 40       	r7 = [sp+ 4] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/power/power_wakeup.c:574:5
  10d0aa:    f9 e2 7b c0 	[r7 + -20] |= 1572864 			  ## main.c:59:5
  10d0ae:    20 e4 24 98 	r4 = [addr(2656)]  <.GCPI320_67 : 10db10 >			  ## my_malloc.c:52:5
  10d0b2:    20 e4 20 98 	r0 = [addr(2656)]  <.GCPI320_68 : 10db14 >			  ## my_malloc.c:52:5
  10d0b6:    06 d7       	r6 = r0 - r4 			  ## my_malloc.c:52:5
  10d0b8:    72 d0       	r2 = r6 + 1 			  ## my_malloc.c:52:5
  10d0ba:    20 c6       	r0 = r4 			  ## my_malloc.c:52:5
  10d0bc:    01 80       	r1 = 0 			  ## my_malloc.c:52:5
  10d0be:    da e1 df f4 	call -303462 <memset : c2f5c >			  ## my_malloc.c:52:5
  10d0c2:    20 e4 28 5d 	r8 = [addr(2420)]  <.GCPI320_13 : 10da38 >
  10d0c6:    80 c6       	r0 = r8 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:137:12
  10d0c8:    64 e8 04 1a 	[++ r0 = 104] = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:137:12
  10d0cc:    40 e8 09 01 	b[r0 + 4] = r9 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:137:12
  10d0d0:    71 d3       	r1 = r6 + -3 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:139:25
  10d0d2:    81 68       	[r0 + 8] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/malloc/code/MemMang/heap_2.c:139:25
  10d0d4:    da e1 6f f2 	call -303540 <local_irq_disable : c2f24 >			  ## clock.c:175:5
  10d0d8:    f0 e3 7b 20 	[r7 + -20] &= (~32) 			  ## clock.c:176:18
  10d0dc:    08 80       	r0 = 1 			  ## clock.c:177:5
  10d0de:    79 e1 9f 7c 	call -1101934 <delay : 74 >			  ## clock.c:177:5
  10d0e2:    38 4f       	r0 = [r7 + -16] 			  ## clock.c:179:5
  10d0e4:    c8 f3 00 70 	r0 = r0 & (~15728640) 			  ## clock.c:179:5
  10d0e8:    a8 d8       	r0 |= 2097152			  ## clock.c:179:5
  10d0ea:    38 6f       	[r7 + -16] = r0 			  ## clock.c:179:5
  10d0ec:    38 4f       	r0 = [r7 + -16] 			  ## clock.c:180:5
  10d0ee:    ca f3 00 70 	r0 = r0 & (~983040) 			  ## clock.c:180:5
  10d0f2:    90 d8       	r0 |= 262144			  ## clock.c:180:5
  10d0f4:    38 6f       	[r7 + -16] = r0 			  ## clock.c:180:5
  10d0f6:    38 4f       	r0 = [r7 + -16] 			  ## clock.c:182:5
  10d0f8:    c0 f3 00 e0 	r0 = r0 & (~224) 			  ## clock.c:182:5
  10d0fc:    28 d8       	r0 |= 32			  ## clock.c:182:5
  10d0fe:    38 6f       	[r7 + -16] = r0 			  ## clock.c:182:5
  10d100:    38 4f       	r0 = [r7 + -16] 			  ## clock.c:55:22
  10d102:    40 b4       	r0 = r0 >> 20 			  ## clock.c:55:27
  10d104:    00 f4 00 03 	tst r0, 3			  ## clock.c:57:9
  10d108:    09 10       	ifs (nzcv == 0) goto 18 <c_main+0x9B0 : 10d11c >			  ## clock.c:57:9
  10d10a:    80 f3 00 03 	r0 = r0 & 3 			  ## clock.c:55:34
  10d10e:    00 a2       	r0 = r0 << 2 			  ## clock.c:58:17
  10d110:    20 e4 21 81 	r1 = [addr(2564)]  <.GCPI320_69 : 10db18 >			  ## clock.c:58:17
  10d114:    40 d4       	r0 = r0 + r1 			  ## clock.c:58:17
  10d116:    20 e9 09 02 	r9 = [sp+ 8] 			  ## clock.c:58:17
  10d11a:    0d 08       	goto 26 <c_main+0x9CA : 10d136 >			  ## clock.c:58:17
  10d11c:    38 4f       	r0 = [r7 + -16] 			  ## clock.c:60:26
  10d11e:    40 b6       	r0 = r0 >> 22 			  ## clock.c:60:31
  10d120:    00 f4 00 03 	tst r0, 3			  ## clock.c:61:13
  10d124:    20 e9 09 02 	r9 = [sp+ 8] 			  ## clock.c:61:13
  10d128:    1f 10       	ifs (nzcv == 0) goto 62 <c_main+0x9FC : 10d168 >			  ## clock.c:61:13
  10d12a:    80 f3 00 03 	r0 = r0 & 3 			  ## clock.c:60:38
  10d12e:    00 a2       	r0 = r0 << 2 			  ## clock.c:62:21
  10d130:    20 e4 21 7a 	r1 = [addr(2536)]  <.GCPI320_70 : 10db1c >			  ## clock.c:62:21
  10d134:    40 d4       	r0 = r0 + r1 			  ## clock.c:62:21
  10d136:    00 48       	r0 = [r0 + 0] 
  10d138:    70 21       	if (r0 == 0) goto 46 <c_main+0x9FC : 10d168 >
  10d13a:    39 4f       	r1 = [r7 + -16] 			  ## clock.c:69:36
  10d13c:    02 f6 11 02 	r1 = uextra(r1, p:16, l:2) 			  ## clock.c:69:48
  10d140:    20 e4 22 77 	r2 = [addr(2524)]  <.GCPI320_71 : 10db20 >			  ## clock.c:69:18
  10d144:    00 e7 21 01 	r1 = b[r2 + r1] 			  ## clock.c:69:18
  10d148:    3a 4f       	r2 = [r7 + -16] 			  ## clock.c:70:36
  10d14a:    02 f6 22 42 	r2 = uextra(r2, p:18, l:2) 			  ## clock.c:70:48
  10d14e:    20 e4 23 75 	r3 = [addr(2516)]  <.GCPI320_72 : 10db24 >			  ## clock.c:70:18
  10d152:    00 e7 32 02 	r2 = b[r3 + r2] 			  ## clock.c:70:18
  10d156:    11 06       	r1 *= r2 			  ## clock.c:72:29
  10d158:    3a 4f       	r2 = [r7 + -16] 			  ## clock.c:71:28
  10d15a:    00 f6 22 a3 	r2 = uextra(r2, p:5, l:3) 			  ## clock.c:71:39
  10d15e:    52 d0       	r2 = r2 + 1 			  ## clock.c:71:46
  10d160:    11 06       	r1 *= r2 			  ## clock.c:72:38
  10d162:    40 fc 00 01 	r0 = r0 / r1 			  ## clock.c:72:19
  10d166:    05 08       	goto 10 <c_main+0xA06 : 10d172 >
  10d168:    20 e4 20 6f 	r0 = [addr(2492)]  <.GCPI320_73 : 10db28 >			  ## clock.c:66:9
  10d16c:    da e1 6f f3 	call -303508 <xprintf : c2fdc >			  ## clock.c:66:9
  10d170:    00 80       	r0 = 0 			  ## clock.c:66:9
  10d172:    60 e8 80 0d 	[r8 + 52] = r0 			  ## clock.c:184:15
  10d176:    e1 87       	r1 = -4 			  ## clock.c:184:15
  10d178:    0a 80       	r2 = 1 
  10d17a:    20 e4 24 b3 	r4 = [addr(2764)]  <.GCPI320_145 : 10dc48 >			  ## clock.c:189:13
  10d17e:    d3 d3       	r3 = r2 + -1 			  ## clock.c:187:23
  10d180:    3b 98       	cmp r3, 7			  ## clock.c:187:5
  10d182:    0b 18       	if (nzcv > 0) goto 22 <c_main+0xA2E : 10d19a >			  ## clock.c:187:5
  10d184:    40 fc 03 02 	r3 = r0 / r2 			  ## clock.c:188:27
  10d188:    52 d0       	r2 = r2 + 1 			  ## clock.c:189:13
  10d18a:    09 d1       	r1 = r1 + 4 			  ## clock.c:189:13
  10d18c:    1c ce       	cmp r3, r4			  ## clock.c:189:13
  10d18e:    f7 18       	if (nzcv > 0) goto -18 <c_main+0xA12 : 10d17e >			  ## clock.c:189:13
  10d190:    48 a2       	r0 = r1 >> 2 			  ## clock.c:190:13
  10d192:    39 4f       	r1 = [r7 + -16] 			  ## clock.c:190:13
  10d194:    40 f6 01 43 	r1 <= insert(r0, p:2, l:3) 			  ## clock.c:190:13
  10d198:    39 6f       	[r7 + -16] = r1 			  ## clock.c:190:13
  10d19a:    f0 e2 7b 18 	[r7 + -20] |= 24 			  ## clock.c:194:5
  10d19e:    f0 e2 7b 20 	[r7 + -20] |= 32 			  ## clock.c:195:18
  10d1a2:    50 80       	r0 = 10 			  ## clock.c:196:5
  10d1a4:    79 e1 6f 76 	call -1102132 <delay : 74 >			  ## clock.c:196:5
  10d1a8:    79 e1 8f e4 	call -1098608 <sfc_max_baud : e3c >			  ## clock.c:198:16
  10d1ac:    42 c6       	r10 = r0 			  ## clock.c:198:16
  10d1ae:    79 e1 5f 96 	call -1101110 <sfc_baud_set : 47c >			  ## clock.c:199:5
  10d1b2:    da e1 5f eb 	call -303766 <local_irq_enable : c2f20 >			  ## clock.c:201:5
  10d1b6:    00 80       	r0 = 0 			  ## clock.c:201:5
  10d1b8:    a8 6e       	[r5 + -24] = r0 			  ## clock.c:455:18
  10d1ba:    f0 e2 5a 06 	[r5 + -24] |= 6 			  ## clock.c:456:18
  10d1be:    f8 48       	r0 = [r7 + 12] 			  ## clock.c:458:19
  10d1c0:    84 f3 00 60 	r0 = r0 & 3758096384 			  ## clock.c:458:39
  10d1c4:    04 ef 00 00 	cmp r0, 2147483648			  ## clock.c:458:9
  10d1c8:    00 fb c1 0a 	ifs (nzcv != 0) goto 344 <c_main+0xBB8 : 10d324 >			  ## clock.c:458:9
  10d1cc:    20 e4 20 9f 	r0 = [addr(2684)]  <.GCPI320_146 : 10dc4c >			  ## clock.c:656:19
  10d1d0:    28 6e       	[r5 + -32] = r0 			  ## clock.c:656:19
  10d1d2:    f0 e2 58 40 	[r5 + -32] |= 64 			  ## clock.c:657:19
  10d1d6:    f0 e2 58 01 	[r5 + -32] |= 1 			  ## clock.c:658:19
  10d1da:    28 4e       	r0 = [r5 + -32] 			  ## clock.c:659:24
  10d1dc:    80 c9       	r0 = r0.b (s) 			  ## clock.c:659:12
  10d1de:    f8 9f       	cmp r0, -1			  ## clock.c:659:5
  10d1e0:    fc 1c       	ifs (nzcv > 0) goto -8 <c_main+0xA6E : 10d1da >			  ## clock.c:659:5
  10d1e2:    6c 4e       	r4 = [r5 + -28] 			  ## clock.c:660:25
  10d1e4:    f0 e2 58 40 	[r5 + -32] |= 64 			  ## clock.c:661:19
  10d1e8:    f0 e3 58 01 	[r5 + -32] &= (~1) 			  ## clock.c:662:19
  10d1ec:    38 4f       	r0 = [r7 + -16] 			  ## clock.c:664:26
  10d1ee:    20 e8 81 0d 	r1 = [r8 + 52] 			  ## clock.c:170:12
  10d1f2:    00 f6 00 a3 	r0 = uextra(r0, p:5, l:3) 			  ## clock.c:664:37
  10d1f6:    40 d0       	r0 = r0 + 1 			  ## clock.c:664:44
  10d1f8:    08 06       	r0 *= r1 			  ## clock.c:665:35
  10d1fa:    03 e1 f0 f8 	call 32542 <__floatunsidf : 11511c >			  ## clock.c:666:33
  10d1fe:    20 e4 23 94 	r3 = [addr(2640)]  <.GCPI320_147 : 10dc50 >			  ## clock.c:666:41
  10d202:    02 80       	r2 = 0 			  ## clock.c:666:41
  10d204:    03 e1 e0 fd 	call 32700 <__muldf3 : 1151c4 >			  ## clock.c:666:41
  10d208:    04 e1 c0 1e 	call 33752 <__truncdfsf2 : 1155e4 >			  ## clock.c:666:25
  10d20c:    06 c6       	r6 = r0 			  ## clock.c:666:25
  10d20e:    20 c6       	r0 = r4 			  ## clock.c:666:56
  10d210:    03 e1 c0 f9 	call 32568 <__floatunsisf : 11514c >			  ## clock.c:666:56
  10d214:    31 c6       	r1 = r6 			  ## clock.c:666:54
  10d216:    04 e1 70 14 	call 33422 <__mulsf3 : 1154a8 >			  ## clock.c:666:54
  10d21a:    03 e1 10 f3 	call 32354 <__fixunssfsi : 115080 >			  ## clock.c:666:19
  10d21e:    06 c6       	r6 = r0 			  ## clock.c:666:19
  10d220:    20 e4 20 49 	r0 = [addr(2340)]  <.GCPI320_81 : 10db48 >			  ## clock.c:667:5
  10d224:    21 c6       	r1 = r4 			  ## clock.c:667:5
  10d226:    32 c6       	r2 = r6 			  ## clock.c:667:5
  10d228:    da e1 8f ed 	call -303696 <xprintf : c2fdc >			  ## clock.c:667:5
  10d22c:    a8 80       	r0 = 21 			  ## clock.c:669:39
  10d22e:    40 fc 60 00 	r0 = r6 / r0 			  ## clock.c:669:39
  10d232:    20 e4 21 7f 	r1 = [addr(2556)]  <.GCPI320_139 : 10dc30 >			  ## clock.c:669:28
  10d236:    40 fc 10 00 	r0 = r1 / r0 			  ## clock.c:669:28
  10d23a:    81 d3       	r1 = r0 + -2 			  ## clock.c:669:54
  10d23c:    20 e4 20 3b 	r0 = [addr(2284)]  <.GCPI320_74 : 10db2c >			  ## clock.c:669:16
  10d240:    01 68       	[r0 + 0] = r1 			  ## clock.c:669:16
  10d242:    20 e4 20 42 	r0 = [addr(2312)]  <.GCPI320_82 : 10db4c >			  ## clock.c:460:9
  10d246:    da e1 9f ec 	call -303726 <xprintf : c2fdc >			  ## clock.c:460:9
  10d24a:    38 49       	r0 = [r7 + 16] 			  ## clock.c:461:31
  10d24c:    11 ea ff 0f 	r1 = 4095 			  ## clock.c:461:36
  10d250:    88 da       	r0 &= r1 			  ## clock.c:461:36
  10d252:    80 d0       	r0 = r0 + 2 			  ## clock.c:461:45
  10d254:    20 e4 21 38 	r1 = [addr(2272)]  <.GCPI320_77 : 10db38 >			  ## clock.c:461:20
  10d258:    08 68       	[r1 + 0] = r0 			  ## clock.c:461:20
  10d25a:    fd e1 7f 60 	call -21490 <lrc_trace_trim : 107e6c >			  ## clock.c:204:5
  10d25e:    20 e8 81 0c 	r1 = [r8 + 48] 			  ## clock.c:206:5
  10d262:    20 e4 20 3b 	r0 = [addr(2284)]  <.GCPI320_83 : 10db50 >			  ## clock.c:206:5
  10d266:    da e1 9f eb 	call -303758 <xprintf : c2fdc >			  ## clock.c:206:5
  10d26a:    00 ed a0 01 	r0 = r10 + 1 			  ## clock.c:207:5
  10d26e:    20 e8 81 0c 	r1 = [r8 + 48] 			  ## clock.c:207:5
  10d272:    40 fc 11 00 	r1 = r1 / r0 			  ## clock.c:207:5
  10d276:    20 e4 20 37 	r0 = [addr(2268)]  <.GCPI320_84 : 10db54 >			  ## clock.c:207:5
  10d27a:    da e1 ff ea 	call -303778 <xprintf : c2fdc >			  ## clock.c:207:5
  10d27e:    20 e8 81 0d 	r1 = [r8 + 52] 			  ## clock.c:208:5
  10d282:    20 e4 20 35 	r0 = [addr(2260)]  <.GCPI320_85 : 10db58 >			  ## clock.c:208:5
  10d286:    da e1 9f ea 	call -303790 <xprintf : c2fdc >			  ## clock.c:208:5
  10d28a:    20 e4 10 e5 	r0 = [addr(1940)]  <.GCPI320_7 : 10da20 >			  ## clock.c:254:10
  10d28e:    20 e4 11 e2 	r1 = [addr(1928)]  <.GCPI320_5 : 10da18 >			  ## clock.c:254:10
  10d292:    da e1 5f e6 	call -303926 <strcmp : c2f60 >			  ## clock.c:254:10
  10d296:    00 98       	cmp r0, 0
  10d298:    60 10       	ifs (nzcv == 0) goto 192 <c_main+0xBEE : 10d35a >
  10d29a:    20 e4 10 e1 	r0 = [addr(1924)]  <.GCPI320_7 : 10da20 >			  ## clock.c:257:10
  10d29e:    20 e4 11 dd 	r1 = [addr(1908)]  <.GCPI320_4 : 10da14 >			  ## clock.c:257:10
  10d2a2:    da e1 df e5 	call -303942 <strcmp : c2f60 >			  ## clock.c:257:10
  10d2a6:    20 e4 24 5f 	r4 = [addr(2428)]  <.GCPI320_136 : 10dc24 >			  ## clock.c:257:10
  10d2aa:    00 98       	cmp r0, 0			  ## clock.c:257:10
  10d2ac:    7c 10       	ifs (nzcv == 0) goto 248 <c_main+0xC3A : 10d3a6 >			  ## clock.c:257:10
  10d2ae:    20 e4 10 dc 	r0 = [addr(1904)]  <.GCPI320_7 : 10da20 >			  ## clock.c:260:10
  10d2b2:    20 e4 11 da 	r1 = [addr(1896)]  <.GCPI320_6 : 10da1c >			  ## clock.c:260:10
  10d2b6:    da e1 3f e5 	call -303962 <strcmp : c2f60 >			  ## clock.c:260:10
  10d2ba:    00 98       	cmp r0, 0			  ## clock.c:260:10
  10d2bc:    74 10       	ifs (nzcv == 0) goto 232 <c_main+0xC3A : 10d3a6 >			  ## clock.c:260:10
  10d2be:    20 e4 10 d8 	r0 = [addr(1888)]  <.GCPI320_7 : 10da20 >			  ## clock.c:263:10
  10d2c2:    01 c6       	r1 = r0 			  ## clock.c:263:10
  10d2c4:    da e1 cf e4 	call -303976 <strcmp : c2f60 >			  ## clock.c:263:10
  10d2c8:    00 98       	cmp r0, 0			  ## clock.c:263:10
  10d2ca:    6a 10       	ifs (nzcv == 0) goto 212 <c_main+0xC34 : 10d3a0 >			  ## clock.c:263:10
  10d2cc:    20 e4 10 d4 	r0 = [addr(1872)]  <.GCPI320_7 : 10da20 >			  ## clock.c:266:10
  10d2d0:    20 e4 11 d4 	r1 = [addr(1872)]  <.GCPI320_8 : 10da24 >			  ## clock.c:266:10
  10d2d4:    da e1 4f e4 	call -303992 <strcmp : c2f60 >			  ## clock.c:266:10
  10d2d8:    00 98       	cmp r0, 0			  ## clock.c:266:10
  10d2da:    62 10       	ifs (nzcv == 0) goto 196 <c_main+0xC34 : 10d3a0 >			  ## clock.c:266:10
  10d2dc:    20 e4 10 d0 	r0 = [addr(1856)]  <.GCPI320_7 : 10da20 >			  ## clock.c:269:10
  10d2e0:    20 e4 11 d1 	r1 = [addr(1860)]  <.GCPI320_9 : 10da28 >			  ## clock.c:269:10
  10d2e4:    da e1 cf e3 	call -304008 <strcmp : c2f60 >			  ## clock.c:269:10
  10d2e8:    00 98       	cmp r0, 0			  ## clock.c:269:10
  10d2ea:    5a 10       	ifs (nzcv == 0) goto 180 <c_main+0xC34 : 10d3a0 >			  ## clock.c:269:10
  10d2ec:    20 e4 10 cc 	r0 = [addr(1840)]  <.GCPI320_7 : 10da20 >			  ## clock.c:272:10
  10d2f0:    20 e4 11 ce 	r1 = [addr(1848)]  <.GCPI320_10 : 10da2c >			  ## clock.c:272:10
  10d2f4:    da e1 4f e3 	call -304024 <strcmp : c2f60 >			  ## clock.c:272:10
  10d2f8:    00 98       	cmp r0, 0			  ## clock.c:272:10
  10d2fa:    52 10       	ifs (nzcv == 0) goto 164 <c_main+0xC34 : 10d3a0 >			  ## clock.c:272:10
  10d2fc:    20 e4 10 c8 	r0 = [addr(1824)]  <.GCPI320_7 : 10da20 >			  ## clock.c:275:10
  10d300:    20 e4 11 cb 	r1 = [addr(1836)]  <.GCPI320_11 : 10da30 >			  ## clock.c:275:10
  10d304:    da e1 cf e2 	call -304040 <strcmp : c2f60 >			  ## clock.c:275:10
  10d308:    00 98       	cmp r0, 0			  ## clock.c:275:10
  10d30a:    4a 10       	ifs (nzcv == 0) goto 148 <c_main+0xC34 : 10d3a0 >			  ## clock.c:275:10
  10d30c:    20 e4 10 c4 	r0 = [addr(1808)]  <.GCPI320_7 : 10da20 >			  ## clock.c:278:10
  10d310:    20 e4 11 c8 	r1 = [addr(1824)]  <.GCPI320_12 : 10da34 >			  ## clock.c:278:10
  10d314:    da e1 4f e2 	call -304056 <strcmp : c2f60 >			  ## clock.c:278:10
  10d318:    04 80       	r4 = 0 			  ## clock.c:278:10
  10d31a:    00 98       	cmp r0, 0			  ## clock.c:278:10
  10d31c:    44 11       	ifs (nzcv != 0) goto 136 <c_main+0xC3A : 10d3a6 >			  ## clock.c:278:10
  10d31e:    fd e1 df 40 	call -22502 <lrc_clk_get : 107b3c >			  ## clock.c:279:16
  10d322:    40 08       	goto 128 <c_main+0xC38 : 10d3a4 >			  ## clock.c:279:16
  10d324:    f8 48       	r0 = [r7 + 12] 			  ## clock.c:463:26
  10d326:    84 f3 00 60 	r0 = r0 & 3758096384 			  ## clock.c:463:46
  10d32a:    04 ef 00 c0 	cmp r0, 1610612736			  ## clock.c:463:16
  10d32e:    03 03       	ifs (nzcv == 0) {			  ## clock.c:464:9
  10d330:    20 e4 10 fe 		r0 = [addr(2040)]  <.GCPI320_74 : 10db2c >			  ## clock.c:464:9
  10d334:    01 48       		r1 = [r0 + 0] 			  ## clock.c:464:9
  10d336:    20 e4 10 fe 		r0 = [addr(2040)]  <.GCPI320_75 : 10db30 >			  ## clock.c:464:9
  10d33a:    da e1 ff e4 		call -303970
                               	} <xprintf : c2fdc >			  ## clock.c:464:9
  10d33e:    fd e1 ef 4b 	call -22148 <LRC_CLK_EN : 107cbe >			  ## clock.c:468:5
  10d342:    00 80       	r0 = 0 			  ## clock.c:469:23
  10d344:    fd e1 0f 49 	call -22240 <p33_rd_page : 107c68 >			  ## clock.c:469:23
  10d348:    05 c6       	r5 = r0 			  ## clock.c:469:23
  10d34a:    e8 c9       	r0 = r5.l (s) 			  ## clock.c:470:23
  10d34c:    00 98       	cmp r0, 0			  ## clock.c:470:9
  10d34e:    08 1b       	ifs (nzcv < 0) goto 16 <c_main+0xBF4 : 10d360 >			  ## clock.c:470:9
  10d350:    20 e4 10 f8 	r0 = [addr(2016)]  <.GCPI320_76 : 10db34 >			  ## clock.c:471:9
  10d354:    da e1 2f e4 	call -303996 <xprintf : c2fdc >			  ## clock.c:471:9
  10d358:    ff 0f       	goto -2 <c_main+0xBEC : 10d358 >			  ## clock.c:472:9
  10d35a:    20 e8 84 0d 	r4 = [r8 + 52] 			  ## clock.c:170:12
  10d35e:    23 08       	goto 70 <c_main+0xC3A : 10d3a6 >			  ## clock.c:170:12
  10d360:    08 80       	r0 = 1 			  ## clock.c:474:23
  10d362:    fd e1 1f 48 	call -22270 <p33_rd_page : 107c68 >			  ## clock.c:474:23
  10d366:    f8 9f       	cmp r0, -1			  ## clock.c:475:22
  10d368:    00 fb c0 2c 	ifs (nzcv == 0) goto 1432 <c_main+0x1198 : 10d904 >			  ## clock.c:475:22
  10d36c:    02 f6 51 08 	r1 = uextra(r5, p:16, l:8) 			  ## clock.c:479:39
  10d370:    42 b1       	r2 = r0 >> 17 			  ## clock.c:480:9
  10d372:    8f f3 22 80 	r2 = r2 & 256 			  ## clock.c:480:9
  10d376:    11 da       	r1 |= r2 			  ## clock.c:480:9
  10d378:    8a dc       	r2 = -r1 			  ## clock.c:483:9
  10d37a:    06 f4 00 80 	tst r0, 67108864			  ## clock.c:483:9
  10d37e:    00 03       	ifs (nzcv == 0) {			  ## clock.c:483:9
  10d380:    0a c6       		r2 = r1 
                               	}			  ## clock.c:483:9
  10d382:    07 ed 20 53 	r0 = r2 + 1875 			  ## clock.c:483:9
  10d386:    20 e4 15 ec 	r5 = [addr(1968)]  <.GCPI320_77 : 10db38 >
  10d38a:    28 68       	[r5 + 0] = r0 
  10d38c:    20 e4 10 eb 	r0 = [addr(1964)]  <.GCPI320_78 : 10db3c >			  ## clock.c:488:5
  10d390:    da e1 4f e2 	call -304056 <xprintf : c2fdc >			  ## clock.c:488:5
  10d394:    29 48       	r1 = [r5 + 0] 			  ## clock.c:489:5
  10d396:    20 e4 10 ea 	r0 = [addr(1960)]  <.GCPI320_79 : 10db40 >			  ## clock.c:489:5
  10d39a:    da e1 ff e1 	call -304066 <xprintf : c2fdc >			  ## clock.c:489:5
  10d39e:    5d 0f       	goto -326 <c_main+0xAEE : 10d25a >			  ## clock.c:489:5
  10d3a0:    fd e1 ef 3b 	call -22660 <lsb_clk_get : 107b20 >
  10d3a4:    04 c6       	r4 = r0 
  10d3a6:    20 e4 10 ed 	r0 = [addr(1972)]  <.GCPI320_86 : 10db5c >			  ## clock.c:209:5
  10d3aa:    21 c6       	r1 = r4 			  ## clock.c:209:5
  10d3ac:    da e1 6f e1 	call -304084 <xprintf : c2fdc >			  ## clock.c:209:5
  10d3b0:    08 80       	r0 = 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/efuse_trim_value/code/sh54/efuse_trim_value.c:15:17
  10d3b2:    fd e1 9f 45 	call -22350 <p33_rd_page : 107c68 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/efuse_trim_value/code/sh54/efuse_trim_value.c:15:17
  10d3b6:    04 c6       	r4 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/efuse_trim_value/code/sh54/efuse_trim_value.c:15:17
  10d3b8:    da e1 4f db 	call -304280 <local_irq_disable : c2f24 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/efuse_trim_value/code/sh54/efuse_trim_value.c:16:5
  10d3bc:    20 e4 16 e8 	r6 = [addr(1952)]  <.GCPI320_87 : 10db60 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/efuse_trim_value/code/sh54/efuse_trim_value.c:17:26
  10d3c0:    f0 55       	r0 = h[r6 + 30] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/efuse_trim_value/code/sh54/efuse_trim_value.c:17:26
  10d3c2:    11 ea e0 ff 	r1 = 65504 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/efuse_trim_value/code/sh54/efuse_trim_value.c:17:26
  10d3c6:    88 da       	r0 &= r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/efuse_trim_value/code/sh54/efuse_trim_value.c:17:26
  10d3c8:    61 bb       	r1 = r4 >> 27 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/efuse_trim_value/code/sh54/efuse_trim_value.c:18:36
  10d3ca:    08 da       	r0 |= r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/efuse_trim_value/code/sh54/efuse_trim_value.c:18:26
  10d3cc:    f0 75       	h[r6 + 30] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/efuse_trim_value/code/sh54/efuse_trim_value.c:18:26
  10d3ce:    da e1 7f da 	call -304306 <local_irq_enable : c2f20 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/efuse_trim_value/code/sh54/efuse_trim_value.c:19:5
  10d3d2:    da e1 7f da 	call -304306 <local_irq_disable : c2f24 >			  ## msg.c:64:5
  10d3d6:    00 80       	r0 = 0 
  10d3d8:    01 80       	r1 = 0 
  10d3da:    05 08       	goto 10 <c_main+0xC7A : 10d3e6 >
  10d3dc:    00 ee 82 01 	r2 = r8 + r1 			  ## msg.c:66:22
  10d3e0:    60 e8 20 22 	[r2 + 136] = r0 			  ## msg.c:66:22
  10d3e4:    09 d1       	r1 = r1 + 4 			  ## msg.c:65:5
  10d3e6:    41 98       	cmp r1, 8			  ## msg.c:65:5
  10d3e8:    f9 11       	ifs (nzcv != 0) goto -14 <c_main+0xC70 : 10d3dc >			  ## msg.c:65:5
  10d3ea:    da e1 9f d9 	call -304334 <local_irq_enable : c2f20 >			  ## msg.c:68:5
  10d3ee:    20 e4 1a dd 	r10 = [addr(1908)]  <.GCPI320_88 : 10db64 >			  ## msg.c:223:5
  10d3f2:    00 ed a4 44 	r4 = r10 + 68 			  ## msg.c:223:5
  10d3f6:    20 e4 11 dc 	r1 = [addr(1904)]  <.GCPI320_89 : 10db68 >			  ## msg.c:223:5
  10d3fa:    20 c6       	r0 = r4 			  ## msg.c:223:5
  10d3fc:    12 ea 00 02 	r2 = 512 			  ## msg.c:223:5
  10d400:    da e1 8f dc 	call -304240 <cbuf_init : c2f94 >			  ## msg.c:223:5
  10d404:    20 c6       	r0 = r4 			  ## msg.c:224:5
  10d406:    da e1 7f dc 	call -304242 <cbuf_clear : c2f98 >			  ## msg.c:224:5
  10d40a:    20 e4 10 85 	r0 = [addr(1556)]  <.GCPI320_7 : 10da20 >			  ## clock.c:254:10
  10d40e:    20 e4 11 82 	r1 = [addr(1544)]  <.GCPI320_5 : 10da18 >			  ## clock.c:254:10
  10d412:    da e1 5f da 	call -304310 <strcmp : c2f60 >			  ## clock.c:254:10
  10d416:    d0 23       	if (r0 == 0) goto 122 <c_main+0xD26 : 10d492 >
  10d418:    20 e4 10 81 	r0 = [addr(1540)]  <.GCPI320_7 : 10da20 >			  ## clock.c:257:10
  10d41c:    20 e4 11 7d 	r1 = [addr(1524)]  <.GCPI320_4 : 10da14 >			  ## clock.c:257:10
  10d420:    da e1 ef d9 	call -304324 <strcmp : c2f60 >			  ## clock.c:257:10
  10d424:    20 e4 14 ff 	r4 = [addr(2044)]  <.GCPI320_136 : 10dc24 >			  ## clock.c:257:10
  10d428:    a0 23       	if (r0 == 0) goto 116 <c_main+0xD32 : 10d49e >			  ## clock.c:257:10
  10d42a:    20 e4 10 7d 	r0 = [addr(1524)]  <.GCPI320_7 : 10da20 >			  ## clock.c:260:10
  10d42e:    20 e4 11 7b 	r1 = [addr(1516)]  <.GCPI320_6 : 10da1c >			  ## clock.c:260:10
  10d432:    da e1 5f d9 	call -304342 <strcmp : c2f60 >			  ## clock.c:260:10
  10d436:    30 23       	if (r0 == 0) goto 102 <c_main+0xD32 : 10d49e >			  ## clock.c:260:10
  10d438:    20 e4 10 79 	r0 = [addr(1508)]  <.GCPI320_7 : 10da20 >			  ## clock.c:263:10
  10d43c:    01 c6       	r1 = r0 			  ## clock.c:263:10
  10d43e:    da e1 ff d8 	call -304354 <strcmp : c2f60 >			  ## clock.c:263:10
  10d442:    a0 22       	if (r0 == 0) goto 84 <c_main+0xD2C : 10d498 >			  ## clock.c:263:10
  10d444:    20 e4 10 76 	r0 = [addr(1496)]  <.GCPI320_7 : 10da20 >			  ## clock.c:266:10
  10d448:    20 e4 11 76 	r1 = [addr(1496)]  <.GCPI320_8 : 10da24 >			  ## clock.c:266:10
  10d44c:    da e1 8f d8 	call -304368 <strcmp : c2f60 >			  ## clock.c:266:10
  10d450:    30 22       	if (r0 == 0) goto 70 <c_main+0xD2C : 10d498 >			  ## clock.c:266:10
  10d452:    20 e4 10 73 	r0 = [addr(1484)]  <.GCPI320_7 : 10da20 >			  ## clock.c:269:10
  10d456:    20 e4 11 74 	r1 = [addr(1488)]  <.GCPI320_9 : 10da28 >			  ## clock.c:269:10
  10d45a:    da e1 1f d8 	call -304382 <strcmp : c2f60 >			  ## clock.c:269:10
  10d45e:    c0 21       	if (r0 == 0) goto 56 <c_main+0xD2C : 10d498 >			  ## clock.c:269:10
  10d460:    20 e4 10 6f 	r0 = [addr(1468)]  <.GCPI320_7 : 10da20 >			  ## clock.c:272:10
  10d464:    20 e4 11 71 	r1 = [addr(1476)]  <.GCPI320_10 : 10da2c >			  ## clock.c:272:10
  10d468:    da e1 af d7 	call -304396 <strcmp : c2f60 >			  ## clock.c:272:10
  10d46c:    50 21       	if (r0 == 0) goto 42 <c_main+0xD2C : 10d498 >			  ## clock.c:272:10
  10d46e:    20 e4 10 6c 	r0 = [addr(1456)]  <.GCPI320_7 : 10da20 >			  ## clock.c:275:10
  10d472:    20 e4 11 6f 	r1 = [addr(1468)]  <.GCPI320_11 : 10da30 >			  ## clock.c:275:10
  10d476:    da e1 3f d7 	call -304410 <strcmp : c2f60 >			  ## clock.c:275:10
  10d47a:    e0 20       	if (r0 == 0) goto 28 <c_main+0xD2C : 10d498 >			  ## clock.c:275:10
  10d47c:    20 e4 10 68 	r0 = [addr(1440)]  <.GCPI320_7 : 10da20 >			  ## clock.c:278:10
  10d480:    20 e4 11 6c 	r1 = [addr(1456)]  <.GCPI320_12 : 10da34 >			  ## clock.c:278:10
  10d484:    da e1 cf d6 	call -304424 <strcmp : c2f60 >			  ## clock.c:278:10
  10d488:    04 80       	r4 = 0 			  ## clock.c:278:10
  10d48a:    98 20       	if (r0 != 0) goto 18 <c_main+0xD32 : 10d49e >			  ## clock.c:278:10
  10d48c:    fd e1 6f 35 	call -22868 <lrc_clk_get : 107b3c >			  ## clock.c:279:16
  10d490:    05 08       	goto 10 <c_main+0xD30 : 10d49c >			  ## clock.c:279:16
  10d492:    20 e8 84 0d 	r4 = [r8 + 52] 			  ## clock.c:170:12
  10d496:    03 08       	goto 6 <c_main+0xD32 : 10d49e >			  ## clock.c:170:12
  10d498:    fd e1 2f 34 	call -22908 <lsb_clk_get : 107b20 >
  10d49c:    04 c6       	r4 = r0 
  10d49e:    00 80       	r0 = 0 
  10d4a0:    20 e4 11 b2 	r1 = [addr(1736)]  <.GCPI320_90 : 10db6c >
  10d4a4:    12 ea ff ff 	r2 = 65535 
  10d4a8:    03 80       	r3 = 0 
  10d4aa:    05 08       	goto 10 <c_main+0xD4A : 10d4b6 >
  10d4ac:    40 e7 10 03 	b[r1 + r3] = r0 			  ## adc_drv.c:335:24
  10d4b0:    cd d4       	r5 = r1 + r3 			  ## adc_drv.c:335:24
  10d4b2:    2a 74       	h[r5 + 2] = r2 			  ## adc_drv.c:336:27
  10d4b4:    1b d1       	r3 = r3 + 4 			  ## adc_drv.c:334:5
  10d4b6:    c3 9a       	cmp r3, 88			  ## adc_drv.c:334:5
  10d4b8:    f9 11       	ifs (nzcv != 0) goto -14 <c_main+0xD40 : 10d4ac >			  ## adc_drv.c:334:5
  10d4ba:    20 e4 15 e6 	r5 = [addr(1944)]  <.GCPI320_148 : 10dc54 >
  10d4be:    00 80       	r0 = 0 
  10d4c0:    28 68       	[r5 + 0] = r0 			  ## adc_drv.c:339:19
  10d4c2:    20 e4 11 ab 	r1 = [addr(1708)]  <.GCPI320_91 : 10db70 >
  10d4c6:    00 80       	r0 = 0 
  10d4c8:    07 80       	r7 = 0 
  10d4ca:    20 e4 13 d7 	r3 = [addr(1884)]  <.GCPI320_137 : 10dc28 >			  ## adc_drv.c:342:13
  10d4ce:    08 08       	goto 16 <c_main+0xD74 : 10d4e0 >			  ## adc_drv.c:342:13
  10d4d0:    00 e7 12 07 	r2 = b[r1 + r7] 			  ## adc_drv.c:342:19
  10d4d4:    c0 fc 42 02 	r2 = r4 / r2 (s) 			  ## adc_drv.c:342:17
  10d4d8:    13 ce       	cmp r2, r3			  ## adc_drv.c:342:13
  10d4da:    06 1d       	ifs (nzcv <= 0) goto 12 <c_main+0xD7C : 10d4e8 >			  ## adc_drv.c:342:13
  10d4dc:    40 d0       	r0 = r0 + 1 			  ## adc_drv.c:341:5
  10d4de:    7f d0       	r7 = r7 + 1 			  ## adc_drv.c:341:72
  10d4e0:    3f 98       	cmp r7, 7			  ## adc_drv.c:341:5
  10d4e2:    f6 19       	if (nzcv <= 0) goto -20 <c_main+0xD64 : 10d4d0 >			  ## adc_drv.c:341:5
  10d4e4:    07 80       	r7 = 0 
  10d4e6:    02 08       	goto 4 <c_main+0xD80 : 10d4ec >
  10d4e8:    40 e8 80 41 	b[r8 + 5] = r0 			  ## adc_drv.c:343:21
  10d4ec:    78 80       	r0 = 15 			  ## adc_drv.c:349:5
  10d4ee:    fd e1 bf 4f 	call -22026 <adc_add_sample_ch : 107ee8 >			  ## adc_drv.c:349:5
  10d4f2:    20 e4 11 a0 	r1 = [addr(1664)]  <.GCPI320_92 : 10db74 >			  ## adc_drv.c:351:5
  10d4f6:    78 80       	r0 = 15 			  ## adc_drv.c:351:5
  10d4f8:    12 80       	r2 = 2 			  ## adc_drv.c:351:5
  10d4fa:    fd e1 af 48 	call -22252 <HWI_Install : 107e12 >			  ## adc_drv.c:351:5
  10d4fe:    2f 68       	[r5 + 0] = r7 			  ## adc_drv.c:352:19
  10d500:    08 80       	r0 = 1 			  ## adc_drv.c:352:19
  10d502:    40 e8 80 0a 	b[r8 + 40] = r0 			  ## adc_drv.c:352:19
  10d506:    88 80       	r0 = 17 			  ## app_power_mg.c:19:14
  10d508:    79 e1 6f 7f 	call -1101844 <p33_rx_1byte : 4f8 >			  ## app_power_mg.c:19:14
  10d50c:    00 f6 00 63 	r0 = uextra(r0, p:3, l:3) 			  ## app_power_mg.c:20:48
  10d510:    00 fc 00 64 	r0 = r0 * 100 			  ## app_power_mg.c:20:34
  10d514:    07 ed 00 d0 	r0 = r0 + 2000 			  ## app_power_mg.c:21:39
  10d518:    50 e8 80 03 	h[r8 + 12] = r0 			  ## app_power_mg.c:21:25
  10d51c:    a8 80       	r0 = 21 			  ## app_power_mg.c:38:5
  10d51e:    fd e1 3f 4e 	call -22074 <adc_add_sample_ch : 107ee8 >			  ## app_power_mg.c:38:5
  10d522:    20 e4 10 95 	r0 = [addr(1620)]  <.GCPI320_93 : 10db78 >			  ## app_power_mg.c:39:5
  10d526:    fd e1 3f 0e 	call -24122 <adc_kick_start : 1076f0 >			  ## app_power_mg.c:39:5
  10d52a:    00 e8 80 c0 	r0 = b[r8 + 3] 			  ## app_power_mg.c:40:12
  10d52e:    50 98       	cmp r0, 10			  ## app_power_mg.c:40:5
  10d530:    fc 13       	if (nzcv < 0) goto -8 <c_main+0xDBE : 10d52a >			  ## app_power_mg.c:40:5
  10d532:    fd e1 ff 13 	call -23938 <app_power_get_vbat : 1077b4 >			  ## app_power_mg.c:42:9
  10d536:    87 ef 00 d0 	cmp r0, 2000			  ## app_power_mg.c:42:9
  10d53a:    84 03       	if (nzcv > 0) {			  ## app_power_mg.c:45:9
  10d53c:    18 80       		r0 = 3 
                               	} else {			  ## app_power_mg.c:45:9
  10d53e:    20 80       		r0 = 4 
                               	}			  ## app_power_mg.c:43:9
  10d540:    fd e1 ef 4d 	call -22084 <pll_ref_sel_init : 107f00 >			  ## app_power_mg.c:43:9
  10d544:    da e1 ef ce 	call -304676 <local_irq_disable : c2f24 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/gpio.c:380:5
  10d548:    f0 e3 92 01 	[r9 + -56] &= (~1) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/gpio.c:384:16
  10d54c:    da e1 8f ce 	call -304688 <local_irq_enable : c2f20 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/gpio.c:386:5
  10d550:    da e1 8f ce 	call -304688 <local_irq_disable : c2f24 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/gpio.c:167:5
  10d554:    f0 e2 91 01 	[r9 + -60] |= 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/gpio.c:169:16
  10d558:    da e1 2f ce 	call -304700 <local_irq_enable : c2f20 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/gpio.c:173:5
  10d55c:    da e1 2f ce 	call -304700 <local_irq_disable : c2f24 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/gpio.c:287:5
  10d560:    f0 e3 94 01 	[r9 + -48] &= (~1) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/gpio.c:291:15
  10d564:    da e1 cf cd 	call -304712 <local_irq_enable : c2f20 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/gpio.c:293:5
  10d568:    da e1 cf cd 	call -304712 <local_irq_disable : c2f24 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/gpio.c:256:5
  10d56c:    f0 e3 93 01 	[r9 + -52] &= (~1) 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/gpio.c:260:15
  10d570:    da e1 6f cd 	call -304724 <local_irq_enable : c2f20 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/gpio.c:262:5
  10d574:    04 80       	r4 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/gpio.c:262:5
  10d576:    00 80       	r0 = 0 			  ## key_drv_ad.c:118:5
  10d578:    fd e1 6f 4b 	call -22164 <adc_add_sample_ch : 107ee8 >			  ## key_drv_ad.c:118:5
  10d57c:    20 e4 10 7f 	r0 = [addr(1532)]  <.GCPI320_94 : 10db7c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/tick_timer_cpu.c:58:5
  10d580:    da e1 cf d2 	call -304552 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/tick_timer_cpu.c:58:5
  10d584:    20 e4 11 7e 	r1 = [addr(1528)]  <.GCPI320_95 : 10db80 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/tick_timer_cpu.c:59:5
  10d588:    18 80       	r0 = 3 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/tick_timer_cpu.c:59:5
  10d58a:    1a 80       	r2 = 3 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/tick_timer_cpu.c:59:5
  10d58c:    fd e1 1f 44 	call -22398 <HWI_Install : 107e12 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/tick_timer_cpu.c:59:5
  10d590:    20 e4 10 b1 	r0 = [addr(1732)]  <.GCPI320_149 : 10dc58 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/tick_timer_cpu.c:59:5
  10d594:    04 68       	[r0 + 0] = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/tick_timer_cpu.c:60:34
  10d596:    20 e8 81 0d 	r1 = [r8 + 52] 			  ## clock.c:170:12
  10d59a:    12 ea e8 03 	r2 = 1000 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/tick_timer_cpu.c:61:53
  10d59e:    40 fc 11 02 	r1 = r1 / r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/tick_timer_cpu.c:61:53
  10d5a2:    09 a1       	r1 = r1 << 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/tick_timer_cpu.c:61:61
  10d5a4:    41 68       	[r0 + 4] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/tick_timer_cpu.c:61:34
  10d5a6:    09 80       	r1 = 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/gpio.c:169:16
  10d5a8:    c1 6f       	[r0 + -4] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/tick_timer_cpu.c:62:34
  10d5aa:    20 e4 10 76 	r0 = [addr(1496)]  <.GCPI320_96 : 10db84 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/tick_timer_cpu.c:63:5
  10d5ae:    da e1 5f d1 	call -304598 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/tick_timer_cpu.c:63:5
  10d5b2:    fb e1 bf 0d 	call -40522 <emu_init : 10376c >			  ## init.c:160:5
  10d5b6:    20 e4 15 74 	r5 = [addr(1488)]  <.GCPI320_97 : 10db88 >
  10d5ba:    20 e4 17 74 	r7 = [addr(1488)]  <.GCPI320_98 : 10db8c >
  10d5be:    20 e4 14 95 	r4 = [addr(1620)]  <.GCPI320_132 : 10dc14 >
  10d5c2:    08 08       	goto 16 <c_main+0xE68 : 10d5d4 >
  10d5c4:    68 48       	r0 = [r5 + 4] 			  ## vfs.c:23:26
  10d5c6:    50 20       	if (r0 == 0) goto 10 <c_main+0xE66 : 10d5d2 >			  ## vfs.c:23:26
  10d5c8:    20 c6       	r0 = r4 			  ## vfs.c:24:13
  10d5ca:    da e1 7f d0 	call -304626 <xprintf : c2fdc >			  ## vfs.c:24:13
  10d5ce:    68 48       	r0 = [r5 + 4] 			  ## vfs.c:25:18
  10d5d0:    a8 01       	call r0			  ## vfs.c:25:13
  10d5d2:    e5 8a       	r5 += 92 			  ## vfs.c:22:5
  10d5d4:    2f ce       	cmp r5, r7			  ## vfs.c:22:5
  10d5d6:    f6 13       	if (nzcv < 0) goto -20 <c_main+0xE58 : 10d5c4 >			  ## vfs.c:22:5
  10d5d8:    fd e1 9f 5b 	call -21646 <midi_decode_init : 10814e >			  ## init.c:166:5
  10d5dc:    fd e1 af 5e 	call -21548 <midi_ctrl_decode_init : 1081b4 >			  ## init.c:169:5
  10d5e0:    20 e4 10 6b 	r0 = [addr(1452)]  <.GCPI320_99 : 10db90 >			  ## dac_api.c:95:5
  10d5e4:    01 80       	r1 = 0 			  ## dac_api.c:95:5
  10d5e6:    22 81       	r2 = 36 			  ## dac_api.c:95:5
  10d5e8:    da e1 8f cb 	call -304784 <memset : c2f5c >			  ## dac_api.c:95:5
  10d5ec:    00 80       	r0 = 0 			  ## dac_api.c:105:5
  10d5ee:    81 80       	r1 = 16 			  ## dac_api.c:105:5
  10d5f0:    fd e1 6f 61 	call -21460 <dac_vol : 108220 >			  ## dac_api.c:105:5
  10d5f4:    20 e4 14 67 	r4 = [addr(1436)]  <.GCPI320_100 : 10db94 >			  ## dac_cpu.c:22:5
  10d5f8:    20 c6       	r0 = r4 			  ## dac_cpu.c:22:5
  10d5fa:    01 80       	r1 = 0 			  ## dac_cpu.c:22:5
  10d5fc:    12 ea 00 04 	r2 = 1024 			  ## dac_cpu.c:22:5
  10d600:    da e1 cf ca 	call -304808 <memset : c2f5c >			  ## dac_cpu.c:22:5
  10d604:    fd e1 cf 64 	call -21352 <chip_versions : 1082a0 >			  ## dac_cpu.c:82:16
  10d608:    00 ed 85 84 	r5 = r8 + 132 
  10d60c:    02 ed 40 00 	r0 = r4 + 512 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_dac.c:82:18
  10d610:    44 e5 50 0d 	d[r5 + 52] = r0, r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_dac.c:81:18
  10d614:    20 e4 10 91 	r0 = [addr(1604)]  <.GCPI320_150 : 10dc5c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_dac.c:83:20
  10d618:    e8 6b       	[r5 + 60] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_dac.c:83:20
  10d61a:    20 e4 10 5f 	r0 = [addr(1404)]  <.GCPI320_101 : 10db98 >			  ## adc_api.c:50:5
  10d61e:    01 80       	r1 = 0 			  ## adc_api.c:50:5
  10d620:    a2 80       	r2 = 20 			  ## adc_api.c:50:5
  10d622:    da e1 bf c9 	call -304842 <memset : c2f5c >			  ## adc_api.c:50:5
  10d626:    20 e4 14 5d 	r4 = [addr(1396)]  <.GCPI320_102 : 10db9c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_adc.c:103:5
  10d62a:    20 c6       	r0 = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_adc.c:103:5
  10d62c:    01 80       	r1 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_adc.c:103:5
  10d62e:    12 ea 80 00 	r2 = 128 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_adc.c:103:5
  10d632:    da e1 3f c9 	call -304858 <memset : c2f5c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_adc.c:103:5
  10d636:    00 ed 40 40 	r0 = r4 + 64 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_adc.c:106:24
  10d63a:    44 e5 50 fe 	d[r5 + -8] = r0, r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_adc.c:105:24
  10d63e:    08 80       	r0 = 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_adc.c:105:24
  10d640:    28 78       	b[r5 + 0] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_adc.c:105:24
  10d642:    20 e4 10 57 	r0 = [addr(1372)]  <.GCPI320_103 : 10dba0 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_adc.c:108:23
  10d646:    c9 80       	r1 = 25 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_adc.c:108:23
  10d648:    01 70       	h[r0 + 0] = r1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/audio/code/audio_adc.c:108:23
  10d64a:    08 80       	r0 = 1 			  ## init.c:174:5
  10d64c:    fd e1 af 67 	call -21260 <dac_power_on : 108344 >			  ## init.c:174:5
  10d650:    20 e4 14 54 	r4 = [addr(1360)]  <.GCPI320_104 : 10dba4 >
  10d654:    20 e4 17 54 	r7 = [addr(1360)]  <.GCPI320_105 : 10dba8 >
  10d658:    20 e4 15 6d 	r5 = [addr(1460)]  <.GCPI320_131 : 10dc10 >
  10d65c:    0e 08       	goto 28 <c_main+0xF0E : 10d67a >
  10d65e:    60 48       	r0 = [r4 + 4] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/dev_mg/code/device_api.c:154:18
  10d660:    b0 20       	if (r0 == 0) goto 22 <c_main+0xF0C : 10d678 >
  10d662:    42 48       	r2 = [r0 + 4] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/dev_mg/code/device_api.c:155:25
  10d664:    92 20       	if (r2 == 0) goto 18 <c_main+0xF0C : 10d678 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/dev_mg/code/device_api.c:155:25
  10d666:    a1 48       	r1 = [r4 + 8] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/dev_mg/code/device_api.c:156:35
  10d668:    20 c6       	r0 = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/dev_mg/code/device_api.c:156:19
  10d66a:    aa 01       	call r2			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/dev_mg/code/device_api.c:156:19
  10d66c:    02 c6       	r2 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/dev_mg/code/device_api.c:156:19
  10d66e:    42 20       	if (r2 == 0) goto 8 <c_main+0xF0C : 10d678 >
  10d670:    21 48       	r1 = [r4 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/dev_mg/code/device_api.c:158:17
  10d672:    28 c6       	r0 = r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/dev_mg/code/device_api.c:158:17
  10d674:    da e1 2f cb 	call -304796 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/dev_mg/code/device_api.c:158:17
  10d678:    64 88       	r4 += 12 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/dev_mg/code/device_api.c:153:5
  10d67a:    27 ce       	cmp r4, r7			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/dev_mg/code/device_api.c:153:5
  10d67c:    f0 13       	if (nzcv < 0) goto -32 <c_main+0xEF2 : 10d65e >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/dev_mg/code/device_api.c:153:5
  10d67e:    00 80       	r0 = 0 
  10d680:    40 61       	[sp+ 20] = r0 			  ## init.c:52:11
  10d682:    00 61       	[sp+ 16] = r0 			  ## init.c:53:11
  10d684:    c0 60       	[sp+ 12] = r0 			  ## init.c:55:9
  10d686:    a0 90       	r0 = sp + 20 			  ## init.c:55:9
  10d688:    01 80       	r1 = 0 			  ## init.c:57:11
  10d68a:    02 80       	r2 = 0 			  ## init.c:57:11
  10d68c:    fd e1 2f 4c 	call -22140 <vfs_mount : 108014 >			  ## init.c:57:11
  10d690:    01 c6       	r1 = r0 			  ## init.c:57:11
  10d692:    41 20       	if (r1 == 0) goto 8 <c_main+0xF30 : 10d69c >
  10d694:    20 e4 10 45 	r0 = [addr(1300)]  <.GCPI320_106 : 10dbac >			  ## init.c:58:5
  10d698:    da e1 0f ca 	call -304832 <xprintf : c2fdc >			  ## init.c:58:5
  10d69c:    40 41       	r0 = [sp+ 20] 			  ## init.c:59:26
  10d69e:    81 90       	r1 = sp + 16 
  10d6a0:    20 e4 12 43 	r2 = [addr(1292)]  <.GCPI320_107 : 10dbb0 >			  ## init.c:59:11
  10d6a4:    fd e1 2f 51 	call -21980 <vfs_openbypath : 1080cc >			  ## init.c:59:11
  10d6a8:    01 c6       	r1 = r0 			  ## init.c:59:11
  10d6aa:    41 20       	if (r1 == 0) goto 8 <c_main+0xF48 : 10d6b4 >
  10d6ac:    20 e4 10 41 	r0 = [addr(1284)]  <.GCPI320_108 : 10dbb4 >			  ## init.c:60:5
  10d6b0:    da e1 4f c9 	call -304856 <xprintf : c2fdc >			  ## init.c:60:5
  10d6b4:    00 41       	r0 = [sp+ 16] 			  ## init.c:61:21
  10d6b6:    00 ed 82 a0 	r2 = r8 + 160 			  ## init.c:61:11
  10d6ba:    a9 80       	r1 = 21 			  ## init.c:61:11
  10d6bc:    fd e1 af 6d 	call -21068 <vfs_ioctl : 108474 >			  ## init.c:61:11
  10d6c0:    01 c6       	r1 = r0 			  ## init.c:61:11
  10d6c2:    41 20       	if (r1 == 0) goto 8 <c_main+0xF60 : 10d6cc >
  10d6c4:    20 e4 10 3c 	r0 = [addr(1264)]  <.GCPI320_109 : 10dbb8 >			  ## init.c:62:5
  10d6c8:    da e1 8f c8 	call -304880 <xprintf : c2fdc >			  ## init.c:62:5
  10d6cc:    84 c6       	r4 = r8 			  ## init.c:63:5
  10d6ce:    24 e8 42 2a 	r2 = [++ r4 = 168] 			  ## init.c:63:5
  10d6d2:    e1 4f       	r1 = [r4 + -4] 			  ## init.c:63:5
  10d6d4:    20 e4 10 39 	r0 = [addr(1252)]  <.GCPI320_110 : 10dbbc >			  ## init.c:63:5
  10d6d8:    da e1 0f c8 	call -304896 <xprintf : c2fdc >			  ## init.c:63:5
  10d6dc:    b1 49       	r1 = [r6 + 24] 			  ## init.c:64:5
  10d6de:    20 e4 10 38 	r0 = [addr(1248)]  <.GCPI320_111 : 10dbc0 >			  ## init.c:64:5
  10d6e2:    da e1 bf c7 	call -304906 <xprintf : c2fdc >			  ## init.c:64:5
  10d6e6:    80 90       	r0 = sp + 16 			  ## init.c:64:5
  10d6e8:    fd e1 cf 4d 	call -22088 <vfs_file_close : 1080a4 >			  ## init.c:65:5
  10d6ec:    a0 90       	r0 = sp + 20 
  10d6ee:    fd e1 1f 51 	call -21982 <vfs_fs_close : 108114 >			  ## init.c:66:5
  10d6f2:    20 48       	r0 = [r4 + 0] 			  ## init.c:68:37
  10d6f4:    70 68       	[r6 + 4] = r0 			  ## init.c:68:27
  10d6f6:    e0 4f       	r0 = [r4 + -4] 			  ## init.c:69:36
  10d6f8:    f0 68       	[r6 + 12] = r0 			  ## init.c:69:26
  10d6fa:    20 e4 10 32 	r0 = [addr(1224)]  <.GCPI320_112 : 10dbc4 >			  ## init.c:71:14
  10d6fe:    fd e1 9f 6c 	call -21102 <dev_open : 108494 >			  ## init.c:71:14
  10d702:    04 c6       	r4 = r0 			  ## init.c:71:14
  10d704:    62 90       	r2 = sp + 12 
  10d706:    39 83       	r1 = 103 			  ## init.c:72:5
  10d708:    fc e1 2f 53 	call -30108 <dev_ioctl : 106170 >			  ## init.c:72:5
  10d70c:    c0 40       	r0 = [sp+ 12] 			  ## init.c:73:28
  10d70e:    b0 69       	[r6 + 24] = r0 			  ## init.c:73:26
  10d710:    20 e4 11 53 	r1 = [addr(1356)]  <.GCPI320_151 : 10dc60 >			  ## init.c:74:5
  10d714:    20 c6       	r0 = r4 			  ## init.c:74:5
  10d716:    32 c6       	r2 = r6 			  ## init.c:74:5
  10d718:    fc e1 af 52 	call -30124 <dev_ioctl : 106170 >			  ## init.c:74:5
  10d71c:    20 e4 12 2a 	r2 = [addr(1192)]  <.GCPI320_113 : 10dbc8 >			  ## init.c:75:5
  10d720:    20 c6       	r0 = r4 			  ## init.c:75:5
  10d722:    79 81       	r1 = 47 			  ## init.c:75:5
  10d724:    fc e1 4f 52 	call -30136 <dev_ioctl : 106170 >			  ## init.c:75:5
  10d728:    20 c6       	r0 = r4 			  ## init.c:76:5
  10d72a:    fd e1 df 6e 	call -21030 <dev_close : 108508 >			  ## init.c:76:5
  10d72e:    20 e8 a0 26 	r0 = [r10 + 152] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/vm/vm_sfc.c:1698:86
  10d732:    a0 8e       	r0 += -44 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/vm/vm_sfc.c:1698:102
  10d734:    03 e1 80 ff 	call 32752 <flash_addr2cpu_addr.645 : 115728 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/vm/vm_sfc.c:1698:55
  10d738:    04 c6       	r4 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/vm/vm_sfc.c:1698:55
  10d73a:    14 e8 01 80 	r1 = h[++ r0 = 2] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/vm/vm_sfc.c:1700:12
  10d73e:    29 99       	cmp r1, 37			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/vm/vm_sfc.c:1700:9
  10d740:    07 18       	if (nzcv > 0) goto 14 <c_main+0xFE4 : 10d750 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/vm/vm_sfc.c:1700:9
  10d742:    89 d0       	r1 = r1 + 2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/vm/vm_sfc.c:1705:48
  10d744:    fc e1 bf 3c 	call -30826 <CRC16 : 105ede >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/vm/vm_sfc.c:1705:18
  10d748:    21 50       	r1 = h[r4 + 0] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/vm/vm_sfc.c:1706:22
  10d74a:    01 ce       	cmp r0, r1			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/vm/vm_sfc.c:1706:9
  10d74c:    00 fb 40 15 	ifs (nzcv == 0) goto 680 <c_main+0x128C : 10d9f8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/vm/vm_sfc.c:1706:9
  10d750:    04 80       	r4 = 0 
  10d752:    c4 64       	[sp+ 76] = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:62:11
  10d754:    84 64       	[sp+ 72] = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:63:11
  10d756:    44 64       	[sp+ 68] = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:64:9
  10d758:    00 ed fa 18 	r10 = sp + 24 
  10d75c:    90 c6       	r0 = r10 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:66:26
  10d75e:    01 80       	r1 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:66:26
  10d760:    4a 81       	r2 = 41 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:66:26
  10d762:    da e1 bf bf 	call -305162 <memset : c2f5c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:66:26
  10d766:    20 e4 10 17 	r0 = [addr(1116)]  <.GCPI320_112 : 10dbc4 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:68:20
  10d76a:    fd e1 3f 69 	call -21210 <dev_open : 108494 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:68:20
  10d76e:    41 c6       	r9 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:68:20
  10d770:    80 ef 90 00 	cmp r9, 0			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:69:9
  10d774:    00 fb e0 0c 	ifs (nzcv == 0) goto 412 <c_main+0x11A8 : 10d914 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:69:9
  10d778:    22 92       	r2 = sp + 68 
  10d77a:    88 c6       	r0 = r9 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:73:5
  10d77c:    21 83       	r1 = 100 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:73:5
  10d77e:    fc e1 7f 4f 	call -30226 <dev_ioctl : 106170 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:73:5
  10d782:    60 92       	r0 = sp + 76 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:73:5
  10d784:    01 80       	r1 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:75:11
  10d786:    02 80       	r2 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:75:11
  10d788:    fd e1 4f 44 	call -22392 <vfs_mount : 108014 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:75:11
  10d78c:    01 c6       	r1 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:75:11
  10d78e:    01 98       	cmp r1, 0
  10d790:    00 fb 51 0c 	ifs (nzcv != 0) goto 394 <c_main+0x11B2 : 10d91e >
  10d794:    c0 44       	r0 = [sp+ 76] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:80:26
  10d796:    41 92       	r1 = sp + 72 
  10d798:    20 e4 12 0e 	r2 = [addr(1080)]  <.GCPI320_116 : 10dbd4 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:80:11
  10d79c:    fd e1 6f 49 	call -22228 <vfs_openbypath : 1080cc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:80:11
  10d7a0:    04 c6       	r4 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:80:11
  10d7a2:    04 98       	cmp r4, 0
  10d7a4:    00 fb 31 12 	ifs (nzcv != 0) goto 582 <c_main+0x1282 : 10d9ee >
  10d7a8:    20 e9 0b 12 	r11 = [sp+ 72] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:85:30
  10d7ac:    00 80       	r0 = 0 
  10d7ae:    c0 65       	[sp+ 92] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:12:26
  10d7b0:    80 65       	[sp+ 88] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:12:26
  10d7b2:    40 65       	[sp+ 84] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:12:26
  10d7b4:    00 65       	[sp+ 80] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:12:26
  10d7b6:    98 c6       	r0 = r11 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:13:5
  10d7b8:    01 80       	r1 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:13:5
  10d7ba:    fb e1 df 41 	call -38854 <vfs_seek : 103ff8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:13:5
  10d7be:    84 92       	r4 = sp + 80 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:13:5
  10d7c0:    98 c6       	r0 = r11 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:14:5
  10d7c2:    21 c6       	r1 = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:14:5
  10d7c4:    82 80       	r2 = 16 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:14:5
  10d7c6:    fb e1 1f 42 	call -38846 <vfs_read : 10400c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:14:5
  10d7ca:    20 c6       	r0 = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:15:5
  10d7cc:    81 80       	r1 = 16 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:15:5
  10d7ce:    79 e1 bf b1 	call -1100234 <printf_buf : e08 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:15:5
  10d7d2:    a0 d1       	r0 = r4 + 6 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:16:38
  10d7d4:    51 80       	r1 = 10 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:16:15
  10d7d6:    fc e1 2f 38 	call -30972 <CRC16 : 105ede >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:16:15
  10d7da:    05 c6       	r5 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:16:15
  10d7dc:    10 e9 02 15 	r2 = h[sp+ 84] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:17:5
  10d7e0:    20 e4 00 fe 	r0 = [addr(1016)]  <.GCPI320_118 : 10dbdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:17:5
  10d7e4:    29 c6       	r1 = r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:17:5
  10d7e6:    da e1 9f bf 	call -305166 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:17:5
  10d7ea:    10 e9 00 15 	r0 = h[sp+ 84] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:18:25
  10d7ee:    28 ce       	cmp r5, r0			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:18:30
  10d7f0:    00 fb d1 08 	ifs (nzcv != 0) goto 282 <c_main+0x11A2 : 10d90e >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:18:30
  10d7f4:    20 e9 0e 17 	r14 = [sp+ 92] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:18:43
  10d7f8:    80 ef e0 00 	cmp r14, 0			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:18:54
  10d7fc:    00 fb 70 08 	ifs (nzcv == 0) goto 270 <c_main+0x11A2 : 10d90e >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:18:54
  10d800:    20 e4 10 18 	r0 = [addr(1120)]  <.GCPI320_152 : 10dc64 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:18:70
  10d804:    01 45       	r1 = [sp+ 80] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:18:66
  10d806:    08 ce       	cmp r1, r0			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:18:9
  10d808:    00 fb 11 08 	ifs (nzcv != 0) goto 258 <c_main+0x11A2 : 10d90e >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:18:9
  10d80c:    46 44       	r6 = [sp+ 68] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:90:44
  10d80e:    00 80       	r0 = 0 
  10d810:    c0 65       	[sp+ 92] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:29:31
  10d812:    80 65       	[sp+ 88] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:29:31
  10d814:    40 65       	[sp+ 84] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:29:31
  10d816:    00 65       	[sp+ 80] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:29:31
  10d818:    98 c6       	r0 = r11 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:30:5
  10d81a:    81 80       	r1 = 16 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:30:5
  10d81c:    fb e1 cf 3e 	call -38952 <vfs_seek : 103ff8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:30:5
  10d820:    00 f3 45 02 	r5 = r4 | 2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:30:5
  10d824:    d0 ea ff ff 	r8 = -1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:30:5
  10d828:    20 e4 0c ed 	r12 = [addr(948)]  <.GCPI320_119 : 10dbe0 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:30:5
  10d82c:    20 e4 0d ed 	r13 = [addr(948)]  <.GCPI320_120 : 10dbe4 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:30:5
  10d830:    00 ed 88 01 	r8 = r8 + 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:32:14
  10d834:    c6 ce       	cmp r8, r14			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:32:5
  10d836:    50 12       	if (nzcv >= 0) goto 160 <c_main+0x116C : 10d8d8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:32:5
  10d838:    98 c6       	r0 = r11 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:33:9
  10d83a:    21 c6       	r1 = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:33:9
  10d83c:    82 80       	r2 = 16 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:33:9
  10d83e:    fb e1 5f 3e 	call -38966 <vfs_read : 10400c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:33:9
  10d842:    20 c6       	r0 = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:34:9
  10d844:    81 80       	r1 = 16 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:34:9
  10d846:    79 e1 ff ad 	call -1100354 <printf_buf : e08 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:34:9
  10d84a:    28 c6       	r0 = r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:35:19
  10d84c:    71 80       	r1 = 14 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:35:19
  10d84e:    fc e1 6f 34 	call -31092 <CRC16 : 105ede >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:35:19
  10d852:    07 c6       	r7 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:35:19
  10d854:    10 e9 02 14 	r2 = h[sp+ 80] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:36:9
  10d858:    a0 c6       	r0 = r12 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:36:9
  10d85a:    39 c6       	r1 = r7 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:36:9
  10d85c:    da e1 ef bb 	call -305284 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:36:9
  10d860:    42 45       	r2 = [sp+ 84] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:37:9
  10d862:    a8 c6       	r0 = r13 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:37:9
  10d864:    31 c6       	r1 = r6 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:37:9
  10d866:    da e1 9f bb 	call -305294 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:37:9
  10d86a:    10 e9 00 14 	r0 = h[sp+ 80] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:38:34
  10d86e:    38 ce       	cmp r7, r0			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:38:39
  10d870:    df 11       	ifs (nzcv != 0) goto -66 <c_main+0x10C4 : 10d830 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:38:39
  10d872:    40 45       	r0 = [sp+ 84] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:38:68
  10d874:    06 ce       	cmp r0, r6			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:38:68
  10d876:    dc 11       	ifs (nzcv != 0) goto -72 <c_main+0x10C4 : 10d830 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:38:68
  10d878:    81 45       	r1 = [sp+ 88] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:46:35
  10d87a:    98 c6       	r0 = r11 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:46:5
  10d87c:    fb e1 cf 3b 	call -39048 <vfs_seek : 103ff8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:46:5
  10d880:    c2 45       	r2 = [sp+ 92] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:47:54
  10d882:    98 c6       	r0 = r11 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:47:5
  10d884:    91 c6       	r1 = r10 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:47:5
  10d886:    fb e1 1f 3c 	call -39038 <vfs_read : 10400c >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:47:5
  10d88a:    c1 45       	r1 = [sp+ 92] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:48:5
  10d88c:    90 c6       	r0 = r10 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:48:5
  10d88e:    79 e1 bf ab 	call -1100426 <printf_buf : e08 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:48:5
  10d892:    c1 45       	r1 = [sp+ 92] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:49:106
  10d894:    00 f3 a0 02 	r0 = r10 | 2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:49:45
  10d898:    89 d3       	r1 = r1 + -2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:49:113
  10d89a:    fc e1 0f 32 	call -31168 <CRC16 : 105ede >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:49:15
  10d89e:    04 c6       	r4 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:49:15
  10d8a0:    10 e9 02 06 	r2 = h[sp+ 24] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:50:5
  10d8a4:    20 e4 00 ce 	r0 = [addr(824)]  <.GCPI320_119 : 10dbe0 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:50:5
  10d8a8:    21 c6       	r1 = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:50:5
  10d8aa:    da e1 7f b9 	call -305362 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:50:5
  10d8ae:    c1 45       	r1 = [sp+ 92] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:51:58
  10d8b0:    90 c6       	r0 = r10 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:51:20
  10d8b2:    fc e1 4f 31 	call -31192 <CRC16 : 105ede >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:51:20
  10d8b6:    05 c6       	r5 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:51:20
  10d8b8:    10 e9 82 14 	r2 = h[sp+ 82] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:52:5
  10d8bc:    20 e4 00 ca 	r0 = [addr(808)]  <.GCPI320_121 : 10dbe8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:52:5
  10d8c0:    29 c6       	r1 = r5 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:52:5
  10d8c2:    da e1 bf b8 	call -305386 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:52:5
  10d8c6:    10 e9 00 06 	r0 = h[sp+ 24] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:53:28
  10d8ca:    20 ce       	cmp r4, r0			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:91:9
  10d8cc:    05 11       	ifs (nzcv != 0) goto 10 <c_main+0x116C : 10d8d8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:91:9
  10d8ce:    10 e9 80 14 	r0 = h[sp+ 82] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:53:62
  10d8d2:    04 80       	r4 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:53:62
  10d8d4:    28 ce       	cmp r5, r0			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:53:62
  10d8d6:    05 10       	ifs (nzcv == 0) goto 10 <c_main+0x1176 : 10d8e2 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:53:62
  10d8d8:    20 e4 00 c4 	r0 = [addr(784)]  <.GCPI320_122 : 10dbec >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:92:9
  10d8dc:    da e1 ef b7 	call -305412 <xprintf : c2fdc >
  10d8e0:    0c 80       	r4 = 1 
  10d8e2:    40 92       	r0 = sp + 72 
  10d8e4:    fd e1 ef 3d 	call -22596 <vfs_file_close : 1080a4 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:97:5
  10d8e8:    20 e4 08 53 	r8 = [addr(332)]  <.GCPI320_13 : 10da38 >
  10d8ec:    20 e4 06 9c 	r6 = [addr(624)]  <.GCPI320_87 : 10db60 >
  10d8f0:    60 92       	r0 = sp + 76 
  10d8f2:    fd e1 ff 40 	call -22498 <vfs_fs_close : 108114 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:99:5
  10d8f6:    88 c6       	r0 = r9 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:101:5
  10d8f8:    fd e1 6f 60 	call -21492 <dev_close : 108508 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:101:5
  10d8fc:    7c 21       	if (r4 != 0) goto 46 <c_main+0x11C0 : 10d92c >
  10d8fe:    00 ed a4 04 	r4 = r10 + 4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:107:75
  10d902:    19 08       	goto 50 <c_main+0x11CA : 10d936 >
  10d904:    20 e4 00 8f 	r0 = [addr(572)]  <.GCPI320_80 : 10db44 >			  ## clock.c:476:9
  10d908:    da e1 8f b6 	call -305456 <xprintf : c2fdc >			  ## clock.c:476:9
  10d90c:    ff 0f       	goto -2 <c_main+0x11A0 : 10d90c >			  ## clock.c:477:9
  10d90e:    20 e4 00 b8 	r0 = [addr(736)]  <.GCPI320_123 : 10dbf0 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:87:9
  10d912:    e4 0f       	goto -56 <c_main+0x1170 : 10d8dc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:87:9
  10d914:    20 e4 00 b8 	r0 = [addr(736)]  <.GCPI320_125 : 10dbf8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:70:9
  10d918:    da e1 0f b6 	call -305472 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:70:9
  10d91c:    0c 08       	goto 24 <c_main+0x11CA : 10d936 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:70:9
  10d91e:    20 e4 00 ac 	r0 = [addr(688)]  <.GCPI320_115 : 10dbd0 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:77:9
  10d922:    da e1 bf b5 	call -305482 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:77:9
  10d926:    88 c6       	r0 = r9 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:101:5
  10d928:    fd e1 ef 5e 	call -21540 <dev_close : 108508 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:101:5
  10d92c:    20 e4 00 b1 	r0 = [addr(708)]  <.GCPI320_124 : 10dbf4 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:104:9
  10d930:    da e1 4f b5 	call -305496 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:104:9
  10d934:    04 80       	r4 = 0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:104:9
  10d936:    04 21       	if (r4 == 0) goto 32 <c_main+0x11EC : 10d958 >
  10d938:    20 e8 80 2a 	r0 = [r8 + 168] 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/vm/vm_sfc.c:1745:77
  10d93c:    21 c6       	r1 = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/vm/vm_sfc.c:1745:24
  10d93e:    04 e1 30 0c 	call 33158 <norflash_write_protect_config : 115ac8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/vm/vm_sfc.c:1745:24
  10d942:    01 c6       	r1 = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/vm/vm_sfc.c:1745:24
  10d944:    59 20       	if (r1 != 0) goto 10 <c_main+0x11E4 : 10d950 >
  10d946:    20 e4 00 ae 	r0 = [addr(696)]  <.GCPI320_127 : 10dc00 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/vm/vm_sfc.c:1749:13
  10d94a:    da e1 7f b4 	call -305522 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/vm/vm_sfc.c:1749:13
  10d94e:    04 08       	goto 8 <c_main+0x11EC : 10d958 >
  10d950:    20 e4 00 aa 	r0 = [addr(680)]  <.GCPI320_126 : 10dbfc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/vm/vm_sfc.c:1747:13
  10d954:    da e1 2f b4 	call -305532 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/vm/vm_sfc.c:1747:13
  10d958:    00 80       	r0 = 0 
  10d95a:    80 61       	[sp+ 24] = r0 			  ## init.c:105:11
  10d95c:    00 65       	[sp+ 80] = r0 			  ## init.c:106:11
  10d95e:    c0 90       	r0 = sp + 24 			  ## init.c:106:11
  10d960:    01 80       	r1 = 0 			  ## init.c:111:11
  10d962:    02 80       	r2 = 0 			  ## init.c:111:11
  10d964:    fd e1 6f 35 	call -22868 <vfs_mount : 108014 >			  ## init.c:111:11
  10d968:    01 c6       	r1 = r0 			  ## init.c:111:11
  10d96a:    41 20       	if (r1 == 0) goto 8 <c_main+0x1208 : 10d974 >
  10d96c:    20 e4 00 8f 	r0 = [addr(572)]  <.GCPI320_106 : 10dbac >			  ## init.c:112:5
  10d970:    da e1 4f b3 	call -305560 <xprintf : c2fdc >			  ## init.c:112:5
  10d974:    80 41       	r0 = [sp+ 24] 			  ## init.c:113:26
  10d976:    81 92       	r1 = sp + 80 
  10d978:    20 e4 02 a2 	r2 = [addr(648)]  <.GCPI320_128 : 10dc04 >			  ## init.c:113:11
  10d97c:    fd e1 6f 3a 	call -22708 <vfs_openbypath : 1080cc >			  ## init.c:113:11
  10d980:    01 c6       	r1 = r0 			  ## init.c:113:11
  10d982:    41 20       	if (r1 == 0) goto 8 <c_main+0x1220 : 10d98c >
  10d984:    20 e4 00 8b 	r0 = [addr(556)]  <.GCPI320_108 : 10dbb4 >			  ## init.c:114:5
  10d988:    da e1 8f b2 	call -305584 <xprintf : c2fdc >			  ## init.c:114:5
  10d98c:    00 45       	r0 = [sp+ 80] 			  ## init.c:115:21
  10d98e:    00 ed 82 ac 	r2 = r8 + 172 			  ## init.c:115:11
  10d992:    a9 80       	r1 = 21 			  ## init.c:115:11
  10d994:    fd e1 ef 56 	call -21796 <vfs_ioctl : 108474 >			  ## init.c:115:11
  10d998:    01 c6       	r1 = r0 			  ## init.c:115:11
  10d99a:    41 20       	if (r1 == 0) goto 8 <c_main+0x1238 : 10d9a4 >
  10d99c:    20 e4 00 86 	r0 = [addr(536)]  <.GCPI320_109 : 10dbb8 >			  ## init.c:116:5
  10d9a0:    da e1 cf b1 	call -305608 <xprintf : c2fdc >			  ## init.c:116:5
  10d9a4:    00 ed 84 78 	r4 = r8 + 120 
  10d9a8:    01 e5 42 0e 	r2, r1 = d[r4 + 56] 			  ## init.c:117:5
  10d9ac:    20 e4 00 96 	r0 = [addr(600)]  <.GCPI320_129 : 10dc08 >			  ## init.c:117:5
  10d9b0:    da e1 4f b1 	call -305624 <xprintf : c2fdc >			  ## init.c:117:5
  10d9b4:    80 92       	r0 = sp + 80 			  ## init.c:117:5
  10d9b6:    fd e1 5f 37 	call -22806 <vfs_file_close : 1080a4 >			  ## init.c:118:5
  10d9ba:    c0 90       	r0 = sp + 24 
  10d9bc:    fd e1 af 3a 	call -22700 <vfs_fs_close : 108114 >			  ## init.c:119:5
  10d9c0:    20 e4 00 92 	r0 = [addr(584)]  <.GCPI320_130 : 10dc0c >			  ## nor_fs_resource.c:43:5
  10d9c4:    da e1 af b0 	call -305644 <xprintf : c2fdc >			  ## nor_fs_resource.c:43:5
  10d9c8:    f0 48       	r0 = [r6 + 12] 			  ## nor_fs_resource.c:51:32
  10d9ca:    71 48       	r1 = [r6 + 4] 			  ## nor_fs_resource.c:50:34
  10d9cc:    0f ed 12 ff 	r2 = r1 + 4095 			  ## nor_fs_resource.c:50:57
  10d9d0:    52 ac       	r2 = r2 >> 12 			  ## nor_fs_resource.c:50:62
  10d9d2:    50 e8 82 05 	h[r8 + 20] = r2 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:812:29
  10d9d6:    40 d4       	r0 = r0 + r1 			  ## nor_fs_resource.c:51:40
  10d9d8:    40 ac       	r0 = r0 >> 12 			  ## nor_fs_resource.c:51:65
  10d9da:    11 ea ff ff 	r1 = 65535 			  ## nor_fs_resource.c:53:15
  10d9de:    40 d4       	r0 = r0 + r1 			  ## nor_fs_resource.c:53:15
  10d9e0:    50 e8 80 85 	h[r8 + 22] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:813:28
  10d9e4:    08 80       	r0 = 1 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:813:28
  10d9e6:    20 78       	b[r4 + 0] = r0 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/fs/code/nor_fs/nor_fs.c:813:28
  10d9e8:    fe e1 2f c1 	call -10204 <app : 10b210 >			  ## main.c:62:5
  10d9ec:    ff 0f       	goto -2 <c_main+0x1280 : 10d9ec >
  10d9ee:    98 2e       	r0 = [addr(488)]  <.GCPI320_117 : 10dbd8 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:82:9
  10d9f0:    21 c6       	r1 = r4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:82:9
  10d9f2:    da e1 3f af 	call -305690 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:82:9
  10d9f6:    7c 0f       	goto -264 <c_main+0x1184 : 10d8f0 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/flash_wp.c:82:9
  10d9f8:    24 d1       	r4 = r4 + 4 			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/vm/vm_sfc.c:1699:66
  10d9fa:    18 2d       	r0 = [addr(464)]  <.GCPI320_114 : 10dbcc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/vm/vm_sfc.c:1711:5
  10d9fc:    da e1 ef ae 	call -305700 <xprintf : c2fdc >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/vm/vm_sfc.c:1711:5
  10da00:    9b 0f       	goto -202 <c_main+0x11CC : 10d938 >			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/vm/vm_sfc.c:1711:5
  10da02:    00 00       	nop			  ## /jks/jenkins/workspace/sh54_sh55_build_release/libs/cpu/sh54/vm/vm_sfc.c:1711:5


.GCPI320_0:
  10da04:    a8 37 10 00     < 1062824 : 0x1037A8 >

.GCPI320_1:
  10da08:    cc 0d 00 00     < 3532 : 0xDCC >

.GCPI320_2:
  10da0c:    00 7f 00 00     < 32512 : 0x7F00 >

.GCPI320_3:
  10da10:    d0 2f 0c 00     < 798672 : 0xC2FD0 >

.GCPI320_4:
  10da14:    68 b6 11 00     < 1160808 : 0x11B668 >

.GCPI320_5:
  10da18:    de b3 11 00     < 1160158 : 0x11B3DE >

.GCPI320_6:
  10da1c:    e2 b3 11 00     < 1160162 : 0x11B3E2 >

.GCPI320_7:
  10da20:    da b3 11 00     < 1160154 : 0x11B3DA >

.GCPI320_8:
  10da24:    e8 b3 11 00     < 1160168 : 0x11B3E8 >

.GCPI320_9:
  10da28:    eb b3 11 00     < 1160171 : 0x11B3EB >

.GCPI320_10:
  10da2c:    ef b3 11 00     < 1160175 : 0x11B3EF >

.GCPI320_11:
  10da30:    f3 b3 11 00     < 1160179 : 0x11B3F3 >

.GCPI320_12:
  10da34:    f9 b3 11 00     < 1160185 : 0x11B3F9 >

.GCPI320_13:
  10da38:    60 1c 00 00     < 7264 : 0x1C60 >

.GCPI320_14:
  10da3c:    ee b7 11 00     < 1161198 : 0x11B7EE >

.GCPI320_15:
  10da40:    cf ca 11 00     < 1166031 : 0x11CACF >

.GCPI320_16:
  10da44:    f3 ca 11 00     < 1166067 : 0x11CAF3 >

.GCPI320_17:
  10da48:    0b cb 11 00     < 1166091 : 0x11CB0B >

.GCPI320_18:
  10da4c:    22 cb 11 00     < 1166114 : 0x11CB22 >

.GCPI320_19:
  10da50:    36 cb 11 00     < 1166134 : 0x11CB36 >

.GCPI320_20:
  10da54:    64 cb 11 00     < 1166180 : 0x11CB64 >

.GCPI320_21:
  10da58:    8b cb 11 00     < 1166219 : 0x11CB8B >

.GCPI320_22:
  10da5c:    a3 cb 11 00     < 1166243 : 0x11CBA3 >

.GCPI320_23:
  10da60:    bb cb 11 00     < 1166267 : 0x11CBBB >

.GCPI320_24:
  10da64:    cd cb 11 00     < 1166285 : 0x11CBCD >

.GCPI320_25:
  10da68:    df cb 11 00     < 1166303 : 0x11CBDF >

.GCPI320_26:
  10da6c:    f2 cb 11 00     < 1166322 : 0x11CBF2 >

.GCPI320_27:
  10da70:    05 cc 11 00     < 1166341 : 0x11CC05 >

.GCPI320_28:
  10da74:    1d cc 11 00     < 1166365 : 0x11CC1D >

.GCPI320_29:
  10da78:    49 cb 11 00     < 1166153 : 0x11CB49 >

.GCPI320_30:
  10da7c:    14 b6 11 00     < 1160724 : 0x11B614 >

.GCPI320_31:
  10da80:    33 b6 11 00     < 1160755 : 0x11B633 >

.GCPI320_32:
  10da84:    cc 08 00 00     < 2252 : 0x8CC >

.GCPI320_33:
  10da88:    a2 c8 11 00     < 1165474 : 0x11C8A2 >

.GCPI320_34:
  10da8c:    c0 c8 11 00     < 1165504 : 0x11C8C0 >

.GCPI320_35:
  10da90:    de c8 11 00     < 1165534 : 0x11C8DE >

.GCPI320_36:
  10da94:    8b c7 11 00     < 1165195 : 0x11C78B >

.GCPI320_37:
  10da98:    92 c7 11 00     < 1165202 : 0x11C792 >

.GCPI320_38:
  10da9c:    01 c9 11 00     < 1165569 : 0x11C901 >

.GCPI320_39:
  10daa0:    29 c9 11 00     < 1165609 : 0x11C929 >

.GCPI320_40:
  10daa4:    48 19 00 00     < 6472 : 0x1948 >

.GCPI320_41:
  10daa8:    20 20 00 00     < 8224 : 0x2020 >

.GCPI320_42:
  10daac:    51 c9 11 00     < 1165649 : 0x11C951 >

.GCPI320_43:
  10dab0:    8a c9 11 00     < 1165706 : 0x11C98A >

.GCPI320_44:
  10dab4:    bc c9 11 00     < 1165756 : 0x11C9BC >

.GCPI320_45:
  10dab8:    00 65 11 00     < 1139968 : 0x116500 >

.GCPI320_46:
  10dabc:    20 65 11 00     < 1140000 : 0x116520 >

.GCPI320_47:
  10dac0:    f7 c9 11 00     < 1165815 : 0x11C9F7 >

.GCPI320_48:
  10dac4:    50 1e 00 00     < 7760 : 0x1E50 >

.GCPI320_49:
  10dac8:    6d c7 11 00     < 1165165 : 0x11C76D >

.GCPI320_50:
  10dacc:    1c 61 11 00     < 1138972 : 0x11611C >

.GCPI320_51:
  10dad0:    43 c8 11 00     < 1165379 : 0x11C843 >

.GCPI320_52:
  10dad4:    cc 7a 10 00     < 1080012 : 0x107ACC >

.GCPI320_53:
  10dad8:    14 79 10 00     < 1079572 : 0x107914 >

.GCPI320_54:
  10dadc:    f0 7a 10 00     < 1080048 : 0x107AF0 >

.GCPI320_55:
  10dae0:    e0 60 11 00     < 1138912 : 0x1160E0 >

.GCPI320_56:
  10dae4:    2c 1c 00 00     < 7212 : 0x1C2C >

.GCPI320_57:
  10dae8:    0d c7 11 00     < 1165069 : 0x11C70D >

.GCPI320_58:
  10daec:    34 c6 11 00     < 1164852 : 0x11C634 >

.GCPI320_59:
  10daf0:    c6 c6 11 00     < 1164998 : 0x11C6C6 >

.GCPI320_60:
  10daf4:    cf 64 11 00     < 1139919 : 0x1164CF >

.GCPI320_61:
  10daf8:    7f c6 11 00     < 1164927 : 0x11C67F >

.GCPI320_62:
  10dafc:    cc 64 11 00     < 1139916 : 0x1164CC >

.GCPI320_63:
  10db00:    38 c6 11 00     < 1164856 : 0x11C638 >

.GCPI320_64:
  10db04:    20 d9 11 00     < 1169696 : 0x11D920 >

.GCPI320_65:
  10db08:    3d c7 11 00     < 1165117 : 0x11C73D >

.GCPI320_66:
  10db0c:    74 08 00 00     < 2164 : 0x874 >

.GCPI320_67:
  10db10:    58 63 00 00     < 25432 : 0x6358 >

.GCPI320_68:
  10db14:    8b 7e 00 00     < 32395 : 0x7E8B >

.GCPI320_69:
  10db18:    f0 d8 11 00     < 1169648 : 0x11D8F0 >

.GCPI320_70:
  10db1c:    00 d9 11 00     < 1169664 : 0x11D900 >

.GCPI320_71:
  10db20:    a0 d9 11 00     < 1169824 : 0x11D9A0 >

.GCPI320_72:
  10db24:    a4 d9 11 00     < 1169828 : 0x11D9A4 >

.GCPI320_73:
  10db28:    55 b3 11 00     < 1160021 : 0x11B355 >

.GCPI320_74:
  10db2c:    e0 7e 00 00     < 32480 : 0x7EE0 >

.GCPI320_75:
  10db30:    d3 b4 11 00     < 1160403 : 0x11B4D3 >

.GCPI320_76:
  10db34:    ff b4 11 00     < 1160447 : 0x11B4FF >

.GCPI320_77:
  10db38:    0c 00 00 00     < 12 : 0xC >

.GCPI320_78:
  10db3c:    61 b5 11 00     < 1160545 : 0x11B561 >

.GCPI320_79:
  10db40:    81 b5 11 00     < 1160577 : 0x11B581 >

.GCPI320_80:
  10db44:    3f b5 11 00     < 1160511 : 0x11B53F >

.GCPI320_81:
  10db48:    a4 b5 11 00     < 1160612 : 0x11B5A4 >

.GCPI320_82:
  10db4c:    a2 b4 11 00     < 1160354 : 0x11B4A2 >

.GCPI320_83:
  10db50:    7a b3 11 00     < 1160058 : 0x11B37A >

.GCPI320_84:
  10db54:    9a b3 11 00     < 1160090 : 0x11B39A >

.GCPI320_85:
  10db58:    ba b3 11 00     < 1160122 : 0x11B3BA >

.GCPI320_86:
  10db5c:    fd b3 11 00     < 1160189 : 0x11B3FD >

.GCPI320_87:
  10db60:    8c 7e 00 00     < 32396 : 0x7E8C >

.GCPI320_88:
  10db64:    60 1d 00 00     < 7520 : 0x1D60 >

.GCPI320_89:
  10db68:    2c 17 00 00     < 5932 : 0x172C >

.GCPI320_90:
  10db6c:    50 1f 00 00     < 8016 : 0x1F50 >

.GCPI320_91:
  10db70:    d0 d8 11 00     < 1169616 : 0x11D8D0 >

.GCPI320_92:
  10db74:    a4 78 10 00     < 1079460 : 0x1078A4 >

.GCPI320_93:
  10db78:    bc 77 10 00     < 1079228 : 0x1077BC >

.GCPI320_94:
  10db7c:    36 cc 11 00     < 1166390 : 0x11CC36 >

.GCPI320_95:
  10db80:    68 0e 00 00     < 3688 : 0xE68 >

.GCPI320_96:
  10db84:    54 cc 11 00     < 1166420 : 0x11CC54 >

.GCPI320_97:
  10db88:    58 dc 11 00     < 1170520 : 0x11DC58 >

.GCPI320_98:
  10db8c:    6c dd 11 00     < 1170796 : 0x11DD6C >

.GCPI320_99:
  10db90:    a4 25 00 00     < 9636 : 0x25A4 >

.GCPI320_100:
  10db94:    a4 21 00 00     < 8612 : 0x21A4 >

.GCPI320_101:
  10db98:    48 26 00 00     < 9800 : 0x2648 >

.GCPI320_102:
  10db9c:    c8 25 00 00     < 9672 : 0x25C8 >

.GCPI320_103:
  10dba0:    54 1c 00 00     < 7252 : 0x1C54 >

.GCPI320_104:
  10dba4:    4c dc 11 00     < 1170508 : 0x11DC4C >

.GCPI320_105:
  10dba8:    58 dc 11 00     < 1170520 : 0x11DC58 >

.GCPI320_106:
  10dbac:    91 b6 11 00     < 1160849 : 0x11B691 >

.GCPI320_107:
  10dbb0:    c6 b6 11 00     < 1160902 : 0x11B6C6 >

.GCPI320_108:
  10dbb4:    d8 b6 11 00     < 1160920 : 0x11B6D8 >

.GCPI320_109:
  10dbb8:    12 b7 11 00     < 1160978 : 0x11B712 >

.GCPI320_110:
  10dbbc:    47 b7 11 00     < 1161031 : 0x11B747 >

.GCPI320_111:
  10dbc0:    7d b7 11 00     < 1161085 : 0x11B77D >

.GCPI320_112:
  10dbc4:    76 cc 11 00     < 1166454 : 0x11CC76 >

.GCPI320_113:
  10dbc8:    00 57 11 00     < 1136384 : 0x115700 >

.GCPI320_114:
  10dbcc:    a7 c5 11 00     < 1164711 : 0x11C5A7 >

.GCPI320_115:
  10dbd0:    9d cc 11 00     < 1166493 : 0x11CC9D >

.GCPI320_116:
  10dbd4:    c5 cc 11 00     < 1166533 : 0x11CCC5 >

.GCPI320_117:
  10dbd8:    e0 cc 11 00     < 1166560 : 0x11CCE0 >

.GCPI320_118:
  10dbdc:    0d cd 11 00     < 1166605 : 0x11CD0D >

.GCPI320_119:
  10dbe0:    52 cd 11 00     < 1166674 : 0x11CD52 >

.GCPI320_120:
  10dbe4:    74 cd 11 00     < 1166708 : 0x11CD74 >

.GCPI320_121:
  10dbe8:    9b cd 11 00     < 1166747 : 0x11CD9B >

.GCPI320_122:
  10dbec:    c2 cd 11 00     < 1166786 : 0x11CDC2 >

.GCPI320_123:
  10dbf0:    30 cd 11 00     < 1166640 : 0x11CD30 >

.GCPI320_124:
  10dbf4:    e9 cd 11 00     < 1166825 : 0x11CDE9 >

.GCPI320_125:
  10dbf8:    7a cc 11 00     < 1166458 : 0x11CC7A >

.GCPI320_126:
  10dbfc:    d4 c5 11 00     < 1164756 : 0x11C5D4 >

.GCPI320_127:
  10dc00:    09 c6 11 00     < 1164809 : 0x11C609 >

.GCPI320_128:
  10dc04:    9e b7 11 00     < 1161118 : 0x11B79E >

.GCPI320_129:
  10dc08:    b4 b7 11 00     < 1161140 : 0x11B7B4 >

.GCPI320_130:
  10dc0c:    c7 ad 11 00     < 1158599 : 0x11ADC7 >

.GCPI320_131:
  10dc10:    aa d5 11 00     < 1168810 : 0x11D5AA >

.GCPI320_132:
  10dc14:    14 ae 11 00     < 1158676 : 0x11AE14 >

.GCPI320_133:
  10dc18:    68 3c 09 00     < 605288 : 0x93C68 >

.GCPI320_134:
  10dc1c:    14 18 09 00     < 595988 : 0x91814 >

.GCPI320_135:
  10dc20:    44 00 09 00     < 589892 : 0x90044 >

.GCPI320_136:
  10dc24:    00 6c dc 02     < 48000000 : 0x2DC6C00 >

.GCPI320_137:
  10dc28:    40 42 0f 00     < 1000000 : 0xF4240 >

.GCPI320_138:
  10dc2c:    04 08 09 00     < 591876 : 0x90804 >

.GCPI320_139:
  10dc30:    00 38 9c 1c     < 480000000 : 0x1C9C3800 >

.GCPI320_140:
  10dc34:    00 00 87 93     < 2475098112 : 0x93870000 >

.GCPI320_141:
  10dc38:    00 24 09 00     < 599040 : 0x92400 >

.GCPI320_142:
  10dc3c:    90 00 09 00     < 589968 : 0x90090 >

.GCPI320_143:
  10dc40:    24 00 09 00     < 589860 : 0x90024 >

.GCPI320_144:
  10dc44:    48 00 09 00     < 589896 : 0x90048 >

.GCPI320_145:
  10dc48:    00 b4 c4 04     < 80000000 : 0x4C4B400 >

.GCPI320_146:
  10dc4c:    06 4f 02 00     < 151302 : 0x24F06 >

.GCPI320_147:
  10dc50:    00 00 b0 3e     < 1051721728 : 0x3EB00000 >

.GCPI320_148:
  10dc54:    40 14 09 00     < 595008 : 0x91440 >

.GCPI320_149:
  10dc58:    e4 00 08 00     < 524516 : 0x800E4 >

.GCPI320_150:
  10dc5c:    00 02 10 22     < 571474432 : 0x22100200 >

.GCPI320_151:
  10dc60:    01 56 04 40     < 1074025985 : 0x40045601 >

.GCPI320_152:
  10dc64:    23 08 22 20     < 539101219 : 0x20220823 >

idle_msg_filter:
  10dc68:    03 c6       	r3 = r0 			  ## toy_idle_key.c:332:0
  10dc6a:    10 ea ff 0f 	r0 = 4095 			  ## toy_idle_key.c:332:0
  10dc6e:    0a 98       	cmp r2, 1			  ## toy_idle_key.c:334:5
  10dc70:    07 11       	ifs (nzcv != 0) goto 14 <idle_msg_filter+0x18 : 10dc80 >			  ## toy_idle_key.c:334:5
  10dc72:    00 fc 30 14 	r0 = r3 * 20 			  ## toy_idle_key.c:347:15
  10dc76:    c2 28       	r2 = [addr(12)]  <.GCPI321_0 : 10dc84 >			  ## toy_idle_key.c:347:15
  10dc78:    80 d4       	r0 = r0 + r2 			  ## toy_idle_key.c:347:15
  10dc7a:    09 a1       	r1 = r1 << 1 			  ## toy_idle_key.c:347:15
  10dc7c:    10 e7 00 01 	r0 = h[r0 + r1] 			  ## toy_idle_key.c:347:15
  10dc80:    20 00       	rts			  ## toy_idle_key.c:353:5
  10dc82:    00 00       	nop			  ## toy_idle_key.c:353:5


.GCPI321_0:
  10dc84:    88 61 11 00     < 1139080 : 0x116188 >

linein_key_msg_filter:
  10dc88:    03 c6       	r3 = r0 			  ## toy_linein_key.c:388:0
  10dc8a:    10 ea ff 0f 	r0 = 4095 			  ## toy_linein_key.c:388:0
  10dc8e:    0a 98       	cmp r2, 1			  ## toy_linein_key.c:390:5
  10dc90:    07 11       	ifs (nzcv != 0) goto 14 <linein_key_msg_filter+0x18 : 10dca0 >			  ## toy_linein_key.c:390:5
  10dc92:    00 fc 30 14 	r0 = r3 * 20 			  ## toy_linein_key.c:398:15
  10dc96:    c2 28       	r2 = [addr(12)]  <.GCPI322_0 : 10dca4 >			  ## toy_linein_key.c:398:15
  10dc98:    80 d4       	r0 = r0 + r2 			  ## toy_linein_key.c:398:15
  10dc9a:    09 a1       	r1 = r1 << 1 			  ## toy_linein_key.c:398:15
  10dc9c:    10 e7 00 01 	r0 = h[r0 + r1] 			  ## toy_linein_key.c:398:15
  10dca0:    20 00       	rts			  ## toy_linein_key.c:409:5
  10dca2:    00 00       	nop			  ## toy_linein_key.c:409:5


.GCPI322_0:
  10dca4:    f4 63 11 00     < 1139700 : 0x1163F4 >

midi_timeDiv_trigger:
  10dca8:    00 80       	r0 = 0 			  ## midi_config.c:67:0
  10dcaa:    20 00       	rts			  ## midi_config.c:68:5


midi_melody_trigger:
  10dcac:    00 80       	r0 = 0 			  ## midi_config.c:71:0
  10dcae:    20 00       	rts			  ## midi_config.c:72:5


midi_melody_stop_trigger:
  10dcb0:    00 80       	r0 = 0 			  ## midi_config.c:75:0
  10dcb2:    20 00       	rts			  ## midi_config.c:76:5


midi_beat_trigger:
  10dcb4:    00 80       	r0 = 0 			  ## midi_config.c:79:0
  10dcb6:    20 00       	rts			  ## midi_config.c:80:5


midi_mark_trigger:
  10dcb8:    00 80       	r0 = 0 			  ## midi_config.c:83:0
  10dcba:    20 00       	rts			  ## midi_config.c:84:5


wdt_clear_trigger:
  10dcbc:    1f c2       	[--sp] = {rets} 			  ## midi_config.c:87:0
  10dcbe:    fc e1 df c6 	call -26406 <wdt_clear : 10759c >			  ## midi_config.c:88:5
  10dcc2:    00 82       	r0 = 64 			  ## midi_config.c:89:5
  10dcc4:    1f c0       	{pc} = [sp++] 			  ## midi_config.c:89:5


midi_ctrl_melody_trigger:
  10dcc6:    1f c2       	[--sp] = {rets} 			  ## toy_midi_ctrl.c:285:0
  10dcc8:    40 29       	r0 = [addr(20)]  <.GCPI329_0 : 10dcdc >			  ## toy_midi_ctrl.c:286:5
  10dcca:    da e1 7f 98 	call -306418 <xprintf : c2fdc >			  ## toy_midi_ctrl.c:286:5
  10dcce:    00 29       	r0 = [addr(16)]  <.GCPI329_1 : 10dce0 >			  ## toy_midi_ctrl.c:287:27
  10dcd0:    01 50       	r1 = h[r0 + 0] 			  ## toy_midi_ctrl.c:287:27
  10dcd2:    49 d0       	r1 = r1 + 1 			  ## toy_midi_ctrl.c:287:27
  10dcd4:    01 70       	h[r0 + 0] = r1 			  ## toy_midi_ctrl.c:287:27
  10dcd6:    00 80       	r0 = 0 			  ## toy_midi_ctrl.c:288:5
  10dcd8:    1f c0       	{pc} = [sp++] 			  ## toy_midi_ctrl.c:288:5
  10dcda:    00 00       	nop			  ## toy_midi_ctrl.c:288:5


.GCPI329_0:
  10dcdc:    19 c0 11 00     < 1163289 : 0x11C019 >

.GCPI329_1:
  10dce0:    4c 63 00 00     < 25420 : 0x634C >

midi_ctrl_melody_stop_trigger:
  10dce4:    14 c2       	[--sp] = {rets, r4} 			  ## toy_midi_ctrl.c:292:0
  10dce6:    04 c6       	r4 = r0 			  ## toy_midi_ctrl.c:292:0
  10dce8:    c0 29       	r0 = [addr(28)]  <.GCPI330_0 : 10dd04 >			  ## toy_midi_ctrl.c:293:5
  10dcea:    da e1 7f 97 	call -306450 <xprintf : c2fdc >			  ## toy_midi_ctrl.c:293:5
  10dcee:    80 29       	r0 = [addr(24)]  <.GCPI330_1 : 10dd08 >			  ## toy_midi_ctrl.c:294:27
  10dcf0:    01 50       	r1 = h[r0 + 0] 			  ## toy_midi_ctrl.c:294:27
  10dcf2:    c9 d3       	r1 = r1 + -1 			  ## toy_midi_ctrl.c:294:27
  10dcf4:    01 70       	h[r0 + 0] = r1 			  ## toy_midi_ctrl.c:294:27
  10dcf6:    48 c9       	r0 = r1.l 			  ## toy_midi_ctrl.c:294:27
  10dcf8:    02 11       	ifs (nzcv != 0) goto 4 <midi_ctrl_melody_stop_trigger+0x1A : 10dcfe >			  ## toy_midi_ctrl.c:294:27
  10dcfa:    00 e2 49 80 	[r4 + 36] |= 128 			  ## toy_midi_ctrl.c:297:27
  10dcfe:    00 80       	r0 = 0 			  ## toy_midi_ctrl.c:299:5
  10dd00:    14 c0       	{pc, r4} = [sp++] 			  ## toy_midi_ctrl.c:299:5
  10dd02:    00 00       	nop			  ## toy_midi_ctrl.c:299:5


.GCPI330_0:
  10dd04:    fb bf 11 00     < 1163259 : 0x11BFFB >

.GCPI330_1:
  10dd08:    4c 63 00 00     < 25420 : 0x634C >

midi_keyboard_key_msg_filter:
  10dd0c:    03 c6       	r3 = r0 			  ## toy_midi_ctrl_key.c:255:0
  10dd0e:    10 ea ff 0f 	r0 = 4095 			  ## toy_midi_ctrl_key.c:255:0
  10dd12:    0a 98       	cmp r2, 1			  ## toy_midi_ctrl_key.c:257:5
  10dd14:    07 11       	ifs (nzcv != 0) goto 14 <midi_keyboard_key_msg_filter+0x18 : 10dd24 >			  ## toy_midi_ctrl_key.c:257:5
  10dd16:    00 fc 30 14 	r0 = r3 * 20 			  ## toy_midi_ctrl_key.c:270:15
  10dd1a:    c2 28       	r2 = [addr(12)]  <.GCPI331_0 : 10dd28 >			  ## toy_midi_ctrl_key.c:270:15
  10dd1c:    80 d4       	r0 = r0 + r2 			  ## toy_midi_ctrl_key.c:270:15
  10dd1e:    09 a1       	r1 = r1 << 1 			  ## toy_midi_ctrl_key.c:270:15
  10dd20:    10 e7 00 01 	r0 = h[r0 + r1] 			  ## toy_midi_ctrl_key.c:270:15
  10dd24:    20 00       	rts			  ## toy_midi_ctrl_key.c:276:5
  10dd26:    00 00       	nop			  ## toy_midi_ctrl_key.c:276:5


.GCPI331_0:
  10dd28:    08 62 11 00     < 1139208 : 0x116208 >

midi_msg_filter:
  10dd2c:    03 c6       	r3 = r0 			  ## toy_midi_key.c:332:0
  10dd2e:    10 ea ff 0f 	r0 = 4095 			  ## toy_midi_key.c:332:0
  10dd32:    0a 98       	cmp r2, 1			  ## toy_midi_key.c:334:5
  10dd34:    07 11       	ifs (nzcv != 0) goto 14 <midi_msg_filter+0x18 : 10dd44 >			  ## toy_midi_key.c:334:5
  10dd36:    00 fc 30 14 	r0 = r3 * 20 			  ## toy_midi_key.c:347:15
  10dd3a:    c2 28       	r2 = [addr(12)]  <.GCPI332_0 : 10dd48 >			  ## toy_midi_key.c:347:15
  10dd3c:    80 d4       	r0 = r0 + r2 			  ## toy_midi_key.c:347:15
  10dd3e:    09 a1       	r1 = r1 << 1 			  ## toy_midi_key.c:347:15
  10dd40:    10 e7 00 01 	r0 = h[r0 + r1] 			  ## toy_midi_key.c:347:15
  10dd44:    20 00       	rts			  ## toy_midi_key.c:353:5
  10dd46:    00 00       	nop			  ## toy_midi_key.c:353:5


.GCPI332_0:
  10dd48:    80 62 11 00     < 1139328 : 0x116280 >

music_msg_filter:
  10dd4c:    03 c6       	r3 = r0 			  ## toy_music_key.c:332:0
  10dd4e:    10 ea ff 0f 	r0 = 4095 			  ## toy_music_key.c:332:0
  10dd52:    0a 98       	cmp r2, 1			  ## toy_music_key.c:334:5
  10dd54:    07 11       	ifs (nzcv != 0) goto 14 <music_msg_filter+0x18 : 10dd64 >			  ## toy_music_key.c:334:5
  10dd56:    00 fc 30 14 	r0 = r3 * 20 			  ## toy_music_key.c:347:15
  10dd5a:    c2 28       	r2 = [addr(12)]  <.GCPI333_0 : 10dd68 >			  ## toy_music_key.c:347:15
  10dd5c:    80 d4       	r0 = r0 + r2 			  ## toy_music_key.c:347:15
  10dd5e:    09 a1       	r1 = r1 << 1 			  ## toy_music_key.c:347:15
  10dd60:    10 e7 00 01 	r0 = h[r0 + r1] 			  ## toy_music_key.c:347:15
  10dd64:    20 00       	rts			  ## toy_music_key.c:353:5
  10dd66:    00 00       	nop			  ## toy_music_key.c:353:5


.GCPI333_0:
  10dd68:    18 63 11 00     < 1139480 : 0x116318 >

record_key_msg_filter:
  10dd6c:    03 c6       	r3 = r0 			  ## toy_record_key.c:360:0
  10dd6e:    10 ea ff 0f 	r0 = 4095 			  ## toy_record_key.c:360:0
  10dd72:    0a 98       	cmp r2, 1			  ## toy_record_key.c:362:5
  10dd74:    07 11       	ifs (nzcv != 0) goto 14 <record_key_msg_filter+0x18 : 10dd84 >			  ## toy_record_key.c:362:5
  10dd76:    00 fc 30 14 	r0 = r3 * 20 			  ## toy_record_key.c:375:15
  10dd7a:    c2 28       	r2 = [addr(12)]  <.GCPI334_0 : 10dd88 >			  ## toy_record_key.c:375:15
  10dd7c:    80 d4       	r0 = r0 + r2 			  ## toy_record_key.c:375:15
  10dd7e:    09 a1       	r1 = r1 << 1 			  ## toy_record_key.c:375:15
  10dd80:    10 e7 00 01 	r0 = h[r0 + r1] 			  ## toy_record_key.c:375:15
  10dd84:    20 00       	rts			  ## toy_record_key.c:381:5
  10dd86:    00 00       	nop			  ## toy_record_key.c:381:5


.GCPI334_0:
  10dd88:    90 63 11 00     < 1139600 : 0x116390 >

toy_speaker_key_msg_filter:
  10dd8c:    03 c6       	r3 = r0 			  ## toy_speaker_key.c:388:0
  10dd8e:    10 ea ff 0f 	r0 = 4095 			  ## toy_speaker_key.c:388:0
  10dd92:    0a 98       	cmp r2, 1			  ## toy_speaker_key.c:390:5
  10dd94:    07 11       	ifs (nzcv != 0) goto 14 <toy_speaker_key_msg_filter+0x18 : 10dda4 >			  ## toy_speaker_key.c:390:5
  10dd96:    00 fc 30 14 	r0 = r3 * 20 			  ## toy_speaker_key.c:398:15
  10dd9a:    c2 28       	r2 = [addr(12)]  <.GCPI335_0 : 10dda8 >			  ## toy_speaker_key.c:398:15
  10dd9c:    80 d4       	r0 = r0 + r2 			  ## toy_speaker_key.c:398:15
  10dd9e:    09 a1       	r1 = r1 << 1 			  ## toy_speaker_key.c:398:15
  10dda0:    10 e7 00 01 	r0 = h[r0 + r1] 			  ## toy_speaker_key.c:398:15
  10dda4:    20 00       	rts			  ## toy_speaker_key.c:409:5
  10dda6:    00 00       	nop			  ## toy_speaker_key.c:409:5


.GCPI335_0:
  10dda8:    f4 63 11 00     < 1139700 : 0x1163F4 >

boot_info_init:
  10ddac:    01 e5 02 01 	r2, r1 = d[r0 + 4] 			  ## efuse.c:66:0
  10ddb0:    03 2a       	r3 = [addr(32)]  <.GCPI336_0 : 10ddd0 >			  ## efuse.c:68:5
  10ddb2:    41 e5 32 04 	d[r3 + 16] = r2, r1 			  ## efuse.c:68:5
  10ddb6:    01 48       	r1 = [r0 + 0] 			  ## efuse.c:69:34
  10ddb8:    8a 48       	r2 = [r1 + 8] 			  ## efuse.c:69:43
  10ddba:    9a 69       	[r3 + 24] = r2 			  ## efuse.c:69:26
  10ddbc:    c9 5a       	r1 = b[r1 + 13] 			  ## efuse.c:70:41
  10ddbe:    19 78       	b[r3 + 0] = r1 			  ## efuse.c:70:24
  10ddc0:    c1 50       	r1 = h[r0 + 12] 			  ## efuse.c:71:31
  10ddc2:    d9 71       	h[r3 + 28] = r1 			  ## efuse.c:71:23
  10ddc4:    c0 54       	r0 = h[r0 + 14] 			  ## efuse.c:72:34
  10ddc6:    d8 75       	h[r3 + 30] = r0 			  ## efuse.c:72:26
  10ddc8:    c0 28       	r0 = [addr(12)]  <.GCPI336_1 : 10ddd4 >			  ## efuse.c:73:29
  10ddca:    c0 4f       	r0 = [r0 + -4] 			  ## efuse.c:73:29
  10ddcc:    18 6a       	[r3 + 32] = r0 			  ## efuse.c:73:27
  10ddce:    20 00       	rts			  ## efuse.c:75:1


.GCPI336_0:
  10ddd0:    8c 7e 00 00     < 32396 : 0x7E8C >

.GCPI336_1:
  10ddd4:    b0 7e 00 00     < 32432 : 0x7EB0 >

norflash_init:
  10ddd8:    11 ea 94 00 	r1 = 148 			  ## vm_sfc.c:656:0
  10dddc:    82 2a       	r2 = [addr(40)]  <.GCPI337_0 : 10de04 >			  ## vm_sfc.c:658:20
  10ddde:    00 e7 23 01 	r3 = b[r2 + r1] 			  ## vm_sfc.c:658:20
  10dde2:    00 80       	r0 = 0 			  ## vm_sfc.c:658:20
  10dde4:    db 20       	if (r3 != 0) goto 26 <norflash_init+0x28 : 10de00 >
  10dde6:    80 2a       	r0 = [addr(40)]  <.GCPI337_3 : 10de10 >			  ## vm_sfc.c:664:20
  10dde8:    00 e3 00 02 	[r0 + 0] &= (~2) 			  ## vm_sfc.c:664:20
  10ddec:    08 80       	r0 = 1 			  ## vm_sfc.c:664:20
  10ddee:    40 e7 20 01 	b[r2 + r1] = r0 			  ## vm_sfc.c:666:21
  10ddf2:    41 29       	r1 = [addr(20)]  <.GCPI337_1 : 10de08 >			  ## vm_sfc.c:666:21
  10ddf4:    82 29       	r2 = [addr(24)]  <.GCPI337_2 : 10de0c >			  ## vm_sfc.c:666:21
  10ddf6:    51 d6       	r1 = r2 - r1 			  ## vm_sfc.c:666:21
  10ddf8:    0d ef 10 80 	cmp r1, 4096			  ## vm_sfc.c:666:21
  10ddfc:    90 03       	if (nzcv <= 0) {			  ## vm_sfc.c:666:21
  10ddfe:    00 80       		r0 = 0 
                               	}			  ## vm_sfc.c:666:21
  10de00:    20 00       	rts			  ## vm_sfc.c:672:1
  10de02:    00 00       	nop			  ## vm_sfc.c:672:1


.GCPI337_0:
  10de04:    60 1d 00 00     < 7520 : 0x1D60 >

.GCPI337_1:
  10de08:    00 57 11 00     < 1136384 : 0x115700 >

.GCPI337_2:
  10de0c:    6c 5f 11 00     < 1138540 : 0x115F6C >

.GCPI337_3:
  10de10:    80 00 09 00     < 589952 : 0x90080 >

norflash_open:
  10de14:    15 c2       	[--sp] = {rets, r5, r4} 			  ## vm_sfc.c:674:0
  10de16:    0c c6       	r4 = r1 			  ## vm_sfc.c:674:0
  10de18:    10 ea 94 00 	r0 = 148 			  ## vm_sfc.c:677:21
  10de1c:    c5 2a       	r5 = [addr(44)]  <.GCPI338_0 : 10de48 >			  ## vm_sfc.c:677:21
  10de1e:    00 e7 50 00 	r0 = b[r5 + r0] 			  ## vm_sfc.c:677:21
  10de22:    18 20       	if (r0 != 0) goto 2 <norflash_open+0x12 : 10de26 >			  ## vm_sfc.c:677:21
  10de24:    d9 04       	call -78 <norflash_init : 10ddd8 >			  ## vm_sfc.c:678:9
  10de26:    64 20       	if (r4 == 0) goto 12 <norflash_open+0x20 : 10de34 >
  10de28:    00 ed 50 14 	r0 = r5 + 20 			  ## vm_sfc.c:682:17
  10de2c:    20 68       	[r4 + 0] = r0 			  ## vm_sfc.c:682:17
  10de2e:    00 ed 50 84 	r0 = r5 + 132 			  ## vm_sfc.c:683:32
  10de32:    68 6a       	[r5 + 36] = r0 			  ## vm_sfc.c:683:32
  10de34:    80 29       	r0 = [addr(24)]  <.GCPI338_1 : 10de4c >			  ## vm_sfc.c:686:5
  10de36:    81 29       	r1 = [addr(24)]  <.GCPI338_2 : 10de50 >			  ## vm_sfc.c:686:5
  10de38:    09 d6       	r1 = r1 - r0 			  ## vm_sfc.c:686:5
  10de3a:    08 80       	r0 = 1 			  ## vm_sfc.c:686:5
  10de3c:    0d ef 10 80 	cmp r1, 4096			  ## vm_sfc.c:686:5
  10de40:    90 03       	if (nzcv <= 0) {			  ## vm_sfc.c:686:5
  10de42:    00 80       		r0 = 0 
                               	}			  ## vm_sfc.c:686:5
  10de44:    15 c0       	{pc, r5, r4} = [sp++] 			  ## vm_sfc.c:686:5
  10de46:    00 00       	nop			  ## vm_sfc.c:686:5


.GCPI338_0:
  10de48:    60 1d 00 00     < 7520 : 0x1D60 >

.GCPI338_1:
  10de4c:    00 57 11 00     < 1136384 : 0x115700 >

.GCPI338_2:
  10de50:    6c 5f 11 00     < 1138540 : 0x115F6C >

norflash_read:
  10de54:    16 c2       	[--sp] = {rets, r6-r4} 			  ## vm_sfc.c:689:0
  10de56:    14 c6       	r4 = r2 			  ## vm_sfc.c:689:0
  10de58:    0d c6       	r5 = r1 			  ## vm_sfc.c:689:0
  10de5a:    06 2e       	r6 = [addr(96)]  <.GCPI340_0 : 10debc >			  ## vm_sfc.c:692:33
  10de5c:    20 e8 60 2c 	r0 = [r6 + 176] 			  ## vm_sfc.c:692:33
  10de60:    03 ce       	cmp r0, r3			  ## vm_sfc.c:692:9
  10de62:    14 19       	if (nzcv <= 0) goto 40 <norflash_read+0x38 : 10de8c >			  ## vm_sfc.c:692:9
  10de64:    28 c6       	r0 = r5 			  ## vm_sfc.c:694:9
  10de66:    19 c6       	r1 = r3 			  ## vm_sfc.c:694:9
  10de68:    22 c6       	r2 = r4 			  ## vm_sfc.c:694:9
  10de6a:    03 e1 d0 f2 	call 32346 <_norflash_read : 115cc8 >			  ## vm_sfc.c:694:9
  10de6e:    10 ea 95 00 	r0 = 149 			  ## vm_sfc.c:697:24
  10de72:    00 e7 60 00 	r0 = b[r6 + r0] 			  ## vm_sfc.c:697:24
  10de76:    00 f4 00 01 	tst r0, 1			  ## vm_sfc.c:697:13
  10de7a:    1d 11       	ifs (nzcv != 0) goto 58 <norflash_read+0x62 : 10deb6 >			  ## vm_sfc.c:697:13
  10de7c:    10 ea ff ff 	r0 = 65535 			  ## vm_sfc.c:700:13
  10de80:    29 c6       	r1 = r5 			  ## vm_sfc.c:700:13
  10de82:    22 c6       	r2 = r4 			  ## vm_sfc.c:700:13
  10de84:    03 80       	r3 = 0 			  ## vm_sfc.c:700:13
  10de86:    da e1 df 8a 	call -306854 <doe : c2fe4 >			  ## vm_sfc.c:700:13
  10de8a:    15 08       	goto 42 <norflash_read+0x62 : 10deb6 >			  ## vm_sfc.c:700:13
  10de8c:    10 ea 95 00 	r0 = 149 			  ## vm_sfc.c:706:24
  10de90:    00 e7 60 00 	r0 = b[r6 + r0] 			  ## vm_sfc.c:706:24
  10de94:    00 f4 00 01 	tst r0, 1			  ## vm_sfc.c:706:13
  10de98:    09 11       	ifs (nzcv != 0) goto 18 <norflash_read+0x58 : 10deac >			  ## vm_sfc.c:706:13
  10de9a:    18 c6       	r0 = r3 			  ## vm_sfc.c:711:39
  10de9c:    03 e1 40 c4 	call 30856 <flash_addr2cpu_addr.645 : 115728 >			  ## vm_sfc.c:711:39
  10dea0:    01 c6       	r1 = r0 			  ## vm_sfc.c:711:39
  10dea2:    28 c6       	r0 = r5 			  ## vm_sfc.c:711:13
  10dea4:    22 c6       	r2 = r4 			  ## vm_sfc.c:711:13
  10dea6:    da e1 3f 85 	call -307034 <memcpy : c2f50 >			  ## vm_sfc.c:711:13
  10deaa:    05 08       	goto 10 <norflash_read+0x62 : 10deb6 >
  10deac:    28 c6       	r0 = r5 			  ## vm_sfc.c:708:13
  10deae:    19 c6       	r1 = r3 			  ## vm_sfc.c:708:13
  10deb0:    22 c6       	r2 = r4 			  ## vm_sfc.c:708:13
  10deb2:    03 e1 90 f0 	call 32274 <_norflash_read : 115cc8 >			  ## vm_sfc.c:708:13
  10deb6:    20 c6       	r0 = r4 			  ## vm_sfc.c:715:5
  10deb8:    16 c0       	{pc, r6-r4} = [sp++] 			  ## vm_sfc.c:715:5
  10deba:    00 00       	nop			  ## vm_sfc.c:715:5


.GCPI340_0:
  10debc:    60 1d 00 00     < 7520 : 0x1D60 >

norflash_write:
  10dec0:    17 c2       	[--sp] = {rets, r7-r4} 			  ## vm_sfc.c:772:0
  10dec2:    fc cd       	sp += -4 			  ## vm_sfc.c:772:0
  10dec4:    1d c6       	r5 = r3 			  ## vm_sfc.c:772:0
  10dec6:    14 c6       	r4 = r2 			  ## vm_sfc.c:772:0
  10dec8:    0e c6       	r6 = r1 			  ## vm_sfc.c:772:0
  10deca:    29 d5       	r1 = r5 + r4 			  ## vm_sfc.c:775:17
  10decc:    00 2d       	r0 = [addr(80)]  <.GCPI342_0 : 10df1c >			  ## vm_sfc.c:775:37
  10dece:    20 e8 02 26 	r2 = [r0 + 152] 			  ## vm_sfc.c:775:37
  10ded2:    00 80       	r0 = 0 			  ## vm_sfc.c:775:37
  10ded4:    0a ce       	cmp r1, r2			  ## vm_sfc.c:775:9
  10ded6:    1f 18       	if (nzcv > 0) goto 62 <norflash_write+0x56 : 10df16 >			  ## vm_sfc.c:775:9
  10ded8:    28 c9       	r0 = r5.b 			  ## vm_sfc.c:789:40
  10deda:    2f ee 07 80 	r7 = 256 - r0 			  ## vm_sfc.c:789:30
  10dede:    3c ce       	cmp r7, r4			  ## vm_sfc.c:791:22
  10dee0:    20 03       	if (nzcv >= 0) {			  ## vm_sfc.c:791:22
  10dee2:    27 c6       		r7 = r4 
                               	}			  ## vm_sfc.c:791:22
  10dee4:    30 c6       	r0 = r6 			  ## vm_sfc.c:792:5
  10dee6:    29 c6       	r1 = r5 			  ## vm_sfc.c:792:5
  10dee8:    3a c6       	r2 = r7 			  ## vm_sfc.c:792:5
  10deea:    03 e1 d0 ef 	call 32250 <_norflash_write : 115ce8 >			  ## vm_sfc.c:792:5
  10deee:    ed d5       	r5 = r5 + r7 			  ## vm_sfc.c:796:12
  10def0:    f6 d5       	r6 = r6 + r7 			  ## vm_sfc.c:795:10
  10def2:    04 60       	[sp] = r4 
  10def4:    0d 08       	goto 26 <norflash_write+0x50 : 10df10 >
  10def6:    81 ef 40 00 	cmp r4, 256			  ## vm_sfc.c:799:19
  10defa:    27 c6       	r7 = r4 			  ## vm_sfc.c:799:19
  10defc:    a0 03       	ifs (nzcv >= 0) {			  ## vm_sfc.c:799:19
  10defe:    17 ea 00 01 		r7 = 256 
                               	}			  ## vm_sfc.c:799:19
  10df02:    30 c6       	r0 = r6 			  ## vm_sfc.c:800:9
  10df04:    29 c6       	r1 = r5 			  ## vm_sfc.c:800:9
  10df06:    3a c6       	r2 = r7 			  ## vm_sfc.c:800:9
  10df08:    03 e1 e0 ee 	call 32220 <_norflash_write : 115ce8 >			  ## vm_sfc.c:800:9
  10df0c:    f6 d5       	r6 = r6 + r7 			  ## vm_sfc.c:803:14
  10df0e:    ed d5       	r5 = r5 + r7 			  ## vm_sfc.c:802:16
  10df10:    e4 d7       	r4 = r4 - r7 
  10df12:    f1 11       	ifs (nzcv != 0) goto -30 <norflash_write+0x36 : 10def6 >
  10df14:    00 40       	r0 = [sp] 
  10df16:    04 cd       	sp += 4 
  10df18:    17 c0       	{pc, r7-r4} = [sp++] 
  10df1a:    00 00       	nop


.GCPI342_0:
  10df1c:    60 1d 00 00     < 7520 : 0x1D60 >

_pow:
  10df20:    01 c6       	r1 = r0 			  ## vm_sfc.c:588:0
  10df22:    08 80       	r0 = 1 			  ## vm_sfc.c:588:0
  10df24:    0a 80       	r2 = 1 			  ## vm_sfc.c:588:0
  10df26:    11 ce       	cmp r2, r1			  ## vm_sfc.c:591:5
  10df28:    c0 03       	ifs (nzcv > 0) {			  ## vm_sfc.c:594:5
  10df2a:    20 00       		rts
                               	}			  ## vm_sfc.c:594:5
  10df2c:    52 d0       	r2 = r2 + 1 			  ## vm_sfc.c:591:26
  10df2e:    00 a1       	r0 = r0 << 1 			  ## vm_sfc.c:592:16
  10df30:    fa 0f       	goto -12 <_pow+0x6 : 10df26 >


get_random:
  10df32:    00 29       	r0 = [addr(16)]  <.GCPI348_0 : 10df44 >			  ## key0_decode.c:42:0
  10df34:    00 48       	r0 = [r0 + 0] 			  ## key0_decode.c:48:32
  10df36:    01 29       	r1 = [addr(16)]  <.GCPI348_1 : 10df48 >			  ## key0_decode.c:48:32
  10df38:    8a 4f       	r2 = [r1 + -8] 			  ## key0_decode.c:48:52
  10df3a:    80 d4       	r0 = r0 + r2 			  ## key0_decode.c:48:41
  10df3c:    49 48       	r1 = [r1 + 4] 			  ## key0_decode.c:48:67
  10df3e:    40 d4       	r0 = r0 + r1 			  ## key0_decode.c:48:56
  10df40:    20 00       	rts			  ## key0_decode.c:48:5
  10df42:    00 00       	nop			  ## key0_decode.c:48:5


.GCPI348_0:
  10df44:    e4 00 08 00     < 524516 : 0x800E4 >

.GCPI348_1:
  10df48:    0c 04 09 00     < 590860 : 0x9040C >

norflash_get_otp_info:
  10df4c:    14 c2       	[--sp] = {rets, r4} 			  ## vm_sfc.c:1964:0
  10df4e:    80 2d       	r0 = [addr(88)]  <.GCPI349_0 : 10dfa8 >			  ## vm_sfc.c:1972:70
  10df50:    20 e8 00 26 	r0 = [r0 + 152] 			  ## vm_sfc.c:1972:70
  10df54:    1f ed 00 00 	r0 = r0 + -256 			  ## vm_sfc.c:1972:85
  10df58:    03 e1 60 be 	call 30668 <flash_addr2cpu_addr.645 : 115728 >			  ## vm_sfc.c:1972:39
  10df5c:    04 c6       	r4 = r0 			  ## vm_sfc.c:1972:39
  10df5e:    04 e8 01 80 	r1 = b[++ r0 = 2] 			  ## vm_sfc.c:1942:32
  10df62:    22 5e       	r2 = b[r4 + 3] 			  ## vm_sfc.c:1942:32
  10df64:    12 a8       	r2 = r2 << 8 			  ## vm_sfc.c:1942:32
  10df66:    11 da       	r1 |= r2 			  ## vm_sfc.c:1942:32
  10df68:    89 d0       	r1 = r1 + 2 			  ## vm_sfc.c:1942:39
  10df6a:    fb e1 8f fb 	call -32912 <CRC16 : 105ede >			  ## vm_sfc.c:1942:15
  10df6e:    01 c6       	r1 = r0 			  ## vm_sfc.c:1942:15
  10df70:    20 5a       	r0 = b[r4 + 1] 			  ## vm_sfc.c:1943:19
  10df72:    22 58       	r2 = b[r4 + 0] 			  ## vm_sfc.c:1943:19
  10df74:    41 f6 02 08 	r2 <= insert(r0, p:8, l:8) 			  ## vm_sfc.c:1943:19
  10df78:    40 2b       	r0 = [addr(52)]  <.GCPI349_1 : 10dfac >			  ## vm_sfc.c:1943:19
  10df7a:    0a ce       	cmp r1, r2			  ## vm_sfc.c:1943:9
  10df7c:    14 11       	ifs (nzcv != 0) goto 40 <norflash_get_otp_info+0x5A : 10dfa6 >			  ## vm_sfc.c:1943:9
  10df7e:    62 58       	r2 = b[r4 + 4] 			  ## vm_sfc.c:1948:12
  10df80:    09 80       	r1 = 1 			  ## vm_sfc.c:1948:12
  10df82:    80 ef 20 a1 	cmp r2, 161			  ## vm_sfc.c:1948:12
  10df86:    0b 80       	r3 = 1 			  ## vm_sfc.c:1948:12
  10df88:    10 03       	ifs (nzcv != 0) {			  ## vm_sfc.c:1948:12
  10df8a:    03 80       		r3 = 0 
                               	}			  ## vm_sfc.c:1948:12
  10df8c:    1b a1       	r3 = r3 << 1 			  ## vm_sfc.c:1975:9
  10df8e:    80 ef 20 a0 	cmp r2, 160			  ## vm_sfc.c:1975:9
  10df92:    10 03       	ifs (nzcv != 0) {			  ## vm_sfc.c:1975:9
  10df94:    19 c6       		r1 = r3 
                               	}			  ## vm_sfc.c:1975:9
  10df96:    11 98       	cmp r1, 2			  ## vm_sfc.c:1975:9
  10df98:    05 10       	ifs (nzcv == 0) goto 10 <norflash_get_otp_info+0x58 : 10dfa4 >			  ## vm_sfc.c:1975:9
  10df9a:    19 98       	cmp r1, 3
  10df9c:    11 03       	ifs (nzcv != 0) {
  10df9e:    00 80       		r0 = 0 
  10dfa0:    14 c0       		{pc, r4} = [sp++] 
                               	}
  10dfa2:    01 08       	goto 2 <norflash_get_otp_info+0x5A : 10dfa6 >
  10dfa4:    20 c6       	r0 = r4 
  10dfa6:    14 c0       	{pc, r4} = [sp++] 


.GCPI349_0:
  10dfa8:    60 1d 00 00     < 7520 : 0x1D60 >

.GCPI349_1:
  10dfac:    64 64 11 00     < 1139812 : 0x116464 >

norflash_ioctl:
  10dfb0:    1e c2       	[--sp] = {rets, r14-r4} 			  ## vm_sfc.c:1221:0
  10dfb2:    d4 cd       	sp += -44 			  ## vm_sfc.c:1221:0
  10dfb4:    15 c6       	r5 = r2 			  ## vm_sfc.c:1221:0
  10dfb6:    1f ed 10 9c 	r0 = r1 + -100 			  ## vm_sfc.c:1225:5
  10dfba:    04 80       	r4 = 0 
  10dfbc:    18 98       	cmp r0, 3			  ## vm_sfc.c:1225:5
  10dfbe:    21 19       	if (nzcv <= 0) goto 66 <norflash_ioctl+0x52 : 10e002 >			  ## vm_sfc.c:1225:5
  10dfc0:    1f ed 10 38 	r0 = r1 + -200 
  10dfc4:    10 98       	cmp r0, 2
  10dfc6:    34 13       	if (nzcv < 0) goto 104 <.GJTIE351_0_0_+0x22 : 10e030 >
  10dfc8:    79 99       	cmp r1, 47
  10dfca:    38 10       	ifs (nzcv == 0) goto 112 <.GJTIE351_0_0_+0x2E : 10e03c >
  10dfcc:    81 99       	cmp r1, 48
  10dfce:    3e 10       	ifs (nzcv == 0) goto 124 <.GJTIE351_0_0_+0x3E : 10e04c >
  10dfd0:    80 ef 10 cb 	cmp r1, 203
  10dfd4:    00 fb 80 22 	ifs (nzcv == 0) goto 1104 <.GJTIE351_0_0_+0x41A : 10e428 >
  10dfd8:    80 ef 10 cc 	cmp r1, 204
  10dfdc:    29 10       	ifs (nzcv == 0) goto 82 <.GJTIE351_0_0_+0x22 : 10e030 >
  10dfde:    20 e4 10 1c 	r0 = [addr(1136)]  <.GCPI351_8 : 10e450 >
  10dfe2:    08 ce       	cmp r1, r0
  10dfe4:    47 10       	ifs (nzcv == 0) goto 142 <.GJTIE351_0_0_+0x66 : 10e074 >
  10dfe6:    20 e4 10 1b 	r0 = [addr(1132)]  <.GCPI351_9 : 10e454 >
  10dfea:    08 ce       	cmp r1, r0
  10dfec:    00 fb 81 0c 	ifs (nzcv != 0) goto 400 <.GJTIE351_0_0_+0x172 : 10e180 >
  10dff0:    20 e4 10 0f 	r0 = [addr(1084)]  <.GCPI351_0 : 10e430 >			  ## vm_sfc.c:1275:9
  10dff4:    00 ed 01 a0 	r1 = r0 + 160 			  ## vm_sfc.c:1275:9
  10dff8:    28 c6       	r0 = r5 			  ## vm_sfc.c:1275:9
  10dffa:    82 80       	r2 = 16 			  ## vm_sfc.c:1275:9
  10dffc:    da e1 8f 7a 	call -307376 <memcpy : c2f50 >			  ## vm_sfc.c:1275:9
  10e000:    13 0a       	goto 1062 <.GJTIE351_0_0_+0x41A : 10e428 >			  ## vm_sfc.c:1275:9
  10e002:    01 a1       	r1 = r0 << 1 
  10e004:    b9 01       	tbh [r1]


.GJTIL351_0_0_:
  10e006:    04 00     < 4 : 0x4 >
  10e008:    bf 00     < 191 : 0xBF >
  10e00a:    c2 00     < 194 : 0xC2 >
  10e00c:    c5 00     < 197 : 0xC5 >
  10e00e:    20 e4 16 08 	r6 = [addr(1056)]  <.GCPI351_0 : 10e430 >			  ## vm_sfc.c:1248:24
  10e012:    20 e8 63 27 	r3 = [r6 + 156] 			  ## vm_sfc.c:1248:24
  10e016:    ab 20       	if (r3 != 0) goto 20 <.GJTIE351_0_0_+0x1E : 10e02c >			  ## vm_sfc.c:1248:24
  10e018:    03 e1 20 ea 	call 32068 <read_flash_id : 115d60 >			  ## vm_sfc.c:1249:13
  10e01c:    24 e8 63 27 	r3 = [++ r6 = 156] 			  ## vm_sfc.c:1250:66
  10e020:    18 c9       	r0 = r3.b 			  ## vm_sfc.c:1250:75
  10e022:    80 8f       	r0 += -16 			  ## vm_sfc.c:1250:83
  10e024:    ff e1 cf f7 	call -264 <_pow : 10df20 >			  ## vm_sfc.c:1250:46
  10e028:    00 b0       	r0 = r0 << 16 			  ## vm_sfc.c:1250:91
  10e02a:    f0 6f       	[r6 + -4] = r0 			  ## vm_sfc.c:1250:39
  10e02c:    2b 68       	[r5 + 0] = r3 			  ## vm_sfc.c:1252:23
  10e02e:    fc 09       	goto 1016 <.GJTIE351_0_0_+0x41A : 10e428 >			  ## vm_sfc.c:1252:23
  10e030:    08 c6       	r0 = r1 			  ## vm_sfc.c:1258:15
  10e032:    29 c6       	r1 = r5 			  ## vm_sfc.c:1258:15
  10e034:    03 e1 20 ee 	call 32196 <norflash_erase : 115dfc >			  ## vm_sfc.c:1258:15
  10e038:    04 c6       	r4 = r0 			  ## vm_sfc.c:1258:15
  10e03a:    f6 09       	goto 1004 <.GJTIE351_0_0_+0x41A : 10e428 >
  10e03c:    05 98       	cmp r5, 0
  10e03e:    00 fb 30 1f 	ifs (nzcv == 0) goto 998 <.GJTIE351_0_0_+0x41A : 10e428 >
  10e042:    20 e4 00 fd 	r0 = [addr(1012)]  <.GCPI351_2 : 10e438 >			  ## vm_sfc.c:1280:35
  10e046:    60 e8 05 12 	[r0 + 72] = r5 			  ## vm_sfc.c:1280:35
  10e04a:    ee 09       	goto 988 <.GJTIE351_0_0_+0x41A : 10e428 >			  ## vm_sfc.c:1280:35
  10e04c:    20 e4 00 f8 	r0 = [addr(992)]  <.GCPI351_0 : 10e430 >
  10e050:    00 ed 01 95 	r1 = r0 + 149 
  10e054:    0a 58       	r2 = b[r1 + 0] 
  10e056:    00 f3 21 01 	r1 = r2 | 1 			  ## vm_sfc.c:1285:29
  10e05a:    02 db       	r2 &= (~1)			  ## vm_sfc.c:1287:29
  10e05c:    1d 20       	if (r5 != 0) goto 2 <.GJTIE351_0_0_+0x52 : 10e060 >			  ## vm_sfc.c:1287:29
  10e05e:    11 c6       	r1 = r2 			  ## vm_sfc.c:1284:13
  10e060:    12 ea 95 00 	r2 = 149 
  10e064:    40 e7 01 02 	b[r0 + r2] = r1 
  10e068:    09 c9       	r1 = r1.b 			  ## vm_sfc.c:1289:9
  10e06a:    20 e4 00 f2 	r0 = [addr(968)]  <.GCPI351_1 : 10e434 >			  ## vm_sfc.c:1289:9
  10e06e:    da e1 5f 7b 	call -307350 <xprintf : c2fdc >			  ## vm_sfc.c:1289:9
  10e072:    da 09       	goto 948 <.GJTIE351_0_0_+0x41A : 10e428 >			  ## vm_sfc.c:1289:9
  10e074:    4d 20       	if (r5 != 0) goto 8 <.GJTIE351_0_0_+0x70 : 10e07e >
  10e076:    20 e4 00 f1 	r0 = [addr(964)]  <.GCPI351_3 : 10e43c >			  ## vm_sfc.c:1195:5
  10e07a:    da e1 ff 7a 	call -307362 <xprintf : c2fdc >			  ## vm_sfc.c:1195:5
  10e07e:    e8 48       	r0 = [r5 + 12] 			  ## vm_sfc.c:1199:5
  10e080:    20 e4 09 eb 	r9 = [addr(940)]  <.GCPI351_0 : 10e430 >			  ## vm_sfc.c:1199:5
  10e084:    8c c6       	r4 = r9 			  ## vm_sfc.c:1199:5
  10e086:    64 e8 40 2b 	[++ r4 = 172] = r0 			  ## vm_sfc.c:1199:5
  10e08a:    a8 48       	r0 = [r5 + 8] 			  ## vm_sfc.c:1199:5
  10e08c:    e0 6f       	[r4 + -4] = r0 			  ## vm_sfc.c:1199:5
  10e08e:    68 48       	r0 = [r5 + 4] 			  ## vm_sfc.c:1199:5
  10e090:    a0 6f       	[r4 + -8] = r0 			  ## vm_sfc.c:1199:5
  10e092:    28 48       	r0 = [r5 + 0] 			  ## vm_sfc.c:1199:5
  10e094:    60 6f       	[r4 + -12] = r0 			  ## vm_sfc.c:1199:5
  10e096:    00 e5 51 04 	r1, r0 = d[r5 + 16] 			  ## vm_sfc.c:1200:5
  10e09a:    40 e5 41 01 	d[r4 + 4] = r1, r0 			  ## vm_sfc.c:1200:5
  10e09e:    a3 4f       	r3 = [r4 + -8] 			  ## vm_sfc.c:1206:5
  10e0a0:    18 c6       	r0 = r3 			  ## vm_sfc.c:1206:5
  10e0a2:    03 e1 10 b4 	call 30338 <flash_addr2cpu_addr.645 : 115728 >			  ## vm_sfc.c:1206:5
  10e0a6:    01 c6       	r1 = r0 			  ## vm_sfc.c:1206:5
  10e0a8:    20 e4 00 e5 	r0 = [addr(916)]  <.GCPI351_4 : 10e440 >			  ## vm_sfc.c:1206:5
  10e0ac:    1a c6       	r2 = r3 			  ## vm_sfc.c:1206:5
  10e0ae:    da e1 5f 79 	call -307414 <xprintf : c2fdc >			  ## vm_sfc.c:1206:5
  10e0b2:    21 4f       	r1 = [r4 + -16] 			  ## vm_sfc.c:1207:5
  10e0b4:    20 e4 00 e3 	r0 = [addr(908)]  <.GCPI351_5 : 10e444 >			  ## vm_sfc.c:1207:5
  10e0b8:    da e1 0f 79 	call -307424 <xprintf : c2fdc >			  ## vm_sfc.c:1207:5
  10e0bc:    e1 4e       	r1 = [r4 + -20] 			  ## vm_sfc.c:1208:5
  10e0be:    20 e4 00 e2 	r0 = [addr(904)]  <.GCPI351_6 : 10e448 >			  ## vm_sfc.c:1208:5
  10e0c2:    da e1 bf 78 	call -307434 <xprintf : c2fdc >			  ## vm_sfc.c:1208:5
  10e0c6:    a3 4f       	r3 = [r4 + -8] 			  ## vm_sfc.c:1210:60
  10e0c8:    18 c6       	r0 = r3 			  ## vm_sfc.c:1210:26
  10e0ca:    03 e1 d0 b2 	call 30298 <flash_addr2cpu_addr.645 : 115728 >			  ## vm_sfc.c:1210:26
  10e0ce:    20 e4 01 e2 	r1 = [addr(904)]  <.GCPI351_10 : 10e458 >			  ## vm_sfc.c:1210:26
  10e0d2:    48 68       	[r1 + 4] = r0 			  ## vm_sfc.c:1210:24
  10e0d4:    20 e4 00 e1 	r0 = [addr(900)]  <.GCPI351_11 : 10e45c >			  ## vm_sfc.c:1211:24
  10e0d8:    08 68       	[r1 + 0] = r0 			  ## vm_sfc.c:1211:24
  10e0da:    f0 e2 1e 02 	[r1 + -8] |= 2 			  ## vm_sfc.c:1213:21
  10e0de:    18 c6       	r0 = r3 			  ## vm_sfc.c:1215:5
  10e0e0:    03 e1 e0 ed 	call 32188 <sfc_drop_cache_api : 115ea0 >			  ## vm_sfc.c:1215:5
  10e0e4:    44 90       	r4 = sp + 8 			  ## vm_sfc.c:1215:5
  10e0e6:    20 c6       	r0 = r4 			  ## key0_decode.c:221:5
  10e0e8:    03 e1 f0 ee 	call 32222 <norflash_get_uuid : 115eca >			  ## key0_decode.c:221:5
  10e0ec:    00 ed 95 84 	r5 = r9 + 132 			  ## vm_sfc.c:1199:5
  10e0f0:    28 c6       	r0 = r5 			  ## key0_decode.c:223:9
  10e0f2:    21 c6       	r1 = r4 			  ## key0_decode.c:223:9
  10e0f4:    82 80       	r2 = 16 			  ## key0_decode.c:223:9
  10e0f6:    da e1 ff 72 	call -307618 <memcmp : c2f58 >			  ## key0_decode.c:223:9
  10e0fa:    f0 20       	if (r0 == 0) goto 30 <.GJTIE351_0_0_+0x10C : 10e11a >			  ## key0_decode.c:223:9
  10e0fc:    ff e1 9f f1 	call -462 <get_random : 10df32 >			  ## key0_decode.c:224:38
  10e100:    03 c6       	r3 = r0 			  ## key0_decode.c:224:38
  10e102:    ff e1 6f f1 	call -468 <get_random : 10df32 >			  ## key0_decode.c:224:18
  10e106:    80 f3 00 07 	r0 = r0 & 7 			  ## key0_decode.c:224:31
  10e10a:    00 a2       	r0 = r0 << 2 			  ## key0_decode.c:224:9
  10e10c:    20 e4 06 cf 	r6 = [addr(828)]  <.GCPI351_7 : 10e44c >			  ## key0_decode.c:224:9
  10e110:    60 e7 63 00 	[r6 + r0] = r3 			  ## key0_decode.c:224:36
  10e114:    ff e1 df f0 	call -486 <get_random : 10df32 >			  ## key0_decode.c:225:37
  10e118:    f0 68       	[r6 + 12] = r0 			  ## key0_decode.c:225:35
  10e11a:    ff e1 af f0 	call -492 <get_random : 10df32 >			  ## key0_decode.c:227:20
  10e11e:    11 ea ff ff 	r1 = 65535 			  ## key0_decode.c:228:18
  10e122:    00 ee 0a 01 	r10 = r0 + r1 			  ## key0_decode.c:229:18
  10e126:    01 ce       	cmp r0, r1			  ## key0_decode.c:228:9
  10e128:    20 03       	if (nzcv >= 0) {			  ## key0_decode.c:228:9
  10e12a:    42 c6       		r10 = r0 
                               	}			  ## key0_decode.c:228:9
  10e12c:    0b ef a0 80 	cmp r10, 65536			  ## vm_sfc.c:2054:36
  10e130:    40 13       	if (nzcv < 0) goto 128 <.GJTIE351_0_0_+0x1A4 : 10e1b2 >			  ## vm_sfc.c:2054:36
  10e132:    00 80       	r0 = 0 
  10e134:    08 08       	goto 16 <.GJTIE351_0_0_+0x138 : 10e146 >
  10e136:    00 ee 91 00 	r1 = r9 + r0 			  ## vm_sfc.c:2059:22
  10e13a:    00 ed 11 84 	r1 = r1 + 132 			  ## vm_sfc.c:2059:22
  10e13e:    09 58       	r1 = b[r1 + 0] 			  ## vm_sfc.c:2059:22
  10e140:    40 e7 41 00 	b[r4 + r0] = r1 			  ## vm_sfc.c:2059:20
  10e144:    40 d0       	r0 = r0 + 1 			  ## vm_sfc.c:2058:34
  10e146:    80 98       	cmp r0, 16			  ## vm_sfc.c:2058:9
  10e148:    f6 11       	ifs (nzcv != 0) goto -20 <.GJTIE351_0_0_+0x128 : 10e136 >			  ## vm_sfc.c:2058:9
  10e14a:    00 ed 46 12 	r6 = r4 + 18 			  ## vm_sfc.c:2061:18
  10e14e:    03 80       	r3 = 0 			  ## vm_sfc.c:2061:18
  10e150:    05 08       	goto 10 <.GJTIE351_0_0_+0x14E : 10e15c >			  ## vm_sfc.c:2061:18
  10e152:    ff e1 ef ee 	call -548 <get_random : 10df32 >			  ## vm_sfc.c:2062:22
  10e156:    40 e7 60 03 	b[r6 + r3] = r0 			  ## vm_sfc.c:2062:20
  10e15a:    5b d0       	r3 = r3 + 1 			  ## vm_sfc.c:2061:9
  10e15c:    73 98       	cmp r3, 14			  ## vm_sfc.c:2061:9
  10e15e:    f9 11       	ifs (nzcv != 0) goto -14 <.GJTIE351_0_0_+0x144 : 10e152 >			  ## vm_sfc.c:2061:9
  10e160:    28 c6       	r0 = r5 			  ## vm_sfc.c:2064:20
  10e162:    81 80       	r1 = 16 			  ## vm_sfc.c:2064:20
  10e164:    fb e1 bf eb 	call -33418 <CRC16 : 105ede >			  ## vm_sfc.c:2064:20
  10e168:    05 c6       	r5 = r0 			  ## vm_sfc.c:2064:20
  10e16a:    30 c6       	r0 = r6 			  ## vm_sfc.c:2065:20
  10e16c:    81 80       	r1 = 16 			  ## vm_sfc.c:2065:20
  10e16e:    fb e1 6f eb 	call -33428 <CRC16 : 105ede >			  ## vm_sfc.c:2065:20
  10e172:    68 da       	r0 ^= r5 			  ## vm_sfc.c:2065:20
  10e174:    40 e9 00 06 	b[sp+ 24] = r0 			  ## vm_sfc.c:2067:17
  10e178:    40 a8       	r0 = r0 >> 8 			  ## vm_sfc.c:2068:19
  10e17a:    40 e9 40 06 	b[sp+ 25] = r0 			  ## vm_sfc.c:2068:17
  10e17e:    09 09       	goto 530 <.GJTIE351_0_0_+0x384 : 10e392 >			  ## vm_sfc.c:2068:17
  10e180:    3c 87       	r4 = -25 
  10e182:    52 09       	goto 676 <.GJTIE351_0_0_+0x41A : 10e428 >
  10e184:    10 ea 00 01 	r0 = 256 			  ## vm_sfc.c:1227:23
  10e188:    12 08       	goto 36 <.GJTIE351_0_0_+0x1A0 : 10e1ae >			  ## vm_sfc.c:1227:23
  10e18a:    2b ea 00 80 	r0 = 65536 			  ## vm_sfc.c:1230:23
  10e18e:    0f 08       	goto 30 <.GJTIE351_0_0_+0x1A0 : 10e1ae >			  ## vm_sfc.c:1230:23
  10e190:    20 e4 06 a7 	r6 = [addr(668)]  <.GCPI351_0 : 10e430 >			  ## vm_sfc.c:1234:24
  10e194:    20 e8 60 26 	r0 = [r6 + 152] 			  ## vm_sfc.c:1234:24
  10e198:    a8 20       	if (r0 != 0) goto 20 <.GJTIE351_0_0_+0x1A0 : 10e1ae >			  ## vm_sfc.c:1234:24
  10e19a:    03 e1 10 de 	call 31682 <read_flash_id : 115d60 >			  ## vm_sfc.c:1235:13
  10e19e:    00 ed 63 9c 	r3 = r6 + 156 			  ## vm_sfc.c:1235:13
  10e1a2:    18 58       	r0 = b[r3 + 0] 			  ## vm_sfc.c:1237:66
  10e1a4:    80 8f       	r0 += -16 			  ## vm_sfc.c:1237:83
  10e1a6:    ff e1 bf eb 	call -650 <_pow : 10df20 >			  ## vm_sfc.c:1237:46
  10e1aa:    00 b0       	r0 = r0 << 16 			  ## vm_sfc.c:1237:91
  10e1ac:    d8 6f       	[r3 + -4] = r0 			  ## vm_sfc.c:1237:39
  10e1ae:    28 68       	[r5 + 0] = r0 
  10e1b0:    3b 09       	goto 630 <.GJTIE351_0_0_+0x41A : 10e428 >
  10e1b2:    ff e1 bf ec 	call -618 <norflash_get_otp_info : 10df4c >			  ## vm_sfc.c:1988:37
  10e1b6:    00 98       	cmp r0, 0
  10e1b8:    00 fb b0 0e 	ifs (nzcv == 0) goto 470 <.GJTIE351_0_0_+0x384 : 10e392 >
  10e1bc:    c1 5c       	r1 = b[r0 + 14] 			  ## vm_sfc.c:1992:31
  10e1be:    c2 5a       	r2 = b[r0 + 13] 			  ## vm_sfc.c:1992:31
  10e1c0:    41 f6 12 08 	r2 <= insert(r1, p:8, l:8) 			  ## vm_sfc.c:1992:31
  10e1c4:    c1 58       	r1 = b[r0 + 12] 			  ## vm_sfc.c:1994:43
  10e1c6:    80 5e       	r0 = b[r0 + 11] 			  ## vm_sfc.c:1994:43
  10e1c8:    41 f6 10 08 	r0 <= insert(r1, p:8, l:8) 			  ## vm_sfc.c:1994:43
  10e1cc:    80 fc 0c 02 	r12 = r0 * r2 			  ## vm_sfc.c:1994:41
  10e1d0:    8f ef c0 ff 	cmp r12, -1			  ## vm_sfc.c:2072:9
  10e1d4:    00 fb d0 0d 	ifs (nzcv == 0) goto 442 <.GJTIE351_0_0_+0x384 : 10e392 >			  ## vm_sfc.c:2072:9
  10e1d8:    43 f3 a0 5a 	r0 = r10 ^ 1515870810 			  ## key0_decode.c:231:30
  10e1dc:    40 60       	[sp+ 4] = r0 
  10e1de:    60 da       	r0 ^= r4 			  ## key0_decode.c:233:41
  10e1e0:    00 60       	[sp] = r0 
  10e1e2:    56 ea 00 00 	r14 = 0 
  10e1e6:    17 ea ff 0f 	r7 = 4095 
  10e1ea:    6c 08       	goto 216 <.GJTIE351_0_0_+0x2B6 : 10e2c4 >
  10e1ec:    ff e1 ef ea 	call -676 <norflash_get_otp_info : 10df4c >			  ## vm_sfc.c:2001:37
  10e1f0:    00 98       	cmp r0, 0
  10e1f2:    5e 10       	ifs (nzcv == 0) goto 188 <.GJTIE351_0_0_+0x2A2 : 10e2b0 >
  10e1f4:    c1 5c       	r1 = b[r0 + 14] 			  ## vm_sfc.c:2006:31
  10e1f6:    c5 5a       	r5 = b[r0 + 13] 			  ## vm_sfc.c:2006:31
  10e1f8:    41 f6 15 08 	r5 <= insert(r1, p:8, l:8) 			  ## vm_sfc.c:2006:31
  10e1fc:    c1 58       	r1 = b[r0 + 12] 			  ## vm_sfc.c:2008:43
  10e1fe:    82 5e       	r2 = b[r0 + 11] 			  ## vm_sfc.c:2008:43
  10e200:    41 f6 12 08 	r2 <= insert(r1, p:8, l:8) 			  ## vm_sfc.c:2008:43
  10e204:    80 fc 21 05 	r1 = r2 * r5 			  ## vm_sfc.c:2008:41
  10e208:    4e ce       	cmp r1, r14			  ## vm_sfc.c:2009:9
  10e20a:    52 13       	if (nzcv < 0) goto 164 <.GJTIE351_0_0_+0x2A2 : 10e2b0 >			  ## vm_sfc.c:2009:9
  10e20c:    40 ee 1b 0e 	r11 = r1 - r14 			  ## vm_sfc.c:2013:22
  10e210:    80 ef b0 04 	cmp r11, 4			  ## vm_sfc.c:2013:22
  10e214:    20 03       	if (nzcv >= 0) {			  ## vm_sfc.c:2013:22
  10e216:    53 ea 04 00 		r11 = 4 
                               	}			  ## vm_sfc.c:2013:22
  10e21a:    40 fc ed 05 	r13 = r14 / r5 			  ## vm_sfc.c:2016:21
  10e21e:    80 fc d1 05 	r1 = r13 * r5 			  ## vm_sfc.c:2018:48
  10e222:    40 ee e1 01 	r1 = r14 - r1 			  ## vm_sfc.c:2018:48
  10e226:    6e d6       	r6 = r5 - r1 			  ## vm_sfc.c:2018:40
  10e228:    9e ce       	cmp r11, r6			  ## vm_sfc.c:2019:22
  10e22a:    90 03       	if (nzcv <= 0) {			  ## vm_sfc.c:2019:22
  10e22c:    9e c6       		r6 = r11 
                               	}			  ## vm_sfc.c:2019:22
  10e22e:    20 f7 d2 02 	r2 = r13 << 2 			  ## vm_sfc.c:2020:18
  10e232:    00 ed 08 0f 	r8 = r0 + 15 			  ## vm_sfc.c:2020:32
  10e236:    00 ee 80 02 	r0 = r8 + r2 			  ## vm_sfc.c:2020:18
  10e23a:    03 5c       	r3 = b[r0 + 2] 			  ## vm_sfc.c:2020:18
  10e23c:    07 5a       	r7 = b[r0 + 1] 			  ## vm_sfc.c:2020:18
  10e23e:    41 f6 37 08 	r7 <= insert(r3, p:8, l:8) 			  ## vm_sfc.c:2020:18
  10e242:    00 5e       	r0 = b[r0 + 3] 			  ## vm_sfc.c:2020:18
  10e244:    42 f6 07 08 	r7 <= insert(r0, p:16, l:8) 			  ## vm_sfc.c:2020:18
  10e248:    00 e7 80 02 	r0 = b[r8 + r2] 			  ## vm_sfc.c:2020:18
  10e24c:    41 f6 70 18 	r0 <= insert(r7, p:8, l:24) 			  ## vm_sfc.c:2020:18
  10e250:    42 d4       	r2 = r0 + r1 			  ## vm_sfc.c:2020:49
  10e252:    47 91       	r7 = sp + 40 
  10e254:    38 c6       	r0 = r7 			  ## vm_sfc.c:2022:5
  10e256:    31 c6       	r1 = r6 			  ## vm_sfc.c:2022:5
  10e258:    03 e1 20 e6 	call 31940 <norflash_read_otp_page : 115f20 >			  ## vm_sfc.c:2022:5
  10e25c:    bf d5       	r7 = r7 + r6 			  ## vm_sfc.c:2025:9
  10e25e:    40 ee bb 06 	r11 = r11 - r6 			  ## vm_sfc.c:2024:9
  10e262:    08 80       	r0 = 1 
  10e264:    1e 20       	if (r6 != 0) goto 2 <.GJTIE351_0_0_+0x25A : 10e268 >
  10e266:    00 80       	r0 = 0 
  10e268:    45 cb       	r13 += r0 			  ## vm_sfc.c:2026:9
  10e26a:    1c 08       	goto 56 <.GJTIE351_0_0_+0x296 : 10e2a4 >			  ## vm_sfc.c:2026:9
  10e26c:    20 f7 d0 02 	r0 = r13 << 2 			  ## vm_sfc.c:2032:18
  10e270:    00 ee 81 00 	r1 = r8 + r0 			  ## vm_sfc.c:2032:18
  10e274:    0a 5c       	r2 = b[r1 + 2] 			  ## vm_sfc.c:2032:18
  10e276:    0b 5a       	r3 = b[r1 + 1] 			  ## vm_sfc.c:2032:18
  10e278:    41 f6 23 08 	r3 <= insert(r2, p:8, l:8) 			  ## vm_sfc.c:2032:18
  10e27c:    09 5e       	r1 = b[r1 + 3] 			  ## vm_sfc.c:2032:18
  10e27e:    42 f6 13 08 	r3 <= insert(r1, p:16, l:8) 			  ## vm_sfc.c:2032:18
  10e282:    00 e7 82 00 	r2 = b[r8 + r0] 			  ## vm_sfc.c:2032:18
  10e286:    41 f6 32 18 	r2 <= insert(r3, p:8, l:24) 			  ## vm_sfc.c:2032:18
  10e28a:    9d ce       	cmp r11, r5			  ## vm_sfc.c:2031:19
  10e28c:    2e c6       	r6 = r5 			  ## vm_sfc.c:2031:19
  10e28e:    90 03       	if (nzcv <= 0) {			  ## vm_sfc.c:2031:19
  10e290:    9e c6       		r6 = r11 
                               	}			  ## vm_sfc.c:2031:19
  10e292:    38 c6       	r0 = r7 			  ## vm_sfc.c:2033:9
  10e294:    31 c6       	r1 = r6 			  ## vm_sfc.c:2033:9
  10e296:    03 e1 30 e4 	call 31878 <norflash_read_otp_page : 115f20 >			  ## vm_sfc.c:2033:9
  10e29a:    bf d5       	r7 = r7 + r6 			  ## vm_sfc.c:2035:13
  10e29c:    40 ee bb 06 	r11 = r11 - r6 			  ## vm_sfc.c:2034:13
  10e2a0:    00 ed dd 01 	r13 = r13 + 1 			  ## vm_sfc.c:2036:14
  10e2a4:    80 ef b0 00 	cmp r11, 0			  ## vm_sfc.c:2030:5
  10e2a8:    e1 11       	ifs (nzcv != 0) goto -62 <.GJTIE351_0_0_+0x25E : 10e26c >			  ## vm_sfc.c:2030:5
  10e2aa:    86 42       	r6 = [sp+ 40] 
  10e2ac:    17 ea ff 0f 	r7 = 4095 
  10e2b0:    70 b4       	r0 = r6 >> 20 			  ## vm_sfc.c:2082:18
  10e2b2:    07 ce       	cmp r0, r7			  ## vm_sfc.c:2082:13
  10e2b4:    6e 10       	ifs (nzcv == 0) goto 220 <.GJTIE351_0_0_+0x384 : 10e392 >			  ## vm_sfc.c:2082:13
  10e2b6:    01 f6 61 0c 	r1 = uextra(r6, p:8, l:12) 			  ## vm_sfc.c:2085:18
  10e2ba:    4a ce       	cmp r1, r10			  ## vm_sfc.c:2085:13
  10e2bc:    06 10       	ifs (nzcv == 0) goto 12 <.GJTIE351_0_0_+0x2BC : 10e2ca >			  ## vm_sfc.c:2085:13
  10e2be:    b0 cb       	r0 += r14 			  ## vm_sfc.c:2102:28
  10e2c0:    00 ed 0e 04 	r14 = r0 + 4 			  ## vm_sfc.c:2102:16
  10e2c4:    f4 ce       	cmp r14, r12			  ## vm_sfc.c:2079:5
  10e2c6:    92 13       	if (nzcv < 0) goto -220 <.GJTIE351_0_0_+0x1DE : 10e1ec >			  ## vm_sfc.c:2079:5
  10e2c8:    64 08       	goto 200 <.GJTIE351_0_0_+0x384 : 10e392 >			  ## vm_sfc.c:2079:5
  10e2ca:    41 40       	r1 = [sp+ 4] 			  ## vm_sfc.c:2086:17
  10e2cc:    01 ce       	cmp r0, r1			  ## vm_sfc.c:2086:17
  10e2ce:    61 11       	ifs (nzcv != 0) goto 194 <.GJTIE351_0_0_+0x384 : 10e392 >			  ## vm_sfc.c:2086:17
  10e2d0:    ff e1 cf e3 	call -904 <norflash_get_otp_info : 10df4c >			  ## vm_sfc.c:2001:37
  10e2d4:    00 98       	cmp r0, 0
  10e2d6:    59 10       	ifs (nzcv == 0) goto 178 <.GJTIE351_0_0_+0x37C : 10e38a >
  10e2d8:    00 ed e1 04 	r1 = r14 + 4 			  ## vm_sfc.c:2091:48
  10e2dc:    c2 5c       	r2 = b[r0 + 14] 			  ## vm_sfc.c:2006:31
  10e2de:    00 e8 08 43 	r8 = b[r0 + 13] 			  ## vm_sfc.c:2006:31
  10e2e2:    41 f6 28 08 	r8 <= insert(r2, p:8, l:8) 			  ## vm_sfc.c:2006:31
  10e2e6:    c2 58       	r2 = b[r0 + 12] 			  ## vm_sfc.c:2008:43
  10e2e8:    83 5e       	r3 = b[r0 + 11] 			  ## vm_sfc.c:2008:43
  10e2ea:    41 f6 23 08 	r3 <= insert(r2, p:8, l:8) 			  ## vm_sfc.c:2008:43
  10e2ee:    80 fc 32 08 	r2 = r3 * r8 			  ## vm_sfc.c:2008:41
  10e2f2:    11 ce       	cmp r2, r1			  ## vm_sfc.c:2009:9
  10e2f4:    4a 13       	if (nzcv < 0) goto 148 <.GJTIE351_0_0_+0x37C : 10e38a >			  ## vm_sfc.c:2009:9
  10e2f6:    52 d6       	r2 = r2 - r1 			  ## vm_sfc.c:2013:22
  10e2f8:    43 40       	r3 = [sp+ 4] 
  10e2fa:    13 ce       	cmp r2, r3			  ## vm_sfc.c:2013:22
  10e2fc:    1d c6       	r5 = r3 			  ## vm_sfc.c:2013:22
  10e2fe:    90 03       	if (nzcv <= 0) {			  ## vm_sfc.c:2013:22
  10e300:    15 c6       		r5 = r2 
                               	}			  ## vm_sfc.c:2013:22
  10e302:    40 fc 1c 08 	r12 = r1 / r8 			  ## vm_sfc.c:2016:21
  10e306:    80 fc c2 08 	r2 = r12 * r8 			  ## vm_sfc.c:2018:48
  10e30a:    89 d6       	r1 = r1 - r2 			  ## vm_sfc.c:2018:48
  10e30c:    40 ee 86 01 	r6 = r8 - r1 			  ## vm_sfc.c:2018:40
  10e310:    2e ce       	cmp r5, r6			  ## vm_sfc.c:2019:22
  10e312:    90 03       	if (nzcv <= 0) {			  ## vm_sfc.c:2019:22
  10e314:    2e c6       		r6 = r5 
                               	}			  ## vm_sfc.c:2019:22
  10e316:    20 f7 c2 02 	r2 = r12 << 2 			  ## vm_sfc.c:2020:18
  10e31a:    00 ed 0a 0f 	r10 = r0 + 15 			  ## vm_sfc.c:2020:32
  10e31e:    00 ee a0 02 	r0 = r10 + r2 			  ## vm_sfc.c:2020:18
  10e322:    03 5c       	r3 = b[r0 + 2] 			  ## vm_sfc.c:2020:18
  10e324:    07 5a       	r7 = b[r0 + 1] 			  ## vm_sfc.c:2020:18
  10e326:    41 f6 37 08 	r7 <= insert(r3, p:8, l:8) 			  ## vm_sfc.c:2020:18
  10e32a:    00 5e       	r0 = b[r0 + 3] 			  ## vm_sfc.c:2020:18
  10e32c:    42 f6 07 08 	r7 <= insert(r0, p:16, l:8) 			  ## vm_sfc.c:2020:18
  10e330:    00 e7 a0 02 	r0 = b[r10 + r2] 			  ## vm_sfc.c:2020:18
  10e334:    41 f6 70 18 	r0 <= insert(r7, p:8, l:24) 			  ## vm_sfc.c:2020:18
  10e338:    42 d4       	r2 = r0 + r1 			  ## vm_sfc.c:2020:49
  10e33a:    07 40       	r7 = [sp] 
  10e33c:    38 c6       	r0 = r7 			  ## vm_sfc.c:2022:5
  10e33e:    31 c6       	r1 = r6 			  ## vm_sfc.c:2022:5
  10e340:    03 e1 e0 de 	call 31708 <norflash_read_otp_page : 115f20 >			  ## vm_sfc.c:2022:5
  10e344:    00 ee 7b 06 	r11 = r7 + r6 			  ## vm_sfc.c:2025:9
  10e348:    ad d7       	r5 = r5 - r6 			  ## vm_sfc.c:2024:9
  10e34a:    08 80       	r0 = 1 
  10e34c:    1e 20       	if (r6 != 0) goto 2 <.GJTIE351_0_0_+0x342 : 10e350 >
  10e34e:    00 80       	r0 = 0 
  10e350:    00 ee 07 0c 	r7 = r0 + r12 			  ## vm_sfc.c:2026:9
  10e354:    19 08       	goto 50 <.GJTIE351_0_0_+0x37A : 10e388 >			  ## vm_sfc.c:2026:9
  10e356:    38 a2       	r0 = r7 << 2 			  ## vm_sfc.c:2032:18
  10e358:    00 ee a1 00 	r1 = r10 + r0 			  ## vm_sfc.c:2032:18
  10e35c:    0a 5c       	r2 = b[r1 + 2] 			  ## vm_sfc.c:2032:18
  10e35e:    0b 5a       	r3 = b[r1 + 1] 			  ## vm_sfc.c:2032:18
  10e360:    41 f6 23 08 	r3 <= insert(r2, p:8, l:8) 			  ## vm_sfc.c:2032:18
  10e364:    09 5e       	r1 = b[r1 + 3] 			  ## vm_sfc.c:2032:18
  10e366:    42 f6 13 08 	r3 <= insert(r1, p:16, l:8) 			  ## vm_sfc.c:2032:18
  10e36a:    00 e7 a2 00 	r2 = b[r10 + r0] 			  ## vm_sfc.c:2032:18
  10e36e:    41 f6 32 18 	r2 <= insert(r3, p:8, l:24) 			  ## vm_sfc.c:2032:18
  10e372:    68 ce       	cmp r5, r8			  ## vm_sfc.c:2031:19
  10e374:    86 c6       	r6 = r8 			  ## vm_sfc.c:2031:19
  10e376:    90 03       	if (nzcv <= 0) {			  ## vm_sfc.c:2031:19
  10e378:    2e c6       		r6 = r5 
                               	}			  ## vm_sfc.c:2031:19
  10e37a:    98 c6       	r0 = r11 			  ## vm_sfc.c:2033:9
  10e37c:    31 c6       	r1 = r6 			  ## vm_sfc.c:2033:9
  10e37e:    03 e1 f0 dc 	call 31646 <norflash_read_otp_page : 115f20 >			  ## vm_sfc.c:2033:9
  10e382:    73 cb       	r11 += r6 			  ## vm_sfc.c:2035:13
  10e384:    ad d7       	r5 = r5 - r6 			  ## vm_sfc.c:2034:13
  10e386:    7f d0       	r7 = r7 + 1 			  ## vm_sfc.c:2036:14
  10e388:    6d 26       	if (r5 != 0) goto -52 <.GJTIE351_0_0_+0x348 : 10e356 >
  10e38a:    00 40       	r0 = [sp] 			  ## vm_sfc.c:2092:23
  10e38c:    41 40       	r1 = [sp+ 4] 			  ## vm_sfc.c:2092:23
  10e38e:    fb e1 6f da 	call -33972 <CRC16 : 105ede >			  ## vm_sfc.c:2092:23
  10e392:    03 80       	r3 = 0 
  10e394:    15 ea 84 00 	r5 = 132 
  10e398:    4e 2b       	r6 = [addr(180)]  <.GCPI351_7 : 10e44c >
  10e39a:    13 08       	goto 38 <.GJTIE351_0_0_+0x3B4 : 10e3c2 >
  10e39c:    00 e7 40 03 	r0 = b[r4 + r3] 			  ## key0_decode.c:239:13
  10e3a0:    00 ee 91 03 	r1 = r9 + r3 			  ## key0_decode.c:239:29
  10e3a4:    00 e7 11 05 	r1 = b[r1 + r5] 			  ## key0_decode.c:239:29
  10e3a8:    01 ce       	cmp r0, r1			  ## key0_decode.c:239:13
  10e3aa:    0a 10       	ifs (nzcv == 0) goto 20 <.GJTIE351_0_0_+0x3B2 : 10e3c0 >			  ## key0_decode.c:239:13
  10e3ac:    07 80       	r7 = 0 
  10e3ae:    05 08       	goto 10 <.GJTIE351_0_0_+0x3AC : 10e3ba >
  10e3b0:    ff e1 ff db 	call -1154 <get_random : 10df32 >			  ## key0_decode.c:241:31
  10e3b4:    60 e7 60 07 	[r6 + r7] = r0 			  ## key0_decode.c:241:29
  10e3b8:    3f d1       	r7 = r7 + 4 			  ## key0_decode.c:240:13
  10e3ba:    80 ef 70 80 	cmp r7, 128			  ## key0_decode.c:240:13
  10e3be:    f8 11       	ifs (nzcv != 0) goto -16 <.GJTIE351_0_0_+0x3A2 : 10e3b0 >			  ## key0_decode.c:240:13
  10e3c0:    5b d0       	r3 = r3 + 1 			  ## key0_decode.c:238:30
  10e3c2:    83 98       	cmp r3, 16			  ## key0_decode.c:238:5
  10e3c4:    eb 11       	ifs (nzcv != 0) goto -42 <.GJTIE351_0_0_+0x38E : 10e39c >			  ## key0_decode.c:238:5
  10e3c6:    20 c6       	r0 = r4 			  ## key0_decode.c:245:16
  10e3c8:    81 80       	r1 = 16 			  ## key0_decode.c:245:16
  10e3ca:    fb e1 8f d8 	call -34032 <CRC16 : 105ede >			  ## key0_decode.c:245:16
  10e3ce:    05 c6       	r5 = r0 			  ## key0_decode.c:245:16
  10e3d0:    00 ed 40 12 	r0 = r4 + 18 			  ## key0_decode.c:246:23
  10e3d4:    81 80       	r1 = 16 			  ## key0_decode.c:246:16
  10e3d6:    fb e1 2f d8 	call -34044 <CRC16 : 105ede >			  ## key0_decode.c:246:16
  10e3da:    40 f0 04 05 	r4 = r0 ^ r5 			  ## key0_decode.c:246:16
  10e3de:    20 c9       	r0 = r4.b 			  ## key0_decode.c:248:17
  10e3e0:    00 e9 01 06 	r1 = b[sp+ 24] 			  ## key0_decode.c:248:9
  10e3e4:    08 ce       	cmp r1, r0			  ## key0_decode.c:248:9
  10e3e6:    0d 10       	ifs (nzcv == 0) goto 26 <.GJTIE351_0_0_+0x3F4 : 10e402 >			  ## key0_decode.c:248:9
  10e3e8:    ff e1 3f da 	call -1210 <get_random : 10df32 >			  ## key0_decode.c:249:38
  10e3ec:    03 c6       	r3 = r0 			  ## key0_decode.c:249:38
  10e3ee:    ff e1 0f da 	call -1216 <get_random : 10df32 >			  ## key0_decode.c:249:18
  10e3f2:    80 f3 00 07 	r0 = r0 & 7 			  ## key0_decode.c:249:31
  10e3f6:    00 a2       	r0 = r0 << 2 			  ## key0_decode.c:249:9
  10e3f8:    60 e7 63 00 	[r6 + r0] = r3 			  ## key0_decode.c:249:36
  10e3fc:    ff e1 9f d9 	call -1230 <get_random : 10df32 >			  ## key0_decode.c:250:37
  10e400:    f0 68       	[r6 + 12] = r0 			  ## key0_decode.c:250:35
  10e402:    60 a8       	r0 = r4 >> 8 			  ## key0_decode.c:252:25
  10e404:    00 e9 41 06 	r1 = b[sp+ 25] 			  ## key0_decode.c:252:9
  10e408:    08 ce       	cmp r1, r0			  ## key0_decode.c:252:9
  10e40a:    0d 10       	ifs (nzcv == 0) goto 26 <.GJTIE351_0_0_+0x418 : 10e426 >			  ## key0_decode.c:252:9
  10e40c:    ff e1 1f d9 	call -1246 <get_random : 10df32 >			  ## key0_decode.c:253:38
  10e410:    03 c6       	r3 = r0 			  ## key0_decode.c:253:38
  10e412:    ff e1 ef d8 	call -1252 <get_random : 10df32 >			  ## key0_decode.c:253:18
  10e416:    80 f3 00 07 	r0 = r0 & 7 			  ## key0_decode.c:253:31
  10e41a:    00 a2       	r0 = r0 << 2 			  ## key0_decode.c:253:9
  10e41c:    60 e7 63 00 	[r6 + r0] = r3 			  ## key0_decode.c:253:36
  10e420:    ff e1 7f d8 	call -1266 <get_random : 10df32 >			  ## key0_decode.c:254:37
  10e424:    f0 68       	[r6 + 12] = r0 			  ## key0_decode.c:254:35
  10e426:    04 80       	r4 = 0 
  10e428:    20 c6       	r0 = r4 			  ## vm_sfc.c:1297:5
  10e42a:    2c cd       	sp += 44 
  10e42c:    1e c0       	{pc, r14-r4} = [sp++] 
  10e42e:    00 00       	nop


.GCPI351_0:
  10e430:    60 1d 00 00     < 7520 : 0x1D60 >

.GCPI351_1:
  10e434:    36 c5 11 00     < 1164598 : 0x11C536 >

.GCPI351_2:
  10e438:    60 1c 00 00     < 7264 : 0x1C60 >

.GCPI351_3:
  10e43c:    a7 c4 11 00     < 1164455 : 0x11C4A7 >

.GCPI351_4:
  10e440:    cf c4 11 00     < 1164495 : 0x11C4CF >

.GCPI351_5:
  10e444:    f0 c4 11 00     < 1164528 : 0x11C4F0 >

.GCPI351_6:
  10e448:    12 c5 11 00     < 1164562 : 0x11C512 >

.GCPI351_7:
  10e44c:    00 7f 00 00     < 32512 : 0x7F00 >

.GCPI351_8:
  10e450:    01 56 04 40     < 1074025985 : 0x40045601 >

.GCPI351_9:
  10e454:    02 56 04 40     < 1074025986 : 0x40045602 >

.GCPI351_10:
  10e458:    1c 02 08 00     < 524828 : 0x8021C >

.GCPI351_11:
  10e45c:    ff ff 0f 02     < 34603007 : 0x20FFFFF >

norflash_online:
  10e460:    08 80       	r0 = 1 			  ## vm_sfc.c:1301:0
  10e462:    20 00       	rts			  ## vm_sfc.c:1302:5


norflash_close:
  10e464:    00 80       	r0 = 0 			  ## vm_sfc.c:1305:0
  10e466:    20 00       	rts			  ## vm_sfc.c:1306:5


__hw_power_wakeup_handler:
  10e468:    18 c2       	[--sp] = {rets, r8-r4} 			  ## power_wakeup.c:439:0
  10e46a:    10 ea 93 00 	r0 = 147 			  ## power_wakeup.c:140:1
  10e46e:    79 e1 3f 04 	call -1105786 <p33_rx_1byte : 4f8 >			  ## power_wakeup.c:140:1
  10e472:    04 c6       	r4 = r0 			  ## power_wakeup.c:140:1
  10e474:    84 21       	if (r4 == 0) goto 48 <__hw_power_wakeup_handler+0x3E : 10e4a6 >			  ## power_wakeup.c:140:1
  10e476:    40 2b       	r0 = [addr(52)]  <.GCPI355_0 : 10e4ac >
  10e478:    86 d0       	r6 = r0 + 2 
  10e47a:    07 80       	r7 = 0 
  10e47c:    50 ea 01 00 	r8 = 1 
  10e480:    05 80       	r5 = 0 
  10e482:    0e 08       	goto 28 <__hw_power_wakeup_handler+0x38 : 10e4a0 >
  10e484:    80 f1 40 07 	r0 = r4 & setbit(r7) 			  ## power_wakeup.c:452:21
  10e488:    09 10       	ifs (nzcv == 0) goto 18 <__hw_power_wakeup_handler+0x34 : 10e49c >			  ## power_wakeup.c:452:21
  10e48a:    00 f7 80 07 	r0 = r8 << r7 			  ## power_wakeup.c:452:23
  10e48e:    01 c9       	r1 = r0.b 			  ## power_wakeup.c:139:1
  10e490:    10 ea 92 00 	r0 = 146 			  ## power_wakeup.c:139:1
  10e494:    79 e1 cf 03 	call -1105800 <p33_tx_1byte : 510 >			  ## power_wakeup.c:139:1
  10e498:    30 58       	r0 = b[r6 + 0] 			  ## power_wakeup.c:455:43
  10e49a:    05 da       	r5 |= r0 			  ## power_wakeup.c:455:24
  10e49c:    76 d1       	r6 = r6 + 5 			  ## power_wakeup.c:451:9
  10e49e:    7f d0       	r7 = r7 + 1 			  ## power_wakeup.c:451:46
  10e4a0:    47 98       	cmp r7, 8			  ## power_wakeup.c:451:9
  10e4a2:    f0 11       	ifs (nzcv != 0) goto -32 <__hw_power_wakeup_handler+0x1C : 10e484 >			  ## power_wakeup.c:451:9
  10e4a4:    01 08       	goto 2 <__hw_power_wakeup_handler+0x40 : 10e4a8 >			  ## power_wakeup.c:451:9
  10e4a6:    05 80       	r5 = 0 
  10e4a8:    28 c9       	r0 = r5.b 			  ## power_wakeup.c:463:5
  10e4aa:    18 c0       	{pc, r8-r4} = [sp++] 			  ## power_wakeup.c:463:5


.GCPI355_0:
  10e4ac:    2c 1c 00 00     < 7212 : 0x1C2C >

wdt_isr:
  10e4b0:    34 c8       	r4 = rets 			  ## wdt.c:82:0
  10e4b2:    05 c8       	r5 = reti 			  ## wdt.c:87:5
  10e4b4:    00 2b       	r0 = [addr(48)]  <.GCPI356_0 : 10e4e4 >			  ## wdt.c:89:5
  10e4b6:    da e1 1f 59 	call -308446 <xprintf : c2fdc >			  ## wdt.c:89:5
  10e4ba:    c0 2a       	r0 = [addr(44)]  <.GCPI356_1 : 10e4e8 >			  ## wdt.c:90:5
  10e4bc:    21 c6       	r1 = r4 			  ## wdt.c:90:5
  10e4be:    da e1 df 58 	call -308454 <xprintf : c2fdc >			  ## wdt.c:90:5
  10e4c2:    80 2a       	r0 = [addr(40)]  <.GCPI356_2 : 10e4ec >			  ## wdt.c:91:5
  10e4c4:    29 c6       	r1 = r5 			  ## wdt.c:91:5
  10e4c6:    da e1 9f 58 	call -308462 <xprintf : c2fdc >			  ## wdt.c:91:5
  10e4ca:    b9 c6       	r1 = sp 			  ## wdt.c:93:5
  10e4cc:    40 2a       	r0 = [addr(36)]  <.GCPI356_3 : 10e4f0 >			  ## wdt.c:94:5
  10e4ce:    da e1 5f 58 	call -308470 <xprintf : c2fdc >			  ## wdt.c:94:5
  10e4d2:    b9 c8       	r1 = usp 			  ## wdt.c:95:5
  10e4d4:    00 2a       	r0 = [addr(32)]  <.GCPI356_4 : 10e4f4 >			  ## wdt.c:96:5
  10e4d6:    da e1 1f 58 	call -308478 <xprintf : c2fdc >			  ## wdt.c:96:5
  10e4da:    99 c8       	r1 = ssp 			  ## wdt.c:97:5
  10e4dc:    c0 29       	r0 = [addr(28)]  <.GCPI356_5 : 10e4f8 >			  ## wdt.c:98:5
  10e4de:    da e1 df 57 	call -308486 <xprintf : c2fdc >			  ## wdt.c:98:5
  10e4e2:    ff 0f       	goto -2 <wdt_isr+0x32 : 10e4e2 >			  ## wdt.c:99:5


.GCPI356_0:
  10e4e4:    15 ce 11 00     < 1166869 : 0x11CE15 >

.GCPI356_1:
  10e4e8:    67 ce 11 00     < 1166951 : 0x11CE67 >

.GCPI356_2:
  10e4ec:    87 ce 11 00     < 1166983 : 0x11CE87 >

.GCPI356_3:
  10e4f0:    a7 ce 11 00     < 1167015 : 0x11CEA7 >

.GCPI356_4:
  10e4f4:    c5 ce 11 00     < 1167045 : 0x11CEC5 >

.GCPI356_5:
  10e4f8:    e4 ce 11 00     < 1167076 : 0x11CEE4 >

tick_timer_loop:
  10e4fc:    17 c2       	[--sp] = {rets, r7-r4} 			  ## tick_timer_sys.c:71:0
  10e4fe:    d5 2c       	r5 = [addr(332)]  <.GCPI359_0 : 10e64c >			  ## tick_timer_sys.c:73:16
  10e500:    28 51       	r0 = h[r5 + 16] 			  ## tick_timer_sys.c:73:16
  10e502:    40 d0       	r0 = r0 + 1 			  ## tick_timer_sys.c:73:16
  10e504:    28 71       	h[r5 + 16] = r0 			  ## tick_timer_sys.c:73:16
  10e506:    41 c9       	r1 = r0.l 			  ## tick_timer_sys.c:73:16
  10e508:    2a 80       	r2 = 5 			  ## tick_timer_sys.c:48:19
  10e50a:    40 fc 12 02 	r2 = r1 / r2 			  ## tick_timer_sys.c:48:19
  10e50e:    00 fc 22 05 	r2 = r2 * 5 			  ## tick_timer_sys.c:48:19
  10e512:    8a d6       	r2 = r1 - r2 			  ## tick_timer_sys.c:48:19
  10e514:    05 11       	ifs (nzcv != 0) goto 10 <tick_timer_loop+0x24 : 10e520 >			  ## tick_timer_sys.c:48:19
  10e516:    2a c6       	r2 = r5 			  ## tick_timer_sys.c:50:17
  10e518:    24 e8 23 10 	r3 = [++ r2 = 64] 			  ## tick_timer_sys.c:50:17
  10e51c:    5b d0       	r3 = r3 + 1 			  ## tick_timer_sys.c:50:17
  10e51e:    13 68       	[r2 + 0] = r3 			  ## tick_timer_sys.c:50:17
  10e520:    12 ea fa 00 	r2 = 250 			  ## tick_timer_sys.c:63:19
  10e524:    40 fc 12 02 	r2 = r1 / r2 			  ## tick_timer_sys.c:63:19
  10e528:    00 fc 22 fa 	r2 = r2 * 250 			  ## tick_timer_sys.c:63:19
  10e52c:    89 d6       	r1 = r1 - r2 			  ## tick_timer_sys.c:63:19
  10e52e:    04 11       	ifs (nzcv != 0) goto 8 <tick_timer_loop+0x3C : 10e538 >			  ## tick_timer_sys.c:63:19
  10e530:    69 80       	r1 = 13 			  ## tick_timer_sys.c:64:9
  10e532:    fd e1 ff 06 	call -24354 <post_msg : 108614 >			  ## tick_timer_sys.c:64:9
  10e536:    28 51       	r0 = h[r5 + 16] 			  ## tick_timer_sys.c:64:9
  10e538:    29 55       	r1 = h[r5 + 18] 			  ## toy_main.c:37:8
  10e53a:    49 d0       	r1 = r1 + 1 			  ## toy_main.c:37:8
  10e53c:    00 f6 13 6d 	r3 = uextra(r1, p:3, l:13) 			  ## toy_main.c:46:13
  10e540:    02 80       	r2 = 0 			  ## toy_main.c:46:9
  10e542:    e3 9b       	cmp r3, 124			  ## toy_main.c:46:9
  10e544:    90 03       	if (nzcv <= 0) {			  ## toy_main.c:46:9
  10e546:    0a c6       		r2 = r1 
                               	}			  ## toy_main.c:46:9
  10e548:    2a 75       	h[r5 + 18] = r2 			  ## toy_main.c:47:13
  10e54a:    40 c9       	r0 = r0.l 			  ## tick_timer_modules.c:25:19
  10e54c:    29 80       	r1 = 5 			  ## tick_timer_modules.c:25:19
  10e54e:    40 fc 01 01 	r1 = r0 / r1 			  ## tick_timer_modules.c:25:19
  10e552:    00 fc 11 05 	r1 = r1 * 5 			  ## tick_timer_modules.c:25:19
  10e556:    40 d6       	r0 = r0 - r1 			  ## tick_timer_modules.c:25:19
  10e558:    0c 10       	ifs (nzcv == 0) goto 24 <tick_timer_loop+0x76 : 10e572 >			  ## tick_timer_modules.c:25:19
  10e55a:    28 51       	r0 = h[r5 + 16] 			  ## tick_timer_sys.c:79:15
  10e55c:    11 ea fa 00 	r1 = 250 			  ## tick_timer_sys.c:79:26
  10e560:    40 fc 01 01 	r1 = r0 / r1 			  ## tick_timer_sys.c:79:26
  10e564:    00 fc 11 fa 	r1 = r1 * 250 			  ## tick_timer_sys.c:79:26
  10e568:    40 d6       	r0 = r0 - r1 			  ## tick_timer_sys.c:79:26
  10e56a:    02 11       	ifs (nzcv != 0) goto 4 <tick_timer_loop+0x74 : 10e570 >			  ## tick_timer_sys.c:79:26
  10e56c:    00 80       	r0 = 0 			  ## tick_timer_sys.c:80:20
  10e56e:    28 71       	h[r5 + 16] = r0 			  ## tick_timer_sys.c:80:20
  10e570:    17 c0       	{pc, r7-r4} = [sp++] 
  10e572:    ce 2d       	r6 = [addr(220)]  <.GCPI359_1 : 10e650 >			  ## key.c:151:21
  10e574:    34 58       	r4 = b[r6 + 0] 			  ## key.c:151:21
  10e576:    07 80       	r7 = 0 
  10e578:    00 80       	r0 = 0 			  ## key_drv_ad.c:137:5
  10e57a:    fc e1 9f 8b 	call -28302 <adc_kick_start : 1076f0 >			  ## key_drv_ad.c:137:5
  10e57e:    00 80       	r0 = 0 			  ## key_drv_ad.c:138:17
  10e580:    fc e1 4f 8e 	call -28216 <adc_get_value : 10774c >			  ## key_drv_ad.c:138:17
  10e584:    11 ea ff 00 	r1 = 255 			  ## key_drv_ad.c:138:17
  10e588:    83 ef 00 d0 	cmp r0, 976			  ## key_drv_ad.c:139:9
  10e58c:    0c 18       	if (nzcv > 0) goto 24 <tick_timer_loop+0xAA : 10e5a6 >			  ## key_drv_ad.c:139:9
  10e58e:    49 2c       	r1 = [addr(196)]  <.GCPI359_2 : 10e654 >
  10e590:    02 80       	r2 = 0 
  10e592:    06 08       	goto 12 <tick_timer_loop+0xA4 : 10e5a0 >
  10e594:    0b 50       	r3 = h[r1 + 0] 			  ## key_drv_ad.c:144:25
  10e596:    03 ce       	cmp r0, r3			  ## key_drv_ad.c:144:13
  10e598:    05 13       	if (nzcv < 0) goto 10 <tick_timer_loop+0xA8 : 10e5a4 >			  ## key_drv_ad.c:144:13
  10e59a:    89 d0       	r1 = r1 + 2 			  ## key_drv_ad.c:143:5
  10e59c:    7f d0       	r7 = r7 + 1 			  ## key_drv_ad.c:143:5
  10e59e:    52 d0       	r2 = r2 + 1 			  ## key_drv_ad.c:143:97
  10e5a0:    42 98       	cmp r2, 8			  ## key_drv_ad.c:143:5
  10e5a2:    f8 19       	if (nzcv <= 0) goto -16 <tick_timer_loop+0x98 : 10e594 >			  ## key_drv_ad.c:143:5
  10e5a4:    39 c6       	r1 = r7 
  10e5a6:    08 c9       	r0 = r1.b 			  ## key_drv_ad.c:82:17
  10e5a8:    2a 5a       	r2 = b[r5 + 1] 			  ## key_drv_ad.c:82:9
  10e5aa:    10 ce       	cmp r2, r0			  ## key_drv_ad.c:82:9
  10e5ac:    08 11       	ifs (nzcv != 0) goto 16 <tick_timer_loop+0xC2 : 10e5be >			  ## key_drv_ad.c:82:9
  10e5ae:    28 5c       	r0 = b[r5 + 2] 			  ## key_drv_ad.c:86:20
  10e5b0:    40 d0       	r0 = r0 + 1 			  ## key_drv_ad.c:86:20
  10e5b2:    28 7c       	b[r5 + 2] = r0 			  ## key_drv_ad.c:86:20
  10e5b4:    00 c9       	r0 = r0.b 			  ## key_drv_ad.c:86:20
  10e5b6:    10 98       	cmp r0, 2			  ## key_drv_ad.c:87:13
  10e5b8:    06 11       	ifs (nzcv != 0) goto 12 <tick_timer_loop+0xCA : 10e5c6 >			  ## key_drv_ad.c:87:13
  10e5ba:    b0 d0       	r0 = r6 + 2 
  10e5bc:    03 08       	goto 6 <tick_timer_loop+0xC8 : 10e5c4 >
  10e5be:    00 80       	r0 = 0 			  ## key_drv_ad.c:83:21
  10e5c0:    28 7c       	b[r5 + 2] = r0 			  ## key_drv_ad.c:83:21
  10e5c2:    68 d0       	r0 = r5 + 1 			  ## key_drv_ad.c:83:21
  10e5c4:    01 78       	b[r0 + 0] = r1 
  10e5c6:    30 5c       	r0 = b[r6 + 2] 			  ## key_drv_ad.c:92:12
  10e5c8:    80 ef 00 ff 	cmp r0, 255			  ## key.c:108:17
  10e5cc:    15 03       	ifs (nzcv != 0) {			  ## key.c:155:18
  10e5ce:    09 80       		r1 = 1 			  ## key.c:155:18
  10e5d0:    31 7a       		b[r6 + 1] = r1 
                               	} else {			  ## key.c:155:18
  10e5d2:    10 ea ff 00 		r0 = 255 
                               	}			  ## key.c:155:18
  10e5d6:    31 58       	r1 = b[r6 + 0] 			  ## key.c:158:20
  10e5d8:    01 ce       	cmp r0, r1			  ## key.c:158:9
  10e5da:    0e 11       	ifs (nzcv != 0) goto 28 <tick_timer_loop+0xFC : 10e5f8 >			  ## key.c:158:9
  10e5dc:    80 ef 00 ff 	cmp r0, 255			  ## key.c:159:13
  10e5e0:    bc 10       	ifs (nzcv == 0) goto -136 <tick_timer_loop+0x5E : 10e55a >			  ## key.c:159:13
  10e5e2:    28 58       	r0 = b[r5 + 0] 			  ## key.c:162:26
  10e5e4:    41 d0       	r1 = r0 + 1 			  ## key.c:162:26
  10e5e6:    29 78       	b[r5 + 0] = r1 			  ## key.c:162:26
  10e5e8:    10 98       	cmp r0, 2			  ## key.c:163:13
  10e5ea:    1c 10       	ifs (nzcv == 0) goto 56 <tick_timer_loop+0x128 : 10e624 >			  ## key.c:163:13
  10e5ec:    c8 9a       	cmp r0, 89
  10e5ee:    1c 10       	ifs (nzcv == 0) goto 56 <tick_timer_loop+0x12C : 10e628 >
  10e5f0:    50 9a       	cmp r0, 74
  10e5f2:    b3 11       	ifs (nzcv != 0) goto -154 <tick_timer_loop+0x5E : 10e55a >
  10e5f4:    10 80       	r0 = 2 
  10e5f6:    1b 08       	goto 54 <tick_timer_loop+0x132 : 10e62e >
  10e5f8:    30 78       	b[r6 + 0] = r0 			  ## key.c:174:18
  10e5fa:    29 58       	r1 = b[r5 + 0] 			  ## key.c:175:14
  10e5fc:    80 ef 00 ff 	cmp r0, 255			  ## key.c:175:49
  10e600:    08 11       	ifs (nzcv != 0) goto 16 <tick_timer_loop+0x116 : 10e612 >			  ## key.c:175:49
  10e602:    0a d3       	r2 = r1 + -4 			  ## key.c:175:49
  10e604:    12 c9       	r2 = r2.b 			  ## key.c:175:49
  10e606:    32 9a       	cmp r2, 70			  ## key.c:175:49
  10e608:    04 18       	if (nzcv > 0) goto 8 <tick_timer_loop+0x116 : 10e612 >			  ## key.c:175:49
  10e60a:    00 80       	r0 = 0 			  ## key.c:176:31
  10e60c:    28 78       	b[r5 + 0] = r0 			  ## key.c:176:31
  10e60e:    08 80       	r0 = 1 
  10e610:    0e 08       	goto 28 <tick_timer_loop+0x132 : 10e62e >
  10e612:    02 80       	r2 = 0 
  10e614:    2a 78       	b[r5 + 0] = r2 
  10e616:    80 ef 00 ff 	cmp r0, 255			  ## key.c:178:40
  10e61a:    9f 11       	ifs (nzcv != 0) goto -194 <tick_timer_loop+0x5E : 10e55a >			  ## key.c:178:40
  10e61c:    20 80       	r0 = 4 
  10e61e:    59 9a       	cmp r1, 75
  10e620:    06 12       	if (nzcv >= 0) goto 12 <tick_timer_loop+0x132 : 10e62e >
  10e622:    9b 0f       	goto -202 <tick_timer_loop+0x5E : 10e55a >
  10e624:    00 80       	r0 = 0 
  10e626:    03 08       	goto 6 <tick_timer_loop+0x132 : 10e62e >
  10e628:    58 82       	r0 = 75 			  ## key.c:169:31
  10e62a:    28 78       	b[r5 + 0] = r0 			  ## key.c:169:31
  10e62c:    18 80       	r0 = 3 			  ## key.c:169:31
  10e62e:    6b 4a       	r3 = [r5 + 36] 			  ## key.c:77:9
  10e630:    03 98       	cmp r3, 0			  ## key.c:77:9
  10e632:    93 10       	ifs (nzcv == 0) goto -218 <tick_timer_loop+0x5E : 10e55a >			  ## key.c:77:9
  10e634:    32 5a       	r2 = b[r6 + 1] 			  ## key.c:78:19
  10e636:    21 c6       	r1 = r4 			  ## key.c:78:19
  10e638:    ab 01       	call r3			  ## key.c:78:19
  10e63a:    11 ea ff 0f 	r1 = 4095 			  ## key.c:79:17
  10e63e:    01 ce       	cmp r0, r1			  ## key.c:79:13
  10e640:    11 03       	ifs (nzcv != 0) {			  ## key.c:81:23
  10e642:    01 c6       		r1 = r0 			  ## key.c:81:23
  10e644:    fc e1 6f fe 		call -24628
                               	} <post_msg : 108614 >			  ## key.c:81:23
  10e648:    88 0f       	goto -240 <tick_timer_loop+0x5E : 10e55a >			  ## key.c:81:23
  10e64a:    00 00       	nop			  ## key.c:81:23


.GCPI359_0:
  10e64c:    60 1c 00 00     < 7264 : 0x1C60 >

.GCPI359_1:
  10e650:    1c 00 00 00     < 28 : 0x1C >

.GCPI359_2:
  10e654:    80 60 11 00     < 1138816 : 0x116080 >

sdk_meky_check:
  10e658:    19 c2       	[--sp] = {rets, r9-r4} 			  ## key0_decode.c:166:0
  10e65a:    d8 cd       	sp += -40 			  ## key0_decode.c:166:0
  10e65c:    04 c6       	r4 = r0 			  ## key0_decode.c:166:0
  10e65e:    04 60       	[sp] = r4 			  ## key0_decode.c:166:0
  10e660:    df 28       	r7 = [addr(396)]  <.GCPI360_0 : 10e7ec >			  ## key0_decode.c:169:9
  10e662:    b8 48       	r0 = [r7 + 8] 			  ## key0_decode.c:169:9
  10e664:    08 98       	cmp r0, 1			  ## key0_decode.c:169:9
  10e666:    0d 11       	ifs (nzcv != 0) goto 26 <sdk_meky_check+0x2A : 10e682 >			  ## key0_decode.c:169:9
  10e668:    20 e8 78 01 	r8 = [r7 + 4] 			  ## key0_decode.c:103:22
  10e66c:    ff e1 1f c6 	call -1854 <get_random : 10df32 >			  ## key0_decode.c:105:32
  10e670:    04 f3 00 00 	r0 = r0 | 2147483648 			  ## key0_decode.c:105:45
  10e674:    40 62       	[sp+ 36] = r0 
  10e676:    40 42       	r0 = [sp+ 36] 			  ## key0_decode.c:55:14
  10e678:    45 42       	r5 = [sp+ 36] 			  ## key0_decode.c:55:14
  10e67a:    f8 9f       	cmp r0, -1			  ## key0_decode.c:55:9
  10e67c:    04 1c       	ifs (nzcv > 0) goto 8 <sdk_meky_check+0x2E : 10e686 >			  ## key0_decode.c:55:9
  10e67e:    45 61       	[sp+ 20] = r5 			  ## key0_decode.c:56:33
  10e680:    08 08       	goto 16 <sdk_meky_check+0x3A : 10e692 >			  ## key0_decode.c:56:33
  10e682:    c0 d3       	r0 = r0 + -1 			  ## key0_decode.c:173:21
  10e684:    a8 08       	goto 336 <sdk_meky_check+0x17E : 10e7d6 >			  ## key0_decode.c:173:21
  10e686:    20 90       	r0 = sp + 4 
  10e688:    29 c6       	r1 = r5 			  ## key0_decode.c:58:9
  10e68a:    02 81       	r2 = 32 			  ## key0_decode.c:58:9
  10e68c:    da e1 0f 46 	call -309056 <memcpy : c2f50 >			  ## key0_decode.c:58:9
  10e690:    45 41       	r5 = [sp+ 20] 			  ## key0_decode.c:58:9
  10e692:    68 c9       	r0 = r5.l 			  ## key0_decode.c:62:5
  10e694:    26 90       	r6 = sp + 4 			  ## key0_decode.c:62:5
  10e696:    31 c6       	r1 = r6 			  ## key0_decode.c:62:5
  10e698:    02 81       	r2 = 32 			  ## key0_decode.c:62:5
  10e69a:    03 80       	r3 = 0 			  ## key0_decode.c:62:5
  10e69c:    da e1 2f 4a 	call -308924 <doe : c2fe4 >			  ## key0_decode.c:62:5
  10e6a0:    45 61       	[sp+ 20] = r5 			  ## key0_decode.c:64:29
  10e6a2:    b0 d1       	r0 = r6 + 6 			  ## key0_decode.c:66:36
  10e6a4:    d1 80       	r1 = 26 			  ## key0_decode.c:66:15
  10e6a6:    fb e1 af c1 	call -34764 <CRC16 : 105ede >			  ## key0_decode.c:66:15
  10e6aa:    10 e9 01 02 	r1 = h[sp+ 8] 			  ## key0_decode.c:68:30
  10e6ae:    01 ce       	cmp r0, r1			  ## key0_decode.c:68:9
  10e6b0:    09 03       	ifs (nzcv == 0) {			  ## key0_decode.c:71:29
  10e6b2:    50 2c       		r0 = [addr(324)]  <.GCPI360_3 : 10e7f8 >			  ## key0_decode.c:71:29
  10e6b4:    41 42       		r1 = [sp+ 36] 
                               	} else {			  ## key0_decode.c:71:27
  10e6b6:    78 48       		r0 = [r7 + 4] 			  ## key0_decode.c:69:27
  10e6b8:    00 e9 c1 02 		r1 = b[sp+ 11] 
                               	}			  ## key0_decode.c:69:33
  10e6bc:    48 da       	r0 ^= r1 
  10e6be:    78 68       	[r7 + 4] = r0 
  10e6c0:    40 40       	r0 = [sp+ 4] 			  ## key0_decode.c:74:37
  10e6c2:    7b 48       	r3 = [r7 + 4] 			  ## key0_decode.c:74:37
  10e6c4:    91 2b       	r1 = [addr(312)]  <.GCPI360_4 : 10e7fc >			  ## key0_decode.c:74:20
  10e6c6:    01 ce       	cmp r0, r1			  ## key0_decode.c:74:9
  10e6c8:    28 c6       	r0 = r5 			  ## key0_decode.c:74:9
  10e6ca:    10 03       	ifs (nzcv != 0) {			  ## key0_decode.c:75:33
  10e6cc:    ff e1 1f c3 		call -1950
                               	} <get_random : 10df32 >			  ## key0_decode.c:75:33
  10e6d0:    58 da       	r0 ^= r3 			  ## key0_decode.c:75:33
  10e6d2:    78 68       	[r7 + 4] = r0 			  ## key0_decode.c:75:33
  10e6d4:    10 e9 80 08 	r0 = h[sp+ 34] 			  ## key0_decode.c:80:25
  10e6d8:    78 98       	cmp r0, 15			  ## key0_decode.c:80:9
  10e6da:    09 10       	ifs (nzcv == 0) goto 18 <sdk_meky_check+0x96 : 10e6ee >			  ## key0_decode.c:80:9
  10e6dc:    78 48       	r0 = [r7 + 4] 			  ## key0_decode.c:81:27
  10e6de:    00 e9 c1 02 	r1 = b[sp+ 11] 			  ## key0_decode.c:81:33
  10e6e2:    40 f0 13 00 	r3 = r1 ^ r0 			  ## key0_decode.c:81:31
  10e6e6:    ff e1 4f c2 	call -1976 <get_random : 10df32 >			  ## key0_decode.c:81:59
  10e6ea:    58 da       	r0 ^= r3 			  ## key0_decode.c:81:57
  10e6ec:    78 68       	[r7 + 4] = r0 			  ## key0_decode.c:81:13
  10e6ee:    00 e9 c1 02 	r1 = b[sp+ 11] 			  ## key0_decode.c:84:30
  10e6f2:    78 48       	r0 = [r7 + 4] 			  ## key0_decode.c:84:30
  10e6f4:    09 98       	cmp r1, 1			  ## key0_decode.c:84:9
  10e6f6:    10 03       	ifs (nzcv != 0) {			  ## key0_decode.c:85:47
  10e6f8:    45 40       		r5 = [sp+ 4] 
                               	}			  ## key0_decode.c:85:47
  10e6fa:    68 da       	r0 ^= r5 
  10e6fc:    78 68       	[r7 + 4] = r0 
  10e6fe:    08 80       	r0 = 1 			  ## key0_decode.c:90:10
  10e700:    fc e1 2f ab 	call -27292 <p33_rd_page : 107c68 >			  ## key0_decode.c:90:10
  10e704:    40 c9       	r0 = r0.l 			  ## key0_decode.c:90:35
  10e706:    20 e4 09 3a 	r9 = [addr(232)]  <.GCPI360_1 : 10e7f0 >			  ## efuse.c:36:22
  10e70a:    10 e8 91 07 	r1 = h[r9 + 28] 			  ## efuse.c:36:22
  10e70e:    08 ce       	cmp r1, r0			  ## key0_decode.c:90:9
  10e710:    0f 10       	ifs (nzcv == 0) goto 30 <sdk_meky_check+0xD8 : 10e730 >			  ## key0_decode.c:90:9
  10e712:    05 80       	r5 = 0 
  10e714:    0e 2e       	r6 = [addr(224)]  <.GCPI360_2 : 10e7f4 >
  10e716:    09 08       	goto 18 <sdk_meky_check+0xD2 : 10e72a >
  10e718:    ff e1 bf c0 	call -2026 <get_random : 10df32 >			  ## key0_decode.c:92:31
  10e71c:    03 c6       	r3 = r0 			  ## key0_decode.c:92:31
  10e71e:    ff e1 8f c0 	call -2032 <get_random : 10df32 >			  ## key0_decode.c:92:46
  10e722:    18 06       	r0 *= r3 			  ## key0_decode.c:92:44
  10e724:    60 e7 60 05 	[r6 + r5] = r0 			  ## key0_decode.c:92:29
  10e728:    2d d1       	r5 = r5 + 4 			  ## key0_decode.c:91:9
  10e72a:    80 ef 50 80 	cmp r5, 128			  ## key0_decode.c:91:9
  10e72e:    f4 11       	ifs (nzcv != 0) goto -24 <sdk_meky_check+0xC0 : 10e718 >			  ## key0_decode.c:91:9
  10e730:    78 48       	r0 = [r7 + 4] 			  ## key0_decode.c:108:17
  10e732:    80 ce       	cmp r8, r0			  ## key0_decode.c:108:9
  10e734:    44 10       	ifs (nzcv == 0) goto 136 <sdk_meky_check+0x166 : 10e7be >			  ## key0_decode.c:108:9
  10e736:    60 e8 78 01 	[r7 + 4] = r8 			  ## key0_decode.c:112:9
  10e73a:    79 48       	r1 = [r7 + 4] 			  ## key0_decode.c:114:14
  10e73c:    c8 2b       	r0 = [addr(188)]  <.GCPI360_3 : 10e7f8 >			  ## key0_decode.c:114:18
  10e73e:    08 ce       	cmp r1, r0			  ## key0_decode.c:114:9
  10e740:    49 10       	ifs (nzcv == 0) goto 146 <sdk_meky_check+0x17C : 10e7d4 >			  ## key0_decode.c:114:9
  10e742:    79 48       	r1 = [r7 + 4] 			  ## key0_decode.c:117:27
  10e744:    48 da       	r0 ^= r1 			  ## key0_decode.c:117:31
  10e746:    78 68       	[r7 + 4] = r0 			  ## key0_decode.c:117:13
  10e748:    79 48       	r1 = [r7 + 4] 			  ## key0_decode.c:119:23
  10e74a:    25 90       	r5 = sp + 4 			  ## key0_decode.c:119:23
  10e74c:    28 c6       	r0 = r5 			  ## key0_decode.c:119:5
  10e74e:    02 81       	r2 = 32 			  ## key0_decode.c:119:5
  10e750:    da e1 ef 3f 	call -309252 <memcpy : c2f50 >			  ## key0_decode.c:119:5
  10e754:    46 41       	r6 = [sp+ 20] 			  ## key0_decode.c:123:35
  10e756:    70 c9       	r0 = r6.l 			  ## key0_decode.c:124:5
  10e758:    29 c6       	r1 = r5 			  ## key0_decode.c:124:5
  10e75a:    02 81       	r2 = 32 			  ## key0_decode.c:124:5
  10e75c:    03 80       	r3 = 0 			  ## key0_decode.c:124:5
  10e75e:    da e1 1f 44 	call -309118 <doe : c2fe4 >			  ## key0_decode.c:124:5
  10e762:    46 61       	[sp+ 20] = r6 			  ## key0_decode.c:127:29
  10e764:    88 29       	r0 = [addr(152)]  <.GCPI360_4 : 10e7fc >			  ## key0_decode.c:129:20
  10e766:    41 40       	r1 = [sp+ 4] 			  ## key0_decode.c:129:37
  10e768:    08 ce       	cmp r1, r0			  ## key0_decode.c:129:9
  10e76a:    29 11       	ifs (nzcv != 0) goto 82 <sdk_meky_check+0x166 : 10e7be >			  ## key0_decode.c:129:9
  10e76c:    00 e9 c0 02 	r0 = b[sp+ 11] 			  ## key0_decode.c:133:30
  10e770:    08 98       	cmp r0, 1			  ## key0_decode.c:133:9
  10e772:    25 11       	ifs (nzcv != 0) goto 74 <sdk_meky_check+0x166 : 10e7be >			  ## key0_decode.c:133:9
  10e774:    10 e9 80 08 	r0 = h[sp+ 34] 			  ## key0_decode.c:136:25
  10e778:    78 98       	cmp r0, 15			  ## key0_decode.c:136:9
  10e77a:    21 11       	ifs (nzcv != 0) goto 66 <sdk_meky_check+0x166 : 10e7be >			  ## key0_decode.c:136:9
  10e77c:    a8 d1       	r0 = r5 + 6 			  ## key0_decode.c:140:36
  10e77e:    d1 80       	r1 = 26 			  ## key0_decode.c:140:15
  10e780:    fb e1 df ba 	call -34982 <CRC16 : 105ede >			  ## key0_decode.c:140:15
  10e784:    10 e9 01 02 	r1 = h[sp+ 8] 			  ## key0_decode.c:141:30
  10e788:    01 ce       	cmp r0, r1			  ## key0_decode.c:141:9
  10e78a:    0f 10       	ifs (nzcv == 0) goto 30 <sdk_meky_check+0x152 : 10e7aa >			  ## key0_decode.c:141:9
  10e78c:    05 80       	r5 = 0 
  10e78e:    46 2e       	r6 = [addr(100)]  <.GCPI360_2 : 10e7f4 >
  10e790:    09 08       	goto 18 <sdk_meky_check+0x14C : 10e7a4 >
  10e792:    ff e1 ef bc 	call -2148 <get_random : 10df32 >			  ## key0_decode.c:143:31
  10e796:    03 c6       	r3 = r0 			  ## key0_decode.c:143:31
  10e798:    ff e1 bf bc 	call -2154 <get_random : 10df32 >			  ## key0_decode.c:143:46
  10e79c:    18 06       	r0 *= r3 			  ## key0_decode.c:143:44
  10e79e:    60 e7 60 05 	[r6 + r5] = r0 			  ## key0_decode.c:143:29
  10e7a2:    2d d1       	r5 = r5 + 4 			  ## key0_decode.c:142:9
  10e7a4:    80 ef 50 80 	cmp r5, 128			  ## key0_decode.c:142:9
  10e7a8:    f4 11       	ifs (nzcv != 0) goto -24 <sdk_meky_check+0x13A : 10e792 >			  ## key0_decode.c:142:9
  10e7aa:    10 e8 90 07 	r0 = h[r9 + 28] 			  ## efuse.c:36:22
  10e7ae:    10 e9 81 07 	r1 = h[sp+ 30] 			  ## key0_decode.c:148:55
  10e7b2:    48 da       	r0 ^= r1 			  ## key0_decode.c:148:42
  10e7b4:    10 e9 01 07 	r1 = h[sp+ 28] 			  ## key0_decode.c:148:30
  10e7b8:    88 da       	r0 &= r1 			  ## key0_decode.c:148:42
  10e7ba:    40 c9       	r0 = r0.l 			  ## key0_decode.c:148:42
  10e7bc:    14 10       	ifs (nzcv == 0) goto 40 <sdk_meky_check+0x18E : 10e7e6 >			  ## key0_decode.c:148:42
  10e7be:    03 80       	r3 = 0 
  10e7c0:    45 2b       	r5 = [addr(52)]  <.GCPI360_2 : 10e7f4 >
  10e7c2:    05 08       	goto 10 <sdk_meky_check+0x176 : 10e7ce >
  10e7c4:    ff e1 5f bb 	call -2198 <get_random : 10df32 >			  ## key0_decode.c:159:27
  10e7c8:    60 e7 50 03 	[r5 + r3] = r0 			  ## key0_decode.c:159:25
  10e7cc:    1b d1       	r3 = r3 + 4 			  ## key0_decode.c:158:5
  10e7ce:    80 ef 30 80 	cmp r3, 128			  ## key0_decode.c:158:5
  10e7d2:    f8 11       	ifs (nzcv != 0) goto -16 <sdk_meky_check+0x16C : 10e7c4 >			  ## key0_decode.c:158:5
  10e7d4:    00 80       	r0 = 0 
  10e7d6:    b8 68       	[r7 + 8] = r0 
  10e7d8:    00 90       	r0 = sp + 0 
  10e7da:    11 80       	r1 = 2 			  ## key0_decode.c:176:18
  10e7dc:    fb e1 ff b7 	call -35074 <CRC16 : 105ede >			  ## key0_decode.c:176:18
  10e7e0:    60 da       	r0 ^= r4 			  ## key0_decode.c:176:16
  10e7e2:    28 cd       	sp += 40 			  ## key0_decode.c:176:16
  10e7e4:    19 c0       	{pc, r9-r4} = [sp++] 			  ## key0_decode.c:176:16
  10e7e6:    00 29       	r0 = [addr(16)]  <.GCPI360_3 : 10e7f8 >			  ## key0_decode.c:149:13
  10e7e8:    78 68       	[r7 + 4] = r0 			  ## key0_decode.c:149:13
  10e7ea:    f4 0f       	goto -24 <sdk_meky_check+0x17C : 10e7d4 >			  ## key0_decode.c:149:13


.GCPI360_0:
  10e7ec:    1c 00 00 00     < 28 : 0x1C >

.GCPI360_1:
  10e7f0:    8c 7e 00 00     < 32396 : 0x7E8C >

.GCPI360_2:
  10e7f4:    00 7f 00 00     < 32512 : 0x7F00 >

.GCPI360_3:
  10e7f8:    98 36 6c f3     < 4083955352 : 0xF36C3698 >

.GCPI360_4:
  10e7fc:    4a 4b 59 53     < 1398360906 : 0x53594B4A >

src_need_buf:
  10e800:    10 ea 68 01 	r0 = 360 			  ## src.c:105:0
  10e804:    20 00       	rts			  ## src.c:106:5


src_run_api:
  10e806:    1e c2       	[--sp] = {rets, r14-r4} 			  ## src.c:202:0
  10e808:    f8 cd       	sp += -8 			  ## src.c:202:0
  10e80a:    17 c6       	r7 = r2 			  ## src.c:202:0
  10e80c:    05 c6       	r5 = r0 			  ## src.c:202:0
  10e80e:    01 ed 54 64 	r4 = r5 + 356 			  ## src.c:202:0
  10e812:    22 50       	r2 = h[r4 + 0] 			  ## src.c:214:23
  10e814:    a2 21       	if (r2 == 0) goto 52 <src_run_api+0x44 : 10e84a >			  ## src.c:214:23
  10e816:    0e c6       	r6 = r1 
  10e818:    20 54       	r0 = h[r4 + 2] 			  ## src.c:215:22
  10e81a:    00 ed 59 4c 	r9 = r5 + 76 			  ## src.c:215:31
  10e81e:    00 ee 91 00 	r1 = r9 + r0 			  ## src.c:215:22
  10e822:    2b 48       	r3 = [r5 + 0] 			  ## src.c:216:26
  10e824:    00 e5 33 00 	r3, r0 = d[r3 + 0] 			  ## src.c:216:50
  10e828:    ab 01       	call r3			  ## src.c:216:17
  10e82a:    01 ed 51 66 	r1 = r5 + 358 			  ## src.c:215:45
  10e82e:    09 50       	r1 = h[r1 + 0] 			  ## src.c:217:24
  10e830:    09 d4       	r1 = r1 + r0 			  ## src.c:217:24
  10e832:    21 74       	h[r4 + 2] = r1 			  ## src.c:217:24
  10e834:    21 50       	r1 = h[r4 + 0] 			  ## src.c:218:24
  10e836:    08 d6       	r0 = r1 - r0 			  ## src.c:218:24
  10e838:    20 70       	h[r4 + 0] = r0 			  ## src.c:218:24
  10e83a:    41 c9       	r1 = r0.l 			  ## src.c:219:18
  10e83c:    00 80       	r0 = 0 			  ## src.c:219:18
  10e83e:    67 11       	ifs (nzcv != 0) goto 206 <src_run_api+0x108 : 10e90e >			  ## src.c:219:18
  10e840:    00 80       	r0 = 0 			  ## src.c:220:28
  10e842:    04 60       	[sp] = r4 			  ## src.c:220:28
  10e844:    20 74       	h[r4 + 2] = r0 			  ## src.c:220:28
  10e846:    31 c6       	r1 = r6 			  ## src.c:220:28
  10e848:    03 08       	goto 6 <src_run_api+0x4A : 10e850 >			  ## src.c:220:28
  10e84a:    04 60       	[sp] = r4 
  10e84c:    00 ed 59 4c 	r9 = r5 + 76 
  10e850:    78 bf       	r0 = r7 >> 31 			  ## src.c:205:21
  10e852:    c0 d5       	r0 = r0 + r7 			  ## src.c:205:21
  10e854:    c4 a1       	r4 = r0 >>> 1 			  ## src.c:205:21
  10e856:    00 ed 5a 1c 	r10 = r5 + 28 
  10e85a:    10 e8 58 82 	r8 = h[r5 + 10] 			  ## src.c:226:14
  10e85e:    54 ea 00 00 	r12 = 0 
  10e862:    55 ea 8a 00 	r13 = 138 
  10e866:    21 ea 0e 01 	r14 = 65537 
  10e86a:    06 80       	r6 = 0 
  10e86c:    04 98       	cmp r4, 0
  10e86e:    4e 10       	ifs (nzcv == 0) goto 156 <src_run_api+0x106 : 10e90c >
  10e870:    48 2a       	r0 = [addr(164)]  <.GCPI363_0 : 10e914 >
  10e872:    60 e8 0c f9 	[r0 + -28] = r12 			  ## src.c:117:18
  10e876:    60 e8 0c fa 	[r0 + -24] = r12 			  ## src.c:118:18
  10e87a:    60 e8 0c fb 	[r0 + -20] = r12 			  ## src.c:120:18
  10e87e:    60 e8 0c fc 	[r0 + -16] = r12 			  ## src.c:121:18
  10e882:    60 ce       	cmp r4, r8			  ## src.c:232:17
  10e884:    c3 c6       	r11 = r8 			  ## src.c:232:17
  10e886:    90 03       	if (nzcv <= 0) {			  ## src.c:232:17
  10e888:    63 c6       		r11 = r4 
                               	}			  ## src.c:232:17
  10e88a:    60 e8 0b fe 	[r0 + -8] = r11 			  ## src.c:138:22
  10e88e:    41 60       	[sp+ 4] = r1 			  ## src.c:138:22
  10e890:    41 6f       	[r0 + -12] = r1 			  ## src.c:139:22
  10e892:    60 e8 09 ff 	[r0 + -4] = r9 			  ## src.c:143:22
  10e896:    60 e8 0d 00 	[r0 + 0] = r13 			  ## src.c:144:22
  10e89a:    69 49       	r1 = [r5 + 20] 			  ## src.c:157:26
  10e89c:    41 6e       	[r0 + -28] = r1 			  ## src.c:157:18
  10e89e:    60 e8 0a 01 	[r0 + 4] = r10 			  ## src.c:158:22
  10e8a2:    f0 e3 09 07 	[r0 + -28] &= (~7) 			  ## src.c:160:18
  10e8a6:    60 e8 0e fb 	[r0 + -20] = r14 			  ## src.c:163:18
  10e8aa:    60 e8 0e fc 	[r0 + -16] = r14 			  ## src.c:164:18
  10e8ae:    29 49       	r1 = [r5 + 16] 			  ## src.c:168:27
  10e8b0:    c1 69       	[r0 + 28] = r1 			  ## src.c:168:19
  10e8b2:    69 50       	r1 = h[r5 + 4] 			  ## src.c:169:17
  10e8b4:    90 e8 52 02 	r2 = h[r5 + 8] (s) 			  ## src.c:169:42
  10e8b8:    89 d4       	r1 = r1 + r2 			  ## src.c:169:40
  10e8ba:    41 69       	[r0 + 20] = r1 			  ## src.c:171:18
  10e8bc:    69 54       	r1 = h[r5 + 6] 			  ## src.c:172:21
  10e8be:    81 69       	[r0 + 24] = r1 			  ## src.c:172:19
  10e8c0:    f0 e2 09 08 	[r0 + -28] |= 8 			  ## src.c:174:18
  10e8c4:    41 4e       	r1 = [r0 + -28] 			  ## src.c:180:21
  10e8c6:    89 c9       	r1 = r1.b (s) 			  ## src.c:180:26
  10e8c8:    f9 9f       	cmp r1, -1			  ## src.c:180:13
  10e8ca:    fc 1c       	ifs (nzcv > 0) goto -8 <src_run_api+0xBE : 10e8c4 >			  ## src.c:180:13
  10e8cc:    f0 e2 09 40 	[r0 + -28] |= 64 			  ## src.c:182:26
  10e8d0:    01 48       	r1 = [r0 + 0] 			  ## src.c:189:26
  10e8d2:    a9 69       	[r5 + 24] = r1 			  ## src.c:189:16
  10e8d4:    c2 49       	r2 = [r0 + 28] 			  ## src.c:190:27
  10e8d6:    2a 69       	[r5 + 16] = r2 			  ## src.c:190:17
  10e8d8:    40 4e       	r0 = [r0 + -28] 			  ## src.c:192:33
  10e8da:    18 db       	r0 &= (~8)			  ## src.c:192:38
  10e8dc:    68 69       	[r5 + 20] = r0 			  ## src.c:192:23
  10e8de:    2a 48       	r2 = [r5 + 0] 			  ## src.c:239:26
  10e8e0:    00 e5 23 00 	r3, r0 = d[r2 + 0] 			  ## src.c:239:50
  10e8e4:    20 ee 11 8a 	r1 = 138 - r1 			  ## src.c:237:46
  10e8e8:    0f a1       	r7 = r1 << 1 			  ## src.c:237:68
  10e8ea:    89 c6       	r1 = r9 			  ## src.c:239:17
  10e8ec:    3a c6       	r2 = r7 			  ## src.c:239:17
  10e8ee:    ab 01       	call r3			  ## src.c:239:17
  10e8f0:    40 ee 44 0b 	r4 = r4 - r11 			  ## src.c:236:15
  10e8f4:    9e cb       	r6 += r11 			  ## src.c:233:18
  10e8f6:    20 f7 b1 01 	r1 = r11 << 1 			  ## src.c:235:15
  10e8fa:    42 40       	r2 = [sp+ 4] 			  ## src.c:235:15
  10e8fc:    52 d4       	r2 = r2 + r1 			  ## src.c:235:15
  10e8fe:    11 c6       	r1 = r2 
  10e900:    38 ce       	cmp r7, r0			  ## src.c:240:13
  10e902:    b4 19       	if (nzcv <= 0) goto -152 <src_run_api+0x66 : 10e86c >			  ## src.c:240:13
  10e904:    01 40       	r1 = [sp] 
  10e906:    08 74       	h[r1 + 2] = r0 			  ## src.c:241:28
  10e908:    38 d6       	r0 = r7 - r0 			  ## src.c:242:35
  10e90a:    08 70       	h[r1 + 0] = r0 			  ## src.c:242:28
  10e90c:    30 a1       	r0 = r6 << 1 			  ## src.c:247:21
  10e90e:    08 cd       	sp += 8 
  10e910:    1e c0       	{pc, r14-r4} = [sp++] 
  10e912:    00 00       	nop


.GCPI363_0:
  10e914:    1c 05 08 00     < 525596 : 0x8051C >

src_config:
  10e918:    16 c2       	[--sp] = {rets, r6-r4} 			  ## src.c:298:0
  10e91a:    16 c6       	r6 = r2 			  ## src.c:298:0
  10e91c:    05 c6       	r5 = r0 			  ## src.c:298:0
  10e91e:    c8 d3       	r0 = r1 + -1 			  ## src.c:301:5
  10e920:    04 80       	r4 = 0 			  ## src.c:301:5
  10e922:    18 98       	cmp r0, 3			  ## src.c:301:5
  10e924:    1d 18       	if (nzcv > 0) goto 58 <.GJTIE364_0_0_+0x34 : 10e960 >			  ## src.c:301:5
  10e926:    b0 01       	tbb [r0]


.GJTIS364_0_0_:
  10e928:    02     < 2 : 0x2 >
  10e929:    06     < 6 : 0x6 >
  10e92a:    11     < 17 : 0x11 >
  10e92b:    16     < 22 : 0x16 >
  10e92c:    da e1 af 2f 	call -309772 <local_irq_disable : c2f24 >			  ## src.c:260:5
  10e930:    6e 70       	h[r5 + 4] = r6 			  ## src.c:261:28
  10e932:    05 08       	goto 10 <.GJTIE364_0_0_+0x12 : 10e93e >			  ## src.c:261:28
  10e934:    da e1 6f 2f 	call -309780 <local_irq_disable : c2f24 >			  ## src.c:268:5
  10e938:    a8 50       	r0 = h[r5 + 8] 			  ## src.c:274:32
  10e93a:    80 d5       	r0 = r0 + r6 			  ## src.c:274:32
  10e93c:    a8 70       	h[r5 + 8] = r0 			  ## src.c:274:32
  10e93e:    28 c6       	r0 = r5 
  10e940:    fd e1 af 09 	call -24268 <src_max_in : 108a78 >
  10e944:    da e1 cf 2e 	call -309800 <local_irq_enable : c2f20 >
  10e948:    0b 08       	goto 22 <.GJTIE364_0_0_+0x34 : 10e960 >
  10e94a:    78 80       	r0 = 15 			  ## src.c:285:20
  10e94c:    30 68       	[r6 + 0] = r0 			  ## src.c:285:20
  10e94e:    14 ea 68 01 	r4 = 360 
  10e952:    06 08       	goto 12 <.GJTIE364_0_0_+0x34 : 10e960 >
  10e954:    00 29       	r0 = [addr(16)]  <.GCPI364_0 : 10e964 >			  ## src.c:293:5
  10e956:    04 29       	r4 = [addr(16)]  <.GCPI364_1 : 10e968 >			  ## src.c:293:5
  10e958:    42 29       	r2 = [addr(20)]  <.GCPI364_2 : 10e96c >			  ## src.c:293:5
  10e95a:    21 c6       	r1 = r4 			  ## src.c:293:5
  10e95c:    da e1 ef 33 	call -309636 <xprintf : c2fdc >			  ## src.c:293:5
  10e960:    20 c6       	r0 = r4 			  ## src.c:315:5
  10e962:    16 c0       	{pc, r6-r4} = [sp++] 


.GCPI364_0:
  10e964:    5f d4 11 00     < 1168479 : 0x11D45F >

.GCPI364_1:
  10e968:    4a d4 11 00     < 1168458 : 0x11D44A >

.GCPI364_2:
  10e96c:    56 d4 11 00     < 1168470 : 0x11D456 >

post_event:
  10e970:    15 c2       	[--sp] = {rets, r5, r4} 			  ## msg.c:175:0
  10e972:    04 c6       	r4 = r0 			  ## msg.c:175:0
  10e974:    0c 99       	cmp r4, 33			  ## msg.c:176:9
  10e976:    0f 18       	if (nzcv > 0) goto 30 <post_event+0x26 : 10e996 >			  ## msg.c:176:9
  10e978:    60 a5       	r0 = r4 >> 5 			  ## msg.c:182:5
  10e97a:    00 a2       	r0 = r0 << 2 			  ## msg.c:182:5
  10e97c:    c1 29       	r1 = [addr(28)]  <.GCPI365_0 : 10e998 >			  ## msg.c:182:5
  10e97e:    0d d4       	r5 = r1 + r0 			  ## msg.c:182:5
  10e980:    da e1 0f 2d 	call -309856 <local_irq_disable : c2f24 >			  ## msg.c:181:5
  10e984:    24 e8 50 22 	r0 = [++ r5 = 136] 			  ## msg.c:182:27
  10e988:    80 f3 41 1f 	r1 = r4 & 31 			  ## msg.c:182:30
  10e98c:    00 f1 00 01 	r0 = r0 | setbit(r1) 			  ## msg.c:182:27
  10e990:    28 68       	[r5 + 0] = r0 			  ## msg.c:182:27
  10e992:    da e1 5f 2c 	call -309878 <local_irq_enable : c2f20 >			  ## msg.c:183:5
  10e996:    15 c0       	{pc, r5, r4} = [sp++] 


.GCPI365_0:
  10e998:    60 1c 00 00     < 7264 : 0x1C60 >

decoder_soft0_isr:
  10e99c:    c1 c5       	[--sp] = {psr, rets, reti} 			  ## decoder_mge.c:123:0
  10e99e:    ff e6 ff 7f 	[--sp] = {r14-r0} 			  ## decoder_mge.c:123:0
  10e9a2:    f8 cd       	sp += -8 			  ## decoder_mge.c:123:0
  10e9a4:    54 ea 00 00 	r12 = 0 			  ## decoder_mge.c:123:0
  10e9a8:    00 80       	r0 = 0 			  ## decoder_mge.c:125:5
  10e9aa:    da e1 ff 2b 	call -309890 <bit_clr_swi : c2f2c >			  ## decoder_mge.c:125:5
  10e9ae:    57 2e       	r7 = [addr(356)]  <.GCPI366_0 : 10eb14 >
  10e9b0:    94 2e       	r4 = [addr(360)]  <.GCPI366_1 : 10eb18 >
  10e9b2:    20 e4 0d 5a 	r13 = [addr(360)]  <.GCPI366_2 : 10eb1c >
  10e9b6:    20 e4 0b 5c 	r11 = [addr(368)]  <.GCPI366_5 : 10eb28 >
  10e9ba:    06 80       	r6 = 0 
  10e9bc:    9e 08       	goto 316 <decoder_soft0_isr+0x15E : 10eafa >
  10e9be:    20 e8 78 00 	r8 = [r7 + 0] 			  ## decoder_mge.c:133:23
  10e9c2:    80 ef 80 00 	cmp r8, 0			  ## decoder_mge.c:134:13
  10e9c6:    00 fb 60 09 	ifs (nzcv == 0) goto 300 <decoder_soft0_isr+0x15A : 10eaf6 >			  ## decoder_mge.c:134:13
  10e9ca:    20 e8 89 01 	r9 = [r8 + 4] 			  ## decoder_mge.c:135:24
  10e9ce:    20 e8 80 09 	r0 = [r8 + 36] 			  ## decoder_mge.c:136:28
  10e9d2:    80 c9       	r0 = r0.b (s) 			  ## decoder_mge.c:136:35
  10e9d4:    00 98       	cmp r0, 0			  ## decoder_mge.c:136:17
  10e9d6:    00 fb eb 08 	ifs (nzcv < 0) goto 284 <decoder_soft0_isr+0x15A : 10eaf6 >			  ## decoder_mge.c:136:17
  10e9da:    20 e8 80 09 	r0 = [r8 + 36] 			  ## decoder_mge.c:140:34
  10e9de:    00 f4 00 01 	tst r0, 1			  ## decoder_mge.c:140:17
  10e9e2:    00 fb 80 08 	ifs (nzcv == 0) goto 272 <decoder_soft0_isr+0x15A : 10eaf6 >			  ## decoder_mge.c:140:17
  10e9e6:    20 e8 80 09 	r0 = [r8 + 36] 			  ## decoder_mge.c:143:28
  10e9ea:    00 f4 00 08 	tst r0, 8			  ## decoder_mge.c:143:17
  10e9ee:    00 fb 21 08 	ifs (nzcv != 0) goto 260 <decoder_soft0_isr+0x15A : 10eaf6 >			  ## decoder_mge.c:143:17
  10e9f2:    00 ed 8e 18 	r14 = r8 + 24 			  ## decoder_mge.c:136:22
  10e9f6:    20 e8 80 09 	r0 = [r8 + 36] 			  ## decoder_mge.c:146:34
  10e9fa:    0f f4 00 80 	tst r0, 256			  ## decoder_mge.c:146:17
  10e9fe:    45 10       	ifs (nzcv == 0) goto 138 <decoder_soft0_isr+0xEE : 10ea8a >			  ## decoder_mge.c:146:17
  10ea00:    80 e8 80 cd 	r0 = b[r8 + 55] (s) 			  ## decoder_mge.c:150:22
  10ea04:    00 ed 8a 34 	r10 = r8 + 52 			  ## decoder_mge.c:150:22
  10ea08:    08 98       	cmp r0, 1			  ## decoder_mge.c:150:17
  10ea0a:    13 1b       	ifs (nzcv < 0) goto 38 <decoder_soft0_isr+0x96 : 10ea32 >			  ## decoder_mge.c:150:17
  10ea0c:    40 60       	[sp+ 4] = r0 			  ## decoder_mge.c:153:34
  10ea0e:    20 e8 80 02 	r0 = [r8 + 8] 			  ## decoder_mge.c:154:39
  10ea12:    20 e8 93 09 	r3 = [r9 + 36] 			  ## decoder_mge.c:154:22
  10ea16:    22 90       	r2 = sp + 4 			  ## decoder_mge.c:154:22
  10ea18:    11 ea 94 00 	r1 = 148 			  ## decoder_mge.c:154:17
  10ea1c:    ab 01       	call r3			  ## decoder_mge.c:154:17
  10ea1e:    20 e8 80 02 	r0 = [r8 + 8] 			  ## decoder_mge.c:155:37
  10ea22:    20 e8 92 03 	r2 = [r9 + 12] 			  ## decoder_mge.c:155:28
  10ea26:    09 80       	r1 = 1 			  ## decoder_mge.c:155:23
  10ea28:    aa 01       	call r2
  10ea2a:    05 c6       	r5 = r0 
  10ea2c:    40 e8 ac c0 	b[r10 + 3] = r12 
  10ea30:    09 08       	goto 18 <decoder_soft0_isr+0xA8 : 10ea44 >
  10ea32:    f8 9f       	cmp r0, -1			  ## decoder_mge.c:157:24
  10ea34:    32 1d       	ifs (nzcv <= 0) goto 100 <decoder_soft0_isr+0xFE : 10ea9a >			  ## decoder_mge.c:157:24
  10ea36:    20 e8 80 02 	r0 = [r8 + 8] 			  ## decoder_mge.c:166:37
  10ea3a:    20 e8 92 03 	r2 = [r9 + 12] 			  ## decoder_mge.c:166:28
  10ea3e:    01 80       	r1 = 0 			  ## decoder_mge.c:166:23
  10ea40:    aa 01       	call r2			  ## decoder_mge.c:166:23
  10ea42:    05 c6       	r5 = r0 			  ## decoder_mge.c:166:23
  10ea44:    0f e3 89 80 	[r8 + 36] &= (~256) 			  ## decoder_mge.c:169:31
  10ea48:    05 22       	if (r5 == 0) goto 64 <decoder_soft0_isr+0xEE : 10ea8a >			  ## decoder_mge.c:169:31
  10ea4a:    85 9a       	cmp r5, 80
  10ea4c:    23 10       	ifs (nzcv == 0) goto 70 <decoder_soft0_isr+0xF8 : 10ea94 >
  10ea4e:    05 9a       	cmp r5, 64
  10ea50:    37 11       	ifs (nzcv != 0) goto 110 <decoder_soft0_isr+0x124 : 10eac0 >
  10ea52:    00 e8 a0 00 	r0 = b[r10 + 0] 			  ## decoder_mge.c:172:31
  10ea56:    40 23       	if (r0 == 0) goto 104 <decoder_soft0_isr+0x124 : 10eac0 >			  ## decoder_mge.c:172:31
  10ea58:    80 ef 00 ff 	cmp r0, 255
  10ea5c:    11 03       	ifs (nzcv != 0) {			  ## decoder_mge.c:174:34
  10ea5e:    c0 d3       		r0 = r0 + -1 			  ## decoder_mge.c:174:34
  10ea60:    40 e8 a0 00 		b[r10 + 0] = r0 
                               	}			  ## decoder_mge.c:174:34
  10ea64:    20 e8 80 03 	r0 = [r8 + 12] 			  ## decoder_mge.c:176:35
  10ea68:    80 22       	if (r0 == 0) goto 80 <decoder_soft0_isr+0x11E : 10eaba >			  ## decoder_mge.c:176:25
  10ea6a:    48 2b       	r0 = [addr(180)]  <.GCPI366_3 : 10eb20 >			  ## decoder_mge.c:177:25
  10ea6c:    da e1 6f 2b 	call -309908 <xprintf : c2fdc >			  ## decoder_mge.c:177:25
  10ea70:    00 e5 82 02 	r2, r0 = d[r8 + 8] 			  ## decoder_mge.c:178:81
  10ea74:    20 e8 93 09 	r3 = [r9 + 36] 			  ## decoder_mge.c:178:30
  10ea78:    11 ea 90 00 	r1 = 144 			  ## decoder_mge.c:178:25
  10ea7c:    ab 01       	call r3			  ## decoder_mge.c:178:25
  10ea7e:    20 e8 80 04 	r0 = [r8 + 16] 			  ## decoder_mge.c:180:41
  10ea82:    80 5a       	r0 = b[r0 + 9] 			  ## decoder_mge.c:180:36
  10ea84:    ff e1 4f f7 	call -280 <post_event : 10e970 >			  ## decoder_mge.c:180:25
  10ea88:    36 08       	goto 108 <decoder_soft0_isr+0x15A : 10eaf6 >			  ## decoder_mge.c:180:25
  10ea8a:    b0 c6       	r0 = r14 
  10ea8c:    a9 c6       	r1 = r13 
  10ea8e:    79 e1 bf 01 	call -1105866 <if_kick_decoder : ac8 >
  10ea92:    31 08       	goto 98 <decoder_soft0_isr+0x15A : 10eaf6 >
  10ea94:    00 e2 89 80 	[r8 + 36] |= 128 			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\common\decoder\list\midi_ctrl_api.c:42:27
  10ea98:    2e 08       	goto 92 <decoder_soft0_isr+0x15A : 10eaf6 >			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\common\decoder\list\midi_ctrl_api.c:42:27
  10ea9a:    80 dc       	r0 = -r0 			  ## decoder_mge.c:160:38
  10ea9c:    00 60       	[sp] = r0 			  ## decoder_mge.c:160:34
  10ea9e:    20 e8 80 02 	r0 = [r8 + 8] 			  ## decoder_mge.c:161:39
  10eaa2:    20 e8 93 09 	r3 = [r9 + 36] 			  ## decoder_mge.c:161:22
  10eaa6:    02 90       	r2 = sp + 0 			  ## decoder_mge.c:161:22
  10eaa8:    11 ea 94 00 	r1 = 148 			  ## decoder_mge.c:161:17
  10eaac:    ab 01       	call r3			  ## decoder_mge.c:161:17
  10eaae:    20 e8 80 02 	r0 = [r8 + 8] 			  ## decoder_mge.c:162:37
  10eab2:    20 e8 92 03 	r2 = [r9 + 12] 			  ## decoder_mge.c:162:28
  10eab6:    11 80       	r1 = 2 			  ## decoder_mge.c:162:23
  10eab8:    b7 0f       	goto -146 <decoder_soft0_isr+0x8C : 10ea28 >			  ## decoder_mge.c:162:23
  10eaba:    80 2e       	r0 = [addr(104)]  <.GCPI366_4 : 10eb24 >			  ## decoder_mge.c:184:25
  10eabc:    da e1 ef 28 	call -309988 <xprintf : c2fdc >			  ## decoder_mge.c:184:25
  10eac0:    98 c6       	r0 = r11 			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\common\decoder\decoder_api.c:247:9
  10eac2:    29 c6       	r1 = r5 			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\common\decoder\decoder_api.c:247:9
  10eac4:    da e1 af 28 	call -309996 <xprintf : c2fdc >			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\common\decoder\decoder_api.c:247:9
  10eac8:    20 e8 80 04 	r0 = [r8 + 16] 			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\common\decoder\decoder_api.c:247:9
  10eacc:    8d 9a       	cmp r5, 81			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\common\decoder\decoder_api.c:248:13
  10eace:    04 11       	ifs (nzcv != 0) goto 8 <decoder_soft0_isr+0x13C : 10ead8 >			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\common\decoder\decoder_api.c:248:13
  10ead0:    00 58       	r0 = b[r0 + 0] 			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\common\decoder\decoder_api.c:250:24
  10ead2:    ff e1 df f4 	call -358 <post_event : 10e970 >			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\common\decoder\decoder_api.c:250:13
  10ead6:    0a 08       	goto 20 <decoder_soft0_isr+0x150 : 10eaec >			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\common\decoder\decoder_api.c:250:13
  10ead8:    80 f3 51 0f 	r1 = r5 & 15 			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\common\decoder\decoder_api.c:252:43
  10eadc:    00 e7 00 01 	r0 = b[r0 + r1] 			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\common\decoder\decoder_api.c:252:24
  10eae0:    ff e1 6f f4 	call -372 <post_event : 10e970 >			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\common\decoder\decoder_api.c:252:13
  10eae4:    1d 9a       	cmp r5, 67			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\common\decoder\decoder_api.c:255:5
  10eae6:    02 10       	ifs (nzcv == 0) goto 4 <decoder_soft0_isr+0x150 : 10eaec >			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\common\decoder\decoder_api.c:255:5
  10eae8:    05 9a       	cmp r5, 64
  10eaea:    05 11       	ifs (nzcv != 0) goto 10 <decoder_soft0_isr+0x15A : 10eaf6 >
  10eaec:    00 e2 89 08 	[r8 + 36] |= 8 			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\common\decoder\decoder_api.c:259:27
  10eaf0:    c0 2b       	r0 = [addr(60)]  <.GCPI366_6 : 10eb2c >			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\common\decoder\decoder_api.c:260:9
  10eaf2:    da e1 3f 27 	call -310042 <xprintf : c2fdc >			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\common\decoder\decoder_api.c:260:9
  10eaf6:    3f d1       	r7 = r7 + 4 			  ## decoder_mge.c:132:5
  10eaf8:    76 d0       	r6 = r6 + 1 			  ## decoder_mge.c:132:39
  10eafa:    21 58       	r1 = b[r4 + 0] 
  10eafc:    30 80       	r0 = 6 			  ## decoder_mge.c:132:21
  10eafe:    19 20       	if (r1 != 0) goto 2 <decoder_soft0_isr+0x166 : 10eb02 >			  ## decoder_mge.c:132:21
  10eb00:    00 80       	r0 = 0 			  ## decoder_mge.c:132:21
  10eb02:    30 ce       	cmp r6, r0			  ## decoder_mge.c:132:5
  10eb04:    ff fb b3 f5 	if (nzcv < 0) goto -330 <decoder_soft0_isr+0x22 : 10e9be >			  ## decoder_mge.c:132:5
  10eb08:    08 cd       	sp += 8 
  10eb0a:    8f e6 ff 7f 	{r14-r0} = [sp++] 
  10eb0e:    c1 c4       	{psr, rets, reti} = [sp++] 
  10eb10:    30 00       	rti			  ## decoder_mge.c:214:1
  10eb12:    00 00       	nop			  ## decoder_mge.c:214:1


.GCPI366_0:
  10eb14:    00 0d 00 00     < 3328 : 0xD00 >

.GCPI366_1:
  10eb18:    28 1c 00 00     < 7208 : 0x1C28 >

.GCPI366_2:
  10eb1c:    a0 0a 00 00     < 2720 : 0xAA0 >

.GCPI366_3:
  10eb20:    8b d4 11 00     < 1168523 : 0x11D48B >

.GCPI366_4:
  10eb24:    ac d4 11 00     < 1168556 : 0x11D4AC >

.GCPI366_5:
  10eb28:    95 a7 11 00     < 1157013 : 0x11A795 >

.GCPI366_6:
  10eb2c:    ba a7 11 00     < 1157050 : 0x11A7BA >

src_run:
  10eb30:    14 c2       	[--sp] = {rets, r4} 			  ## src_phy.c:113:0
  10eb32:    03 e5 00 00 	r0, r3 = d[r0 + 0] 			  ## src_phy.c:119:26
  10eb36:    84 48       	r4 = [r0 + 8] 			  ## src_phy.c:119:16
  10eb38:    18 c6       	r0 = r3 			  ## src_phy.c:119:11
  10eb3a:    ac 01       	call r4			  ## src_phy.c:119:11
  10eb3c:    14 c0       	{pc, r4} = [sp++] 


echo_run.1208:
  10eb3e:    1e c2       	[--sp] = {rets, r14-r4} 			  ## echo_main.c:208:0
  10eb40:    30 c5       	[--sp] = {macch, maccl} 			  ## echo_main.c:208:0
  10eb42:    dc cd       	sp += -36 			  ## echo_main.c:208:0
  10eb44:    15 c6       	r5 = r2 			  ## echo_main.c:208:0
  10eb46:    0e c6       	r6 = r1 			  ## echo_main.c:208:0
  10eb48:    04 c6       	r4 = r0 			  ## echo_main.c:208:0
  10eb4a:    21 c6       	r1 = r4 			  ## echo_main.c:217:16
  10eb4c:    24 e8 10 28 	r0 = [++ r1 = 160] 			  ## echo_main.c:217:16
  10eb50:    01 61       	[sp+ 16] = r1 			  ## echo_main.c:217:16
  10eb52:    01 80       	r1 = 0 			  ## echo_main.c:217:16
  10eb54:    00 98       	cmp r0, 0			  ## echo_main.c:217:6
  10eb56:    00 80       	r0 = 0 			  ## echo_main.c:217:6
  10eb58:    c0 60       	[sp+ 12] = r0 			  ## echo_main.c:217:6
  10eb5a:    11 03       	ifs (nzcv != 0) {			  ## echo_main.c:213:27
  10eb5c:    20 48       		r0 = [r4 + 0] 			  ## echo_main.c:213:27
  10eb5e:    c0 60       		[sp+ 12] = r0 
                               	}
  10eb60:    01 ed 49 e4 	r9 = r4 + 484 
  10eb64:    90 e8 92 00 	r2 = h[r9 + 0] (s) 			  ## echo_main.c:222:16
  10eb68:    01 ed 4c 64 	r12 = r4 + 356 			  ## echo_main.c:215:58
  10eb6c:    60 48       	r0 = [r4 + 4] 			  ## echo_main.c:213:58
  10eb6e:    80 60       	[sp+ 8] = r0 
  10eb70:    01 ed 48 50 	r8 = r4 + 336 
  10eb74:    72 21       	if (r2 == 0) goto 46 <echo_run.1208+0x66 : 10eba4 >
  10eb76:    90 e8 90 80 	r0 = h[r9 + 2] (s) 			  ## echo_main.c:224:81
  10eb7a:    00 ee c1 00 	r1 = r12 + r0 			  ## echo_main.c:224:81
  10eb7e:    00 e5 83 03 	r3, r0 = d[r8 + 12] 			  ## echo_main.c:224:74
  10eb82:    ab 01       	call r3			  ## echo_main.c:224:19
  10eb84:    01 ed 41 e6 	r1 = r4 + 486 			  ## echo_main.c:224:104
  10eb88:    09 50       	r1 = h[r1 + 0] 			  ## echo_main.c:225:21
  10eb8a:    09 d4       	r1 = r1 + r0 			  ## echo_main.c:225:21
  10eb8c:    50 e8 91 80 	h[r9 + 2] = r1 			  ## echo_main.c:225:21
  10eb90:    10 e8 91 00 	r1 = h[r9 + 0] 			  ## echo_main.c:226:20
  10eb94:    08 d6       	r0 = r1 - r0 			  ## echo_main.c:226:20
  10eb96:    50 e8 90 00 	h[r9 + 0] = r0 			  ## echo_main.c:226:20
  10eb9a:    c1 c9       	r1 = r0.l (s) 			  ## echo_main.c:226:20
  10eb9c:    00 80       	r0 = 0 			  ## echo_main.c:226:20
  10eb9e:    01 98       	cmp r1, 0			  ## echo_main.c:226:20
  10eba0:    00 fb 7c 14 	ifs (nzcv > 0) goto 654 <echo_run.1208+0x2F4 : 10ee32 >			  ## echo_main.c:226:20
  10eba4:    e8 a1       	r0 = r5 >>> 1 			  ## echo_main.c:234:12
  10eba6:    40 60       	[sp+ 4] = r0 
  10eba8:    08 98       	cmp r0, 1			  ## echo_main.c:237:2
  10ebaa:    00 fb 3b 12 	ifs (nzcv < 0) goto 582 <echo_run.1208+0x2B6 : 10edf4 >			  ## echo_main.c:237:2
  10ebae:    0d 80       	r5 = 1 
  10ebb0:    04 62       	[sp+ 32] = r4 
  10ebb2:    60 e9 0c 00 	[sp] = r12 
  10ebb6:    01 e5 82 00 	r2, r1 = d[r8 + 0] 			  ## echo_main.c:240:35
  10ebba:    90 e8 64 00 	r4 = h[r6 + 0] (s) 			  ## echo_main.c:239:16
  10ebbe:    0a ce       	cmp r1, r2			  ## echo_main.c:242:7
  10ebc0:    0e 1a       	ifs (nzcv >= 0) goto 28 <echo_run.1208+0xA0 : 10ebde >			  ## echo_main.c:242:7
  10ebc2:    09 99       	cmp r1, 33			  ## echo_main.c:244:8
  10ebc4:    08 c6       	r0 = r1 			  ## echo_main.c:248:31
  10ebc6:    d1 03       	ifs (nzcv <= 0) {			  ## echo_main.c:248:31
  10ebc8:    10 81       		r0 = 34 			  ## echo_main.c:248:31
  10ebca:    60 e8 80 00 		[r8 + 0] = r0 
                               	}			  ## echo_main.c:246:19
  10ebce:    0f fc 00 8c 	r0 = r0 * 280 			  ## echo_main.c:248:35
  10ebd2:    c3 a8       	r3 = r0 >>> 8 			  ## echo_main.c:248:42
  10ebd4:    60 e8 83 00 	[r8 + 0] = r3 			  ## echo_main.c:248:18
  10ebd8:    1a ce       	cmp r3, r2			  ## echo_main.c:249:8
  10ebda:    0a 1a       	ifs (nzcv >= 0) goto 20 <echo_run.1208+0xB2 : 10ebf0 >			  ## echo_main.c:249:8
  10ebdc:    0a 08       	goto 20 <echo_run.1208+0xB4 : 10ebf2 >			  ## echo_main.c:249:8
  10ebde:    0a ce       	cmp r1, r2			  ## echo_main.c:254:12
  10ebe0:    0a 1d       	ifs (nzcv <= 0) goto 20 <echo_run.1208+0xB8 : 10ebf6 >			  ## echo_main.c:254:12
  10ebe2:    00 fc 10 eb 	r0 = r1 * 235 			  ## echo_main.c:256:35
  10ebe6:    c3 a8       	r3 = r0 >>> 8 			  ## echo_main.c:256:42
  10ebe8:    60 e8 83 00 	[r8 + 0] = r3 			  ## echo_main.c:256:18
  10ebec:    1a ce       	cmp r3, r2			  ## echo_main.c:257:8
  10ebee:    01 1c       	ifs (nzcv > 0) goto 2 <echo_run.1208+0xB4 : 10ebf2 >			  ## echo_main.c:257:8
  10ebf0:    13 c6       	r3 = r2 
  10ebf2:    60 e8 83 00 	[r8 + 0] = r3 
  10ebf6:    c6 61       	[sp+ 28] = r6 
  10ebf8:    80 fc 47 01 	r7 = r4 * r1 			  ## echo_main.c:240:23
  10ebfc:    00 42       	r0 = [sp+ 32] 
  10ebfe:    02 e5 03 06 	r3, r2 = d[r0 + 24] 			  ## echo_main.c:22:39
  10ec02:    41 49       	r1 = [r0 + 20] 			  ## echo_main.c:21:25
  10ec04:    20 e8 0b 02 	r11 = [r0 + 8] 			  ## echo_main.c:57:46
  10ec08:    4b ce       	cmp r1, r11			  ## echo_main.c:21:6
  10ec0a:    10 c6       	r0 = r2 			  ## echo_main.c:21:6
  10ec0c:    09 1b       	ifs (nzcv < 0) goto 18 <echo_run.1208+0xE2 : 10ec20 >			  ## echo_main.c:21:6
  10ec0e:    80 ef b0 01 	cmp r11, 1			  ## echo_main.c:23:11
  10ec12:    98 c6       	r0 = r11 			  ## echo_main.c:23:11
  10ec14:    d0 03       	ifs (nzcv <= 0) {			  ## echo_main.c:23:11
  10ec16:    08 80       		r0 = 1 
                               	}			  ## echo_main.c:23:11
  10ec18:    10 d6       	r0 = r2 - r0 			  ## echo_main.c:25:29
  10ec1a:    c6 bf       	r6 = r0 >>> 31 			  ## echo_main.c:26:6
  10ec1c:    8e da       	r6 &= r1 			  ## echo_main.c:26:6
  10ec1e:    80 d5       	r0 = r0 + r6 			  ## echo_main.c:26:6
  10ec20:    44 61       	[sp+ 20] = r4 
  10ec22:    85 61       	[sp+ 24] = r5 
  10ec24:    e0 f7 7e 0e 	r14 = r7 >>> 14 			  ## echo_main.c:240:39
  10ec28:    00 a1       	r0 = r0 << 1 
  10ec2a:    90 e7 3d 00 	r13 = h[r3 + r0] (s) 
  10ec2e:    05 41       	r5 = [sp+ 16] 
  10ec30:    20 e8 5a 01 	r10 = [r5 + 4] 			  ## echo_main.c:136:36
  10ec34:    da ce       	cmp r11, r10			  ## echo_main.c:136:6
  10ec36:    04 11       	ifs (nzcv != 0) goto 8 <echo_run.1208+0x102 : 10ec40 >			  ## echo_main.c:136:6
  10ec38:    da c6       	r10 = r11 
  10ec3a:    85 41       	r5 = [sp+ 24] 
  10ec3c:    04 42       	r4 = [sp+ 32] 
  10ec3e:    3e 08       	goto 124 <echo_run.1208+0x17E : 10ecbc >
  10ec40:    20 e8 5c 03 	r12 = [r5 + 12] 			  ## echo_main.c:138:17
  10ec44:    1f ed c0 ff 	r0 = r12 + -1 			  ## echo_main.c:138:7
  10ec48:    82 ef 00 00 	cmp r0, 512			  ## echo_main.c:138:7
  10ec4c:    21 03       	if (nzcv >= 0) {			  ## echo_main.c:138:7
  10ec4e:    54 ea 00 02 		r12 = 512 			  ## echo_main.c:138:7
  10ec52:    60 e8 5c 03 		[r5 + 12] = r12 
                               	}			  ## echo_main.c:138:7
  10ec56:    4a ce       	cmp r1, r10			  ## echo_main.c:21:6
  10ec58:    10 c6       	r0 = r2 			  ## echo_main.c:21:6
  10ec5a:    09 1b       	ifs (nzcv < 0) goto 18 <echo_run.1208+0x130 : 10ec6e >			  ## echo_main.c:21:6
  10ec5c:    80 ef a0 01 	cmp r10, 1			  ## echo_main.c:23:11
  10ec60:    90 c6       	r0 = r10 			  ## echo_main.c:23:11
  10ec62:    d0 03       	ifs (nzcv <= 0) {			  ## echo_main.c:23:11
  10ec64:    08 80       		r0 = 1 
                               	}			  ## echo_main.c:23:11
  10ec66:    10 d6       	r0 = r2 - r0 			  ## echo_main.c:25:29
  10ec68:    c6 bf       	r6 = r0 >>> 31 			  ## echo_main.c:26:6
  10ec6a:    8e da       	r6 &= r1 			  ## echo_main.c:26:6
  10ec6c:    80 d5       	r0 = r0 + r6 			  ## echo_main.c:26:6
  10ec6e:    00 a1       	r0 = r0 << 1 
  10ec70:    90 e7 30 00 	r0 = h[r3 + r0] (s) 
  10ec74:    1f ed c6 ff 	r6 = r12 + -1 			  ## echo_main.c:151:20
  10ec78:    05 41       	r5 = [sp+ 16] 			  ## echo_main.c:151:20
  10ec7a:    ee 68       	[r5 + 12] = r6 			  ## echo_main.c:151:20
  10ec7c:    80 fc c7 0d 	r7 = r12 * r13 			  ## echo_main.c:150:21
  10ec80:    2f ee c4 00 	r4 = 512 - r12 			  ## echo_main.c:150:58
  10ec84:    20 06       	r0 *= r4 			  ## echo_main.c:150:51
  10ec86:    c0 d5       	r0 = r0 + r7 			  ## echo_main.c:150:41
  10ec88:    e0 f7 0d 09 	r13 = r0 >>> 9 			  ## echo_main.c:150:80
  10ec8c:    06 98       	cmp r6, 0			  ## echo_main.c:152:7
  10ec8e:    05 1d       	ifs (nzcv <= 0) goto 10 <echo_run.1208+0x15C : 10ec9a >			  ## echo_main.c:152:7
  10ec90:    da c6       	r10 = r11 
  10ec92:    04 42       	r4 = [sp+ 32] 
  10ec94:    20 e9 0c 00 	r12 = [sp] 
  10ec98:    10 08       	goto 32 <echo_run.1208+0x17C : 10ecba >
  10ec9a:    00 80       	r0 = 0 			  ## echo_main.c:154:22
  10ec9c:    e8 68       	[r5 + 12] = r0 			  ## echo_main.c:154:22
  10ec9e:    04 42       	r4 = [sp+ 32] 			  ## echo_main.c:154:22
  10eca0:    60 e8 4a 02 	[r4 + 8] = r10 			  ## echo_main.c:155:22
  10eca4:    af 48       	r7 = [r5 + 8] 			  ## echo_main.c:156:18
  10eca6:    20 e9 0c 00 	r12 = [sp] 			  ## echo_main.c:156:18
  10ecaa:    77 20       	if (r7 == 0) goto 14 <echo_run.1208+0x17C : 10ecba >			  ## echo_main.c:156:18
  10ecac:    ff 9f       	cmp r7, -1
  10ecae:    01 03       	ifs (nzcv == 0) {
  10ecb0:    07 80       		r7 = 0 
  10ecb2:    af 68       		[r5 + 8] = r7 
                               	}			  ## echo_main.c:160:26
  10ecb4:    00 80       	r0 = 0 			  ## echo_main.c:163:25
  10ecb6:    47 e5 50 01 	d[r5 + 4] = r0, r7 			  ## echo_main.c:162:24
  10ecba:    85 41       	r5 = [sp+ 24] 
  10ecbc:    e0 48       	r0 = [r4 + 12] 			  ## echo_main.c:168:46
  10ecbe:    80 fc 00 0d 	r0 = r0 * r13 			  ## echo_main.c:168:34
  10ecc2:    c0 ac       	r0 = r0 >>> 12 			  ## echo_main.c:168:56
  10ecc4:    00 ee 07 0e 	r7 = r0 + r14 			  ## echo_main.c:168:23
  10ecc8:    90 ea 00 80 	r0 = -32768 			  ## echo_main.c:190:2
  10eccc:    38 ce       	cmp r7, r0			  ## echo_main.c:190:2
  10ecce:    3e c6       	r6 = r7 			  ## echo_main.c:190:2
  10ecd0:    d0 03       	ifs (nzcv <= 0) {			  ## echo_main.c:190:2
  10ecd2:    96 ea 00 80 		r6 = -32768 
                               	}			  ## echo_main.c:190:2
  10ecd6:    10 ea ff 7f 	r0 = 32767 			  ## echo_main.c:190:2
  10ecda:    0c ef 70 00 	cmp r7, 32768			  ## echo_main.c:117:42
  10ecde:    b0 03       	ifs (nzcv < 0) {			  ## echo_main.c:117:42
  10ece0:    30 c6       		r0 = r6 
                               	}			  ## echo_main.c:117:42
  10ece2:    14 a1       	r4 = r2 << 1 			  ## echo_main.c:117:3
  10ece4:    50 e7 30 04 	h[r3 + r4] = r0 			  ## echo_main.c:117:40
  10ece8:    50 d0       	r0 = r2 + 1 			  ## echo_main.c:118:19
  10ecea:    02 80       	r2 = 0 			  ## echo_main.c:118:19
  10ecec:    01 ce       	cmp r0, r1			  ## echo_main.c:119:7
  10ecee:    03 80       	r3 = 0 			  ## echo_main.c:119:7
  10ecf0:    c6 41       	r6 = [sp+ 28] 			  ## echo_main.c:119:7
  10ecf2:    a0 03       	ifs (nzcv >= 0) {			  ## echo_main.c:119:7
  10ecf4:    0b c6       		r3 = r1 
                               	}			  ## echo_main.c:119:7
  10ecf6:    c0 d6       	r0 = r0 - r3 			  ## echo_main.c:119:7
  10ecf8:    04 42       	r4 = [sp+ 32] 			  ## echo_main.c:119:7
  10ecfa:    a0 69       	[r4 + 24] = r0 			  ## echo_main.c:118:19
  10ecfc:    80 ef a0 00 	cmp r10, 0			  ## echo_main.c:196:6
  10ed00:    10 03       	ifs (nzcv != 0) {			  ## echo_main.c:196:6
  10ed02:    aa c6       		r2 = r13 
                               	}			  ## echo_main.c:196:6
  10ed04:    80 40       	r0 = [sp+ 8] 			  ## echo_main.c:266:18
  10ed06:    10 06       	r0 *= r2 			  ## echo_main.c:266:18
  10ed08:    c1 40       	r1 = [sp+ 12] 			  ## echo_main.c:266:37
  10ed0a:    80 fc 11 0e 	r1 = r1 * r14 			  ## echo_main.c:266:37
  10ed0e:    40 d4       	r0 = r0 + r1 			  ## echo_main.c:266:29
  10ed10:    c1 ac       	r1 = r0 >>> 12 			  ## echo_main.c:266:49
  10ed12:    20 49       	r0 = [r4 + 16] 			  ## echo_main.c:284:17
  10ed14:    00 23       	if (r0 == 0) goto 96 <echo_run.1208+0x238 : 10ed76 >			  ## echo_main.c:284:17
  10ed16:    42 41       	r2 = [sp+ 20] 
  10ed18:    90 dc       	r0 = -r2 			  ## echo_main.c:288:14
  10ed1a:    02 98       	cmp r2, 0			  ## echo_main.c:286:8
  10ed1c:    a0 03       	ifs (nzcv >= 0) {			  ## echo_main.c:286:8
  10ed1e:    10 c6       		r0 = r2 
                               	}			  ## echo_main.c:286:8
  10ed20:    00 aa       	r0 = r0 << 10 			  ## echo_main.c:296:20
  10ed22:    20 e8 82 fc 	r2 = [r8 + -16] 			  ## echo_main.c:297:35
  10ed26:    13 ea ff 03 	r3 = 1023 			  ## echo_main.c:297:42
  10ed2a:    1a 06       	r2 *= r3 			  ## echo_main.c:297:42
  10ed2c:    12 d4       	r2 = r2 + r0 			  ## echo_main.c:297:50
  10ed2e:    d2 aa       	r2 = r2 >>> 10 			  ## echo_main.c:297:60
  10ed30:    10 ce       	cmp r2, r0			  ## echo_main.c:299:8
  10ed32:    a0 03       	ifs (nzcv >= 0) {			  ## echo_main.c:299:8
  10ed34:    10 c6       		r0 = r2 
                               	}			  ## echo_main.c:299:8
  10ed36:    60 e8 80 fc 	[r8 + -16] = r0 			  ## echo_main.c:297:21
  10ed3a:    20 e8 82 02 	r2 = [r8 + 8] 			  ## echo_main.c:305:20
  10ed3e:    52 d0       	r2 = r2 + 1 			  ## echo_main.c:305:20
  10ed40:    60 e8 82 02 	[r8 + 8] = r2 			  ## echo_main.c:305:20
  10ed44:    02 99       	cmp r2, 32			  ## echo_main.c:307:8
  10ed46:    17 1b       	ifs (nzcv < 0) goto 46 <echo_run.1208+0x238 : 10ed76 >			  ## echo_main.c:307:8
  10ed48:    02 80       	r2 = 0 
  10ed4a:    60 e8 82 02 	[r8 + 8] = r2 			  ## echo_main.c:309:22
  10ed4e:    c0 aa       	r0 = r0 >>> 10 			  ## echo_main.c:311:38
  10ed50:    20 e8 83 fd 	r3 = [r8 + -12] 			  ## echo_main.c:313:31
  10ed54:    03 ce       	cmp r0, r3			  ## echo_main.c:313:9
  10ed56:    0d 1b       	ifs (nzcv < 0) goto 26 <echo_run.1208+0x234 : 10ed72 >			  ## echo_main.c:313:9
  10ed58:    20 e8 84 fe 	r4 = [r8 + -8] 			  ## echo_main.c:317:36
  10ed5c:    12 ea 00 40 	r2 = 16384 			  ## echo_main.c:317:36
  10ed60:    04 ce       	cmp r0, r4			  ## echo_main.c:317:14
  10ed62:    04 42       	r4 = [sp+ 32] 			  ## echo_main.c:317:14
  10ed64:    b3 03       	ifs (nzcv < 0) {			  ## echo_main.c:319:28
  10ed66:    c0 d6       		r0 = r0 - r3 			  ## echo_main.c:319:28
  10ed68:    20 e8 82 ff 		r2 = [r8 + -4] 			  ## echo_main.c:320:6
  10ed6c:    c2 06       		macc = r0 * r2 (s) 			  ## echo_main.c:320:6
  10ed6e:    c0 f9 02 0a 		r2 = macc >>> 10 
                               	}			  ## echo_main.c:320:6
  10ed72:    60 e8 82 01 	[r8 + 4] = r2 
  10ed76:    90 e8 90 01 	r0 = h[r9 + 4] (s) 			  ## echo_main.c:335:3
  10ed7a:    42 d0       	r2 = r0 + 1 			  ## echo_main.c:335:40
  10ed7c:    50 e8 92 01 	h[r9 + 4] = r2 			  ## echo_main.c:335:40
  10ed80:    92 ea 00 80 	r2 = -32768 			  ## echo_main.c:332:3
  10ed84:    0a ce       	cmp r1, r2			  ## echo_main.c:332:3
  10ed86:    0a c6       	r2 = r1 			  ## echo_main.c:332:3
  10ed88:    d0 03       	ifs (nzcv <= 0) {			  ## echo_main.c:332:3
  10ed8a:    92 ea 00 80 		r2 = -32768 
                               	}			  ## echo_main.c:332:3
  10ed8e:    13 ea ff 7f 	r3 = 32767 			  ## echo_main.c:332:3
  10ed92:    0c ef 10 00 	cmp r1, 32768			  ## echo_main.c:335:46
  10ed96:    b0 03       	ifs (nzcv < 0) {			  ## echo_main.c:335:46
  10ed98:    13 c6       		r3 = r2 
                               	}			  ## echo_main.c:335:46
  10ed9a:    00 a1       	r0 = r0 << 1 			  ## echo_main.c:335:3
  10ed9c:    50 e7 c3 00 	h[r12 + r0] = r3 			  ## echo_main.c:335:44
  10eda0:    90 e8 90 01 	r0 = h[r9 + 4] (s) 			  ## echo_main.c:337:17
  10eda4:    f8 99       	cmp r0, 63			  ## echo_main.c:337:7
  10eda6:    1b 1d       	ifs (nzcv <= 0) goto 54 <echo_run.1208+0x2A0 : 10edde >			  ## echo_main.c:337:7
  10eda8:    00 80       	r0 = 0 			  ## echo_main.c:341:22
  10edaa:    50 e8 90 01 	h[r9 + 4] = r0 			  ## echo_main.c:341:22
  10edae:    10 ea 80 00 	r0 = 128 			  ## echo_main.c:339:21
  10edb2:    60 e8 90 00 	[r9 + 0] = r0 			  ## echo_main.c:339:21
  10edb6:    00 e5 83 03 	r3, r0 = d[r8 + 12] 			  ## echo_main.c:343:73
  10edba:    a1 c6       	r1 = r12 			  ## echo_main.c:343:18
  10edbc:    12 ea 80 00 	r2 = 128 			  ## echo_main.c:343:18
  10edc0:    ab 01       	call r3			  ## echo_main.c:343:18
  10edc2:    01 ed 41 e6 	r1 = r4 + 486 			  ## echo_main.c:342:22
  10edc6:    09 50       	r1 = h[r1 + 0] 			  ## echo_main.c:344:22
  10edc8:    09 d4       	r1 = r1 + r0 			  ## echo_main.c:344:22
  10edca:    50 e8 91 80 	h[r9 + 2] = r1 			  ## echo_main.c:344:22
  10edce:    10 e8 91 00 	r1 = h[r9 + 0] 			  ## echo_main.c:345:21
  10edd2:    08 d6       	r0 = r1 - r0 			  ## echo_main.c:345:21
  10edd4:    50 e8 90 00 	h[r9 + 0] = r0 			  ## echo_main.c:345:21
  10edd8:    c0 c9       	r0 = r0.l (s) 			  ## echo_main.c:345:21
  10edda:    08 98       	cmp r0, 1			  ## echo_main.c:345:21
  10eddc:    29 1a       	ifs (nzcv >= 0) goto 82 <echo_run.1208+0x2F2 : 10ee30 >			  ## echo_main.c:345:21
  10edde:    b6 d0       	r6 = r6 + 2 			  ## echo_main.c:237:9
  10ede0:    68 d0       	r0 = r5 + 1 			  ## echo_main.c:237:9
  10ede2:    41 40       	r1 = [sp+ 4] 			  ## echo_main.c:237:2
  10ede4:    29 ce       	cmp r5, r1			  ## echo_main.c:237:2
  10ede6:    05 c6       	r5 = r0 			  ## echo_main.c:237:2
  10ede8:    ff fb 5b ee 	ifs (nzcv < 0) goto -566 <echo_run.1208+0x78 : 10ebb6 >			  ## echo_main.c:237:2
  10edec:    10 e8 91 00 	r1 = h[r9 + 0] 
  10edf0:    c5 d3       	r5 = r0 + -1 			  ## echo_main.c:356:16
  10edf2:    01 08       	goto 2 <echo_run.1208+0x2B8 : 10edf6 >			  ## echo_main.c:356:16
  10edf4:    05 80       	r5 = 0 
  10edf6:    48 c9       	r0 = r1.l 			  ## echo_main.c:356:22
  10edf8:    1b 11       	ifs (nzcv != 0) goto 54 <echo_run.1208+0x2F2 : 10ee30 >			  ## echo_main.c:356:22
  10edfa:    10 e8 90 01 	r0 = h[r9 + 4] 			  ## echo_main.c:358:17
  10edfe:    80 21       	if (r0 == 0) goto 48 <echo_run.1208+0x2F2 : 10ee30 >			  ## echo_main.c:358:17
  10ee00:    01 a1       	r1 = r0 << 1 			  ## echo_main.c:360:41
  10ee02:    50 e8 91 00 	h[r9 + 0] = r1 			  ## echo_main.c:360:21
  10ee06:    00 80       	r0 = 0 			  ## echo_main.c:362:22
  10ee08:    50 e8 90 01 	h[r9 + 4] = r0 			  ## echo_main.c:362:22
  10ee0c:    50 e8 90 80 	h[r9 + 2] = r0 			  ## echo_main.c:363:22
  10ee10:    00 e5 83 03 	r3, r0 = d[r8 + 12] 			  ## echo_main.c:364:75
  10ee14:    ca c9       	r2 = r1.l (s) 			  ## echo_main.c:364:115
  10ee16:    a1 c6       	r1 = r12 			  ## echo_main.c:364:20
  10ee18:    ab 01       	call r3			  ## echo_main.c:364:20
  10ee1a:    01 ed 41 e6 	r1 = r4 + 486 			  ## echo_main.c:363:14
  10ee1e:    09 50       	r1 = h[r1 + 0] 			  ## echo_main.c:365:22
  10ee20:    09 d4       	r1 = r1 + r0 			  ## echo_main.c:365:22
  10ee22:    50 e8 91 80 	h[r9 + 2] = r1 			  ## echo_main.c:365:22
  10ee26:    10 e8 91 00 	r1 = h[r9 + 0] 			  ## echo_main.c:366:21
  10ee2a:    08 d6       	r0 = r1 - r0 			  ## echo_main.c:366:21
  10ee2c:    50 e8 90 00 	h[r9 + 0] = r0 			  ## echo_main.c:366:21
  10ee30:    28 a1       	r0 = r5 << 1 			  ## echo_main.c:370:11
  10ee32:    24 cd       	sp += 36 
  10ee34:    30 c4       	{macch, maccl} = [sp++] 
  10ee36:    1e c0       	{pc, r14-r4} = [sp++] 


echo_reset_wetdry:
  10ee38:    42 e5 01 00 	d[r0 + 0] = r1, r2 			  ## echo_main.c:525:0
  10ee3c:    20 00       	rts			  ## echo_main.c:529:1


howling_ps_main:
  10ee3e:    1e c2       	[--sp] = {rets, r14-r4} 			  ## shift_anysrh.c:93:0
  10ee40:    30 c5       	[--sp] = {macch, maccl} 			  ## shift_anysrh.c:93:0
  10ee42:    c4 cd       	sp += -60 			  ## shift_anysrh.c:93:0
  10ee44:    17 c6       	r7 = r2 			  ## shift_anysrh.c:93:0
  10ee46:    81 61       	[sp+ 24] = r1 			  ## shift_anysrh.c:93:0
  10ee48:    04 c6       	r4 = r0 			  ## shift_anysrh.c:93:0
  10ee4a:    90 e8 42 2d 	r2 = h[r4 + 180] (s) 			  ## shift_anysrh.c:100:21
  10ee4e:    00 ed 48 14 	r8 = r4 + 20 			  ## shift_anysrh.c:98:63
  10ee52:    06 80       	r6 = 0 
  10ee54:    00 ed 45 b4 	r5 = r4 + 180 
  10ee58:    01 80       	r1 = 0 
  10ee5a:    22 21       	if (r2 == 0) goto 36 <howling_ps_main+0x42 : 10ee80 >
  10ee5c:    90 e8 40 ad 	r0 = h[r4 + 182] (s) 			  ## shift_anysrh.c:102:75
  10ee60:    00 ee 81 00 	r1 = r8 + r0 			  ## shift_anysrh.c:102:75
  10ee64:    00 e5 43 03 	r3, r0 = d[r4 + 12] 			  ## shift_anysrh.c:102:68
  10ee68:    ab 01       	call r3			  ## shift_anysrh.c:102:19
  10ee6a:    29 54       	r1 = h[r5 + 2] 			  ## shift_anysrh.c:103:26
  10ee6c:    09 d4       	r1 = r1 + r0 			  ## shift_anysrh.c:103:26
  10ee6e:    29 74       	h[r5 + 2] = r1 			  ## shift_anysrh.c:103:26
  10ee70:    29 50       	r1 = h[r5 + 0] 			  ## shift_anysrh.c:104:25
  10ee72:    08 d6       	r0 = r1 - r0 			  ## shift_anysrh.c:104:25
  10ee74:    28 70       	h[r5 + 0] = r0 			  ## shift_anysrh.c:104:25
  10ee76:    c1 c9       	r1 = r0.l (s) 			  ## shift_anysrh.c:104:25
  10ee78:    00 80       	r0 = 0 			  ## shift_anysrh.c:104:25
  10ee7a:    01 98       	cmp r1, 0			  ## shift_anysrh.c:104:25
  10ee7c:    00 fb ec 2a 	ifs (nzcv > 0) goto 1372 <howling_ps_main+0x59E : 10f3dc >			  ## shift_anysrh.c:104:25
  10ee80:    e0 f7 7a 01 	r10 = r7 >>> 1 			  ## shift_anysrh.c:113:12
  10ee84:    80 ef a0 01 	cmp r10, 1			  ## shift_anysrh.c:117:2
  10ee88:    00 fb 3b 29 	ifs (nzcv < 0) goto 1318 <howling_ps_main+0x574 : 10f3b2 >			  ## shift_anysrh.c:117:2
  10ee8c:    20 e4 10 55 	r0 = [addr(1364)]  <.GCPI370_0 : 10f3e4 >
  10ee90:    80 d1       	r0 = r0 + 6 
  10ee92:    00 63       	[sp+ 48] = r0 
  10ee94:    06 80       	r6 = 0 
  10ee96:    45 61       	[sp+ 20] = r5 
  10ee98:    60 e9 08 04 	[sp+ 16] = r8 
  10ee9c:    c4 61       	[sp+ 28] = r4 
  10ee9e:    80 ef a0 10 	cmp r10, 16			  ## shift_anysrh.c:120:14
  10eea2:    90 c6       	r0 = r10 			  ## shift_anysrh.c:120:14
  10eea4:    a0 03       	ifs (nzcv >= 0) {			  ## shift_anysrh.c:120:14
  10eea6:    80 80       		r0 = 16 
                               	}			  ## shift_anysrh.c:120:14
  10eea8:    80 62       	[sp+ 40] = r0 			  ## shift_anysrh.c:122:21
  10eeaa:    90 e8 40 2e 	r0 = h[r4 + 184] (s) 			  ## shift_anysrh.c:122:21
  10eeae:    00 a1       	r0 = r0 << 1 			  ## shift_anysrh.c:122:21
  10eeb0:    80 cb       	r0 += r8 			  ## shift_anysrh.c:122:21
  10eeb2:    80 63       	[sp+ 56] = r0 			  ## shift_anysrh.c:124:22
  10eeb4:    20 48       	r0 = [r4 + 0] 			  ## shift_anysrh.c:124:22
  10eeb6:    00 f4 00 01 	tst r0, 1			  ## shift_anysrh.c:124:7
  10eeba:    46 62       	[sp+ 36] = r6 			  ## shift_anysrh.c:124:7
  10eebc:    60 e9 0a 08 	[sp+ 32] = r10 			  ## shift_anysrh.c:124:7
  10eec0:    05 11       	ifs (nzcv != 0) goto 10 <howling_ps_main+0x8E : 10eecc >
  10eec2:    31 a1       	r1 = r6 << 1 			  ## shift_anysrh.c:131:14
  10eec4:    82 41       	r2 = [sp+ 24] 			  ## shift_anysrh.c:131:14
  10eec6:    89 d4       	r1 = r1 + r2 			  ## shift_anysrh.c:131:14
  10eec8:    41 63       	[sp+ 52] = r1 
  10eeca:    8e 09       	goto 796 <howling_ps_main+0x3AA : 10f1e8 >
  10eecc:    20 e8 4b 01 	r11 = [r4 + 4] 			  ## shift_anysrh.c:126:29
  10eed0:    06 ed b0 1c 	r0 = r11 + 1564 
  10eed4:    40 63       	[sp+ 52] = r0 
  10eed6:    90 e8 09 7e 	r9 = h[r0 + -8] (s) 			  ## shift_anysrh.c:86:68
  10eeda:    20 e8 b0 04 	r0 = [r11 + 16] 			  ## pitch_sr_context_cpu.h:447:22
  10eede:    c0 60       	[sp+ 12] = r0 			  ## pitch_sr_context_cpu.h:446:29
  10eee0:    05 e5 b7 05 	r7, r5 = d[r11 + 20] 			  ## pitch_sr_context_cpu.h:446:29
  10eee4:    20 e8 b8 01 	r8 = [r11 + 4] 			  ## pitch_sr_context_cpu.h:450:24
  10eee8:    06 ed b4 40 	r4 = r11 + 1600 			  ## shift_anysrh.c:86:164
  10eeec:    00 ed b1 1c 	r1 = r11 + 28 			  ## pitch_sr_context_cpu.h:456:16
  10eef0:    20 c6       	r0 = r4 			  ## pitch_sr_context_cpu.h:456:2
  10eef2:    81 60       	[sp+ 8] = r1 			  ## pitch_sr_context_cpu.h:456:2
  10eef4:    02 82       	r2 = 64 			  ## pitch_sr_context_cpu.h:456:2
  10eef6:    da e1 bf 02 	call -311210 <memcpy : c2f50 >			  ## pitch_sr_context_cpu.h:456:2
  10eefa:    30 a1       	r0 = r6 << 1 			  ## pitch_sr_context_cpu.h:461:2
  10eefc:    81 41       	r1 = [sp+ 24] 			  ## pitch_sr_context_cpu.h:461:2
  10eefe:    00 ee 1e 00 	r14 = r1 + r0 			  ## pitch_sr_context_cpu.h:461:2
  10ef02:    20 f7 90 01 	r0 = r9 << 1 			  ## shift_anysrh.c:86:68
  10ef06:    00 ed b1 68 	r1 = r11 + 104 			  ## shift_anysrh.c:86:83
  10ef0a:    c1 62       	[sp+ 44] = r1 			  ## shift_anysrh.c:86:83
  10ef0c:    00 ee 1c 00 	r12 = r1 + r0 			  ## shift_anysrh.c:86:68
  10ef10:    20 e8 b1 03 	r1 = [r11 + 12] 			  ## pitch_sr_context_cpu.h:459:19
  10ef14:    80 fc 53 01 	r3 = r5 * r1 			  ## pitch_sr_context_cpu.h:461:2
  10ef18:    20 f7 86 03 	r6 = r8 << 3 			  ## pitch_sr_context_cpu.h:461:2
  10ef1c:    20 e9 08 0a 	r8 = [sp+ 40] 			  ## pitch_sr_context_cpu.h:461:2
  10ef20:    00 80       	r0 = 0 
  10ef22:    55 ea 00 00 	r13 = 0 
  10ef26:    60 e9 0e 01 	[sp+ 4] = r14 
  10ef2a:    01 60       	[sp] = r1 
  10ef2c:    80 fc 12 07 	r2 = r1 * r7 			  ## pitch_sr_context_cpu.h:461:2
  10ef30:    01 a1       	r1 = r0 << 1 			  ## pitch_sr_context_cpu.h:461:2
  10ef32:    b1 cb       	r1 += r14 			  ## pitch_sr_context_cpu.h:461:2
  10ef34:    79 c6       	r9 = r7 			  ## pitch_sr_context_cpu.h:461:2
  10ef36:    20 e8 b7 05 	r7 = [r11 + 20] 			  ## pitch_sr_context_cpu.h:464:31
  10ef3a:    8f ce       	cmp r9, r7			  ## pitch_sr_context_cpu.h:464:7
  10ef3c:    0c 1b       	ifs (nzcv < 0) goto 24 <howling_ps_main+0x118 : 10ef56 >			  ## pitch_sr_context_cpu.h:464:7
  10ef3e:    98 e8 17 80 	r7 = h[r1 ++= 2] (s) 			  ## pitch_sr_context_cpu.h:471:28
  10ef42:    60 e7 67 04 	[r6 + r4] = r7 			  ## pitch_sr_context_cpu.h:471:26
  10ef46:    d2 d6       	r2 = r2 - r3 			  ## pitch_sr_context_cpu.h:461:16
  10ef48:    40 ee 99 05 	r9 = r9 - r5 			  ## pitch_sr_context_cpu.h:473:17
  10ef4c:    40 d0       	r0 = r0 + 1 			  ## pitch_sr_context_cpu.h:471:43
  10ef4e:    24 d1       	r4 = r4 + 4 			  ## pitch_sr_context_cpu.h:470:8
  10ef50:    40 ce       	cmp r0, r8			  ## pitch_sr_context_cpu.h:461:2
  10ef52:    f1 1b       	ifs (nzcv < 0) goto -30 <howling_ps_main+0xF8 : 10ef36 >			  ## pitch_sr_context_cpu.h:461:2
  10ef54:    24 08       	goto 72 <howling_ps_main+0x160 : 10ef9e >			  ## pitch_sr_context_cpu.h:461:2
  10ef56:    d1 b3       	r1 = r2 >>> 19 			  ## pitch_sr_context_cpu.h:479:37
  10ef58:    07 e5 42 00 	r2, r7 = d[r4 + 0] 			  ## pitch_sr_context_cpu.h:481:36
  10ef5c:    0a 06       	r2 *= r1 			  ## pitch_sr_context_cpu.h:481:44
  10ef5e:    2f ee 11 80 	r1 = 256 - r1 			  ## pitch_sr_context_cpu.h:480:20
  10ef62:    39 06       	r1 *= r7 			  ## pitch_sr_context_cpu.h:481:25
  10ef64:    89 d4       	r1 = r1 + r2 			  ## pitch_sr_context_cpu.h:481:34
  10ef66:    c9 a8       	r1 = r1 >>> 8 			  ## pitch_sr_context_cpu.h:481:53
  10ef68:    92 ea 00 80 	r2 = -32768 			  ## pitch_sr_context_cpu.h:482:53
  10ef6c:    0a ce       	cmp r1, r2			  ## pitch_sr_context_cpu.h:482:53
  10ef6e:    0a c6       	r2 = r1 			  ## pitch_sr_context_cpu.h:482:53
  10ef70:    d0 03       	ifs (nzcv <= 0) {			  ## pitch_sr_context_cpu.h:482:53
  10ef72:    92 ea 00 80 		r2 = -32768 
                               	}			  ## pitch_sr_context_cpu.h:482:53
  10ef76:    17 ea ff 7f 	r7 = 32767 			  ## pitch_sr_context_cpu.h:482:53
  10ef7a:    0c ef 10 00 	cmp r1, 32768			  ## pitch_sr_context_cpu.h:483:15
  10ef7e:    b0 03       	ifs (nzcv < 0) {			  ## pitch_sr_context_cpu.h:483:15
  10ef80:    17 c6       		r7 = r2 
                               	}			  ## pitch_sr_context_cpu.h:483:15
  10ef82:    58 e8 c7 80 	h[r12 ++= 2] = r7 			  ## pitch_sr_context_cpu.h:483:13
  10ef86:    c1 40       	r1 = [sp+ 12] 			  ## pitch_sr_context_cpu.h:461:16
  10ef88:    00 ee 17 09 	r7 = r1 + r9 			  ## pitch_sr_context_cpu.h:461:16
  10ef8c:    00 ed dd 01 	r13 = r13 + 1 			  ## pitch_sr_context_cpu.h:461:16
  10ef90:    40 ce       	cmp r0, r8			  ## pitch_sr_context_cpu.h:461:2
  10ef92:    20 e9 0e 01 	r14 = [sp+ 4] 			  ## pitch_sr_context_cpu.h:461:2
  10ef96:    01 40       	r1 = [sp] 			  ## pitch_sr_context_cpu.h:461:2
  10ef98:    c9 1b       	ifs (nzcv < 0) goto -110 <howling_ps_main+0xEE : 10ef2c >			  ## pitch_sr_context_cpu.h:461:2
  10ef9a:    c0 40       	r0 = [sp+ 12] 			  ## pitch_sr_context_cpu.h:444:20
  10ef9c:    41 cb       	r9 += r0 			  ## pitch_sr_context_cpu.h:444:20
  10ef9e:    60 e8 b9 06 	[r11 + 24] = r9 			  ## pitch_sr_context_cpu.h:553:23
  10efa2:    80 40       	r0 = [sp+ 8] 			  ## pitch_sr_context_cpu.h:554:2
  10efa4:    21 c6       	r1 = r4 			  ## pitch_sr_context_cpu.h:554:2
  10efa6:    02 82       	r2 = 64 			  ## pitch_sr_context_cpu.h:554:2
  10efa8:    d9 e1 2f fd 	call -311388 <memcpy : c2f50 >			  ## pitch_sr_context_cpu.h:554:2
  10efac:    46 43       	r6 = [sp+ 52] 
  10efae:    b0 53       	r0 = h[r6 + -8] 			  ## ps_for69_cal.h:443:21
  10efb0:    a8 cb       	r0 += r13 			  ## ps_for69_cal.h:443:21
  10efb2:    b0 73       	h[r6 + -8] = r0 			  ## ps_for69_cal.h:443:21
  10efb4:    31 48       	r1 = [r6 + 0] 			  ## ps_for69_cal.h:444:21
  10efb6:    00 ee 15 0d 	r5 = r1 + r13 			  ## ps_for69_cal.h:444:21
  10efba:    35 68       	[r6 + 0] = r5 			  ## ps_for69_cal.h:444:21
  10efbc:    10 e8 6c 02 	r12 = h[r6 + 8] 			  ## ps_for69_cal.h:445:39
  10efc0:    80 ef c0 02 	cmp r12, 2			  ## ps_for69_cal.h:285:6
  10efc4:    0b 11       	ifs (nzcv != 0) goto 22 <howling_ps_main+0x19E : 10efdc >			  ## ps_for69_cal.h:285:6
  10efc6:    f1 48       	r1 = [r6 + 12] 			  ## ps_for69_cal.h:287:37
  10efc8:    29 ce       	cmp r5, r1			  ## ps_for69_cal.h:287:7
  10efca:    28 1a       	ifs (nzcv >= 0) goto 80 <howling_ps_main+0x1DE : 10f01c >			  ## ps_for69_cal.h:287:7
  10efcc:    c0 c9       	r0 = r0.l (s) 
  10efce:    82 ef 00 75 	cmp r0, 629			  ## ps_for69_cal.h:412:7
  10efd2:    c4 41       	r4 = [sp+ 28] 			  ## ps_for69_cal.h:412:7
  10efd4:    c7 42       	r7 = [sp+ 44] 			  ## ps_for69_cal.h:412:7
  10efd6:    00 fb 7c 0e 	ifs (nzcv > 0) goto 462 <howling_ps_main+0x36A : 10f1a8 >			  ## ps_for69_cal.h:412:7
  10efda:    f1 08       	goto 482 <howling_ps_main+0x380 : 10f1be >			  ## ps_for69_cal.h:412:7
  10efdc:    95 9a       	cmp r5, 82			  ## ps_for69_cal.h:297:7
  10efde:    5c 1c       	ifs (nzcv > 0) goto 184 <howling_ps_main+0x25A : 10f098 >			  ## ps_for69_cal.h:297:7
  10efe0:    b1 49       	r1 = [r6 + 24] 			  ## ps_for69_cal.h:302:34
  10efe2:    90 e8 60 fe 	r0 = h[r6 + -6] (s) 			  ## ps_for69_cal.h:300:15
  10efe6:    42 d6       	r2 = r0 - r1 			  ## ps_for69_cal.h:304:38
  10efe8:    01 ce       	cmp r0, r1			  ## ps_for69_cal.h:302:8
  10efea:    c4 41       	r4 = [sp+ 28] 			  ## ps_for69_cal.h:302:8
  10efec:    c7 42       	r7 = [sp+ 44] 			  ## ps_for69_cal.h:302:8
  10efee:    d0 03       	ifs (nzcv <= 0) {			  ## ps_for69_cal.h:302:8
  10eff0:    02 80       		r2 = 0 
                               	}			  ## ps_for69_cal.h:302:8
  10eff2:    20 e8 68 04 	r8 = [r6 + 16] 			  ## ps_for69_cal.h:313:35
  10eff6:    00 ed 81 40 	r1 = r8 + 64 			  ## ps_for69_cal.h:313:51
  10effa:    01 ce       	cmp r0, r1			  ## ps_for69_cal.h:313:8
  10effc:    1d 1a       	ifs (nzcv >= 0) goto 58 <howling_ps_main+0x1FA : 10f038 >			  ## ps_for69_cal.h:313:8
  10effe:    38 c6       	r0 = r7 			  ## ps_for69_cal.h:315:5
  10f000:    01 80       	r1 = 0 			  ## ps_for69_cal.h:315:5
  10f002:    12 ea ac 05 	r2 = 1452 			  ## ps_for69_cal.h:315:5
  10f006:    d9 e1 9f fa 	call -311470 <memset : c2f5c >			  ## ps_for69_cal.h:315:5
  10f00a:    11 ea 58 02 	r1 = 600 			  ## ps_for69_cal.h:315:5
  10f00e:    b1 73       	h[r6 + -8] = r1 			  ## ps_for69_cal.h:316:24
  10f010:    00 80       	r0 = 0 			  ## ps_for69_cal.h:317:21
  10f012:    b0 77       	h[r6 + -6] = r0 			  ## ps_for69_cal.h:317:21
  10f014:    31 68       	[r6 + 0] = r1 			  ## ps_for69_cal.h:318:24
  10f016:    20 e9 08 0a 	r8 = [sp+ 40] 
  10f01a:    d1 08       	goto 418 <howling_ps_main+0x380 : 10f1be >
  10f01c:    90 e8 60 fe 	r0 = h[r6 + -6] (s) 			  ## ps_for69_cal.h:290:30
  10f020:    00 a1       	r0 = r0 << 1 			  ## ps_for69_cal.h:290:30
  10f022:    c7 42       	r7 = [sp+ 44] 			  ## ps_for69_cal.h:290:30
  10f024:    39 d4       	r1 = r7 + r0 			  ## ps_for69_cal.h:290:30
  10f026:    2a a1       	r2 = r5 << 1 			  ## ps_for69_cal.h:290:80
  10f028:    38 c6       	r0 = r7 			  ## ps_for69_cal.h:290:4
  10f02a:    d9 e1 1f f9 	call -311518 <memcpy : c2f50 >			  ## ps_for69_cal.h:290:4
  10f02e:    20 e8 68 04 	r8 = [r6 + 16] 			  ## ps_for69_cal.h:290:4
  10f032:    30 48       	r0 = [r6 + 0] 			  ## ps_for69_cal.h:292:37
  10f034:    00 8e       	r0 += -64 			  ## ps_for69_cal.h:292:48
  10f036:    02 80       	r2 = 0 			  ## ps_for69_cal.h:292:48
  10f038:    00 a1       	r0 = r0 << 1 
  10f03a:    00 ee 7a 00 	r10 = r7 + r0 
  10f03e:    80 ef 80 01 	cmp r8, 1			  ## ps_for69_cal.h:332:3
  10f042:    c2 60       	[sp+ 12] = r2 			  ## ps_for69_cal.h:332:3
  10f044:    30 1b       	ifs (nzcv < 0) goto 96 <howling_ps_main+0x268 : 10f0a6 >			  ## ps_for69_cal.h:332:3
  10f046:    11 a1       	r1 = r2 << 1 			  ## ps_for69_cal.h:268:15
  10f048:    99 cb       	r1 += r11 			  ## ps_for69_cal.h:268:15
  10f04a:    00 ed 16 68 	r6 = r1 + 104 			  ## ps_for69_cal.h:268:15
  10f04e:    d6 ea ff ff 	r14 = -1 			  ## ps_for69_cal.h:268:15
  10f052:    07 80       	r7 = 0 
  10f054:    55 ea 00 00 	r13 = 0 
  10f058:    00 80       	r0 = 0 
  10f05a:    c0 06       	macc = r0 * r0 (s) 			  ## ps_for69_cal.h:339:4
  10f05c:    c0 06       	macc = r0 * r0 (s) 			  ## ps_for69_cal.h:345:5
  10f05e:    31 c6       	r1 = r6 			  ## ps_for69_cal.h:345:5
  10f060:    fc 80       	r4 = 31 			  ## ps_for69_cal.h:345:5
  10f062:    03 80       	r3 = 0 			  ## ps_for69_cal.h:345:5
  10f064:    90 c6       	r0 = r10 			  ## ps_for69_cal.h:345:5
  10f066:    05 80       	r5 = 0 			  ## ps_for69_cal.h:345:5
  10f068:    34 01       	rep 7, r4 { <howling_ps_main+0x23A : 10f078 >			  ## ps_for69_cal.h:345:5
  10f06a:    98 e8 12 80 		r2 = h[r1 ++= 2] (s) 			  ## ps_for69_cal.h:345:5
  10f06e:    98 e8 09 80 		r9 = h[r0 ++= 2] (s) 			  ## ps_for69_cal.h:345:5
  10f072:    40 ee 22 09 		r2 = r2 - r9 			  ## ps_for69_cal.h:345:5
  10f076:    92 07       		macc += r2 * r2 (s) 
                               	}			  ## ps_for69_cal.h:345:5
  10f078:    c0 f9 01 07 	r1 = macc >>> 7 			  ## ps_for69_cal.h:345:5
  10f07c:    b1 ce       	cmp r14, r1			  ## ps_for69_cal.h:350:8
  10f07e:    79 c6       	r9 = r7 			  ## ps_for69_cal.h:350:8
  10f080:    90 03       	if (nzcv <= 0) {			  ## ps_for69_cal.h:350:8
  10f082:    e9 c6       		r9 = r13 
                               	}			  ## ps_for69_cal.h:350:8
  10f084:    b1 ce       	cmp r14, r1			  ## ps_for69_cal.h:350:8
  10f086:    90 03       	if (nzcv <= 0) {			  ## ps_for69_cal.h:350:8
  10f088:    b1 c6       		r1 = r14 
                               	}			  ## ps_for69_cal.h:350:8
  10f08a:    46 88       	r6 += 8 			  ## ps_for69_cal.h:332:17
  10f08c:    3f d1       	r7 = r7 + 4 			  ## ps_for69_cal.h:332:33
  10f08e:    78 ce       	cmp r7, r8			  ## ps_for69_cal.h:332:3
  10f090:    4e c6       	r14 = r1 
  10f092:    cd c6       	r13 = r9 
  10f094:    e1 1b       	ifs (nzcv < 0) goto -62 <howling_ps_main+0x21A : 10f058 >
  10f096:    0a 08       	goto 20 <howling_ps_main+0x26E : 10f0ac >
  10f098:    c0 c9       	r0 = r0.l (s) 
  10f09a:    82 ef 00 75 	cmp r0, 629			  ## ps_for69_cal.h:422:7
  10f09e:    c4 41       	r4 = [sp+ 28] 			  ## ps_for69_cal.h:422:7
  10f0a0:    c7 42       	r7 = [sp+ 44] 			  ## ps_for69_cal.h:422:7
  10f0a2:    7d 1c       	ifs (nzcv > 0) goto 250 <howling_ps_main+0x360 : 10f19e >			  ## ps_for69_cal.h:422:7
  10f0a4:    8c 08       	goto 280 <howling_ps_main+0x380 : 10f1be >			  ## ps_for69_cal.h:422:7
  10f0a6:    f9 87       	r1 = -1 
  10f0a8:    51 ea 00 00 	r9 = 0 
  10f0ac:    1f ed 9d fd 	r13 = r9 + -3 			  ## ps_for69_cal.h:358:19
  10f0b0:    80 ef d0 00 	cmp r13, 0			  ## ps_for69_cal.h:359:7
  10f0b4:    d0 03       	ifs (nzcv <= 0) {			  ## ps_for69_cal.h:359:7
  10f0b6:    55 ea 00 00 		r13 = 0 
                               	}			  ## ps_for69_cal.h:359:7
  10f0ba:    00 ed 98 03 	r8 = r9 + 3 			  ## ps_for69_cal.h:361:20
  10f0be:    e8 ce       	cmp r13, r8			  ## ps_for69_cal.h:363:3
  10f0c0:    27 1a       	ifs (nzcv >= 0) goto 78 <howling_ps_main+0x2D2 : 10f110 >			  ## ps_for69_cal.h:363:3
  10f0c2:    c0 40       	r0 = [sp+ 12] 			  ## ps_for69_cal.h:365:40
  10f0c4:    a8 cb       	r0 += r13 			  ## ps_for69_cal.h:365:40
  10f0c6:    00 a2       	r0 = r0 << 2 			  ## ps_for69_cal.h:365:40
  10f0c8:    98 cb       	r0 += r11 			  ## ps_for69_cal.h:365:40
  10f0ca:    00 ed 0e 68 	r14 = r0 + 104 			  ## ps_for69_cal.h:365:40
  10f0ce:    00 80       	r0 = 0 
  10f0d0:    c0 06       	macc = r0 * r0 (s) 			  ## ps_for69_cal.h:368:4
  10f0d2:    c0 06       	macc = r0 * r0 (s) 			  ## ps_for69_cal.h:374:5
  10f0d4:    90 c6       	r0 = r10 			  ## ps_for69_cal.h:374:5
  10f0d6:    02 80       	r2 = 0 			  ## ps_for69_cal.h:374:5
  10f0d8:    fd 80       	r5 = 31 			  ## ps_for69_cal.h:374:5
  10f0da:    b7 c6       	r7 = r14 			  ## ps_for69_cal.h:374:5
  10f0dc:    04 80       	r4 = 0 			  ## ps_for69_cal.h:374:5
  10f0de:    2d 01       	rep 6, r5 { <howling_ps_main+0x2AE : 10f0ec >			  ## ps_for69_cal.h:374:5
  10f0e0:    98 e8 73 80 		r3 = h[r7 ++= 2] (s) 			  ## ps_for69_cal.h:374:5
  10f0e4:    98 e8 06 80 		r6 = h[r0 ++= 2] (s) 			  ## ps_for69_cal.h:374:5
  10f0e8:    9b d7       		r3 = r3 - r6 			  ## ps_for69_cal.h:374:5
  10f0ea:    9b 07       		macc += r3 * r3 (s) 
                               	}			  ## ps_for69_cal.h:374:5
  10f0ec:    c0 f9 05 07 	r5 = macc >>> 7 			  ## ps_for69_cal.h:374:5
  10f0f0:    0d ce       	cmp r1, r5			  ## ps_for69_cal.h:379:8
  10f0f2:    aa c6       	r2 = r13 			  ## ps_for69_cal.h:379:8
  10f0f4:    90 03       	if (nzcv <= 0) {			  ## ps_for69_cal.h:379:8
  10f0f6:    8a c6       		r2 = r9 
                               	}			  ## ps_for69_cal.h:379:8
  10f0f8:    0d ce       	cmp r1, r5			  ## ps_for69_cal.h:379:8
  10f0fa:    90 03       	if (nzcv <= 0) {			  ## ps_for69_cal.h:379:8
  10f0fc:    0d c6       		r5 = r1 
                               	}			  ## ps_for69_cal.h:379:8
  10f0fe:    00 ed ee 04 	r14 = r14 + 4 			  ## ps_for69_cal.h:363:20
  10f102:    00 ed dd 01 	r13 = r13 + 1 			  ## ps_for69_cal.h:363:30
  10f106:    e8 ce       	cmp r13, r8			  ## ps_for69_cal.h:363:3
  10f108:    29 c6       	r1 = r5 
  10f10a:    51 c6       	r9 = r2 
  10f10c:    e0 1b       	ifs (nzcv < 0) goto -64 <howling_ps_main+0x290 : 10f0ce >
  10f10e:    01 08       	goto 2 <howling_ps_main+0x2D4 : 10f112 >
  10f110:    8a c6       	r2 = r9 
  10f112:    c0 40       	r0 = [sp+ 12] 			  ## ps_for69_cal.h:386:38
  10f114:    11 d4       	r1 = r2 + r0 			  ## ps_for69_cal.h:386:38
  10f116:    08 a1       	r0 = r1 << 1 			  ## ps_for69_cal.h:386:11
  10f118:    c7 42       	r7 = [sp+ 44] 			  ## ps_for69_cal.h:386:11
  10f11a:    3a d4       	r2 = r7 + r0 			  ## ps_for69_cal.h:386:11
  10f11c:    03 80       	r3 = 0 
  10f11e:    05 82       	r5 = 64 
  10f120:    80 ef c0 02 	cmp r12, 2			  ## ps_for69_cal.h:389:7
  10f124:    16 11       	ifs (nzcv != 0) goto 44 <howling_ps_main+0x314 : 10f152 >			  ## ps_for69_cal.h:389:7
  10f126:    20 e9 08 0a 	r8 = [sp+ 40] 
  10f12a:    46 43       	r6 = [sp+ 52] 
  10f12c:    98 e8 a0 80 	r0 = h[r10 ++= 2] (s) 			  ## ps_for69_cal.h:391:4
  10f130:    18 06       	r0 *= r3 			  ## ps_for69_cal.h:391:4
  10f132:    90 e8 24 00 	r4 = h[r2 + 0] (s) 			  ## ps_for69_cal.h:391:4
  10f136:    2c 06       	r4 *= r5 			  ## ps_for69_cal.h:391:4
  10f138:    00 d5       	r0 = r0 + r4 			  ## ps_for69_cal.h:391:4
  10f13a:    40 a6       	r0 = r0 >> 6 			  ## ps_for69_cal.h:391:4
  10f13c:    58 e8 20 80 	h[r2 ++= 2] = r0 			  ## ps_for69_cal.h:391:4
  10f140:    ed d3       	r5 = r5 + -1 			  ## ps_for69_cal.h:391:4
  10f142:    5b d0       	r3 = r3 + 1 			  ## ps_for69_cal.h:391:4
  10f144:    3d 27       	if (r5 != 0) goto -26 <howling_ps_main+0x2EE : 10f12c >			  ## ps_for69_cal.h:391:4
  10f146:    00 80       	r0 = 0 			  ## ps_for69_cal.h:394:20
  10f148:    b0 77       	h[r6 + -6] = r0 			  ## ps_for69_cal.h:394:20
  10f14a:    01 8a       	r1 += 64 			  ## ps_for69_cal.h:393:41
  10f14c:    b1 73       	h[r6 + -8] = r1 			  ## ps_for69_cal.h:395:23
  10f14e:    0d c6       	r5 = r1 			  ## ps_for69_cal.h:395:23
  10f150:    17 08       	goto 46 <howling_ps_main+0x342 : 10f180 >			  ## ps_for69_cal.h:395:23
  10f152:    20 e9 08 0a 	r8 = [sp+ 40] 
  10f156:    46 43       	r6 = [sp+ 52] 
  10f158:    90 e8 20 00 	r0 = h[r2 + 0] (s) 			  ## ps_for69_cal.h:400:4
  10f15c:    18 06       	r0 *= r3 			  ## ps_for69_cal.h:400:4
  10f15e:    98 e8 a4 80 	r4 = h[r10 ++= 2] (s) 			  ## ps_for69_cal.h:400:4
  10f162:    2c 06       	r4 *= r5 			  ## ps_for69_cal.h:400:4
  10f164:    00 d5       	r0 = r0 + r4 			  ## ps_for69_cal.h:400:4
  10f166:    40 a6       	r0 = r0 >> 6 			  ## ps_for69_cal.h:400:4
  10f168:    58 e8 20 80 	h[r2 ++= 2] = r0 			  ## ps_for69_cal.h:400:4
  10f16c:    ed d3       	r5 = r5 + -1 			  ## ps_for69_cal.h:400:4
  10f16e:    5b d0       	r3 = r3 + 1 			  ## ps_for69_cal.h:400:4
  10f170:    3d 27       	if (r5 != 0) goto -26 <howling_ps_main+0x31A : 10f158 >
  10f172:    90 e8 60 fe 	r0 = h[r6 + -6] (s) 			  ## ps_for69_cal.h:402:16
  10f176:    b1 77       	h[r6 + -6] = r1 			  ## ps_for69_cal.h:403:20
  10f178:    40 d6       	r0 = r0 - r1 			  ## ps_for69_cal.h:402:32
  10f17a:    31 48       	r1 = [r6 + 0] 			  ## ps_for69_cal.h:404:23
  10f17c:    45 d4       	r5 = r0 + r1 			  ## ps_for69_cal.h:404:23
  10f17e:    b1 53       	r1 = h[r6 + -8] 			  ## ps_for69_cal.h:404:23
  10f180:    35 68       	[r6 + 0] = r5 			  ## ps_for69_cal.h:396:23
  10f182:    c8 c9       	r0 = r1.l (s) 			  ## ps_for69_cal.h:396:23
  10f184:    80 ef c0 02 	cmp r12, 2			  ## ps_for69_cal.h:410:6
  10f188:    c4 41       	r4 = [sp+ 28] 			  ## ps_for69_cal.h:410:6
  10f18a:    05 11       	ifs (nzcv != 0) goto 10 <howling_ps_main+0x358 : 10f196 >			  ## ps_for69_cal.h:410:6
  10f18c:    c9 c9       	r1 = r1.l (s) 
  10f18e:    82 ef 10 76 	cmp r1, 630			  ## ps_for69_cal.h:412:7
  10f192:    0a 1a       	ifs (nzcv >= 0) goto 20 <howling_ps_main+0x36A : 10f1a8 >			  ## ps_for69_cal.h:412:7
  10f194:    14 08       	goto 40 <howling_ps_main+0x380 : 10f1be >			  ## ps_for69_cal.h:412:7
  10f196:    c9 c9       	r1 = r1.l (s) 
  10f198:    82 ef 10 76 	cmp r1, 630			  ## ps_for69_cal.h:422:7
  10f19c:    10 1b       	ifs (nzcv < 0) goto 32 <howling_ps_main+0x380 : 10f1be >			  ## ps_for69_cal.h:422:7
  10f19e:    b1 49       	r1 = [r6 + 24] 			  ## ps_for69_cal.h:424:29
  10f1a0:    51 88       	r1 += 10 			  ## ps_for69_cal.h:424:19
  10f1a2:    0d ce       	cmp r1, r5			  ## ps_for69_cal.h:425:8
  10f1a4:    a0 03       	ifs (nzcv >= 0) {			  ## ps_for69_cal.h:425:8
  10f1a6:    0d c6       		r5 = r1 
                               	}			  ## ps_for69_cal.h:425:8
  10f1a8:    40 d7       	r0 = r0 - r5 
  10f1aa:    00 a1       	r0 = r0 << 1 
  10f1ac:    39 d4       	r1 = r7 + r0 
  10f1ae:    2a a1       	r2 = r5 << 1 
  10f1b0:    38 c6       	r0 = r7 
  10f1b2:    d9 e1 df ec 	call -311910 <memcpy : c2f50 >
  10f1b6:    b5 73       	h[r6 + -8] = r5 
  10f1b8:    30 48       	r0 = [r6 + 0] 
  10f1ba:    28 d6       	r0 = r5 - r0 
  10f1bc:    b0 77       	h[r6 + -6] = r0 
  10f1be:    90 e8 60 fe 	r0 = h[r6 + -6] (s) 			  ## ps_for69_cal.h:446:18
  10f1c2:    00 a1       	r0 = r0 << 1 			  ## ps_for69_cal.h:446:18
  10f1c4:    39 d4       	r1 = r7 + r0 			  ## ps_for69_cal.h:446:18
  10f1c6:    20 f7 82 01 	r2 = r8 << 1 			  ## ps_for69_cal.h:446:54
  10f1ca:    85 43       	r5 = [sp+ 56] 			  ## ps_for69_cal.h:446:54
  10f1cc:    28 c6       	r0 = r5 			  ## ps_for69_cal.h:446:2
  10f1ce:    d9 e1 ff eb 	call -311938 <memcpy : c2f50 >			  ## ps_for69_cal.h:446:2
  10f1d2:    06 ed b0 16 	r0 = r11 + 1558 			  ## ps_for69_cal.h:446:39
  10f1d6:    00 50       	r0 = h[r0 + 0] 			  ## ps_for69_cal.h:447:18
  10f1d8:    80 cb       	r0 += r8 			  ## ps_for69_cal.h:447:18
  10f1da:    b0 77       	h[r6 + -6] = r0 			  ## ps_for69_cal.h:447:18
  10f1dc:    30 48       	r0 = [r6 + 0] 			  ## ps_for69_cal.h:448:21
  10f1de:    40 ee 00 08 	r0 = r0 - r8 			  ## ps_for69_cal.h:448:21
  10f1e2:    30 68       	[r6 + 0] = r0 			  ## ps_for69_cal.h:448:21
  10f1e4:    20 48       	r0 = [r4 + 0] 			  ## ps_for69_cal.h:448:21
  10f1e6:    45 63       	[sp+ 52] = r5 			  ## ps_for69_cal.h:448:21
  10f1e8:    00 f4 00 02 	tst r0, 2			  ## shift_anysrh.c:135:7
  10f1ec:    00 fb 80 0b 	ifs (nzcv == 0) goto 368 <howling_ps_main+0x522 : 10f360 >			  ## shift_anysrh.c:135:7
  10f1f0:    80 42       	r0 = [sp+ 40] 			  ## freq_shift.h:194:5
  10f1f2:    00 98       	cmp r0, 0			  ## freq_shift.h:194:5
  10f1f4:    00 fb 40 0b 	ifs (nzcv == 0) goto 360 <howling_ps_main+0x522 : 10f360 >			  ## freq_shift.h:194:5
  10f1f8:    c0 41       	r0 = [sp+ 28] 			  ## shift_anysrh.c:137:35
  10f1fa:    20 e8 0b 02 	r11 = [r0 + 8] 			  ## shift_anysrh.c:137:35
  10f1fe:    50 ea 00 00 	r8 = 0 
  10f202:    80 42       	r0 = [sp+ 40] 
  10f204:    00 9a       	cmp r0, 64			  ## freq_shift.h:197:20
  10f206:    42 c6       	r10 = r0 			  ## freq_shift.h:197:20
  10f208:    a0 03       	ifs (nzcv >= 0) {			  ## freq_shift.h:197:20
  10f20a:    52 ea 40 00 		r10 = 64 
                               	}			  ## freq_shift.h:197:20
  10f20e:    40 ee 01 0a 	r1 = r0 - r10 			  ## freq_shift.h:198:15
  10f212:    c1 62       	[sp+ 44] = r1 			  ## freq_shift.h:200:9
  10f214:    08 98       	cmp r0, 1			  ## freq_shift.h:200:9
  10f216:    00 fb 5b 09 	ifs (nzcv < 0) goto 298 <howling_ps_main+0x506 : 10f344 >			  ## freq_shift.h:200:9
  10f21a:    01 80       	r1 = 0 
  10f21c:    08 a2       	r0 = r1 << 2 			  ## freq_shift.h:203:65
  10f21e:    00 ee b3 00 	r3 = r11 + r0 			  ## freq_shift.h:202:27
  10f222:    00 ee 10 08 	r0 = r1 + r8 			  ## freq_shift.h:205:34
  10f226:    20 f7 0c 01 	r12 = r0 << 1 			  ## freq_shift.h:205:24
  10f22a:    40 43       	r0 = [sp+ 52] 			  ## freq_shift.h:205:24
  10f22c:    90 e7 00 0c 	r0 = h[r0 + r12] (s) 			  ## freq_shift.h:205:24
  10f230:    60 e8 30 78 	[r3 + 480] = r0 			  ## freq_shift.h:205:22
  10f234:    00 80       	r0 = 0 			  ## freq_shift.h:211:13
  10f236:    c0 06       	macc = r0 * r0 (s) 			  ## freq_shift.h:211:13
  10f238:    49 d0       	r1 = r1 + 1 			  ## freq_shift.h:202:48
  10f23a:    08 a2       	r0 = r1 << 2 			  ## freq_shift.h:202:27
  10f23c:    98 cb       	r0 += r11 			  ## freq_shift.h:202:27
  10f23e:    01 ed 3d dc 	r13 = r3 + 476 			  ## freq_shift.h:207:20
  10f242:    20 e9 0e 0c 	r14 = [sp+ 48] 
  10f246:    51 ea 00 00 	r9 = 0 
  10f24a:    02 48       	r2 = [r0 + 0] 			  ## freq_shift.h:215:17
  10f24c:    90 e8 e4 fe 	r4 = h[r14 + -6] (s) 			  ## freq_shift.h:215:17
  10f250:    a2 07       	macc += r4 * r2 (s) 			  ## freq_shift.h:215:17
  10f252:    20 e8 d2 00 	r2 = [r13 + 0] 			  ## freq_shift.h:216:17
  10f256:    e2 07       	macc -= r4 * r2 (s) 			  ## freq_shift.h:216:17
  10f258:    82 48       	r2 = [r0 + 8] 			  ## freq_shift.h:221:17
  10f25a:    90 e8 e4 7f 	r4 = h[r14 + -4] (s) 			  ## freq_shift.h:221:17
  10f25e:    a2 07       	macc += r4 * r2 (s) 			  ## freq_shift.h:221:17
  10f260:    20 e8 d2 fe 	r2 = [r13 + -8] 			  ## freq_shift.h:222:17
  10f264:    e2 07       	macc -= r4 * r2 (s) 			  ## freq_shift.h:222:17
  10f266:    02 49       	r2 = [r0 + 16] 			  ## freq_shift.h:227:17
  10f268:    90 e8 e4 ff 	r4 = h[r14 + -2] (s) 			  ## freq_shift.h:227:17
  10f26c:    a2 07       	macc += r4 * r2 (s) 			  ## freq_shift.h:227:17
  10f26e:    20 e8 d2 fc 	r2 = [r13 + -16] 			  ## freq_shift.h:228:17
  10f272:    e2 07       	macc -= r4 * r2 (s) 			  ## freq_shift.h:228:17
  10f274:    82 49       	r2 = [r0 + 24] 			  ## freq_shift.h:233:17
  10f276:    90 e8 e4 00 	r4 = h[r14 + 0] (s) 			  ## freq_shift.h:233:17
  10f27a:    a2 07       	macc += r4 * r2 (s) 			  ## freq_shift.h:233:17
  10f27c:    20 e8 d2 fa 	r2 = [r13 + -24] 			  ## freq_shift.h:234:17
  10f280:    e2 07       	macc -= r4 * r2 (s) 			  ## freq_shift.h:234:17
  10f282:    02 4a       	r2 = [r0 + 32] 			  ## freq_shift.h:239:17
  10f284:    90 e8 e4 80 	r4 = h[r14 + 2] (s) 			  ## freq_shift.h:239:17
  10f288:    a2 07       	macc += r4 * r2 (s) 			  ## freq_shift.h:239:17
  10f28a:    20 e8 d2 f8 	r2 = [r13 + -32] 			  ## freq_shift.h:240:17
  10f28e:    e2 07       	macc -= r4 * r2 (s) 			  ## freq_shift.h:240:17
  10f290:    82 4a       	r2 = [r0 + 40] 			  ## freq_shift.h:245:17
  10f292:    90 e8 e4 01 	r4 = h[r14 + 4] (s) 			  ## freq_shift.h:245:17
  10f296:    a2 07       	macc += r4 * r2 (s) 			  ## freq_shift.h:245:17
  10f298:    20 e8 d2 f6 	r2 = [r13 + -40] 			  ## freq_shift.h:246:17
  10f29c:    e2 07       	macc -= r4 * r2 (s) 			  ## freq_shift.h:246:17
  10f29e:    1f ed dd d0 	r13 = r13 + -48 			  ## freq_shift.h:213:13
  10f2a2:    80 89       	r0 += 48 			  ## freq_shift.h:213:13
  10f2a4:    00 ed ee 0c 	r14 = r14 + 12 			  ## freq_shift.h:213:27
  10f2a8:    00 ed 99 06 	r9 = r9 + 6 			  ## freq_shift.h:213:39
  10f2ac:    80 ef 90 1e 	cmp r9, 30			  ## freq_shift.h:213:13
  10f2b0:    cc 1b       	ifs (nzcv < 0) goto -104 <howling_ps_main+0x40C : 10f24a >			  ## freq_shift.h:213:13
  10f2b2:    c0 f9 09 0a 	r9 = macc >>> 10 			  ## freq_shift.h:254:13
  10f2b6:    20 e8 3d 3c 	r13 = [r3 + 240] 			  ## freq_shift.h:255:24
  10f2ba:    06 ed b4 58 	r4 = r11 + 1624 
  10f2be:    22 48       	r2 = [r4 + 0] 			  ## freq_shift.h:257:36
  10f2c0:    d5 a9       	r5 = r2 >>> 9 			  ## freq_shift.h:57:20
  10f2c2:    2e a2       	r6 = r5 << 2 			  ## freq_shift.h:64:9
  10f2c4:    50 2a       	r0 = [addr(292)]  <.GCPI370_1 : 10f3e8 >			  ## freq_shift.h:64:9
  10f2c6:    03 c6       	r3 = r0 			  ## freq_shift.h:64:9
  10f2c8:    20 e7 37 06 	r7 = [r3 + r6] 			  ## freq_shift.h:64:9
  10f2cc:    10 ea ff 01 	r0 = 511 			  ## freq_shift.h:58:18
  10f2d0:    82 da       	r2 &= r0 			  ## freq_shift.h:58:18
  10f2d2:    2f ee 20 00 	r0 = 512 - r2 			  ## freq_shift.h:64:9
  10f2d6:    f8 06       	macc = r7 * r0 (s) 			  ## freq_shift.h:64:9
  10f2d8:    f6 d4       	r6 = r6 + r3 			  ## freq_shift.h:64:9
  10f2da:    76 48       	r6 = [r6 + 4] 			  ## freq_shift.h:65:9
  10f2dc:    b2 07       	macc += r6 * r2 (s) 			  ## freq_shift.h:65:9
  10f2de:    05 89       	r5 += 32 			  ## freq_shift.h:59:26
  10f2e0:    80 f3 55 7f 	r5 = r5 & 127 			  ## freq_shift.h:59:32
  10f2e4:    2d a2       	r5 = r5 << 2 			  ## freq_shift.h:69:9
  10f2e6:    20 e7 36 05 	r6 = [r3 + r5] 			  ## freq_shift.h:69:9
  10f2ea:    c0 f9 07 02 	r7 = macc >>> 2 			  ## freq_shift.h:66:9
  10f2ee:    f0 06       	macc = r6 * r0 (s) 			  ## freq_shift.h:69:9
  10f2f0:    58 d5       	r0 = r3 + r5 			  ## freq_shift.h:64:9
  10f2f2:    40 48       	r0 = [r0 + 4] 			  ## freq_shift.h:70:9
  10f2f4:    82 07       	macc += r0 * r2 (s) 			  ## freq_shift.h:70:9
  10f2f6:    c0 f9 05 02 	r5 = macc >>> 2 			  ## freq_shift.h:71:9
  10f2fa:    00 e5 42 ff 	r2, r0 = d[r4 + -4] 			  ## freq_shift.h:258:49
  10f2fe:    16 d4       	r6 = r2 + r0 			  ## freq_shift.h:258:34
  10f300:    9b ee 62 80 	r2 = r6 - 65536 			  ## freq_shift.h:262:38
  10f304:    0b ef 60 80 	cmp r6, 65536			  ## freq_shift.h:260:17
  10f308:    b0 03       	ifs (nzcv < 0) {			  ## freq_shift.h:260:17
  10f30a:    32 c6       		r2 = r6 
                               	}			  ## freq_shift.h:260:17
  10f30c:    22 68       	[r4 + 0] = r2 			  ## freq_shift.h:258:34
  10f30e:    60 48       	r0 = [r4 + 4] 			  ## freq_shift.h:265:32
  10f310:    80 fd 5d 00 	macc = r13 * r5 (s) 			  ## freq_shift.h:267:13
  10f314:    80 fc 00 09 	r0 = r0 * r9 			  ## freq_shift.h:265:45
  10f318:    87 07       	macc += r0 * r7 (s) 			  ## freq_shift.h:268:13
  10f31a:    90 ea 00 80 	r0 = -32768 			  ## freq_shift.h:279:22
  10f31e:    c0 f9 03 15 	r3 = macc >>> 21 			  ## freq_shift.h:270:13
  10f322:    18 ce       	cmp r3, r0			  ## freq_shift.h:279:22
  10f324:    18 c6       	r0 = r3 			  ## freq_shift.h:279:22
  10f326:    d0 03       	ifs (nzcv <= 0) {			  ## freq_shift.h:279:22
  10f328:    90 ea 00 80 		r0 = -32768 
                               	}			  ## freq_shift.h:279:22
  10f32c:    14 ea ff 7f 	r4 = 32767 			  ## freq_shift.h:279:22
  10f330:    0c ef 30 00 	cmp r3, 32768			  ## freq_shift.h:283:33
  10f334:    b0 03       	ifs (nzcv < 0) {			  ## freq_shift.h:283:33
  10f336:    04 c6       		r4 = r0 
                               	}			  ## freq_shift.h:283:33
  10f338:    80 43       	r0 = [sp+ 56] 			  ## freq_shift.h:283:31
  10f33a:    50 e7 04 0c 	h[r0 + r12] = r4 			  ## freq_shift.h:283:31
  10f33e:    4a ce       	cmp r1, r10			  ## freq_shift.h:200:9
  10f340:    ff fb cb f6 	ifs (nzcv < 0) goto -296 <howling_ps_main+0x3DE : 10f21c >			  ## freq_shift.h:200:9
  10f344:    20 f7 a0 02 	r0 = r10 << 2 			  ## freq_shift.h:287:37
  10f348:    00 ee b1 00 	r1 = r11 + r0 			  ## freq_shift.h:287:37
  10f34c:    98 c6       	r0 = r11 			  ## freq_shift.h:287:9
  10f34e:    12 ea e4 01 	r2 = 484 			  ## freq_shift.h:287:9
  10f352:    d9 e1 df df 	call -312326 <memcpy : c2f50 >			  ## freq_shift.h:287:9
  10f356:    d0 cb       	r8 += r10 			  ## freq_shift.h:288:14
  10f358:    c0 42       	r0 = [sp+ 44] 
  10f35a:    00 98       	cmp r0, 0
  10f35c:    ff fb 21 f5 	ifs (nzcv != 0) goto -348 <howling_ps_main+0x3C6 : 10f204 >
  10f360:    45 41       	r5 = [sp+ 20] 
  10f362:    68 50       	r0 = h[r5 + 4] 			  ## shift_anysrh.c:141:26
  10f364:    87 42       	r7 = [sp+ 40] 			  ## shift_anysrh.c:141:26
  10f366:    c0 d5       	r0 = r0 + r7 			  ## shift_anysrh.c:141:26
  10f368:    68 70       	h[r5 + 4] = r0 			  ## shift_anysrh.c:141:26
  10f36a:    46 42       	r6 = [sp+ 36] 			  ## shift_anysrh.c:141:26
  10f36c:    f6 d5       	r6 = r6 + r7 			  ## shift_anysrh.c:140:9
  10f36e:    c1 c9       	r1 = r0.l (s) 			  ## shift_anysrh.c:141:26
  10f370:    01 9a       	cmp r1, 64			  ## shift_anysrh.c:144:7
  10f372:    20 e9 08 04 	r8 = [sp+ 16] 			  ## shift_anysrh.c:144:7
  10f376:    c4 41       	r4 = [sp+ 28] 			  ## shift_anysrh.c:144:7
  10f378:    13 1b       	ifs (nzcv < 0) goto 38 <howling_ps_main+0x562 : 10f3a0 >			  ## shift_anysrh.c:144:7
  10f37a:    01 a1       	r1 = r0 << 1 			  ## shift_anysrh.c:147:28
  10f37c:    29 70       	h[r5 + 0] = r1 			  ## shift_anysrh.c:147:26
  10f37e:    00 80       	r0 = 0 			  ## shift_anysrh.c:147:26
  10f380:    68 70       	h[r5 + 4] = r0 			  ## shift_anysrh.c:149:27
  10f382:    28 74       	h[r5 + 2] = r0 			  ## shift_anysrh.c:150:27
  10f384:    00 e5 43 03 	r3, r0 = d[r4 + 12] 			  ## shift_anysrh.c:151:69
  10f388:    ca c9       	r2 = r1.l (s) 			  ## shift_anysrh.c:151:114
  10f38a:    81 c6       	r1 = r8 			  ## shift_anysrh.c:151:20
  10f38c:    ab 01       	call r3			  ## shift_anysrh.c:151:20
  10f38e:    29 54       	r1 = h[r5 + 2] 			  ## shift_anysrh.c:152:27
  10f390:    09 d4       	r1 = r1 + r0 			  ## shift_anysrh.c:152:27
  10f392:    29 74       	h[r5 + 2] = r1 			  ## shift_anysrh.c:152:27
  10f394:    29 50       	r1 = h[r5 + 0] 			  ## shift_anysrh.c:153:26
  10f396:    08 d6       	r0 = r1 - r0 			  ## shift_anysrh.c:153:26
  10f398:    28 70       	h[r5 + 0] = r0 			  ## shift_anysrh.c:153:26
  10f39a:    c0 c9       	r0 = r0.l (s) 			  ## shift_anysrh.c:153:26
  10f39c:    00 98       	cmp r0, 0			  ## shift_anysrh.c:153:26
  10f39e:    1d 1c       	ifs (nzcv > 0) goto 58 <howling_ps_main+0x59C : 10f3da >			  ## shift_anysrh.c:153:26
  10f3a0:    20 e9 0a 08 	r10 = [sp+ 32] 
  10f3a4:    40 ee aa 07 	r10 = r10 - r7 			  ## shift_anysrh.c:121:15
  10f3a8:    80 ef a0 00 	cmp r10, 0
  10f3ac:    ff fb 7c d7 	ifs (nzcv > 0) goto -1298 <howling_ps_main+0x60 : 10ee9e >
  10f3b0:    29 50       	r1 = h[r5 + 0] 
  10f3b2:    48 c9       	r0 = r1.l 			  ## shift_anysrh.c:164:27
  10f3b4:    12 11       	ifs (nzcv != 0) goto 36 <howling_ps_main+0x59C : 10f3da >			  ## shift_anysrh.c:164:27
  10f3b6:    68 50       	r0 = h[r5 + 4] 			  ## shift_anysrh.c:166:22
  10f3b8:    00 21       	if (r0 == 0) goto 32 <howling_ps_main+0x59C : 10f3da >			  ## shift_anysrh.c:166:22
  10f3ba:    01 a1       	r1 = r0 << 1 			  ## shift_anysrh.c:168:51
  10f3bc:    29 70       	h[r5 + 0] = r1 			  ## shift_anysrh.c:168:26
  10f3be:    00 80       	r0 = 0 			  ## shift_anysrh.c:170:27
  10f3c0:    68 70       	h[r5 + 4] = r0 			  ## shift_anysrh.c:170:27
  10f3c2:    28 74       	h[r5 + 2] = r0 			  ## shift_anysrh.c:171:27
  10f3c4:    00 e5 43 03 	r3, r0 = d[r4 + 12] 			  ## shift_anysrh.c:172:69
  10f3c8:    ca c9       	r2 = r1.l (s) 			  ## shift_anysrh.c:172:114
  10f3ca:    81 c6       	r1 = r8 			  ## shift_anysrh.c:172:20
  10f3cc:    ab 01       	call r3			  ## shift_anysrh.c:172:20
  10f3ce:    29 54       	r1 = h[r5 + 2] 			  ## shift_anysrh.c:173:27
  10f3d0:    09 d4       	r1 = r1 + r0 			  ## shift_anysrh.c:173:27
  10f3d2:    29 74       	h[r5 + 2] = r1 			  ## shift_anysrh.c:173:27
  10f3d4:    29 50       	r1 = h[r5 + 0] 			  ## shift_anysrh.c:174:26
  10f3d6:    08 d6       	r0 = r1 - r0 			  ## shift_anysrh.c:174:26
  10f3d8:    28 70       	h[r5 + 0] = r0 			  ## shift_anysrh.c:174:26
  10f3da:    30 a1       	r0 = r6 << 1 			  ## shift_anysrh.c:179:15
  10f3dc:    3c cd       	sp += 60 
  10f3de:    30 c4       	{macch, maccl} = [sp++] 
  10f3e0:    1e c0       	{pc, r14-r4} = [sp++] 
  10f3e2:    00 00       	nop


.GCPI370_0:
  10f3e4:    b8 65 11 00     < 1140152 : 0x1165B8 >

.GCPI370_1:
  10f3e8:    f4 65 11 00     < 1140212 : 0x1165F4 >

notchHowling_config:
  10f3ec:    18 c2       	[--sp] = {rets, r8-r4} 			  ## notch_howling.c:263:0
  10f3ee:    a9 21       	if (r1 != 0) goto 52 <notchHowling_config+0x38 : 10f424 >			  ## notch_howling.c:263:0
  10f3f0:    01 80       	r1 = 0 			  ## notch_howling.c:263:0
  10f3f2:    13 c6       	r3 = r2 			  ## notch_howling.c:268:12
  10f3f4:    68 e8 31 01 	[r3 ++= 4] = r1 			  ## notch_howling.c:268:12
  10f3f8:    14 ea c0 09 	r4 = 2496 			  ## notch_howling.c:268:12
  10f3fc:    50 ea d4 09 	r8 = 2516 			  ## notch_howling.c:268:12
  10f400:    06 80       	r6 = 0 			  ## notch_howling.c:272:21
  10f402:    0d 08       	goto 26 <notchHowling_config+0x32 : 10f41e >			  ## notch_howling.c:272:21
  10f404:    47 d4       	r7 = r0 + r1 			  ## notch_howling.c:271:25
  10f406:    10 e7 75 04 	r5 = h[r7 + r4] 			  ## notch_howling.c:271:25
  10f40a:    85 20       	if (r5 == 0) goto 16 <notchHowling_config+0x30 : 10f41c >			  ## notch_howling.c:271:25
  10f40c:    20 e7 75 08 	r5 = [r7 + r8] 			  ## notch_howling.c:272:46
  10f410:    36 a2       	r6 = r6 << 2 			  ## notch_howling.c:272:6
  10f412:    60 e7 35 06 	[r3 + r6] = r5 			  ## notch_howling.c:272:26
  10f416:    15 48       	r5 = [r2 + 0] 			  ## notch_howling.c:273:13
  10f418:    6e d0       	r6 = r5 + 1 			  ## notch_howling.c:273:13
  10f41a:    16 68       	[r2 + 0] = r6 			  ## notch_howling.c:273:13
  10f41c:    a1 89       	r1 += 52 			  ## notch_howling.c:269:3
  10f41e:    81 ef 10 04 	cmp r1, 260			  ## notch_howling.c:269:3
  10f422:    f0 11       	ifs (nzcv != 0) goto -32 <notchHowling_config+0x18 : 10f404 >			  ## notch_howling.c:269:3
  10f424:    00 80       	r0 = 0 			  ## notch_howling.c:277:2
  10f426:    18 c0       	{pc, r8-r4} = [sp++] 


get_howling_buf:
  10f428:    01 49       	r1 = [r0 + 16] 			  ## notch_howling.c:282:0
  10f42a:    12 ea c0 5d 	r2 = 24000 			  ## notch_howling.c:286:17
  10f42e:    10 ea 90 0d 	r0 = 3472 			  ## notch_howling.c:287:3
  10f432:    0a ce       	cmp r1, r2			  ## notch_howling.c:287:3
  10f434:    d0 03       	ifs (nzcv <= 0) {			  ## notch_howling.c:287:3
  10f436:    10 ea 50 0c 		r0 = 3152 
                               	}			  ## notch_howling.c:287:3
  10f43a:    20 00       	rts			  ## notch_howling.c:294:2


howling_update:
  10f43c:    17 c2       	[--sp] = {rets, r7-r4} 			  ## notch_howling.c:382:0
  10f43e:    30 c5       	[--sp] = {macch, maccl} 			  ## notch_howling.c:382:0
  10f440:    f8 cd       	sp += -8 			  ## notch_howling.c:382:0
  10f442:    0c c6       	r4 = r1 			  ## notch_howling.c:382:0
  10f444:    00 60       	[sp] = r0 			  ## notch_howling.c:387:41
  10f446:    25 49       	r5 = [r4 + 16] 			  ## notch_howling.c:387:41
  10f448:    02 e5 41 01 	r1, r2 = d[r4 + 4] 			  ## notch_howling.c:387:22
  10f44c:    02 ed 06 20 	r6 = r0 + 544 			  ## notch_howling.c:387:22
  10f450:    b2 6f       	[r6 + -8] = r2 			  ## notch_howling.c:388:7
  10f452:    22 48       	r2 = [r4 + 0] 			  ## notch_howling.c:389:19
  10f454:    f2 6f       	[r6 + -4] = r2 			  ## notch_howling.c:389:10
  10f456:    32 85       	r2 = -90 			  ## notch_howling.c:391:2
  10f458:    27 ea 03 00 	r3 = 33554432 			  ## notch_howling.c:391:2
  10f45c:    d3 06       	macc = r2 * r3 (s) 			  ## notch_howling.c:391:2
  10f45e:    80 fc 50 01 	r0 = r5 * r1 			  ## notch_howling.c:387:32
  10f462:    11 ea e8 03 	r1 = 1000 			  ## notch_howling.c:387:52
  10f466:    c0 fc 00 01 	r0 = r0 / r1 (s) 			  ## notch_howling.c:387:52
  10f46a:    80 05       	macc /= r0 (s) 			  ## notch_howling.c:392:2
  10f46c:    27 c8       	r7 = maccl 			  ## notch_howling.c:392:2
  10f46e:    25 90       	r5 = sp + 4 
  10f470:    38 c6       	r0 = r7 			  ## notch_howling.c:393:2
  10f472:    c9 80       	r1 = 25 			  ## notch_howling.c:393:2
  10f474:    32 c6       	r2 = r6 			  ## notch_howling.c:393:2
  10f476:    2b c6       	r3 = r5 			  ## notch_howling.c:393:2
  10f478:    fd e1 4f 7a 	call -20664 <db2mag : 10a3c4 >			  ## notch_howling.c:393:2
  10f47c:    b8 dc       	r0 = -r7 			  ## notch_howling.c:394:9
  10f47e:    01 40       	r1 = [sp] 			  ## notch_howling.c:394:23
  10f480:    02 ed 12 24 	r2 = r1 + 548 			  ## notch_howling.c:394:23
  10f484:    c9 80       	r1 = 25 			  ## notch_howling.c:394:2
  10f486:    2b c6       	r3 = r5 			  ## notch_howling.c:394:2
  10f488:    fd e1 cf 79 	call -20680 <db2mag : 10a3c4 >			  ## notch_howling.c:394:2
  10f48c:    e0 48       	r0 = [r4 + 12] 			  ## notch_howling.c:396:24
  10f48e:    b0 68       	[r6 + 8] = r0 			  ## notch_howling.c:396:15
  10f490:    08 cd       	sp += 8 			  ## notch_howling.c:396:15
  10f492:    30 c4       	{macch, maccl} = [sp++] 			  ## notch_howling.c:396:15
  10f494:    17 c0       	{pc, r7-r4} = [sp++] 			  ## notch_howling.c:396:15


readData:
  10f496:    12 a1       	r2 = r2 << 1 			  ## notch_howling.c:429:0
  10f498:    d9 fa af d5 	goto -312652 <memcpy : c2f50 >			  ## notch_howling.c:430:2


howling_detect:
  10f49c:    1e c2       	[--sp] = {rets, r14-r4} 			  ## howling_detection.c:286:0
  10f49e:    30 c5       	[--sp] = {macch, maccl} 			  ## howling_detection.c:286:0
  10f4a0:    b8 cd       	sp += -72 			  ## howling_detection.c:286:0
  10f4a2:    14 a1       	r4 = r2 << 1 			  ## howling_detection.c:28:19
  10f4a4:    00 ed 03 16 	r3 = r0 + 22 			  ## howling_detection.c:288:16
  10f4a8:    1f d5       	r7 = r3 + r4 			  ## howling_detection.c:28:19
  10f4aa:    2f ee 24 80 	r4 = 256 - r2 			  ## howling_detection.c:23:23
  10f4ae:    1d c6       	r5 = r3 			  ## howling_detection.c:30:2
  10f4b0:    2c 01       	rep 6, r4 { <howling_detect+0x22 : 10f4be >			  ## howling_detection.c:30:2
  10f4b2:    98 e8 76 80 		r6 = h[r7 ++= 2] (s) 			  ## howling_detection.c:30:2
  10f4b6:    58 e8 56 80 		h[r5 ++= 2] = r6 			  ## howling_detection.c:30:2
  10f4ba:    90 ee 44 01 		r4 = r4 - 1 
                               	}			  ## howling_detection.c:30:2
  10f4be:    8c 27       	if (r4 != 0) goto -16 <howling_detect+0x14 : 10f4b0 >			  ## howling_detection.c:30:2
  10f4c0:    2a 01       	rep 6, r2 { <howling_detect+0x32 : 10f4ce >			  ## howling_detection.c:51:2
  10f4c2:    98 e8 16 80 		r6 = h[r1 ++= 2] (s) 			  ## howling_detection.c:51:2
  10f4c6:    58 e8 56 80 		h[r5 ++= 2] = r6 			  ## howling_detection.c:51:2
  10f4ca:    90 ee 22 01 		r2 = r2 - 1 
                               	}			  ## howling_detection.c:51:2
  10f4ce:    8a 27       	if (r2 != 0) goto -16 <howling_detect+0x24 : 10f4c0 >			  ## howling_detection.c:51:2
  10f4d0:    04 ed 02 74 	r2 = r0 + 1140 			  ## howling_detection.c:289:20
  10f4d4:    15 ea 00 01 	r5 = 256 			  ## howling_detection.c:23:23
  10f4d8:    20 e4 11 e2 	r1 = [addr(1928)]  <.GCPI375_0 : 10fc64 >			  ## howling_detection.c:88:2
  10f4dc:    c2 60       	[sp+ 12] = r2 			  ## howling_detection.c:88:2
  10f4de:    3d 01       	rep 8, r5 { <howling_detect+0x54 : 10f4f0 >			  ## howling_detection.c:88:2
  10f4e0:    c8 ff 31 01 		macc = h[r3 ++= 2] * [r1 ++= 4] (s) 			  ## howling_detection.c:88:2
  10f4e4:    c0 f9 04 1c 		r4 = macc >>> 28 			  ## howling_detection.c:88:2
  10f4e8:    68 e8 24 01 		[r2 ++= 4] = r4 			  ## howling_detection.c:88:2
  10f4ec:    90 ee 55 01 		r5 = r5 - 1 
                               	}			  ## howling_detection.c:88:2
  10f4f0:    6d 27       	if (r5 != 0) goto -20 <howling_detect+0x42 : 10f4de >			  ## howling_detection.c:88:2
  10f4f2:    c0 61       	[sp+ 28] = r0 
  10f4f4:    09 ed 00 b0 	r0 = r0 + 2480 
  10f4f8:    80 61       	[sp+ 24] = r0 
  10f4fa:    81 4f       	r1 = [r0 + -8] 			  ## fftfun.c:56:16
  10f4fc:    c8 bf       	r0 = r1 >>> 31 			  ## fftfun.c:56:18
  10f4fe:    40 be       	r0 = r0 >> 30 			  ## fftfun.c:57:18
  10f500:    40 d4       	r0 = r0 + r1 			  ## fftfun.c:57:18
  10f502:    e0 f7 08 02 	r8 = r0 >>> 2 			  ## fftfun.c:57:18
  10f506:    4a bf       	r2 = r1 >> 31 			  ## fftfun.c:56:18
  10f508:    89 d4       	r1 = r1 + r2 			  ## fftfun.c:56:18
  10f50a:    c9 a1       	r1 = r1 >>> 1 			  ## fftfun.c:56:18
  10f50c:    1f ed 19 ff 	r9 = r1 + -1 			  ## fftfun.c:56:22
  10f510:    02 80       	r2 = 0 
  10f512:    03 80       	r3 = 0 
  10f514:    21 08       	goto 66 <howling_detect+0xBC : 10f558 >
  10f516:    1a ce       	cmp r3, r2			  ## fftfun.c:60:7
  10f518:    15 1a       	ifs (nzcv >= 0) goto 42 <howling_detect+0xA8 : 10f544 >			  ## fftfun.c:60:7
  10f51a:    14 a3       	r4 = r2 << 3 			  ## fftfun.c:62:8
  10f51c:    c6 40       	r6 = [sp+ 12] 			  ## fftfun.c:62:8
  10f51e:    35 d5       	r5 = r6 + r4 			  ## fftfun.c:62:8
  10f520:    20 e8 5a 01 	r10 = [r5 + 4] 			  ## fftfun.c:62:8
  10f524:    20 e7 6b 04 	r11 = [r6 + r4] 			  ## fftfun.c:62:8
  10f528:    18 a3       	r0 = r3 << 3 			  ## fftfun.c:63:13
  10f52a:    31 d4       	r1 = r6 + r0 			  ## fftfun.c:63:13
  10f52c:    20 e8 1c 01 	r12 = [r1 + 4] 			  ## fftfun.c:63:13
  10f530:    20 e7 67 00 	r7 = [r6 + r0] 			  ## fftfun.c:63:13
  10f534:    60 e7 67 04 	[r6 + r4] = r7 			  ## fftfun.c:63:13
  10f538:    60 e8 5c 01 	[r5 + 4] = r12 			  ## fftfun.c:63:13
  10f53c:    60 e7 6b 00 	[r6 + r0] = r11 			  ## fftfun.c:64:13
  10f540:    60 e8 1a 01 	[r1 + 4] = r10 			  ## fftfun.c:64:13
  10f544:    84 c6       	r4 = r8 
  10f546:    04 08       	goto 8 <howling_detect+0xB4 : 10f550 >
  10f548:    12 d7       	r2 = r2 - r4 			  ## fftfun.c:69:10
  10f54a:    60 bf       	r0 = r4 >> 31 			  ## fftfun.c:70:10
  10f54c:    00 d5       	r0 = r0 + r4 			  ## fftfun.c:70:10
  10f54e:    c4 a1       	r4 = r0 >>> 1 			  ## fftfun.c:70:10
  10f550:    14 ce       	cmp r2, r4			  ## fftfun.c:67:3
  10f552:    fa 1a       	ifs (nzcv >= 0) goto -12 <howling_detect+0xAC : 10f548 >
  10f554:    12 d5       	r2 = r2 + r4 			  ## fftfun.c:72:9
  10f556:    5b d0       	r3 = r3 + 1 			  ## fftfun.c:58:24
  10f558:    59 ce       	cmp r3, r9			  ## fftfun.c:58:2
  10f55a:    dd 1b       	ifs (nzcv < 0) goto -70 <howling_detect+0x7A : 10f516 >			  ## fftfun.c:58:2
  10f55c:    84 41       	r4 = [sp+ 24] 
  10f55e:    a0 4f       	r0 = [r4 + -8] 			  ## fftfun.c:160:19
  10f560:    41 bf       	r1 = r0 >> 31 			  ## fftfun.c:160:21
  10f562:    40 d4       	r0 = r0 + r1 			  ## fftfun.c:160:21
  10f564:    c0 a1       	r0 = r0 >>> 1 			  ## fftfun.c:160:21
  10f566:    40 63       	[sp+ 52] = r0 			  ## fftfun.c:164:11
  10f568:    e0 4f       	r0 = [r4 + -4] 			  ## fftfun.c:164:11
  10f56a:    00 60       	[sp] = r0 
  10f56c:    0a 80       	r2 = 1 
  10f56e:    09 80       	r1 = 1 
  10f570:    2b ea 08 80 	r8 = 65536 
  10f574:    8f 08       	goto 286 <howling_detect+0x1F8 : 10f694 >
  10f576:    41 60       	[sp+ 4] = r1 
  10f578:    a0 48       	r0 = [r4 + 8] 			  ## fftfun.c:172:13
  10f57a:    00 48       	r0 = [r0 + 0] 			  ## fftfun.c:172:13
  10f57c:    00 63       	[sp+ 48] = r0 			  ## fftfun.c:174:9
  10f57e:    13 a3       	r3 = r2 << 3 			  ## fftfun.c:174:9
  10f580:    10 a2       	r0 = r2 << 2 			  ## fftfun.c:174:9
  10f582:    c0 62       	[sp+ 44] = r0 			  ## fftfun.c:174:9
  10f584:    41 43       	r1 = [sp+ 52] 			  ## fftfun.c:174:9
  10f586:    c0 f3 10 01 	r0 = r1 & (~1) 
  10f58a:    00 61       	[sp+ 16] = r0 			  ## fftfun.c:168:20
  10f58c:    c9 a1       	r1 = r1 >>> 1 			  ## fftfun.c:168:20
  10f58e:    41 63       	[sp+ 52] = r1 
  10f590:    12 a1       	r2 = r2 << 1 			  ## fftfun.c:170:12
  10f592:    82 60       	[sp+ 8] = r2 
  10f594:    d0 a1       	r0 = r2 >>> 1 			  ## fftfun.c:171:13
  10f596:    40 61       	[sp+ 20] = r0 
  10f598:    51 ea 00 00 	r9 = 0 
  10f59c:    c5 40       	r5 = [sp+ 12] 
  10f59e:    02 80       	r2 = 0 
  10f5a0:    06 80       	r6 = 0 
  10f5a2:    71 08       	goto 226 <howling_detect+0x1EA : 10f686 >
  10f5a4:    06 62       	[sp+ 32] = r6 
  10f5a6:    42 62       	[sp+ 36] = r2 
  10f5a8:    52 ea 00 00 	r10 = 0 
  10f5ac:    85 62       	[sp+ 40] = r5 
  10f5ae:    40 08       	goto 128 <howling_detect+0x194 : 10f630 >
  10f5b0:    59 d5       	r1 = r3 + r5 			  ## fftfun.c:32:38
  10f5b2:    4c c6       	r12 = r1 			  ## fftfun.c:32:38
  10f5b4:    04 e8 c4 01 	r4 = b[++ r12 = 4] 			  ## fftfun.c:32:38
  10f5b8:    00 e8 cb c0 	r11 = b[r12 + 3] 			  ## fftfun.c:32:38
  10f5bc:    00 e8 cd 80 	r13 = b[r12 + 2] 			  ## fftfun.c:32:38
  10f5c0:    00 e8 1e 41 	r14 = b[r1 + 5] 			  ## fftfun.c:32:38
  10f5c4:    00 e7 36 05 	r6 = b[r3 + r5] 			  ## fftfun.c:32:38
  10f5c8:    0f 5e       	r7 = b[r1 + 3] 			  ## fftfun.c:32:38
  10f5ca:    0a 5c       	r2 = b[r1 + 2] 			  ## fftfun.c:32:38
  10f5cc:    09 5a       	r1 = b[r1 + 1] 			  ## fftfun.c:32:38
  10f5ce:    00 80       	r0 = 0 			  ## fftfun.c:32:38
  10f5d0:    05 c7       	macch = r0 			  ## fftfun.c:37:2
  10f5d2:    84 c7       	maccl = r8 			  ## fftfun.c:37:2
  10f5d4:    41 f6 21 08 	r1 <= insert(r2, p:8, l:8) 			  ## fftfun.c:32:38
  10f5d8:    42 f6 71 08 	r1 <= insert(r7, p:16, l:8) 			  ## fftfun.c:32:38
  10f5dc:    41 f6 16 18 	r6 <= insert(r1, p:8, l:24) 			  ## fftfun.c:32:38
  10f5e0:    07 43       	r7 = [sp+ 48] 			  ## fftfun.c:32:38
  10f5e2:    b7 07       	macc += r6 * r7 (s) 			  ## fftfun.c:38:2
  10f5e4:    20 f7 e1 08 	r1 = r14 << 8 			  ## fftfun.c:32:38
  10f5e8:    21 da       	r1 |= r4 			  ## fftfun.c:32:38
  10f5ea:    41 f6 bd 08 	r13 <= insert(r11, p:8, l:8) 			  ## fftfun.c:32:38
  10f5ee:    20 f7 d2 10 	r2 = r13 << 16 			  ## fftfun.c:32:38
  10f5f2:    11 da       	r1 |= r2 			  ## fftfun.c:32:38
  10f5f4:    b0 fd 91 00 	macc -= r1 * r9 (s) 			  ## fftfun.c:39:2
  10f5f8:    c0 f9 02 11 	r2 = macc >>> 17 			  ## fftfun.c:40:2
  10f5fc:    05 c7       	macch = r0 			  ## fftfun.c:43:2
  10f5fe:    84 c7       	maccl = r8 			  ## fftfun.c:43:2
  10f600:    a0 fd 96 00 	macc += r6 * r9 (s) 			  ## fftfun.c:44:2
  10f604:    8f 07       	macc += r1 * r7 (s) 			  ## fftfun.c:45:2
  10f606:    c0 f9 01 11 	r1 = macc >>> 17 			  ## fftfun.c:46:2
  10f60a:    2c 48       	r4 = [r5 + 0] 			  ## fftfun.c:181:28
  10f60c:    a4 d6       	r4 = r4 - r2 			  ## fftfun.c:181:33
  10f60e:    60 e7 34 05 	[r3 + r5] = r4 			  ## fftfun.c:181:19
  10f612:    6c 48       	r4 = [r5 + 4] 			  ## fftfun.c:182:28
  10f614:    64 d6       	r4 = r4 - r1 			  ## fftfun.c:182:33
  10f616:    60 e8 c4 00 	[r12 + 0] = r4 			  ## fftfun.c:182:19
  10f61a:    2c 48       	r4 = [r5 + 0] 			  ## fftfun.c:183:27
  10f61c:    12 d5       	r2 = r2 + r4 			  ## fftfun.c:183:32
  10f61e:    2a 68       	[r5 + 0] = r2 			  ## fftfun.c:183:18
  10f620:    6a 48       	r2 = [r5 + 4] 			  ## fftfun.c:184:27
  10f622:    89 d4       	r1 = r1 + r2 			  ## fftfun.c:184:32
  10f624:    69 68       	[r5 + 4] = r1 			  ## fftfun.c:184:18
  10f626:    c0 42       	r0 = [sp+ 44] 			  ## fftfun.c:177:5
  10f628:    01 a2       	r1 = r0 << 2 			  ## fftfun.c:177:5
  10f62a:    6d d4       	r5 = r5 + r1 			  ## fftfun.c:177:5
  10f62c:    00 ed aa 01 	r10 = r10 + 1 			  ## fftfun.c:177:30
  10f630:    41 43       	r1 = [sp+ 52] 			  ## fftfun.c:177:5
  10f632:    91 ce       	cmp r10, r1			  ## fftfun.c:177:5
  10f634:    bd 1b       	ifs (nzcv < 0) goto -134 <howling_detect+0x114 : 10f5b0 >			  ## fftfun.c:177:5
  10f636:    84 41       	r4 = [sp+ 24] 
  10f638:    e1 48       	r1 = [r4 + 12] 			  ## fftfun.c:189:15
  10f63a:    ca bf       	r2 = r1 >>> 31 			  ## fftfun.c:189:31
  10f63c:    52 be       	r2 = r2 >> 30 			  ## fftfun.c:189:31
  10f63e:    52 d4       	r2 = r2 + r1 			  ## fftfun.c:189:31
  10f640:    d5 a2       	r5 = r2 >>> 2 			  ## fftfun.c:189:31
  10f642:    22 48       	r2 = [r4 + 0] 			  ## fftfun.c:187:25
  10f644:    00 41       	r0 = [sp+ 16] 			  ## fftfun.c:187:36
  10f646:    02 06       	r2 *= r0 			  ## fftfun.c:187:36
  10f648:    06 42       	r6 = [sp+ 32] 			  ## fftfun.c:187:36
  10f64a:    b6 d4       	r6 = r6 + r2 			  ## fftfun.c:187:9
  10f64c:    35 ce       	cmp r6, r5			  ## fftfun.c:189:9
  10f64e:    0b 1d       	ifs (nzcv <= 0) goto 22 <howling_detect+0x1CA : 10f666 >			  ## fftfun.c:189:9
  10f650:    a4 48       	r4 = [r4 + 8] 			  ## fftfun.c:192:16
  10f652:    4a bf       	r2 = r1 >> 31 			  ## fftfun.c:191:26
  10f654:    89 d4       	r1 = r1 + r2 			  ## fftfun.c:191:26
  10f656:    c9 a1       	r1 = r1 >>> 1 			  ## fftfun.c:191:26
  10f658:    89 d7       	r1 = r1 - r6 			  ## fftfun.c:191:30
  10f65a:    0a a2       	r2 = r1 << 2 			  ## fftfun.c:192:16
  10f65c:    20 e7 42 02 	r2 = [r4 + r2] 			  ## fftfun.c:192:16
  10f660:    90 dc       	r0 = -r2 			  ## fftfun.c:192:15
  10f662:    00 63       	[sp+ 48] = r0 			  ## fftfun.c:192:15
  10f664:    06 08       	goto 12 <howling_detect+0x1D6 : 10f672 >			  ## fftfun.c:192:15
  10f666:    a4 48       	r4 = [r4 + 8] 			  ## fftfun.c:197:15
  10f668:    31 a2       	r1 = r6 << 2 			  ## fftfun.c:197:15
  10f66a:    20 e7 40 01 	r0 = [r4 + r1] 			  ## fftfun.c:197:15
  10f66e:    00 63       	[sp+ 48] = r0 			  ## fftfun.c:197:15
  10f670:    31 c6       	r1 = r6 			  ## fftfun.c:197:15
  10f672:    42 42       	r2 = [sp+ 36] 
  10f674:    69 d6       	r1 = r5 - r1 
  10f676:    09 a2       	r1 = r1 << 2 
  10f678:    20 e7 41 01 	r1 = [r4 + r1] 
  10f67c:    30 ee 19 00 	r9 = -r1 
  10f680:    85 42       	r5 = [sp+ 40] 
  10f682:    45 88       	r5 += 8 			  ## fftfun.c:174:4
  10f684:    52 d0       	r2 = r2 + 1 			  ## fftfun.c:174:31
  10f686:    40 41       	r0 = [sp+ 20] 			  ## fftfun.c:174:4
  10f688:    10 ce       	cmp r2, r0			  ## fftfun.c:174:4
  10f68a:    8c 1b       	ifs (nzcv < 0) goto -232 <howling_detect+0x108 : 10f5a4 >			  ## fftfun.c:174:4
  10f68c:    41 40       	r1 = [sp+ 4] 
  10f68e:    49 d0       	r1 = r1 + 1 			  ## fftfun.c:166:24
  10f690:    84 41       	r4 = [sp+ 24] 
  10f692:    82 40       	r2 = [sp+ 8] 
  10f694:    00 40       	r0 = [sp] 			  ## fftfun.c:166:3
  10f696:    08 ce       	cmp r1, r0			  ## fftfun.c:166:3
  10f698:    ff fb db f6 	ifs (nzcv < 0) goto -294 <howling_detect+0xDA : 10f576 >			  ## fftfun.c:166:3
  10f69c:    c3 40       	r3 = [sp+ 12] 
  10f69e:    00 e5 31 00 	r1, r0 = d[r3 + 0] 			  ## fftfun.c:212:17
  10f6a2:    0a d4       	r2 = r1 + r0 			  ## fftfun.c:214:17
  10f6a4:    1a 68       	[r3 + 0] = r2 			  ## fftfun.c:214:7
  10f6a6:    02 80       	r2 = 0 			  ## fftfun.c:214:7
  10f6a8:    5a 68       	[r3 + 4] = r2 			  ## fftfun.c:215:7
  10f6aa:    40 d6       	r0 = r0 - r1 			  ## fftfun.c:216:21
  10f6ac:    a1 4f       	r1 = [r4 + -8] 			  ## fftfun.c:216:8
  10f6ae:    09 a2       	r1 = r1 << 2 			  ## fftfun.c:216:2
  10f6b0:    60 e7 30 01 	[r3 + r1] = r0 			  ## fftfun.c:216:11
  10f6b4:    a0 4f       	r0 = [r4 + -8] 			  ## fftfun.c:217:8
  10f6b6:    00 a2       	r0 = r0 << 2 			  ## fftfun.c:217:10
  10f6b8:    c0 d4       	r0 = r0 + r3 			  ## fftfun.c:212:17
  10f6ba:    42 68       	[r0 + 4] = r2 			  ## fftfun.c:217:15
  10f6bc:    c3 41       	r3 = [sp+ 28] 
  10f6be:    04 ed 3c 80 	r12 = r3 + 1152 			  ## fftfun.c:218:7
  10f6c2:    08 80       	r0 = 1 			  ## fftfun.c:218:7
  10f6c4:    d3 ea ff ff 	r11 = -1 			  ## fftfun.c:218:7
  10f6c8:    2b ea 09 00 	r9 = 131072 			  ## fftfun.c:218:7
  10f6cc:    52 ea 12 00 	r10 = 18 			  ## fftfun.c:218:7
  10f6d0:    4b 08       	goto 150 <howling_detect+0x2CC : 10f768 >			  ## fftfun.c:218:7
  10f6d2:    9d cb       	r5 += r11 			  ## fftfun.c:221:34
  10f6d4:    26 48       	r6 = [r4 + 0] 			  ## fftfun.c:220:26
  10f6d6:    35 06       	r5 *= r6 			  ## fftfun.c:221:34
  10f6d8:    2d a2       	r5 = r5 << 2 			  ## fftfun.c:221:10
  10f6da:    a3 48       	r3 = [r4 + 8] 			  ## fftfun.c:220:10
  10f6dc:    20 e7 35 05 	r5 = [r3 + r5] 			  ## fftfun.c:221:10
  10f6e0:    06 06       	r6 *= r0 			  ## fftfun.c:220:20
  10f6e2:    36 a2       	r6 = r6 << 2 			  ## fftfun.c:220:10
  10f6e4:    20 e7 36 06 	r6 = [r3 + r6] 			  ## fftfun.c:220:10
  10f6e8:    7b bf       	r3 = r7 >> 31 			  ## fftfun.c:223:16
  10f6ea:    db d5       	r3 = r3 + r7 			  ## fftfun.c:223:16
  10f6ec:    5b a1       	r3 = r3 >> 1 			  ## fftfun.c:223:16
  10f6ee:    9b cb       	r3 += r11 			  ## fftfun.c:224:19
  10f6f0:    1f a3       	r7 = r3 << 3 			  ## fftfun.c:224:33
  10f6f2:    20 e9 08 03 	r8 = [sp+ 12] 			  ## fftfun.c:224:33
  10f6f6:    00 ee 83 07 	r3 = r8 + r7 			  ## fftfun.c:224:33
  10f6fa:    5b 48       	r3 = [r3 + 4] 			  ## fftfun.c:225:33
  10f6fc:    20 e7 8d 07 	r13 = [r8 + r7] 			  ## fftfun.c:224:33
  10f700:    20 e8 c1 ff 	r1 = [r12 + -4] 			  ## fftfun.c:224:19
  10f704:    40 ee d2 01 	r2 = r13 - r1 			  ## fftfun.c:227:26
  10f708:    40 63       	[sp+ 52] = r0 
  10f70a:    20 e8 c0 00 	r0 = [r12 + 0] 			  ## fftfun.c:225:19
  10f70e:    f2 06       	macc = r6 * r2 (s) 			  ## fftfun.c:229:3
  10f710:    1c d4       	r4 = r3 + r0 			  ## fftfun.c:225:24
  10f712:    ec 07       	macc -= r5 * r4 (s) 			  ## fftfun.c:230:3
  10f714:    c0 d6       	r0 = r0 - r3 			  ## fftfun.c:226:24
  10f716:    a0 fd 90 00 	macc += r0 * r9 (s) 			  ## fftfun.c:231:3
  10f71a:    80 f9 0e 0a 	r14 = macc >>> r10 			  ## fftfun.c:232:3
  10f71e:    f4 06       	macc = r6 * r4 (s) 			  ## fftfun.c:234:3
  10f720:    aa 07       	macc += r5 * r2 (s) 			  ## fftfun.c:235:3
  10f722:    a9 cb       	r1 += r13 			  ## fftfun.c:224:24
  10f724:    a0 fd 91 00 	macc += r1 * r9 (s) 			  ## fftfun.c:236:3
  10f728:    80 f9 03 0a 	r3 = macc >>> r10 			  ## fftfun.c:237:3
  10f72c:    60 e8 c3 ff 	[r12 + -4] = r3 			  ## fftfun.c:238:12
  10f730:    c3 41       	r3 = [sp+ 28] 			  ## fftfun.c:238:12
  10f732:    60 e8 ce 00 	[r12 + 0] = r14 			  ## fftfun.c:239:16
  10f736:    f2 06       	macc = r6 * r2 (s) 			  ## fftfun.c:241:3
  10f738:    ec 07       	macc -= r5 * r4 (s) 			  ## fftfun.c:242:3
  10f73a:    b0 fd 90 00 	macc -= r0 * r9 (s) 			  ## fftfun.c:243:3
  10f73e:    80 f9 00 0a 	r0 = macc >>> r10 			  ## fftfun.c:244:3
  10f742:    80 fd 91 00 	macc = r1 * r9 (s) 			  ## fftfun.c:246:3
  10f746:    ea 07       	macc -= r5 * r2 (s) 			  ## fftfun.c:247:3
  10f748:    f4 07       	macc -= r6 * r4 (s) 			  ## fftfun.c:248:3
  10f74a:    80 f9 01 0a 	r1 = macc >>> r10 			  ## fftfun.c:249:3
  10f74e:    60 e7 81 07 	[r8 + r7] = r1 			  ## fftfun.c:250:14
  10f752:    00 f3 71 04 	r1 = r7 | 4 			  ## fftfun.c:251:3
  10f756:    60 e7 80 01 	[r8 + r1] = r0 			  ## fftfun.c:251:18
  10f75a:    40 43       	r0 = [sp+ 52] 			  ## fftfun.c:251:18
  10f75c:    84 41       	r4 = [sp+ 24] 
  10f75e:    1f ed bb ff 	r11 = r11 + -1 			  ## fftfun.c:218:2
  10f762:    00 ed cc 08 	r12 = r12 + 8 			  ## fftfun.c:218:2
  10f766:    40 d0       	r0 = r0 + 1 			  ## fftfun.c:218:31
  10f768:    a7 4f       	r7 = [r4 + -8] 			  ## fftfun.c:218:23
  10f76a:    fd bf       	r5 = r7 >>> 31 			  ## fftfun.c:218:25
  10f76c:    6d be       	r5 = r5 >> 30 			  ## fftfun.c:218:25
  10f76e:    ed d5       	r5 = r5 + r7 			  ## fftfun.c:218:25
  10f770:    ed a2       	r5 = r5 >>> 2 			  ## fftfun.c:218:25
  10f772:    28 ce       	cmp r5, r0			  ## fftfun.c:218:2
  10f774:    ae 1a       	ifs (nzcv >= 0) goto -164 <howling_detect+0x236 : 10f6d2 >			  ## fftfun.c:218:2
  10f776:    04 ed 34 78 	r4 = r3 + 1144 			  ## howling_detection.c:151:11
  10f77a:    15 ea 74 04 	r5 = 1140 			  ## howling_detection.c:151:11
  10f77e:    96 ea 88 fb 	r6 = -1144 			  ## howling_detection.c:151:11
  10f782:    27 c6       	r7 = r4 			  ## howling_detection.c:151:11
  10f784:    38 08       	goto 112 <howling_detect+0x35A : 10f7f6 >			  ## howling_detection.c:151:11
  10f786:    38 48       	r0 = [r7 + 0] 			  ## howling_detection.c:154:15
  10f788:    c1 bf       	r1 = r0 >>> 31 			  ## howling_detection.c:154:15
  10f78a:    40 d4       	r0 = r0 + r1 			  ## howling_detection.c:154:15
  10f78c:    48 da       	r0 ^= r1 			  ## howling_detection.c:154:15
  10f78e:    f9 4f       	r1 = [r7 + -4] 			  ## howling_detection.c:153:15
  10f790:    ca bf       	r2 = r1 >>> 31 			  ## howling_detection.c:153:15
  10f792:    89 d4       	r1 = r1 + r2 			  ## howling_detection.c:153:15
  10f794:    51 da       	r1 ^= r2 			  ## howling_detection.c:153:15
  10f796:    08 ce       	cmp r1, r0			  ## howling_detection.c:159:7
  10f798:    09 1d       	ifs (nzcv <= 0) goto 18 <howling_detect+0x310 : 10f7ac >			  ## howling_detection.c:159:7
  10f79a:    20 e4 12 36 	r2 = [addr(1240)]  <.GCPI375_4 : 10fc74 >			  ## howling_detection.c:161:4
  10f79e:    ca 06       	macc = r1 * r2 (s) 			  ## howling_detection.c:161:4
  10f7a0:    20 e4 11 35 	r1 = [addr(1236)]  <.GCPI375_5 : 10fc78 >			  ## howling_detection.c:162:4
  10f7a4:    81 07       	macc += r0 * r1 (s) 			  ## howling_detection.c:162:4
  10f7a6:    c0 f9 00 19 	r0 = macc >>> 25 			  ## howling_detection.c:163:4
  10f7aa:    08 08       	goto 16 <howling_detect+0x320 : 10f7bc >
  10f7ac:    20 e4 12 32 	r2 = [addr(1224)]  <.GCPI375_5 : 10fc78 >			  ## howling_detection.c:167:4
  10f7b0:    ca 06       	macc = r1 * r2 (s) 			  ## howling_detection.c:167:4
  10f7b2:    20 e4 11 30 	r1 = [addr(1216)]  <.GCPI375_4 : 10fc74 >			  ## howling_detection.c:168:4
  10f7b6:    81 07       	macc += r0 * r1 (s) 			  ## howling_detection.c:168:4
  10f7b8:    c0 f9 00 19 	r0 = macc >>> 25 			  ## howling_detection.c:169:4
  10f7bc:    40 d0       	r0 = r0 + 1 			  ## howling_detection.c:171:15
  10f7be:    21 92       	r1 = sp + 68 
  10f7c0:    02 92       	r2 = sp + 64 
  10f7c2:    fd e1 4f 5a 	call -21688 <logAprx : 10a30e >			  ## math_fix.c:172:5
  10f7c6:    20 e4 10 2d 	r0 = [addr(1204)]  <.GCPI375_6 : 10fc7c >			  ## math_fix.c:173:5
  10f7ca:    41 44       	r1 = [sp+ 68] 			  ## math_fix.c:173:5
  10f7cc:    c8 06       	macc = r1 * r0 (s) 			  ## math_fix.c:173:5
  10f7ce:    c0 f9 01 1c 	r1 = macc >>> 28 			  ## math_fix.c:173:5
  10f7d2:    00 44       	r0 = [sp+ 64] 			  ## math_fix.c:293:21
  10f7d4:    20 ee 02 0f 	r2 = 15 - r0 			  ## math_fix.c:293:19
  10f7d8:    00 f7 10 02 	r0 = r1 << r2 			  ## math_fix.c:294:5
  10f7dc:    93 dc       	r3 = -r2 			  ## math_fix.c:294:5
  10f7de:    d9 cf       	r1 >>>= r3 			  ## math_fix.c:294:5
  10f7e0:    02 98       	cmp r2, 0			  ## math_fix.c:294:5
  10f7e2:    d0 03       	ifs (nzcv <= 0) {			  ## math_fix.c:294:5
  10f7e4:    08 c6       		r0 = r1 
                               	}			  ## math_fix.c:294:5
  10f7e6:    00 fc 00 14 	r0 = r0 * 20 			  ## math_fix.c:295:16
  10f7ea:    61 d5       	r1 = r4 + r5 			  ## math_fix.c:291:5
  10f7ec:    60 e7 10 06 	[r1 + r6] = r0 			  ## math_fix.c:295:8
  10f7f0:    47 88       	r7 += 8 			  ## howling_detection.c:151:2
  10f7f2:    2d d1       	r5 = r5 + 4 			  ## howling_detection.c:151:2
  10f7f4:    c3 41       	r3 = [sp+ 28] 			  ## howling_detection.c:151:2
  10f7f6:    86 ef 50 78 	cmp r5, 1656			  ## howling_detection.c:151:2
  10f7fa:    c5 11       	ifs (nzcv != 0) goto -118 <howling_detect+0x2EA : 10f786 >			  ## howling_detection.c:151:2
  10f7fc:    00 80       	r0 = 0 
  10f7fe:    18 71       	h[r3 + 16] = r0 			  ## howlingProcess.c:41:15
  10f800:    06 ed 31 78 	r1 = r3 + 1656 			  ## howlingProcess.c:41:15
  10f804:    01 63       	[sp+ 48] = r1 			  ## howlingProcess.c:41:15
  10f806:    08 68       	[r1 + 0] = r0 			  ## howlingProcess.c:61:16
  10f808:    08 ed 31 7c 	r1 = r3 + 2172 			  ## howlingProcess.c:61:16
  10f80c:    c1 62       	[sp+ 44] = r1 			  ## howlingProcess.c:61:16
  10f80e:    08 70       	h[r1 + 0] = r0 			  ## howlingProcess.c:62:11
  10f810:    08 ed 30 78 	r0 = r3 + 2168 			  ## howlingProcess.c:63:18
  10f814:    09 ed 34 7c 	r4 = r3 + 2428 			  ## howlingProcess.c:64:21
  10f818:    06 ed 31 74 	r1 = r3 + 1652 			  ## howlingProcess.c:58:10
  10f81c:    12 ea 80 00 	r2 = 128 			  ## howlingProcess.c:66:2
  10f820:    84 62       	[sp+ 40] = r4 			  ## howlingProcess.c:66:2
  10f822:    23 c6       	r3 = r4 			  ## howlingProcess.c:66:2
  10f824:    3a 01       	rep 8, r2 { <howling_detect+0x39A : 10f836 >			  ## howlingProcess.c:66:2
  10f826:    28 e8 14 ff 		r4 = [r1 ++= -4] 			  ## howlingProcess.c:66:2
  10f82a:    58 e8 32 ff 		h[r3 ++= -2] = r2 			  ## howlingProcess.c:66:2
  10f82e:    68 e8 04 ff 		[r0 ++= -4] = r4 			  ## howlingProcess.c:66:2
  10f832:    90 ee 22 01 		r2 = r2 - 1 
                               	}			  ## howlingProcess.c:66:2
  10f836:    6a 27       	if (r2 != 0) goto -20 <howling_detect+0x388 : 10f824 >			  ## howlingProcess.c:66:2
  10f838:    01 82       	r1 = 64 
  10f83a:    42 08       	goto 132 <howling_detect+0x424 : 10f8c0 >
  10f83c:    8b dc       	r3 = -r1 			  ## howlingProcess.c:15:11
  10f83e:    0c a2       	r4 = r1 << 2 			  ## howlingProcess.c:15:11
  10f840:    0d a1       	r5 = r1 << 1 			  ## howlingProcess.c:15:11
  10f842:    af dc       	r7 = -r5 			  ## howlingProcess.c:15:11
  10f844:    53 ea 00 00 	r11 = 0 			  ## howlingProcess.c:15:11
  10f848:    20 e9 0c 0c 	r12 = [sp+ 48] 			  ## howlingProcess.c:15:11
  10f84c:    20 e9 09 0b 	r9 = [sp+ 44] 			  ## howlingProcess.c:15:11
  10f850:    48 c6       	r8 = r1 			  ## howlingProcess.c:15:11
  10f852:    32 08       	goto 100 <howling_detect+0x41C : 10f8b8 >			  ## howlingProcess.c:15:11
  10f854:    20 f7 80 02 	r0 = r8 << 2 			  ## howlingProcess.c:21:11
  10f858:    02 43       	r2 = [sp+ 48] 			  ## howlingProcess.c:21:11
  10f85a:    20 e7 22 00 	r2 = [r2 + r0] 			  ## howlingProcess.c:21:11
  10f85e:    20 f7 80 01 	r0 = r8 << 1 			  ## howlingProcess.c:22:10
  10f862:    c6 41       	r6 = [sp+ 28] 			  ## howlingProcess.c:22:10
  10f864:    80 d5       	r0 = r0 + r6 			  ## howlingProcess.c:22:10
  10f866:    16 ea 7c 08 	r6 = 2172 			  ## howlingProcess.c:22:10
  10f86a:    10 e7 00 06 	r0 = h[r0 + r6] 			  ## howlingProcess.c:22:10
  10f86e:    40 63       	[sp+ 52] = r0 			  ## howlingProcess.c:22:10
  10f870:    dd c6       	r13 = r11 			  ## howlingProcess.c:22:10
  10f872:    a0 c6       	r0 = r12 			  ## howlingProcess.c:22:10
  10f874:    ce c6       	r14 = r9 			  ## howlingProcess.c:22:10
  10f876:    0b 08       	goto 22 <howling_detect+0x3F2 : 10f88e >			  ## howlingProcess.c:22:10
  10f878:    60 e7 4a 00 	[r4 + r0] = r10 			  ## howlingProcess.c:25:18
  10f87c:    10 e8 e6 00 	r6 = h[r14 + 0] 			  ## howlingProcess.c:26:22
  10f880:    50 e7 56 0e 	h[r5 + r14] = r6 			  ## howlingProcess.c:26:20
  10f884:    40 ee bb 01 	r11 = r11 - r1 			  ## howlingProcess.c:23:4
  10f888:    7e cb       	r14 += r7 			  ## howlingProcess.c:23:4
  10f88a:    1e a2       	r6 = r3 << 2 			  ## howlingProcess.c:23:4
  10f88c:    80 d5       	r0 = r0 + r6 			  ## howlingProcess.c:23:4
  10f88e:    80 ef b0 00 	cmp r11, 0			  ## howlingProcess.c:23:29
  10f892:    04 1b       	ifs (nzcv < 0) goto 8 <howling_detect+0x400 : 10f89c >			  ## howlingProcess.c:23:29
  10f894:    20 e8 0a 00 	r10 = [r0 + 0] 			  ## howlingProcess.c:23:32
  10f898:    92 ce       	cmp r10, r2			  ## howlingProcess.c:23:4
  10f89a:    ee 1b       	ifs (nzcv < 0) goto -36 <howling_detect+0x3DC : 10f878 >			  ## howlingProcess.c:23:4
  10f89c:    60 e7 42 00 	[r4 + r0] = r2 			  ## howlingProcess.c:28:17
  10f8a0:    40 43       	r0 = [sp+ 52] 			  ## howlingProcess.c:29:19
  10f8a2:    50 e7 50 0e 	h[r5 + r14] = r0 			  ## howlingProcess.c:29:19
  10f8a6:    eb c6       	r11 = r13 			  ## howlingProcess.c:29:19
  10f8a8:    00 ed bb 01 	r11 = r11 + 1 			  ## howlingProcess.c:20:3
  10f8ac:    00 ed cc 04 	r12 = r12 + 4 			  ## howlingProcess.c:20:3
  10f8b0:    00 ed 99 02 	r9 = r9 + 2 			  ## howlingProcess.c:20:3
  10f8b4:    00 ed 88 01 	r8 = r8 + 1 			  ## howlingProcess.c:20:27
  10f8b8:    80 ef 80 7f 	cmp r8, 127			  ## howlingProcess.c:20:3
  10f8bc:    cb 1d       	ifs (nzcv <= 0) goto -106 <howling_detect+0x3B8 : 10f854 >			  ## howlingProcess.c:20:3
  10f8be:    c9 a1       	r1 = r1 >>> 1 			  ## howlingProcess.c:18:36
  10f8c0:    09 98       	cmp r1, 1			  ## howlingProcess.c:18:2
  10f8c2:    bc 1a       	ifs (nzcv >= 0) goto -136 <howling_detect+0x3A0 : 10f83c >			  ## howlingProcess.c:18:2
  10f8c4:    52 ea 00 00 	r10 = 0 
  10f8c8:    51 ea 78 04 	r9 = 1144 
  10f8cc:    50 ea 7c 09 	r8 = 2428 
  10f8d0:    c1 41       	r1 = [sp+ 28] 
  10f8d2:    20 e9 0b 0b 	r11 = [sp+ 44] 
  10f8d6:    33 08       	goto 102 <howling_detect+0x4A2 : 10f93e >
  10f8d8:    90 e8 b6 00 	r6 = h[r11 + 0] (s) 			  ## howlingProcess.c:100:8
  10f8dc:    0e 98       	cmp r6, 1			  ## howlingProcess.c:101:7
  10f8de:    2b 1b       	ifs (nzcv < 0) goto 86 <howling_detect+0x49A : 10f936 >			  ## howlingProcess.c:101:7
  10f8e0:    30 a2       	r0 = r6 << 2 			  ## howlingProcess.c:103:12
  10f8e2:    0f d4       	r7 = r1 + r0 			  ## howlingProcess.c:105:14
  10f8e4:    04 ed 74 70 	r4 = r7 + 1136 			  ## howlingProcess.c:105:14
  10f8e8:    60 48       	r0 = [r4 + 4] 			  ## howlingProcess.c:105:14
  10f8ea:    02 e1 50 be 	call 22474 <__floatsisf : 1150b8 >			  ## howlingProcess.c:105:14
  10f8ee:    05 c6       	r5 = r0 			  ## howlingProcess.c:105:14
  10f8f0:    20 48       	r0 = [r4 + 0] 			  ## howlingProcess.c:106:19
  10f8f2:    02 e1 10 be 	call 22466 <__floatsisf : 1150b8 >			  ## howlingProcess.c:106:19
  10f8f6:    01 c6       	r1 = r0 			  ## howlingProcess.c:106:19
  10f8f8:    28 c6       	r0 = r5 			  ## howlingProcess.c:106:30
  10f8fa:    02 e1 a0 b9 	call 22324 <__gtsf2 : 115032 >			  ## howlingProcess.c:106:30
  10f8fe:    08 98       	cmp r0, 1			  ## howlingProcess.c:106:30
  10f900:    15 1b       	ifs (nzcv < 0) goto 42 <howling_detect+0x490 : 10f92c >			  ## howlingProcess.c:106:30
  10f902:    20 e7 70 09 	r0 = [r7 + r9] 			  ## howlingProcess.c:106:45
  10f906:    02 e1 70 bd 	call 22446 <__floatsisf : 1150b8 >			  ## howlingProcess.c:106:45
  10f90a:    01 c6       	r1 = r0 			  ## howlingProcess.c:106:45
  10f90c:    28 c6       	r0 = r5 			  ## howlingProcess.c:106:7
  10f90e:    02 e1 00 b9 	call 22304 <__gtsf2 : 115032 >			  ## howlingProcess.c:106:7
  10f912:    08 98       	cmp r0, 1			  ## howlingProcess.c:106:7
  10f914:    0b 1b       	ifs (nzcv < 0) goto 22 <howling_detect+0x490 : 10f92c >			  ## howlingProcess.c:106:7
  10f916:    c1 41       	r1 = [sp+ 28] 
  10f918:    90 e8 10 04 	r0 = h[r1 + 16] (s) 			  ## howlingProcess.c:108:4
  10f91c:    00 a1       	r0 = r0 << 1 			  ## howlingProcess.c:108:4
  10f91e:    40 d4       	r0 = r0 + r1 			  ## howlingProcess.c:108:4
  10f920:    50 e7 06 08 	h[r0 + r8] = r6 			  ## howlingProcess.c:108:34
  10f924:    08 51       	r0 = h[r1 + 16] 			  ## howlingProcess.c:109:16
  10f926:    40 d0       	r0 = r0 + 1 			  ## howlingProcess.c:109:16
  10f928:    08 71       	h[r1 + 16] = r0 			  ## howlingProcess.c:109:16
  10f92a:    02 08       	goto 4 <howling_detect+0x494 : 10f930 >			  ## howlingProcess.c:109:16
  10f92c:    c1 41       	r1 = [sp+ 28] 
  10f92e:    08 51       	r0 = h[r1 + 16] 			  ## howlingProcess.c:111:10
  10f930:    c0 c9       	r0 = r0.l (s) 			  ## howlingProcess.c:111:20
  10f932:    78 98       	cmp r0, 15			  ## howlingProcess.c:111:7
  10f934:    07 1c       	ifs (nzcv > 0) goto 14 <howling_detect+0x4A8 : 10f944 >			  ## howlingProcess.c:111:7
  10f936:    00 ed bb 02 	r11 = r11 + 2 			  ## howlingProcess.c:98:2
  10f93a:    00 ed aa 01 	r10 = r10 + 1 			  ## howlingProcess.c:98:33
  10f93e:    80 ef a0 7e 	cmp r10, 126			  ## howlingProcess.c:98:2
  10f942:    ca 1d       	ifs (nzcv <= 0) goto -108 <howling_detect+0x43C : 10f8d8 >			  ## howlingProcess.c:98:2
  10f944:    53 ea 74 04 	r11 = 1140 
  10f948:    20 e4 0d c9 	r13 = [addr(804)]  <.GCPI375_3 : 10fc70 >
  10f94c:    50 ea 00 00 	r8 = 0 
  10f950:    7c 08       	goto 248 <howling_detect+0x5AE : 10fa4a >
  10f952:    20 f7 80 01 	r0 = r8 << 1 			  ## howlingProcess.c:140:11
  10f956:    00 ee 1e 00 	r14 = r1 + r0 			  ## howlingProcess.c:140:11
  10f95a:    10 ea 7c 09 	r0 = 2428 			  ## howlingProcess.c:140:11
  10f95e:    90 e7 e5 00 	r5 = h[r14 + r0] (s) 			  ## howlingProcess.c:140:11
  10f962:    28 a2       	r0 = r5 << 2 			  ## howlingProcess.c:141:15
  10f964:    40 d4       	r0 = r0 + r1 			  ## howlingProcess.c:141:15
  10f966:    20 e7 0c 0b 	r12 = [r0 + r11] 			  ## howlingProcess.c:141:15
  10f96a:    28 c6       	r0 = r5 			  ## howlingProcess.c:149:26
  10f96c:    02 e1 40 ba 	call 22344 <__floatsisf : 1150b8 >			  ## howlingProcess.c:149:26
  10f970:    06 c6       	r6 = r0 			  ## howlingProcess.c:149:26
  10f972:    24 ea 01 81 	r1 = 1082130432 			  ## howlingProcess.c:149:24
  10f976:    02 e1 70 d9 	call 23342 <__mulsf3 : 1154a8 >			  ## howlingProcess.c:149:24
  10f97a:    02 e1 b0 b5 	call 22198 <__fixsfsi : 115034 >			  ## howlingProcess.c:149:12
  10f97e:    01 80       	r1 = 0 
  10f980:    fc 87       	r4 = -1 
  10f982:    80 ef 00 81 	cmp r0, 129			  ## howlingProcess.c:151:7
  10f986:    1d 1a       	ifs (nzcv >= 0) goto 58 <howling_detect+0x526 : 10f9c2 >
  10f988:    20 e4 00 b8 	r0 = [addr(736)]  <.GCPI375_2 : 10fc6c >
  10f98c:    64 d0       	r4 = r4 + 1 			  ## howlingProcess.c:153:22
  10f98e:    1c 98       	cmp r4, 3			  ## howlingProcess.c:153:4
  10f990:    38 1c       	ifs (nzcv > 0) goto 112 <howling_detect+0x566 : 10fa02 >			  ## howlingProcess.c:153:4
  10f992:    07 d1       	r7 = r0 + 4 			  ## howlingProcess.c:153:22
  10f994:    01 48       	r1 = [r0 + 0] 			  ## howlingProcess.c:156:19
  10f996:    30 c6       	r0 = r6 			  ## howlingProcess.c:156:17
  10f998:    02 e1 60 d8 	call 23308 <__mulsf3 : 1154a8 >			  ## howlingProcess.c:156:17
  10f99c:    02 e1 a0 b4 	call 22164 <__fixsfsi : 115034 >			  ## howlingProcess.c:156:10
  10f9a0:    20 e8 a2 01 	r2 = [r10 + 4] 			  ## howlingProcess.c:161:20
  10f9a4:    09 80       	r1 = 1 			  ## howlingProcess.c:161:20
  10f9a6:    08 98       	cmp r0, 1			  ## howlingProcess.c:157:9
  10f9a8:    d0 03       	ifs (nzcv <= 0) {			  ## howlingProcess.c:157:9
  10f9aa:    08 80       		r0 = 1 
                               	}			  ## howlingProcess.c:157:9
  10f9ac:    00 a2       	r0 = r0 << 2 			  ## howlingProcess.c:159:11
  10f9ae:    c3 41       	r3 = [sp+ 28] 			  ## howlingProcess.c:159:11
  10f9b0:    c0 d4       	r0 = r0 + r3 			  ## howlingProcess.c:159:11
  10f9b2:    20 e7 00 0b 	r0 = [r0 + r11] 			  ## howlingProcess.c:159:11
  10f9b6:    40 ee c0 00 	r0 = r12 - r0 			  ## howlingProcess.c:160:23
  10f9ba:    02 ce       	cmp r0, r2			  ## howlingProcess.c:161:9
  10f9bc:    38 c6       	r0 = r7 			  ## howlingProcess.c:161:9
  10f9be:    e6 1c       	ifs (nzcv > 0) goto -52 <howling_detect+0x4F0 : 10f98c >
  10f9c0:    1f 08       	goto 62 <howling_detect+0x564 : 10fa00 >
  10f9c2:    20 e4 00 a9 	r0 = [addr(676)]  <.GCPI375_1 : 10fc68 >
  10f9c6:    64 d0       	r4 = r4 + 1 			  ## howlingProcess.c:174:22
  10f9c8:    1c 98       	cmp r4, 3			  ## howlingProcess.c:174:4
  10f9ca:    1b 1c       	ifs (nzcv > 0) goto 54 <howling_detect+0x566 : 10fa02 >			  ## howlingProcess.c:174:4
  10f9cc:    00 ed 09 04 	r9 = r0 + 4 			  ## howlingProcess.c:174:22
  10f9d0:    01 48       	r1 = [r0 + 0] 			  ## howlingProcess.c:176:19
  10f9d2:    30 c6       	r0 = r6 			  ## howlingProcess.c:176:17
  10f9d4:    02 e1 80 d6 	call 23248 <__mulsf3 : 1154a8 >			  ## howlingProcess.c:176:17
  10f9d8:    02 e1 c0 b2 	call 22104 <__fixsfsi : 115034 >			  ## howlingProcess.c:176:10
  10f9dc:    20 e8 a2 01 	r2 = [r10 + 4] 			  ## howlingProcess.c:181:20
  10f9e0:    80 ef 00 80 	cmp r0, 128			  ## howlingProcess.c:177:9
  10f9e4:    a0 03       	ifs (nzcv >= 0) {			  ## howlingProcess.c:177:9
  10f9e6:    10 ea 80 00 		r0 = 128 
                               	}			  ## howlingProcess.c:177:9
  10f9ea:    00 a2       	r0 = r0 << 2 			  ## howlingProcess.c:179:11
  10f9ec:    c1 41       	r1 = [sp+ 28] 			  ## howlingProcess.c:179:11
  10f9ee:    40 d4       	r0 = r0 + r1 			  ## howlingProcess.c:179:11
  10f9f0:    20 e7 00 0b 	r0 = [r0 + r11] 			  ## howlingProcess.c:179:11
  10f9f4:    40 ee c0 00 	r0 = r12 - r0 			  ## howlingProcess.c:180:23
  10f9f8:    09 80       	r1 = 1 
  10f9fa:    02 ce       	cmp r0, r2			  ## howlingProcess.c:181:9
  10f9fc:    88 c6       	r0 = r9 			  ## howlingProcess.c:181:9
  10f9fe:    e3 1c       	ifs (nzcv > 0) goto -58 <howling_detect+0x52A : 10f9c6 >
  10fa00:    01 80       	r1 = 0 
  10fa02:    09 ed e0 7c 	r0 = r14 + 2428 			  ## howlingProcess.c:140:11
  10fa06:    03 80       	r3 = 0 			  ## howlingProcess.c:140:11
  10fa08:    aa c6       	r2 = r13 
  10fa0a:    04 80       	r4 = 0 
  10fa0c:    02 08       	goto 4 <howling_detect+0x576 : 10fa12 >
  10fa0e:    92 d0       	r2 = r2 + 2 			  ## howlingProcess.c:193:3
  10fa10:    64 d0       	r4 = r4 + 1 			  ## howlingProcess.c:193:27
  10fa12:    1c 98       	cmp r4, 3			  ## howlingProcess.c:193:3
  10fa14:    13 1c       	ifs (nzcv > 0) goto 38 <howling_detect+0x5A0 : 10fa3c >			  ## howlingProcess.c:193:3
  10fa16:    90 e8 26 00 	r6 = h[r2 + 0] (s) 			  ## howlingProcess.c:195:13
  10fa1a:    76 d5       	r6 = r6 + r5 			  ## howlingProcess.c:195:11
  10fa1c:    f7 d3       	r7 = r6 + -1 			  ## howlingProcess.c:196:15
  10fa1e:    ff 9b       	cmp r7, 127			  ## howlingProcess.c:196:15
  10fa20:    f6 18       	if (nzcv > 0) goto -20 <howling_detect+0x572 : 10fa0e >			  ## howlingProcess.c:196:15
  10fa22:    20 e8 a7 01 	r7 = [r10 + 4] 			  ## howlingProcess.c:200:19
  10fa26:    33 a2       	r3 = r6 << 2 			  ## howlingProcess.c:198:10
  10fa28:    c6 41       	r6 = [sp+ 28] 			  ## howlingProcess.c:198:10
  10fa2a:    9b d5       	r3 = r3 + r6 			  ## howlingProcess.c:198:10
  10fa2c:    20 e7 33 0b 	r3 = [r3 + r11] 			  ## howlingProcess.c:198:10
  10fa30:    40 ee c6 03 	r6 = r12 - r3 			  ## howlingProcess.c:199:22
  10fa34:    0b 80       	r3 = 1 
  10fa36:    37 ce       	cmp r6, r7			  ## howlingProcess.c:200:8
  10fa38:    ea 1c       	ifs (nzcv > 0) goto -44 <howling_detect+0x572 : 10fa0e >			  ## howlingProcess.c:200:8
  10fa3a:    02 08       	goto 4 <howling_detect+0x5A4 : 10fa40 >			  ## howlingProcess.c:200:8
  10fa3c:    11 20       	if (r1 == 0) goto 2 <howling_detect+0x5A4 : 10fa40 >
  10fa3e:    2b 20       	if (r3 != 0) goto 4 <howling_detect+0x5A8 : 10fa44 >
  10fa40:    01 80       	r1 = 0 			  ## howlingProcess.c:212:23
  10fa42:    01 70       	h[r0 + 0] = r1 			  ## howlingProcess.c:212:23
  10fa44:    00 ed 88 01 	r8 = r8 + 1 			  ## howlingProcess.c:136:37
  10fa48:    c1 41       	r1 = [sp+ 28] 
  10fa4a:    90 e8 10 04 	r0 = h[r1 + 16] (s) 			  ## howlingProcess.c:136:22
  10fa4e:    02 ed 1a 24 	r10 = r1 + 548 			  ## howlingProcess.c:136:22
  10fa52:    80 ce       	cmp r8, r0			  ## howlingProcess.c:136:2
  10fa54:    ff fb db f7 	ifs (nzcv < 0) goto -262 <howling_detect+0x4B6 : 10f952 >			  ## howlingProcess.c:136:2
  10fa58:    0a ed 10 d4 	r0 = r1 + 2772 
  10fa5c:    00 50       	r0 = h[r0 + 0] 			  ## howling_detection.c:294:9
  10fa5e:    00 98       	cmp r0, 0			  ## howling_detection.c:294:9
  10fa60:    00 fb c1 0f 	ifs (nzcv != 0) goto 504 <howling_detect+0x7C0 : 10fc5c >			  ## howling_detection.c:294:9
  10fa64:    20 e8 a0 03 	r0 = [r10 + 12] 			  ## howling_detection.c:205:32
  10fa68:    11 ea e8 03 	r1 = 1000 			  ## howling_detection.c:205:27
  10fa6c:    c0 fc 1b 00 	r11 = r1 / r0 (s) 			  ## howling_detection.c:205:27
  10fa70:    54 ea 00 00 	r12 = 0 
  10fa74:    55 ea c0 09 	r13 = 2496 
  10fa78:    56 ea c4 09 	r14 = 2500 
  10fa7c:    06 80       	r6 = 0 
  10fa7e:    c3 41       	r3 = [sp+ 28] 
  10fa80:    53 08       	goto 166 <howling_detect+0x68C : 10fb28 >
  10fa82:    00 fc 61 34 	r1 = r6 * 52 			  ## howling_detection.c:211:22
  10fa86:    5d d4       	r5 = r3 + r1 			  ## howling_detection.c:211:22
  10fa88:    10 e7 51 0d 	r1 = h[r5 + r13] 			  ## howling_detection.c:211:22
  10fa8c:    01 98       	cmp r1, 0			  ## howling_detection.c:211:22
  10fa8e:    4b 10       	ifs (nzcv == 0) goto 150 <howling_detect+0x68A : 10fb26 >			  ## howling_detection.c:211:22
  10fa90:    10 ea c2 09 	r0 = 2498 			  ## howling_detection.c:214:14
  10fa94:    90 e7 51 00 	r1 = h[r5 + r0] (s) 			  ## howling_detection.c:214:14
  10fa98:    13 80       	r3 = 2 
  10fa9a:    4b ce       	cmp r1, r11			  ## howling_detection.c:217:5
  10fa9c:    a0 03       	ifs (nzcv >= 0) {			  ## howling_detection.c:217:5
  10fa9e:    2b 80       		r3 = 5 
                               	}			  ## howling_detection.c:217:5
  10faa0:    c0 41       	r0 = [sp+ 28] 
  10faa2:    90 e8 07 04 	r7 = h[r0 + 16] (s) 
  10faa6:    04 80       	r4 = 0 
  10faa8:    20 e9 08 0a 	r8 = [sp+ 40] 
  10faac:    27 ce       	cmp r4, r7			  ## howling_detection.c:221:4
  10faae:    1e 1a       	ifs (nzcv >= 0) goto 60 <howling_detect+0x650 : 10faec >			  ## howling_detection.c:221:4
  10fab0:    98 e8 89 80 	r9 = h[r8 ++= 2] (s) 			  ## howling_detection.c:223:21
  10fab4:    40 ee 12 09 	r2 = r1 - r9 			  ## howling_detection.c:223:19
  10fab8:    d0 bf       	r0 = r2 >>> 31 			  ## howling_detection.c:223:19
  10faba:    12 d4       	r2 = r2 + r0 			  ## howling_detection.c:223:19
  10fabc:    50 da       	r0 ^= r2 			  ## howling_detection.c:223:19
  10fabe:    64 d0       	r4 = r4 + 1 			  ## howling_detection.c:221:39
  10fac0:    03 ce       	cmp r0, r3			  ## howling_detection.c:226:9
  10fac2:    f4 1a       	ifs (nzcv >= 0) goto -24 <howling_detect+0x610 : 10faac >			  ## howling_detection.c:226:9
  10fac4:    10 e7 50 0e 	r0 = h[r5 + r14] 			  ## howling_detection.c:228:25
  10fac8:    09 ed 51 c4 	r1 = r5 + 2500 			  ## howling_detection.c:228:25
  10facc:    02 80       	r2 = 0 
  10face:    60 20       	if (r0 == 0) goto 12 <howling_detect+0x640 : 10fadc >
  10fad0:    20 e8 a0 ff 	r0 = [r10 + -4] 			  ## howling_detection.c:230:39
  10fad4:    88 68       	[r1 + 8] = r0 			  ## howling_detection.c:230:34
  10fad6:    0a 70       	h[r1 + 0] = r2 			  ## howling_detection.c:231:34
  10fad8:    08 80       	r0 = 1 			  ## howling_detection.c:232:33
  10fada:    08 74       	h[r1 + 2] = r0 			  ## howling_detection.c:232:33
  10fadc:    54 ea 00 00 	r12 = 0 
  10fae0:    10 ea c8 09 	r0 = 2504 			  ## howling_detection.c:235:34
  10fae4:    50 e7 52 00 	h[r5 + r0] = r2 			  ## howling_detection.c:235:34
  10fae8:    c3 41       	r3 = [sp+ 28] 			  ## howling_detection.c:235:34
  10faea:    1d 08       	goto 58 <howling_detect+0x68A : 10fb26 >
  10faec:    10 e7 50 0e 	r0 = h[r5 + r14] 			  ## howling_detection.c:240:39
  10faf0:    c3 41       	r3 = [sp+ 28] 			  ## howling_detection.c:240:39
  10faf2:    98 21       	if (r0 != 0) goto 50 <howling_detect+0x68A : 10fb26 >
  10faf4:    09 ed 51 c8 	r1 = r5 + 2504 			  ## howling_detection.c:242:50
  10faf8:    08 50       	r0 = h[r1 + 0] 			  ## howling_detection.c:242:50
  10fafa:    40 d0       	r0 = r0 + 1 			  ## howling_detection.c:242:63
  10fafc:    12 ea c8 09 	r2 = 2504 			  ## howling_detection.c:242:33
  10fb00:    50 e7 50 02 	h[r5 + r2] = r0 			  ## howling_detection.c:242:33
  10fb04:    c0 c9       	r0 = r0.l (s) 			  ## howling_detection.c:242:63
  10fb06:    90 e8 32 05 	r2 = h[r3 + 20] (s) 			  ## howling_detection.c:243:42
  10fb0a:    02 ce       	cmp r0, r2			  ## howling_detection.c:243:9
  10fb0c:    0c 1d       	ifs (nzcv <= 0) goto 24 <howling_detect+0x68A : 10fb26 >			  ## howling_detection.c:243:9
  10fb0e:    09 ed 50 c4 	r0 = r5 + 2500 			  ## howling_detection.c:240:39
  10fb12:    0a 80       	r2 = 1 			  ## howling_detection.c:245:33
  10fb14:    02 70       	h[r0 + 0] = r2 			  ## howling_detection.c:245:33
  10fb16:    20 e8 a0 00 	r0 = [r10 + 0] 			  ## howling_detection.c:246:35
  10fb1a:    12 ea cc 09 	r2 = 2508 			  ## howling_detection.c:246:30
  10fb1e:    60 e7 50 02 	[r5 + r2] = r0 			  ## howling_detection.c:246:30
  10fb22:    50 e8 1c 00 	h[r1 + 0] = r12 			  ## howling_detection.c:247:34
  10fb26:    76 d0       	r6 = r6 + 1 			  ## howling_detection.c:209:33
  10fb28:    2e 98       	cmp r6, 5			  ## howling_detection.c:209:2
  10fb2a:    ab 11       	ifs (nzcv != 0) goto -170 <howling_detect+0x5E6 : 10fa82 >			  ## howling_detection.c:209:2
  10fb2c:    09 ed 31 c2 	r1 = r3 + 2498 			  ## howling_detection.c:254:11
  10fb30:    90 e8 32 04 	r2 = h[r3 + 16] (s) 			  ## howling_detection.c:254:11
  10fb34:    03 80       	r3 = 0 			  ## howling_detection.c:254:11
  10fb36:    50 ea 7c 09 	r8 = 2428 			  ## howling_detection.c:254:11
  10fb3a:    14 08       	goto 40 <howling_detect+0x6C8 : 10fb64 >			  ## howling_detection.c:254:11
  10fb3c:    18 a1       	r0 = r3 << 1 			  ## howling_detection.c:256:13
  10fb3e:    c4 41       	r4 = [sp+ 28] 			  ## howling_detection.c:256:13
  10fb40:    00 d5       	r0 = r0 + r4 			  ## howling_detection.c:256:13
  10fb42:    90 e7 00 08 	r0 = h[r0 + r8] (s) 			  ## howling_detection.c:256:13
  10fb46:    46 c9       	r6 = r0.l 			  ## howling_detection.c:256:13
  10fb48:    0c 10       	ifs (nzcv == 0) goto 24 <howling_detect+0x6C6 : 10fb62 >			  ## howling_detection.c:256:13
  10fb4a:    05 80       	r5 = 0 
  10fb4c:    0f c6       	r7 = r1 
  10fb4e:    02 08       	goto 4 <howling_detect+0x6B8 : 10fb54 >
  10fb50:    a7 89       	r7 += 52 			  ## howling_detection.c:261:4
  10fb52:    6d d0       	r5 = r5 + 1 			  ## howling_detection.c:261:47
  10fb54:    2d 98       	cmp r5, 5			  ## howling_detection.c:261:4
  10fb56:    09 1a       	ifs (nzcv >= 0) goto 18 <howling_detect+0x6CE : 10fb6a >			  ## howling_detection.c:261:4
  10fb58:    fc 57       	r4 = h[r7 + -2] 			  ## howling_detection.c:264:22
  10fb5a:    a4 27       	if (r4 == 0) goto -12 <howling_detect+0x6B4 : 10fb50 >			  ## howling_detection.c:264:22
  10fb5c:    3c 50       	r4 = h[r7 + 0] 			  ## howling_detection.c:264:48
  10fb5e:    26 ce       	cmp r4, r6			  ## howling_detection.c:264:9
  10fb60:    f7 11       	ifs (nzcv != 0) goto -18 <howling_detect+0x6B4 : 10fb50 >			  ## howling_detection.c:264:9
  10fb62:    5b d0       	r3 = r3 + 1 			  ## howling_detection.c:254:37
  10fb64:    1a ce       	cmp r3, r2			  ## howling_detection.c:254:2
  10fb66:    ea 1b       	ifs (nzcv < 0) goto -44 <howling_detect+0x6A0 : 10fb3c >			  ## howling_detection.c:254:2
  10fb68:    79 08       	goto 242 <howling_detect+0x7C0 : 10fc5c >			  ## howling_detection.c:254:2
  10fb6a:    c1 41       	r1 = [sp+ 28] 			  ## howling_detection.c:179:11
  10fb6c:    09 ed 15 c0 	r5 = r1 + 2496 			  ## howling_detection.c:179:11
  10fb70:    01 80       	r1 = 0 			  ## howling_detection.c:179:11
  10fb72:    04 08       	goto 8 <howling_detect+0x6E0 : 10fb7c >			  ## howling_detection.c:179:11
  10fb74:    2a 50       	r2 = h[r5 + 0] 			  ## howling_detection.c:181:22
  10fb76:    52 20       	if (r2 == 0) goto 10 <howling_detect+0x6E6 : 10fb82 >			  ## howling_detection.c:181:22
  10fb78:    a5 89       	r5 += 52 			  ## howling_detection.c:179:2
  10fb7a:    49 d0       	r1 = r1 + 1 			  ## howling_detection.c:179:33
  10fb7c:    21 98       	cmp r1, 4			  ## howling_detection.c:179:2
  10fb7e:    fa 1d       	ifs (nzcv <= 0) goto -12 <howling_detect+0x6D8 : 10fb74 >			  ## howling_detection.c:179:2
  10fb80:    6d 08       	goto 218 <howling_detect+0x7C0 : 10fc5c >			  ## howling_detection.c:179:2
  10fb82:    01 98       	cmp r1, 0			  ## howling_detection.c:273:9
  10fb84:    6b 1b       	ifs (nzcv < 0) goto 214 <howling_detect+0x7C0 : 10fc5c >			  ## howling_detection.c:273:9
  10fb86:    07 e5 ab fd 	r11, r7 = d[r10 + -12] 			  ## howling_detection.c:194:38
  10fb8a:    00 a2       	r0 = r0 << 2 			  ## howling_detection.c:193:9
  10fb8c:    c1 41       	r1 = [sp+ 28] 
  10fb8e:    40 d4       	r0 = r0 + r1 			  ## howling_detection.c:193:9
  10fb90:    02 ed 09 34 	r9 = r0 + 564 			  ## howling_detection.c:193:9
  10fb94:    20 e8 90 00 	r0 = [r9 + 0] 			  ## howling_detection.c:193:9
  10fb98:    09 48       	r1 = [r1 + 0] 			  ## howling_detection.c:194:53
  10fb9a:    27 ea 02 00 	r2 = 33554432 			  ## notch_howling.c:60:2
  10fb9e:    c2 06       	macc = r0 * r2 (s) 			  ## notch_howling.c:60:2
  10fba0:    81 05       	macc /= r1 (s) 			  ## notch_howling.c:61:2
  10fba2:    24 c8       	r4 = maccl 			  ## notch_howling.c:61:2
  10fba4:    01 92       	r1 = sp + 64 
  10fba6:    00 ed f8 3c 	r8 = sp + 60 
  10fbaa:    20 c6       	r0 = r4 			  ## notch_howling.c:67:2
  10fbac:    82 c6       	r2 = r8 			  ## notch_howling.c:67:2
  10fbae:    fd e1 3f 51 	call -21978 <sinAprx : 10a5d8 >			  ## notch_howling.c:67:2
  10fbb2:    21 92       	r1 = sp + 68 
  10fbb4:    20 c6       	r0 = r4 			  ## notch_howling.c:68:2
  10fbb6:    fd e1 3f 4a 	call -22202 <cosAprx : 10a500 >			  ## notch_howling.c:68:2
  10fbba:    28 ea 00 00 	r0 = 8388608 			  ## notch_howling.c:70:2
  10fbbe:    01 44       	r1 = [sp+ 64] 			  ## notch_howling.c:70:2
  10fbc0:    c8 06       	macc = r1 * r0 (s) 			  ## notch_howling.c:70:2
  10fbc2:    87 05       	macc /= r7 (s) 			  ## notch_howling.c:71:2
  10fbc4:    24 c8       	r4 = maccl 			  ## notch_howling.c:71:2
  10fbc6:    e0 f7 b0 01 	r0 = r11 >>> 1 			  ## notch_howling.c:72:14
  10fbca:    c2 91       	r2 = sp + 56 			  ## notch_howling.c:72:14
  10fbcc:    a1 80       	r1 = 20 			  ## notch_howling.c:72:2
  10fbce:    83 c6       	r3 = r8 			  ## notch_howling.c:72:2
  10fbd0:    fd e1 8f 3f 	call -22544 <db2mag : 10a3c4 >			  ## notch_howling.c:72:2
  10fbd4:    27 ea 08 80 	r8 = 16777216 			  ## notch_howling.c:73:2
  10fbd8:    80 fd 84 00 	macc = r4 * r8 (s) 			  ## notch_howling.c:73:2
  10fbdc:    81 43       	r1 = [sp+ 56] 			  ## notch_howling.c:74:2
  10fbde:    81 05       	macc /= r1 (s) 			  ## notch_howling.c:74:2
  10fbe0:    22 c8       	r2 = maccl 			  ## notch_howling.c:74:2
  10fbe2:    e1 06       	macc = r4 * r1 (s) 			  ## notch_howling.c:75:2
  10fbe4:    c1 80       	r1 = 24 			  ## notch_howling.c:75:2
  10fbe6:    80 f9 0b 01 	r11 = macc >>> r1 			  ## notch_howling.c:76:2
  10fbea:    80 fd 88 00 	macc = r8 * r8 (s) 			  ## notch_howling.c:79:2
  10fbee:    17 ee 23 80 	r3 = r2 + 16777216 			  ## notch_howling.c:78:16
  10fbf2:    83 05       	macc /= r3 (s) 			  ## notch_howling.c:80:2
  10fbf4:    23 c8       	r3 = maccl 			  ## notch_howling.c:80:2
  10fbf6:    80 fd 88 00 	macc = r8 * r8 (s) 			  ## notch_howling.c:83:2
  10fbfa:    17 ee b4 80 	r4 = r11 + 16777216 			  ## notch_howling.c:82:16
  10fbfe:    84 05       	macc /= r4 (s) 			  ## notch_howling.c:84:2
  10fc00:    64 c8       	r12 = maccl 			  ## notch_howling.c:84:2
  10fc02:    40 44       	r0 = [sp+ 68] 			  ## notch_howling.c:86:2
  10fc04:    00 a1       	r0 = r0 << 1 			  ## notch_howling.c:86:2
  10fc06:    c3 06       	macc = r0 * r3 (s) 			  ## notch_howling.c:86:2
  10fc08:    d1 80       	r1 = 26 			  ## notch_howling.c:86:2
  10fc0a:    80 f9 07 01 	r7 = macc >>> r1 			  ## notch_howling.c:86:2
  10fc0e:    6f 6a       	[r5 + 36] = r7 			  ## notch_howling.c:86:2
  10fc10:    14 ee 22 7f 	r2 = r2 + 4278190080 			  ## notch_howling.c:87:2
  10fc14:    d3 06       	macc = r2 * r3 (s) 			  ## notch_howling.c:87:2
  10fc16:    80 f9 02 01 	r2 = macc >>> r1 			  ## notch_howling.c:87:2
  10fc1a:    ea 69       	[r5 + 28] = r2 			  ## notch_howling.c:87:2
  10fc1c:    e3 06       	macc = r4 * r3 (s) 			  ## notch_howling.c:88:2
  10fc1e:    80 f9 02 01 	r2 = macc >>> r1 			  ## notch_howling.c:88:2
  10fc22:    aa 69       	[r5 + 24] = r2 			  ## notch_howling.c:88:2
  10fc24:    80 dc       	r0 = -r0 			  ## notch_howling.c:89:2
  10fc26:    80 fd c0 00 	macc = r0 * r12 (s) 			  ## notch_howling.c:89:2
  10fc2a:    80 f9 00 01 	r0 = macc >>> r1 			  ## notch_howling.c:89:2
  10fc2e:    a8 6a       	[r5 + 40] = r0 			  ## notch_howling.c:89:2
  10fc30:    27 ee b0 80 	r0 = 16777216 - r11 			  ## notch_howling.c:90:2
  10fc34:    80 fd c0 00 	macc = r0 * r12 (s) 			  ## notch_howling.c:90:2
  10fc38:    80 f9 00 01 	r0 = macc >>> r1 			  ## notch_howling.c:90:2
  10fc3c:    28 6a       	[r5 + 32] = r0 			  ## notch_howling.c:90:2
  10fc3e:    08 80       	r0 = 1 			  ## notch_howling.c:90:2
  10fc40:    28 70       	h[r5 + 0] = r0 			  ## howling_detection.c:121:24
  10fc42:    01 80       	r1 = 0 			  ## howling_detection.c:121:24
  10fc44:    69 70       	h[r5 + 4] = r1 			  ## howling_detection.c:122:27
  10fc46:    68 74       	h[r5 + 6] = r0 			  ## howling_detection.c:123:26
  10fc48:    20 e8 a0 ff 	r0 = [r10 + -4] 			  ## howling_detection.c:124:29
  10fc4c:    40 e5 58 03 	d[r5 + 12] = r8, r0 			  ## howling_detection.c:124:24
  10fc50:    2e 74       	h[r5 + 2] = r6 			  ## howling_detection.c:126:23
  10fc52:    20 e8 90 00 	r0 = [r9 + 0] 			  ## howling_detection.c:127:26
  10fc56:    68 69       	[r5 + 20] = r0 			  ## howling_detection.c:127:24
  10fc58:    e9 6a       	[r5 + 44] = r1 			  ## howling_detection.c:128:25
  10fc5a:    29 6b       	[r5 + 48] = r1 			  ## howling_detection.c:129:25
  10fc5c:    48 cd       	sp += 72 
  10fc5e:    30 c4       	{macch, maccl} = [sp++] 
  10fc60:    1e c0       	{pc, r14-r4} = [sp++] 
  10fc62:    00 00       	nop


.GCPI375_0:
  10fc64:    1c 6a 11 00     < 1141276 : 0x116A1C >

.GCPI375_1:
  10fc68:    50 d9 11 00     < 1169744 : 0x11D950 >

.GCPI375_2:
  10fc6c:    40 d9 11 00     < 1169728 : 0x11D940 >

.GCPI375_3:
  10fc70:    e8 d8 11 00     < 1169640 : 0x11D8E8 >

.GCPI375_4:
  10fc74:    01 be eb 01     < 32226817 : 0x1EBBE01 >

.GCPI375_5:
  10fc78:    b8 af cb 00     < 13348792 : 0xCBAFB8 >

.GCPI375_6:
  10fc7c:    c5 de f2 06     < 116580037 : 0x6F2DEC5 >

howling_run:
  10fc80:    1e c2       	[--sp] = {rets, r14-r4} 			  ## notch_howling.c:435:0
  10fc82:    30 c5       	[--sp] = {macch, maccl} 			  ## notch_howling.c:435:0
  10fc84:    c4 cd       	sp += -60 			  ## notch_howling.c:435:0
  10fc86:    0f c6       	r7 = r1 			  ## notch_howling.c:435:0
  10fc88:    05 c6       	r5 = r0 			  ## notch_howling.c:435:0
  10fc8a:    0a ed 56 d4 	r6 = r5 + 2772 			  ## notch_howling.c:435:0
  10fc8e:    b3 4f       	r3 = [r6 + -8] 			  ## notch_howling.c:444:9
  10fc90:    f3 20       	if (r3 == 0) goto 30 <howling_run+0x30 : 10fcb0 >			  ## notch_howling.c:444:6
  10fc92:    00 e5 64 fc 	r4, r0 = d[r6 + -16] 			  ## notch_howling.c:447:46
  10fc96:    04 ed 51 74 	r1 = r5 + 1140 			  ## notch_howling.c:446:27
  10fc9a:    1a a1       	r2 = r3 << 1 			  ## notch_howling.c:447:67
  10fc9c:    ac 01       	call r4			  ## notch_howling.c:447:19
  10fc9e:    c0 a1       	r0 = r0 >>> 1 			  ## notch_howling.c:448:25
  10fca0:    b1 4f       	r1 = [r6 + -8] 			  ## notch_howling.c:449:18
  10fca2:    09 d6       	r1 = r1 - r0 			  ## notch_howling.c:449:25
  10fca4:    b1 6f       	[r6 + -8] = r1 			  ## notch_howling.c:449:13
  10fca6:    f1 4f       	r1 = [r6 + -4] 			  ## notch_howling.c:450:21
  10fca8:    40 d4       	r0 = r0 + r1 			  ## notch_howling.c:450:31
  10fcaa:    f0 6f       	[r6 + -4] = r0 			  ## notch_howling.c:450:16
  10fcac:    07 80       	r7 = 0 			  ## notch_howling.c:450:16
  10fcae:    6c 09       	goto 728 <howling_run+0x308 : 10ff88 >
  10fcb0:    90 e8 53 81 	r3 = h[r5 + 6] (s) 			  ## notch_howling.c:460:18
  10fcb4:    90 e8 51 02 	r1 = h[r5 + 8] (s) 			  ## notch_howling.c:455:11
  10fcb8:    40 ee 18 03 	r8 = r1 - r3 			  ## notch_howling.c:462:29
  10fcbc:    e8 48       	r0 = [r5 + 12] 
  10fcbe:    1c a1       	r4 = r3 << 1 
  10fcc0:    00 d5       	r0 = r0 + r4 
  10fcc2:    d2 a1       	r2 = r2 >>> 1 			  ## notch_howling.c:454:12
  10fcc4:    11 ce       	cmp r2, r1			  ## notch_howling.c:455:5
  10fcc6:    4c c6       	r12 = r1 			  ## notch_howling.c:455:5
  10fcc8:    d0 03       	ifs (nzcv <= 0) {			  ## notch_howling.c:455:5
  10fcca:    54 c6       		r12 = r2 
                               	}			  ## notch_howling.c:455:5
  10fccc:    00 ee c2 03 	r2 = r12 + r3 			  ## notch_howling.c:460:25
  10fcd0:    c0 fc 23 01 	r3 = r2 / r1 (s) 			  ## notch_howling.c:460:32
  10fcd4:    c7 62       	[sp+ 44] = r7 			  ## notch_howling.c:464:6
  10fcd6:    00 fb 90 08 	ifs (nzcv == 0) goto 274 <howling_run+0x16C : 10fdec >			  ## notch_howling.c:464:6
  10fcda:    40 ee 2e 01 	r14 = r2 - r1 			  ## notch_howling.c:461:30
  10fcde:    39 c6       	r1 = r7 			  ## notch_howling.c:467:3
  10fce0:    82 c6       	r2 = r8 			  ## notch_howling.c:467:3
  10fce2:    ff e1 8f bd 	call -2128 <readData : 10f496 >			  ## notch_howling.c:467:3
  10fce6:    28 48       	r0 = [r5 + 0] 			  ## notch_howling.c:468:10
  10fce8:    11 ea c1 5d 	r1 = 24001 			  ## notch_howling.c:468:29
  10fcec:    01 ce       	cmp r0, r1			  ## notch_howling.c:468:29
  10fcee:    70 1b       	ifs (nzcv < 0) goto 224 <howling_run+0x150 : 10fdd0 >			  ## notch_howling.c:468:29
  10fcf0:    68 50       	r0 = h[r5 + 4] 			  ## notch_howling.c:468:35
  10fcf2:    00 98       	cmp r0, 0			  ## notch_howling.c:468:35
  10fcf4:    6d 10       	ifs (nzcv == 0) goto 218 <howling_run+0x150 : 10fdd0 >			  ## notch_howling.c:468:35
  10fcf6:    90 e8 50 02 	r0 = h[r5 + 8] (s) 			  ## notch_howling.c:470:46
  10fcfa:    00 63       	[sp+ 48] = r0 			  ## notch_howling.c:470:25
  10fcfc:    e9 48       	r1 = [r5 + 12] 			  ## notch_howling.c:470:25
  10fcfe:    c1 61       	[sp+ 28] = r1 			  ## notch_howling.c:102:30
  10fd00:    09 ed 50 9c 	r0 = r5 + 2460 			  ## notch_howling.c:102:30
  10fd04:    80 62       	[sp+ 40] = r0 			  ## notch_howling.c:160:2
  10fd06:    10 80       	r0 = 2 			  ## notch_howling.c:160:2
  10fd08:    40 62       	[sp+ 36] = r0 			  ## notch_howling.c:160:2
  10fd0a:    a0 91       	r0 = sp + 52 			  ## notch_howling.c:160:2
  10fd0c:    00 62       	[sp+ 32] = r0 			  ## notch_howling.c:160:2
  10fd0e:    06 60       	[sp] = r6 
  10fd10:    06 43       	r6 = [sp+ 48] 			  ## notch_howling.c:160:2
  10fd12:    52 ea 01 00 	r10 = 1 			  ## notch_howling.c:160:2
  10fd16:    29 ea 0b 00 	r11 = 2097152 			  ## notch_howling.c:160:2
  10fd1a:    20 e9 09 0a 	r9 = [sp+ 40] 			  ## notch_howling.c:160:2
  10fd1e:    44 42       	r4 = [sp+ 36] 			  ## notch_howling.c:160:2
  10fd20:    20 e9 0d 08 	r13 = [sp+ 32] 			  ## notch_howling.c:160:2
  10fd24:    60 e9 08 06 	[sp+ 24] = r8 			  ## notch_howling.c:160:2
  10fd28:    20 e9 08 07 	r8 = [sp+ 28] 			  ## notch_howling.c:160:2
  10fd2c:    98 e8 12 80 	r2 = h[r1 ++= 2] (s) 			  ## notch_howling.c:160:2
  10fd30:    12 aa       	r2 = r2 << 10 			  ## notch_howling.c:160:2
  10fd32:    20 e8 94 00 	r4 = [r9 + 0] 			  ## notch_howling.c:160:2
  10fd36:    20 e8 90 01 	r0 = [r9 + 4] 			  ## notch_howling.c:160:2
  10fd3a:    20 e8 93 02 	r3 = [r9 + 8] 			  ## notch_howling.c:160:2
  10fd3e:    60 e8 d2 00 	[r13 + 0] = r2 			  ## notch_howling.c:160:2
  10fd42:    80 ff d0 44 	macc = [r13 ++= 4] * [r0 ++= 16] (s) 			  ## notch_howling.c:160:2
  10fd46:    a0 fd ba 00 	macc += r10 * r11 (s) 			  ## notch_howling.c:160:2
  10fd4a:    c0 f9 02 16 	r2 = macc >>> 22 			  ## notch_howling.c:160:2
  10fd4e:    68 e8 d2 ff 	[r13 ++= -4] = r2 			  ## notch_howling.c:160:2
  10fd52:    28 e8 37 01 	r7 = [r3 ++= 4] 			  ## notch_howling.c:160:2
  10fd56:    d2 d5       	r2 = r2 + r7 			  ## notch_howling.c:160:2
  10fd58:    68 e8 d2 01 	[r13 ++= 4] = r2 			  ## notch_howling.c:160:2
  10fd5c:    8f ff d0 ff 	macc = [r13 ++= -4] * [r0 ++= -4] (s) 			  ## notch_howling.c:160:2
  10fd60:    a0 ff d0 7f 	macc += [r13 ++= 4] * [r0 ++= -4] (s) 			  ## notch_howling.c:160:2
  10fd64:    a0 fd ba 00 	macc += r10 * r11 (s) 			  ## notch_howling.c:160:2
  10fd68:    c0 f9 02 16 	r2 = macc >>> 22 			  ## notch_howling.c:160:2
  10fd6c:    28 e8 37 ff 	r7 = [r3 ++= -4] 			  ## notch_howling.c:160:2
  10fd70:    d2 d5       	r2 = r2 + r7 			  ## notch_howling.c:160:2
  10fd72:    68 e8 32 01 	[r3 ++= 4] = r2 			  ## notch_howling.c:160:2
  10fd76:    8f ff d0 ff 	macc = [r13 ++= -4] * [r0 ++= -4] (s) 			  ## notch_howling.c:160:2
  10fd7a:    a0 ff d0 04 	macc += [r13 ++= 0] * [r0 ++= 16] (s) 			  ## notch_howling.c:160:2
  10fd7e:    a0 fd ba 00 	macc += r10 * r11 (s) 			  ## notch_howling.c:160:2
  10fd82:    c0 f9 02 16 	r2 = macc >>> 22 			  ## notch_howling.c:160:2
  10fd86:    68 e8 32 01 	[r3 ++= 4] = r2 			  ## notch_howling.c:160:2
  10fd8a:    90 ee 44 01 	r4 = r4 - 1 			  ## notch_howling.c:160:2
  10fd8e:    9c 25       	if (r4 != 0) goto -78 <howling_run+0xC2 : 10fd42 >			  ## notch_howling.c:160:2
  10fd90:    80 f0 62 0a 	r2 = r6 & r10 			  ## notch_howling.c:160:2
  10fd94:    02 98       	cmp r2, 0			  ## notch_howling.c:160:2
  10fd96:    0f 11       	ifs (nzcv != 0) goto 30 <howling_run+0x136 : 10fdb6 >			  ## notch_howling.c:160:2
  10fd98:    20 e8 d2 00 	r2 = [r13 + 0] 			  ## notch_howling.c:160:2
  10fd9c:    d2 aa       	r2 = r2 >>> 10 			  ## notch_howling.c:160:2
  10fd9e:    17 ea ff 7f 	r7 = 32767 			  ## notch_howling.c:160:2
  10fda2:    17 ce       	cmp r2, r7			  ## notch_howling.c:160:2
  10fda4:    01 1b       	ifs (nzcv < 0) goto 2 <howling_run+0x128 : 10fda8 >			  ## notch_howling.c:160:2
  10fda6:    3a c6       	r2 = r7 			  ## notch_howling.c:160:2
  10fda8:    97 ea 00 80 	r7 = -32768 			  ## notch_howling.c:160:2
  10fdac:    17 ce       	cmp r2, r7			  ## notch_howling.c:160:2
  10fdae:    01 1c       	ifs (nzcv > 0) goto 2 <howling_run+0x132 : 10fdb2 >			  ## notch_howling.c:160:2
  10fdb0:    3a c6       	r2 = r7 			  ## notch_howling.c:160:2
  10fdb2:    58 e8 82 80 	h[r8 ++= 2] = r2 			  ## notch_howling.c:160:2
  10fdb6:    90 ee 66 01 	r6 = r6 - 1 			  ## notch_howling.c:160:2
  10fdba:    06 98       	cmp r6, 0			  ## notch_howling.c:160:2
  10fdbc:    b7 11       	ifs (nzcv != 0) goto -146 <howling_run+0xAC : 10fd2c >			  ## notch_howling.c:160:2
  10fdbe:    20 e9 08 06 	r8 = [sp+ 24] 
  10fdc2:    c7 42       	r7 = [sp+ 44] 
  10fdc4:    06 40       	r6 = [sp] 
  10fdc6:    e9 48       	r1 = [r5 + 12] 			  ## notch_howling.c:471:25
  10fdc8:    90 e8 50 02 	r0 = h[r5 + 8] (s) 			  ## notch_howling.c:471:34
  10fdcc:    c2 a1       	r2 = r0 >>> 1 			  ## notch_howling.c:471:47
  10fdce:    03 08       	goto 6 <howling_run+0x156 : 10fdd6 >			  ## notch_howling.c:471:47
  10fdd0:    90 e8 52 02 	r2 = h[r5 + 8] (s) 			  ## notch_howling.c:475:34
  10fdd4:    e9 48       	r1 = [r5 + 12] 			  ## notch_howling.c:475:25
  10fdd6:    28 c6       	r0 = r5 
  10fdd8:    ff e1 0f b6 	call -2368 <howling_detect : 10f49c >
  10fddc:    20 f7 80 01 	r0 = r8 << 1 			  ## notch_howling.c:477:25
  10fde0:    39 d4       	r1 = r7 + r0 			  ## notch_howling.c:477:25
  10fde2:    e8 48       	r0 = [r5 + 12] 			  ## notch_howling.c:477:15
  10fde4:    b2 c6       	r2 = r14 			  ## notch_howling.c:477:3
  10fde6:    ff e1 6f b5 	call -2388 <readData : 10f496 >			  ## notch_howling.c:477:3
  10fdea:    07 08       	goto 14 <howling_run+0x17A : 10fdfa >			  ## notch_howling.c:477:3
  10fdec:    39 c6       	r1 = r7 			  ## notch_howling.c:482:3
  10fdee:    a2 c6       	r2 = r12 			  ## notch_howling.c:482:3
  10fdf0:    ff e1 1f b5 	call -2398 <readData : 10f496 >			  ## notch_howling.c:482:3
  10fdf4:    68 54       	r0 = h[r5 + 6] 			  ## notch_howling.c:483:12
  10fdf6:    00 ee 0e 0c 	r14 = r0 + r12 			  ## notch_howling.c:483:19
  10fdfa:    50 e8 5e 81 	h[r5 + 6] = r14 
  10fdfe:    30 50       	r0 = h[r6 + 0] 			  ## notch_howling.c:486:9
  10fe00:    07 80       	r7 = 0 			  ## notch_howling.c:486:9
  10fe02:    00 98       	cmp r0, 0			  ## notch_howling.c:486:9
  10fe04:    00 fb 01 0c 	ifs (nzcv != 0) goto 384 <howling_run+0x308 : 10ff88 >			  ## notch_howling.c:486:9
  10fe08:    06 60       	[sp] = r6 
  10fe0a:    04 ed 52 74 	r2 = r5 + 1140 			  ## notch_howling.c:491:23
  10fe0e:    82 60       	[sp+ 8] = r2 
  10fe10:    60 e9 0c 03 	[sp+ 12] = r12 
  10fe14:    a3 c6       	r3 = r12 			  ## notch_howling.c:503:2
  10fe16:    c1 42       	r1 = [sp+ 44] 			  ## notch_howling.c:503:2
  10fe18:    33 01       	rep 7, r3 { <howling_run+0x1A8 : 10fe28 >			  ## notch_howling.c:503:2
  10fe1a:    98 e8 10 80 		r0 = h[r1 ++= 2] (s) 			  ## notch_howling.c:503:2
  10fe1e:    00 aa       		r0 = r0 << 10 			  ## notch_howling.c:503:2
  10fe20:    68 e8 20 01 		[r2 ++= 4] = r0 			  ## notch_howling.c:503:2
  10fe24:    90 ee 33 01 		r3 = r3 - 1 
                               	}			  ## notch_howling.c:503:2
  10fe28:    7b 27       	if (r3 != 0) goto -18 <howling_run+0x198 : 10fe18 >			  ## notch_howling.c:503:2
  10fe2a:    00 63       	[sp+ 48] = r0 
  10fe2c:    02 80       	r2 = 0 
  10fe2e:    c0 62       	[sp+ 44] = r0 
  10fe30:    45 60       	[sp+ 4] = r5 
  10fe32:    0c 80       	r4 = 1 			  ## notch_howling.c:584:4
  10fe34:    27 ea 0a 80 	r10 = 16777216 			  ## notch_howling.c:584:4
  10fe38:    28 ea 0b 00 	r11 = 8388608 			  ## notch_howling.c:584:4
  10fe3c:    7f 08       	goto 254 <howling_run+0x2BC : 10ff3c >			  ## notch_howling.c:584:4
  10fe3e:    00 ee 5c 02 	r12 = r5 + r2 			  ## notch_howling.c:529:20
  10fe42:    09 ed c0 c0 	r0 = r12 + 2496 
  10fe46:    07 50       	r7 = h[r0 + 0] 			  ## notch_howling.c:529:20
  10fe48:    07 98       	cmp r7, 0			  ## notch_howling.c:529:20
  10fe4a:    77 10       	ifs (nzcv == 0) goto 238 <howling_run+0x2BA : 10ff3a >			  ## notch_howling.c:529:20
  10fe4c:    00 61       	[sp+ 16] = r0 
  10fe4e:    42 61       	[sp+ 20] = r2 
  10fe50:    09 ed c1 cc 	r1 = r12 + 2508 
  10fe54:    81 61       	[sp+ 24] = r1 			  ## notch_howling.c:534:33
  10fe56:    08 48       	r0 = [r1 + 0] 			  ## notch_howling.c:534:33
  10fe58:    80 62       	[sp+ 40] = r0 			  ## notch_howling.c:533:28
  10fe5a:    20 e8 18 01 	r8 = [r1 + 4] 			  ## notch_howling.c:533:28
  10fe5e:    09 ed c0 d8 	r0 = r12 + 2520 			  ## notch_howling.c:532:18
  10fe62:    40 62       	[sp+ 36] = r0 			  ## notch_howling.c:533:28
  10fe64:    09 ed c0 ec 	r0 = r12 + 2540 			  ## notch_howling.c:533:28
  10fe68:    00 62       	[sp+ 32] = r0 			  ## notch_howling.c:533:28
  10fe6a:    a0 91       	r0 = sp + 52 			  ## notch_howling.c:533:28
  10fe6c:    c0 61       	[sp+ 28] = r0 			  ## notch_howling.c:584:4
  10fe6e:    81 40       	r1 = [sp+ 8] 			  ## notch_howling.c:584:4
  10fe70:    c6 40       	r6 = [sp+ 12] 			  ## notch_howling.c:584:4
  10fe72:    29 ea 05 00 	r5 = 2097152 			  ## notch_howling.c:584:4
  10fe76:    03 43       	r3 = [sp+ 48] 			  ## notch_howling.c:584:4
  10fe78:    10 ea 13 02 	r0 = 531 			  ## notch_howling.c:584:4
  10fe7c:    c2 42       	r2 = [sp+ 44] 			  ## notch_howling.c:584:4
  10fe7e:    20 e9 0d 0a 	r13 = [sp+ 40] 			  ## notch_howling.c:584:4
  10fe82:    20 e9 0e 09 	r14 = [sp+ 36] 			  ## notch_howling.c:584:4
  10fe86:    20 e9 09 08 	r9 = [sp+ 32] 			  ## notch_howling.c:584:4
  10fe8a:    c7 41       	r7 = [sp+ 28] 			  ## notch_howling.c:584:4
  10fe8c:    80 ff 1e 04 	macc = [r1 ++= 0] * [r14 ++= 16] (s) 			  ## notch_howling.c:584:4
  10fe90:    a5 07       	macc += r4 * r5 (s) 			  ## notch_howling.c:584:4
  10fe92:    c0 f9 03 16 	r3 = macc >>> 22 			  ## notch_howling.c:584:4
  10fe96:    68 e8 73 01 	[r7 ++= 4] = r3 			  ## notch_howling.c:584:4
  10fe9a:    28 e8 92 01 	r2 = [r9 ++= 4] 			  ## notch_howling.c:584:4
  10fe9e:    9a d4       	r2 = r3 + r2 			  ## notch_howling.c:584:4
  10fea0:    68 e8 72 ff 	[r7 ++= -4] = r2 			  ## notch_howling.c:584:4
  10fea4:    80 ff 7e 7f 	macc = [r7 ++= 4] * [r14 ++= -4] (s) 			  ## notch_howling.c:584:4
  10fea8:    af ff 7e ff 	macc += [r7 ++= -4] * [r14 ++= -4] (s) 			  ## notch_howling.c:584:4
  10feac:    a5 07       	macc += r4 * r5 (s) 			  ## notch_howling.c:584:4
  10feae:    c0 f9 03 16 	r3 = macc >>> 22 			  ## notch_howling.c:584:4
  10feb2:    28 e8 92 ff 	r2 = [r9 ++= -4] 			  ## notch_howling.c:584:4
  10feb6:    9b d4       	r3 = r3 + r2 			  ## notch_howling.c:584:4
  10feb8:    68 e8 93 01 	[r9 ++= 4] = r3 			  ## notch_howling.c:584:4
  10febc:    80 ff 7e 7f 	macc = [r7 ++= 4] * [r14 ++= -4] (s) 			  ## notch_howling.c:584:4
  10fec0:    af ff 7e ff 	macc += [r7 ++= -4] * [r14 ++= -4] (s) 			  ## notch_howling.c:584:4
  10fec4:    a5 07       	macc += r4 * r5 (s) 			  ## notch_howling.c:584:4
  10fec6:    c0 f9 03 16 	r3 = macc >>> 22 			  ## notch_howling.c:584:4
  10feca:    68 e8 93 ff 	[r9 ++= -4] = r3 			  ## notch_howling.c:584:4
  10fece:    7b 48       	r3 = [r7 + 4] 			  ## notch_howling.c:584:4
  10fed0:    40 ee a2 08 	r2 = r10 - r8 			  ## notch_howling.c:584:4
  10fed4:    da 06       	macc = r3 * r2 (s) 			  ## notch_howling.c:584:4
  10fed6:    0b 48       	r3 = [r1 + 0] 			  ## notch_howling.c:584:4
  10fed8:    a0 fd 83 00 	macc += r3 * r8 (s) 			  ## notch_howling.c:584:4
  10fedc:    a0 fd b4 00 	macc += r4 * r11 (s) 			  ## notch_howling.c:584:4
  10fee0:    c0 f9 03 18 	r3 = macc >>> 24 			  ## notch_howling.c:584:4
  10fee4:    68 e8 13 01 	[r1 ++= 4] = r3 			  ## notch_howling.c:584:4
  10fee8:    80 fd d8 00 	macc = r8 * r13 (s) 			  ## notch_howling.c:584:4
  10feec:    c0 f9 08 18 	r8 = macc >>> 24 			  ## notch_howling.c:584:4
  10fef0:    80 ce       	cmp r8, r0			  ## notch_howling.c:584:4
  10fef2:    01 1c       	ifs (nzcv > 0) goto 2 <howling_run+0x276 : 10fef6 >			  ## notch_howling.c:584:4
  10fef4:    40 c6       	r8 = r0 			  ## notch_howling.c:584:4
  10fef6:    c2 ce       	cmp r8, r10			  ## notch_howling.c:584:4
  10fef8:    01 1b       	ifs (nzcv < 0) goto 2 <howling_run+0x27C : 10fefc >			  ## notch_howling.c:584:4
  10fefa:    d0 c6       	r8 = r10 			  ## notch_howling.c:584:4
  10fefc:    90 ee 66 01 	r6 = r6 - 1 			  ## notch_howling.c:584:4
  10ff00:    5e 24       	if (r6 != 0) goto -118 <howling_run+0x20C : 10fe8c >			  ## notch_howling.c:584:4
  10ff02:    c2 62       	[sp+ 44] = r2 			  ## notch_howling.c:661:33
  10ff04:    03 63       	[sp+ 48] = r3 			  ## notch_howling.c:661:33
  10ff06:    80 41       	r0 = [sp+ 24] 			  ## notch_howling.c:661:33
  10ff08:    60 e8 08 01 	[r0 + 4] = r8 			  ## notch_howling.c:661:33
  10ff0c:    82 ef 80 14 	cmp r8, 532			  ## notch_howling.c:662:8
  10ff10:    08 1a       	ifs (nzcv >= 0) goto 16 <howling_run+0x2A2 : 10ff22 >			  ## notch_howling.c:662:8
  10ff12:    01 80       	r1 = 0 			  ## notch_howling.c:664:29
  10ff14:    10 ea c6 09 	r0 = 2502 			  ## notch_howling.c:664:29
  10ff18:    50 e7 c1 00 	h[r12 + r0] = r1 			  ## notch_howling.c:664:29
  10ff1c:    45 40       	r5 = [sp+ 4] 			  ## notch_howling.c:664:29
  10ff1e:    42 41       	r2 = [sp+ 20] 			  ## notch_howling.c:664:29
  10ff20:    0c 08       	goto 24 <howling_run+0x2BA : 10ff3a >			  ## notch_howling.c:664:29
  10ff22:    07 ef 80 80 	cmp r8, 16777216			  ## notch_howling.c:666:8
  10ff26:    45 40       	r5 = [sp+ 4] 			  ## notch_howling.c:666:8
  10ff28:    42 41       	r2 = [sp+ 20] 			  ## notch_howling.c:666:8
  10ff2a:    07 1b       	ifs (nzcv < 0) goto 14 <howling_run+0x2BA : 10ff3a >			  ## notch_howling.c:666:8
  10ff2c:    01 80       	r1 = 0 
  10ff2e:    10 ea c4 09 	r0 = 2500 			  ## notch_howling.c:668:30
  10ff32:    50 e7 c1 00 	h[r12 + r0] = r1 			  ## notch_howling.c:668:30
  10ff36:    00 41       	r0 = [sp+ 16] 			  ## notch_howling.c:669:27
  10ff38:    01 70       	h[r0 + 0] = r1 			  ## notch_howling.c:669:27
  10ff3a:    a2 89       	r2 += 52 			  ## notch_howling.c:526:2
  10ff3c:    81 ef 20 04 	cmp r2, 260			  ## notch_howling.c:526:2
  10ff40:    ff fb d1 f7 	ifs (nzcv != 0) goto -262 <howling_run+0x1BE : 10fe3e >			  ## notch_howling.c:526:2
  10ff44:    50 ea ff 7f 	r8 = 32767 			  ## notch_howling.c:689:2
  10ff48:    93 ea 00 80 	r3 = -32768 			  ## notch_howling.c:689:2
  10ff4c:    c6 40       	r6 = [sp+ 12] 			  ## notch_howling.c:689:2
  10ff4e:    35 c6       	r5 = r6 			  ## notch_howling.c:689:2
  10ff50:    81 40       	r1 = [sp+ 8] 
  10ff52:    0f c6       	r7 = r1 			  ## notch_howling.c:689:2
  10ff54:    0a c6       	r2 = r1 			  ## notch_howling.c:689:2
  10ff56:    00 43       	r0 = [sp+ 48] 			  ## notch_howling.c:689:2
  10ff58:    28 e8 70 01 	r0 = [r7 ++= 4] 			  ## notch_howling.c:689:2
  10ff5c:    c0 aa       	r0 = r0 >>> 10 			  ## notch_howling.c:689:2
  10ff5e:    40 ce       	cmp r0, r8			  ## notch_howling.c:689:2
  10ff60:    01 1b       	ifs (nzcv < 0) goto 2 <howling_run+0x2E4 : 10ff64 >			  ## notch_howling.c:689:2
  10ff62:    80 c6       	r0 = r8 			  ## notch_howling.c:689:2
  10ff64:    03 ce       	cmp r0, r3			  ## notch_howling.c:689:2
  10ff66:    01 1c       	ifs (nzcv > 0) goto 2 <howling_run+0x2EA : 10ff6a >			  ## notch_howling.c:689:2
  10ff68:    18 c6       	r0 = r3 			  ## notch_howling.c:689:2
  10ff6a:    58 e8 20 80 	h[r2 ++= 2] = r0 			  ## notch_howling.c:689:2
  10ff6e:    90 ee 55 01 	r5 = r5 - 1 			  ## notch_howling.c:689:2
  10ff72:    2d 27       	if (r5 != 0) goto -28 <howling_run+0x2D8 : 10ff58 >			  ## notch_howling.c:689:2
  10ff74:    05 40       	r5 = [sp] 			  ## notch_howling.c:689:2
  10ff76:    00 e5 53 fc 	r3, r0 = d[r5 + -16] 			  ## notch_howling.c:721:45
  10ff7a:    37 a1       	r7 = r6 << 1 			  ## notch_howling.c:721:60
  10ff7c:    3a c6       	r2 = r7 			  ## notch_howling.c:721:18
  10ff7e:    ab 01       	call r3			  ## notch_howling.c:721:18
  10ff80:    c0 a1       	r0 = r0 >>> 1 			  ## notch_howling.c:722:24
  10ff82:    31 d6       	r1 = r6 - r0 			  ## notch_howling.c:723:18
  10ff84:    41 e5 50 fe 	d[r5 + -8] = r0, r1 			  ## notch_howling.c:723:12
  10ff88:    38 c6       	r0 = r7 			  ## notch_howling.c:726:1
  10ff8a:    3c cd       	sp += 60 			  ## notch_howling.c:726:1
  10ff8c:    30 c4       	{macch, maccl} = [sp++] 			  ## notch_howling.c:726:1
  10ff8e:    1e c0       	{pc, r14-r4} = [sp++] 			  ## notch_howling.c:726:1


howing_run:
  10ff90:    14 c2       	[--sp] = {rets, r4} 			  ## howling_phy.c:34:0
  10ff92:    03 e5 00 00 	r0, r3 = d[r0 + 0] 			  ## howling_phy.c:39:26
  10ff96:    84 48       	r4 = [r0 + 8] 			  ## howling_phy.c:39:16
  10ff98:    18 c6       	r0 = r3 			  ## howling_phy.c:39:11
  10ff9a:    ac 01       	call r4			  ## howling_phy.c:39:11
  10ff9c:    14 c0       	{pc, r4} = [sp++] 


pitch_search:
  10ff9e:    1c c2       	[--sp] = {rets, r12-r4} 			  ## resample.c:390:0
  10ffa0:    30 c5       	[--sp] = {macch, maccl} 			  ## resample.c:390:0
  10ffa2:    0a 98       	cmp r2, 1			  ## resample.c:395:2
  10ffa4:    2e 1b       	ifs (nzcv < 0) goto 92 <pitch_search+0x64 : 110002 >			  ## resample.c:395:2
  10ffa6:    00 ed 0b 04 	r11 = r0 + 4 			  ## resample.c:399:7
  10ffaa:    00 ed 18 04 	r8 = r1 + 4 			  ## resample.c:399:7
  10ffae:    4c 2c       	r4 = [addr(196)]  <.GCPI378_0 : 110074 >			  ## resample.c:399:7
  10ffb0:    54 ea 00 00 	r12 = 0 			  ## resample.c:399:7
  10ffb4:    03 80       	r3 = 0 			  ## resample.c:399:7
  10ffb6:    59 c6       	r9 = r3 
  10ffb8:    62 c6       	r10 = r4 
  10ffba:    20 f7 c3 01 	r3 = r12 << 1 			  ## resample.c:401:23
  10ffbe:    90 e7 03 03 	r3 = h[r0 + r3] (s) 			  ## resample.c:403:9
  10ffc2:    90 e8 14 00 	r4 = h[r1 + 0] (s) 			  ## resample.c:403:24
  10ffc6:    1b d7       	r3 = r3 - r4 			  ## resample.c:403:22
  10ffc8:    db 06       	macc = r3 * r3 (s) 			  ## resample.c:404:3
  10ffca:    13 80       	r3 = 2 
  10ffcc:    9c c6       	r4 = r11 
  10ffce:    86 c6       	r6 = r8 
  10ffd0:    98 e8 65 01 	r5 = h[r6 ++= 4] (s) 			  ## resample.c:407:25
  10ffd4:    98 e8 47 01 	r7 = h[r4 ++= 4] (s) 			  ## resample.c:407:10
  10ffd8:    7d d7       	r5 = r7 - r5 			  ## resample.c:407:23
  10ffda:    ad 07       	macc += r5 * r5 (s) 			  ## resample.c:408:4
  10ffdc:    9b d0       	r3 = r3 + 2 			  ## resample.c:405:25
  10ffde:    03 9a       	cmp r3, 64			  ## resample.c:405:3
  10ffe0:    f7 1b       	ifs (nzcv < 0) goto -18 <pitch_search+0x32 : 10ffd0 >			  ## resample.c:405:3
  10ffe2:    c0 f9 04 08 	r4 = macc >>> 8 			  ## resample.c:410:3
  10ffe6:    62 ce       	cmp r4, r10			  ## resample.c:411:7
  10ffe8:    a3 c6       	r3 = r12 			  ## resample.c:411:7
  10ffea:    a0 03       	ifs (nzcv >= 0) {			  ## resample.c:411:7
  10ffec:    8b c6       		r3 = r9 
                               	}			  ## resample.c:411:7
  10ffee:    62 ce       	cmp r4, r10			  ## resample.c:411:7
  10fff0:    a0 03       	ifs (nzcv >= 0) {			  ## resample.c:411:7
  10fff2:    94 c6       		r4 = r10 
                               	}			  ## resample.c:411:7
  10fff4:    00 ed bb 02 	r11 = r11 + 2 			  ## resample.c:395:2
  10fff8:    00 ed cc 01 	r12 = r12 + 1 			  ## resample.c:395:32
  10fffc:    a2 ce       	cmp r12, r2			  ## resample.c:395:2
  10fffe:    db 11       	ifs (nzcv != 0) goto -74 <pitch_search+0x18 : 10ffb6 >			  ## resample.c:395:2
  110000:    03 08       	goto 6 <pitch_search+0x6A : 110008 >			  ## resample.c:395:2
  110002:    04 2f       	r4 = [addr(112)]  <.GCPI378_0 : 110074 >
  110004:    03 80       	r3 = 0 
  110006:    02 80       	r2 = 0 
  110008:    5d d0       	r5 = r3 + 1 			  ## resample.c:421:15
  11000a:    de d3       	r6 = r3 + -1 			  ## resample.c:418:13
  11000c:    06 98       	cmp r6, 0			  ## resample.c:419:6
  11000e:    a0 03       	ifs (nzcv >= 0) {			  ## resample.c:419:6
  110010:    35 c6       		r5 = r6 
                               	}			  ## resample.c:419:6
  110012:    00 ed 58 03 	r8 = r5 + 3 			  ## resample.c:424:15
  110016:    50 ce       	cmp r2, r8			  ## resample.c:424:2
  110018:    29 1a       	ifs (nzcv >= 0) goto 82 <pitch_search+0xCE : 11006c >
  11001a:    15 a1       	r5 = r2 << 1 			  ## resample.c:427:7
  11001c:    2d d4       	r5 = r5 + r0 			  ## resample.c:427:7
  11001e:    00 ed 5c 04 	r12 = r5 + 4 			  ## resample.c:427:7
  110022:    00 ed 19 04 	r9 = r1 + 4 			  ## resample.c:427:7
  110026:    5a c6       	r10 = r3 
  110028:    63 c6       	r11 = r4 
  11002a:    13 a1       	r3 = r2 << 1 			  ## resample.c:429:23
  11002c:    90 e7 03 03 	r3 = h[r0 + r3] (s) 			  ## resample.c:431:9
  110030:    90 e8 14 00 	r4 = h[r1 + 0] (s) 			  ## resample.c:431:24
  110034:    1b d7       	r3 = r3 - r4 			  ## resample.c:431:22
  110036:    db 06       	macc = r3 * r3 (s) 			  ## resample.c:432:3
  110038:    13 80       	r3 = 2 
  11003a:    a4 c6       	r4 = r12 
  11003c:    8f c6       	r7 = r9 
  11003e:    98 e8 75 01 	r5 = h[r7 ++= 4] (s) 			  ## resample.c:435:25
  110042:    98 e8 46 01 	r6 = h[r4 ++= 4] (s) 			  ## resample.c:435:10
  110046:    75 d7       	r5 = r6 - r5 			  ## resample.c:435:23
  110048:    ad 07       	macc += r5 * r5 (s) 			  ## resample.c:436:4
  11004a:    9b d0       	r3 = r3 + 2 			  ## resample.c:433:25
  11004c:    03 9a       	cmp r3, 64			  ## resample.c:433:3
  11004e:    f7 1b       	ifs (nzcv < 0) goto -18 <pitch_search+0xA0 : 11003e >			  ## resample.c:433:3
  110050:    c0 f9 04 08 	r4 = macc >>> 8 			  ## resample.c:438:3
  110054:    63 ce       	cmp r4, r11			  ## resample.c:439:7
  110056:    13 c6       	r3 = r2 			  ## resample.c:439:7
  110058:    a0 03       	ifs (nzcv >= 0) {			  ## resample.c:439:7
  11005a:    93 c6       		r3 = r10 
                               	}			  ## resample.c:439:7
  11005c:    63 ce       	cmp r4, r11			  ## resample.c:439:7
  11005e:    a0 03       	ifs (nzcv >= 0) {			  ## resample.c:439:7
  110060:    9c c6       		r4 = r11 
                               	}			  ## resample.c:439:7
  110062:    00 ed cc 02 	r12 = r12 + 2 			  ## resample.c:424:2
  110066:    52 d0       	r2 = r2 + 1 			  ## resample.c:424:21
  110068:    50 ce       	cmp r2, r8			  ## resample.c:424:2
  11006a:    dd 11       	ifs (nzcv != 0) goto -70 <pitch_search+0x88 : 110026 >			  ## resample.c:424:2
  11006c:    18 c6       	r0 = r3 			  ## resample.c:445:2
  11006e:    30 c4       	{macch, maccl} = [sp++] 
  110070:    1c c0       	{pc, r12-r4} = [sp++] 
  110072:    00 00       	nop


.GCPI378_0:
  110074:    ff ff ff 7f     < 2147483647 : 0x7FFFFFFF >

speedpitch_main:
  110078:    1e c2       	[--sp] = {rets, r14-r4} 			  ## resample.c:562:0
  11007a:    30 c5       	[--sp] = {macch, maccl} 			  ## resample.c:562:0
  11007c:    1f ed ff 14 	sp = sp + -236 			  ## resample.c:562:0
  110080:    16 c6       	r6 = r2 			  ## resample.c:562:0
  110082:    0d c6       	r5 = r1 			  ## resample.c:562:0
  110084:    01 c6       	r1 = r0 			  ## resample.c:562:0
  110086:    01 ed 1a d0 	r10 = r1 + 464 			  ## resample.c:562:0
  11008a:    90 e8 a2 86 	r2 = h[r10 + 26] (s) 			  ## resample.c:569:19
  11008e:    42 21       	if (r2 == 0) goto 40 <speedpitch_main+0x40 : 1100b8 >			  ## resample.c:569:19
  110090:    90 e8 a0 07 	r0 = h[r10 + 28] (s) 			  ## resample.c:572:62
  110094:    40 d4       	r0 = r0 + r1 			  ## resample.c:571:55
  110096:    0c c6       	r4 = r1 			  ## resample.c:571:55
  110098:    00 ed 01 d8 	r1 = r0 + 216 			  ## resample.c:572:62
  11009c:    00 e5 a3 fc 	r3, r0 = d[r10 + -16] 			  ## resample.c:572:55
  1100a0:    ab 01       	call r3			  ## resample.c:572:10
  1100a2:    40 c6       	r8 = r0 			  ## resample.c:572:10
  1100a4:    90 e8 a0 86 	r0 = h[r10 + 26] (s) 			  ## resample.c:573:7
  1100a8:    40 ce       	cmp r0, r8			  ## resample.c:573:7
  1100aa:    00 fb 11 25 	ifs (nzcv != 0) goto 1186 <dh01+0x136 : 110550 >			  ## resample.c:573:7
  1100ae:    00 80       	r0 = 0 			  ## resample.c:576:22
  1100b0:    50 e8 a0 86 	h[r10 + 26] = r0 			  ## resample.c:576:22
  1100b4:    21 c6       	r1 = r4 			  ## resample.c:576:22
  1100b6:    00 08       	goto 0 <speedpitch_main+0x40 : 1100b8 >			  ## resample.c:576:22
  1100b8:    00 80       	r0 = 0 
  1100ba:    16 98       	cmp r6, 2			  ## resample.c:583:2
  1100bc:    00 fb 4b 25 	ifs (nzcv < 0) goto 1192 <dh01+0x14E : 110568 >			  ## resample.c:583:2
  1100c0:    00 ed 10 d8 	r0 = r1 + 216 
  1100c4:    80 60       	[sp+ 8] = r0 
  1100c6:    01 ed 10 e8 	r0 = r1 + 488 
  1100ca:    00 60       	[sp] = r0 
  1100cc:    01 ed 14 e4 	r4 = r1 + 484 
  1100d0:    60 f7 6c 01 	r12 = r6 >> 1 
  1100d4:    53 ea 00 00 	r11 = 0 
  1100d8:    01 ed 10 c8 	r0 = r1 + 456 
  1100dc:    00 61       	[sp+ 16] = r0 
  1100de:    81 65       	[sp+ 88] = r1 
  1100e0:    44 60       	[sp+ 4] = r4 
  1100e2:    80 ef c0 10 	cmp r12, 16			  ## resample.c:585:14
  1100e6:    e1 c6       	r9 = r12 			  ## resample.c:585:14
  1100e8:    a0 03       	ifs (nzcv >= 0) {			  ## resample.c:585:14
  1100ea:    51 ea 10 00 		r9 = 16 
                               	}			  ## resample.c:585:14
  1100ee:    00 41       	r0 = [sp+ 16] 			  ## resample.c:473:21
  1100f0:    00 50       	r0 = h[r0 + 0] 			  ## resample.c:473:21
  1100f2:    88 cb       	r0 += r9 			  ## resample.c:473:21
  1100f4:    50 e8 a0 7e 	h[r10 + -8] = r0 			  ## resample.c:473:21
  1100f8:    20 50       	r0 = h[r4 + 0] 			  ## resample.c:474:32
  1100fa:    88 cb       	r0 += r9 			  ## resample.c:474:32
  1100fc:    50 e8 a0 05 	h[r10 + 20] = r0 			  ## resample.c:474:32
  110100:    90 e8 a0 04 	r0 = h[r10 + 16] (s) 			  ## resample.c:476:10
  110104:    00 a1       	r0 = r0 << 1 			  ## resample.c:476:10
  110106:    20 e8 a1 ff 	r1 = [r10 + -4] 			  ## resample.c:476:23
  11010a:    40 d4       	r0 = r0 + r1 			  ## resample.c:476:10
  11010c:    20 f7 9d 01 	r13 = r9 << 1 			  ## resample.c:476:77
  110110:    29 c6       	r1 = r5 			  ## resample.c:476:2
  110112:    aa c6       	r2 = r13 			  ## resample.c:476:2
  110114:    d9 e1 cf 71 	call -315848 <memcpy : c2f50 >			  ## resample.c:476:2
  110118:    10 e8 a0 04 	r0 = h[r10 + 16] 			  ## resample.c:477:30
  11011c:    00 ee 01 09 	r1 = r0 + r9 			  ## resample.c:477:30
  110120:    50 e8 a1 04 	h[r10 + 16] = r1 			  ## resample.c:481:31
  110124:    ca c9       	r2 = r1.l (s) 			  ## resample.c:451:6
  110126:    90 e8 a0 85 	r0 = h[r10 + 22] (s) 			  ## resample.c:451:36
  11012a:    80 8f       	r0 += -16 			  ## resample.c:451:64
  11012c:    10 ce       	cmp r2, r0			  ## resample.c:451:6
  11012e:    1d 1b       	ifs (nzcv < 0) goto 58 <speedpitch_main+0xF2 : 11016a >
  110130:    26 c6       	r6 = r4 
  110132:    90 e8 a3 06 	r3 = h[r10 + 24] (s) 			  ## resample.c:453:50
  110136:    90 e8 a4 05 	r4 = h[r10 + 20] (s) 			  ## resample.c:453:20
  11013a:    20 e8 a0 ff 	r0 = [r10 + -4] 			  ## resample.c:453:20
  11013e:    23 ce       	cmp r4, r3			  ## resample.c:453:7
  110140:    09 1d       	ifs (nzcv <= 0) goto 18 <speedpitch_main+0xDC : 110154 >			  ## resample.c:453:7
  110142:    11 d7       	r1 = r2 - r4 			  ## resample.c:455:77
  110144:    09 a1       	r1 = r1 << 1 			  ## resample.c:455:23
  110146:    09 d4       	r1 = r1 + r0 			  ## resample.c:455:23
  110148:    22 a1       	r2 = r4 << 1 			  ## resample.c:456:78
  11014a:    d9 e1 1f 70 	call -315902 <memcpy : c2f50 >			  ## resample.c:456:4
  11014e:    34 c6       	r4 = r6 
  110150:    20 c6       	r0 = r4 
  110152:    08 08       	goto 16 <speedpitch_main+0xEC : 110164 >
  110154:    d1 d6       	r1 = r2 - r3 			  ## resample.c:461:77
  110156:    09 a1       	r1 = r1 << 1 			  ## resample.c:461:23
  110158:    09 d4       	r1 = r1 + r0 			  ## resample.c:461:23
  11015a:    1a a1       	r2 = r3 << 1 			  ## resample.c:462:77
  11015c:    d9 e1 8f 6f 	call -315920 <memcpy : c2f50 >			  ## resample.c:462:4
  110160:    00 40       	r0 = [sp] 
  110162:    34 c6       	r4 = r6 
  110164:    01 50       	r1 = h[r0 + 0] 
  110166:    50 e8 a1 04 	h[r10 + 16] = r1 
  11016a:    90 e8 a0 02 	r0 = h[r10 + 8] (s) 			  ## resample.c:491:41
  11016e:    90 e8 a2 7e 	r2 = h[r10 + -8] (s) 			  ## resample.c:491:19
  110172:    10 ce       	cmp r2, r0			  ## resample.c:491:6
  110174:    09 1b       	ifs (nzcv < 0) goto 18 <speedpitch_main+0x110 : 110188 >			  ## resample.c:491:6
  110176:    12 d6       	r2 = r2 - r0 			  ## resample.c:493:22
  110178:    50 e8 a2 7e 	h[r10 + -8] = r2 			  ## resample.c:493:22
  11017c:    82 45       	r2 = [sp+ 88] 			  ## resample.c:494:39
  11017e:    01 ed 22 dc 	r2 = r2 + 476 			  ## resample.c:494:39
  110182:    12 50       	r2 = h[r2 + 0] 			  ## resample.c:494:39
  110184:    50 e8 a2 7b 	h[r10 + -20] = r2 			  ## resample.c:494:24
  110188:    90 e8 a2 82 	r2 = h[r10 + 10] (s) 			  ## resample.c:499:41
  11018c:    02 ce       	cmp r0, r2			  ## resample.c:499:54
  11018e:    c5 62       	[sp+ 44] = r5 			  ## resample.c:499:54
  110190:    60 e9 0d 0a 	[sp+ 40] = r13 			  ## resample.c:499:54
  110194:    09 1d       	ifs (nzcv <= 0) goto 18 <speedpitch_main+0x130 : 1101a8 >			  ## resample.c:499:54
  110196:    90 e8 a3 05 	r3 = h[r10 + 20] (s) 			  ## resample.c:499:58
  11019a:    26 c6       	r6 = r4 			  ## resample.c:499:58
  11019c:    90 e8 a4 85 	r4 = h[r10 + 22] (s) 			  ## resample.c:499:92
  1101a0:    84 8f       	r4 += -16 			  ## resample.c:499:121
  1101a2:    1c ce       	cmp r3, r4			  ## resample.c:499:6
  1101a4:    34 c6       	r4 = r6 			  ## resample.c:499:6
  1101a6:    38 1a       	ifs (nzcv >= 0) goto 112 <speedpitch_main+0x1A0 : 110218 >			  ## resample.c:499:6
  1101a8:    02 ce       	cmp r0, r2			  ## resample.c:514:59
  1101aa:    34 1a       	ifs (nzcv >= 0) goto 104 <speedpitch_main+0x19C : 110214 >			  ## resample.c:514:59
  1101ac:    90 e8 40 00 	r0 = h[r4 + 0] (s) 			  ## resample.c:514:76
  1101b0:    80 9a       	cmp r0, 80			  ## resample.c:514:10
  1101b2:    30 1c       	ifs (nzcv > 0) goto 96 <speedpitch_main+0x19C : 110214 >			  ## resample.c:514:10
  1101b4:    26 c6       	r6 = r4 
  1101b6:    90 e8 a2 06 	r2 = h[r10 + 24] (s) 			  ## resample.c:519:78
  1101ba:    c8 c9       	r0 = r1.l (s) 			  ## resample.c:519:48
  1101bc:    80 d6       	r0 = r0 - r2 			  ## resample.c:519:76
  1101be:    01 a1       	r1 = r0 << 1 			  ## resample.c:519:22
  1101c0:    20 e8 a0 ff 	r0 = [r10 + -4] 			  ## resample.c:519:35
  1101c4:    09 d4       	r1 = r1 + r0 			  ## resample.c:519:22
  1101c6:    12 a1       	r2 = r2 << 1 			  ## resample.c:520:76
  1101c8:    d9 e1 2f 6c 	call -316028 <memcpy : c2f50 >			  ## resample.c:520:3
  1101cc:    90 e8 a0 06 	r0 = h[r10 + 24] (s) 			  ## resample.c:523:39
  1101d0:    50 e8 a0 04 	h[r10 + 16] = r0 			  ## resample.c:521:31
  1101d4:    90 e8 a2 83 	r2 = h[r10 + 14] (s) 			  ## resample.c:524:62
  1101d8:    01 a1       	r1 = r0 << 1 			  ## resample.c:523:67
  1101da:    20 e8 a0 ff 	r0 = [r10 + -4] 			  ## resample.c:523:26
  1101de:    09 d4       	r1 = r1 + r0 			  ## resample.c:523:26
  1101e0:    01 8c       	r1 += -128 			  ## resample.c:523:13
  1101e2:    ff e1 cf ed 	call -584 <pitch_search : 10ff9e >			  ## resample.c:524:14
  1101e6:    00 ed 04 40 	r4 = r0 + 64 			  ## resample.c:528:53
  1101ea:    90 e8 a3 04 	r3 = h[r10 + 16] (s) 			  ## resample.c:528:15
  1101ee:    1a d7       	r2 = r3 - r4 			  ## resample.c:528:43
  1101f0:    20 e8 a1 ff 	r1 = [r10 + -4] 			  ## resample.c:529:34
  1101f4:    0a 98       	cmp r2, 1			  ## resample.c:531:4
  1101f6:    38 1b       	ifs (nzcv < 0) goto 112 <speedpitch_main+0x1F0 : 110268 >			  ## resample.c:531:4
  1101f8:    1b a1       	r3 = r3 << 1 			  ## resample.c:529:21
  1101fa:    5b d4       	r3 = r3 + r1 			  ## resample.c:529:21
  1101fc:    24 a1       	r4 = r4 << 1 			  ## resample.c:530:23
  1101fe:    64 d4       	r4 = r4 + r1 			  ## resample.c:530:23
  110200:    15 c6       	r5 = r2 			  ## resample.c:530:23
  110202:    18 e8 47 80 	r7 = h[r4 ++= 2] 			  ## resample.c:533:17
  110206:    58 e8 37 80 	h[r3 ++= 2] = r7 			  ## resample.c:533:15
  11020a:    ed d3       	r5 = r5 + -1 			  ## resample.c:531:18
  11020c:    fa 11       	ifs (nzcv != 0) goto -12 <speedpitch_main+0x18A : 110202 >			  ## resample.c:531:4
  11020e:    10 e8 a3 04 	r3 = h[r10 + 16] 
  110212:    2b 08       	goto 86 <speedpitch_main+0x1F2 : 11026a >
  110214:    80 45       	r0 = [sp+ 88] 
  110216:    4b 08       	goto 150 <speedpitch_main+0x236 : 1102ae >
  110218:    90 e8 a2 83 	r2 = h[r10 + 14] (s) 			  ## resample.c:502:59
  11021c:    20 e8 a0 ff 	r0 = [r10 + -4] 			  ## resample.c:501:33
  110220:    c9 c9       	r1 = r1.l (s) 			  ## resample.c:501:46
  110222:    09 a1       	r1 = r1 << 1 			  ## resample.c:501:74
  110224:    09 d4       	r1 = r1 + r0 			  ## resample.c:501:33
  110226:    01 8c       	r1 += -128 			  ## resample.c:501:20
  110228:    ff e1 9f eb 	call -654 <pitch_search : 10ff9e >			  ## resample.c:502:11
  11022c:    02 a1       	r2 = r0 << 1 			  ## resample.c:503:3
  11022e:    20 e8 a3 ff 	r3 = [r10 + -4] 			  ## resample.c:503:3
  110232:    d2 d4       	r2 = r2 + r3 			  ## resample.c:503:3
  110234:    03 80       	r3 = 0 			  ## resample.c:503:3
  110236:    04 82       	r4 = 64 			  ## resample.c:503:3
  110238:    98 e8 15 80 	r5 = h[r1 ++= 2] (s) 			  ## resample.c:505:99
  11023c:    1d 06       	r5 *= r3 			  ## resample.c:505:109
  11023e:    90 e8 27 00 	r7 = h[r2 + 0] (s) 			  ## resample.c:505:47
  110242:    27 06       	r7 *= r4 			  ## resample.c:505:86
  110244:    ed d5       	r5 = r5 + r7 			  ## resample.c:505:97
  110246:    05 89       	r5 += 32 			  ## resample.c:505:113
  110248:    6d a6       	r5 = r5 >> 6 			  ## resample.c:505:119
  11024a:    58 e8 25 80 	h[r2 ++= 2] = r5 			  ## resample.c:505:43
  11024e:    e4 d3       	r4 = r4 + -1 			  ## resample.c:503:17
  110250:    5b d0       	r3 = r3 + 1 			  ## resample.c:503:24
  110252:    2c 27       	if (r4 != 0) goto -28 <speedpitch_main+0x1C0 : 110238 >			  ## resample.c:503:3
  110254:    00 ed 01 40 	r1 = r0 + 64 			  ## resample.c:511:40
  110258:    50 e8 a1 04 	h[r10 + 16] = r1 			  ## resample.c:511:31
  11025c:    50 e8 a1 05 	h[r10 + 20] = r1 			  ## resample.c:512:32
  110260:    80 45       	r0 = [sp+ 88] 			  ## resample.c:512:32
  110262:    c5 42       	r5 = [sp+ 44] 
  110264:    34 c6       	r4 = r6 
  110266:    23 08       	goto 70 <speedpitch_main+0x236 : 1102ae >
  110268:    5b c9       	r3 = r3.l 			  ## resample.c:528:28
  11026a:    00 a1       	r0 = r0 << 1 			  ## resample.c:536:16
  11026c:    40 d4       	r0 = r0 + r1 			  ## resample.c:536:16
  11026e:    db c9       	r3 = r3.l (s) 			  ## resample.c:535:40
  110270:    1b a1       	r3 = r3 << 1 			  ## resample.c:535:68
  110272:    c9 d4       	r1 = r1 + r3 			  ## resample.c:535:14
  110274:    01 8c       	r1 += -128 			  ## resample.c:535:14
  110276:    03 80       	r3 = 0 
  110278:    04 82       	r4 = 64 
  11027a:    98 e8 05 80 	r5 = h[r0 ++= 2] (s) 			  ## resample.c:539:41
  11027e:    1d 06       	r5 *= r3 			  ## resample.c:539:53
  110280:    90 e8 17 00 	r7 = h[r1 + 0] (s) 			  ## resample.c:539:18
  110284:    27 06       	r7 *= r4 			  ## resample.c:539:28
  110286:    ed d5       	r5 = r5 + r7 			  ## resample.c:539:39
  110288:    05 89       	r5 += 32 			  ## resample.c:539:57
  11028a:    6d a6       	r5 = r5 >> 6 			  ## resample.c:539:63
  11028c:    58 e8 15 80 	h[r1 ++= 2] = r5 			  ## resample.c:539:15
  110290:    e4 d3       	r4 = r4 + -1 			  ## resample.c:537:18
  110292:    5b d0       	r3 = r3 + 1 			  ## resample.c:537:25
  110294:    2c 27       	if (r4 != 0) goto -28 <speedpitch_main+0x202 : 11027a >			  ## resample.c:537:4
  110296:    10 e8 a0 04 	r0 = h[r10 + 16] 			  ## resample.c:541:35
  11029a:    81 d4       	r1 = r0 + r2 			  ## resample.c:541:63
  11029c:    50 e8 a1 04 	h[r10 + 16] = r1 			  ## resample.c:541:32
  1102a0:    34 c6       	r4 = r6 			  ## resample.c:541:32
  1102a2:    20 50       	r0 = h[r4 + 0] 			  ## resample.c:542:37
  1102a4:    80 d4       	r0 = r0 + r2 			  ## resample.c:542:67
  1102a6:    50 e8 a0 05 	h[r10 + 20] = r0 			  ## resample.c:542:34
  1102aa:    80 45       	r0 = [sp+ 88] 			  ## resample.c:542:34
  1102ac:    c5 42       	r5 = [sp+ 44] 			  ## resample.c:542:34
  1102ae:    40 ee cc 09 	r12 = r12 - r9 			  ## resample.c:586:13
  1102b2:    00 ed 0e c8 	r14 = r0 + 200 
  1102b6:    90 e8 e0 3d 	r0 = h[r14 + 244] (s) 			  ## resample.c:589:20
  1102ba:    00 64       	[sp+ 64] = r0 			  ## resample.c:589:20
  1102bc:    46 c9       	r6 = r0.l 			  ## resample.c:589:20
  1102be:    00 fb 80 13 	ifs (nzcv == 0) goto 624 <dh01+0x118 : 110532 >			  ## resample.c:589:20
  1102c2:    60 e9 09 08 	[sp+ 32] = r9 
  1102c6:    60 e9 0c 06 	[sp+ 24] = r12 
  1102ca:    60 e9 0b 07 	[sp+ 28] = r11 
  1102ce:    00 e8 e7 40 	r7 = b[r14 + 1] 			  ## resample.c:225:31
  1102d2:    20 e8 e8 02 	r8 = [r14 + 8] 			  ## resample.c:222:32
  1102d6:    20 f7 8c 02 	r12 = r8 << 2 			  ## resample.c:230:2
  1102da:    20 e4 00 a5 	r0 = [addr(660)]  <.GCPI379_0 : 110570 >			  ## resample.c:230:2
  1102de:    a0 cb       	r0 += r12 			  ## resample.c:230:2
  1102e0:    c0 63       	[sp+ 60] = r0 			  ## resample.c:223:29
  1102e2:    00 e8 e3 00 	r3 = b[r14 + 0] 			  ## resample.c:223:29
  1102e6:    18 a2       	r0 = r3 << 2 			  ## resample.c:224:43
  1102e8:    62 93       	r2 = sp + 108 			  ## resample.c:224:43
  1102ea:    82 63       	[sp+ 56] = r2 			  ## resample.c:224:43
  1102ec:    15 d4       	r5 = r2 + r0 			  ## resample.c:230:2
  1102ee:    00 ed f2 ac 	r2 = sp + 172 			  ## resample.c:230:2
  1102f2:    42 63       	[sp+ 52] = r2 			  ## resample.c:230:2
  1102f4:    00 ee 2b 00 	r11 = r2 + r0 			  ## resample.c:230:2
  1102f8:    90 e8 a2 05 	r2 = h[r10 + 20] (s) 			  ## resample.c:591:92
  1102fc:    c9 c9       	r1 = r1.l (s) 			  ## resample.c:591:62
  1102fe:    89 d6       	r1 = r1 - r2 			  ## resample.c:591:90
  110300:    09 a1       	r1 = r1 << 1 			  ## resample.c:591:36
  110302:    20 e8 a2 ff 	r2 = [r10 + -4] 			  ## resample.c:591:49
  110306:    89 d4       	r1 = r1 + r2 			  ## resample.c:591:36
  110308:    41 61       	[sp+ 20] = r1 
  11030a:    19 a3       	r1 = r3 << 3 
  11030c:    41 62       	[sp+ 36] = r1 
  11030e:    43 66       	[sp+ 100] = r3 
  110310:    19 a1       	r1 = r3 << 1 
  110312:    c9 d3       	r1 = r1 + -1 
  110314:    c1 65       	[sp+ 92] = r1 
  110316:    81 45       	r1 = [sp+ 88] 
  110318:    40 d4       	r0 = r0 + r1 
  11031a:    00 d3       	r0 = r0 + -4 			  ## resample.c:224:18
  11031c:    20 e8 e2 01 	r2 = [r14 + 4] 			  ## resample.c:221:33
  110320:    42 64       	[sp+ 68] = r2 			  ## resample.c:220:32
  110322:    20 e8 e9 03 	r9 = [r14 + 12] 			  ## resample.c:220:32
  110326:    02 80       	r2 = 0 
  110328:    02 63       	[sp+ 48] = r2 
  11032a:    c0 60       	[sp+ 12] = r0 
  11032c:    40 65       	[sp+ 84] = r0 
  11032e:    00 80       	r0 = 0 
  110330:    00 65       	[sp+ 80] = r0 
  110332:    01 66       	[sp+ 96] = r1 
  110334:    c7 64       	[sp+ 76] = r7 
  110336:    60 e9 08 12 	[sp+ 72] = r8 
  11033a:    bb 08       	goto 374 <dh01+0x98 : 1104b2 >
  11033c:    20 e8 e0 ff 	r0 = [r14 + -4] 			  ## resample.c:249:32
  110340:    88 ce       	cmp r9, r0			  ## resample.c:249:6
  110342:    00 fb 0a 09 	ifs (nzcv >= 0) goto 288 <dh01+0x4C : 110466 >			  ## resample.c:249:6
  110346:    80 ef 80 20 	cmp r8, 32			  ## resample.c:251:26
  11034a:    1d 11       	ifs (nzcv != 0) goto 58 <speedpitch_main+0x30E : 110386 >			  ## resample.c:251:26
  11034c:    80 ef 90 00 	cmp r9, 0
  110350:    1a 11       	ifs (nzcv != 0) goto 52 <speedpitch_main+0x30E : 110386 >
  110352:    90 e8 e0 3c 	r0 = h[r14 + 240] (s) 			  ## resample.c:254:5
  110356:    42 d0       	r2 = r0 + 1 			  ## resample.c:254:44
  110358:    90 e8 13 b2 	r3 = h[r1 + 202] (s) 			  ## resample.c:253:30
  11035c:    44 45       	r4 = [sp+ 84] 			  ## resample.c:253:17
  11035e:    24 48       	r4 = [r4 + 0] 			  ## resample.c:253:17
  110360:    50 e8 a2 7a 	h[r10 + -24] = r2 			  ## resample.c:254:44
  110364:    80 fc 32 04 	r2 = r3 * r4 			  ## resample.c:253:28
  110368:    d2 ad       	r2 = r2 >>> 13 			  ## resample.c:253:50
  11036a:    13 ea ff 7f 	r3 = 32767 			  ## resample.c:168:3
  11036e:    13 ce       	cmp r2, r3			  ## resample.c:168:3
  110370:    13 c6       	r3 = r2 			  ## resample.c:168:3
  110372:    a0 03       	ifs (nzcv >= 0) {			  ## resample.c:168:3
  110374:    13 ea ff 7f 		r3 = 32767 
                               	}			  ## resample.c:168:3
  110378:    94 ea 00 80 	r4 = -32768 			  ## resample.c:168:3
  11037c:    14 ce       	cmp r2, r4			  ## resample.c:254:50
  11037e:    a0 03       	ifs (nzcv >= 0) {			  ## resample.c:254:50
  110380:    1c c6       		r4 = r3 
                               	}			  ## resample.c:254:50
  110382:    00 a1       	r0 = r0 << 1 			  ## resample.c:254:5
  110384:    68 08       	goto 208 <dh01+0x3C : 110456 >			  ## resample.c:254:5
  110386:    86 66       	[sp+ 104] = r6 
  110388:    40 44       	r0 = [sp+ 68] 			  ## resample.c:265:5
  11038a:    80 fd 09 00 	macc = r9 * r0 (s) 			  ## resample.c:265:5
  11038e:    c0 f9 00 13 	r0 = macc >>> 19 			  ## resample.c:265:5
  110392:    03 c9       	r3 = r0.b 			  ## resample.c:266:19
  110394:    41 46       	r1 = [sp+ 100] 			  ## resample.c:273:5
  110396:    61 22       	if (r1 == 0) goto 76 <speedpitch_main+0x36C : 1103e4 >			  ## resample.c:273:5
  110398:    c0 a8       	r0 = r0 >>> 8 			  ## resample.c:267:18
  11039a:    02 a2       	r2 = r0 << 2 			  ## resample.c:275:15
  11039c:    c0 43       	r0 = [sp+ 60] 			  ## resample.c:275:15
  11039e:    80 d6       	r0 = r0 - r2 			  ## resample.c:275:15
  1103a0:    1c 2d       	r4 = [addr(464)]  <.GCPI379_0 : 110570 >			  ## resample.c:275:15
  1103a2:    12 d5       	r2 = r2 + r4 			  ## resample.c:275:15
  1103a4:    12 d1       	r2 = r2 + 4 			  ## resample.c:275:15
  1103a6:    07 80       	r7 = 0 			  ## resample.c:275:15
  1103a8:    e4 87       	r4 = -4 			  ## resample.c:275:15
  1103aa:    20 e9 0d 19 	r13 = [sp+ 100] 			  ## resample.c:275:15
  1103ae:    50 ea 00 00 	r8 = 0 			  ## resample.c:275:15
  1103b2:    20 e7 06 07 	r6 = [r0 + r7] 			  ## resample.c:275:15
  1103b6:    60 e7 b6 08 	[r11 + r8] = r6 			  ## resample.c:276:28
  1103ba:    c6 d5       	r6 = r0 + r7 			  ## resample.c:275:15
  1103bc:    76 48       	r6 = [r6 + 4] 			  ## resample.c:278:11
  1103be:    60 e7 56 08 	[r5 + r8] = r6 			  ## resample.c:279:29
  1103c2:    20 e7 26 07 	r6 = [r2 + r7] 			  ## resample.c:281:11
  1103c6:    60 e7 56 04 	[r5 + r4] = r6 			  ## resample.c:282:33
  1103ca:    d6 d5       	r6 = r2 + r7 			  ## resample.c:275:15
  1103cc:    76 48       	r6 = [r6 + 4] 			  ## resample.c:284:11
  1103ce:    60 e7 b6 04 	[r11 + r4] = r6 			  ## resample.c:285:32
  1103d2:    a7 cb       	r7 += r12 			  ## resample.c:273:27
  1103d4:    24 d3       	r4 = r4 + -4 			  ## resample.c:273:27
  1103d6:    1f ed dd ff 	r13 = r13 + -1 			  ## resample.c:273:27
  1103da:    00 ed 88 04 	r8 = r8 + 4 			  ## resample.c:273:27
  1103de:    80 ef d0 00 	cmp r13, 0			  ## resample.c:273:5
  1103e2:    e7 11       	ifs (nzcv != 0) goto -50 <speedpitch_main+0x33A : 1103b2 >			  ## resample.c:273:5
  1103e4:    2f ee 32 80 	r2 = 256 - r3 			  ## resample.c:268:20
  1103e8:    c3 20       	if (r3 == 0) goto 24 <dh00+0x8 : 110402 >
  1103ea:    00 46       	r0 = [sp+ 96] 			  ## resample.c:295:6
  1103ec:    44 43       	r4 = [sp+ 52] 			  ## resample.c:295:6
  1103ee:    c1 45       	r1 = [sp+ 92] 			  ## resample.c:295:6
  1103f0:    80 ff 04 41 	macc = [r0 ++= 4] * [r4 ++= 4] (s) 			  ## resample.c:295:6
  1103f4:    09 01       	rep 2, r1 { <dh00 : 1103fa >			  ## resample.c:295:6
  1103f6:    a0 ff 04 41 		macc += [r0 ++= 4] * [r4 ++= 4] (s) 
                               	}			  ## resample.c:295:6


dh00:
  1103fa:    c0 f9 00 19 	r0 = macc >>> 25 			  ## resample.c:303:6
  1103fe:    18 06       	r0 *= r3 			  ## resample.c:304:23
  110400:    01 08       	goto 2 <dh00+0xA : 110404 >
  110402:    00 80       	r0 = 0 
  110404:    81 45       	r1 = [sp+ 88] 
  110406:    86 46       	r6 = [sp+ 104] 
  110408:    c2 20       	if (r2 == 0) goto 24 <dh01+0x8 : 110422 >
  11040a:    83 43       	r3 = [sp+ 56] 			  ## resample.c:313:6
  11040c:    04 46       	r4 = [sp+ 96] 			  ## resample.c:313:6
  11040e:    c7 45       	r7 = [sp+ 92] 			  ## resample.c:313:6
  110410:    80 ff 43 41 	macc = [r4 ++= 4] * [r3 ++= 4] (s) 			  ## resample.c:313:6
  110414:    0f 01       	rep 2, r7 { <dh01 : 11041a >			  ## resample.c:313:6
  110416:    a0 ff 43 41 		macc += [r4 ++= 4] * [r3 ++= 4] (s) 
                               	}			  ## resample.c:313:6


dh01:
  11041a:    c0 f9 03 19 	r3 = macc >>> 25 			  ## resample.c:321:6
  11041e:    1a 06       	r2 *= r3 			  ## resample.c:322:23
  110420:    80 d4       	r0 = r0 + r2 			  ## resample.c:322:15
  110422:    c7 44       	r7 = [sp+ 76] 
  110424:    20 e9 08 12 	r8 = [sp+ 72] 
  110428:    90 e8 e2 3c 	r2 = h[r14 + 240] (s) 			  ## resample.c:333:5
  11042c:    53 d0       	r3 = r2 + 1 			  ## resample.c:333:44
  11042e:    90 e8 14 b2 	r4 = h[r1 + 202] (s) 			  ## resample.c:326:29
  110432:    50 e8 a3 7a 	h[r10 + -24] = r3 			  ## resample.c:333:44
  110436:    c0 a8       	r0 = r0 >>> 8 			  ## resample.c:325:25
  110438:    20 06       	r0 *= r4 			  ## resample.c:326:27
  11043a:    c0 ad       	r0 = r0 >>> 13 			  ## resample.c:326:49
  11043c:    13 ea ff 7f 	r3 = 32767 			  ## resample.c:168:3
  110440:    03 ce       	cmp r0, r3			  ## resample.c:168:3
  110442:    03 c6       	r3 = r0 			  ## resample.c:168:3
  110444:    a0 03       	ifs (nzcv >= 0) {			  ## resample.c:168:3
  110446:    13 ea ff 7f 		r3 = 32767 
                               	}			  ## resample.c:168:3
  11044a:    94 ea 00 80 	r4 = -32768 			  ## resample.c:168:3
  11044e:    04 ce       	cmp r0, r4			  ## resample.c:333:51
  110450:    a0 03       	ifs (nzcv >= 0) {			  ## resample.c:333:51
  110452:    1c c6       		r4 = r3 
                               	}			  ## resample.c:333:51
  110454:    10 a1       	r0 = r2 << 1 			  ## resample.c:333:5
  110456:    40 d4       	r0 = r0 + r1 
  110458:    50 e8 04 36 	h[r0 + 216] = r4 
  11045c:    20 e8 e0 fe 	r0 = [r14 + -8] 			  ## resample.c:337:31
  110460:    41 cb       	r9 += r0 			  ## resample.c:337:15
  110462:    f6 d3       	r6 = r6 + -1 
  110464:    26 08       	goto 76 <dh01+0x98 : 1104b2 >
  110466:    03 45       	r3 = [sp+ 80] 
  110468:    18 a1       	r0 = r3 << 1 			  ## resample.c:347:29
  11046a:    42 41       	r2 = [sp+ 20] 			  ## resample.c:347:29
  11046c:    90 e7 20 00 	r0 = h[r2 + r0] (s) 			  ## resample.c:347:29
  110470:    c2 45       	r2 = [sp+ 92] 			  ## resample.c:347:4
  110472:    12 a2       	r2 = r2 << 2 			  ## resample.c:347:4
  110474:    04 46       	r4 = [sp+ 96] 			  ## resample.c:347:4
  110476:    24 d1       	r4 = r4 + 4 			  ## resample.c:342:8
  110478:    04 66       	[sp+ 96] = r4 
  11047a:    60 e7 40 02 	[r4 + r2] = r0 			  ## resample.c:347:26
  11047e:    20 e8 e0 ff 	r0 = [r14 + -4] 			  ## resample.c:354:31
  110482:    40 ee 99 00 	r9 = r9 - r0 			  ## resample.c:354:15
  110486:    00 43       	r0 = [sp+ 48] 
  110488:    40 d0       	r0 = r0 + 1 			  ## resample.c:355:8
  11048a:    5b d0       	r3 = r3 + 1 			  ## resample.c:347:45
  11048c:    03 65       	[sp+ 80] = r3 
  11048e:    42 45       	r2 = [sp+ 84] 			  ## resample.c:343:11
  110490:    12 d1       	r2 = r2 + 4 			  ## resample.c:343:11
  110492:    42 65       	[sp+ 84] = r2 
  110494:    00 63       	[sp+ 48] = r0 
  110496:    00 99       	cmp r0, 32			  ## resample.c:356:8
  110498:    0c 1b       	ifs (nzcv < 0) goto 24 <dh01+0x98 : 1104b2 >			  ## resample.c:356:8
  11049a:    08 c6       	r0 = r1 			  ## resample.c:359:5
  11049c:    0c c6       	r4 = r1 			  ## resample.c:359:5
  11049e:    01 46       	r1 = [sp+ 96] 			  ## resample.c:359:5
  1104a0:    42 42       	r2 = [sp+ 36] 			  ## resample.c:359:5
  1104a2:    d9 e1 5f 55 	call -316758 <memcpy : c2f50 >			  ## resample.c:359:5
  1104a6:    21 c6       	r1 = r4 
  1104a8:    c0 40       	r0 = [sp+ 12] 
  1104aa:    40 65       	[sp+ 84] = r0 
  1104ac:    00 80       	r0 = 0 
  1104ae:    00 63       	[sp+ 48] = r0 
  1104b0:    01 66       	[sp+ 96] = r1 
  1104b2:    47 20       	if (r7 == 0) goto 8 <dh01+0xA2 : 1104bc >			  ## resample.c:233:7
  1104b4:    70 c9       	r0 = r6.l 			  ## resample.c:235:12
  1104b6:    ff fb 11 f4 	ifs (nzcv != 0) goto -382 <speedpitch_main+0x2C4 : 11033c >			  ## resample.c:235:12
  1104ba:    07 08       	goto 14 <dh01+0xB0 : 1104ca >			  ## resample.c:235:12
  1104bc:    00 45       	r0 = [sp+ 80] 			  ## resample.c:242:8
  1104be:    02 44       	r2 = [sp+ 64] 			  ## resample.c:242:8
  1104c0:    02 ce       	cmp r0, r2			  ## resample.c:242:8
  1104c2:    ff fb b1 f3 	ifs (nzcv != 0) goto -394 <speedpitch_main+0x2C4 : 11033c >
  1104c6:    00 44       	r0 = [sp+ 64] 
  1104c8:    00 65       	[sp+ 80] = r0 
  1104ca:    c5 42       	r5 = [sp+ 44] 
  1104cc:    44 40       	r4 = [sp+ 4] 
  1104ce:    20 e9 0b 07 	r11 = [sp+ 28] 
  1104d2:    20 e9 0c 06 	r12 = [sp+ 24] 
  1104d6:    08 c6       	r0 = r1 			  ## resample.c:366:2
  1104d8:    01 46       	r1 = [sp+ 96] 			  ## resample.c:366:2
  1104da:    42 42       	r2 = [sp+ 36] 			  ## resample.c:366:2
  1104dc:    d9 e1 8f 53 	call -316816 <memcpy : c2f50 >			  ## resample.c:366:2
  1104e0:    60 e8 e9 03 	[r14 + 12] = r9 			  ## resample.c:367:28
  1104e4:    90 e8 e0 3c 	r0 = h[r14 + 240] (s) 			  ## resample.c:368:78
  1104e8:    02 a1       	r2 = r0 << 1 			  ## resample.c:368:100
  1104ea:    00 e5 a3 fc 	r3, r0 = d[r10 + -16] 			  ## resample.c:368:53
  1104ee:    81 40       	r1 = [sp+ 8] 			  ## resample.c:368:8
  1104f0:    ab 01       	call r3			  ## resample.c:368:8
  1104f2:    90 e8 e1 3c 	r1 = h[r14 + 240] (s) 			  ## resample.c:369:7
  1104f6:    09 a1       	r1 = r1 << 1 			  ## resample.c:369:29
  1104f8:    08 ce       	cmp r1, r0			  ## resample.c:369:6
  1104fa:    16 03       	ifs (nzcv != 0) {			  ## resample.c:371:23
  1104fc:    50 e8 a0 07 		h[r10 + 28] = r0 			  ## resample.c:371:23
  110500:    08 d6       		r0 = r1 - r0 			  ## resample.c:372:49
  110502:    50 e8 a0 86 		h[r10 + 26] = r0 
                               	} else {			  ## resample.c:372:21
  110506:    10 e8 a0 86 		r0 = h[r10 + 26] 
                               	}			  ## resample.c:372:21
  11050a:    20 e9 09 08 	r9 = [sp+ 32] 			  ## resample.c:372:21
  11050e:    01 80       	r1 = 0 			  ## resample.c:372:21
  110510:    50 e8 a1 7a 	h[r10 + -24] = r1 			  ## resample.c:374:24
  110514:    22 50       	r2 = h[r4 + 0] 			  ## resample.c:375:32
  110516:    03 45       	r3 = [sp+ 80] 			  ## resample.c:375:32
  110518:    d2 d6       	r2 = r2 - r3 			  ## resample.c:375:32
  11051a:    50 e8 a2 05 	h[r10 + 20] = r2 			  ## resample.c:375:32
  11051e:    50 e8 a3 82 	h[r10 + 10] = r3 			  ## resample.c:376:28
  110522:    50 e8 a1 7b 	h[r10 + -20] = r1 			  ## resample.c:592:25
  110526:    40 c9       	r0 = r0.l 			  ## resample.c:381:2
  110528:    50 ea 01 00 	r8 = 1 			  ## resample.c:381:2
  11052c:    02 11       	ifs (nzcv != 0) goto 4 <dh01+0x118 : 110532 >			  ## resample.c:381:2
  11052e:    50 ea 00 00 	r8 = 0 			  ## resample.c:381:2
  110532:    cb cb       	r11 += r9 			  ## resample.c:587:7
  110534:    80 ef c0 01 	cmp r12, 1
  110538:    08 1b       	ifs (nzcv < 0) goto 16 <dh01+0x130 : 11054a >
  11053a:    80 42       	r0 = [sp+ 40] 			  ## resample.c:594:9
  11053c:    2d d4       	r5 = r5 + r0 			  ## resample.c:594:9
  11053e:    80 ef 80 00 	cmp r8, 0
  110542:    50 ea 00 00 	r8 = 0 
  110546:    ff fb c0 dc 	ifs (nzcv == 0) goto -1128 <speedpitch_main+0x6A : 1100e2 >
  11054a:    20 f7 b0 01 	r0 = r11 << 1 			  ## resample.c:564:6
  11054e:    0c 08       	goto 24 <dh01+0x14E : 110568 >			  ## resample.c:564:6
  110550:    40 c9       	r0 = r0.l 			  ## resample.c:573:20
  110552:    01 ed 41 ec 	r1 = r4 + 492 			  ## resample.c:575:24
  110556:    09 50       	r1 = h[r1 + 0] 			  ## resample.c:575:24
  110558:    81 cb       	r1 += r8 			  ## resample.c:575:24
  11055a:    50 e8 a1 07 	h[r10 + 28] = r1 			  ## resample.c:575:24
  11055e:    40 ee 00 08 	r0 = r0 - r8 			  ## resample.c:576:42
  110562:    50 e8 a0 86 	h[r10 + 26] = r0 			  ## resample.c:576:22
  110566:    00 80       	r0 = 0 			  ## resample.c:576:22
  110568:    00 ed ff ec 	sp = sp + 236 
  11056c:    30 c4       	{macch, maccl} = [sp++] 
  11056e:    1e c0       	{pc, r14-r4} = [sp++] 


.GCPI379_0:
  110570:    1c 6e 11 00     < 1142300 : 0x116E1C >

enc_soft1_isr:
  110574:    c1 c5       	[--sp] = {psr, rets, reti} 			  ## encoder_mge.c:118:0
  110576:    00 c2       	[--sp] = {r3-r0} 			  ## encoder_mge.c:118:0
  110578:    08 80       	r0 = 1 			  ## encoder_mge.c:120:5
  11057a:    d9 e1 7f 4d 	call -317010 <bit_clr_swi : c2f2c >			  ## encoder_mge.c:120:5
  11057e:    c0 2a       	r0 = [addr(44)]  <.GCPI380_0 : 1105ac >			  ## encoder_mge.c:121:17
  110580:    00 4a       	r0 = [r0 + 32] 			  ## encoder_mge.c:121:17
  110582:    00 21       	if (r0 == 0) goto 32 <enc_soft1_isr+0x30 : 1105a4 >			  ## encoder_mge.c:121:17
  110584:    c0 2a       	r0 = [addr(44)]  <.GCPI380_1 : 1105b0 >			  ## encoder_mge.c:122:24
  110586:    41 4b       	r1 = [r0 + 52] 			  ## encoder_mge.c:122:24
  110588:    d1 20       	if (r1 == 0) goto 26 <enc_soft1_isr+0x30 : 1105a4 >
  11058a:    20 e8 02 10 	r2 = [r0 + 64] 			  ## encoder_mge.c:123:40
  11058e:    00 f4 20 01 	tst r2, 1			  ## encoder_mge.c:123:13
  110592:    08 10       	ifs (nzcv == 0) goto 16 <enc_soft1_isr+0x30 : 1105a4 >			  ## encoder_mge.c:123:13
  110594:    20 e8 02 10 	r2 = [r0 + 64] 			  ## encoder_mge.c:126:32
  110598:    00 f4 20 04 	tst r2, 4			  ## encoder_mge.c:126:17
  11059c:    02 03       	ifs (nzcv == 0) {			  ## encoder_mge.c:127:35
  11059e:    80 4b       		r0 = [r0 + 56] 			  ## encoder_mge.c:127:35
  1105a0:    89 48       		r1 = [r1 + 8] 			  ## encoder_mge.c:127:22
  1105a2:    a9 01       		call r1
                               	}			  ## encoder_mge.c:127:17
  1105a4:    00 c0       	{r3-r0} = [sp++] 
  1105a6:    c1 c4       	{psr, rets, reti} = [sp++] 
  1105a8:    30 00       	rti			  ## encoder_mge.c:134:1
  1105aa:    00 00       	nop			  ## encoder_mge.c:134:1


.GCPI380_0:
  1105ac:    60 1c 00 00     < 7264 : 0x1C60 >

.GCPI380_1:
  1105b0:    60 1d 00 00     < 7520 : 0x1D60 >

wfil_soft2_isr:
  1105b4:    c1 c5       	[--sp] = {psr, rets, reti} 			  ## encoder_mge.c:144:0
  1105b6:    ff e6 3f 00 	[--sp] = {r5-r0} 			  ## encoder_mge.c:144:0
  1105ba:    fc cd       	sp += -4 			  ## encoder_mge.c:144:0
  1105bc:    10 80       	r0 = 2 			  ## encoder_mge.c:145:5
  1105be:    d9 e1 5f 4b 	call -317078 <bit_clr_swi : c2f2c >			  ## encoder_mge.c:145:5
  1105c2:    45 2d       	r5 = [addr(84)]  <.GCPI381_0 : 110618 >			  ## encoder_mge.c:147:24
  1105c4:    20 e8 50 10 	r0 = [r5 + 64] 			  ## encoder_mge.c:147:24
  1105c8:    00 f4 00 04 	tst r0, 4			  ## encoder_mge.c:147:9
  1105cc:    1f 11       	ifs (nzcv != 0) goto 62 <wfil_soft2_isr+0x58 : 11060c >			  ## encoder_mge.c:147:9
  1105ce:    04 80       	r4 = 0 
  1105d0:    04 60       	[sp] = r4 			  ## encoder_mge.c:150:13
  1105d2:    28 4b       	r0 = [r5 + 48] 			  ## encoder_mge.c:152:37
  1105d4:    01 90       	r1 = sp + 0 			  ## encoder_mge.c:152:37
  1105d6:    d9 e1 9f 4d 	call -317006 <cbuf_read_alloc : c2f8c >			  ## encoder_mge.c:152:16
  1105da:    01 c6       	r1 = r0 			  ## encoder_mge.c:152:16
  1105dc:    71 21       	if (r1 == 0) goto 46 <wfil_soft2_isr+0x58 : 11060c >
  1105de:    a8 4a       	r0 = [r5 + 40] 			  ## encoder_mge.c:158:31
  1105e0:    02 40       	r2 = [sp] 			  ## encoder_mge.c:158:45
  1105e2:    80 20       	if (r0 == 0) goto 16 <wfil_soft2_isr+0x40 : 1105f4 >
  1105e4:    03 48       	r3 = [r0 + 0] 			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\common\fs\vfs.c:272:20
  1105e6:    63 20       	if (r3 == 0) goto 12 <wfil_soft2_isr+0x40 : 1105f4 >
  1105e8:    5b 4a       	r3 = [r3 + 36] 			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\common\fs\vfs.c:273:58
  1105ea:    43 20       	if (r3 == 0) goto 8 <wfil_soft2_isr+0x40 : 1105f4 >
  1105ec:    40 48       	r0 = [r0 + 4] 			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\common\fs\vfs.c:275:35
  1105ee:    ab 01       	call r3			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\common\fs\vfs.c:275:15
  1105f0:    04 c6       	r4 = r0 			  ## F:\JL\fw-AD15N-main\sdk\app\bsp\common\fs\vfs.c:275:15
  1105f2:    02 40       	r2 = [sp] 
  1105f4:    28 4b       	r0 = [r5 + 48] 			  ## encoder_mge.c:159:31
  1105f6:    11 c6       	r1 = r2 			  ## encoder_mge.c:159:9
  1105f8:    d9 e1 af 4c 	call -317036 <cbuf_read_updata : c2f90 >			  ## encoder_mge.c:159:9
  1105fc:    00 40       	r0 = [sp] 			  ## encoder_mge.c:160:21
  1105fe:    20 ce       	cmp r4, r0			  ## encoder_mge.c:160:13
  110600:    12 03       	ifs (nzcv != 0) {			  ## encoder_mge.c:161:25
  110602:    10 e2 50 04 		[r5 + 64] |= 4 			  ## encoder_mge.c:161:25
  110606:    98 80       		r0 = 19 			  ## encoder_mge.c:162:13
  110608:    ff e1 2f 1b 		call -7324
                               	} <post_event : 10e970 >			  ## encoder_mge.c:162:13
  11060c:    04 cd       	sp += 4 
  11060e:    8f e6 3f 00 	{r5-r0} = [sp++] 
  110612:    c1 c4       	{psr, rets, reti} = [sp++] 
  110614:    30 00       	rti
  110616:    00 00       	nop


.GCPI381_0:
  110618:    60 1d 00 00     < 7520 : 0x1D60 >

enc_input:
  11061c:    15 c2       	[--sp] = {rets, r5, r4} 			  ## encoder_mge.c:169:0
  11061e:    04 c6       	r4 = r0 			  ## encoder_mge.c:169:0
  110620:    a3 49       	r3 = [r4 + 24] 			  ## encoder_mge.c:172:14
  110622:    60 48       	r0 = [r4 + 4] 			  ## encoder_mge.c:172:14
  110624:    00 f4 30 02 	tst r3, 2			  ## encoder_mge.c:172:9
  110628:    06 10       	ifs (nzcv == 0) goto 12 <enc_input+0x1A : 110636 >			  ## encoder_mge.c:172:9
  11062a:    83 49       	r3 = [r0 + 24] 			  ## encoder_mge.c:173:20
  11062c:    5d c9       	r5 = r3.l 			  ## encoder_mge.c:174:16
  11062e:    2a ce       	cmp r5, r2			  ## encoder_mge.c:174:16
  110630:    90 03       	if (nzcv <= 0) {			  ## encoder_mge.c:174:16
  110632:    1a c6       		r2 = r3 
                               	}			  ## encoder_mge.c:174:16
  110634:    52 c9       	r2 = r2.l 
  110636:    d9 e1 ff 49 	call -317122 <cbuf_read : c2f78 >
  11063a:    61 48       	r1 = [r4 + 4] 			  ## encoder_mge.c:181:12
  11063c:    89 49       	r1 = [r1 + 24] 			  ## encoder_mge.c:181:12
  11063e:    40 c9       	r0 = r0.l 			  ## encoder_mge.c:187:5
  110640:    15 c0       	{pc, r5, r4} = [sp++] 			  ## encoder_mge.c:187:5


enc_output:
  110642:    15 c2       	[--sp] = {rets, r5, r4} 			  ## encoder_mge.c:190:0
  110644:    05 c6       	r5 = r0 			  ## encoder_mge.c:190:0
  110646:    a8 48       	r0 = [r5 + 8] 			  ## encoder_mge.c:194:27
  110648:    77 e1 0f cf 	call -1115680 <cbuf_write : 2c >			  ## encoder_mge.c:194:11
  11064c:    04 c6       	r4 = r0 			  ## encoder_mge.c:194:11
  11064e:    a8 48       	r0 = [r5 + 8] 			  ## encoder_mge.c:195:9
  110650:    80 49       	r0 = [r0 + 24] 			  ## encoder_mge.c:195:9
  110652:    81 ef 00 00 	cmp r0, 256			  ## encoder_mge.c:195:9
  110656:    21 03       	if (nzcv >= 0) {			  ## encoder_mge.c:196:9
  110658:    10 80       		r0 = 2 			  ## encoder_mge.c:196:9
  11065a:    d9 e1 5f 46 		call -317238
                               	} <bit_set_swi : c2f28 >			  ## encoder_mge.c:196:9
  11065e:    60 c9       	r0 = r4.l 			  ## encoder_mge.c:198:12
  110660:    15 c0       	{pc, r5, r4} = [sp++] 			  ## encoder_mge.c:198:12


dct32:
  110662:    1e c2       	[--sp] = {rets, r14-r4} 			  ## synth.c:71:0
  110664:    30 c5       	[--sp] = {macch, maccl} 			  ## synth.c:71:0
  110666:    1f ed ff 2c 	sp = sp + -212 			  ## synth.c:71:0
  11066a:    0b 65       	[sp+ 208] = r3 			  ## synth.c:71:0
  11066c:    ca 63       	[sp+ 188] = r2 			  ## synth.c:71:0
  11066e:    89 61       	[sp+ 152] = r1 			  ## synth.c:71:0
  110670:    01 c6       	r1 = r0 			  ## synth.c:359:21
  110672:    24 e8 14 1f 	r4 = [++ r1 = 124] 			  ## synth.c:359:21
  110676:    05 48       	r5 = [r0 + 0] 			  ## synth.c:359:10
  110678:    2a d7       	r2 = r5 - r4 			  ## synth.c:359:47
  11067a:    13 ea ec 3f 	r3 = 16364 			  ## synth.c:359:47
  11067e:    d3 06       	macc = r2 * r3 (s) 			  ## synth.c:359:47
  110680:    c0 f9 03 02 	r3 = macc >>> 2 			  ## synth.c:359:47
  110684:    cb 64       	[sp+ 204] = r3 			  ## synth.c:360:21
  110686:    4e 4c       	r6 = [r1 + -60] 			  ## synth.c:360:21
  110688:    c7 4b       	r7 = [r0 + 60] 			  ## synth.c:360:10
  11068a:    40 ee 78 06 	r8 = r7 - r6 			  ## synth.c:360:47
  11068e:    12 ea 24 03 	r2 = 804 			  ## synth.c:360:47
  110692:    80 fd 28 00 	macc = r8 * r2 (s) 			  ## synth.c:360:47
  110696:    c0 f9 09 02 	r9 = macc >>> 2 			  ## synth.c:360:47
  11069a:    40 ee 32 09 	r2 = r3 - r9 			  ## synth.c:363:2
  11069e:    13 ea b1 3f 	r3 = 16305 			  ## synth.c:363:2
  1106a2:    d3 06       	macc = r2 * r3 (s) 			  ## synth.c:363:2
  1106a4:    62 d5       	r2 = r4 + r5 			  ## synth.c:359:19
  1106a6:    20 f7 2a 0c 	r10 = r2 << 12 			  ## synth.c:359:30
  1106aa:    f4 d5       	r4 = r6 + r7 			  ## synth.c:360:19
  1106ac:    20 f7 4b 0c 	r11 = r4 << 12 			  ## synth.c:360:30
  1106b0:    40 ee a5 0b 	r5 = r10 - r11 			  ## synth.c:365:2
  1106b4:    c0 f9 0e 0e 	r14 = macc >>> 14 			  ## synth.c:363:2
  1106b8:    60 e9 0e 24 	[sp+ 144] = r14 			  ## synth.c:365:2
  1106bc:    eb 06       	macc = r5 * r3 (s) 			  ## synth.c:365:2
  1106be:    c0 f9 08 0e 	r8 = macc >>> 14 			  ## synth.c:365:2
  1106c2:    60 e9 08 22 	[sp+ 136] = r8 			  ## synth.c:367:21
  1106c6:    4b 4e       	r3 = [r1 + -28] 			  ## synth.c:367:21
  1106c8:    c5 49       	r5 = [r0 + 28] 			  ## synth.c:367:10
  1106ca:    ee d6       	r6 = r5 - r3 			  ## synth.c:367:48
  1106cc:    17 ea 6c 2f 	r7 = 12140 			  ## synth.c:367:48
  1106d0:    f7 06       	macc = r6 * r7 (s) 			  ## synth.c:367:48
  1106d2:    c0 f9 0c 02 	r12 = macc >>> 2 			  ## synth.c:367:48
  1106d6:    0f 4e       	r7 = [r1 + -32] 			  ## synth.c:368:21
  1106d8:    02 4a       	r2 = [r0 + 32] 			  ## synth.c:368:10
  1106da:    d4 d7       	r4 = r2 - r7 			  ## synth.c:368:48
  1106dc:    16 ea fb 2a 	r6 = 11003 			  ## synth.c:368:48
  1106e0:    e6 06       	macc = r4 * r6 (s) 			  ## synth.c:368:48
  1106e2:    c0 f9 04 02 	r4 = macc >>> 2 			  ## synth.c:368:48
  1106e6:    40 ee c6 04 	r6 = r12 - r4 			  ## synth.c:371:2
  1106ea:    55 ea 46 06 	r13 = 1606 			  ## synth.c:371:2
  1106ee:    80 fd d6 00 	macc = r6 * r13 (s) 			  ## synth.c:371:2
  1106f2:    5b d5       	r3 = r3 + r5 			  ## synth.c:367:19
  1106f4:    1b ac       	r3 = r3 << 12 			  ## synth.c:367:30
  1106f6:    d2 d5       	r2 = r2 + r7 			  ## synth.c:368:19
  1106f8:    12 ac       	r2 = r2 << 12 			  ## synth.c:368:30
  1106fa:    9d d6       	r5 = r3 - r2 			  ## synth.c:373:2
  1106fc:    c0 f9 06 0e 	r6 = macc >>> 14 			  ## synth.c:371:2
  110700:    4e 61       	[sp+ 148] = r6 			  ## synth.c:373:2
  110702:    80 fd d5 00 	macc = r5 * r13 (s) 			  ## synth.c:373:2
  110706:    00 ee b5 0a 	r5 = r11 + r10 			  ## synth.c:364:13
  11070a:    85 67       	[sp+ 120] = r5 			  ## synth.c:372:13
  11070c:    d2 d4       	r2 = r2 + r3 			  ## synth.c:372:13
  11070e:    c2 67       	[sp+ 124] = r2 			  ## synth.c:376:21
  110710:    aa d6       	r2 = r5 - r2 			  ## synth.c:376:21
  110712:    c0 f9 05 0e 	r5 = macc >>> 14 			  ## synth.c:373:2
  110716:    cd 60       	[sp+ 140] = r5 			  ## synth.c:376:21
  110718:    13 ea c5 3e 	r3 = 16069 			  ## synth.c:376:21
  11071c:    d3 06       	macc = r2 * r3 (s) 			  ## synth.c:376:21
  11071e:    40 ee 82 05 	r2 = r8 - r5 			  ## synth.c:377:21
  110722:    c0 f9 05 0e 	r5 = macc >>> 14 			  ## synth.c:376:21
  110726:    8d 63       	[sp+ 184] = r5 			  ## synth.c:377:21
  110728:    d3 06       	macc = r2 * r3 (s) 			  ## synth.c:377:21
  11072a:    ca 44       	r2 = [sp+ 204] 			  ## synth.c:362:13
  11072c:    00 ee 95 02 	r5 = r9 + r2 			  ## synth.c:362:13
  110730:    0d 60       	[sp+ 128] = r5 			  ## synth.c:370:13
  110732:    00 ee 42 0c 	r2 = r4 + r12 			  ## synth.c:370:13
  110736:    4a 60       	[sp+ 132] = r2 			  ## synth.c:378:21
  110738:    aa d6       	r2 = r5 - r2 			  ## synth.c:378:21
  11073a:    c0 f9 04 0e 	r4 = macc >>> 14 			  ## synth.c:377:21
  11073e:    8c 64       	[sp+ 200] = r4 			  ## synth.c:378:21
  110740:    d3 06       	macc = r2 * r3 (s) 			  ## synth.c:378:21
  110742:    40 ee e2 06 	r2 = r14 - r6 			  ## synth.c:379:21
  110746:    c0 f9 04 0e 	r4 = macc >>> 14 			  ## synth.c:378:21
  11074a:    4c 64       	[sp+ 196] = r4 			  ## synth.c:379:21
  11074c:    d3 06       	macc = r2 * r3 (s) 			  ## synth.c:379:21
  11074e:    c0 f9 02 0e 	r2 = macc >>> 14 			  ## synth.c:379:21
  110752:    ca 64       	[sp+ 204] = r2 			  ## synth.c:382:21
  110754:    4b 4f       	r3 = [r1 + -12] 			  ## synth.c:382:21
  110756:    c5 48       	r5 = [r0 + 12] 			  ## synth.c:382:10
  110758:    ea d6       	r2 = r5 - r3 			  ## synth.c:382:47
  11075a:    14 ea 42 3c 	r4 = 15426 			  ## synth.c:382:47
  11075e:    d4 06       	macc = r2 * r4 (s) 			  ## synth.c:382:47
  110760:    c0 f9 04 02 	r4 = macc >>> 2 			  ## synth.c:382:47
  110764:    0c 64       	[sp+ 192] = r4 			  ## synth.c:383:21
  110766:    0e 4d       	r6 = [r1 + -48] 			  ## synth.c:383:21
  110768:    07 4b       	r7 = [r0 + 48] 			  ## synth.c:383:10
  11076a:    40 ee 78 06 	r8 = r7 - r6 			  ## synth.c:383:48
  11076e:    12 ea 90 15 	r2 = 5520 			  ## synth.c:383:48
  110772:    80 fd 28 00 	macc = r8 * r2 (s) 			  ## synth.c:383:48
  110776:    c0 f9 09 02 	r9 = macc >>> 2 			  ## synth.c:383:48
  11077a:    40 ee 42 09 	r2 = r4 - r9 			  ## synth.c:386:2
  11077e:    14 ea 79 31 	r4 = 12665 			  ## synth.c:386:2
  110782:    d4 06       	macc = r2 * r4 (s) 			  ## synth.c:386:2
  110784:    5a d5       	r2 = r3 + r5 			  ## synth.c:382:19
  110786:    20 f7 2a 0c 	r10 = r2 << 12 			  ## synth.c:382:30
  11078a:    f3 d5       	r3 = r6 + r7 			  ## synth.c:383:19
  11078c:    20 f7 3b 0c 	r11 = r3 << 12 			  ## synth.c:383:30
  110790:    40 ee a5 0b 	r5 = r10 - r11 			  ## synth.c:388:2
  110794:    c0 f9 0e 0e 	r14 = macc >>> 14 			  ## synth.c:386:2
  110798:    60 e9 0e 1c 	[sp+ 112] = r14 			  ## synth.c:388:2
  11079c:    ec 06       	macc = r5 * r4 (s) 			  ## synth.c:388:2
  11079e:    c0 f9 08 0e 	r8 = macc >>> 14 			  ## synth.c:388:2
  1107a2:    60 e9 08 1a 	[sp+ 104] = r8 			  ## synth.c:390:21
  1107a6:    0c 4f       	r4 = [r1 + -16] 			  ## synth.c:390:21
  1107a8:    05 49       	r5 = [r0 + 16] 			  ## synth.c:390:10
  1107aa:    2e d7       	r6 = r5 - r4 			  ## synth.c:390:48
  1107ac:    17 ea db 39 	r7 = 14811 			  ## synth.c:390:48
  1107b0:    f7 06       	macc = r6 * r7 (s) 			  ## synth.c:390:48
  1107b2:    c0 f9 0c 02 	r12 = macc >>> 2 			  ## synth.c:390:48
  1107b6:    4f 4d       	r7 = [r1 + -44] 			  ## synth.c:391:21
  1107b8:    c2 4a       	r2 = [r0 + 44] 			  ## synth.c:391:10
  1107ba:    d3 d7       	r3 = r2 - r7 			  ## synth.c:391:48
  1107bc:    16 ea 5d 1b 	r6 = 7005 			  ## synth.c:391:48
  1107c0:    de 06       	macc = r3 * r6 (s) 			  ## synth.c:391:48
  1107c2:    c0 f9 06 02 	r6 = macc >>> 2 			  ## synth.c:391:48
  1107c6:    40 ee c3 06 	r3 = r12 - r6 			  ## synth.c:394:2
  1107ca:    55 ea 9a 28 	r13 = 10394 			  ## synth.c:394:2
  1107ce:    80 fd d3 00 	macc = r3 * r13 (s) 			  ## synth.c:394:2
  1107d2:    63 d5       	r3 = r4 + r5 			  ## synth.c:390:19
  1107d4:    1b ac       	r3 = r3 << 12 			  ## synth.c:390:30
  1107d6:    d2 d5       	r2 = r2 + r7 			  ## synth.c:391:19
  1107d8:    12 ac       	r2 = r2 << 12 			  ## synth.c:391:30
  1107da:    9c d6       	r4 = r3 - r2 			  ## synth.c:396:2
  1107dc:    c0 f9 05 0e 	r5 = macc >>> 14 			  ## synth.c:394:2
  1107e0:    45 67       	[sp+ 116] = r5 			  ## synth.c:396:2
  1107e2:    80 fd d4 00 	macc = r4 * r13 (s) 			  ## synth.c:396:2
  1107e6:    00 ee b4 0a 	r4 = r11 + r10 			  ## synth.c:387:13
  1107ea:    c4 65       	[sp+ 92] = r4 			  ## synth.c:395:13
  1107ec:    d2 d4       	r2 = r2 + r3 			  ## synth.c:395:13
  1107ee:    42 66       	[sp+ 100] = r2 			  ## synth.c:399:21
  1107f0:    a2 d6       	r2 = r4 - r2 			  ## synth.c:399:21
  1107f2:    c0 f9 03 0e 	r3 = macc >>> 14 			  ## synth.c:396:2
  1107f6:    c3 66       	[sp+ 108] = r3 			  ## synth.c:399:21
  1107f8:    14 ea 7c 0c 	r4 = 3196 			  ## synth.c:399:21
  1107fc:    d4 06       	macc = r2 * r4 (s) 			  ## synth.c:399:21
  1107fe:    40 ee 82 03 	r2 = r8 - r3 			  ## synth.c:400:21
  110802:    c0 f9 03 0e 	r3 = macc >>> 14 			  ## synth.c:399:21
  110806:    8b 62       	[sp+ 168] = r3 			  ## synth.c:400:21
  110808:    d4 06       	macc = r2 * r4 (s) 			  ## synth.c:400:21
  11080a:    0a 44       	r2 = [sp+ 192] 			  ## synth.c:385:13
  11080c:    00 ee 93 02 	r3 = r9 + r2 			  ## synth.c:385:13
  110810:    83 65       	[sp+ 88] = r3 			  ## synth.c:393:13
  110812:    00 ee 62 0c 	r2 = r6 + r12 			  ## synth.c:393:13
  110816:    02 66       	[sp+ 96] = r2 			  ## synth.c:401:21
  110818:    9a d6       	r2 = r3 - r2 			  ## synth.c:401:21
  11081a:    c0 f9 03 0e 	r3 = macc >>> 14 			  ## synth.c:400:21
  11081e:    4b 63       	[sp+ 180] = r3 			  ## synth.c:401:21
  110820:    d4 06       	macc = r2 * r4 (s) 			  ## synth.c:401:21
  110822:    40 ee e2 05 	r2 = r14 - r5 			  ## synth.c:402:21
  110826:    c0 f9 03 0e 	r3 = macc >>> 14 			  ## synth.c:401:21
  11082a:    cb 62       	[sp+ 172] = r3 			  ## synth.c:402:21
  11082c:    d4 06       	macc = r2 * r4 (s) 			  ## synth.c:402:21
  11082e:    c0 f9 02 0e 	r2 = macc >>> 14 			  ## synth.c:402:21
  110832:    0a 64       	[sp+ 192] = r2 			  ## synth.c:405:21
  110834:    ca 4f       	r2 = [r1 + -4] 			  ## synth.c:405:21
  110836:    45 48       	r5 = [r0 + 4] 			  ## synth.c:405:10
  110838:    ac d6       	r4 = r5 - r2 			  ## synth.c:405:48
  11083a:    16 ea 4f 3f 	r6 = 16207 			  ## synth.c:405:48
  11083e:    e6 06       	macc = r4 * r6 (s) 			  ## synth.c:405:48
  110840:    c0 f9 07 02 	r7 = macc >>> 2 			  ## synth.c:405:48
  110844:    0f 63       	[sp+ 176] = r7 			  ## synth.c:406:21
  110846:    8e 4c       	r6 = [r1 + -56] 			  ## synth.c:406:21
  110848:    84 4b       	r4 = [r0 + 56] 			  ## synth.c:406:10
  11084a:    40 ee 48 06 	r8 = r4 - r6 			  ## synth.c:406:48
  11084e:    13 ea 64 09 	r3 = 2404 			  ## synth.c:406:48
  110852:    80 fd 38 00 	macc = r8 * r3 (s) 			  ## synth.c:406:48
  110856:    c0 f9 0a 02 	r10 = macc >>> 2 			  ## synth.c:406:48
  11085a:    40 ee 73 0a 	r3 = r7 - r10 			  ## synth.c:409:2
  11085e:    17 ea 3f 3d 	r7 = 15679 			  ## synth.c:409:2
  110862:    df 06       	macc = r3 * r7 (s) 			  ## synth.c:409:2
  110864:    52 d5       	r2 = r2 + r5 			  ## synth.c:405:19
  110866:    20 f7 2b 0c 	r11 = r2 << 12 			  ## synth.c:405:30
  11086a:    33 d5       	r3 = r6 + r4 			  ## synth.c:406:19
  11086c:    20 f7 3c 0c 	r12 = r3 << 12 			  ## synth.c:406:30
  110870:    40 ee b4 0c 	r4 = r11 - r12 			  ## synth.c:411:2
  110874:    c0 f9 0e 0e 	r14 = macc >>> 14 			  ## synth.c:409:2
  110878:    60 e9 0e 14 	[sp+ 80] = r14 			  ## synth.c:411:2
  11087c:    e7 06       	macc = r4 * r7 (s) 			  ## synth.c:411:2
  11087e:    c0 f9 09 0e 	r9 = macc >>> 14 			  ## synth.c:411:2
  110882:    60 e9 09 12 	[sp+ 72] = r9 			  ## synth.c:413:21
  110886:    8c 4e       	r4 = [r1 + -24] 			  ## synth.c:413:21
  110888:    85 49       	r5 = [r0 + 24] 			  ## synth.c:413:10
  11088a:    2e d7       	r6 = r5 - r4 			  ## synth.c:413:49
  11088c:    17 ea 68 33 	r7 = 13160 			  ## synth.c:413:49
  110890:    f7 06       	macc = r6 * r7 (s) 			  ## synth.c:413:49
  110892:    c0 f9 08 02 	r8 = macc >>> 2 			  ## synth.c:413:49
  110896:    cf 4d       	r7 = [r1 + -36] 			  ## synth.c:414:21
  110898:    42 4a       	r2 = [r0 + 36] 			  ## synth.c:414:10
  11089a:    d3 d7       	r3 = r2 - r7 			  ## synth.c:414:49
  11089c:    16 ea 20 26 	r6 = 9760 			  ## synth.c:414:49
  1108a0:    de 06       	macc = r3 * r6 (s) 			  ## synth.c:414:49
  1108a2:    c0 f9 03 02 	r3 = macc >>> 2 			  ## synth.c:414:49
  1108a6:    40 ee 86 03 	r6 = r8 - r3 			  ## synth.c:417:2
  1108aa:    55 ea 94 12 	r13 = 4756 			  ## synth.c:417:2
  1108ae:    80 fd d6 00 	macc = r6 * r13 (s) 			  ## synth.c:417:2
  1108b2:    64 d5       	r4 = r4 + r5 			  ## synth.c:413:19
  1108b4:    24 ac       	r4 = r4 << 12 			  ## synth.c:413:30
  1108b6:    d2 d5       	r2 = r2 + r7 			  ## synth.c:414:19
  1108b8:    12 ac       	r2 = r2 << 12 			  ## synth.c:414:30
  1108ba:    a5 d6       	r5 = r4 - r2 			  ## synth.c:419:2
  1108bc:    c0 f9 06 0e 	r6 = macc >>> 14 			  ## synth.c:417:2
  1108c0:    46 65       	[sp+ 84] = r6 			  ## synth.c:419:2
  1108c2:    80 fd d5 00 	macc = r5 * r13 (s) 			  ## synth.c:419:2
  1108c6:    00 ee c5 0b 	r5 = r12 + r11 			  ## synth.c:410:13
  1108ca:    85 63       	[sp+ 56] = r5 			  ## synth.c:418:13
  1108cc:    12 d5       	r2 = r2 + r4 			  ## synth.c:418:13
  1108ce:    02 63       	[sp+ 48] = r2 			  ## synth.c:422:21
  1108d0:    aa d6       	r2 = r5 - r2 			  ## synth.c:422:21
  1108d2:    c0 f9 05 0e 	r5 = macc >>> 14 			  ## synth.c:419:2
  1108d6:    c5 64       	[sp+ 76] = r5 			  ## synth.c:422:21
  1108d8:    14 ea 37 35 	r4 = 13623 			  ## synth.c:422:21
  1108dc:    d4 06       	macc = r2 * r4 (s) 			  ## synth.c:422:21
  1108de:    40 ee 92 05 	r2 = r9 - r5 			  ## synth.c:423:21
  1108e2:    c0 f9 05 0e 	r5 = macc >>> 14 			  ## synth.c:422:21
  1108e6:    cd 61       	[sp+ 156] = r5 			  ## synth.c:423:21
  1108e8:    d4 06       	macc = r2 * r4 (s) 			  ## synth.c:423:21
  1108ea:    0a 43       	r2 = [sp+ 176] 			  ## synth.c:408:13
  1108ec:    00 ee a5 02 	r5 = r10 + r2 			  ## synth.c:408:13
  1108f0:    c5 63       	[sp+ 60] = r5 			  ## synth.c:416:13
  1108f2:    00 ee 32 08 	r2 = r3 + r8 			  ## synth.c:416:13
  1108f6:    42 64       	[sp+ 68] = r2 			  ## synth.c:424:21
  1108f8:    aa d6       	r2 = r5 - r2 			  ## synth.c:424:21
  1108fa:    c0 f9 03 0e 	r3 = macc >>> 14 			  ## synth.c:423:21
  1108fe:    4b 62       	[sp+ 164] = r3 			  ## synth.c:424:21
  110900:    d4 06       	macc = r2 * r4 (s) 			  ## synth.c:424:21
  110902:    40 ee e2 06 	r2 = r14 - r6 			  ## synth.c:425:21
  110906:    c0 f9 03 0e 	r3 = macc >>> 14 			  ## synth.c:424:21
  11090a:    0b 62       	[sp+ 160] = r3 			  ## synth.c:425:21
  11090c:    d4 06       	macc = r2 * r4 (s) 			  ## synth.c:425:21
  11090e:    c0 f9 02 0e 	r2 = macc >>> 14 			  ## synth.c:425:21
  110912:    0a 63       	[sp+ 176] = r2 			  ## synth.c:428:21
  110914:    8a 4f       	r2 = [r1 + -8] 			  ## synth.c:428:21
  110916:    83 48       	r3 = [r0 + 8] 			  ## synth.c:428:10
  110918:    9c d6       	r4 = r3 - r2 			  ## synth.c:428:48
  11091a:    16 ea 15 3e 	r6 = 15893 			  ## synth.c:428:48
  11091e:    e6 06       	macc = r4 * r6 (s) 			  ## synth.c:428:48
  110920:    c0 f9 0b 02 	r11 = macc >>> 2 			  ## synth.c:428:48
  110924:    cc 4c       	r4 = [r1 + -52] 			  ## synth.c:429:21
  110926:    46 4b       	r6 = [r0 + 52] 			  ## synth.c:429:10
  110928:    40 ee 68 04 	r8 = r6 - r4 			  ## synth.c:429:48
  11092c:    17 ea 8d 0f 	r7 = 3981 			  ## synth.c:429:48
  110930:    80 fd 78 00 	macc = r8 * r7 (s) 			  ## synth.c:429:48
  110934:    c0 f9 0a 02 	r10 = macc >>> 2 			  ## synth.c:429:48
  110938:    40 ee b7 0a 	r7 = r11 - r10 			  ## synth.c:432:2
  11093c:    15 ea 71 38 	r5 = 14449 			  ## synth.c:432:2
  110940:    fd 06       	macc = r7 * r5 (s) 			  ## synth.c:432:2
  110942:    d2 d4       	r2 = r2 + r3 			  ## synth.c:428:19
  110944:    13 ac       	r3 = r2 << 12 			  ## synth.c:428:30
  110946:    a2 d5       	r2 = r4 + r6 			  ## synth.c:429:19
  110948:    14 ac       	r4 = r2 << 12 			  ## synth.c:429:30
  11094a:    1a d7       	r2 = r3 - r4 			  ## synth.c:434:2
  11094c:    c0 f9 09 0e 	r9 = macc >>> 14 			  ## synth.c:432:2
  110950:    60 e9 09 0a 	[sp+ 40] = r9 			  ## synth.c:434:2
  110954:    d5 06       	macc = r2 * r5 (s) 			  ## synth.c:434:2
  110956:    c0 f9 08 0e 	r8 = macc >>> 14 			  ## synth.c:434:2
  11095a:    60 e9 08 0b 	[sp+ 44] = r8 			  ## synth.c:436:21
  11095e:    ca 4e       	r2 = [r1 + -20] 			  ## synth.c:436:21
  110960:    46 49       	r6 = [r0 + 20] 			  ## synth.c:436:10
  110962:    b7 d6       	r7 = r6 - r2 			  ## synth.c:436:49
  110964:    56 ea e5 36 	r14 = 14053 			  ## synth.c:436:49
  110968:    80 fd e7 00 	macc = r7 * r14 (s) 			  ## synth.c:436:49
  11096c:    c0 f9 0e 02 	r14 = macc >>> 2 			  ## synth.c:436:49
  110970:    89 4d       	r1 = [r1 + -40] 			  ## synth.c:437:21
  110972:    80 4a       	r0 = [r0 + 40] 			  ## synth.c:437:10
  110974:    47 d6       	r7 = r0 - r1 			  ## synth.c:437:49
  110976:    55 ea e7 20 	r13 = 8423 			  ## synth.c:437:49
  11097a:    80 fd d7 00 	macc = r7 * r13 (s) 			  ## synth.c:437:49
  11097e:    c0 f9 0d 02 	r13 = macc >>> 2 			  ## synth.c:437:49
  110982:    40 ee e7 0d 	r7 = r14 - r13 			  ## synth.c:440:2
  110986:    15 ea 2b 1e 	r5 = 7723 			  ## synth.c:440:2
  11098a:    fd 06       	macc = r7 * r5 (s) 			  ## synth.c:440:2
  11098c:    92 d5       	r2 = r2 + r6 			  ## synth.c:436:19
  11098e:    16 ac       	r6 = r2 << 12 			  ## synth.c:436:30
  110990:    40 d4       	r0 = r0 + r1 			  ## synth.c:437:19
  110992:    00 ac       	r0 = r0 << 12 			  ## synth.c:437:30
  110994:    31 d6       	r1 = r6 - r0 			  ## synth.c:442:2
  110996:    c0 f9 0c 0e 	r12 = macc >>> 14 			  ## synth.c:440:2
  11099a:    cd 06       	macc = r1 * r5 (s) 			  ## synth.c:442:2
  11099c:    e4 d4       	r4 = r4 + r3 			  ## synth.c:433:13
  11099e:    80 d5       	r0 = r0 + r6 			  ## synth.c:441:13
  1109a0:    23 d6       	r3 = r4 - r0 			  ## synth.c:445:21
  1109a2:    c0 f9 02 0e 	r2 = macc >>> 14 			  ## synth.c:442:2
  1109a6:    15 ea 8e 23 	r5 = 9102 			  ## synth.c:445:21
  1109aa:    dd 06       	macc = r3 * r5 (s) 			  ## synth.c:445:21
  1109ac:    40 ee 83 02 	r3 = r8 - r2 			  ## synth.c:446:21
  1109b0:    c0 f9 01 0e 	r1 = macc >>> 14 			  ## synth.c:445:21
  1109b4:    01 60       	[sp] = r1 			  ## synth.c:446:21
  1109b6:    dd 06       	macc = r3 * r5 (s) 			  ## synth.c:446:21
  1109b8:    00 ee a1 0b 	r1 = r10 + r11 			  ## synth.c:431:13
  1109bc:    f5 cb       	r13 += r14 			  ## synth.c:439:13
  1109be:    40 ee 13 0d 	r3 = r1 - r13 			  ## synth.c:447:21
  1109c2:    c0 f9 0e 0e 	r14 = macc >>> 14 			  ## synth.c:446:21
  1109c6:    60 e9 0e 10 	[sp+ 64] = r14 			  ## synth.c:447:21
  1109ca:    dd 06       	macc = r3 * r5 (s) 			  ## synth.c:447:21
  1109cc:    40 ee 93 0c 	r3 = r9 - r12 			  ## synth.c:448:21
  1109d0:    c0 f9 07 0e 	r7 = macc >>> 14 			  ## synth.c:447:21
  1109d4:    47 63       	[sp+ 52] = r7 			  ## synth.c:448:21
  1109d6:    dd 06       	macc = r3 * r5 (s) 			  ## synth.c:448:21
  1109d8:    c3 47       	r3 = [sp+ 124] 			  ## synth.c:376:13
  1109da:    85 47       	r5 = [sp+ 120] 			  ## synth.c:376:13
  1109dc:    5e d5       	r6 = r3 + r5 			  ## synth.c:376:13
  1109de:    c6 67       	[sp+ 124] = r6 			  ## synth.c:399:13
  1109e0:    43 46       	r3 = [sp+ 100] 			  ## synth.c:399:13
  1109e2:    c5 45       	r5 = [sp+ 92] 			  ## synth.c:399:13
  1109e4:    00 ee 39 05 	r9 = r3 + r5 			  ## synth.c:399:13
  1109e8:    00 ee 95 06 	r5 = r9 + r6 			  ## synth.c:452:14
  1109ec:    83 43       	r3 = [sp+ 56] 			  ## synth.c:422:13
  1109ee:    06 43       	r6 = [sp+ 48] 			  ## synth.c:422:13
  1109f0:    9b d5       	r3 = r3 + r6 			  ## synth.c:422:13
  1109f2:    43 62       	[sp+ 36] = r3 			  ## synth.c:445:13
  1109f4:    00 d5       	r0 = r0 + r4 			  ## synth.c:445:13
  1109f6:    40 60       	[sp+ 4] = r0 			  ## synth.c:453:14
  1109f8:    c6 d4       	r6 = r0 + r3 			  ## synth.c:453:14
  1109fa:    70 d5       	r0 = r6 + r5 			  ## synth.c:455:26
  1109fc:    60 f7 0b 0c 	r11 = r0 >> 12 			  ## synth.c:455:26
  110a00:    88 41       	r0 = [sp+ 152] 			  ## synth.c:455:11
  110a02:    04 a1       	r4 = r0 << 1 			  ## synth.c:455:11
  110a04:    08 45       	r0 = [sp+ 208] 			  ## synth.c:455:11
  110a06:    00 ee 0a 04 	r10 = r0 + r4 			  ## synth.c:455:11
  110a0a:    c0 f9 08 0e 	r8 = macc >>> 14 			  ## synth.c:448:21
  110a0e:    60 e9 08 19 	[sp+ 100] = r8 
  110a12:    00 ed a0 d8 	r0 = r10 + 216 
  110a16:    50 e8 0b 06 	h[r0 + 24] = r11 			  ## synth.c:455:24
  110a1a:    ad d7       	r5 = r5 - r6 			  ## synth.c:457:2
  110a1c:    13 ea 41 2d 	r3 = 11585 			  ## synth.c:457:2
  110a20:    eb 06       	macc = r5 * r3 (s) 			  ## synth.c:457:2
  110a22:    c0 f9 05 0e 	r5 = macc >>> 14 			  ## synth.c:457:2
  110a26:    6d ac       	r5 = r5 >> 12 			  ## synth.c:458:17
  110a28:    cb 43       	r3 = [sp+ 188] 			  ## synth.c:458:15
  110a2a:    50 e7 35 04 	h[r3 + r4] = r5 			  ## synth.c:458:15
  110a2e:    63 c6       	r11 = r4 			  ## synth.c:458:15
  110a30:    60 e9 0b 17 	[sp+ 92] = r11 			  ## synth.c:378:13
  110a34:    4b 40       	r3 = [sp+ 132] 			  ## synth.c:378:13
  110a36:    0c 40       	r4 = [sp+ 128] 			  ## synth.c:378:13
  110a38:    1d d5       	r5 = r3 + r4 			  ## synth.c:378:13
  110a3a:    0d 60       	[sp+ 128] = r5 			  ## synth.c:401:13
  110a3c:    03 46       	r3 = [sp+ 96] 			  ## synth.c:401:13
  110a3e:    84 45       	r4 = [sp+ 88] 			  ## synth.c:401:13
  110a40:    1b d5       	r3 = r3 + r4 			  ## synth.c:401:13
  110a42:    03 61       	[sp+ 16] = r3 			  ## synth.c:460:14
  110a44:    5b d5       	r3 = r3 + r5 			  ## synth.c:460:14
  110a46:    4b 60       	[sp+ 132] = r3 			  ## synth.c:424:13
  110a48:    44 44       	r4 = [sp+ 68] 			  ## synth.c:424:13
  110a4a:    c5 43       	r5 = [sp+ 60] 			  ## synth.c:424:13
  110a4c:    64 d5       	r4 = r4 + r5 			  ## synth.c:424:13
  110a4e:    c4 60       	[sp+ 12] = r4 			  ## synth.c:447:13
  110a50:    4d cb       	r13 += r1 			  ## synth.c:447:13
  110a52:    00 ee d1 04 	r1 = r13 + r4 			  ## synth.c:461:14
  110a56:    89 61       	[sp+ 152] = r1 			  ## synth.c:463:14
  110a58:    c9 d4       	r1 = r1 + r3 			  ## synth.c:463:14
  110a5a:    4e ac       	r6 = r1 >> 12 			  ## synth.c:465:26
  110a5c:    86 70       	h[r0 + 8] = r6 			  ## synth.c:465:24
  110a5e:    cb 40       	r3 = [sp+ 140] 			  ## synth.c:377:13
  110a60:    8c 40       	r4 = [sp+ 136] 			  ## synth.c:377:13
  110a62:    1d d5       	r5 = r3 + r4 			  ## synth.c:377:13
  110a64:    85 61       	[sp+ 24] = r5 			  ## synth.c:400:13
  110a66:    c3 46       	r3 = [sp+ 108] 			  ## synth.c:400:13
  110a68:    84 46       	r4 = [sp+ 104] 			  ## synth.c:400:13
  110a6a:    1b d5       	r3 = r3 + r4 			  ## synth.c:400:13
  110a6c:    c3 66       	[sp+ 108] = r3 			  ## synth.c:467:14
  110a6e:    5b d5       	r3 = r3 + r5 			  ## synth.c:467:14
  110a70:    03 66       	[sp+ 96] = r3 			  ## synth.c:423:13
  110a72:    c4 44       	r4 = [sp+ 76] 			  ## synth.c:423:13
  110a74:    85 44       	r5 = [sp+ 72] 			  ## synth.c:423:13
  110a76:    64 d5       	r4 = r4 + r5 			  ## synth.c:423:13
  110a78:    44 61       	[sp+ 20] = r4 			  ## synth.c:446:13
  110a7a:    c5 42       	r5 = [sp+ 44] 			  ## synth.c:446:13
  110a7c:    52 d5       	r2 = r2 + r5 			  ## synth.c:446:13
  110a7e:    02 63       	[sp+ 48] = r2 			  ## synth.c:468:14
  110a80:    12 d5       	r2 = r2 + r4 			  ## synth.c:468:14
  110a82:    82 66       	[sp+ 104] = r2 			  ## synth.c:470:14
  110a84:    d4 d4       	r4 = r2 + r3 			  ## synth.c:470:14
  110a86:    62 ac       	r2 = r4 >> 12 			  ## synth.c:472:26
  110a88:    82 73       	h[r0 + -8] = r2 			  ## synth.c:472:24
  110a8a:    4a 41       	r2 = [sp+ 148] 			  ## synth.c:379:13
  110a8c:    0b 41       	r3 = [sp+ 144] 			  ## synth.c:379:13
  110a8e:    d5 d4       	r5 = r2 + r3 			  ## synth.c:379:13
  110a90:    85 63       	[sp+ 56] = r5 			  ## synth.c:402:13
  110a92:    42 47       	r2 = [sp+ 116] 			  ## synth.c:402:13
  110a94:    03 47       	r3 = [sp+ 112] 			  ## synth.c:402:13
  110a96:    d2 d4       	r2 = r2 + r3 			  ## synth.c:402:13
  110a98:    42 67       	[sp+ 116] = r2 			  ## synth.c:474:14
  110a9a:    52 d5       	r2 = r2 + r5 			  ## synth.c:474:14
  110a9c:    8a 60       	[sp+ 136] = r2 			  ## synth.c:425:13
  110a9e:    43 45       	r3 = [sp+ 84] 			  ## synth.c:425:13
  110aa0:    05 45       	r5 = [sp+ 80] 			  ## synth.c:425:13
  110aa2:    5b d5       	r3 = r3 + r5 			  ## synth.c:425:13
  110aa4:    03 67       	[sp+ 112] = r3 			  ## synth.c:448:13
  110aa6:    85 42       	r5 = [sp+ 40] 			  ## synth.c:448:13
  110aa8:    a5 cb       	r5 += r12 			  ## synth.c:448:13
  110aaa:    85 60       	[sp+ 8] = r5 			  ## synth.c:475:14
  110aac:    5b d5       	r3 = r3 + r5 			  ## synth.c:475:14
  110aae:    cb 60       	[sp+ 140] = r3 			  ## synth.c:477:14
  110ab0:    9b d4       	r3 = r3 + r2 			  ## synth.c:477:14
  110ab2:    1a a1       	r2 = r3 << 1 			  ## synth.c:479:14
  110ab4:    51 d6       	r1 = r2 - r1 			  ## synth.c:479:19
  110ab6:    4a ac       	r2 = r1 >> 12 			  ## synth.c:481:26
  110ab8:    82 72       	h[r0 + -24] = r2 			  ## synth.c:481:24
  110aba:    88 43       	r0 = [sp+ 184] 			  ## synth.c:483:14
  110abc:    8a 42       	r2 = [sp+ 168] 			  ## synth.c:483:14
  110abe:    12 d4       	r2 = r2 + r0 			  ## synth.c:483:14
  110ac0:    82 62       	[sp+ 40] = r2 			  ## synth.c:484:14
  110ac2:    c8 41       	r0 = [sp+ 156] 			  ## synth.c:484:14
  110ac4:    20 e9 0c 00 	r12 = [sp] 			  ## synth.c:484:14
  110ac8:    a0 cb       	r0 += r12 			  ## synth.c:484:14
  110aca:    c0 62       	[sp+ 44] = r0 			  ## synth.c:486:14
  110acc:    80 d4       	r0 = r0 + r2 			  ## synth.c:486:14
  110ace:    00 62       	[sp+ 32] = r0 			  ## synth.c:488:26
  110ad0:    40 ac       	r0 = r0 >> 12 			  ## synth.c:488:26
  110ad2:    96 c6       	r6 = r10 
  110ad4:    c6 61       	[sp+ 28] = r6 
  110ad6:    00 ed 62 90 	r2 = r6 + 144 
  110ada:    50 e8 20 08 	h[r2 + 32] = r0 			  ## synth.c:488:24
  110ade:    48 44       	r0 = [sp+ 196] 			  ## synth.c:490:14
  110ae0:    cd 42       	r5 = [sp+ 172] 			  ## synth.c:490:14
  110ae2:    2d d4       	r5 = r5 + r0 			  ## synth.c:490:14
  110ae4:    85 64       	[sp+ 72] = r5 			  ## synth.c:491:14
  110ae6:    08 42       	r0 = [sp+ 160] 			  ## synth.c:491:14
  110ae8:    c0 d5       	r0 = r0 + r7 			  ## synth.c:491:14
  110aea:    c0 64       	[sp+ 76] = r0 
  110aec:    40 d5       	r0 = r0 + r5 			  ## synth.c:493:14
  110aee:    c0 63       	[sp+ 60] = r0 			  ## synth.c:495:14
  110af0:    00 a1       	r0 = r0 << 1 			  ## synth.c:495:14
  110af2:    40 d6       	r0 = r0 - r1 			  ## synth.c:495:19
  110af4:    41 ac       	r1 = r0 >> 12 			  ## synth.c:497:26
  110af6:    11 71       	h[r2 + 16] = r1 			  ## synth.c:497:24
  110af8:    89 44       	r1 = [sp+ 200] 			  ## synth.c:499:14
  110afa:    4d 43       	r5 = [sp+ 180] 			  ## synth.c:499:14
  110afc:    6d d4       	r5 = r5 + r1 			  ## synth.c:499:14
  110afe:    45 65       	[sp+ 84] = r5 			  ## synth.c:500:14
  110b00:    49 42       	r1 = [sp+ 164] 			  ## synth.c:500:14
  110b02:    b1 cb       	r1 += r14 			  ## synth.c:500:14
  110b04:    81 65       	[sp+ 88] = r1 
  110b06:    49 d5       	r1 = r1 + r5 			  ## synth.c:502:14
  110b08:    01 65       	[sp+ 80] = r1 			  ## synth.c:504:15
  110b0a:    09 a1       	r1 = r1 << 1 			  ## synth.c:504:15
  110b0c:    0d d7       	r5 = r1 - r4 			  ## synth.c:504:20
  110b0e:    6c ac       	r4 = r5 >> 12 			  ## synth.c:506:26
  110b10:    14 70       	h[r2 + 0] = r4 			  ## synth.c:506:24
  110b12:    c9 44       	r1 = [sp+ 204] 			  ## synth.c:508:14
  110b14:    0c 44       	r4 = [sp+ 192] 			  ## synth.c:508:14
  110b16:    64 d4       	r4 = r4 + r1 			  ## synth.c:508:14
  110b18:    0c 61       	[sp+ 144] = r4 			  ## synth.c:509:14
  110b1a:    09 43       	r1 = [sp+ 176] 			  ## synth.c:509:14
  110b1c:    81 cb       	r1 += r8 			  ## synth.c:509:14
  110b1e:    49 61       	[sp+ 148] = r1 
  110b20:    09 d5       	r1 = r1 + r4 			  ## synth.c:511:14
  110b22:    81 67       	[sp+ 120] = r1 			  ## synth.c:513:15
  110b24:    0c a1       	r4 = r1 << 1 			  ## synth.c:513:15
  110b26:    e4 d6       	r4 = r4 - r3 			  ## synth.c:513:20
  110b28:    23 a1       	r3 = r4 << 1 			  ## synth.c:515:14
  110b2a:    19 d6       	r1 = r3 - r0 			  ## synth.c:515:19
  110b2c:    4b ac       	r3 = r1 >> 12 			  ## synth.c:517:26
  110b2e:    13 73       	h[r2 + -16] = r3 			  ## synth.c:517:24
  110b30:    c0 47       	r0 = [sp+ 124] 			  ## synth.c:519:2
  110b32:    40 ee 03 09 	r3 = r0 - r9 			  ## synth.c:519:2
  110b36:    10 ea 21 3b 	r0 = 15137 			  ## synth.c:519:2
  110b3a:    d8 06       	macc = r3 * r0 (s) 			  ## synth.c:519:2
  110b3c:    40 42       	r0 = [sp+ 36] 			  ## synth.c:520:2
  110b3e:    43 40       	r3 = [sp+ 4] 			  ## synth.c:520:2
  110b40:    40 ee 09 03 	r9 = r0 - r3 			  ## synth.c:520:2
  110b44:    c0 f9 0a 0e 	r10 = macc >>> 14 			  ## synth.c:519:2
  110b48:    10 ea 7e 18 	r0 = 6270 			  ## synth.c:520:2
  110b4c:    80 fd 09 00 	macc = r9 * r0 (s) 			  ## synth.c:520:2
  110b50:    c0 f9 03 0e 	r3 = macc >>> 14 			  ## synth.c:520:2
  110b54:    00 ee 30 0a 	r0 = r3 + r10 			  ## synth.c:521:14
  110b58:    47 ac       	r7 = r0 >> 12 			  ## synth.c:523:26
  110b5a:    17 72       	h[r2 + -32] = r7 			  ## synth.c:523:24
  110b5c:    40 ee a2 03 	r2 = r10 - r3 			  ## synth.c:525:2
  110b60:    13 ea 41 2d 	r3 = 11585 			  ## synth.c:525:2
  110b64:    d3 06       	macc = r2 * r3 (s) 			  ## synth.c:525:2
  110b66:    ca 43       	r2 = [sp+ 188] 			  ## synth.c:458:2
  110b68:    00 ee 23 0b 	r3 = r2 + r11 			  ## synth.c:458:2
  110b6c:    c0 f9 02 0e 	r2 = macc >>> 14 			  ## synth.c:525:2
  110b70:    12 a1       	r2 = r2 << 1 			  ## synth.c:526:17
  110b72:    10 d6       	r0 = r2 - r0 			  ## synth.c:526:17
  110b74:    40 ac       	r0 = r0 >> 12 			  ## synth.c:526:17
  110b76:    00 ed 32 90 	r2 = r3 + 144 			  ## synth.c:526:17
  110b7a:    42 64       	[sp+ 68] = r2 			  ## synth.c:526:17
  110b7c:    59 c6       	r9 = r3 			  ## synth.c:526:17
  110b7e:    10 73       	h[r2 + -16] = r0 			  ## synth.c:526:15
  110b80:    08 40       	r0 = [sp+ 128] 			  ## synth.c:528:2
  110b82:    02 41       	r2 = [sp+ 16] 			  ## synth.c:528:2
  110b84:    80 d6       	r0 = r0 - r2 			  ## synth.c:528:2
  110b86:    12 ea 21 3b 	r2 = 15137 			  ## synth.c:519:2
  110b8a:    c2 06       	macc = r0 * r2 (s) 			  ## synth.c:528:2
  110b8c:    c0 40       	r0 = [sp+ 12] 			  ## synth.c:529:2
  110b8e:    40 ee 00 0d 	r0 = r0 - r13 			  ## synth.c:529:2
  110b92:    c0 f9 03 0e 	r3 = macc >>> 14 			  ## synth.c:528:2
  110b96:    0b 60       	[sp+ 128] = r3 			  ## synth.c:529:2
  110b98:    17 ea 7e 18 	r7 = 6270 			  ## synth.c:520:2
  110b9c:    c7 06       	macc = r0 * r7 (s) 			  ## synth.c:529:2
  110b9e:    c0 f9 00 0e 	r0 = macc >>> 14 			  ## synth.c:529:2
  110ba2:    c0 67       	[sp+ 124] = r0 			  ## synth.c:530:14
  110ba4:    c0 d4       	r0 = r0 + r3 			  ## synth.c:530:14
  110ba6:    c8 63       	[sp+ 188] = r0 
  110ba8:    00 a1       	r0 = r0 << 1 			  ## synth.c:532:15
  110baa:    40 d6       	r0 = r0 - r1 			  ## synth.c:532:20
  110bac:    41 ac       	r1 = r0 >> 12 			  ## synth.c:534:26
  110bae:    00 ed 63 40 	r3 = r6 + 64 
  110bb2:    50 e8 31 08 	h[r3 + 32] = r1 			  ## synth.c:534:24
  110bb6:    c1 46       	r1 = [sp+ 108] 			  ## synth.c:536:2
  110bb8:    86 41       	r6 = [sp+ 24] 			  ## synth.c:536:2
  110bba:    71 d6       	r1 = r6 - r1 			  ## synth.c:536:2
  110bbc:    ca 06       	macc = r1 * r2 (s) 			  ## synth.c:536:2
  110bbe:    52 ea 21 3b 	r10 = 15137 			  ## synth.c:519:2
  110bc2:    01 43       	r1 = [sp+ 48] 			  ## synth.c:537:2
  110bc4:    42 41       	r2 = [sp+ 20] 			  ## synth.c:537:2
  110bc6:    51 d6       	r1 = r2 - r1 			  ## synth.c:537:2
  110bc8:    c0 f9 0d 0e 	r13 = macc >>> 14 			  ## synth.c:536:2
  110bcc:    cf 06       	macc = r1 * r7 (s) 			  ## synth.c:537:2
  110bce:    17 ea 7e 18 	r7 = 6270 			  ## synth.c:520:2
  110bd2:    c0 f9 0b 0e 	r11 = macc >>> 14 			  ## synth.c:537:2
  110bd6:    00 ee b1 0d 	r1 = r11 + r13 			  ## synth.c:538:14
  110bda:    01 63       	[sp+ 48] = r1 			  ## synth.c:540:15
  110bdc:    09 a1       	r1 = r1 << 1 			  ## synth.c:540:15
  110bde:    4a d7       	r2 = r1 - r5 			  ## synth.c:540:20
  110be0:    51 ac       	r1 = r2 >> 12 			  ## synth.c:542:26
  110be2:    19 71       	h[r3 + 16] = r1 			  ## synth.c:542:24
  110be4:    81 43       	r1 = [sp+ 56] 			  ## synth.c:544:2
  110be6:    45 47       	r5 = [sp+ 116] 			  ## synth.c:544:2
  110be8:    49 d7       	r1 = r1 - r5 			  ## synth.c:544:2
  110bea:    80 fd a1 00 	macc = r1 * r10 (s) 			  ## synth.c:544:2
  110bee:    01 47       	r1 = [sp+ 112] 			  ## synth.c:545:2
  110bf0:    85 40       	r5 = [sp+ 8] 			  ## synth.c:545:2
  110bf2:    49 d7       	r1 = r1 - r5 			  ## synth.c:545:2
  110bf4:    c0 f9 06 0e 	r6 = macc >>> 14 			  ## synth.c:544:2
  110bf8:    06 67       	[sp+ 112] = r6 			  ## synth.c:545:2
  110bfa:    cf 06       	macc = r1 * r7 (s) 			  ## synth.c:545:2
  110bfc:    c0 f9 01 0e 	r1 = macc >>> 14 			  ## synth.c:545:2
  110c00:    c1 66       	[sp+ 108] = r1 			  ## synth.c:546:14
  110c02:    89 d5       	r1 = r1 + r6 			  ## synth.c:546:14
  110c04:    41 67       	[sp+ 116] = r1 
  110c06:    09 a1       	r1 = r1 << 1 			  ## synth.c:548:15
  110c08:    09 d7       	r1 = r1 - r4 			  ## synth.c:548:20
  110c0a:    81 63       	[sp+ 56] = r1 			  ## synth.c:550:15
  110c0c:    09 a1       	r1 = r1 << 1 			  ## synth.c:550:15
  110c0e:    0e d6       	r6 = r1 - r0 			  ## synth.c:550:20
  110c10:    70 ac       	r0 = r6 >> 12 			  ## synth.c:552:26
  110c12:    18 70       	h[r3 + 0] = r0 			  ## synth.c:552:24
  110c14:    88 43       	r0 = [sp+ 184] 			  ## synth.c:554:2
  110c16:    89 42       	r1 = [sp+ 168] 			  ## synth.c:554:2
  110c18:    40 d6       	r0 = r0 - r1 			  ## synth.c:554:2
  110c1a:    80 fd a0 00 	macc = r0 * r10 (s) 			  ## synth.c:554:2
  110c1e:    c8 41       	r0 = [sp+ 156] 			  ## synth.c:555:2
  110c20:    40 ee 00 0c 	r0 = r0 - r12 			  ## synth.c:555:2
  110c24:    c0 f9 01 0e 	r1 = macc >>> 14 			  ## synth.c:554:2
  110c28:    c7 06       	macc = r0 * r7 (s) 			  ## synth.c:555:2
  110c2a:    c0 f9 04 0e 	r4 = macc >>> 14 			  ## synth.c:555:2
  110c2e:    00 ee 4c 01 	r12 = r4 + r1 			  ## synth.c:556:14
  110c32:    20 f7 c0 01 	r0 = r12 << 1 			  ## synth.c:558:15
  110c36:    05 42       	r5 = [sp+ 32] 			  ## synth.c:558:20
  110c38:    40 d7       	r0 = r0 - r5 			  ## synth.c:558:20
  110c3a:    47 ac       	r7 = r0 >> 12 			  ## synth.c:560:26
  110c3c:    1f 73       	h[r3 + -16] = r7 			  ## synth.c:560:24
  110c3e:    c5 42       	r5 = [sp+ 44] 			  ## synth.c:561:2
  110c40:    87 42       	r7 = [sp+ 40] 			  ## synth.c:561:2
  110c42:    7f d7       	r7 = r7 - r5 			  ## synth.c:561:2
  110c44:    50 ea 41 2d 	r8 = 11585 			  ## synth.c:457:2
  110c48:    80 fd 87 00 	macc = r7 * r8 (s) 			  ## synth.c:561:2
  110c4c:    c0 f9 07 0e 	r7 = macc >>> 14 			  ## synth.c:561:2
  110c50:    3f a1       	r7 = r7 << 1 			  ## synth.c:562:15
  110c52:    3f d6       	r7 = r7 - r0 			  ## synth.c:562:20
  110c54:    7d ac       	r5 = r7 >> 12 			  ## synth.c:564:26
  110c56:    60 e9 09 09 	[sp+ 36] = r9 			  ## synth.c:564:26
  110c5a:    00 ed 90 40 	r0 = r9 + 64 			  ## synth.c:564:26
  110c5e:    05 70       	h[r0 + 0] = r5 			  ## synth.c:564:24
  110c60:    09 d7       	r1 = r1 - r4 			  ## synth.c:566:2
  110c62:    80 fd 81 00 	macc = r1 * r8 (s) 			  ## synth.c:566:2
  110c66:    50 ea 41 2d 	r8 = 11585 			  ## synth.c:457:2
  110c6a:    c0 f9 01 0e 	r1 = macc >>> 14 			  ## synth.c:566:2
  110c6e:    09 a1       	r1 = r1 << 1 			  ## synth.c:567:17
  110c70:    40 ee 11 0c 	r1 = r1 - r12 			  ## synth.c:567:17
  110c74:    09 a1       	r1 = r1 << 1 			  ## synth.c:567:17
  110c76:    c9 d7       	r1 = r1 - r7 			  ## synth.c:567:17
  110c78:    4c ac       	r4 = r1 >> 12 			  ## synth.c:567:17
  110c7a:    00 ed 9c d8 	r12 = r9 + 216 
  110c7e:    50 e8 c4 7a 	h[r12 + -24] = r4 			  ## synth.c:567:15
  110c82:    49 44       	r1 = [sp+ 196] 			  ## synth.c:569:2
  110c84:    cc 42       	r4 = [sp+ 172] 			  ## synth.c:569:2
  110c86:    0c d7       	r4 = r1 - r4 			  ## synth.c:569:2
  110c88:    80 fd a4 00 	macc = r4 * r10 (s) 			  ## synth.c:569:2
  110c8c:    09 42       	r1 = [sp+ 160] 			  ## synth.c:570:2
  110c8e:    44 43       	r4 = [sp+ 52] 			  ## synth.c:570:2
  110c90:    0c d7       	r4 = r1 - r4 			  ## synth.c:570:2
  110c92:    c0 f9 01 0e 	r1 = macc >>> 14 			  ## synth.c:569:2
  110c96:    89 63       	[sp+ 184] = r1 			  ## synth.c:570:2
  110c98:    15 ea 7e 18 	r5 = 6270 			  ## synth.c:520:2
  110c9c:    e5 06       	macc = r4 * r5 (s) 			  ## synth.c:570:2
  110c9e:    c0 f9 04 0e 	r4 = macc >>> 14 			  ## synth.c:570:2
  110ca2:    cc 62       	[sp+ 172] = r4 			  ## synth.c:571:14
  110ca4:    09 d5       	r1 = r1 + r4 			  ## synth.c:571:14
  110ca6:    49 64       	[sp+ 196] = r1 
  110ca8:    0c a1       	r4 = r1 << 1 			  ## synth.c:573:15
  110caa:    c1 43       	r1 = [sp+ 60] 			  ## synth.c:573:20
  110cac:    61 d6       	r1 = r4 - r1 			  ## synth.c:573:20
  110cae:    89 62       	[sp+ 168] = r1 			  ## synth.c:575:15
  110cb0:    0c a1       	r4 = r1 << 1 			  ## synth.c:575:15
  110cb2:    40 ee 49 06 	r9 = r4 - r6 			  ## synth.c:575:20
  110cb6:    60 f7 94 0c 	r4 = r9 >> 12 			  ## synth.c:577:26
  110cba:    1c 72       	h[r3 + -32] = r4 			  ## synth.c:577:24
  110cbc:    c1 44       	r1 = [sp+ 76] 			  ## synth.c:579:2
  110cbe:    83 44       	r3 = [sp+ 72] 			  ## synth.c:579:2
  110cc0:    5b d6       	r3 = r3 - r1 			  ## synth.c:579:2
  110cc2:    80 fd 83 00 	macc = r3 * r8 (s) 			  ## synth.c:579:2
  110cc6:    89 44       	r1 = [sp+ 200] 			  ## synth.c:582:2
  110cc8:    4b 43       	r3 = [sp+ 180] 			  ## synth.c:582:2
  110cca:    cb d6       	r3 = r1 - r3 			  ## synth.c:582:2
  110ccc:    c0 f9 01 0e 	r1 = macc >>> 14 			  ## synth.c:579:2
  110cd0:    89 64       	[sp+ 200] = r1 			  ## synth.c:582:2
  110cd2:    80 fd a3 00 	macc = r3 * r10 (s) 			  ## synth.c:582:2
  110cd6:    49 42       	r1 = [sp+ 164] 			  ## synth.c:583:2
  110cd8:    03 44       	r3 = [sp+ 64] 			  ## synth.c:583:2
  110cda:    cb d6       	r3 = r1 - r3 			  ## synth.c:583:2
  110cdc:    c0 f9 07 0e 	r7 = macc >>> 14 			  ## synth.c:582:2
  110ce0:    dd 06       	macc = r3 * r5 (s) 			  ## synth.c:583:2
  110ce2:    c0 f9 05 0e 	r5 = macc >>> 14 			  ## synth.c:583:2
  110ce6:    eb d5       	r3 = r5 + r7 			  ## synth.c:584:14
  110ce8:    1c a1       	r4 = r3 << 1 			  ## synth.c:586:15
  110cea:    01 45       	r1 = [sp+ 80] 			  ## synth.c:586:20
  110cec:    64 d6       	r4 = r4 - r1 			  ## synth.c:586:20
  110cee:    20 f7 4e 01 	r14 = r4 << 1 			  ## synth.c:588:15
  110cf2:    40 ee e2 02 	r2 = r14 - r2 			  ## synth.c:588:20
  110cf6:    51 ac       	r1 = r2 >> 12 			  ## synth.c:590:26
  110cf8:    c6 41       	r6 = [sp+ 28] 			  ## synth.c:590:24
  110cfa:    31 71       	h[r6 + 16] = r1 			  ## synth.c:590:24
  110cfc:    81 46       	r1 = [sp+ 104] 			  ## synth.c:591:2
  110cfe:    06 46       	r6 = [sp+ 96] 			  ## synth.c:591:2
  110d00:    71 d6       	r1 = r6 - r1 			  ## synth.c:591:2
  110d02:    56 ea 41 2d 	r14 = 11585 			  ## synth.c:457:2
  110d06:    80 fd e1 00 	macc = r1 * r14 (s) 			  ## synth.c:591:2
  110d0a:    c0 f9 01 0e 	r1 = macc >>> 14 			  ## synth.c:591:2
  110d0e:    09 a1       	r1 = r1 << 1 			  ## synth.c:592:15
  110d10:    89 d6       	r1 = r1 - r2 			  ## synth.c:592:20
  110d12:    4a ac       	r2 = r1 >> 12 			  ## synth.c:594:26
  110d14:    02 72       	h[r0 + -32] = r2 			  ## synth.c:594:24
  110d16:    82 45       	r2 = [sp+ 88] 			  ## synth.c:595:2
  110d18:    46 45       	r6 = [sp+ 84] 			  ## synth.c:595:2
  110d1a:    b2 d6       	r2 = r6 - r2 			  ## synth.c:595:2
  110d1c:    80 fd e2 00 	macc = r2 * r14 (s) 			  ## synth.c:595:2
  110d20:    c0 f9 02 0e 	r2 = macc >>> 14 			  ## synth.c:595:2
  110d24:    12 a1       	r2 = r2 << 1 			  ## synth.c:596:15
  110d26:    12 d7       	r2 = r2 - r4 			  ## synth.c:596:20
  110d28:    14 a1       	r4 = r2 << 1 			  ## synth.c:598:15
  110d2a:    61 d6       	r1 = r4 - r1 			  ## synth.c:598:20
  110d2c:    4c ac       	r4 = r1 >> 12 			  ## synth.c:600:26
  110d2e:    50 e8 04 08 	h[r0 + 32] = r4 			  ## synth.c:600:24
  110d32:    40 ee d4 0b 	r4 = r13 - r11 			  ## synth.c:601:2
  110d36:    80 fd e4 00 	macc = r4 * r14 (s) 			  ## synth.c:601:2
  110d3a:    c0 f9 04 0e 	r4 = macc >>> 14 			  ## synth.c:601:2
  110d3e:    24 a1       	r4 = r4 << 1 			  ## synth.c:602:17
  110d40:    06 43       	r6 = [sp+ 48] 			  ## synth.c:602:22
  110d42:    a4 d7       	r4 = r4 - r6 			  ## synth.c:602:22
  110d44:    24 a1       	r4 = r4 << 1 			  ## synth.c:602:30
  110d46:    61 d6       	r1 = r4 - r1 			  ## synth.c:602:35
  110d48:    4c ac       	r4 = r1 >> 12 			  ## synth.c:604:26
  110d4a:    20 e9 08 11 	r8 = [sp+ 68] 			  ## synth.c:604:26
  110d4e:    50 e8 84 04 	h[r8 + 16] = r4 			  ## synth.c:604:24
  110d52:    7c d7       	r4 = r7 - r5 			  ## synth.c:605:2
  110d54:    80 fd e4 00 	macc = r4 * r14 (s) 			  ## synth.c:605:2
  110d58:    56 ea 41 2d 	r14 = 11585 			  ## synth.c:457:2
  110d5c:    c0 f9 04 0e 	r4 = macc >>> 14 			  ## synth.c:605:2
  110d60:    24 a1       	r4 = r4 << 1 			  ## synth.c:607:2
  110d62:    e3 d6       	r3 = r4 - r3 			  ## synth.c:607:2
  110d64:    1b a1       	r3 = r3 << 1 			  ## synth.c:607:2
  110d66:    9a d6       	r2 = r3 - r2 			  ## synth.c:607:2
  110d68:    12 a1       	r2 = r2 << 1 			  ## synth.c:607:2
  110d6a:    51 d6       	r1 = r2 - r1 			  ## synth.c:607:2
  110d6c:    49 ac       	r1 = r1 >> 12 			  ## synth.c:607:2
  110d6e:    50 e8 c1 02 	h[r12 + 8] = r1 			  ## synth.c:606:24
  110d72:    c9 44       	r1 = [sp+ 204] 			  ## synth.c:610:2
  110d74:    0a 44       	r2 = [sp+ 192] 			  ## synth.c:610:2
  110d76:    89 d6       	r1 = r1 - r2 			  ## synth.c:610:2
  110d78:    80 fd a1 00 	macc = r1 * r10 (s) 			  ## synth.c:610:2
  110d7c:    09 43       	r1 = [sp+ 176] 			  ## synth.c:611:2
  110d7e:    42 46       	r2 = [sp+ 100] 			  ## synth.c:611:2
  110d80:    89 d6       	r1 = r1 - r2 			  ## synth.c:611:2
  110d82:    c0 f9 0b 0e 	r11 = macc >>> 14 			  ## synth.c:610:2
  110d86:    12 ea 7e 18 	r2 = 6270 			  ## synth.c:611:2
  110d8a:    ca 06       	macc = r1 * r2 (s) 			  ## synth.c:611:2
  110d8c:    c9 40       	r1 = [sp+ 140] 			  ## synth.c:618:2
  110d8e:    8a 40       	r2 = [sp+ 136] 			  ## synth.c:618:2
  110d90:    51 d6       	r1 = r2 - r1 			  ## synth.c:618:2
  110d92:    c0 f9 0a 0e 	r10 = macc >>> 14 			  ## synth.c:611:2
  110d96:    80 fd e1 00 	macc = r1 * r14 (s) 			  ## synth.c:618:2
  110d9a:    00 ee ad 0b 	r13 = r10 + r11 			  ## synth.c:612:14
  110d9e:    20 f7 d1 01 	r1 = r13 << 1 			  ## synth.c:614:15
  110da2:    82 47       	r2 = [sp+ 120] 			  ## synth.c:614:20
  110da4:    89 d6       	r1 = r1 - r2 			  ## synth.c:614:20
  110da6:    0c a1       	r4 = r1 << 1 			  ## synth.c:616:15
  110da8:    82 43       	r2 = [sp+ 56] 			  ## synth.c:616:20
  110daa:    a4 d6       	r4 = r4 - r2 			  ## synth.c:616:20
  110dac:    25 a1       	r5 = r4 << 1 			  ## synth.c:621:15
  110dae:    40 ee 55 09 	r5 = r5 - r9 			  ## synth.c:621:20
  110db2:    6e ac       	r6 = r5 >> 12 			  ## synth.c:623:26
  110db4:    c0 f9 07 0e 	r7 = macc >>> 14 			  ## synth.c:618:2
  110db8:    0a 45       	r2 = [sp+ 208] 			  ## synth.c:623:24
  110dba:    c3 45       	r3 = [sp+ 92] 			  ## synth.c:623:24
  110dbc:    50 e7 26 03 	h[r2 + r3] = r6 			  ## synth.c:623:24
  110dc0:    8a 41       	r2 = [sp+ 152] 			  ## synth.c:624:2
  110dc2:    4e 40       	r6 = [sp+ 132] 			  ## synth.c:624:2
  110dc4:    b6 d6       	r6 = r6 - r2 			  ## synth.c:624:2
  110dc6:    80 fd e6 00 	macc = r6 * r14 (s) 			  ## synth.c:624:2
  110dca:    c0 f9 06 0e 	r6 = macc >>> 14 			  ## synth.c:624:2
  110dce:    36 a1       	r6 = r6 << 1 			  ## synth.c:625:15
  110dd0:    75 d7       	r5 = r6 - r5 			  ## synth.c:625:20
  110dd2:    6e ac       	r6 = r5 >> 12 			  ## synth.c:627:26
  110dd4:    42 42       	r2 = [sp+ 36] 			  ## synth.c:627:24
  110dd6:    16 71       	h[r2 + 16] = r6 			  ## synth.c:627:24
  110dd8:    3e a1       	r6 = r7 << 1 			  ## synth.c:619:15
  110dda:    36 d7       	r6 = r6 - r4 			  ## synth.c:619:20
  110ddc:    34 a1       	r4 = r6 << 1 			  ## synth.c:629:15
  110dde:    65 d7       	r5 = r4 - r5 			  ## synth.c:629:20
  110de0:    6c ac       	r4 = r5 >> 12 			  ## synth.c:631:26
  110de2:    04 73       	h[r0 + -16] = r4 			  ## synth.c:631:24
  110de4:    8a 44       	r2 = [sp+ 200] 			  ## synth.c:580:15
  110de6:    14 a1       	r4 = r2 << 1 			  ## synth.c:580:15
  110de8:    8a 42       	r2 = [sp+ 168] 			  ## synth.c:580:20
  110dea:    a4 d6       	r4 = r4 - r2 			  ## synth.c:580:20
  110dec:    27 a1       	r7 = r4 << 1 			  ## synth.c:633:15
  110dee:    7d d7       	r5 = r7 - r5 			  ## synth.c:633:20
  110df0:    6f ac       	r7 = r5 >> 12 			  ## synth.c:635:26
  110df2:    07 71       	h[r0 + 16] = r7 			  ## synth.c:635:24
  110df4:    48 41       	r0 = [sp+ 148] 			  ## synth.c:636:2
  110df6:    0a 41       	r2 = [sp+ 144] 			  ## synth.c:636:2
  110df8:    10 d6       	r0 = r2 - r0 			  ## synth.c:636:2
  110dfa:    80 fd e0 00 	macc = r0 * r14 (s) 			  ## synth.c:636:2
  110dfe:    c0 f9 00 0e 	r0 = macc >>> 14 			  ## synth.c:636:2
  110e02:    00 a1       	r0 = r0 << 1 			  ## synth.c:637:15
  110e04:    40 d6       	r0 = r0 - r1 			  ## synth.c:637:20
  110e06:    01 a1       	r1 = r0 << 1 			  ## synth.c:639:15
  110e08:    89 d7       	r1 = r1 - r6 			  ## synth.c:639:20
  110e0a:    0e a1       	r6 = r1 << 1 			  ## synth.c:641:15
  110e0c:    75 d7       	r5 = r6 - r5 			  ## synth.c:641:20
  110e0e:    6e ac       	r6 = r5 >> 12 			  ## synth.c:643:26
  110e10:    50 e8 86 78 	h[r8 + -32] = r6 			  ## synth.c:643:24
  110e14:    0a 40       	r2 = [sp+ 128] 			  ## synth.c:644:2
  110e16:    c6 47       	r6 = [sp+ 124] 			  ## synth.c:644:2
  110e18:    96 d7       	r6 = r2 - r6 			  ## synth.c:644:2
  110e1a:    80 fd e6 00 	macc = r6 * r14 (s) 			  ## synth.c:644:2
  110e1e:    c0 f9 06 0e 	r6 = macc >>> 14 			  ## synth.c:644:2
  110e22:    36 a1       	r6 = r6 << 1 			  ## synth.c:645:17
  110e24:    ca 43       	r2 = [sp+ 188] 			  ## synth.c:645:22
  110e26:    b6 d6       	r6 = r6 - r2 			  ## synth.c:645:22
  110e28:    36 a1       	r6 = r6 << 1 			  ## synth.c:645:30
  110e2a:    75 d7       	r5 = r6 - r5 			  ## synth.c:645:35
  110e2c:    6e ac       	r6 = r5 >> 12 			  ## synth.c:647:26
  110e2e:    50 e8 86 00 	h[r8 + 0] = r6 			  ## synth.c:647:24
  110e32:    02 47       	r2 = [sp+ 112] 			  ## synth.c:648:2
  110e34:    c6 46       	r6 = [sp+ 108] 			  ## synth.c:648:2
  110e36:    96 d7       	r6 = r2 - r6 			  ## synth.c:648:2
  110e38:    80 fd e6 00 	macc = r6 * r14 (s) 			  ## synth.c:648:2
  110e3c:    c0 f9 06 0e 	r6 = macc >>> 14 			  ## synth.c:648:2
  110e40:    36 a1       	r6 = r6 << 1 			  ## synth.c:649:17
  110e42:    42 47       	r2 = [sp+ 116] 			  ## synth.c:649:22
  110e44:    b6 d6       	r6 = r6 - r2 			  ## synth.c:649:22
  110e46:    36 a1       	r6 = r6 << 1 			  ## synth.c:649:30
  110e48:    71 d6       	r1 = r6 - r1 			  ## synth.c:649:35
  110e4a:    0e a1       	r6 = r1 << 1 			  ## synth.c:651:15
  110e4c:    75 d7       	r5 = r6 - r5 			  ## synth.c:651:20
  110e4e:    6e ac       	r6 = r5 >> 12 			  ## synth.c:653:26
  110e50:    50 e8 86 08 	h[r8 + 32] = r6 			  ## synth.c:653:24
  110e54:    8a 43       	r2 = [sp+ 184] 			  ## synth.c:654:2
  110e56:    cb 42       	r3 = [sp+ 172] 			  ## synth.c:654:2
  110e58:    d6 d6       	r6 = r2 - r3 			  ## synth.c:654:2
  110e5a:    80 fd e6 00 	macc = r6 * r14 (s) 			  ## synth.c:654:2
  110e5e:    c0 f9 06 0e 	r6 = macc >>> 14 			  ## synth.c:654:2
  110e62:    36 a1       	r6 = r6 << 1 			  ## synth.c:655:19
  110e64:    4a 44       	r2 = [sp+ 196] 			  ## synth.c:655:24
  110e66:    b6 d6       	r6 = r6 - r2 			  ## synth.c:655:24
  110e68:    36 a1       	r6 = r6 << 1 			  ## synth.c:656:9
  110e6a:    34 d7       	r4 = r6 - r4 			  ## synth.c:656:14
  110e6c:    24 a1       	r4 = r4 << 1 			  ## synth.c:656:22
  110e6e:    64 d7       	r4 = r4 - r5 			  ## synth.c:656:27
  110e70:    65 ac       	r5 = r4 >> 12 			  ## synth.c:658:26
  110e72:    50 e8 c5 7e 	h[r12 + -8] = r5 			  ## synth.c:658:24
  110e76:    40 ee b3 0a 	r3 = r11 - r10 			  ## synth.c:659:2
  110e7a:    80 fd e3 00 	macc = r3 * r14 (s) 			  ## synth.c:659:2
  110e7e:    c0 f9 03 0e 	r3 = macc >>> 14 			  ## synth.c:659:2
  110e82:    1b a1       	r3 = r3 << 1 			  ## synth.c:661:2
  110e84:    40 ee 32 0d 	r2 = r3 - r13 			  ## synth.c:661:2
  110e88:    12 a1       	r2 = r2 << 1 			  ## synth.c:661:2
  110e8a:    10 d6       	r0 = r2 - r0 			  ## synth.c:661:2
  110e8c:    00 a1       	r0 = r0 << 1 			  ## synth.c:661:2
  110e8e:    40 d6       	r0 = r0 - r1 			  ## synth.c:661:2
  110e90:    00 a1       	r0 = r0 << 1 			  ## synth.c:661:2
  110e92:    00 d7       	r0 = r0 - r4 			  ## synth.c:661:2
  110e94:    40 ac       	r0 = r0 >> 12 			  ## synth.c:661:2
  110e96:    50 e8 c0 06 	h[r12 + 24] = r0 			  ## synth.c:660:24
  110e9a:    00 ed ff d4 	sp = sp + 212 			  ## synth.c:660:24
  110e9e:    30 c4       	{macch, maccl} = [sp++] 
  110ea0:    1e c0       	{pc, r14-r4} = [sp++] 


mTSYmad_synth_frame:
  110ea2:    1e c2       	[--sp] = {rets, r14-r4} 			  ## synth.c:1549:0
  110ea4:    30 c5       	[--sp] = {macch, maccl} 			  ## synth.c:1549:0
  110ea6:    1f ed ff 44 	sp = sp + -188 			  ## synth.c:1549:0
  110eaa:    04 c6       	r4 = r0 			  ## synth.c:1549:0
  110eac:    67 48       	r7 = [r4 + 4] 			  ## synth.c:1280:21
  110eae:    20 54       	r0 = h[r4 + 2] 			  ## synth.c:1282:19
  110eb0:    a5 50       	r5 = h[r4 + 8] 			  ## synth.c:1559:41
  110eb2:    05 ce       	cmp r0, r5			  ## synth.c:1282:3
  110eb4:    00 fb 82 1e 	if (nzcv >= 0) goto 976 <mTSYmad_synth_frame+0x3E6 : 111288 >			  ## synth.c:1282:3
  110eb8:    42 62       	[sp+ 36] = r2 
  110eba:    04 ed 1c 80 	r12 = r1 + 1152 			  ## synth.c:1278:10
  110ebe:    c3 c9       	r3 = r0.l (s) 			  ## synth.c:1282:19
  110ec0:    ea c9       	r2 = r5.l (s) 			  ## synth.c:1559:34
  110ec2:    18 a1       	r0 = r3 << 1 			  ## synth.c:1282:3
  110ec4:    0e d4       	r6 = r1 + r0 			  ## synth.c:1282:3
  110ec6:    02 ed 40 18 	r0 = r4 + 536 			  ## synth.c:1282:3
  110eca:    40 61       	[sp+ 20] = r0 			  ## synth.c:1282:3
  110ecc:    25 c6       	r5 = r4 			  ## synth.c:1282:3
  110ece:    00 ed 40 28 	r0 = r4 + 40 			  ## synth.c:1282:3
  110ed2:    00 61       	[sp+ 16] = r0 			  ## synth.c:1282:3
  110ed4:    02 60       	[sp] = r2 			  ## synth.c:1282:3
  110ed6:    14 a1       	r4 = r2 << 1 			  ## synth.c:1282:3
  110ed8:    04 ed 10 82 	r0 = r1 + 1154 
  110edc:    80 60       	[sp+ 8] = r0 
  110ede:    c1 61       	[sp+ 28] = r1 
  110ee0:    04 ed 10 be 	r0 = r1 + 1214 
  110ee4:    40 60       	[sp+ 4] = r0 
  110ee6:    56 ea ff 0f 	r14 = 4095 
  110eea:    05 62       	[sp+ 32] = r5 
  110eec:    60 e9 0c 06 	[sp+ 24] = r12 
  110ef0:    c4 60       	[sp+ 12] = r4 
  110ef2:    c3 62       	[sp+ 44] = r3 
  110ef4:    00 80       	r0 = 0 
  110ef6:    86 62       	[sp+ 40] = r6 
  110ef8:    31 c6       	r1 = r6 
  110efa:    90 e8 12 00 	r2 = h[r1 + 0] (s) 			  ## synth.c:1286:16
  110efe:    e3 91       	r3 = sp + 60 			  ## synth.c:1286:16
  110f00:    60 e7 32 00 	[r3 + r0] = r2 			  ## synth.c:1286:14
  110f04:    09 d5       	r1 = r1 + r4 			  ## synth.c:1285:18
  110f06:    00 d1       	r0 = r0 + 4 			  ## synth.c:1285:18
  110f08:    80 ef 00 80 	cmp r0, 128			  ## synth.c:1285:4
  110f0c:    f6 11       	ifs (nzcv != 0) goto -20 <mTSYmad_synth_frame+0x58 : 110efa >			  ## synth.c:1285:4
  110f0e:    00 ed 56 0a 	r6 = r5 + 10 			  ## synth.c:1288:5
  110f12:    80 f3 74 01 	r4 = r7 & 1 			  ## synth.c:1288:24
  110f16:    20 f7 49 08 	r9 = r4 << 8 			  ## synth.c:1288:5
  110f1a:    00 ee 65 09 	r5 = r6 + r9 			  ## synth.c:1288:5
  110f1e:    02 ed 53 00 	r3 = r5 + 512 			  ## synth.c:1288:30
  110f22:    60 f7 78 01 	r8 = r7 >> 1 			  ## synth.c:1287:23
  110f26:    e0 91       	r0 = sp + 60 			  ## synth.c:1287:23
  110f28:    81 c6       	r1 = r8 			  ## synth.c:1287:4
  110f2a:    2a c6       	r2 = r5 			  ## synth.c:1287:4
  110f2c:    ff e1 9f b9 	call -2254 <dct32 : 110662 >			  ## synth.c:1287:4
  110f30:    00 ed 7b 0f 	r11 = r7 + 15 			  ## synth.c:1293:17
  110f34:    80 f3 b0 0e 	r0 = r11 & 14 			  ## synth.c:1293:22
  110f38:    00 d8       	r0 |= 1			  ## synth.c:1293:29
  110f3a:    00 a2       	r0 = r0 << 2 			  ## synth.c:1331:16
  110f3c:    20 e4 03 de 	r3 = [addr(888)]  <.GCPI385_0 : 1112b8 >
  110f40:    20 e7 31 00 	r1 = [r3 + r0] 			  ## synth.c:1332:4
  110f44:    40 f3 4a 01 	r10 = r4 ^ 1 			  ## synth.c:1298:30
  110f48:    20 f7 ad 08 	r13 = r10 << 8 			  ## synth.c:1332:4
  110f4c:    90 e7 62 0d 	r2 = h[r6 + r13] (s) 			  ## synth.c:1332:4
  110f50:    92 dc       	r2 = -r2 			  ## synth.c:1332:4
  110f52:    d1 06       	macc = r2 * r1 (s) 			  ## synth.c:1332:4
  110f54:    1c d4       	r4 = r3 + r0 			  ## synth.c:1331:16
  110f56:    a0 4b       	r0 = [r4 + 56] 			  ## synth.c:1333:4
  110f58:    00 ee 61 0d 	r1 = r6 + r13 			  ## synth.c:1332:4
  110f5c:    90 e8 12 80 	r2 = h[r1 + 2] (s) 			  ## synth.c:1333:4
  110f60:    d0 07       	macc -= r2 * r0 (s) 			  ## synth.c:1333:4
  110f62:    20 4b       	r0 = [r4 + 48] 			  ## synth.c:1334:4
  110f64:    90 e8 12 01 	r2 = h[r1 + 4] (s) 			  ## synth.c:1334:4
  110f68:    d0 07       	macc -= r2 * r0 (s) 			  ## synth.c:1334:4
  110f6a:    a0 4a       	r0 = [r4 + 40] 			  ## synth.c:1335:4
  110f6c:    90 e8 12 81 	r2 = h[r1 + 6] (s) 			  ## synth.c:1335:4
  110f70:    d0 07       	macc -= r2 * r0 (s) 			  ## synth.c:1335:4
  110f72:    20 4a       	r0 = [r4 + 32] 			  ## synth.c:1336:4
  110f74:    90 e8 12 02 	r2 = h[r1 + 8] (s) 			  ## synth.c:1336:4
  110f78:    d0 07       	macc -= r2 * r0 (s) 			  ## synth.c:1336:4
  110f7a:    a0 49       	r0 = [r4 + 24] 			  ## synth.c:1337:4
  110f7c:    90 e8 12 82 	r2 = h[r1 + 10] (s) 			  ## synth.c:1337:4
  110f80:    d0 07       	macc -= r2 * r0 (s) 			  ## synth.c:1337:4
  110f82:    20 49       	r0 = [r4 + 16] 			  ## synth.c:1338:4
  110f84:    90 e8 12 03 	r2 = h[r1 + 12] (s) 			  ## synth.c:1338:4
  110f88:    d0 07       	macc -= r2 * r0 (s) 			  ## synth.c:1338:4
  110f8a:    44 63       	[sp+ 52] = r4 			  ## synth.c:1338:4
  110f8c:    a0 48       	r0 = [r4 + 8] 			  ## synth.c:1339:4
  110f8e:    90 e8 11 83 	r1 = h[r1 + 14] (s) 			  ## synth.c:1339:4
  110f92:    c8 07       	macc -= r1 * r0 (s) 			  ## synth.c:1339:4
  110f94:    20 e4 00 c9 	r0 = [addr(804)]  <.GCPI385_1 : 1112bc >			  ## synth.c:1292:15
  110f98:    b8 da       	r0 &= r7 			  ## synth.c:1292:15
  110f9a:    00 a2       	r0 = r0 << 2 			  ## synth.c:1342:16
  110f9c:    20 e7 31 00 	r1 = [r3 + r0] 			  ## synth.c:1343:4
  110fa0:    90 e7 62 09 	r2 = h[r6 + r9] (s) 			  ## synth.c:1343:4
  110fa4:    91 07       	macc += r2 * r1 (s) 			  ## synth.c:1343:4
  110fa6:    c0 d4       	r0 = r0 + r3 			  ## synth.c:1342:16
  110fa8:    81 4b       	r1 = [r0 + 56] 			  ## synth.c:1344:4
  110faa:    90 e8 52 80 	r2 = h[r5 + 2] (s) 			  ## synth.c:1344:4
  110fae:    91 07       	macc += r2 * r1 (s) 			  ## synth.c:1344:4
  110fb0:    01 4b       	r1 = [r0 + 48] 			  ## synth.c:1345:4
  110fb2:    90 e8 52 01 	r2 = h[r5 + 4] (s) 			  ## synth.c:1345:4
  110fb6:    91 07       	macc += r2 * r1 (s) 			  ## synth.c:1345:4
  110fb8:    81 4a       	r1 = [r0 + 40] 			  ## synth.c:1346:4
  110fba:    90 e8 52 81 	r2 = h[r5 + 6] (s) 			  ## synth.c:1346:4
  110fbe:    91 07       	macc += r2 * r1 (s) 			  ## synth.c:1346:4
  110fc0:    01 4a       	r1 = [r0 + 32] 			  ## synth.c:1347:4
  110fc2:    90 e8 52 02 	r2 = h[r5 + 8] (s) 			  ## synth.c:1347:4
  110fc6:    91 07       	macc += r2 * r1 (s) 			  ## synth.c:1347:4
  110fc8:    81 49       	r1 = [r0 + 24] 			  ## synth.c:1348:4
  110fca:    90 e8 52 82 	r2 = h[r5 + 10] (s) 			  ## synth.c:1348:4
  110fce:    91 07       	macc += r2 * r1 (s) 			  ## synth.c:1348:4
  110fd0:    01 49       	r1 = [r0 + 16] 			  ## synth.c:1349:4
  110fd2:    90 e8 52 03 	r2 = h[r5 + 12] (s) 			  ## synth.c:1349:4
  110fd6:    91 07       	macc += r2 * r1 (s) 			  ## synth.c:1349:4
  110fd8:    80 48       	r0 = [r0 + 8] 			  ## synth.c:1350:4
  110fda:    90 e8 51 83 	r1 = h[r5 + 14] (s) 			  ## synth.c:1350:4
  110fde:    88 07       	macc += r1 * r0 (s) 			  ## synth.c:1350:4
  110fe0:    08 80       	r0 = 1 			  ## synth.c:1352:4
  110fe2:    a0 fd e0 00 	macc += r0 * r14 (s) 			  ## synth.c:1352:4
  110fe6:    91 ea 00 80 	r1 = -32768 			  ## synth.c:1352:4
  110fea:    c0 f9 00 0d 	r0 = macc >>> 13 			  ## synth.c:1352:4
  110fee:    01 ce       	cmp r0, r1			  ## synth.c:1352:4
  110ff0:    01 c6       	r1 = r0 			  ## synth.c:1352:4
  110ff2:    d0 03       	ifs (nzcv <= 0) {			  ## synth.c:1352:4
  110ff4:    91 ea 00 80 		r1 = -32768 
                               	}			  ## synth.c:1352:4
  110ff8:    87 63       	[sp+ 56] = r7 			  ## synth.c:1352:4
  110ffa:    12 ea ff 7f 	r2 = 32767 			  ## synth.c:1352:4
  110ffe:    0c ef 00 00 	cmp r0, 32768			  ## synth.c:1353:12
  111002:    b0 03       	ifs (nzcv < 0) {			  ## synth.c:1353:12
  111004:    0a c6       		r2 = r1 
                               	}			  ## synth.c:1353:12
  111006:    50 e8 c2 00 	h[r12 + 0] = r2 			  ## synth.c:1353:10
  11100a:    00 41       	r0 = [sp+ 16] 			  ## synth.c:1358:4
  11100c:    00 ee 01 09 	r1 = r0 + r9 			  ## synth.c:1358:4
  111010:    20 f7 80 03 	r0 = r8 << 3 			  ## synth.c:1358:4
  111014:    20 ee 02 f4 	r2 = 244 - r0 			  ## synth.c:1358:4
  111018:    20 e4 03 a7 	r3 = [addr(668)]  <.GCPI385_0 : 1112b8 >			  ## synth.c:1358:4
  11101c:    1e c6       	r6 = r3 			  ## synth.c:1358:4
  11101e:    00 ee 69 02 	r9 = r6 + r2 			  ## synth.c:1358:4
  111022:    42 41       	r2 = [sp+ 20] 			  ## synth.c:1358:4
  111024:    00 ee 23 0d 	r3 = r2 + r13 			  ## synth.c:1358:4
  111028:    20 f7 b4 02 	r4 = r11 << 2 			  ## synth.c:1358:4
  11102c:    80 f3 44 38 	r4 = r4 & 56 			  ## synth.c:1358:4
  111030:    20 ee 45 f0 	r5 = 240 - r4 			  ## synth.c:1358:4
  111034:    ad d5       	r5 = r5 + r6 			  ## synth.c:1358:4
  111036:    80 d5       	r0 = r0 + r6 			  ## synth.c:1331:16
  111038:    00 ed 0b 80 	r11 = r0 + 128 			  ## synth.c:1358:4
  11103c:    30 d5       	r0 = r6 + r4 			  ## synth.c:1331:16
  11103e:    00 ed 08 bc 	r8 = r0 + 188 			  ## synth.c:1358:4
  111042:    20 f7 a0 07 	r0 = r10 << 7 			  ## synth.c:1358:4
  111046:    00 63       	[sp+ 48] = r0 			  ## synth.c:1358:4
  111048:    54 ea 00 00 	r12 = 0 			  ## synth.c:1358:4
  11104c:    86 40       	r6 = [sp+ 8] 			  ## synth.c:1358:4
  11104e:    20 e9 0a 01 	r10 = [sp+ 4] 			  ## synth.c:1358:4
  111052:    00 ee 80 0c 	r0 = r8 + r12 			  ## synth.c:1393:5
  111056:    84 4c       	r4 = [r0 + -56] 			  ## synth.c:1393:5
  111058:    90 e8 37 fc 	r7 = h[r3 + -14] (s) 			  ## synth.c:1393:5
  11105c:    bf dc       	r7 = -r7 			  ## synth.c:1393:5
  11105e:    fc 06       	macc = r7 * r4 (s) 			  ## synth.c:1393:5
  111060:    20 e7 84 0c 	r4 = [r8 + r12] 			  ## synth.c:1394:5
  111064:    90 e8 37 7d 	r7 = h[r3 + -12] (s) 			  ## synth.c:1394:5
  111068:    fc 07       	macc -= r7 * r4 (s) 			  ## synth.c:1394:5
  11106a:    84 4f       	r4 = [r0 + -8] 			  ## synth.c:1395:5
  11106c:    90 e8 37 fd 	r7 = h[r3 + -10] (s) 			  ## synth.c:1395:5
  111070:    fc 07       	macc -= r7 * r4 (s) 			  ## synth.c:1395:5
  111072:    04 4f       	r4 = [r0 + -16] 			  ## synth.c:1396:5
  111074:    90 e8 37 7e 	r7 = h[r3 + -8] (s) 			  ## synth.c:1396:5
  111078:    fc 07       	macc -= r7 * r4 (s) 			  ## synth.c:1396:5
  11107a:    84 4e       	r4 = [r0 + -24] 			  ## synth.c:1397:5
  11107c:    90 e8 37 fe 	r7 = h[r3 + -6] (s) 			  ## synth.c:1397:5
  111080:    fc 07       	macc -= r7 * r4 (s) 			  ## synth.c:1397:5
  111082:    04 4e       	r4 = [r0 + -32] 			  ## synth.c:1398:5
  111084:    90 e8 37 7f 	r7 = h[r3 + -4] (s) 			  ## synth.c:1398:5
  111088:    fc 07       	macc -= r7 * r4 (s) 			  ## synth.c:1398:5
  11108a:    84 4d       	r4 = [r0 + -40] 			  ## synth.c:1399:5
  11108c:    90 e8 37 ff 	r7 = h[r3 + -2] (s) 			  ## synth.c:1399:5
  111090:    fc 07       	macc -= r7 * r4 (s) 			  ## synth.c:1399:5
  111092:    00 4d       	r0 = [r0 + -48] 			  ## synth.c:1400:5
  111094:    90 e8 34 00 	r4 = h[r3 + 0] (s) 			  ## synth.c:1400:5
  111098:    e0 07       	macc -= r4 * r0 (s) 			  ## synth.c:1400:5
  11109a:    00 ee b0 0c 	r0 = r11 + r12 			  ## synth.c:1404:5
  11109e:    84 48       	r4 = [r0 + 8] 			  ## synth.c:1404:5
  1110a0:    90 e8 17 00 	r7 = h[r1 + 0] (s) 			  ## synth.c:1404:5
  1110a4:    bc 07       	macc += r7 * r4 (s) 			  ## synth.c:1404:5
  1110a6:    04 49       	r4 = [r0 + 16] 			  ## synth.c:1405:5
  1110a8:    90 e8 17 ff 	r7 = h[r1 + -2] (s) 			  ## synth.c:1405:5
  1110ac:    bc 07       	macc += r7 * r4 (s) 			  ## synth.c:1405:5
  1110ae:    84 49       	r4 = [r0 + 24] 			  ## synth.c:1406:5
  1110b0:    90 e8 17 7f 	r7 = h[r1 + -4] (s) 			  ## synth.c:1406:5
  1110b4:    bc 07       	macc += r7 * r4 (s) 			  ## synth.c:1406:5
  1110b6:    04 4a       	r4 = [r0 + 32] 			  ## synth.c:1407:5
  1110b8:    90 e8 17 fe 	r7 = h[r1 + -6] (s) 			  ## synth.c:1407:5
  1110bc:    bc 07       	macc += r7 * r4 (s) 			  ## synth.c:1407:5
  1110be:    84 4a       	r4 = [r0 + 40] 			  ## synth.c:1408:5
  1110c0:    90 e8 17 7e 	r7 = h[r1 + -8] (s) 			  ## synth.c:1408:5
  1110c4:    bc 07       	macc += r7 * r4 (s) 			  ## synth.c:1408:5
  1110c6:    04 4b       	r4 = [r0 + 48] 			  ## synth.c:1409:5
  1110c8:    90 e8 17 fd 	r7 = h[r1 + -10] (s) 			  ## synth.c:1409:5
  1110cc:    bc 07       	macc += r7 * r4 (s) 			  ## synth.c:1409:5
  1110ce:    80 4b       	r0 = [r0 + 56] 			  ## synth.c:1410:5
  1110d0:    90 e8 14 7d 	r4 = h[r1 + -12] (s) 			  ## synth.c:1410:5
  1110d4:    a0 07       	macc += r4 * r0 (s) 			  ## synth.c:1410:5
  1110d6:    20 e7 b0 0c 	r0 = [r11 + r12] 			  ## synth.c:1411:5
  1110da:    90 e8 14 fc 	r4 = h[r1 + -14] (s) 			  ## synth.c:1411:5
  1110de:    a0 07       	macc += r4 * r0 (s) 			  ## synth.c:1411:5
  1110e0:    08 80       	r0 = 1 			  ## synth.c:1413:5
  1110e2:    a0 fd e0 00 	macc += r0 * r14 (s) 			  ## synth.c:1413:5
  1110e6:    d5 ea 00 80 	r13 = -32768 			  ## synth.c:1413:5
  1110ea:    c0 f9 00 0d 	r0 = macc >>> 13 			  ## synth.c:1413:5
  1110ee:    45 ce       	cmp r0, r13			  ## synth.c:1413:5
  1110f0:    04 c6       	r4 = r0 			  ## synth.c:1413:5
  1110f2:    d0 03       	ifs (nzcv <= 0) {			  ## synth.c:1413:5
  1110f4:    94 ea 00 80 		r4 = -32768 
                               	}			  ## synth.c:1413:5
  1110f8:    17 ea ff 7f 	r7 = 32767 			  ## synth.c:1413:5
  1110fc:    0c ef 00 00 	cmp r0, 32768			  ## synth.c:1414:13
  111100:    10 ea ff 7f 	r0 = 32767 			  ## synth.c:1414:13
  111104:    b0 03       	ifs (nzcv < 0) {			  ## synth.c:1414:13
  111106:    20 c6       		r0 = r4 
                               	}			  ## synth.c:1414:13
  111108:    58 e8 60 80 	h[r6 ++= 2] = r0 			  ## synth.c:1414:11
  11110c:    00 ee 90 0c 	r0 = r9 + r12 			  ## synth.c:1446:5
  111110:    84 4c       	r4 = [r0 + -56] 			  ## synth.c:1446:5
  111112:    90 e8 1e fc 	r14 = h[r1 + -14] (s) 			  ## synth.c:1446:5
  111116:    80 fd 4e 00 	macc = r14 * r4 (s) 			  ## synth.c:1446:5
  11111a:    04 4d       	r4 = [r0 + -48] 			  ## synth.c:1447:5
  11111c:    90 e8 12 7d 	r2 = h[r1 + -12] (s) 			  ## synth.c:1447:5
  111120:    94 07       	macc += r2 * r4 (s) 			  ## synth.c:1447:5
  111122:    82 4d       	r2 = [r0 + -40] 			  ## synth.c:1448:5
  111124:    90 e8 14 fd 	r4 = h[r1 + -10] (s) 			  ## synth.c:1448:5
  111128:    a2 07       	macc += r4 * r2 (s) 			  ## synth.c:1448:5
  11112a:    02 4e       	r2 = [r0 + -32] 			  ## synth.c:1449:5
  11112c:    90 e8 14 7e 	r4 = h[r1 + -8] (s) 			  ## synth.c:1449:5
  111130:    a2 07       	macc += r4 * r2 (s) 			  ## synth.c:1449:5
  111132:    82 4e       	r2 = [r0 + -24] 			  ## synth.c:1450:5
  111134:    90 e8 14 fe 	r4 = h[r1 + -6] (s) 			  ## synth.c:1450:5
  111138:    a2 07       	macc += r4 * r2 (s) 			  ## synth.c:1450:5
  11113a:    02 4f       	r2 = [r0 + -16] 			  ## synth.c:1451:5
  11113c:    90 e8 14 7f 	r4 = h[r1 + -4] (s) 			  ## synth.c:1451:5
  111140:    a2 07       	macc += r4 * r2 (s) 			  ## synth.c:1451:5
  111142:    80 4f       	r0 = [r0 + -8] 			  ## synth.c:1452:5
  111144:    90 e8 12 ff 	r2 = h[r1 + -2] (s) 			  ## synth.c:1452:5
  111148:    90 07       	macc += r2 * r0 (s) 			  ## synth.c:1452:5
  11114a:    20 e7 90 0c 	r0 = [r9 + r12] 			  ## synth.c:1453:5
  11114e:    90 e8 12 00 	r2 = h[r1 + 0] (s) 			  ## synth.c:1453:5
  111152:    90 07       	macc += r2 * r0 (s) 			  ## synth.c:1453:5
  111154:    20 e7 50 0c 	r0 = [r5 + r12] 			  ## synth.c:1456:5
  111158:    90 e8 32 00 	r2 = h[r3 + 0] (s) 			  ## synth.c:1456:5
  11115c:    90 07       	macc += r2 * r0 (s) 			  ## synth.c:1456:5
  11115e:    00 ee 50 0c 	r0 = r5 + r12 			  ## synth.c:1457:5
  111162:    82 4f       	r2 = [r0 + -8] 			  ## synth.c:1457:5
  111164:    90 e8 34 ff 	r4 = h[r3 + -2] (s) 			  ## synth.c:1457:5
  111168:    a2 07       	macc += r4 * r2 (s) 			  ## synth.c:1457:5
  11116a:    02 4f       	r2 = [r0 + -16] 			  ## synth.c:1458:5
  11116c:    90 e8 34 7f 	r4 = h[r3 + -4] (s) 			  ## synth.c:1458:5
  111170:    a2 07       	macc += r4 * r2 (s) 			  ## synth.c:1458:5
  111172:    82 4e       	r2 = [r0 + -24] 			  ## synth.c:1459:5
  111174:    90 e8 34 fe 	r4 = h[r3 + -6] (s) 			  ## synth.c:1459:5
  111178:    a2 07       	macc += r4 * r2 (s) 			  ## synth.c:1459:5
  11117a:    02 4e       	r2 = [r0 + -32] 			  ## synth.c:1460:5
  11117c:    90 e8 34 7e 	r4 = h[r3 + -8] (s) 			  ## synth.c:1460:5
  111180:    a2 07       	macc += r4 * r2 (s) 			  ## synth.c:1460:5
  111182:    82 4d       	r2 = [r0 + -40] 			  ## synth.c:1461:5
  111184:    90 e8 34 fd 	r4 = h[r3 + -10] (s) 			  ## synth.c:1461:5
  111188:    a2 07       	macc += r4 * r2 (s) 			  ## synth.c:1461:5
  11118a:    02 4d       	r2 = [r0 + -48] 			  ## synth.c:1462:5
  11118c:    90 e8 34 7d 	r4 = h[r3 + -12] (s) 			  ## synth.c:1462:5
  111190:    a2 07       	macc += r4 * r2 (s) 			  ## synth.c:1462:5
  111192:    80 4c       	r0 = [r0 + -56] 			  ## synth.c:1463:5
  111194:    90 e8 32 fc 	r2 = h[r3 + -14] (s) 			  ## synth.c:1463:5
  111198:    90 07       	macc += r2 * r0 (s) 			  ## synth.c:1463:5
  11119a:    56 ea ff 0f 	r14 = 4095 			  ## synth.c:1463:5
  11119e:    08 80       	r0 = 1 			  ## synth.c:1465:5
  1111a0:    a0 fd e0 00 	macc += r0 * r14 (s) 			  ## synth.c:1465:5
  1111a4:    c0 f9 04 0d 	r4 = macc >>> 13 			  ## synth.c:1465:5
  1111a8:    65 ce       	cmp r4, r13			  ## synth.c:1465:5
  1111aa:    20 c6       	r0 = r4 			  ## synth.c:1465:5
  1111ac:    d0 03       	ifs (nzcv <= 0) {			  ## synth.c:1465:5
  1111ae:    90 ea 00 80 		r0 = -32768 
                               	}			  ## synth.c:1465:5
  1111b2:    0c ef 40 00 	cmp r4, 32768			  ## synth.c:1466:13
  1111b6:    b0 03       	ifs (nzcv < 0) {			  ## synth.c:1466:13
  1111b8:    07 c6       		r7 = r0 
                               	}			  ## synth.c:1466:13
  1111ba:    58 e8 a7 ff 	h[r10 ++= -2] = r7 			  ## synth.c:1466:11
  1111be:    83 88       	r3 += 16 			  ## synth.c:1358:20
  1111c0:    81 88       	r1 += 16 			  ## synth.c:1358:20
  1111c2:    00 ed cc 80 	r12 = r12 + 128 			  ## synth.c:1358:20
  1111c6:    87 ef c0 80 	cmp r12, 1920			  ## synth.c:1358:4
  1111ca:    ff fb 21 f4 	ifs (nzcv != 0) goto -380 <mTSYmad_synth_frame+0x1B0 : 111052 >			  ## synth.c:1358:4
  1111ce:    40 43       	r0 = [sp+ 52] 
  1111d0:    08 ed 00 1c 	r0 = r0 + 2076 
  1111d4:    41 4e       	r1 = [r0 + -28] 			  ## synth.c:1496:4
  1111d6:    02 43       	r2 = [sp+ 48] 			  ## synth.c:1358:4
  1111d8:    12 a1       	r2 = r2 << 1 			  ## synth.c:1358:4
  1111da:    07 42       	r7 = [sp+ 32] 			  ## synth.c:1358:4
  1111dc:    d2 d5       	r2 = r2 + r7 			  ## synth.c:1358:4
  1111de:    03 ed 22 00 	r2 = r2 + 768 			  ## synth.c:1358:4
  1111e2:    90 e8 23 fe 	r3 = h[r2 + -6] (s) 			  ## synth.c:1496:4
  1111e6:    9b dc       	r3 = -r3 			  ## synth.c:1496:4
  1111e8:    d9 06       	macc = r3 * r1 (s) 			  ## synth.c:1496:4
  1111ea:    c1 49       	r1 = [r0 + 28] 			  ## synth.c:1497:4
  1111ec:    90 e8 23 7f 	r3 = h[r2 + -4] (s) 			  ## synth.c:1497:4
  1111f0:    d9 07       	macc -= r3 * r1 (s) 			  ## synth.c:1497:4
  1111f2:    41 49       	r1 = [r0 + 20] 			  ## synth.c:1498:4
  1111f4:    90 e8 23 ff 	r3 = h[r2 + -2] (s) 			  ## synth.c:1498:4
  1111f8:    d9 07       	macc -= r3 * r1 (s) 			  ## synth.c:1498:4
  1111fa:    c1 48       	r1 = [r0 + 12] 			  ## synth.c:1499:4
  1111fc:    90 e8 23 00 	r3 = h[r2 + 0] (s) 			  ## synth.c:1499:4
  111200:    d9 07       	macc -= r3 * r1 (s) 			  ## synth.c:1499:4
  111202:    41 48       	r1 = [r0 + 4] 			  ## synth.c:1500:4
  111204:    90 e8 23 80 	r3 = h[r2 + 2] (s) 			  ## synth.c:1500:4
  111208:    d9 07       	macc -= r3 * r1 (s) 			  ## synth.c:1500:4
  11120a:    c1 4f       	r1 = [r0 + -4] 			  ## synth.c:1501:4
  11120c:    90 e8 23 01 	r3 = h[r2 + 4] (s) 			  ## synth.c:1501:4
  111210:    d9 07       	macc -= r3 * r1 (s) 			  ## synth.c:1501:4
  111212:    41 4f       	r1 = [r0 + -12] 			  ## synth.c:1502:4
  111214:    90 e8 23 81 	r3 = h[r2 + 6] (s) 			  ## synth.c:1502:4
  111218:    d9 07       	macc -= r3 * r1 (s) 			  ## synth.c:1502:4
  11121a:    c0 4e       	r0 = [r0 + -20] 			  ## synth.c:1503:4
  11121c:    90 e8 21 02 	r1 = h[r2 + 8] (s) 			  ## synth.c:1503:4
  111220:    c8 07       	macc -= r1 * r0 (s) 			  ## synth.c:1503:4
  111222:    08 80       	r0 = 1 			  ## synth.c:1505:4
  111224:    a0 fd e0 00 	macc += r0 * r14 (s) 			  ## synth.c:1505:4
  111228:    90 ea 00 80 	r0 = -32768 			  ## synth.c:1505:4
  11122c:    c0 f9 01 0d 	r1 = macc >>> 13 			  ## synth.c:1505:4
  111230:    08 ce       	cmp r1, r0			  ## synth.c:1505:4
  111232:    08 c6       	r0 = r1 			  ## synth.c:1505:4
  111234:    86 43       	r6 = [sp+ 56] 			  ## synth.c:1505:4
  111236:    d0 03       	ifs (nzcv <= 0) {			  ## synth.c:1505:4
  111238:    90 ea 00 80 		r0 = -32768 
                               	}			  ## synth.c:1505:4
  11123c:    12 ea ff 7f 	r2 = 32767 			  ## synth.c:1505:4
  111240:    0c ef 10 00 	cmp r1, 32768			  ## synth.c:1506:12
  111244:    43 42       	r3 = [sp+ 36] 			  ## synth.c:1506:12
  111246:    20 e9 0c 06 	r12 = [sp+ 24] 			  ## synth.c:1506:12
  11124a:    c4 40       	r4 = [sp+ 12] 			  ## synth.c:1506:12
  11124c:    b0 03       	ifs (nzcv < 0) {			  ## synth.c:1506:12
  11124e:    02 c6       		r2 = r0 
                               	}			  ## synth.c:1506:12
  111250:    c0 41       	r0 = [sp+ 28] 			  ## synth.c:1506:10
  111252:    11 ea a0 04 	r1 = 1184 			  ## synth.c:1506:10
  111256:    50 e7 02 01 	h[r0 + r1] = r2 			  ## synth.c:1506:10
  11125a:    18 48       	r0 = [r3 + 0] 			  ## synth.c:1512:80
  11125c:    9b 48       	r3 = [r3 + 8] 			  ## synth.c:1512:54
  11125e:    a1 c6       	r1 = r12 			  ## synth.c:1512:35
  111260:    02 82       	r2 = 64 			  ## synth.c:1512:35
  111262:    ab 01       	call r3			  ## synth.c:1512:35
  111264:    20 ee 00 40 	r0 = 64 - r0 			  ## synth.c:1512:33
  111268:    3d c6       	r5 = r7 			  ## synth.c:1512:33
  11126a:    38 70       	h[r7 + 0] = r0 			  ## synth.c:1512:28
  11126c:    41 c9       	r1 = r0.l 			  ## synth.c:1512:30
  11126e:    72 d0       	r2 = r6 + 1 			  ## synth.c:1508:19
  111270:    80 f3 27 0f 	r7 = r2 & 15 			  ## synth.c:1508:24
  111274:    e9 20       	if (r1 != 0) goto 28 <mTSYmad_synth_frame+0x3F0 : 111292 >
  111276:    86 42       	r6 = [sp+ 40] 
  111278:    b6 d0       	r6 = r6 + 2 			  ## synth.c:1282:3
  11127a:    c3 42       	r3 = [sp+ 44] 			  ## synth.c:1282:3
  11127c:    5b d0       	r3 = r3 + 1 			  ## synth.c:1282:35
  11127e:    00 40       	r0 = [sp] 			  ## synth.c:1282:3
  111280:    18 ce       	cmp r3, r0			  ## synth.c:1282:3
  111282:    ff fb 63 e3 	if (nzcv < 0) goto -916 <mTSYmad_synth_frame+0x50 : 110ef2 >			  ## synth.c:1282:3
  111286:    01 08       	goto 2 <mTSYmad_synth_frame+0x3E8 : 11128a >			  ## synth.c:1282:3
  111288:    25 c6       	r5 = r4 
  11128a:    6f 68       	[r5 + 4] = r7 			  ## synth.c:1534:15
  11128c:    00 80       	r0 = 0 			  ## synth.c:1534:15
  11128e:    28 74       	h[r5 + 2] = r0 			  ## synth.c:1561:17
  111290:    0f 08       	goto 30 <mTSYmad_synth_frame+0x40E : 1112b0 >			  ## synth.c:1561:17
  111292:    c1 42       	r1 = [sp+ 44] 			  ## synth.c:1515:24
  111294:    49 d0       	r1 = r1 + 1 			  ## synth.c:1515:24
  111296:    29 74       	h[r5 + 2] = r1 			  ## synth.c:1515:20
  111298:    6f 68       	[r5 + 4] = r7 			  ## synth.c:1516:19
  11129a:    c0 c9       	r0 = r0.l (s) 			  ## synth.c:1516:19
  11129c:    08 9a       	cmp r0, 65			  ## synth.c:1517:10
  11129e:    07 1b       	ifs (nzcv < 0) goto 14 <mTSYmad_synth_frame+0x40C : 1112ae >			  ## synth.c:1517:10
  1112a0:    00 80       	r0 = 0 			  ## synth.c:1519:30
  1112a2:    28 70       	h[r5 + 0] = r0 			  ## synth.c:1519:30
  1112a4:    08 80       	r0 = 1 			  ## synth.c:1520:25
  1112a6:    41 42       	r1 = [sp+ 36] 			  ## synth.c:1520:25
  1112a8:    00 ed 11 90 	r1 = r1 + 144 			  ## synth.c:1520:25
  1112ac:    08 78       	b[r1 + 0] = r0 			  ## synth.c:1520:25
  1112ae:    08 80       	r0 = 1 
  1112b0:    00 ed ff bc 	sp = sp + 188 
  1112b4:    30 c4       	{macch, maccl} = [sp++] 
  1112b6:    1e c0       	{pc, r14-r4} = [sp++] 


.GCPI385_0:
  1112b8:    0c 8d 11 00     < 1150220 : 0x118D0C >

.GCPI385_1:
  1112bc:    fe ff ff 3f     < 1073741822 : 0x3FFFFFFE >

III_requantize:
  1112c0:    15 c2       	[--sp] = {rets, r5, r4} 			  ## layer3.c:792:0
  1112c2:    30 c5       	[--sp] = {macch, maccl} 			  ## layer3.c:792:0
  1112c4:    c2 bf       	r2 = r0 >>> 31 			  ## layer3.c:792:0
  1112c6:    83 d4       	r3 = r0 + r2 			  ## layer3.c:792:0
  1112c8:    53 da       	r3 ^= r2 			  ## layer3.c:792:0
  1112ca:    20 ee 12 27 	r2 = 39 - r1 			  ## layer3.c:810:14
  1112ce:    80 f3 21 03 	r1 = r2 & 3 			  ## layer3.c:811:21
  1112d2:    09 a2       	r1 = r1 << 2 			  ## layer3.c:812:10
  1112d4:    c4 2e       	r4 = [addr(108)]  <.GCPI386_0 : 111340 >			  ## layer3.c:812:10
  1112d6:    20 e7 41 01 	r1 = [r4 + r1] 			  ## layer3.c:812:10
  1112da:    d2 a2       	r2 = r2 >>> 2 			  ## layer3.c:810:27
  1112dc:    81 ef 30 00 	cmp r3, 256			  ## layer3.c:814:6
  1112e0:    04 1c       	ifs (nzcv > 0) goto 8 <III_requantize+0x2A : 1112ea >			  ## layer3.c:814:6
  1112e2:    1b a2       	r3 = r3 << 2 			  ## layer3.c:816:11
  1112e4:    1b d5       	r3 = r3 + r4 			  ## layer3.c:816:11
  1112e6:    1b 49       	r3 = [r3 + 16] 			  ## layer3.c:816:11
  1112e8:    1d 08       	goto 58 <III_requantize+0x64 : 111324 >
  1112ea:    0e ef 30 00 	cmp r3, 2048			  ## layer3.c:820:7
  1112ee:    0d 1c       	ifs (nzcv > 0) goto 26 <III_requantize+0x4A : 11130a >			  ## layer3.c:820:7
  1112f0:    5d a3       	r5 = r3 >> 3 			  ## layer3.c:825:12
  1112f2:    2d a2       	r5 = r5 << 2 			  ## layer3.c:825:12
  1112f4:    64 d5       	r4 = r4 + r5 			  ## layer3.c:825:12
  1112f6:    05 e5 44 04 	r4, r5 = d[r4 + 16] 			  ## layer3.c:825:12
  1112fa:    64 d7       	r4 = r4 - r5 			  ## layer3.c:826:38
  1112fc:    80 f3 33 07 	r3 = r3 & 7 			  ## layer3.c:824:17
  111300:    23 06       	r3 *= r4 			  ## layer3.c:826:54
  111302:    2c a3       	r4 = r5 << 3 			  ## layer3.c:825:25
  111304:    1b d5       	r3 = r3 + r4 			  ## layer3.c:826:18
  111306:    d2 d3       	r2 = r2 + -1 			  ## layer3.c:822:16
  111308:    0d 08       	goto 26 <III_requantize+0x64 : 111324 >
  11130a:    5d a6       	r5 = r3 >> 6 			  ## layer3.c:833:12
  11130c:    2d a2       	r5 = r5 << 2 			  ## layer3.c:833:12
  11130e:    64 d5       	r4 = r4 + r5 			  ## layer3.c:833:12
  111310:    05 e5 44 04 	r4, r5 = d[r4 + 16] 			  ## layer3.c:833:12
  111314:    64 d7       	r4 = r4 - r5 			  ## layer3.c:834:39
  111316:    80 f3 33 3f 	r3 = r3 & 63 			  ## layer3.c:832:17
  11131a:    23 06       	r3 *= r4 			  ## layer3.c:834:55
  11131c:    db a1       	r3 = r3 >>> 1 			  ## layer3.c:834:62
  11131e:    2c a5       	r4 = r5 << 5 			  ## layer3.c:833:25
  111320:    1b d5       	r3 = r3 + r4 			  ## layer3.c:834:18
  111322:    52 d3       	r2 = r2 + -3 			  ## layer3.c:830:16
  111324:    d9 06       	macc = r3 * r1 (s) 			  ## layer3.c:841:3
  111326:    80 f9 01 02 	r1 = macc >>> r2 			  ## layer3.c:841:3
  11132a:    00 ed 11 80 	r1 = r1 + 128 			  ## layer3.c:842:17
  11132e:    ca a8       	r2 = r1 >>> 8 			  ## layer3.c:842:17
  111330:    91 dc       	r1 = -r2 			  ## layer3.c:846:17
  111332:    00 98       	cmp r0, 0			  ## layer3.c:845:6
  111334:    a0 03       	ifs (nzcv >= 0) {			  ## layer3.c:845:6
  111336:    11 c6       		r1 = r2 
                               	}			  ## layer3.c:845:6
  111338:    c8 c9       	r0 = r1.l (s) 			  ## layer3.c:848:2
  11133a:    30 c4       	{macch, maccl} = [sp++] 
  11133c:    15 c0       	{pc, r5, r4} = [sp++] 
  11133e:    00 00       	nop


.GCPI386_0:
  111340:    34 74 11 00     < 1143860 : 0x117434 >

III_reorder:
  111344:    1e c2       	[--sp] = {rets, r14-r4} 			  ## layer3.c:1217:0
  111346:    ec cd       	sp += -20 			  ## layer3.c:1217:0
  111348:    1e c6       	r6 = r3 			  ## layer3.c:1217:0
  11134a:    0f c6       	r7 = r1 			  ## layer3.c:1217:0
  11134c:    c0 60       	[sp+ 12] = r0 			  ## layer3.c:1217:0
  11134e:    56 ea 00 00 	r14 = 0 			  ## layer3.c:1217:0
  111352:    50 ea 00 00 	r8 = 0 			  ## layer3.c:1217:0
  111356:    00 f4 20 08 	tst r2, 8			  ## layer3.c:1311:6
  11135a:    06 10       	ifs (nzcv == 0) goto 12 <III_reorder+0x24 : 111368 >			  ## layer3.c:1311:6
  11135c:    08 e8 60 40 	r0 = b[r6 ++= 1] 			  ## layer3.c:1316:9
  111360:    40 cb       	r8 += r0 			  ## layer3.c:1316:6
  111362:    80 ef 80 24 	cmp r8, 36			  ## layer3.c:1315:3
  111366:    fa 13       	if (nzcv < 0) goto -12 <III_reorder+0x18 : 11135c >			  ## layer3.c:1315:3
  111368:    20 f7 80 01 	r0 = r8 << 1 			  ## layer3.c:1324:22
  11136c:    c1 40       	r1 = [sp+ 12] 			  ## layer3.c:1324:22
  11136e:    09 d4       	r1 = r1 + r0 			  ## layer3.c:1324:22
  111370:    38 c6       	r0 = r7 			  ## layer3.c:1324:2
  111372:    12 ea 1e 01 	r2 = 286 			  ## layer3.c:1324:2
  111376:    d8 e1 bf de 	call -320554 <memcpy : c2f50 >			  ## layer3.c:1324:2
  11137a:    00 ed 8a 0c 	r10 = r8 + 12 			  ## layer3.c:1323:19
  11137e:    84 c6       	r4 = r8 
  111380:    c4 c6       	r12 = r8 
  111382:    c3 c6       	r11 = r8 
  111384:    07 61       	[sp+ 16] = r7 
  111386:    40 ee 45 0c 	r5 = r4 - r12 			  ## layer3.c:1334:17
  11138a:    08 e8 6d c0 	r13 = b[r6 ++= 3] 			  ## layer3.c:1332:7
  11138e:    00 ee d0 05 	r0 = r13 + r5 			  ## layer3.c:1335:19
  111392:    f8 9b       	cmp r0, 127			  ## layer3.c:1336:7
  111394:    23 1b       	ifs (nzcv < 0) goto 70 <III_reorder+0x98 : 1113dc >
  111396:    80 ef 50 8e 	cmp r5, 142			  ## layer3.c:1338:8
  11139a:    15 1c       	ifs (nzcv > 0) goto 42 <III_reorder+0x82 : 1113c6 >			  ## layer3.c:1338:8
  11139c:    2f a1       	r7 = r5 << 1 			  ## layer3.c:1340:25
  11139e:    00 41       	r0 = [sp+ 16] 			  ## layer3.c:1340:25
  1113a0:    c1 d5       	r1 = r0 + r7 			  ## layer3.c:1340:25
  1113a2:    20 ee 50 8f 	r0 = 143 - r5 			  ## layer3.c:1340:56
  1113a6:    05 a1       	r5 = r0 << 1 			  ## layer3.c:1340:66
  1113a8:    00 41       	r0 = [sp+ 16] 			  ## layer3.c:1340:5
  1113aa:    2a c6       	r2 = r5 			  ## layer3.c:1340:5
  1113ac:    d8 e1 0f dd 	call -320608 <memcpy : c2f50 >			  ## layer3.c:1340:5
  1113b0:    00 41       	r0 = [sp+ 16] 			  ## layer3.c:1341:13
  1113b2:    40 d5       	r0 = r0 + r5 			  ## layer3.c:1341:13
  1113b4:    20 f7 c1 01 	r1 = r12 << 1 			  ## layer3.c:1341:55
  1113b8:    c2 40       	r2 = [sp+ 12] 			  ## layer3.c:1341:46
  1113ba:    89 d4       	r1 = r1 + r2 			  ## layer3.c:1341:46
  1113bc:    01 ed 11 1e 	r1 = r1 + 286 			  ## layer3.c:1341:46
  1113c0:    3a c6       	r2 = r7 			  ## layer3.c:1341:5
  1113c2:    07 41       	r7 = [sp+ 16] 			  ## layer3.c:1341:5
  1113c4:    06 08       	goto 12 <III_reorder+0x8E : 1113d2 >			  ## layer3.c:1341:5
  1113c6:    20 a1       	r0 = r4 << 1 			  ## layer3.c:1346:25
  1113c8:    c1 40       	r1 = [sp+ 12] 			  ## layer3.c:1346:25
  1113ca:    09 d4       	r1 = r1 + r0 			  ## layer3.c:1346:25
  1113cc:    38 c6       	r0 = r7 			  ## layer3.c:1346:5
  1113ce:    12 ea 1e 01 	r2 = 286 			  ## layer3.c:1346:5
  1113d2:    d8 e1 df db 	call -320646 <memcpy : c2f50 >
  1113d6:    05 80       	r5 = 0 
  1113d8:    64 c6       	r12 = r4 
  1113da:    a8 c6       	r0 = r13 
  1113dc:    80 ef d0 00 	cmp r13, 0			  ## layer3.c:1355:3
  1113e0:    46 60       	[sp+ 4] = r6 			  ## layer3.c:1355:3
  1113e2:    04 60       	[sp] = r4 			  ## layer3.c:1355:3
  1113e4:    60 e9 0d 02 	[sp+ 8] = r13 			  ## layer3.c:1355:3
  1113e8:    55 10       	ifs (nzcv == 0) goto 170 <III_reorder+0x150 : 111494 >			  ## layer3.c:1355:3
  1113ea:    20 f7 81 01 	r1 = r8 << 1 			  ## layer3.c:1353:13
  1113ee:    c2 40       	r2 = [sp+ 12] 			  ## layer3.c:1353:13
  1113f0:    56 d4       	r6 = r2 + r1 			  ## layer3.c:1353:13
  1113f2:    20 f7 d1 01 	r1 = r13 << 1 			  ## layer3.c:1352:21
  1113f6:    09 d5       	r1 = r1 + r4 			  ## layer3.c:1352:18
  1113f8:    09 a1       	r1 = r1 << 1 			  ## layer3.c:1357:16
  1113fa:    00 ee 29 01 	r9 = r2 + r1 			  ## layer3.c:1357:16
  1113fe:    00 ed c1 8d 	r1 = r12 + 141 			  ## layer3.c:1357:65
  111402:    91 ce       	cmp r10, r1			  ## layer3.c:1357:36
  111404:    03 1c       	ifs (nzcv > 0) goto 6 <III_reorder+0xC8 : 11140c >			  ## layer3.c:1357:36
  111406:    80 ef 00 89 	cmp r0, 137
  11140a:    18 1b       	ifs (nzcv < 0) goto 48 <III_reorder+0xF8 : 11143c >
  11140c:    2c a1       	r4 = r5 << 1 			  ## layer3.c:1359:25
  11140e:    39 d5       	r1 = r7 + r4 			  ## layer3.c:1359:25
  111410:    20 ee 50 8f 	r0 = 143 - r5 			  ## layer3.c:1359:56
  111414:    07 a1       	r7 = r0 << 1 			  ## layer3.c:1359:66
  111416:    00 41       	r0 = [sp+ 16] 			  ## layer3.c:1359:5
  111418:    3a c6       	r2 = r7 			  ## layer3.c:1359:5
  11141a:    d8 e1 9f d9 	call -320718 <memcpy : c2f50 >			  ## layer3.c:1359:5
  11141e:    00 41       	r0 = [sp+ 16] 			  ## layer3.c:1360:13
  111420:    c0 d5       	r0 = r0 + r7 			  ## layer3.c:1360:13
  111422:    07 41       	r7 = [sp+ 16] 			  ## layer3.c:1360:13
  111424:    20 f7 c1 01 	r1 = r12 << 1 			  ## layer3.c:1360:55
  111428:    c2 40       	r2 = [sp+ 12] 			  ## layer3.c:1360:46
  11142a:    89 d4       	r1 = r1 + r2 			  ## layer3.c:1360:46
  11142c:    01 ed 11 1e 	r1 = r1 + 286 			  ## layer3.c:1360:46
  111430:    22 c6       	r2 = r4 			  ## layer3.c:1360:5
  111432:    d8 e1 df d8 	call -320742 <memcpy : c2f50 >			  ## layer3.c:1360:5
  111436:    6c cb       	r12 += r5 			  ## layer3.c:1362:11
  111438:    05 80       	r5 = 0 
  11143a:    80 40       	r0 = [sp+ 8] 
  11143c:    29 a1       	r1 = r5 << 1 			  ## layer3.c:1367:24
  11143e:    c9 d5       	r1 = r1 + r7 			  ## layer3.c:1367:24
  111440:    09 50       	r1 = h[r1 + 0] 			  ## layer3.c:1367:24
  111442:    20 f7 e2 01 	r2 = r14 << 1 			  ## layer3.c:1367:4
  111446:    50 e7 61 02 	h[r6 + r2] = r1 			  ## layer3.c:1367:22
  11144a:    b1 d4       	r1 = r6 + r2 			  ## layer3.c:1367:4
  11144c:    02 a1       	r2 = r0 << 1 			  ## layer3.c:1368:28
  11144e:    d2 d5       	r2 = r2 + r7 			  ## layer3.c:1368:28
  111450:    12 50       	r2 = h[r2 + 0] 			  ## layer3.c:1368:28
  111452:    ca 70       	h[r1 + 12] = r2 			  ## layer3.c:1368:26
  111454:    10 e8 92 00 	r2 = h[r9 + 0] 			  ## layer3.c:1369:28
  111458:    8a 71       	h[r1 + 24] = r2 			  ## layer3.c:1369:26
  11145a:    00 ed e1 01 	r1 = r14 + 1 			  ## layer3.c:1370:13
  11145e:    31 98       	cmp r1, 6			  ## layer3.c:1373:8
  111460:    0d 1b       	ifs (nzcv < 0) goto 26 <III_reorder+0x138 : 11147c >
  111462:    00 ed 81 12 	r1 = r8 + 18 			  ## layer3.c:1376:14
  111466:    0a a1       	r2 = r1 << 1 			  ## layer3.c:1378:15
  111468:    c3 40       	r3 = [sp+ 12] 			  ## layer3.c:1378:15
  11146a:    9e d4       	r6 = r3 + r2 			  ## layer3.c:1378:15
  11146c:    00 ed bb 12 	r11 = r11 + 18 			  ## layer3.c:1379:11
  111470:    00 ed 8a 1e 	r10 = r8 + 30 			  ## layer3.c:1377:21
  111474:    1f ed ee fb 	r14 = r14 + -5 			  ## layer3.c:1375:15
  111478:    48 c6       	r8 = r1 
  11147a:    03 08       	goto 6 <III_reorder+0x13E : 111482 >
  11147c:    00 ed aa 01 	r10 = r10 + 1 			  ## layer3.c:1371:9
  111480:    4e c6       	r14 = r1 
  111482:    40 d0       	r0 = r0 + 1 			  ## layer3.c:1368:45
  111484:    6d d0       	r5 = r5 + 1 			  ## layer3.c:1367:41
  111486:    1f ed dd ff 	r13 = r13 + -1 			  ## layer3.c:1355:17
  11148a:    00 ed 99 02 	r9 = r9 + 2 			  ## layer3.c:1355:17
  11148e:    80 ef d0 00 	cmp r13, 0			  ## layer3.c:1355:3
  111492:    b5 11       	ifs (nzcv != 0) goto -150 <III_reorder+0xBA : 1113fe >			  ## layer3.c:1355:3
  111494:    80 40       	r0 = [sp+ 8] 			  ## layer3.c:1382:14
  111496:    00 fc 00 03 	r0 = r0 * 3 			  ## layer3.c:1382:14
  11149a:    04 40       	r4 = [sp] 			  ## layer3.c:1382:14
  11149c:    24 d4       	r4 = r4 + r0 			  ## layer3.c:1382:9
  11149e:    82 ef b0 40 	cmp r11, 576
  1114a2:    46 40       	r6 = [sp+ 4] 
  1114a4:    ff fb f3 f6 	if (nzcv < 0) goto -290 <III_reorder+0x42 : 111386 >
  1114a8:    14 cd       	sp += 20 
  1114aa:    1e c0       	{pc, r14-r4} = [sp++] 


III_aliasreduce:
  1114ac:    1b c2       	[--sp] = {rets, r11-r4} 			  ## layer3.c:1417:0
  1114ae:    30 c5       	[--sp] = {macch, maccl} 			  ## layer3.c:1417:0
  1114b0:    99 98       	cmp r1, 19			  ## layer3.c:1422:2
  1114b2:    29 1b       	ifs (nzcv < 0) goto 82 <III_aliasreduce+0x5A : 111506 >			  ## layer3.c:1422:2
  1114b4:    09 a1       	r1 = r1 << 1 			  ## layer3.c:1421:11
  1114b6:    00 ee 08 01 	r8 = r0 + r1 			  ## layer3.c:1421:11
  1114ba:    00 ed 09 22 	r9 = r0 + 34 			  ## layer3.c:1419:6
  1114be:    20 89       	r0 += 36 			  ## layer3.c:1419:6
  1114c0:    20 e4 0a 12 	r10 = [addr(72)]  <.GCPI388_0 : 11150c >
  1114c4:    20 e4 0b 12 	r11 = [addr(72)]  <.GCPI388_1 : 111510 >
  1114c8:    05 80       	r5 = 0 
  1114ca:    8e c6       	r6 = r9 
  1114cc:    90 e7 07 05 	r7 = h[r0 + r5] (s) 			  ## layer3.c:1429:8
  1114d0:    90 e7 a1 05 	r1 = h[r10 + r5] (s) 			  ## layer3.c:1434:5
  1114d4:    90 e8 62 00 	r2 = h[r6 + 0] (s) 			  ## layer3.c:1428:8
  1114d8:    d1 06       	macc = r2 * r1 (s) 			  ## layer3.c:1434:5
  1114da:    90 e7 b3 05 	r3 = h[r11 + r5] (s) 			  ## layer3.c:1435:5
  1114de:    bc dc       	r4 = -r7 			  ## layer3.c:1435:5
  1114e0:    a3 07       	macc += r4 * r3 (s) 			  ## layer3.c:1435:5
  1114e2:    c0 f9 04 0e 	r4 = macc >>> 14 			  ## layer3.c:1437:5
  1114e6:    58 e8 64 ff 	h[r6 ++= -2] = r4 			  ## layer3.c:1437:5
  1114ea:    f9 06       	macc = r7 * r1 (s) 			  ## layer3.c:1439:5
  1114ec:    93 07       	macc += r2 * r3 (s) 			  ## layer3.c:1440:5
  1114ee:    c0 f9 01 0e 	r1 = macc >>> 14 			  ## layer3.c:1442:6
  1114f2:    50 e7 01 05 	h[r0 + r5] = r1 			  ## layer3.c:1442:6
  1114f6:    ad d0       	r5 = r5 + 2 			  ## layer3.c:1423:17
  1114f8:    85 98       	cmp r5, 16			  ## layer3.c:1423:3
  1114fa:    e8 11       	ifs (nzcv != 0) goto -48 <III_aliasreduce+0x20 : 1114cc >			  ## layer3.c:1423:3
  1114fc:    00 ed 99 24 	r9 = r9 + 36 			  ## layer3.c:1422:2
  111500:    20 89       	r0 += 36 			  ## layer3.c:1422:2
  111502:    40 ce       	cmp r0, r8			  ## layer3.c:1422:2
  111504:    e1 13       	if (nzcv < 0) goto -62 <III_aliasreduce+0x1C : 1114c8 >			  ## layer3.c:1422:2
  111506:    30 c4       	{macch, maccl} = [sp++] 
  111508:    1b c0       	{pc, r11-r4} = [sp++] 
  11150a:    00 00       	nop


.GCPI388_0:
  11150c:    60 d9 11 00     < 1169760 : 0x11D960 >

.GCPI388_1:
  111510:    70 d9 11 00     < 1169776 : 0x11D970 >

fastsdct:
  111514:    1c c2       	[--sp] = {rets, r12-r4} 			  ## layer3.c:1496:0
  111516:    30 c5       	[--sp] = {macch, maccl} 			  ## layer3.c:1496:0
  111518:    a0 cd       	sp += -96 			  ## layer3.c:1496:0
  11151a:    02 92       	r2 = sp + 64 			  ## layer3.c:1496:0
  11151c:    12 d1       	r2 = r2 + 4 			  ## layer3.c:1530:2
  11151e:    03 80       	r3 = 0 
  111520:    04 81       	r4 = 32 
  111522:    20 e7 05 03 	r5 = [r0 + r3] 			  ## layer3.c:1532:18
  111526:    20 e7 06 04 	r6 = [r0 + r4] 			  ## layer3.c:1532:25
  11152a:    77 d5       	r7 = r6 + r5 			  ## layer3.c:1532:23
  11152c:    ad d7       	r5 = r5 - r6 			  ## layer3.c:1533:23
  11152e:    47 e5 25 ff 	d[r2 + -4] = r5, r7 			  ## layer3.c:1532:16
  111532:    24 d3       	r4 = r4 + -4 			  ## layer3.c:1530:16
  111534:    42 88       	r2 += 8 			  ## layer3.c:1530:16
  111536:    1b d1       	r3 = r3 + 4 			  ## layer3.c:1530:16
  111538:    83 98       	cmp r3, 16			  ## layer3.c:1530:2
  11153a:    f3 11       	ifs (nzcv != 0) goto -26 <fastsdct+0xE : 111522 >			  ## layer3.c:1530:2
  11153c:    20 e8 08 04 	r8 = [r0 + 16] 			  ## layer3.c:1537:7
  111540:    20 e9 09 12 	r9 = [sp+ 72] 			  ## layer3.c:1537:14
  111544:    20 e9 0a 16 	r10 = [sp+ 88] 			  ## layer3.c:1536:21
  111548:    20 e9 0b 14 	r11 = [sp+ 80] 			  ## layer3.c:1536:14
  11154c:    05 44       	r5 = [sp+ 64] 			  ## layer3.c:1536:7
  11154e:    c0 44       	r0 = [sp+ 76] 			  ## layer3.c:1540:9
  111550:    00 60       	[sp] = r0 			  ## layer3.c:1540:7
  111552:    c2 45       	r2 = [sp+ 92] 			  ## layer3.c:1541:9
  111554:    43 44       	r3 = [sp+ 68] 			  ## layer3.c:1541:16
  111556:    9e d4       	r6 = r3 + r2 			  ## layer3.c:1541:14
  111558:    46 60       	[sp+ 4] = r6 			  ## layer3.c:1541:7
  11155a:    47 45       	r7 = [sp+ 84] 			  ## layer3.c:1542:9
  11155c:    bc d6       	r4 = r7 - r2 			  ## layer3.c:1542:14
  11155e:    84 60       	[sp+ 8] = r4 			  ## layer3.c:1542:7
  111560:    d2 d5       	r2 = r2 + r7 			  ## layer3.c:1543:14
  111562:    9a d6       	r2 = r3 - r2 			  ## layer3.c:1543:21
  111564:    c2 60       	[sp+ 12] = r2 			  ## layer3.c:1543:7
  111566:    40 ee b2 05 	r2 = r11 - r5 			  ## layer3.c:1544:14
  11156a:    02 61       	[sp+ 16] = r2 			  ## layer3.c:1544:7
  11156c:    40 ee b2 0a 	r2 = r11 - r10 			  ## layer3.c:1545:14
  111570:    42 61       	[sp+ 20] = r2 			  ## layer3.c:1545:7
  111572:    40 ee 52 0a 	r2 = r5 - r10 			  ## layer3.c:1546:14
  111576:    82 61       	[sp+ 24] = r2 			  ## layer3.c:1546:7
  111578:    da d5       	r2 = r3 + r7 			  ## layer3.c:1547:14
  11157a:    c2 61       	[sp+ 28] = r2 			  ## layer3.c:1547:7
  11157c:    ca 29       	r2 = [addr(156)]  <.GCPI389_1 : 111618 >			  ## layer3.c:1577:3
  11157e:    c2 06       	macc = r0 * r2 (s) 			  ## layer3.c:1577:3
  111580:    c0 f9 00 14 	r0 = macc >>> 20 			  ## layer3.c:1577:3
  111584:    00 62       	[sp+ 32] = r0 			  ## layer3.c:1577:3
  111586:    00 91       	r0 = sp + 32 			  ## layer3.c:1577:3
  111588:    07 d1       	r7 = r0 + 4 			  ## layer3.c:1575:2
  11158a:    00 90       	r0 = sp + 0 			  ## layer3.c:1575:2
  11158c:    40 88       	r0 += 8 			  ## layer3.c:1542:2
  11158e:    02 80       	r2 = 0 
  111590:    4b 28       	r3 = [addr(132)]  <.GCPI389_0 : 111614 >
  111592:    03 08       	goto 6 <fastsdct+0x86 : 11159a >
  111594:    20 e7 06 02 	r6 = [r0 + r2] 
  111598:    12 d1       	r2 = r2 + 4 			  ## layer3.c:1575:2
  11159a:    9c d4       	r4 = r3 + r2 			  ## layer3.c:1577:3
  11159c:    20 e8 44 1c 	r4 = [r4 + 112] 			  ## layer3.c:1577:3
  1115a0:    f4 06       	macc = r6 * r4 (s) 			  ## layer3.c:1577:3
  1115a2:    c0 f9 04 14 	r4 = macc >>> 20 			  ## layer3.c:1577:3
  1115a6:    60 e7 74 02 	[r7 + r2] = r4 			  ## layer3.c:1577:3
  1115aa:    c2 98       	cmp r2, 24			  ## layer3.c:1575:2
  1115ac:    f3 11       	ifs (nzcv != 0) goto -26 <fastsdct+0x80 : 111594 >			  ## layer3.c:1575:2
  1115ae:    00 ee 9c 08 	r12 = r9 + r8 			  ## layer3.c:1537:12
  1115b2:    00 ee b2 05 	r2 = r11 + r5 			  ## layer3.c:1536:12
  1115b6:    52 cb       	r10 += r2 			  ## layer3.c:1536:19
  1115b8:    00 ee c3 0a 	r3 = r12 + r10 			  ## layer3.c:1582:12
  1115bc:    0b 68       	[r1 + 0] = r3 			  ## layer3.c:1582:7
  1115be:    03 42       	r3 = [sp+ 32] 			  ## layer3.c:1583:16
  1115c0:    20 e9 0b 0a 	r11 = [sp+ 40] 			  ## layer3.c:1583:9
  1115c4:    40 ee b5 03 	r5 = r11 - r3 			  ## layer3.c:1583:14
  1115c8:    46 42       	r6 = [sp+ 36] 			  ## layer3.c:1583:23
  1115ca:    ad d7       	r5 = r5 - r6 			  ## layer3.c:1583:21
  1115cc:    8d 68       	[r1 + 8] = r5 			  ## layer3.c:1583:7
  1115ce:    20 f7 85 01 	r5 = r8 << 1 			  ## layer3.c:1538:10
  1115d2:    40 ee 55 09 	r5 = r5 - r9 			  ## layer3.c:1538:17
  1115d6:    47 43       	r7 = [sp+ 52] 			  ## layer3.c:1584:9
  1115d8:    78 d7       	r0 = r7 - r5 			  ## layer3.c:1584:14
  1115da:    02 43       	r2 = [sp+ 48] 			  ## layer3.c:1584:22
  1115dc:    80 d6       	r0 = r0 - r2 			  ## layer3.c:1584:20
  1115de:    08 69       	[r1 + 16] = r0 			  ## layer3.c:1584:7
  1115e0:    c0 42       	r0 = [sp+ 44] 			  ## layer3.c:1585:9
  1115e2:    88 69       	[r1 + 24] = r0 			  ## layer3.c:1585:7
  1115e4:    a8 d6       	r0 = r5 - r2 			  ## layer3.c:1586:13
  1115e6:    82 43       	r2 = [sp+ 56] 			  ## layer3.c:1586:22
  1115e8:    80 d6       	r0 = r0 - r2 			  ## layer3.c:1586:20
  1115ea:    08 6a       	[r1 + 32] = r0 			  ## layer3.c:1586:7
  1115ec:    c0 43       	r0 = [sp+ 60] 			  ## layer3.c:1587:17
  1115ee:    1c d6       	r4 = r3 - r0 			  ## layer3.c:1587:15
  1115f0:    a4 d7       	r4 = r4 - r6 			  ## layer3.c:1587:22
  1115f2:    8c 6a       	[r1 + 40] = r4 			  ## layer3.c:1587:8
  1115f4:    20 f7 c4 01 	r4 = r12 << 1 			  ## layer3.c:1588:17
  1115f8:    40 ee a4 04 	r4 = r10 - r4 			  ## layer3.c:1588:13
  1115fc:    0c 6b       	[r1 + 48] = r4 			  ## layer3.c:1588:8
  1115fe:    c0 d4       	r0 = r0 + r3 			  ## layer3.c:1589:15
  111600:    98 cb       	r0 += r11 			  ## layer3.c:1589:22
  111602:    88 6b       	[r1 + 56] = r0 			  ## layer3.c:1589:8
  111604:    50 d5       	r0 = r2 + r5 			  ## layer3.c:1590:14
  111606:    c0 d5       	r0 = r0 + r7 			  ## layer3.c:1590:21
  111608:    60 e8 10 10 	[r1 + 64] = r0 			  ## layer3.c:1590:8
  11160c:    60 cd       	sp += 96 			  ## layer3.c:1590:8
  11160e:    30 c4       	{macch, maccl} = [sp++] 			  ## layer3.c:1590:8
  111610:    1c c0       	{pc, r12-r4} = [sp++] 			  ## layer3.c:1590:8
  111612:    00 00       	nop			  ## layer3.c:1590:8


.GCPI389_0:
  111614:    84 73 11 00     < 1143684 : 0x117384 >

.GCPI389_1:
  111618:    85 49 e4 ff     < 4293151109 : 0xFFE44985 >

III_imdct_l:
  11161c:    17 c2       	[--sp] = {rets, r7-r4} 			  ## layer3.c:2158:0
  11161e:    30 c5       	[--sp] = {macch, maccl} 			  ## layer3.c:2158:0
  111620:    1f ed ff 20 	sp = sp + -224 			  ## layer3.c:2158:0
  111624:    02 60       	[sp] = r2 			  ## layer3.c:2158:0
  111626:    04 80       	r4 = 0 			  ## layer3.c:2158:0
  111628:    42 90       	r2 = sp + 8 			  ## layer3.c:2158:0
  11162a:    90 e7 03 04 	r3 = h[r0 + r4] (s) 			  ## layer3.c:2185:10
  11162e:    1b aa       	r3 = r3 << 10 			  ## layer3.c:2185:16
  111630:    68 e8 23 01 	[r2 ++= 4] = r3 			  ## layer3.c:2185:8
  111634:    a4 d0       	r4 = r4 + 2 			  ## layer3.c:2183:16
  111636:    24 99       	cmp r4, 36			  ## layer3.c:2183:2
  111638:    f8 11       	ifs (nzcv != 0) goto -16 <III_imdct_l+0xE : 11162a >			  ## layer3.c:2183:2
  11163a:    41 60       	[sp+ 4] = r1 
  11163c:    01 80       	r1 = 0 
  11163e:    42 90       	r2 = sp + 8 
  111640:    18 2a       	r0 = [addr(416)]  <.GCPI390_0 : 1117e0 >
  111642:    00 ed f6 98 	r6 = sp + 152 
  111646:    20 e7 23 01 	r3 = [r2 + r1] 			  ## layer3.c:1643:3
  11164a:    20 e7 07 01 	r7 = [r0 + r1] 			  ## layer3.c:1643:3
  11164e:    df 06       	macc = r3 * r7 (s) 			  ## layer3.c:1643:3
  111650:    c0 f9 03 14 	r3 = macc >>> 20 			  ## layer3.c:1643:3
  111654:    60 e7 63 01 	[r6 + r1] = r3 			  ## layer3.c:1643:3
  111658:    09 d1       	r1 = r1 + 4 			  ## layer3.c:1641:16
  11165a:    41 9a       	cmp r1, 72			  ## layer3.c:1641:2
  11165c:    f4 11       	ifs (nzcv != 0) goto -24 <III_imdct_l+0x2A : 111646 >			  ## layer3.c:1641:2
  11165e:    21 82       	r1 = 68 
  111660:    02 80       	r2 = 0 
  111662:    87 92       	r7 = sp + 80 
  111664:    20 e7 63 02 	r3 = [r6 + r2] 			  ## layer3.c:1686:13
  111668:    20 e7 65 01 	r5 = [r6 + r1] 			  ## layer3.c:1686:23
  11166c:    ec d4       	r4 = r5 + r3 			  ## layer3.c:1686:21
  11166e:    60 e7 74 02 	[r7 + r2] = r4 			  ## layer3.c:1686:11
  111672:    5b d7       	r3 = r3 - r5 			  ## layer3.c:1687:3
  111674:    84 d4       	r4 = r0 + r2 			  ## layer3.c:1687:3
  111676:    20 e8 44 12 	r4 = [r4 + 72] 			  ## layer3.c:1687:3
  11167a:    dc 06       	macc = r3 * r4 (s) 			  ## layer3.c:1687:3
  11167c:    bb d4       	r3 = r7 + r2 			  ## layer3.c:1686:11
  11167e:    c0 f9 04 14 	r4 = macc >>> 20 			  ## layer3.c:1687:3
  111682:    5c 6a       	[r3 + 36] = r4 			  ## layer3.c:1687:3
  111684:    12 d1       	r2 = r2 + 4 			  ## layer3.c:1684:16
  111686:    09 d3       	r1 = r1 + -4 			  ## layer3.c:1684:16
  111688:    01 99       	cmp r1, 32			  ## layer3.c:1684:2
  11168a:    ec 11       	ifs (nzcv != 0) goto -40 <III_imdct_l+0x48 : 111664 >			  ## layer3.c:1684:2
  11168c:    38 c6       	r0 = r7 			  ## layer3.c:1691:2
  11168e:    31 c6       	r1 = r6 			  ## layer3.c:1691:2
  111690:    ff e1 0f f4 	call -384 <fastsdct : 111514 >			  ## layer3.c:1691:2
  111694:    00 ed 70 24 	r0 = r7 + 36 			  ## layer3.c:1692:12
  111698:    31 d1       	r1 = r6 + 4 			  ## layer3.c:1692:22
  11169a:    ff e1 bf f3 	call -394 <fastsdct : 111514 >			  ## layer3.c:1692:2
  11169e:    00 ed 60 0c 	r0 = r6 + 12 			  ## layer3.c:1716:2
  1116a2:    19 80       	r1 = 3 			  ## layer3.c:1716:2
  1116a4:    ca 41       	r2 = [sp+ 156] 
  1116a6:    03 48       	r3 = [r0 + 0] 			  ## layer3.c:1717:11
  1116a8:    9a d6       	r2 = r3 - r2 			  ## layer3.c:1717:11
  1116aa:    68 e8 02 02 	[r0 ++= 8] = r2 			  ## layer3.c:1717:11
  1116ae:    89 d0       	r1 = r1 + 2 			  ## layer3.c:1716:24
  1116b0:    91 98       	cmp r1, 18			  ## layer3.c:1716:2
  1116b2:    f9 1b       	ifs (nzcv < 0) goto -14 <III_imdct_l+0x8A : 1116a6 >			  ## layer3.c:1716:2
  1116b4:    00 80       	r0 = 0 
  1116b6:    01 80       	r1 = 0 
  1116b8:    45 40       	r5 = [sp+ 4] 
  1116ba:    20 e7 62 00 	r2 = [r6 + r0] 			  ## layer3.c:1742:14
  1116be:    d2 a1       	r2 = r2 >>> 1 			  ## layer3.c:1742:22
  1116c0:    51 d6       	r1 = r2 - r1 			  ## layer3.c:1742:28
  1116c2:    60 e7 61 00 	[r6 + r0] = r1 			  ## layer3.c:1742:11
  1116c6:    00 d1       	r0 = r0 + 4 			  ## layer3.c:1740:16
  1116c8:    40 9a       	cmp r0, 72			  ## layer3.c:1740:2
  1116ca:    f7 11       	ifs (nzcv != 0) goto -18 <III_imdct_l+0x9E : 1116ba >			  ## layer3.c:1740:2
  1116cc:    00 ed 60 24 	r0 = r6 + 36 			  ## layer3.c:1767:17
  1116d0:    01 80       	r1 = 0 			  ## layer3.c:1767:17
  1116d2:    20 e7 02 01 	r2 = [r0 + r1] 			  ## layer3.c:1767:10
  1116d6:    60 e7 52 01 	[r5 + r1] = r2 			  ## layer3.c:1767:8
  1116da:    09 d1       	r1 = r1 + 4 			  ## layer3.c:1766:16
  1116dc:    21 99       	cmp r1, 36			  ## layer3.c:1766:2
  1116de:    f9 11       	ifs (nzcv != 0) goto -14 <III_imdct_l+0xB6 : 1116d2 >			  ## layer3.c:1766:2
  1116e0:    00 ed 50 24 	r0 = r5 + 36 			  ## layer3.c:1791:19
  1116e4:    21 82       	r1 = 68 			  ## layer3.c:1791:19
  1116e6:    20 e7 62 01 	r2 = [r6 + r1] 			  ## layer3.c:1791:11
  1116ea:    92 dc       	r2 = -r2 			  ## layer3.c:1791:10
  1116ec:    68 e8 02 01 	[r0 ++= 4] = r2 			  ## layer3.c:1791:8
  1116f0:    09 d3       	r1 = r1 + -4 			  ## layer3.c:1790:16
  1116f2:    e1 9f       	cmp r1, -4			  ## layer3.c:1790:2
  1116f4:    f8 11       	ifs (nzcv != 0) goto -16 <III_imdct_l+0xCA : 1116e6 >			  ## layer3.c:1790:2
  1116f6:    00 ed 50 6c 	r0 = r5 + 108 			  ## layer3.c:1815:18
  1116fa:    01 80       	r1 = 0 			  ## layer3.c:1815:18
  1116fc:    20 e7 62 01 	r2 = [r6 + r1] 			  ## layer3.c:1815:11
  111700:    92 dc       	r2 = -r2 			  ## layer3.c:1815:10
  111702:    60 e7 02 01 	[r0 + r1] = r2 			  ## layer3.c:1815:8
  111706:    09 d1       	r1 = r1 + 4 			  ## layer3.c:1814:17
  111708:    21 99       	cmp r1, 36			  ## layer3.c:1814:2
  11170a:    f8 11       	ifs (nzcv != 0) goto -16 <III_imdct_l+0xE0 : 1116fc >			  ## layer3.c:1814:2
  11170c:    00 40       	r0 = [sp] 
  11170e:    a0 22       	if (r0 == 0) goto 84 <III_imdct_l+0x148 : 111764 >			  ## layer3.c:2191:2
  111710:    08 98       	cmp r0, 1
  111712:    3e 10       	ifs (nzcv == 0) goto 124 <III_imdct_l+0x174 : 111790 >
  111714:    18 98       	cmp r0, 3
  111716:    60 11       	ifs (nzcv != 0) goto 192 <III_imdct_l+0x1BC : 1117d8 >
  111718:    00 80       	r0 = 0 
  11171a:    01 80       	r1 = 0 
  11171c:    60 e7 50 01 	[r5 + r1] = r0 			  ## layer3.c:2283:34
  111720:    09 d1       	r1 = r1 + 4 			  ## layer3.c:2283:18
  111722:    c1 98       	cmp r1, 24			  ## layer3.c:2283:3
  111724:    fb 11       	ifs (nzcv != 0) goto -10 <III_imdct_l+0x100 : 11171c >			  ## layer3.c:2283:3
  111726:    00 ed 50 18 	r0 = r5 + 24 			  ## layer3.c:2306:30
  11172a:    01 80       	r1 = 0 			  ## layer3.c:2306:30
  11172c:    8a 2b       	r2 = [addr(184)]  <.GCPI390_1 : 1117e4 >			  ## layer3.c:2306:30
  11172e:    90 e7 23 01 	r3 = h[r2 + r1] (s) 			  ## layer3.c:2306:30
  111732:    04 48       	r4 = [r0 + 0] 			  ## layer3.c:2306:30
  111734:    e3 06       	macc = r4 * r3 (s) 			  ## layer3.c:2306:30
  111736:    c0 f9 03 0e 	r3 = macc >>> 14 			  ## layer3.c:2306:30
  11173a:    68 e8 03 01 	[r0 ++= 4] = r3 			  ## layer3.c:2306:30
  11173e:    89 d0       	r1 = r1 + 2 			  ## layer3.c:2306:17
  111740:    61 98       	cmp r1, 12			  ## layer3.c:2306:3
  111742:    f5 11       	ifs (nzcv != 0) goto -22 <III_imdct_l+0x112 : 11172e >			  ## layer3.c:2306:3
  111744:    00 ed 50 48 	r0 = r5 + 72 			  ## layer3.c:2332:31
  111748:    11 81       	r1 = 34 			  ## layer3.c:2332:31
  11174a:    ca 29       	r2 = [addr(156)]  <.GCPI390_2 : 1117e8 >			  ## layer3.c:2332:31
  11174c:    90 e7 23 01 	r3 = h[r2 + r1] (s) 			  ## layer3.c:2332:31
  111750:    04 48       	r4 = [r0 + 0] 			  ## layer3.c:2332:31
  111752:    e3 06       	macc = r4 * r3 (s) 			  ## layer3.c:2332:31
  111754:    c0 f9 03 0e 	r3 = macc >>> 14 			  ## layer3.c:2332:31
  111758:    68 e8 03 01 	[r0 ++= 4] = r3 			  ## layer3.c:2332:31
  11175c:    89 d3       	r1 = r1 + -2 			  ## layer3.c:2332:18
  11175e:    f1 9f       	cmp r1, -2			  ## layer3.c:2332:3
  111760:    f5 11       	ifs (nzcv != 0) goto -22 <III_imdct_l+0x130 : 11174c >			  ## layer3.c:2332:3
  111762:    3a 08       	goto 116 <III_imdct_l+0x1BC : 1117d8 >			  ## layer3.c:2332:3
  111764:    00 ed 50 8c 	r0 = r5 + 140 			  ## layer3.c:2222:30
  111768:    01 80       	r1 = 0 			  ## layer3.c:2222:30
  11176a:    c2 2f       	r2 = [addr(124)]  <.GCPI390_2 : 1117e8 >			  ## layer3.c:2222:30
  11176c:    90 e7 23 01 	r3 = h[r2 + r1] (s) 			  ## layer3.c:2222:30
  111770:    2c 48       	r4 = [r5 + 0] 			  ## layer3.c:2222:30
  111772:    e3 06       	macc = r4 * r3 (s) 			  ## layer3.c:2222:30
  111774:    c0 f9 04 0e 	r4 = macc >>> 14 			  ## layer3.c:2222:30
  111778:    68 e8 54 01 	[r5 ++= 4] = r4 			  ## layer3.c:2222:30
  11177c:    04 48       	r4 = [r0 + 0] 			  ## layer3.c:2223:3
  11177e:    e3 06       	macc = r4 * r3 (s) 			  ## layer3.c:2223:3
  111780:    c0 f9 03 0e 	r3 = macc >>> 14 			  ## layer3.c:2223:3
  111784:    68 e8 03 ff 	[r0 ++= -4] = r3 			  ## layer3.c:2223:3
  111788:    89 d0       	r1 = r1 + 2 			  ## layer3.c:2222:17
  11178a:    21 99       	cmp r1, 36			  ## layer3.c:2222:3
  11178c:    ef 11       	ifs (nzcv != 0) goto -34 <III_imdct_l+0x150 : 11176c >			  ## layer3.c:2222:3
  11178e:    24 08       	goto 72 <III_imdct_l+0x1BC : 1117d8 >			  ## layer3.c:2222:3
  111790:    00 80       	r0 = 0 
  111792:    41 2d       	r1 = [addr(84)]  <.GCPI390_2 : 1117e8 >
  111794:    2a c6       	r2 = r5 
  111796:    90 e7 13 00 	r3 = h[r1 + r0] (s) 			  ## layer3.c:2252:30
  11179a:    14 48       	r4 = [r2 + 0] 			  ## layer3.c:2252:30
  11179c:    e3 06       	macc = r4 * r3 (s) 			  ## layer3.c:2252:30
  11179e:    c0 f9 03 0e 	r3 = macc >>> 14 			  ## layer3.c:2252:30
  1117a2:    68 e8 23 01 	[r2 ++= 4] = r3 			  ## layer3.c:2252:30
  1117a6:    80 d0       	r0 = r0 + 2 			  ## layer3.c:2252:17
  1117a8:    20 99       	cmp r0, 36			  ## layer3.c:2252:3
  1117aa:    f5 11       	ifs (nzcv != 0) goto -22 <III_imdct_l+0x17A : 111796 >			  ## layer3.c:2252:3
  1117ac:    00 ed 50 60 	r0 = r5 + 96 			  ## layer3.c:2277:31
  1117b0:    01 80       	r1 = 0 			  ## layer3.c:2277:31
  1117b2:    02 2b       	r2 = [addr(48)]  <.GCPI390_1 : 1117e4 >			  ## layer3.c:2277:31
  1117b4:    53 d4       	r3 = r2 + r1 			  ## layer3.c:2277:31
  1117b6:    90 e8 33 03 	r3 = h[r3 + 12] (s) 			  ## layer3.c:2277:31
  1117ba:    04 48       	r4 = [r0 + 0] 			  ## layer3.c:2277:31
  1117bc:    e3 06       	macc = r4 * r3 (s) 			  ## layer3.c:2277:31
  1117be:    c0 f9 03 0e 	r3 = macc >>> 14 			  ## layer3.c:2277:31
  1117c2:    68 e8 03 01 	[r0 ++= 4] = r3 			  ## layer3.c:2277:31
  1117c6:    89 d0       	r1 = r1 + 2 			  ## layer3.c:2277:18
  1117c8:    61 98       	cmp r1, 12			  ## layer3.c:2277:3
  1117ca:    f4 11       	ifs (nzcv != 0) goto -24 <III_imdct_l+0x198 : 1117b4 >			  ## layer3.c:2277:3
  1117cc:    00 ed 50 78 	r0 = r5 + 120 			  ## layer3.c:2279:28
  1117d0:    01 80       	r1 = 0 			  ## layer3.c:2279:3
  1117d2:    c2 80       	r2 = 24 			  ## layer3.c:2279:3
  1117d4:    d8 e1 2f bc 	call -321660 <memset : c2f5c >			  ## layer3.c:2279:3
  1117d8:    00 ed ff e0 	sp = sp + 224 
  1117dc:    30 c4       	{macch, maccl} = [sp++] 
  1117de:    17 c0       	{pc, r7-r4} = [sp++] 


.GCPI390_0:
  1117e0:    84 73 11 00     < 1143684 : 0x117384 >

.GCPI390_1:
  1117e4:    6a 73 11 00     < 1143658 : 0x11736A >

.GCPI390_2:
  1117e8:    10 74 11 00     < 1143824 : 0x117410 >

III_overlap:
  1117ec:    15 c2       	[--sp] = {rets, r5, r4} 			  ## layer3.c:2460:0
  1117ee:    00 fc 33 24 	r3 = r3 * 36 			  ## layer3.c:2498:3
  1117f2:    c9 d4       	r1 = r1 + r3 			  ## layer3.c:2498:3
  1117f4:    d2 d4       	r2 = r2 + r3 			  ## layer3.c:2498:3
  1117f6:    03 80       	r3 = 0 
  1117f8:    cc d4       	r4 = r1 + r3 			  ## layer3.c:2500:51
  1117fa:    24 50       	r4 = h[r4 + 0] 			  ## layer3.c:2500:51
  1117fc:    05 48       	r5 = [r0 + 0] 			  ## layer3.c:2500:26
  1117fe:    6d aa       	r5 = r5 >> 10 			  ## layer3.c:2500:26
  111800:    64 d5       	r4 = r4 + r5 			  ## layer3.c:2500:49
  111802:    50 e7 24 03 	h[r2 + r3] = r4 			  ## layer3.c:2500:24
  111806:    20 e8 04 12 	r4 = [r0 + 72] 			  ## layer3.c:2501:27
  11180a:    64 aa       	r4 = r4 >> 10 			  ## layer3.c:2501:27
  11180c:    50 e7 14 03 	h[r1 + r3] = r4 			  ## layer3.c:2501:25
  111810:    00 d1       	r0 = r0 + 4 			  ## layer3.c:2498:16
  111812:    9b d0       	r3 = r3 + 2 			  ## layer3.c:2498:16
  111814:    23 99       	cmp r3, 36			  ## layer3.c:2498:3
  111816:    f0 11       	ifs (nzcv != 0) goto -32 <III_overlap+0xC : 1117f8 >			  ## layer3.c:2498:3
  111818:    15 c0       	{pc, r5, r4} = [sp++] 


III_imdct_s:
  11181a:    1d c2       	[--sp] = {rets, r13-r4} 			  ## layer3.c:2345:0
  11181c:    30 c5       	[--sp] = {macch, maccl} 			  ## layer3.c:2345:0
  11181e:    b8 cd       	sp += -72 			  ## layer3.c:2345:0
  111820:    03 80       	r3 = 0 			  ## layer3.c:2345:0
  111822:    04 90       	r4 = sp + 0 			  ## layer3.c:2345:0
  111824:    90 e7 05 03 	r5 = h[r0 + r3] (s) 			  ## layer3.c:2379:10
  111828:    2d aa       	r5 = r5 << 10 			  ## layer3.c:2379:17
  11182a:    68 e8 45 01 	[r4 ++= 4] = r5 			  ## layer3.c:2379:8
  11182e:    9b d0       	r3 = r3 + 2 			  ## layer3.c:2377:16
  111830:    23 99       	cmp r3, 36			  ## layer3.c:2377:2
  111832:    f8 11       	ifs (nzcv != 0) goto -16 <III_imdct_s+0xA : 111824 >			  ## layer3.c:2377:2
  111834:    00 ed 2a 2c 	r10 = r2 + 44 			  ## layer3.c:2389:29
  111838:    51 ea 00 00 	r9 = 0 			  ## layer3.c:2389:29
  11183c:    04 90       	r4 = sp + 0 			  ## layer3.c:2389:29
  11183e:    20 e4 08 4d 	r8 = [addr(308)]  <.GCPI392_0 : 111974 >
  111842:    53 ea ff 1f 	r11 = 8191 
  111846:    54 ea 01 00 	r12 = 1 
  11184a:    55 c6       	r13 = r2 
  11184c:    90 c6       	r0 = r10 
  11184e:    03 80       	r3 = 0 
  111850:    86 c6       	r6 = r8 
  111852:    90 e8 67 00 	r7 = h[r6 + 0] (s) 			  ## layer3.c:2395:4
  111856:    25 48       	r5 = [r4 + 0] 			  ## layer3.c:2395:4
  111858:    ef 06       	macc = r5 * r7 (s) 			  ## layer3.c:2395:4
  11185a:    90 e8 65 80 	r5 = h[r6 + 2] (s) 			  ## layer3.c:2396:4
  11185e:    67 48       	r7 = [r4 + 4] 			  ## layer3.c:2396:4
  111860:    bd 07       	macc += r7 * r5 (s) 			  ## layer3.c:2396:4
  111862:    90 e8 65 01 	r5 = h[r6 + 4] (s) 			  ## layer3.c:2397:4
  111866:    a7 48       	r7 = [r4 + 8] 			  ## layer3.c:2397:4
  111868:    bd 07       	macc += r7 * r5 (s) 			  ## layer3.c:2397:4
  11186a:    90 e8 65 81 	r5 = h[r6 + 6] (s) 			  ## layer3.c:2398:4
  11186e:    e7 48       	r7 = [r4 + 12] 			  ## layer3.c:2398:4
  111870:    bd 07       	macc += r7 * r5 (s) 			  ## layer3.c:2398:4
  111872:    90 e8 65 02 	r5 = h[r6 + 8] (s) 			  ## layer3.c:2399:4
  111876:    27 49       	r7 = [r4 + 16] 			  ## layer3.c:2399:4
  111878:    bd 07       	macc += r7 * r5 (s) 			  ## layer3.c:2399:4
  11187a:    90 e8 65 82 	r5 = h[r6 + 10] (s) 			  ## layer3.c:2400:4
  11187e:    67 49       	r7 = [r4 + 20] 			  ## layer3.c:2400:4
  111880:    bd 07       	macc += r7 * r5 (s) 			  ## layer3.c:2400:4
  111882:    a0 fd bc 00 	macc += r12 * r11 (s) 			  ## layer3.c:2401:4
  111886:    c0 f9 05 0e 	r5 = macc >>> 14 			  ## layer3.c:2401:4
  11188a:    60 e7 d5 03 	[r13 + r3] = r5 			  ## layer3.c:2401:4
  11188e:    ad dc       	r5 = -r5 			  ## layer3.c:2403:18
  111890:    85 6e       	[r0 + -24] = r5 			  ## layer3.c:2403:16
  111892:    90 e8 65 03 	r5 = h[r6 + 12] (s) 			  ## layer3.c:2407:4
  111896:    27 48       	r7 = [r4 + 0] 			  ## layer3.c:2407:4
  111898:    fd 06       	macc = r7 * r5 (s) 			  ## layer3.c:2407:4
  11189a:    90 e8 65 83 	r5 = h[r6 + 14] (s) 			  ## layer3.c:2408:4
  11189e:    67 48       	r7 = [r4 + 4] 			  ## layer3.c:2408:4
  1118a0:    bd 07       	macc += r7 * r5 (s) 			  ## layer3.c:2408:4
  1118a2:    90 e8 65 04 	r5 = h[r6 + 16] (s) 			  ## layer3.c:2409:4
  1118a6:    a7 48       	r7 = [r4 + 8] 			  ## layer3.c:2409:4
  1118a8:    bd 07       	macc += r7 * r5 (s) 			  ## layer3.c:2409:4
  1118aa:    90 e8 65 84 	r5 = h[r6 + 18] (s) 			  ## layer3.c:2410:4
  1118ae:    e7 48       	r7 = [r4 + 12] 			  ## layer3.c:2410:4
  1118b0:    bd 07       	macc += r7 * r5 (s) 			  ## layer3.c:2410:4
  1118b2:    90 e8 65 05 	r5 = h[r6 + 20] (s) 			  ## layer3.c:2411:4
  1118b6:    27 49       	r7 = [r4 + 16] 			  ## layer3.c:2411:4
  1118b8:    bd 07       	macc += r7 * r5 (s) 			  ## layer3.c:2411:4
  1118ba:    90 e8 65 85 	r5 = h[r6 + 22] (s) 			  ## layer3.c:2412:4
  1118be:    67 49       	r7 = [r4 + 20] 			  ## layer3.c:2412:4
  1118c0:    bd 07       	macc += r7 * r5 (s) 			  ## layer3.c:2412:4
  1118c2:    a0 fd bc 00 	macc += r12 * r11 (s) 			  ## layer3.c:2414:4
  1118c6:    00 ee d5 03 	r5 = r13 + r3 			  ## layer3.c:2401:4
  1118ca:    c0 f9 07 0e 	r7 = macc >>> 14 			  ## layer3.c:2414:4
  1118ce:    af 69       	[r5 + 24] = r7 			  ## layer3.c:2414:4
  1118d0:    07 68       	[r0 + 0] = r7 			  ## layer3.c:2416:17
  1118d2:    c6 88       	r6 += 24 			  ## layer3.c:2393:3
  1118d4:    00 d3       	r0 = r0 + -4 			  ## layer3.c:2393:17
  1118d6:    1b d1       	r3 = r3 + 4 			  ## layer3.c:2393:17
  1118d8:    63 98       	cmp r3, 12			  ## layer3.c:2393:3
  1118da:    bb 11       	ifs (nzcv != 0) goto -138 <III_imdct_s+0x38 : 111852 >			  ## layer3.c:2393:3
  1118dc:    00 ed aa 30 	r10 = r10 + 48 			  ## layer3.c:2388:2
  1118e0:    00 ed 99 01 	r9 = r9 + 1 			  ## layer3.c:2388:21
  1118e4:    c4 88       	r4 += 24 			  ## layer3.c:2422:8
  1118e6:    00 ed dd 30 	r13 = r13 + 48 			  ## layer3.c:2421:8
  1118ea:    80 ef 90 03 	cmp r9, 3			  ## layer3.c:2388:2
  1118ee:    ae 11       	ifs (nzcv != 0) goto -164 <III_imdct_s+0x32 : 11184c >			  ## layer3.c:2388:2
  1118f0:    00 ed 10 48 	r0 = r1 + 72 			  ## layer3.c:2431:3
  1118f4:    49 28       	r1 = [addr(132)]  <.GCPI392_1 : 111978 >			  ## layer3.c:2431:3
  1118f6:    50 ea 00 00 	r8 = 0 
  1118fa:    51 ea ff 1f 	r9 = 8191 
  1118fe:    52 ea 01 00 	r10 = 1 
  111902:    06 80       	r6 = 0 
  111904:    87 d5       	r7 = r0 + r6 			  ## layer3.c:2431:13
  111906:    60 e8 78 ee 	[r7 + -72] = r8 			  ## layer3.c:2431:13
  11190a:    20 e7 23 06 	r3 = [r2 + r6] 			  ## layer3.c:2432:3
  11190e:    90 e8 14 00 	r4 = h[r1 + 0] (s) 			  ## layer3.c:2432:3
  111912:    dc 06       	macc = r3 * r4 (s) 			  ## layer3.c:2432:3
  111914:    c0 f9 03 0e 	r3 = macc >>> 14 			  ## layer3.c:2432:3
  111918:    3b 6d       	[r7 + -48] = r3 			  ## layer3.c:2432:3
  11191a:    93 d5       	r3 = r2 + r6 			  ## layer3.c:2431:3
  11191c:    9c 49       	r4 = [r3 + 24] 			  ## layer3.c:2434:3
  11191e:    90 e8 15 03 	r5 = h[r1 + 12] (s) 			  ## layer3.c:2434:3
  111922:    e5 06       	macc = r4 * r5 (s) 			  ## layer3.c:2434:3
  111924:    1c 4b       	r4 = [r3 + 48] 			  ## layer3.c:2435:3
  111926:    90 e8 15 00 	r5 = h[r1 + 0] (s) 			  ## layer3.c:2435:3
  11192a:    a5 07       	macc += r4 * r5 (s) 			  ## layer3.c:2435:3
  11192c:    a0 fd 9a 00 	macc += r10 * r9 (s) 			  ## layer3.c:2436:3
  111930:    c0 f9 04 0e 	r4 = macc >>> 14 			  ## layer3.c:2436:3
  111934:    bc 6e       	[r7 + -24] = r4 			  ## layer3.c:2436:3
  111936:    24 e8 34 12 	r4 = [++ r3 = 72] 			  ## layer3.c:2438:3
  11193a:    90 e8 15 03 	r5 = h[r1 + 12] (s) 			  ## layer3.c:2438:3
  11193e:    e5 06       	macc = r4 * r5 (s) 			  ## layer3.c:2438:3
  111940:    9c 49       	r4 = [r3 + 24] 			  ## layer3.c:2439:3
  111942:    90 e8 15 00 	r5 = h[r1 + 0] (s) 			  ## layer3.c:2439:3
  111946:    a5 07       	macc += r4 * r5 (s) 			  ## layer3.c:2439:3
  111948:    a0 fd 9a 00 	macc += r10 * r9 (s) 			  ## layer3.c:2440:3
  11194c:    c0 f9 04 0e 	r4 = macc >>> 14 			  ## layer3.c:2440:3
  111950:    60 e7 04 06 	[r0 + r6] = r4 			  ## layer3.c:2440:3
  111954:    1b 4b       	r3 = [r3 + 48] 			  ## layer3.c:2442:3
  111956:    90 e8 14 03 	r4 = h[r1 + 12] (s) 			  ## layer3.c:2442:3
  11195a:    dc 06       	macc = r3 * r4 (s) 			  ## layer3.c:2442:3
  11195c:    c0 f9 03 0e 	r3 = macc >>> 14 			  ## layer3.c:2442:3
  111960:    bb 69       	[r7 + 24] = r3 			  ## layer3.c:2442:3
  111962:    60 e8 78 0c 	[r7 + 48] = r8 			  ## layer3.c:2443:13
  111966:    89 d0       	r1 = r1 + 2 			  ## layer3.c:2430:2
  111968:    36 d1       	r6 = r6 + 4 			  ## layer3.c:2430:16
  11196a:    c6 98       	cmp r6, 24			  ## layer3.c:2430:2
  11196c:    cb 11       	ifs (nzcv != 0) goto -106 <III_imdct_s+0xEA : 111904 >			  ## layer3.c:2430:2
  11196e:    48 cd       	sp += 72 
  111970:    30 c4       	{macch, maccl} = [sp++] 
  111972:    1d c0       	{pc, r13-r4} = [sp++] 


.GCPI392_0:
  111974:    22 73 11 00     < 1143586 : 0x117322 >

.GCPI392_1:
  111978:    6a 73 11 00     < 1143658 : 0x11736A >

mTSYIII_decode:
  11197c:    1e c2       	[--sp] = {rets, r14-r4} 			  ## layer3.c:2607:0
  11197e:    1d ed ff 60 	sp = sp + -672 			  ## layer3.c:2607:0
  111982:    0d c6       	r5 = r1 			  ## layer3.c:2607:0
  111984:    69 5a       	r1 = b[r5 + 5] 			  ## layer3.c:2619:10
  111986:    c3 87       	r3 = -8 			  ## layer3.c:2625:6
  111988:    11 20       	if (r1 == 0) goto 2 <mTSYIII_decode+0x10 : 11198c >			  ## layer3.c:2625:6
  11198a:    db 87       	r3 = -5 			  ## layer3.c:2625:6
  11198c:    0c 80       	r4 = 1 
  11198e:    19 20       	if (r1 != 0) goto 2 <mTSYIII_decode+0x16 : 111992 >
  111990:    04 80       	r4 = 0 
  111992:    29 50       	r1 = h[r5 + 0] 			  ## layer3.c:2618:10
  111994:    21 cf       	r1 <<= r4 			  ## layer3.c:2619:6
  111996:    01 f6 14 e1 	r4 = uextra(r1, p:15, l:1) 			  ## layer3.c:2623:18
  11199a:    1b d5       	r3 = r3 + r4 			  ## layer3.c:2622:36
  11199c:    00 f6 11 e4 	r1 = uextra(r1, p:7, l:4) 			  ## layer3.c:2622:26
  1119a0:    5b d4       	r3 = r3 + r1 			  ## layer3.c:2625:6
  1119a2:    43 98       	cmp r3, 8			  ## layer3.c:2636:6
  1119a4:    00 fb f8 53 	if (nzcv > 0) goto 2686 <mTSYIII_decode+0xAAA : 112426 >			  ## layer3.c:2636:6
  1119a8:    42 65       	[sp+ 84] = r2 
  1119aa:    80 65       	[sp+ 88] = r0 
  1119ac:    00 e8 5d 01 	r13 = b[r5 + 4] 			  ## layer3.c:2627:9
  1119b0:    28 5c       	r0 = b[r5 + 2] 			  ## layer3.c:2641:9
  1119b2:    0e 80       	r6 = 1 			  ## layer3.c:2641:9
  1119b4:    18 20       	if (r0 != 0) goto 2 <mTSYIII_decode+0x3C : 1119b8 >			  ## layer3.c:2641:9
  1119b6:    06 80       	r6 = 0 
  1119b8:    00 fc 68 38 	r8 = r6 * 56 			  ## layer3.c:2663:16
  1119bc:    00 ee 57 08 	r7 = r5 + r8 			  ## layer3.c:2663:16
  1119c0:    7a c6       	r10 = r7 			  ## layer3.c:2663:16
  1119c2:    04 e8 a1 c3 	r1 = b[++ r10 = 15] 			  ## layer3.c:2663:16
  1119c6:    00 fc 32 0c 	r2 = r3 * 12 			  ## layer3.c:2662:40
  1119ca:    20 e4 23 a3 	r3 = [addr(2700)]  <.GCPI393_0 : 112458 >			  ## layer3.c:2662:40
  1119ce:    11 98       	cmp r1, 2			  ## layer3.c:2663:7
  1119d0:    0a 11       	ifs (nzcv != 0) goto 20 <mTSYIII_decode+0x6A : 1119e6 >			  ## layer3.c:2663:7
  1119d2:    fc 5c       	r4 = b[r7 + 14] 			  ## layer3.c:2664:28
  1119d4:    9b d4       	r3 = r3 + r2 			  ## layer3.c:2665:55
  1119d6:    00 ed 32 08 	r2 = r3 + 8 			  ## layer3.c:2665:28
  1119da:    1b d1       	r3 = r3 + 4 			  ## layer3.c:2665:55
  1119dc:    00 f4 40 08 	tst r4, 8			  ## layer3.c:2664:18
  1119e0:    00 03       	ifs (nzcv == 0) {			  ## layer3.c:2664:18
  1119e2:    1a c6       		r2 = r3 
                               	}			  ## layer3.c:2664:18
  1119e4:    01 08       	goto 2 <mTSYIII_decode+0x6C : 1119e8 >			  ## layer3.c:2664:18
  1119e6:    d2 d4       	r2 = r2 + r3 			  ## layer3.c:2662:40
  1119e8:    20 e8 2c 00 	r12 = [r2 + 0] 
  1119ec:    80 ef d0 00 	cmp r13, 0			  ## layer3.c:2668:7
  1119f0:    60 e9 0a 06 	[sp+ 24] = r10 			  ## layer3.c:2668:7
  1119f4:    87 62       	[sp+ 40] = r7 			  ## layer3.c:2668:7
  1119f6:    c5 61       	[sp+ 28] = r5 			  ## layer3.c:2668:7
  1119f8:    c6 60       	[sp+ 12] = r6 			  ## layer3.c:2668:7
  1119fa:    60 e9 0d 02 	[sp+ 8] = r13 			  ## layer3.c:2668:7
  1119fe:    60 e9 0c 05 	[sp+ 20] = r12 			  ## layer3.c:2668:7
  111a02:    1e 10       	ifs (nzcv == 0) goto 60 <mTSYIII_decode+0xC4 : 111a40 >			  ## layer3.c:2668:7
  111a04:    fa 50       	r2 = h[r7 + 12] 			  ## layer3.c:576:31
  111a06:    00 80       	r0 = 0 			  ## layer3.c:576:31
  111a08:    11 98       	cmp r1, 2			  ## layer3.c:577:10
  111a0a:    02 03       	ifs (nzcv == 0) {			  ## layer3.c:578:14
  111a0c:    f8 5c       		r0 = b[r7 + 14] 			  ## layer3.c:578:14
  111a0e:    00 f6 00 61 		r0 = uextra(r0, p:3, l:1) 			  ## layer3.c:578:4
  111a12:    40 d0       		r0 = r0 + 1 
                               	}			  ## layer3.c:578:4
  111a14:    51 a4       	r1 = r2 >> 4 			  ## layer3.c:580:6
  111a16:    c1 98       	cmp r1, 24			  ## layer3.c:580:6
  111a18:    54 18       	if (nzcv > 0) goto 168 <mTSYIII_decode+0x146 : 111ac2 >			  ## layer3.c:580:6
  111a1a:    83 82       	r3 = 80 			  ## layer3.c:581:38
  111a1c:    40 fc 23 03 	r3 = r2 / r3 			  ## layer3.c:581:38
  111a20:    c3 65       	[sp+ 92] = r3 			  ## layer3.c:581:11
  111a22:    2b 80       	r3 = 5 			  ## layer3.c:582:38
  111a24:    40 fc 13 03 	r3 = r1 / r3 			  ## layer3.c:582:38
  111a28:    00 fc 33 05 	r3 = r3 * 5 			  ## layer3.c:582:38
  111a2c:    c9 d6       	r1 = r1 - r3 			  ## layer3.c:582:38
  111a2e:    01 66       	[sp+ 96] = r1 			  ## layer3.c:582:11
  111a30:    00 f6 21 42 	r1 = uextra(r2, p:2, l:2) 			  ## layer3.c:583:38
  111a34:    41 66       	[sp+ 100] = r1 			  ## layer3.c:583:11
  111a36:    80 f3 21 03 	r1 = r2 & 3 			  ## layer3.c:584:32
  111a3a:    81 66       	[sp+ 104] = r1 			  ## layer3.c:584:11
  111a3c:    01 80       	r1 = 0 			  ## layer3.c:584:11
  111a3e:    7b 08       	goto 246 <mTSYIII_decode+0x1BA : 111b36 >			  ## layer3.c:584:11
  111a40:    00 98       	cmp r0, 0			  ## layer3.c:2673:5
  111a42:    14 03       	ifs (nzcv != 0) {			  ## layer3.c:2673:19
  111a44:    00 e8 59 81 		r9 = b[r5 + 6] 
                               	} else {			  ## layer3.c:2673:19
  111a48:    51 ea 00 00 		r9 = 0 
                               	}			  ## layer3.c:2673:19
  111a4c:    f8 50       	r0 = h[r7 + 12] 			  ## layer3.c:642:10
  111a4e:    00 a1       	r0 = r0 << 1 			  ## layer3.c:642:50
  111a50:    20 e4 22 83 	r2 = [addr(2572)]  <.GCPI393_2 : 112460 >			  ## layer3.c:642:50
  111a54:    00 e7 25 00 	r5 = b[r2 + r0] 			  ## layer3.c:642:10
  111a58:    80 d4       	r0 = r0 + r2 			  ## layer3.c:642:50
  111a5a:    00 e8 0b 40 	r11 = b[r0 + 1] 			  ## layer3.c:643:10
  111a5e:    11 98       	cmp r1, 2			  ## layer3.c:645:6
  111a60:    48 11       	ifs (nzcv != 0) goto 144 <mTSYIII_decode+0x176 : 111af2 >			  ## layer3.c:645:6
  111a62:    f8 5c       	r0 = b[r7 + 14] 			  ## layer3.c:650:20
  111a64:    00 f6 09 61 	r9 = uextra(r0, p:3, l:1) 			  ## layer3.c:650:10
  111a68:    70 87       	r0 = -18 			  ## layer3.c:651:3
  111a6a:    00 f0 96 00 	r6 = r9 | r0 			  ## layer3.c:651:3
  111a6e:    c7 88       	r7 += 24 			  ## layer3.c:651:3
  111a70:    44 45       	r4 = [sp+ 84] 			  ## layer3.c:651:3
  111a72:    20 c6       	r0 = r4 			  ## layer3.c:653:32
  111a74:    29 c6       	r1 = r5 			  ## layer3.c:653:32
  111a76:    fa e1 5f 0a 	call -48822 <mad_bit_read : 105bc4 >			  ## layer3.c:653:32
  111a7a:    48 e8 70 40 	b[r7 ++= 1] = r0 			  ## layer3.c:653:30
  111a7e:    76 d0       	r6 = r6 + 1 			  ## layer3.c:651:3
  111a80:    f8 11       	ifs (nzcv != 0) goto -16 <mTSYIII_decode+0xF6 : 111a72 >			  ## layer3.c:651:3
  111a82:    00 ed 80 2a 	r0 = r8 + 42 			  ## layer3.c:657:14
  111a86:    40 ee 00 09 	r0 = r0 - r9 			  ## layer3.c:657:14
  111a8a:    c1 41       	r1 = [sp+ 28] 			  ## layer3.c:657:14
  111a8c:    0d d4       	r5 = r1 + r0 			  ## layer3.c:657:14
  111a8e:    06 80       	r6 = 0 
  111a90:    20 c6       	r0 = r4 			  ## layer3.c:659:32
  111a92:    99 c6       	r1 = r11 			  ## layer3.c:659:32
  111a94:    fa e1 6f 09 	call -48852 <mad_bit_read : 105bc4 >			  ## layer3.c:659:32
  111a98:    40 e7 50 06 	b[r5 + r6] = r0 			  ## layer3.c:659:30
  111a9c:    76 d0       	r6 = r6 + 1 			  ## layer3.c:657:3
  111a9e:    96 98       	cmp r6, 18			  ## layer3.c:657:3
  111aa0:    f7 11       	ifs (nzcv != 0) goto -18 <mTSYIII_decode+0x114 : 111a90 >			  ## layer3.c:657:3
  111aa2:    00 ed 80 3c 	r0 = r8 + 60 			  ## layer3.c:663:14
  111aa6:    40 ee 00 09 	r0 = r0 - r9 			  ## layer3.c:663:14
  111aaa:    c1 41       	r1 = [sp+ 28] 			  ## layer3.c:663:14
  111aac:    40 d4       	r0 = r0 + r1 			  ## layer3.c:663:14
  111aae:    01 80       	r1 = 0 			  ## layer3.c:663:14
  111ab0:    02 80       	r2 = 0 			  ## layer3.c:663:14
  111ab2:    20 e9 0b 0a 	r11 = [sp+ 40] 			  ## layer3.c:663:14
  111ab6:    40 e7 01 02 	b[r0 + r2] = r1 			  ## layer3.c:664:30
  111aba:    52 d0       	r2 = r2 + 1 			  ## layer3.c:663:3
  111abc:    1a 98       	cmp r2, 3			  ## layer3.c:663:3
  111abe:    fb 11       	ifs (nzcv != 0) goto -10 <mTSYIII_decode+0x13A : 111ab6 >			  ## layer3.c:663:3
  111ac0:    e3 08       	goto 454 <mTSYIII_decode+0x30C : 111c88 >			  ## layer3.c:663:3
  111ac2:    51 a2       	r1 = r2 >> 2 			  ## layer3.c:588:11
  111ac4:    e1 9b       	cmp r1, 124			  ## layer3.c:588:11
  111ac6:    26 18       	if (nzcv > 0) goto 76 <mTSYIII_decode+0x198 : 111b14 >			  ## layer3.c:588:11
  111ac8:    1e ed 21 70 	r1 = r2 + -400 			  ## layer3.c:589:21
  111acc:    a2 80       	r2 = 20 			  ## layer3.c:591:38
  111ace:    40 fc 12 02 	r2 = r1 / r2 			  ## layer3.c:591:38
  111ad2:    c2 65       	[sp+ 92] = r2 			  ## layer3.c:591:11
  111ad4:    4a a2       	r2 = r1 >> 2 			  ## layer3.c:591:32
  111ad6:    2b 80       	r3 = 5 			  ## layer3.c:592:38
  111ad8:    40 fc 23 03 	r3 = r2 / r3 			  ## layer3.c:592:38
  111adc:    00 fc 33 05 	r3 = r3 * 5 			  ## layer3.c:592:38
  111ae0:    d2 d6       	r2 = r2 - r3 			  ## layer3.c:592:38
  111ae2:    02 66       	[sp+ 96] = r2 			  ## layer3.c:592:11
  111ae4:    80 f3 11 03 	r1 = r1 & 3 			  ## layer3.c:593:32
  111ae8:    41 66       	[sp+ 100] = r1 			  ## layer3.c:593:11
  111aea:    01 80       	r1 = 0 			  ## layer3.c:593:11
  111aec:    81 66       	[sp+ 104] = r1 			  ## layer3.c:594:11
  111aee:    09 80       	r1 = 1 			  ## layer3.c:594:11
  111af0:    22 08       	goto 68 <mTSYIII_decode+0x1BA : 111b36 >			  ## layer3.c:594:11
  111af2:    00 f4 90 08 	tst r9, 8			  ## layer3.c:667:7
  111af6:    5e 11       	ifs (nzcv != 0) goto 188 <mTSYIII_decode+0x238 : 111bb4 >			  ## layer3.c:667:7
  111af8:    80 42       	r0 = [sp+ 40] 			  ## layer3.c:674:31
  111afa:    00 ed 06 18 	r6 = r0 + 24 			  ## layer3.c:674:31
  111afe:    07 80       	r7 = 0 
  111b00:    40 45       	r0 = [sp+ 84] 			  ## layer3.c:674:31
  111b02:    29 c6       	r1 = r5 			  ## layer3.c:674:31
  111b04:    fa e1 ef 05 	call -48964 <mad_bit_read : 105bc4 >			  ## layer3.c:674:31
  111b08:    40 e7 60 07 	b[r6 + r7] = r0 			  ## layer3.c:674:29
  111b0c:    7f d0       	r7 = r7 + 1 			  ## layer3.c:672:29
  111b0e:    37 98       	cmp r7, 6			  ## layer3.c:672:4
  111b10:    f7 11       	ifs (nzcv != 0) goto -18 <mTSYIII_decode+0x184 : 111b00 >			  ## layer3.c:672:4
  111b12:    5c 08       	goto 184 <mTSYIII_decode+0x250 : 111bcc >			  ## layer3.c:672:4
  111b14:    1e ed 21 0c 	r1 = r2 + -500 			  ## layer3.c:599:21
  111b18:    1a 80       	r2 = 3 			  ## layer3.c:601:31
  111b1a:    40 fc 12 02 	r2 = r1 / r2 			  ## layer3.c:601:31
  111b1e:    c2 65       	[sp+ 92] = r2 			  ## layer3.c:601:11
  111b20:    00 fc 22 03 	r2 = r2 * 3 			  ## layer3.c:602:31
  111b24:    89 d6       	r1 = r1 - r2 			  ## layer3.c:602:31
  111b26:    01 66       	[sp+ 96] = r1 			  ## layer3.c:602:11
  111b28:    01 80       	r1 = 0 			  ## layer3.c:602:11
  111b2a:    41 66       	[sp+ 100] = r1 			  ## layer3.c:603:11
  111b2c:    81 66       	[sp+ 104] = r1 			  ## layer3.c:604:11
  111b2e:    f9 5c       	r1 = b[r7 + 14] 			  ## layer3.c:605:18
  111b30:    11 d8       	r1 |= 4			  ## layer3.c:605:18
  111b32:    f9 7c       	b[r7 + 14] = r1 			  ## layer3.c:605:18
  111b34:    11 80       	r1 = 2 			  ## layer3.c:605:18
  111b36:    00 ed 79 18 	r9 = r7 + 24 			  ## layer3.c:610:2
  111b3a:    55 ea 00 00 	r13 = 0 			  ## layer3.c:610:2
  111b3e:    00 fc 11 0c 	r1 = r1 * 12 			  ## layer3.c:610:2
  111b42:    20 e4 22 46 	r2 = [addr(2328)]  <.GCPI393_1 : 11245c >			  ## layer3.c:610:2
  111b46:    89 d4       	r1 = r1 + r2 			  ## layer3.c:610:2
  111b48:    00 a2       	r0 = r0 << 2 			  ## layer3.c:610:2
  111b4a:    00 ee 1b 00 	r11 = r1 + r0 			  ## layer3.c:610:2
  111b4e:    00 ed fa 5c 	r10 = sp + 92 			  ## layer3.c:610:2
  111b52:    56 ea 00 00 	r14 = 0 			  ## layer3.c:610:2
  111b56:    00 e7 bc 0e 	r12 = b[r11 + r14] 			  ## layer3.c:611:19
  111b5a:    80 ef c0 00 	cmp r12, 0			  ## layer3.c:611:3
  111b5e:    11 10       	ifs (nzcv == 0) goto 34 <mTSYIII_decode+0x206 : 111b82 >			  ## layer3.c:611:3
  111b60:    00 ee 96 0d 	r6 = r9 + r13 			  ## layer3.c:611:3
  111b64:    20 f7 e0 02 	r0 = r14 << 2 
  111b68:    20 e7 a4 00 	r4 = [r10 + r0] 
  111b6c:    a5 c6       	r5 = r12 
  111b6e:    47 45       	r7 = [sp+ 84] 
  111b70:    38 c6       	r0 = r7 			  ## layer3.c:614:9
  111b72:    21 c6       	r1 = r4 			  ## layer3.c:614:9
  111b74:    fa e1 6f 02 	call -49076 <mad_bit_read : 105bc4 >			  ## layer3.c:614:9
  111b78:    48 e8 60 40 	b[r6 ++= 1] = r0 			  ## layer3.c:615:26
  111b7c:    ed d3       	r5 = r5 + -1 			  ## layer3.c:611:17
  111b7e:    f8 11       	ifs (nzcv != 0) goto -16 <mTSYIII_decode+0x1F4 : 111b70 >			  ## layer3.c:611:17
  111b80:    e5 cb       	r13 += r12 			  ## layer3.c:611:3
  111b82:    00 ed ee 01 	r14 = r14 + 1 			  ## layer3.c:610:27
  111b86:    80 ef e0 04 	cmp r14, 4			  ## layer3.c:610:2
  111b8a:    e5 11       	ifs (nzcv != 0) goto -54 <mTSYIII_decode+0x1DA : 111b56 >			  ## layer3.c:610:2
  111b8c:    80 ef d0 26 	cmp r13, 38			  ## layer3.c:620:2
  111b90:    20 e9 0b 0a 	r11 = [sp+ 40] 
  111b94:    0a 18       	if (nzcv > 0) goto 20 <mTSYIII_decode+0x22E : 111baa >
  111b96:    00 80       	r0 = 0 
  111b98:    00 ee b1 0d 	r1 = r11 + r13 			  ## layer3.c:621:26
  111b9c:    40 e8 10 06 	b[r1 + 24] = r0 			  ## layer3.c:621:26
  111ba0:    00 ed dd 01 	r13 = r13 + 1 			  ## layer3.c:621:22
  111ba4:    80 ef d0 27 	cmp r13, 39			  ## layer3.c:620:2
  111ba8:    f7 11       	ifs (nzcv != 0) goto -18 <mTSYIII_decode+0x21C : 111b98 >			  ## layer3.c:620:2
  111baa:    20 e9 0a 06 	r10 = [sp+ 24] 
  111bae:    20 e9 0c 05 	r12 = [sp+ 20] 
  111bb2:    6a 08       	goto 212 <mTSYIII_decode+0x30C : 111c88 >
  111bb4:    80 42       	r0 = [sp+ 40] 			  ## layer3.c:669:31
  111bb6:    c0 88       	r0 += 24 			  ## layer3.c:669:31
  111bb8:    c1 41       	r1 = [sp+ 28] 			  ## layer3.c:669:31
  111bba:    c1 88       	r1 += 24 			  ## layer3.c:669:31
  111bbc:    02 80       	r2 = 0 			  ## layer3.c:669:31
  111bbe:    8b d4       	r3 = r1 + r2 			  ## layer3.c:669:31
  111bc0:    1b 58       	r3 = b[r3 + 0] 			  ## layer3.c:669:31
  111bc2:    40 e7 03 02 	b[r0 + r2] = r3 			  ## layer3.c:669:29
  111bc6:    52 d0       	r2 = r2 + 1 			  ## layer3.c:668:29
  111bc8:    32 98       	cmp r2, 6			  ## layer3.c:668:4
  111bca:    f9 11       	ifs (nzcv != 0) goto -14 <mTSYIII_decode+0x242 : 111bbe >			  ## layer3.c:668:4
  111bcc:    00 f4 90 04 	tst r9, 4			  ## layer3.c:678:7
  111bd0:    0e 11       	ifs (nzcv != 0) goto 28 <mTSYIII_decode+0x272 : 111bee >			  ## layer3.c:678:7
  111bd2:    80 42       	r0 = [sp+ 40] 			  ## layer3.c:685:31
  111bd4:    00 ed 06 1e 	r6 = r0 + 30 			  ## layer3.c:685:31
  111bd8:    07 80       	r7 = 0 			  ## layer3.c:685:31
  111bda:    40 45       	r0 = [sp+ 84] 			  ## layer3.c:685:31
  111bdc:    29 c6       	r1 = r5 			  ## layer3.c:685:31
  111bde:    f9 e1 1f ff 	call -49182 <mad_bit_read : 105bc4 >			  ## layer3.c:685:31
  111be2:    40 e7 60 07 	b[r6 + r7] = r0 			  ## layer3.c:685:29
  111be6:    7f d0       	r7 = r7 + 1 			  ## layer3.c:683:24
  111be8:    2f 98       	cmp r7, 5			  ## layer3.c:683:4
  111bea:    f7 11       	ifs (nzcv != 0) goto -18 <mTSYIII_decode+0x25E : 111bda >			  ## layer3.c:683:4
  111bec:    0c 08       	goto 24 <mTSYIII_decode+0x28A : 111c06 >			  ## layer3.c:683:4
  111bee:    80 42       	r0 = [sp+ 40] 			  ## layer3.c:680:31
  111bf0:    f0 88       	r0 += 30 			  ## layer3.c:680:31
  111bf2:    c1 41       	r1 = [sp+ 28] 			  ## layer3.c:680:31
  111bf4:    f1 88       	r1 += 30 			  ## layer3.c:680:31
  111bf6:    02 80       	r2 = 0 			  ## layer3.c:680:31
  111bf8:    8b d4       	r3 = r1 + r2 			  ## layer3.c:680:31
  111bfa:    1b 58       	r3 = b[r3 + 0] 			  ## layer3.c:680:31
  111bfc:    40 e7 03 02 	b[r0 + r2] = r3 			  ## layer3.c:680:29
  111c00:    52 d0       	r2 = r2 + 1 			  ## layer3.c:679:24
  111c02:    2a 98       	cmp r2, 5			  ## layer3.c:679:4
  111c04:    f9 11       	ifs (nzcv != 0) goto -14 <mTSYIII_decode+0x27C : 111bf8 >			  ## layer3.c:679:4
  111c06:    00 f4 90 02 	tst r9, 2			  ## layer3.c:689:7
  111c0a:    0f 11       	ifs (nzcv != 0) goto 30 <mTSYIII_decode+0x2AE : 111c2a >			  ## layer3.c:689:7
  111c0c:    80 42       	r0 = [sp+ 40] 			  ## layer3.c:696:31
  111c0e:    00 ed 05 23 	r5 = r0 + 35 			  ## layer3.c:696:31
  111c12:    06 80       	r6 = 0 
  111c14:    47 45       	r7 = [sp+ 84] 
  111c16:    38 c6       	r0 = r7 			  ## layer3.c:696:31
  111c18:    99 c6       	r1 = r11 			  ## layer3.c:696:31
  111c1a:    f9 e1 3f fd 	call -49242 <mad_bit_read : 105bc4 >			  ## layer3.c:696:31
  111c1e:    40 e7 50 06 	b[r5 + r6] = r0 			  ## layer3.c:696:29
  111c22:    76 d0       	r6 = r6 + 1 			  ## layer3.c:694:25
  111c24:    2e 98       	cmp r6, 5			  ## layer3.c:694:4
  111c26:    f7 11       	ifs (nzcv != 0) goto -18 <mTSYIII_decode+0x29A : 111c16 >			  ## layer3.c:694:4
  111c28:    0d 08       	goto 26 <mTSYIII_decode+0x2C8 : 111c44 >			  ## layer3.c:694:4
  111c2a:    80 42       	r0 = [sp+ 40] 			  ## layer3.c:691:31
  111c2c:    18 89       	r0 += 35 			  ## layer3.c:691:31
  111c2e:    c1 41       	r1 = [sp+ 28] 			  ## layer3.c:691:31
  111c30:    19 89       	r1 += 35 			  ## layer3.c:691:31
  111c32:    02 80       	r2 = 0 			  ## layer3.c:691:31
  111c34:    47 45       	r7 = [sp+ 84] 			  ## layer3.c:691:31
  111c36:    8b d4       	r3 = r1 + r2 			  ## layer3.c:691:31
  111c38:    1b 58       	r3 = b[r3 + 0] 			  ## layer3.c:691:31
  111c3a:    40 e7 03 02 	b[r0 + r2] = r3 			  ## layer3.c:691:29
  111c3e:    52 d0       	r2 = r2 + 1 			  ## layer3.c:690:25
  111c40:    2a 98       	cmp r2, 5			  ## layer3.c:690:4
  111c42:    f9 11       	ifs (nzcv != 0) goto -14 <mTSYIII_decode+0x2BA : 111c36 >			  ## layer3.c:690:4
  111c44:    00 f4 90 01 	tst r9, 1			  ## layer3.c:700:7
  111c48:    0e 11       	ifs (nzcv != 0) goto 28 <mTSYIII_decode+0x2EA : 111c66 >			  ## layer3.c:700:7
  111c4a:    80 42       	r0 = [sp+ 40] 			  ## layer3.c:707:31
  111c4c:    00 ed 05 28 	r5 = r0 + 40 			  ## layer3.c:707:31
  111c50:    06 80       	r6 = 0 			  ## layer3.c:707:31
  111c52:    38 c6       	r0 = r7 			  ## layer3.c:707:31
  111c54:    99 c6       	r1 = r11 			  ## layer3.c:707:31
  111c56:    f9 e1 5f fb 	call -49302 <mad_bit_read : 105bc4 >			  ## layer3.c:707:31
  111c5a:    40 e7 50 06 	b[r5 + r6] = r0 			  ## layer3.c:707:29
  111c5e:    76 d0       	r6 = r6 + 1 			  ## layer3.c:705:25
  111c60:    2e 98       	cmp r6, 5			  ## layer3.c:705:4
  111c62:    f7 11       	ifs (nzcv != 0) goto -18 <mTSYIII_decode+0x2D6 : 111c52 >			  ## layer3.c:705:4
  111c64:    0c 08       	goto 24 <mTSYIII_decode+0x302 : 111c7e >			  ## layer3.c:705:4
  111c66:    80 42       	r0 = [sp+ 40] 			  ## layer3.c:702:31
  111c68:    40 89       	r0 += 40 			  ## layer3.c:702:31
  111c6a:    c1 41       	r1 = [sp+ 28] 			  ## layer3.c:702:31
  111c6c:    41 89       	r1 += 40 			  ## layer3.c:702:31
  111c6e:    02 80       	r2 = 0 			  ## layer3.c:702:31
  111c70:    8b d4       	r3 = r1 + r2 			  ## layer3.c:702:31
  111c72:    1b 58       	r3 = b[r3 + 0] 			  ## layer3.c:702:31
  111c74:    40 e7 03 02 	b[r0 + r2] = r3 			  ## layer3.c:702:29
  111c78:    52 d0       	r2 = r2 + 1 			  ## layer3.c:701:25
  111c7a:    2a 98       	cmp r2, 5			  ## layer3.c:701:4
  111c7c:    f9 11       	ifs (nzcv != 0) goto -14 <mTSYIII_decode+0x2F4 : 111c70 >			  ## layer3.c:701:4
  111c7e:    00 80       	r0 = 0 			  ## layer3.c:711:25
  111c80:    20 e9 0b 0a 	r11 = [sp+ 40] 			  ## layer3.c:711:25
  111c84:    40 e8 b0 4b 	b[r11 + 45] = r0 			  ## layer3.c:711:25
  111c88:    9b c6       	r3 = r11 			  ## layer3.c:724:25
  111c8a:    04 e8 35 83 	r5 = b[++ r3 = 14] 			  ## layer3.c:724:25
  111c8e:    00 f6 50 21 	r0 = uextra(r5, p:1, l:1) 			  ## layer3.c:724:24
  111c92:    40 d0       	r0 = r0 + 1 			  ## layer3.c:724:24
  111c94:    d9 53       	r1 = h[r3 + -4] 			  ## layer3.c:723:9
  111c96:    1f ed 11 2e 	r1 = r1 + -210 			  ## layer3.c:723:43
  111c9a:    00 e8 a2 00 	r2 = b[r10 + 0] 			  ## layer3.c:726:15
  111c9e:    12 98       	cmp r2, 2			  ## layer3.c:726:6
  111ca0:    03 61       	[sp+ 16] = r3 			  ## layer3.c:726:6
  111ca2:    4f 11       	ifs (nzcv != 0) goto 158 <mTSYIII_decode+0x3C6 : 111d42 >			  ## layer3.c:726:6
  111ca4:    02 80       	r2 = 0 
  111ca6:    00 f4 50 08 	tst r5, 8			  ## layer3.c:732:7
  111caa:    03 80       	r3 = 0 			  ## layer3.c:732:7
  111cac:    19 10       	ifs (nzcv == 0) goto 50 <mTSYIII_decode+0x364 : 111ce0 >			  ## layer3.c:732:7
  111cae:    00 ed ba 18 	r10 = r11 + 24 			  ## layer3.c:739:4
  111cb2:    80 f6 55 41 	r5 = sextra(r5, p:2, l:1) 			  ## layer3.c:735:14
  111cb6:    03 80       	r3 = 0 
  111cb8:    e6 92       	r6 = sp + 92 
  111cba:    20 e4 19 ea 	r9 = [addr(1960)]  <.GCPI393_3 : 112464 >
  111cbe:    02 80       	r2 = 0 
  111cc0:    00 e7 a7 03 	r7 = b[r10 + r3] 			  ## layer3.c:741:21
  111cc4:    00 e7 94 03 	r4 = b[r9 + r3] 			  ## layer3.c:741:48
  111cc8:    ac da       	r4 &= r5 			  ## layer3.c:741:61
  111cca:    e4 d5       	r4 = r4 + r7 			  ## layer3.c:741:45
  111ccc:    04 cf       	r4 <<= r0 			  ## layer3.c:741:73
  111cce:    0c d7       	r4 = r1 - r4 			  ## layer3.c:740:28
  111cd0:    68 e8 64 01 	[r6 ++= 4] = r4 			  ## layer3.c:740:21
  111cd4:    00 e7 c4 03 	r4 = b[r12 + r3] 			  ## layer3.c:744:10
  111cd8:    12 d5       	r2 = r2 + r4 			  ## layer3.c:744:7
  111cda:    5b d0       	r3 = r3 + 1 			  ## layer3.c:744:23
  111cdc:    22 99       	cmp r2, 36			  ## layer3.c:739:4
  111cde:    f0 13       	if (nzcv < 0) goto -32 <mTSYIII_decode+0x344 : 111cc0 >			  ## layer3.c:739:4
  111ce0:    9c c6       	r4 = r11 			  ## layer3.c:752:22
  111ce2:    04 e8 45 45 	r5 = b[++ r4 = 21] 			  ## layer3.c:752:22
  111ce6:    56 a6       	r6 = r2 >> 6 			  ## layer3.c:754:3
  111ce8:    46 98       	cmp r6, 8			  ## layer3.c:754:3
  111cea:    4a 18       	if (nzcv > 0) goto 148 <mTSYIII_decode+0x404 : 111d80 >
  111cec:    2d a3       	r5 = r5 << 3 			  ## layer3.c:752:20
  111cee:    40 ee 19 05 	r9 = r1 - r5 			  ## layer3.c:752:16
  111cf2:    e5 5f       	r5 = b[r4 + -1] 			  ## layer3.c:751:22
  111cf4:    2d a3       	r5 = r5 << 3 			  ## layer3.c:751:20
  111cf6:    4d d7       	r5 = r1 - r5 			  ## layer3.c:751:16
  111cf8:    e4 5d       	r4 = b[r4 + -2] 			  ## layer3.c:750:22
  111cfa:    24 a3       	r4 = r4 << 3 			  ## layer3.c:750:20
  111cfc:    09 d7       	r1 = r1 - r4 			  ## layer3.c:750:16
  111cfe:    00 ee c7 03 	r7 = r12 + r3 			  ## layer3.c:756:19
  111d02:    1c a2       	r4 = r3 << 2 			  ## layer3.c:756:19
  111d04:    e6 92       	r6 = sp + 92 			  ## layer3.c:756:19
  111d06:    a4 d5       	r4 = r4 + r6 			  ## layer3.c:756:19
  111d08:    24 d1       	r4 = r4 + 4 			  ## layer3.c:756:19
  111d0a:    83 cb       	r3 += r8 			  ## layer3.c:756:19
  111d0c:    c6 41       	r6 = [sp+ 28] 			  ## layer3.c:756:19
  111d0e:    9b d5       	r3 = r3 + r6 			  ## layer3.c:756:19
  111d10:    d3 88       	r3 += 26 			  ## layer3.c:756:19
  111d12:    de 5d       	r6 = b[r3 + -2] 			  ## layer3.c:756:19
  111d14:    06 cf       	r6 <<= r0 			  ## layer3.c:756:47
  111d16:    8e d7       	r6 = r1 - r6 			  ## layer3.c:755:32
  111d18:    e6 6f       	[r4 + -4] = r6 			  ## layer3.c:755:24
  111d1a:    de 5f       	r6 = b[r3 + -1] 			  ## layer3.c:758:19
  111d1c:    06 cf       	r6 <<= r0 			  ## layer3.c:758:47
  111d1e:    ae d7       	r6 = r5 - r6 			  ## layer3.c:757:32
  111d20:    26 68       	[r4 + 0] = r6 			  ## layer3.c:757:24
  111d22:    1e 58       	r6 = b[r3 + 0] 			  ## layer3.c:760:19
  111d24:    06 cf       	r6 <<= r0 			  ## layer3.c:760:47
  111d26:    40 ee 96 06 	r6 = r9 - r6 			  ## layer3.c:759:32
  111d2a:    66 68       	[r4 + 4] = r6 			  ## layer3.c:759:24
  111d2c:    08 e8 76 c0 	r6 = b[r7 ++= 3] 			  ## layer3.c:762:16
  111d30:    00 fc 66 03 	r6 = r6 * 3 			  ## layer3.c:762:14
  111d34:    92 d5       	r2 = r2 + r6 			  ## layer3.c:762:9
  111d36:    db d0       	r3 = r3 + 3 			  ## layer3.c:754:3
  111d38:    64 88       	r4 += 12 			  ## layer3.c:754:3
  111d3a:    82 ef 20 40 	cmp r2, 576			  ## layer3.c:754:3
  111d3e:    e9 13       	if (nzcv < 0) goto -46 <mTSYIII_decode+0x396 : 111d12 >			  ## layer3.c:754:3
  111d40:    1f 08       	goto 62 <mTSYIII_decode+0x404 : 111d80 >			  ## layer3.c:754:3
  111d42:    00 ed b2 18 	r2 = r11 + 24 			  ## layer3.c:777:20
  111d46:    03 80       	r3 = 0 			  ## layer3.c:777:20
  111d48:    e4 92       	r4 = sp + 92 			  ## layer3.c:777:20
  111d4a:    00 f4 50 04 	tst r5, 4			  ## layer3.c:767:7
  111d4e:    0a 11       	ifs (nzcv != 0) goto 20 <mTSYIII_decode+0x3E8 : 111d64 >			  ## layer3.c:767:7
  111d50:    00 e7 25 03 	r5 = b[r2 + r3] 			  ## layer3.c:777:20
  111d54:    05 cf       	r5 <<= r0 			  ## layer3.c:777:44
  111d56:    4d d7       	r5 = r1 - r5 			  ## layer3.c:776:28
  111d58:    68 e8 45 01 	[r4 ++= 4] = r5 			  ## layer3.c:776:21
  111d5c:    5b d0       	r3 = r3 + 1 			  ## layer3.c:775:30
  111d5e:    b3 98       	cmp r3, 22			  ## layer3.c:775:4
  111d60:    f7 11       	ifs (nzcv != 0) goto -18 <mTSYIII_decode+0x3D4 : 111d50 >			  ## layer3.c:775:4
  111d62:    0e 08       	goto 28 <mTSYIII_decode+0x404 : 111d80 >			  ## layer3.c:775:4
  111d64:    20 e4 15 bf 	r5 = [addr(1788)]  <.GCPI393_3 : 112464 >
  111d68:    00 e7 26 03 	r6 = b[r2 + r3] 			  ## layer3.c:770:21
  111d6c:    00 e7 57 03 	r7 = b[r5 + r3] 			  ## layer3.c:770:47
  111d70:    f6 d5       	r6 = r6 + r7 			  ## layer3.c:770:45
  111d72:    06 cf       	r6 <<= r0 			  ## layer3.c:770:61
  111d74:    8e d7       	r6 = r1 - r6 			  ## layer3.c:769:28
  111d76:    68 e8 46 01 	[r4 ++= 4] = r6 			  ## layer3.c:769:21
  111d7a:    5b d0       	r3 = r3 + 1 			  ## layer3.c:768:30
  111d7c:    b3 98       	cmp r3, 22			  ## layer3.c:768:4
  111d7e:    f4 11       	ifs (nzcv != 0) goto -24 <mTSYIII_decode+0x3EC : 111d68 >			  ## layer3.c:768:4
  111d80:    47 45       	r7 = [sp+ 84] 
  111d82:    38 c6       	r0 = r7 			  ## layer3.c:883:14
  111d84:    29 80       	r1 = 5 			  ## layer3.c:883:14
  111d86:    f9 e1 df f1 	call -49606 <mad_bit_read : 105bc4 >			  ## layer3.c:883:14
  111d8a:    05 c6       	r5 = r0 			  ## layer3.c:883:14
  111d8c:    38 c6       	r0 = r7 			  ## layer3.c:884:15
  111d8e:    29 c6       	r1 = r5 			  ## layer3.c:884:15
  111d90:    f9 e1 8f f1 	call -49616 <mad_bit_read : 105bc4 >			  ## layer3.c:884:15
  111d94:    06 c6       	r6 = r0 			  ## layer3.c:884:15
  111d96:    98 c6       	r0 = r11 			  ## layer3.c:905:16
  111d98:    04 e8 01 04 	r1 = b[++ r0 = 16] 			  ## layer3.c:905:16
  111d9c:    09 a3       	r1 = r1 << 3 			  ## layer3.c:906:22
  111d9e:    20 e4 13 b2 	r3 = [addr(1736)]  <.GCPI393_4 : 112468 >			  ## layer3.c:906:22
  111da2:    20 e7 39 01 	r9 = [r3 + r1] 			  ## layer3.c:906:22
  111da6:    08 e8 c2 40 	r2 = b[r12 ++= 1] 			  ## layer3.c:902:21
  111daa:    60 e9 0c 0e 	[sp+ 56] = r12 			  ## layer3.c:902:21
  111dae:    12 a1       	r2 = r2 << 1 			  ## layer3.c:902:19
  111db0:    84 45       	r4 = [sp+ 88] 			  ## layer3.c:902:19
  111db2:    12 d5       	r2 = r2 + r4 			  ## layer3.c:902:19
  111db4:    02 65       	[sp+ 80] = r2 
  111db6:    00 ed b2 17 	r2 = r11 + 23 
  111dba:    02 60       	[sp] = r2 			  ## layer3.c:903:13
  111dbc:    40 5c       	r0 = b[r0 + 6] 			  ## layer3.c:903:13
  111dbe:    40 d0       	r0 = r0 + 1 			  ## layer3.c:903:36
  111dc0:    c0 62       	[sp+ 44] = r0 			  ## layer3.c:906:22
  111dc2:    58 d4       	r0 = r3 + r1 			  ## layer3.c:906:22
  111dc4:    41 54       	r1 = h[r0 + 6] 			  ## layer3.c:908:15
  111dc6:    40 50       	r0 = h[r0 + 4] 			  ## layer3.c:907:15
  111dc8:    40 64       	[sp+ 68] = r0 			  ## layer3.c:911:13
  111dca:    c0 45       	r0 = [sp+ 92] 			  ## layer3.c:911:13
  111dcc:    80 64       	[sp+ 72] = r0 			  ## layer3.c:914:16
  111dce:    38 c6       	r0 = r7 			  ## layer3.c:914:16
  111dd0:    0f c6       	r7 = r1 			  ## layer3.c:914:16
  111dd2:    49 80       	r1 = 9 			  ## layer3.c:914:16
  111dd4:    f9 e1 6f ef 	call -49684 <mad_bit_read : 105bc4 >			  ## layer3.c:914:16
  111dd8:    43 c6       	r11 = r0 			  ## layer3.c:914:16
  111dda:    00 ed 48 06 	r8 = r4 + 6 			  ## layer3.c:917:3
  111dde:    e0 92       	r0 = sp + 92 			  ## layer3.c:917:3
  111de0:    01 d1       	r1 = r0 + 4 			  ## layer3.c:911:20
  111de2:    c1 63       	[sp+ 60] = r1 
  111de4:    40 60       	[sp+ 4] = r0 
  111de6:    00 ed 00 9c 	r0 = r0 + 156 			  ## layer3.c:900:41
  111dea:    00 63       	[sp+ 48] = r0 
  111dec:    54 ea 00 00 	r12 = 0 
  111df0:    55 ea 01 00 	r13 = 1 
  111df4:    00 80       	r0 = 0 
  111df6:    40 62       	[sp+ 36] = r0 
  111df8:    52 ea 00 00 	r10 = 0 
  111dfc:    40 45       	r0 = [sp+ 84] 
  111dfe:    00 ed 00 90 	r0 = r0 + 144 
  111e02:    40 63       	[sp+ 52] = r0 			  ## layer3.c:917:3
  111e04:    80 ef b0 00 	cmp r11, 0			  ## layer3.c:917:3
  111e08:    00 fb 20 14 	ifs (nzcv == 0) goto 644 <mTSYIII_decode+0x714 : 112090 >			  ## layer3.c:917:3
  111e0c:    20 f7 c0 01 	r0 = r12 << 1 			  ## layer3.c:869:31
  111e10:    81 45       	r1 = [sp+ 88] 			  ## layer3.c:869:31
  111e12:    40 d4       	r0 = r0 + r1 			  ## layer3.c:869:31
  111e14:    02 45       	r2 = [sp+ 80] 
  111e16:    c0 64       	[sp+ 76] = r0 
  111e18:    02 ce       	cmp r0, r2			  ## layer3.c:922:8
  111e1a:    2b 11       	ifs (nzcv != 0) goto 86 <mTSYIII_decode+0x4F6 : 111e72 >
  111e1c:    81 43       	r1 = [sp+ 56] 			  ## layer3.c:923:16
  111e1e:    08 e8 10 40 	r0 = b[r1 ++= 1] 			  ## layer3.c:923:16
  111e22:    81 63       	[sp+ 56] = r1 			  ## layer3.c:923:13
  111e24:    00 a1       	r0 = r0 << 1 			  ## layer3.c:923:13
  111e26:    c1 42       	r1 = [sp+ 44] 			  ## layer3.c:923:13
  111e28:    c9 d3       	r1 = r1 + -1 			  ## layer3.c:927:9
  111e2a:    02 10       	ifs (nzcv == 0) goto 4 <mTSYIII_decode+0x4B4 : 111e30 >
  111e2c:    c1 62       	[sp+ 44] = r1 
  111e2e:    16 08       	goto 44 <mTSYIII_decode+0x4E0 : 111e5c >
  111e30:    01 80       	r1 = 0 
  111e32:    43 42       	r3 = [sp+ 36] 
  111e34:    3b 20       	if (r3 != 0) goto 6 <mTSYIII_decode+0x4C0 : 111e3c >
  111e36:    01 40       	r1 = [sp] 			  ## layer3.c:929:16
  111e38:    09 58       	r1 = b[r1 + 0] 			  ## layer3.c:929:16
  111e3a:    49 d0       	r1 = r1 + 1 			  ## layer3.c:929:39
  111e3c:    c1 62       	[sp+ 44] = r1 
  111e3e:    5b d0       	r3 = r3 + 1 			  ## layer3.c:933:61
  111e40:    81 42       	r1 = [sp+ 40] 			  ## layer3.c:933:39
  111e42:    43 62       	[sp+ 36] = r3 			  ## layer3.c:933:39
  111e44:    c9 d4       	r1 = r1 + r3 			  ## layer3.c:933:39
  111e46:    00 e8 11 04 	r1 = b[r1 + 16] 			  ## layer3.c:933:19
  111e4a:    09 a3       	r1 = r1 << 3 			  ## layer3.c:934:25
  111e4c:    20 e4 13 86 	r3 = [addr(1560)]  <.GCPI393_4 : 112468 >			  ## layer3.c:934:25
  111e50:    20 e7 39 01 	r9 = [r3 + r1] 			  ## layer3.c:934:25
  111e54:    c9 d4       	r1 = r1 + r3 			  ## layer3.c:934:25
  111e56:    4f 54       	r7 = h[r1 + 6] 			  ## layer3.c:936:18
  111e58:    49 50       	r1 = h[r1 + 4] 			  ## layer3.c:935:18
  111e5a:    41 64       	[sp+ 68] = r1 
  111e5c:    12 d4       	r2 = r2 + r0 			  ## layer3.c:923:13
  111e5e:    c1 43       	r1 = [sp+ 60] 			  ## layer3.c:939:16
  111e60:    28 e8 10 01 	r0 = [r1 ++= 4] 			  ## layer3.c:939:16
  111e64:    c1 63       	[sp+ 60] = r1 			  ## layer3.c:939:9
  111e66:    81 44       	r1 = [sp+ 72] 			  ## layer3.c:939:9
  111e68:    08 ce       	cmp r1, r0			  ## layer3.c:939:9
  111e6a:    10 03       	ifs (nzcv != 0) {			  ## layer3.c:939:9
  111e6c:    52 ea 00 00 		r10 = 0 
                               	}			  ## layer3.c:939:9
  111e70:    80 64       	[sp+ 72] = r0 
  111e72:    a5 98       	cmp r5, 20			  ## layer3.c:947:8
  111e74:    02 65       	[sp+ 80] = r2 			  ## layer3.c:947:8
  111e76:    0b 1c       	ifs (nzcv > 0) goto 22 <mTSYIII_decode+0x512 : 111e8e >			  ## layer3.c:947:8
  111e78:    20 ee 50 1f 	r0 = 31 - r5 			  ## layer3.c:950:33
  111e7c:    c0 f3 04 07 	r4 = r0 & (~7) 			  ## layer3.c:950:51
  111e80:    26 cf       	r6 <<= r4 			  ## layer3.c:951:28
  111e82:    40 45       	r0 = [sp+ 84] 			  ## layer3.c:951:39
  111e84:    21 c6       	r1 = r4 			  ## layer3.c:951:39
  111e86:    f9 e1 df e9 	call -49862 <mad_bit_read : 105bc4 >			  ## layer3.c:951:39
  111e8a:    06 da       	r6 |= r0 			  ## layer3.c:951:37
  111e8c:    2d d5       	r5 = r5 + r4 			  ## layer3.c:952:15
  111e8e:    80 ef 90 00 	cmp r9, 0			  ## layer3.c:957:8
  111e92:    00 fb e0 1c 	ifs (nzcv == 0) goto 924 <mTSYIII_decode+0x8B6 : 112232 >
  111e96:    e8 d7       	r0 = r5 - r7 			  ## layer3.c:964:21
  111e98:    40 f7 60 00 	r0 = r6 >> r0 			  ## layer3.c:964:21
  111e9c:    00 f7 d1 07 	r1 = r13 << r7 			  ## layer3.c:964:21
  111ea0:    c9 d3       	r1 = r1 + -1 			  ## layer3.c:964:21
  111ea2:    88 da       	r0 &= r1 			  ## layer3.c:964:21
  111ea4:    01 a1       	r1 = r0 << 1 			  ## layer3.c:964:21
  111ea6:    00 e7 91 01 	r1 = b[r9 + r1] 			  ## layer3.c:966:18
  111eaa:    00 f4 10 01 	tst r1, 1			  ## layer3.c:966:4
  111eae:    60 e9 08 10 	[sp+ 64] = r8 
  111eb2:    d0 c6       	r8 = r10 
  111eb4:    1b 11       	ifs (nzcv != 0) goto 54 <mTSYIII_decode+0x570 : 111eec >
  111eb6:    39 c6       	r1 = r7 
  111eb8:    00 a1       	r0 = r0 << 1 			  ## layer3.c:969:25
  111eba:    00 e7 92 00 	r2 = b[r9 + r0] 			  ## layer3.c:969:25
  111ebe:    88 cb       	r0 += r9 			  ## layer3.c:969:25
  111ec0:    00 5a       	r0 = b[r0 + 1] 			  ## layer3.c:969:25
  111ec2:    41 f6 02 08 	r2 <= insert(r0, p:8, l:8) 			  ## layer3.c:969:25
  111ec6:    00 f6 23 23 	r3 = uextra(r2, p:1, l:3) 			  ## layer3.c:969:25
  111eca:    6d d6       	r5 = r5 - r1 			  ## layer3.c:967:13
  111ecc:    e8 d6       	r0 = r5 - r3 			  ## layer3.c:970:41
  111ece:    40 f7 60 00 	r0 = r6 >> r0 			  ## layer3.c:970:41
  111ed2:    00 f7 d1 03 	r1 = r13 << r3 			  ## layer3.c:970:41
  111ed6:    c9 d3       	r1 = r1 + -1 			  ## layer3.c:970:41
  111ed8:    88 da       	r0 &= r1 			  ## layer3.c:970:41
  111eda:    51 a4       	r1 = r2 >> 4 			  ## layer3.c:970:32
  111edc:    40 d4       	r0 = r0 + r1 			  ## layer3.c:970:39
  111ede:    01 a1       	r1 = r0 << 1 			  ## layer3.c:970:39
  111ee0:    00 e7 91 01 	r1 = b[r9 + r1] 			  ## layer3.c:966:18
  111ee4:    00 f4 10 01 	tst r1, 1			  ## layer3.c:966:4
  111ee8:    19 c6       	r1 = r3 
  111eea:    e6 10       	ifs (nzcv == 0) goto -52 <mTSYIII_decode+0x53C : 111eb8 >
  111eec:    00 a1       	r0 = r0 << 1 			  ## layer3.c:973:27
  111eee:    00 e7 91 00 	r1 = b[r9 + r0] 			  ## layer3.c:973:27
  111ef2:    00 ee 9a 00 	r10 = r9 + r0 			  ## layer3.c:973:27
  111ef6:    00 e8 a0 40 	r0 = b[r10 + 1] 			  ## layer3.c:973:27
  111efa:    41 f6 01 08 	r1 <= insert(r0, p:8, l:8) 			  ## layer3.c:973:27
  111efe:    00 f6 10 23 	r0 = uextra(r1, p:1, l:3) 			  ## layer3.c:973:27
  111f02:    2d d6       	r5 = r5 - r0 			  ## layer3.c:973:12
  111f04:    48 a4       	r0 = r1 >> 4 
  111f06:    80 f3 04 0f 	r4 = r0 & 15 
  111f0a:    41 44       	r1 = [sp+ 68] 			  ## layer3.c:975:8
  111f0c:    56 ea 00 00 	r14 = 0 			  ## layer3.c:975:8
  111f10:    e1 21       	if (r1 == 0) goto 60 <mTSYIII_decode+0x5D2 : 111f4e >			  ## layer3.c:975:8
  111f12:    00 f4 00 0f 	tst r0, 15			  ## layer3.c:980:5
  111f16:    24 10       	ifs (nzcv == 0) goto 72 <mTSYIII_decode+0x5E4 : 111f60 >			  ## layer3.c:980:5
  111f18:    7c 98       	cmp r4, 15
  111f1a:    24 11       	ifs (nzcv != 0) goto 72 <mTSYIII_decode+0x5E8 : 111f64 >
  111f1c:    40 44       	r0 = [sp+ 68] 			  ## layer3.c:986:28
  111f1e:    80 d0       	r0 = r0 + 2 			  ## layer3.c:986:28
  111f20:    28 ce       	cmp r5, r0			  ## layer3.c:986:10
  111f22:    08 12       	if (nzcv >= 0) goto 16 <mTSYIII_decode+0x5B8 : 111f34 >			  ## layer3.c:986:10
  111f24:    40 45       	r0 = [sp+ 84] 			  ## layer3.c:987:39
  111f26:    81 80       	r1 = 16 			  ## layer3.c:987:39
  111f28:    f9 e1 cf e4 	call -50024 <mad_bit_read : 105bc4 >			  ## layer3.c:987:39
  111f2c:    31 b0       	r1 = r6 << 16 			  ## layer3.c:987:30
  111f2e:    00 f0 06 01 	r6 = r0 | r1 			  ## layer3.c:987:37
  111f32:    85 88       	r5 += 16 			  ## layer3.c:988:17
  111f34:    41 44       	r1 = [sp+ 68] 
  111f36:    6d d6       	r5 = r5 - r1 			  ## layer3.c:991:15
  111f38:    40 f7 60 05 	r0 = r6 >> r5 			  ## layer3.c:991:15
  111f3c:    00 f7 d1 01 	r1 = r13 << r1 			  ## layer3.c:991:15
  111f40:    c9 d3       	r1 = r1 + -1 			  ## layer3.c:991:15
  111f42:    88 da       	r0 &= r1 			  ## layer3.c:991:15
  111f44:    00 d5       	r0 = r0 + r4 			  ## layer3.c:991:12
  111f46:    81 44       	r1 = [sp+ 72] 			  ## layer3.c:994:20
  111f48:    ff e1 af 9b 	call -3212 <III_requantize : 1112c0 >			  ## layer3.c:994:20
  111f4c:    42 08       	goto 132 <mTSYIII_decode+0x656 : 111fd2 >
  111f4e:    24 21       	if (r4 == 0) goto 36 <mTSYIII_decode+0x5F8 : 111f74 >
  111f50:    80 f1 80 04 	r0 = r8 & setbit(r4) 			  ## layer3.c:1053:18
  111f54:    11 10       	ifs (nzcv == 0) goto 34 <mTSYIII_decode+0x5FC : 111f78 >			  ## layer3.c:1053:10
  111f56:    20 a2       	r0 = r4 << 2 			  ## layer3.c:1054:21
  111f58:    01 43       	r1 = [sp+ 48] 			  ## layer3.c:1054:21
  111f5a:    20 e7 10 00 	r0 = [r1 + r0] 			  ## layer3.c:1054:21
  111f5e:    1a 08       	goto 52 <mTSYIII_decode+0x618 : 111f94 >
  111f60:    01 80       	r1 = 0 
  111f62:    3d 08       	goto 122 <mTSYIII_decode+0x662 : 111fde >
  111f64:    80 f1 80 04 	r0 = r8 & setbit(r4) 			  ## layer3.c:998:18
  111f68:    26 10       	ifs (nzcv == 0) goto 76 <mTSYIII_decode+0x63A : 111fb6 >			  ## layer3.c:998:10
  111f6a:    20 a2       	r0 = r4 << 2 			  ## layer3.c:999:21
  111f6c:    01 43       	r1 = [sp+ 48] 			  ## layer3.c:999:21
  111f6e:    20 e7 10 00 	r0 = [r1 + r0] 			  ## layer3.c:999:21
  111f72:    2f 08       	goto 94 <mTSYIII_decode+0x656 : 111fd2 >
  111f74:    01 80       	r1 = 0 
  111f76:    14 08       	goto 40 <mTSYIII_decode+0x624 : 111fa0 >
  111f78:    07 62       	[sp+ 32] = r7 
  111f7a:    00 f7 d7 04 	r7 = r13 << r4 			  ## layer3.c:1053:24
  111f7e:    20 c6       	r0 = r4 			  ## layer3.c:1057:39
  111f80:    81 44       	r1 = [sp+ 72] 			  ## layer3.c:1057:39
  111f82:    ff e1 df 99 	call -3270 <III_requantize : 1112c0 >			  ## layer3.c:1057:39
  111f86:    21 a2       	r1 = r4 << 2 			  ## layer3.c:1057:21
  111f88:    02 43       	r2 = [sp+ 48] 			  ## layer3.c:1057:37
  111f8a:    60 e7 20 01 	[r2 + r1] = r0 			  ## layer3.c:1057:37
  111f8e:    00 f0 88 07 	r8 = r8 | r7 			  ## layer3.c:1056:15
  111f92:    07 42       	r7 = [sp+ 32] 
  111f94:    ed d3       	r5 = r5 + -1 			  ## layer3.c:1060:17
  111f96:    80 f1 62 05 	r2 = r6 & setbit(r5) 			  ## layer3.c:1060:17
  111f9a:    81 dc       	r1 = -r0 			  ## layer3.c:1061:7
  111f9c:    1a 20       	if (r2 != 0) goto 2 <mTSYIII_decode+0x624 : 111fa0 >			  ## layer3.c:1061:7
  111f9e:    01 c6       	r1 = r0 			  ## layer3.c:1060:17
  111fa0:    c0 44       	r0 = [sp+ 76] 
  111fa2:    01 70       	h[r0 + 0] = r1 
  111fa4:    00 e8 a0 40 	r0 = b[r10 + 1] 			  ## layer3.c:1066:25
  111fa8:    00 f4 00 0f 	tst r0, 15			  ## layer3.c:1068:9
  111fac:    47 10       	ifs (nzcv == 0) goto 142 <mTSYIII_decode+0x6C0 : 11203c >			  ## layer3.c:1068:9
  111fae:    c0 f3 04 f0 	r4 = r0 & (~240) 			  ## layer3.c:1066:25
  111fb2:    c2 c6       	r10 = r8 
  111fb4:    3b 08       	goto 118 <mTSYIII_decode+0x6B0 : 11202c >
  111fb6:    07 62       	[sp+ 32] = r7 
  111fb8:    00 f7 d7 04 	r7 = r13 << r4 			  ## layer3.c:998:24
  111fbc:    20 c6       	r0 = r4 			  ## layer3.c:1002:39
  111fbe:    81 44       	r1 = [sp+ 72] 			  ## layer3.c:1002:39
  111fc0:    ff e1 ef 97 	call -3332 <III_requantize : 1112c0 >			  ## layer3.c:1002:39
  111fc4:    21 a2       	r1 = r4 << 2 			  ## layer3.c:1002:21
  111fc6:    02 43       	r2 = [sp+ 48] 			  ## layer3.c:1002:37
  111fc8:    60 e7 20 01 	[r2 + r1] = r0 			  ## layer3.c:1002:37
  111fcc:    00 f0 88 07 	r8 = r8 | r7 			  ## layer3.c:1001:15
  111fd0:    07 42       	r7 = [sp+ 32] 
  111fd2:    ed d3       	r5 = r5 + -1 			  ## layer3.c:1006:17
  111fd4:    80 f1 62 05 	r2 = r6 & setbit(r5) 			  ## layer3.c:1006:17
  111fd8:    81 dc       	r1 = -r0 			  ## layer3.c:1007:7
  111fda:    1a 20       	if (r2 != 0) goto 2 <mTSYIII_decode+0x662 : 111fde >			  ## layer3.c:1007:7
  111fdc:    01 c6       	r1 = r0 			  ## layer3.c:1006:17
  111fde:    c0 44       	r0 = [sp+ 76] 
  111fe0:    01 70       	h[r0 + 0] = r1 
  111fe2:    00 e8 a0 40 	r0 = b[r10 + 1] 			  ## layer3.c:1012:25
  111fe6:    00 f4 00 0f 	tst r0, 15			  ## layer3.c:1014:5
  111fea:    28 10       	ifs (nzcv == 0) goto 80 <mTSYIII_decode+0x6C0 : 11203c >			  ## layer3.c:1014:5
  111fec:    c0 f3 04 f0 	r4 = r0 & (~240) 			  ## layer3.c:1012:25
  111ff0:    7c 98       	cmp r4, 15
  111ff2:    c2 c6       	r10 = r8 
  111ff4:    1b 11       	ifs (nzcv != 0) goto 54 <mTSYIII_decode+0x6B0 : 11202c >
  111ff6:    40 44       	r0 = [sp+ 68] 			  ## layer3.c:1020:28
  111ff8:    40 d0       	r0 = r0 + 1 			  ## layer3.c:1020:28
  111ffa:    28 ce       	cmp r5, r0			  ## layer3.c:1020:10
  111ffc:    08 12       	if (nzcv >= 0) goto 16 <mTSYIII_decode+0x692 : 11200e >			  ## layer3.c:1020:10
  111ffe:    40 45       	r0 = [sp+ 84] 			  ## layer3.c:1021:39
  112000:    81 80       	r1 = 16 			  ## layer3.c:1021:39
  112002:    f9 e1 ff dd 	call -50242 <mad_bit_read : 105bc4 >			  ## layer3.c:1021:39
  112006:    31 b0       	r1 = r6 << 16 			  ## layer3.c:1021:30
  112008:    00 f0 06 01 	r6 = r0 | r1 			  ## layer3.c:1021:37
  11200c:    85 88       	r5 += 16 			  ## layer3.c:1022:17
  11200e:    20 e9 08 10 	r8 = [sp+ 64] 
  112012:    41 44       	r1 = [sp+ 68] 
  112014:    6d d6       	r5 = r5 - r1 			  ## layer3.c:1026:15
  112016:    40 f7 60 05 	r0 = r6 >> r5 			  ## layer3.c:1026:15
  11201a:    00 f7 d1 01 	r1 = r13 << r1 			  ## layer3.c:1026:15
  11201e:    c9 d3       	r1 = r1 + -1 			  ## layer3.c:1026:15
  112020:    88 da       	r0 &= r1 			  ## layer3.c:1026:15
  112022:    00 d5       	r0 = r0 + r4 			  ## layer3.c:1026:12
  112024:    81 44       	r1 = [sp+ 72] 			  ## layer3.c:1029:20
  112026:    ff e1 bf 94 	call -3434 <III_requantize : 1112c0 >			  ## layer3.c:1029:20
  11202a:    1d 08       	goto 58 <mTSYIII_decode+0x6EA : 112066 >
  11202c:    80 f1 a0 04 	r0 = r10 & setbit(r4) 
  112030:    09 10       	ifs (nzcv == 0) goto 18 <mTSYIII_decode+0x6C8 : 112044 >
  112032:    20 a2       	r0 = r4 << 2 
  112034:    01 43       	r1 = [sp+ 48] 
  112036:    20 e7 10 00 	r0 = [r1 + r0] 
  11203a:    13 08       	goto 38 <mTSYIII_decode+0x6E6 : 112062 >
  11203c:    c2 c6       	r10 = r8 
  11203e:    20 e9 08 10 	r8 = [sp+ 64] 
  112042:    18 08       	goto 48 <mTSYIII_decode+0x6F8 : 112074 >
  112044:    7a c6       	r10 = r7 
  112046:    00 f7 d7 04 	r7 = r13 << r4 
  11204a:    20 c6       	r0 = r4 
  11204c:    81 44       	r1 = [sp+ 72] 
  11204e:    ff e1 7f 93 	call -3474 <III_requantize : 1112c0 >
  112052:    21 a2       	r1 = r4 << 2 
  112054:    02 43       	r2 = [sp+ 48] 
  112056:    60 e7 20 01 	[r2 + r1] = r0 
  11205a:    00 f0 88 07 	r8 = r8 | r7 
  11205e:    97 c6       	r7 = r10 
  112060:    c2 c6       	r10 = r8 
  112062:    20 e9 08 10 	r8 = [sp+ 64] 
  112066:    ed d3       	r5 = r5 + -1 
  112068:    80 f1 61 05 	r1 = r6 & setbit(r5) 
  11206c:    30 ee 0e 00 	r14 = -r0 
  112070:    19 20       	if (r1 != 0) goto 2 <mTSYIII_decode+0x6F8 : 112074 >
  112072:    46 c6       	r14 = r0 
  112074:    1f ed bb ff 	r11 = r11 + -1 			  ## layer3.c:917:20
  112078:    c0 44       	r0 = [sp+ 76] 
  11207a:    50 e8 0e 80 	h[r0 + 2] = r14 
  11207e:    00 ed 88 04 	r8 = r8 + 4 			  ## layer3.c:1085:7
  112082:    00 ed cc 02 	r12 = r12 + 2 			  ## layer3.c:1083:10
  112086:    82 ef c0 40 	cmp r12, 576			  ## layer3.c:1085:7
  11208a:    ff fb 7b eb 	ifs (nzcv < 0) goto -658 <mTSYIII_decode+0x480 : 111dfc >			  ## layer3.c:1085:7
  11208e:    d1 08       	goto 418 <mTSYIII_decode+0x8B6 : 112232 >			  ## layer3.c:1085:7
  112090:    00 41       	r0 = [sp+ 16] 			  ## layer3.c:1100:41
  112092:    00 58       	r0 = b[r0 + 0] 			  ## layer3.c:1100:41
  112094:    c0 f3 00 fe 	r0 = r0 & (~254) 			  ## layer3.c:1100:47
  112098:    00 a2       	r0 = r0 << 2 			  ## layer3.c:1100:12
  11209a:    20 e4 01 f4 	r1 = [addr(976)]  <.GCPI393_5 : 11246c >			  ## layer3.c:1100:12
  11209e:    20 e7 1b 00 	r11 = [r1 + r0] 			  ## layer3.c:1100:12
  1120a2:    08 80       	r0 = 1 			  ## layer3.c:1102:18
  1120a4:    81 44       	r1 = [sp+ 72] 			  ## layer3.c:1102:18
  1120a6:    ff e1 bf 90 	call -3562 <III_requantize : 1112c0 >			  ## layer3.c:1102:18
  1120aa:    07 c6       	r7 = r0 			  ## layer3.c:1102:18
  1120ac:    40 45       	r0 = [sp+ 84] 			  ## layer3.c:1104:15
  1120ae:    49 80       	r1 = 9 			  ## layer3.c:1104:15
  1120b0:    f9 e1 8f d8 	call -50416 <mad_bit_read : 105bc4 >			  ## layer3.c:1104:15
  1120b4:    60 e9 0b 13 	[sp+ 76] = r11 
  1120b8:    45 c6       	r13 = r0 
  1120ba:    80 ef d0 00 	cmp r13, 0			  ## layer3.c:1106:4
  1120be:    00 fb 50 1b 	ifs (nzcv == 0) goto 874 <mTSYIII_decode+0xAB0 : 11242c >			  ## layer3.c:1106:4
  1120c2:    4d 98       	cmp r5, 9			  ## layer3.c:1111:9
  1120c4:    08 1c       	ifs (nzcv > 0) goto 16 <mTSYIII_decode+0x75A : 1120d6 >			  ## layer3.c:1111:9
  1120c6:    40 45       	r0 = [sp+ 84] 			  ## layer3.c:1112:38
  1120c8:    81 80       	r1 = 16 			  ## layer3.c:1112:38
  1120ca:    f9 e1 bf d7 	call -50442 <mad_bit_read : 105bc4 >			  ## layer3.c:1112:38
  1120ce:    31 b0       	r1 = r6 << 16 			  ## layer3.c:1112:29
  1120d0:    00 f0 06 01 	r6 = r0 | r1 			  ## layer3.c:1112:36
  1120d4:    85 88       	r5 += 16 			  ## layer3.c:1113:16
  1120d6:    03 45       	r3 = [sp+ 80] 
  1120d8:    1f ed 84 fa 	r4 = r8 + -6 			  ## layer3.c:1098:8
  1120dc:    1f ed 5a fc 	r10 = r5 + -4 			  ## layer3.c:1116:19
  1120e0:    40 f7 60 0a 	r0 = r6 >> r10 			  ## layer3.c:1116:19
  1120e4:    80 f3 00 0f 	r0 = r0 & 15 			  ## layer3.c:1116:19
  1120e8:    01 a1       	r1 = r0 << 1 			  ## layer3.c:1116:13
  1120ea:    00 e7 b0 01 	r0 = b[r11 + r1] 			  ## layer3.c:1119:16
  1120ee:    00 ee be 01 	r14 = r11 + r1 			  ## layer3.c:1116:13
  1120f2:    00 f4 00 01 	tst r0, 1			  ## layer3.c:1119:9
  1120f6:    19 11       	ifs (nzcv != 0) goto 50 <mTSYIII_decode+0x7AE : 11212a >			  ## layer3.c:1119:9
  1120f8:    00 e8 e0 40 	r0 = b[r14 + 1] 			  ## layer3.c:1122:30
  1120fc:    00 e8 e1 00 	r1 = b[r14 + 0] 			  ## layer3.c:1122:30
  112100:    41 f6 01 08 	r1 <= insert(r0, p:8, l:8) 			  ## layer3.c:1122:30
  112104:    00 f6 10 23 	r0 = uextra(r1, p:1, l:3) 			  ## layer3.c:1123:7
  112108:    40 ee a2 00 	r2 = r10 - r0 			  ## layer3.c:1123:7
  11210c:    40 f7 62 02 	r2 = r6 >> r2 			  ## layer3.c:1123:7
  112110:    0d 80       	r5 = 1 			  ## layer3.c:1123:7
  112112:    00 f7 50 00 	r0 = r5 << r0 			  ## layer3.c:1123:7
  112116:    c0 d3       	r0 = r0 + -1 			  ## layer3.c:1123:7
  112118:    90 da       	r0 &= r2 			  ## layer3.c:1123:7
  11211a:    49 a4       	r1 = r1 >> 4 			  ## layer3.c:1122:30
  11211c:    40 d4       	r0 = r0 + r1 			  ## layer3.c:1122:37
  11211e:    01 a1       	r1 = r0 << 1 			  ## layer3.c:1122:14
  112120:    00 e7 b0 01 	r0 = b[r11 + r1] 			  ## layer3.c:1122:14
  112124:    00 ee be 01 	r14 = r11 + r1 			  ## layer3.c:1122:14
  112128:    01 08       	goto 2 <mTSYIII_decode+0x7B0 : 11212c >
  11212a:    6a c6       	r10 = r5 
  11212c:    00 f6 09 23 	r9 = uextra(r0, p:1, l:3) 			  ## layer3.c:1126:28
  112130:    23 ce       	cmp r4, r3			  ## layer3.c:1128:9
  112132:    1e 11       	ifs (nzcv != 0) goto 60 <mTSYIII_decode+0x7F4 : 112170 >
  112134:    82 43       	r2 = [sp+ 56] 			  ## layer3.c:1129:17
  112136:    08 e8 21 40 	r1 = b[r2 ++= 1] 			  ## layer3.c:1129:17
  11213a:    82 63       	[sp+ 56] = r2 			  ## layer3.c:1129:14
  11213c:    0a a1       	r2 = r1 << 1 			  ## layer3.c:1129:14
  11213e:    20 e9 0b 0f 	r11 = [sp+ 60] 
  112142:    20 e8 b5 00 	r5 = [r11 + 0] 			  ## layer3.c:1131:17
  112146:    81 44       	r1 = [sp+ 72] 			  ## layer3.c:1131:10
  112148:    0d ce       	cmp r1, r5			  ## layer3.c:1131:10
  11214a:    0b 10       	ifs (nzcv == 0) goto 22 <mTSYIII_decode+0x7E6 : 112162 >
  11214c:    08 80       	r0 = 1 			  ## layer3.c:1133:21
  11214e:    29 c6       	r1 = r5 			  ## layer3.c:1133:21
  112150:    17 c6       	r7 = r2 			  ## layer3.c:1133:21
  112152:    ff e1 5f 8b 	call -3734 <III_requantize : 1112c0 >			  ## layer3.c:1133:21
  112156:    3a c6       	r2 = r7 
  112158:    03 45       	r3 = [sp+ 80] 
  11215a:    07 c6       	r7 = r0 			  ## layer3.c:1133:21
  11215c:    00 e8 e0 00 	r0 = b[r14 + 0] 
  112160:    85 64       	[sp+ 72] = r5 
  112162:    9b d4       	r3 = r3 + r2 			  ## layer3.c:1129:14
  112164:    00 ed bb 04 	r11 = r11 + 4 			  ## layer3.c:1136:6
  112168:    60 e9 0b 0f 	[sp+ 60] = r11 
  11216c:    20 e9 0b 13 	r11 = [sp+ 76] 
  112170:    40 ee a5 09 	r5 = r10 - r9 			  ## layer3.c:1126:13
  112174:    01 80       	r1 = 0 
  112176:    00 f4 00 10 	tst r0, 16			  ## layer3.c:1141:16
  11217a:    02 11       	ifs (nzcv != 0) goto 4 <mTSYIII_decode+0x804 : 112180 >			  ## layer3.c:1141:16
  11217c:    00 80       	r0 = 0 			  ## layer3.c:1141:16
  11217e:    06 08       	goto 12 <mTSYIII_decode+0x810 : 11218c >			  ## layer3.c:1141:16
  112180:    ed d3       	r5 = r5 + -1 			  ## layer3.c:1142:7
  112182:    80 f1 62 05 	r2 = r6 & setbit(r5) 			  ## layer3.c:1142:7
  112186:    b8 dc       	r0 = -r7 			  ## layer3.c:1142:39
  112188:    1a 20       	if (r2 != 0) goto 2 <mTSYIII_decode+0x810 : 11218c >			  ## layer3.c:1142:39
  11218a:    38 c6       	r0 = r7 			  ## layer3.c:1142:7
  11218c:    20 70       	h[r4 + 0] = r0 			  ## layer3.c:1141:14
  11218e:    00 e8 e0 00 	r0 = b[r14 + 0] 			  ## layer3.c:1146:28
  112192:    00 f4 00 20 	tst r0, 32			  ## layer3.c:1146:16
  112196:    06 10       	ifs (nzcv == 0) goto 12 <mTSYIII_decode+0x828 : 1121a4 >			  ## layer3.c:1146:16
  112198:    ed d3       	r5 = r5 + -1 			  ## layer3.c:1147:7
  11219a:    80 f1 60 05 	r0 = r6 & setbit(r5) 			  ## layer3.c:1147:7
  11219e:    b9 dc       	r1 = -r7 			  ## layer3.c:1147:39
  1121a0:    18 20       	if (r0 != 0) goto 2 <mTSYIII_decode+0x828 : 1121a4 >			  ## layer3.c:1147:39
  1121a2:    39 c6       	r1 = r7 			  ## layer3.c:1147:7
  1121a4:    50 e8 81 7f 	h[r8 + -4] = r1 			  ## layer3.c:1146:14
  1121a8:    1f ed 84 fe 	r4 = r8 + -2 			  ## layer3.c:1151:15
  1121ac:    23 ce       	cmp r4, r3			  ## layer3.c:1151:9
  1121ae:    19 11       	ifs (nzcv != 0) goto 50 <mTSYIII_decode+0x866 : 1121e2 >			  ## layer3.c:1151:9
  1121b0:    38 c6       	r0 = r7 
  1121b2:    81 43       	r1 = [sp+ 56] 			  ## layer3.c:1152:17
  1121b4:    08 e8 12 40 	r2 = b[r1 ++= 1] 			  ## layer3.c:1152:17
  1121b8:    81 63       	[sp+ 56] = r1 			  ## layer3.c:1152:14
  1121ba:    17 a1       	r7 = r2 << 1 			  ## layer3.c:1152:14
  1121bc:    c2 43       	r2 = [sp+ 60] 			  ## layer3.c:1152:14
  1121be:    20 e8 2a 00 	r10 = [r2 + 0] 			  ## layer3.c:1154:17
  1121c2:    81 44       	r1 = [sp+ 72] 			  ## layer3.c:1154:10
  1121c4:    4a ce       	cmp r1, r10			  ## layer3.c:1154:10
  1121c6:    09 10       	ifs (nzcv == 0) goto 18 <mTSYIII_decode+0x85E : 1121da >
  1121c8:    08 80       	r0 = 1 			  ## layer3.c:1156:21
  1121ca:    91 c6       	r1 = r10 			  ## layer3.c:1156:21
  1121cc:    59 c6       	r9 = r3 			  ## layer3.c:1156:21
  1121ce:    ff e1 7f 87 	call -3858 <III_requantize : 1112c0 >			  ## layer3.c:1156:21
  1121d2:    8b c6       	r3 = r9 
  1121d4:    c2 43       	r2 = [sp+ 60] 
  1121d6:    60 e9 0a 12 	[sp+ 72] = r10 
  1121da:    db d5       	r3 = r3 + r7 			  ## layer3.c:1152:14
  1121dc:    12 d1       	r2 = r2 + 4 			  ## layer3.c:1159:6
  1121de:    c2 63       	[sp+ 60] = r2 
  1121e0:    07 c6       	r7 = r0 
  1121e2:    00 e8 e0 00 	r0 = b[r14 + 0] 			  ## layer3.c:1164:28
  1121e6:    01 80       	r1 = 0 			  ## layer3.c:1164:28
  1121e8:    00 f4 00 40 	tst r0, 64			  ## layer3.c:1164:16
  1121ec:    02 11       	ifs (nzcv != 0) goto 4 <mTSYIII_decode+0x876 : 1121f2 >			  ## layer3.c:1164:16
  1121ee:    00 80       	r0 = 0 			  ## layer3.c:1164:16
  1121f0:    06 08       	goto 12 <mTSYIII_decode+0x882 : 1121fe >			  ## layer3.c:1164:16
  1121f2:    ed d3       	r5 = r5 + -1 			  ## layer3.c:1165:7
  1121f4:    80 f1 62 05 	r2 = r6 & setbit(r5) 			  ## layer3.c:1165:7
  1121f8:    b8 dc       	r0 = -r7 			  ## layer3.c:1165:39
  1121fa:    1a 20       	if (r2 != 0) goto 2 <mTSYIII_decode+0x882 : 1121fe >
  1121fc:    38 c6       	r0 = r7 			  ## layer3.c:1165:7
  1121fe:    20 70       	h[r4 + 0] = r0 			  ## layer3.c:1164:14
  112200:    80 e8 e0 00 	r0 = b[r14 + 0] (s) 			  ## layer3.c:1169:28
  112204:    f8 9f       	cmp r0, -1			  ## layer3.c:1169:16
  112206:    03 65       	[sp+ 80] = r3 			  ## layer3.c:1169:16
  112208:    06 1c       	ifs (nzcv > 0) goto 12 <mTSYIII_decode+0x89A : 112216 >			  ## layer3.c:1169:16
  11220a:    ed d3       	r5 = r5 + -1 			  ## layer3.c:1170:7
  11220c:    80 f1 60 05 	r0 = r6 & setbit(r5) 			  ## layer3.c:1170:7
  112210:    b9 dc       	r1 = -r7 			  ## layer3.c:1170:39
  112212:    18 20       	if (r0 != 0) goto 2 <mTSYIII_decode+0x89A : 112216 >			  ## layer3.c:1170:39
  112214:    39 c6       	r1 = r7 			  ## layer3.c:1170:7
  112216:    1f ed d0 ff 	r0 = r13 + -1 			  ## layer3.c:1106:19
  11221a:    58 e8 81 02 	h[r8 ++= 8] = r1 			  ## layer3.c:1169:14
  11221e:    00 ed cc 04 	r12 = r12 + 4 			  ## layer3.c:1172:11
  112222:    82 ef c0 40 	cmp r12, 576			  ## layer3.c:1173:27
  112226:    ff fb 7b f4 	ifs (nzcv < 0) goto -370 <mTSYIII_decode+0x73C : 1120b8 >			  ## layer3.c:1173:27
  11222a:    80 ef d0 01 	cmp r13, 1
  11222e:    ff fb 30 f4 	ifs (nzcv == 0) goto -378 <mTSYIII_decode+0x73C : 1120b8 >
  112232:    10 80       	r0 = 2 
  112234:    20 e9 0d 0d 	r13 = [sp+ 52] 
  112238:    40 e8 d0 00 	b[r13 + 0] = r0 
  11223c:    87 45       	r7 = [sp+ 88] 
  11223e:    20 e9 0b 06 	r11 = [sp+ 24] 
  112242:    43 41       	r3 = [sp+ 20] 
  112244:    00 e8 b0 00 	r0 = b[r11 + 0] 			  ## layer3.c:2680:16
  112248:    10 98       	cmp r0, 2			  ## layer3.c:2680:7
  11224a:    11 11       	ifs (nzcv != 0) goto 34 <mTSYIII_decode+0x8F2 : 11226e >			  ## layer3.c:2680:7
  11224c:    04 41       	r4 = [sp+ 16] 
  11224e:    22 58       	r2 = b[r4 + 0] 			  ## layer3.c:2681:4
  112250:    e1 92       	r1 = sp + 92 			  ## layer3.c:2681:4
  112252:    38 c6       	r0 = r7 			  ## layer3.c:2681:4
  112254:    ff e1 6f 87 	call -3860 <III_reorder : 111344 >			  ## layer3.c:2681:4
  112258:    20 58       	r0 = b[r4 + 0] 			  ## layer3.c:2682:17
  11225a:    00 f4 00 08 	tst r0, 8			  ## layer3.c:2682:8
  11225e:    20 e9 0c 01 	r12 = [sp+ 4] 			  ## layer3.c:2682:8
  112262:    0d 10       	ifs (nzcv == 0) goto 26 <mTSYIII_decode+0x902 : 11227e >			  ## layer3.c:2682:8
  112264:    38 c6       	r0 = r7 			  ## layer3.c:2683:5
  112266:    21 81       	r1 = 36 			  ## layer3.c:2683:5
  112268:    ff e1 0f 92 	call -3520 <III_aliasreduce : 1114ac >			  ## layer3.c:2683:5
  11226c:    08 08       	goto 16 <mTSYIII_decode+0x902 : 11227e >			  ## layer3.c:2683:5
  11226e:    38 c6       	r0 = r7 			  ## layer3.c:2687:4
  112270:    11 ea 40 02 	r1 = 576 			  ## layer3.c:2687:4
  112274:    ff e1 af 91 	call -3532 <III_aliasreduce : 1114ac >			  ## layer3.c:2687:4
  112278:    04 41       	r4 = [sp+ 16] 			  ## layer3.c:2687:4
  11227a:    20 e9 0c 01 	r12 = [sp+ 4] 			  ## layer3.c:2687:4
  11227e:    00 e8 b0 00 	r0 = b[r11 + 0] 			  ## layer3.c:2694:16
  112282:    21 58       	r1 = b[r4 + 0] 			  ## layer3.c:2694:16
  112284:    c0 f3 11 f7 	r1 = r1 & (~247) 			  ## layer3.c:2694:51
  112288:    10 98       	cmp r0, 2			  ## layer3.c:2694:32
  11228a:    16 11       	ifs (nzcv != 0) goto 44 <mTSYIII_decode+0x93C : 1122b8 >			  ## layer3.c:2694:32
  11228c:    59 21       	if (r1 != 0) goto 42 <mTSYIII_decode+0x93C : 1122b8 >
  11228e:    05 ed 74 00 	r4 = r7 + 1280 
  112292:    00 ed c5 90 	r5 = r12 + 144 
  112296:    06 80       	r6 = 0 
  112298:    38 c6       	r0 = r7 			  ## layer3.c:2711:5
  11229a:    a1 c6       	r1 = r12 			  ## layer3.c:2711:5
  11229c:    2a c6       	r2 = r5 			  ## layer3.c:2711:5
  11229e:    ff e1 cf ab 	call -2696 <III_imdct_s : 11181a >			  ## layer3.c:2711:5
  1122a2:    a0 c6       	r0 = r12 			  ## layer3.c:2712:5
  1122a4:    21 c6       	r1 = r4 			  ## layer3.c:2712:5
  1122a6:    82 45       	r2 = [sp+ 88] 			  ## layer3.c:2712:5
  1122a8:    33 c6       	r3 = r6 			  ## layer3.c:2712:5
  1122aa:    ff e1 ff a9 	call -2754 <III_overlap : 1117ec >			  ## layer3.c:2712:5
  1122ae:    27 89       	r7 += 36 			  ## layer3.c:2710:20
  1122b0:    76 d0       	r6 = r6 + 1 			  ## layer3.c:2710:25
  1122b2:    16 98       	cmp r6, 2			  ## layer3.c:2710:4
  1122b4:    f1 11       	ifs (nzcv != 0) goto -30 <mTSYIII_decode+0x91C : 112298 >			  ## layer3.c:2710:4
  1122b6:    18 08       	goto 48 <mTSYIII_decode+0x96C : 1122e8 >			  ## layer3.c:2710:4
  1122b8:    04 80       	r4 = 0 
  1122ba:    50 ea 00 00 	r8 = 0 			  ## layer3.c:2699:8
  1122be:    19 20       	if (r1 != 0) goto 2 <mTSYIII_decode+0x946 : 1122c2 >			  ## layer3.c:2699:8
  1122c0:    40 c6       	r8 = r0 			  ## layer3.c:2699:8
  1122c2:    05 ed 76 00 	r6 = r7 + 1280 
  1122c6:    3d c6       	r5 = r7 
  1122c8:    e7 92       	r7 = sp + 92 
  1122ca:    28 c6       	r0 = r5 			  ## layer3.c:2703:5
  1122cc:    39 c6       	r1 = r7 			  ## layer3.c:2703:5
  1122ce:    82 c6       	r2 = r8 			  ## layer3.c:2703:5
  1122d0:    ff e1 4f 9a 	call -3256 <III_imdct_l : 11161c >			  ## layer3.c:2703:5
  1122d4:    38 c6       	r0 = r7 			  ## layer3.c:2704:5
  1122d6:    31 c6       	r1 = r6 			  ## layer3.c:2704:5
  1122d8:    82 45       	r2 = [sp+ 88] 			  ## layer3.c:2704:5
  1122da:    23 c6       	r3 = r4 			  ## layer3.c:2704:5
  1122dc:    ff e1 6f a8 	call -2804 <III_overlap : 1117ec >			  ## layer3.c:2704:5
  1122e0:    25 89       	r5 += 36 			  ## layer3.c:2702:20
  1122e2:    64 d0       	r4 = r4 + 1 			  ## layer3.c:2702:25
  1122e4:    14 98       	cmp r4, 2			  ## layer3.c:2702:4
  1122e6:    f1 11       	ifs (nzcv != 0) goto -30 <mTSYIII_decode+0x94E : 1122ca >			  ## layer3.c:2702:4
  1122e8:    80 45       	r0 = [sp+ 88] 
  1122ea:    04 ed 00 7e 	r0 = r0 + 1150 			  ## layer3.c:2658:23
  1122ee:    02 80       	r2 = 0 			  ## layer3.c:2658:23
  1122f0:    11 c6       	r1 = r2 
  1122f2:    02 ed 12 40 	r2 = r1 + 576 			  ## layer3.c:2658:23
  1122f6:    2a 99       	cmp r2, 37			  ## layer3.c:2720:17
  1122f8:    04 13       	if (nzcv < 0) goto 8 <mTSYIII_decode+0x986 : 112302 >			  ## layer3.c:2720:17
  1122fa:    18 e8 03 ff 	r3 = h[r0 ++= -2] 			  ## layer3.c:2720:20
  1122fe:    ca d3       	r2 = r1 + -1 			  ## layer3.c:2720:3
  112300:    73 27       	if (r3 == 0) goto -18 <mTSYIII_decode+0x974 : 1122f0 >			  ## layer3.c:2720:3
  112302:    30 ee 18 00 	r8 = -r1 			  ## layer3.c:2728:28
  112306:    90 80       	r0 = 18 			  ## layer3.c:2728:28
  112308:    40 fc 89 00 	r9 = r8 / r0 			  ## layer3.c:2728:28
  11230c:    20 ee 9a 20 	r10 = 32 - r9 			  ## layer3.c:2728:16
  112310:    00 e8 b2 00 	r2 = b[r11 + 0] 			  ## layer3.c:2730:16
  112314:    12 98       	cmp r2, 2			  ## layer3.c:2730:7
  112316:    1b 11       	ifs (nzcv != 0) goto 54 <mTSYIII_decode+0x9D2 : 11234e >			  ## layer3.c:2730:7
  112318:    80 ef a0 03 	cmp r10, 3			  ## layer3.c:2745:4
  11231c:    42 13       	if (nzcv < 0) goto 132 <mTSYIII_decode+0xA26 : 1123a2 >			  ## layer3.c:2745:4
  11231e:    80 45       	r0 = [sp+ 88] 
  112320:    00 ed 04 48 	r4 = r0 + 72 			  ## layer3.c:2745:4
  112324:    05 ed 05 00 	r5 = r0 + 1280 			  ## layer3.c:2745:4
  112328:    00 ed c6 90 	r6 = r12 + 144 			  ## layer3.c:2745:4
  11232c:    17 80       	r7 = 2 			  ## layer3.c:2745:4
  11232e:    20 c6       	r0 = r4 			  ## layer3.c:2746:5
  112330:    a1 c6       	r1 = r12 			  ## layer3.c:2746:5
  112332:    32 c6       	r2 = r6 			  ## layer3.c:2746:5
  112334:    ff e1 1f a7 	call -2846 <III_imdct_s : 11181a >			  ## layer3.c:2746:5
  112338:    a0 c6       	r0 = r12 			  ## layer3.c:2747:5
  11233a:    29 c6       	r1 = r5 			  ## layer3.c:2747:5
  11233c:    82 45       	r2 = [sp+ 88] 			  ## layer3.c:2747:5
  11233e:    3b c6       	r3 = r7 			  ## layer3.c:2747:5
  112340:    ff e1 4f a5 	call -2904 <III_overlap : 1117ec >			  ## layer3.c:2747:5
  112344:    24 89       	r4 += 36 			  ## layer3.c:2745:20
  112346:    7f d0       	r7 = r7 + 1 			  ## layer3.c:2745:31
  112348:    7a ce       	cmp r7, r10			  ## layer3.c:2745:4
  11234a:    f1 13       	if (nzcv < 0) goto -30 <mTSYIII_decode+0x9B2 : 11232e >			  ## layer3.c:2745:4
  11234c:    2a 08       	goto 84 <mTSYIII_decode+0xA26 : 1123a2 >			  ## layer3.c:2745:4
  11234e:    80 ef a0 03 	cmp r10, 3			  ## layer3.c:2733:4
  112352:    27 13       	if (nzcv < 0) goto 78 <mTSYIII_decode+0xA26 : 1123a2 >			  ## layer3.c:2733:4
  112354:    86 45       	r6 = [sp+ 88] 
  112356:    00 ed 60 48 	r0 = r6 + 72 			  ## layer3.c:2736:18
  11235a:    e5 92       	r5 = sp + 92 			  ## layer3.c:2736:18
  11235c:    29 c6       	r1 = r5 			  ## layer3.c:2736:5
  11235e:    ff e1 df 95 	call -3398 <III_imdct_l : 11161c >			  ## layer3.c:2736:5
  112362:    05 ed 64 00 	r4 = r6 + 1280 			  ## layer3.c:2736:5
  112366:    28 c6       	r0 = r5 			  ## layer3.c:2738:5
  112368:    21 c6       	r1 = r4 			  ## layer3.c:2738:5
  11236a:    32 c6       	r2 = r6 			  ## layer3.c:2738:5
  11236c:    13 80       	r3 = 2 			  ## layer3.c:2738:5
  11236e:    ff e1 df a3 	call -2950 <III_overlap : 1117ec >			  ## layer3.c:2738:5
  112372:    80 ef a0 03 	cmp r10, 3			  ## layer3.c:2733:4
  112376:    15 10       	ifs (nzcv == 0) goto 42 <mTSYIII_decode+0xA26 : 1123a2 >			  ## layer3.c:2733:4
  112378:    80 45       	r0 = [sp+ 88] 			  ## layer3.c:2733:39
  11237a:    00 ed 05 6c 	r5 = r0 + 108 			  ## layer3.c:2733:39
  11237e:    1e 80       	r6 = 3 			  ## layer3.c:2733:39
  112380:    e7 92       	r7 = sp + 92 			  ## layer3.c:2733:39
  112382:    00 e8 b2 00 	r2 = b[r11 + 0] 			  ## layer3.c:2736:33
  112386:    28 c6       	r0 = r5 			  ## layer3.c:2736:5
  112388:    39 c6       	r1 = r7 			  ## layer3.c:2736:5
  11238a:    ff e1 7f 94 	call -3442 <III_imdct_l : 11161c >			  ## layer3.c:2736:5
  11238e:    38 c6       	r0 = r7 			  ## layer3.c:2738:5
  112390:    21 c6       	r1 = r4 			  ## layer3.c:2738:5
  112392:    82 45       	r2 = [sp+ 88] 			  ## layer3.c:2738:5
  112394:    33 c6       	r3 = r6 			  ## layer3.c:2738:5
  112396:    ff e1 9f a2 	call -2990 <III_overlap : 1117ec >			  ## layer3.c:2738:5
  11239a:    25 89       	r5 += 36 			  ## layer3.c:2733:20
  11239c:    76 d0       	r6 = r6 + 1 			  ## layer3.c:2733:31
  11239e:    72 ce       	cmp r6, r10			  ## layer3.c:2733:4
  1123a0:    f0 13       	if (nzcv < 0) goto -32 <mTSYIII_decode+0xA06 : 112382 >			  ## layer3.c:2733:4
  1123a2:    00 fc 90 12 	r0 = r9 * 18 			  ## layer3.c:2518:18
  1123a6:    85 45       	r5 = [sp+ 88] 
  1123a8:    13 10       	ifs (nzcv == 0) goto 38 <mTSYIII_decode+0xA54 : 1123d0 >
  1123aa:    90 80       	r0 = 18 			  ## layer3.c:2547:2
  1123ac:    40 fc 81 00 	r1 = r8 / r0 			  ## layer3.c:2547:2
  1123b0:    00 fc 10 12 	r0 = r1 * 18 			  ## layer3.c:2547:2
  1123b4:    e2 86       	r2 = -36 			  ## layer3.c:2547:2
  1123b6:    11 06       	r1 *= r2 			  ## layer3.c:2547:2
  1123b8:    49 d5       	r1 = r1 + r5 			  ## layer3.c:2547:2
  1123ba:    09 ed 11 80 	r1 = r1 + 2432 			  ## layer3.c:2547:2
  1123be:    02 80       	r2 = 0 			  ## layer3.c:2547:2
  1123c0:    0b 50       	r3 = h[r1 + 0] 			  ## layer3.c:2548:25
  1123c2:    1b ed 14 04 	r4 = r1 + -1276 			  ## layer3.c:2548:25
  1123c6:    e3 73       	h[r4 + -4] = r3 			  ## layer3.c:2548:23
  1123c8:    0a 70       	h[r1 + 0] = r2 			  ## layer3.c:2549:24
  1123ca:    89 d0       	r1 = r1 + 2 			  ## layer3.c:2547:16
  1123cc:    c0 d3       	r0 = r0 + -1 			  ## layer3.c:2547:16
  1123ce:    f8 11       	ifs (nzcv != 0) goto -16 <mTSYIII_decode+0xA44 : 1123c0 >			  ## layer3.c:2547:16
  1123d0:    00 ed 50 26 	r0 = r5 + 38 			  ## layer3.c:2563:15
  1123d4:    01 80       	r1 = 0 			  ## layer3.c:2563:15
  1123d6:    c5 41       	r5 = [sp+ 28] 			  ## layer3.c:2563:15
  1123d8:    c6 40       	r6 = [sp+ 12] 			  ## layer3.c:2563:15
  1123da:    87 40       	r7 = [sp+ 8] 			  ## layer3.c:2563:15
  1123dc:    4a 80       	r2 = 9 
  1123de:    03 c6       	r3 = r0 
  1123e0:    1c 50       	r4 = h[r3 + 0] 			  ## layer3.c:2589:19
  1123e2:    a4 dc       	r4 = -r4 			  ## layer3.c:2589:18
  1123e4:    58 e8 34 01 	h[r3 ++= 4] = r4 			  ## layer3.c:2589:16
  1123e8:    d2 d3       	r2 = r2 + -1 			  ## layer3.c:2587:17
  1123ea:    fa 11       	ifs (nzcv != 0) goto -12 <mTSYIII_decode+0xA64 : 1123e0 >			  ## layer3.c:2587:3
  1123ec:    40 8a       	r0 += 72 			  ## layer3.c:2565:2
  1123ee:    49 d0       	r1 = r1 + 1 			  ## layer3.c:2565:21
  1123f0:    81 98       	cmp r1, 16			  ## layer3.c:2565:2
  1123f2:    f4 11       	ifs (nzcv != 0) goto -24 <mTSYIII_decode+0xA60 : 1123dc >			  ## layer3.c:2565:2
  1123f4:    10 e8 d0 87 	r0 = h[r13 + 30] 			  ## layer3.c:2763:21
  1123f8:    02 ed 00 40 	r0 = r0 + 576 			  ## layer3.c:2763:21
  1123fc:    50 e8 d0 87 	h[r13 + 30] = r0 			  ## layer3.c:2763:21
  112400:    29 50       	r1 = h[r5 + 0] 			  ## layer3.c:2764:30
  112402:    42 c9       	r2 = r0.l 			  ## layer3.c:2763:21
  112404:    11 ce       	cmp r2, r1			  ## layer3.c:2764:6
  112406:    08 13       	if (nzcv < 0) goto 16 <mTSYIII_decode+0xA9C : 112418 >			  ## layer3.c:2764:6
  112408:    40 d6       	r0 = r0 - r1 			  ## layer3.c:2766:22
  11240a:    50 e8 d0 87 	h[r13 + 30] = r0 			  ## layer3.c:2766:22
  11240e:    10 e8 d0 07 	r0 = h[r13 + 28] 			  ## layer3.c:2767:22
  112412:    40 d0       	r0 = r0 + 1 			  ## layer3.c:2767:22
  112414:    50 e8 d0 07 	h[r13 + 28] = r0 			  ## layer3.c:2767:22
  112418:    08 80       	r0 = 1 
  11241a:    17 20       	if (r7 == 0) goto 2 <mTSYIII_decode+0xAA2 : 11241e >
  11241c:    00 80       	r0 = 0 			  ## layer3.c:2627:5
  11241e:    70 da       	r0 ^= r6 			  ## layer3.c:2770:6
  112420:    80 f3 00 01 	r0 = r0 & 1 			  ## layer3.c:2770:6
  112424:    28 7c       	b[r5 + 2] = r0 			  ## layer3.c:2770:6
  112426:    02 ed ff a0 	sp = sp + 672 
  11242a:    1e c0       	{pc, r14-r4} = [sp++] 
  11242c:    82 ef c0 40 	cmp r12, 576			  ## layer3.c:1192:3
  112430:    87 45       	r7 = [sp+ 88] 			  ## layer3.c:1192:3
  112432:    20 e9 0b 06 	r11 = [sp+ 24] 			  ## layer3.c:1192:3
  112436:    43 41       	r3 = [sp+ 20] 			  ## layer3.c:1192:3
  112438:    20 e9 0d 0d 	r13 = [sp+ 52] 			  ## layer3.c:1192:3
  11243c:    ff fb 2a f0 	ifs (nzcv >= 0) goto -508 <mTSYIII_decode+0x8C8 : 112244 >			  ## layer3.c:1192:3
  112440:    1f ed 80 fc 	r0 = r8 + -4 			  ## layer3.c:1192:3
  112444:    01 80       	r1 = 0 			  ## layer3.c:1192:3
  112446:    c1 77       	h[r0 + -2] = r1 			  ## layer3.c:1193:13
  112448:    01 70       	h[r0 + 0] = r1 			  ## layer3.c:1194:13
  11244a:    00 d1       	r0 = r0 + 4 			  ## layer3.c:1192:16
  11244c:    00 ed cc 02 	r12 = r12 + 2 			  ## layer3.c:1196:10
  112450:    82 ef c0 40 	cmp r12, 576			  ## layer3.c:1192:3
  112454:    f8 1b       	ifs (nzcv < 0) goto -16 <mTSYIII_decode+0xACA : 112446 >			  ## layer3.c:1192:3
  112456:    f6 0e       	goto -532 <mTSYIII_decode+0x8C8 : 112244 >			  ## layer3.c:1192:3


.GCPI393_0:
  112458:    58 72 11 00     < 1143384 : 0x117258 >

.GCPI393_1:
  11245c:    c4 72 11 00     < 1143492 : 0x1172C4 >

.GCPI393_2:
  112460:    a8 d9 11 00     < 1169832 : 0x11D9A8 >

.GCPI393_3:
  112464:    0c 73 11 00     < 1143564 : 0x11730C >

.GCPI393_4:
  112468:    44 7b 11 00     < 1145668 : 0x117B44 >

.GCPI393_5:
  11246c:    e4 7a 11 00     < 1145572 : 0x117AE4 >

mp3_decoder_run:
  112470:    1e c2       	[--sp] = {rets, r14-r4} 			  ## testmp3.c:137:0
  112472:    30 c5       	[--sp] = {macch, maccl} 			  ## testmp3.c:137:0
  112474:    c8 cd       	sp += -56 			  ## testmp3.c:137:0
  112476:    04 c6       	r4 = r0 			  ## testmp3.c:137:0
  112478:    0a ed 47 38 	r7 = r4 + 2616 			  ## testmp3.c:137:0
  11247c:    78 50       	r0 = h[r7 + 4] 			  ## testmp3.c:141:24
  11247e:    00 ed 48 90 	r8 = r4 + 144 			  ## testmp3.c:141:24
  112482:    0e ed 4b 44 	r11 = r4 + 3652 			  ## testmp3.c:141:24
  112486:    0e ed 46 e0 	r6 = r4 + 3808 			  ## testmp3.c:141:24
  11248a:    60 98       	cmp r0, 12			  ## testmp3.c:141:6
  11248c:    37 10       	ifs (nzcv == 0) goto 110 <mp3_decoder_run+0x8C : 1124fc >			  ## testmp3.c:141:6
  11248e:    90 98       	cmp r0, 18
  112490:    00 fb 81 25 	ifs (nzcv != 0) goto 1200 <mp3_decoder_run+0x4D4 : 112944 >
  112494:    90 e8 75 7f 	r5 = h[r7 + -4] (s) 			  ## layer3.c:2837:6
  112498:    0d 98       	cmp r5, 1			  ## layer3.c:2837:6
  11249a:    0d 1b       	ifs (nzcv < 0) goto 26 <mp3_decoder_run+0x46 : 1124b6 >			  ## layer3.c:2837:6
  11249c:    20 ee 50 40 	r0 = 64 - r5 			  ## layer3.c:2840:118
  1124a0:    00 d5       	r0 = r0 + r4 			  ## layer3.c:2839:47
  1124a2:    05 ed 01 30 	r1 = r0 + 1328 			  ## layer3.c:2840:105
  1124a6:    20 48       	r0 = [r4 + 0] 			  ## layer3.c:2840:98
  1124a8:    a3 48       	r3 = [r4 + 8] 			  ## layer3.c:2840:72
  1124aa:    2a c6       	r2 = r5 			  ## layer3.c:2840:53
  1124ac:    ab 01       	call r3			  ## layer3.c:2840:53
  1124ae:    28 d6       	r0 = r5 - r0 			  ## layer3.c:2840:51
  1124b0:    f8 73       	h[r7 + -4] = r0 			  ## layer3.c:2840:26
  1124b2:    41 c9       	r1 = r0.l 			  ## layer3.c:2840:28
  1124b4:    34 11       	ifs (nzcv != 0) goto 104 <mp3_decoder_run+0xAE : 11251e >			  ## layer3.c:2840:28
  1124b6:    0a ed 45 34 	r5 = r4 + 2612 			  ## layer3.c:2833:18
  1124ba:    00 ed 4c b0 	r12 = r4 + 176 			  ## layer3.c:2832:18
  1124be:    f8 57       	r0 = h[r7 + -2] 			  ## layer3.c:2853:13
  1124c0:    a0 20       	if (r0 == 0) goto 20 <mp3_decoder_run+0x66 : 1124d6 >			  ## layer3.c:2853:13
  1124c2:    28 c6       	r0 = r5 			  ## layer3.c:2855:7
  1124c4:    a1 c6       	r1 = r12 			  ## layer3.c:2855:7
  1124c6:    22 c6       	r2 = r4 			  ## layer3.c:2855:7
  1124c8:    ff e1 bf 4e 	call -5674 <mTSYmad_synth_frame : 110ea2 >			  ## layer3.c:2855:7
  1124cc:    01 c6       	r1 = r0 			  ## layer3.c:2855:7
  1124ce:    00 80       	r0 = 0 			  ## layer3.c:2855:7
  1124d0:    01 98       	cmp r1, 0			  ## layer3.c:2855:7
  1124d2:    00 fb 81 23 	ifs (nzcv != 0) goto 1136 <mp3_decoder_run+0x4D6 : 112946 >			  ## layer3.c:2855:7
  1124d6:    0e ed 47 40 	r7 = r4 + 3648 			  ## layer3.c:2834:15
  1124da:    00 e8 b0 bf 	r0 = b[r11 + -2] 			  ## layer3.c:2862:9
  1124de:    00 98       	cmp r0, 0			  ## layer3.c:2862:9
  1124e0:    00 fb 00 12 	ifs (nzcv == 0) goto 576 <mp3_decoder_run+0x2B4 : 112724 >			  ## layer3.c:2862:9
  1124e4:    a0 c6       	r0 = r12 			  ## layer3.c:2916:2
  1124e6:    39 c6       	r1 = r7 			  ## layer3.c:2916:2
  1124e8:    22 c6       	r2 = r4 			  ## layer3.c:2916:2
  1124ea:    ff e1 7f a4 	call -2930 <mTSYIII_decode : 11197c >			  ## layer3.c:2916:2
  1124ee:    28 c6       	r0 = r5 			  ## layer3.c:2918:2
  1124f0:    a1 c6       	r1 = r12 			  ## layer3.c:2918:2
  1124f2:    22 c6       	r2 = r4 			  ## layer3.c:2918:2
  1124f4:    ff e1 5f 4d 	call -5718 <mTSYmad_synth_frame : 110ea2 >			  ## layer3.c:2918:2
  1124f8:    00 80       	r0 = 0 			  ## layer3.c:2918:2
  1124fa:    25 0a       	goto 1098 <mp3_decoder_run+0x4D6 : 112946 >			  ## layer3.c:2918:2
  1124fc:    90 e8 75 7f 	r5 = h[r7 + -4] (s) 			  ## layer2.c:251:6
  112500:    0d 98       	cmp r5, 1			  ## layer2.c:251:6
  112502:    18 1b       	ifs (nzcv < 0) goto 48 <mp3_decoder_run+0xC4 : 112534 >			  ## layer2.c:251:6
  112504:    20 ee 50 40 	r0 = 64 - r5 			  ## layer2.c:254:118
  112508:    00 d5       	r0 = r0 + r4 			  ## layer2.c:253:47
  11250a:    05 ed 01 30 	r1 = r0 + 1328 			  ## layer2.c:254:105
  11250e:    20 48       	r0 = [r4 + 0] 			  ## layer2.c:254:98
  112510:    a3 48       	r3 = [r4 + 8] 			  ## layer2.c:254:72
  112512:    2a c6       	r2 = r5 			  ## layer2.c:254:53
  112514:    ab 01       	call r3			  ## layer2.c:254:53
  112516:    28 d6       	r0 = r5 - r0 			  ## layer2.c:254:51
  112518:    f8 73       	h[r7 + -4] = r0 			  ## layer2.c:254:26
  11251a:    41 c9       	r1 = r0.l 			  ## layer2.c:254:28
  11251c:    0b 10       	ifs (nzcv == 0) goto 22 <mp3_decoder_run+0xC4 : 112534 >			  ## layer2.c:254:28
  11251e:    c1 c9       	r1 = r0.l (s) 
  112520:    00 80       	r0 = 0 
  112522:    09 9a       	cmp r1, 65
  112524:    00 fb fb 20 	ifs (nzcv < 0) goto 1054 <mp3_decoder_run+0x4D6 : 112946 >
  112528:    00 80       	r0 = 0 
  11252a:    f8 73       	h[r7 + -4] = r0 
  11252c:    09 80       	r1 = 1 
  11252e:    40 e8 81 00 	b[r8 + 0] = r1 
  112532:    09 0a       	goto 1042 <mp3_decoder_run+0x4D6 : 112946 >
  112534:    0a ed 45 34 	r5 = r4 + 2612 			  ## layer2.c:247:20
  112538:    00 ed 49 b0 	r9 = r4 + 176 			  ## layer2.c:246:20
  11253c:    f8 57       	r0 = h[r7 + -2] 			  ## layer2.c:267:13
  11253e:    a0 20       	if (r0 == 0) goto 20 <mp3_decoder_run+0xE4 : 112554 >			  ## layer2.c:267:13
  112540:    28 c6       	r0 = r5 			  ## layer2.c:269:7
  112542:    89 c6       	r1 = r9 			  ## layer2.c:269:7
  112544:    22 c6       	r2 = r4 			  ## layer2.c:269:7
  112546:    ff e1 cf 4a 	call -5800 <mTSYmad_synth_frame : 110ea2 >			  ## layer2.c:269:7
  11254a:    01 c6       	r1 = r0 			  ## layer2.c:269:7
  11254c:    00 80       	r0 = 0 			  ## layer2.c:269:7
  11254e:    01 98       	cmp r1, 0			  ## layer2.c:269:7
  112550:    00 fb 91 1f 	ifs (nzcv != 0) goto 1010 <mp3_decoder_run+0x4D6 : 112946 >			  ## layer2.c:269:7
  112554:    30 58       	r0 = b[r6 + 0] 			  ## layer2.c:275:15
  112556:    00 98       	cmp r0, 0			  ## layer2.c:275:6
  112558:    00 fb 30 10 	ifs (nzcv == 0) goto 518 <mp3_decoder_run+0x2F2 : 112762 >			  ## layer2.c:275:6
  11255c:    00 80       	r0 = 0 
  11255e:    30 78       	b[r6 + 0] = r0 			  ## layer2.c:277:20
  112560:    40 e8 80 00 	b[r8 + 0] = r0 			  ## layer2.c:278:21
  112564:    0e ed 41 c6 	r1 = r4 + 3782 			  ## layer3.c:2789:31
  112568:    09 50       	r1 = h[r1 + 0] 			  ## layer3.c:2789:31
  11256a:    50 e8 81 87 	h[r8 + 30] = r1 			  ## layer3.c:2789:21
  11256e:    0e ed 41 c4 	r1 = r4 + 3780 			  ## layer3.c:2790:31
  112572:    09 50       	r1 = h[r1 + 0] 			  ## layer3.c:2790:31
  112574:    50 e8 81 07 	h[r8 + 28] = r1 			  ## layer3.c:2790:21
  112578:    f1 4d       	r1 = [r6 + -36] 			  ## layer3.c:2792:27
  11257a:    e1 68       	[r4 + 12] = r1 			  ## layer3.c:2792:17
  11257c:    0e ed 41 c9 	r1 = r4 + 3785 			  ## layer3.c:2794:31
  112580:    09 58       	r1 = b[r1 + 0] 			  ## layer3.c:2794:31
  112582:    40 e8 81 40 	b[r8 + 1] = r1 			  ## layer3.c:2794:21
  112586:    31 4e       	r1 = [r6 + -32] 			  ## layer3.c:2795:29
  112588:    60 e8 81 02 	[r8 + 8] = r1 			  ## layer3.c:2795:19
  11258c:    50 e8 80 03 	h[r8 + 12] = r0 			  ## layer3.c:2797:21
  112590:    50 e8 80 01 	h[r8 + 4] = r0 			  ## layer3.c:2798:17
  112594:    20 e8 b3 02 	r3 = [r11 + 8] 			  ## layer2.c:104:21
  112598:    03 98       	cmp r3, 0			  ## layer2.c:104:21
  11259a:    00 fb 30 1d 	ifs (nzcv == 0) goto 934 <mp3_decoder_run+0x4D4 : 112944 >			  ## layer2.c:104:21
  11259e:    20 e8 b1 ff 	r1 = [r11 + -4] 			  ## layer2.c:104:50
  1125a2:    01 98       	cmp r1, 0			  ## layer2.c:104:50
  1125a4:    00 fb e0 1c 	ifs (nzcv == 0) goto 924 <mp3_decoder_run+0x4D4 : 112944 >			  ## layer2.c:104:50
  1125a8:    20 e8 b2 00 	r2 = [r11 + 0] 			  ## layer2.c:104:77
  1125ac:    18 82       	r0 = 67 			  ## layer2.c:104:77
  1125ae:    02 98       	cmp r2, 0			  ## layer2.c:104:77
  1125b0:    00 fb 90 1c 	ifs (nzcv == 0) goto 914 <mp3_decoder_run+0x4D6 : 112946 >			  ## layer2.c:104:77
  1125b4:    0b 98       	cmp r3, 1			  ## layer2.c:109:2
  1125b6:    60 e9 08 02 	[sp+ 8] = r8 			  ## layer2.c:109:2
  1125ba:    60 e9 09 01 	[sp+ 4] = r9 			  ## layer2.c:109:2
  1125be:    05 60       	[sp] = r5 			  ## layer2.c:109:2
  1125c0:    00 fb 4b 1c 	ifs (nzcv < 0) goto 904 <mp3_decoder_run+0x4DC : 11294c >			  ## layer2.c:109:2
  1125c4:    8d c6       	r5 = r9 			  ## layer2.c:114:60
  1125c6:    06 80       	r6 = 0 			  ## layer2.c:114:60
  1125c8:    51 ea 00 00 	r9 = 0 			  ## layer2.c:114:60
  1125cc:    60 e9 0b 03 	[sp+ 12] = r11 			  ## layer2.c:114:60
  1125d0:    04 08       	goto 8 <mp3_decoder_run+0x16A : 1125da >			  ## layer2.c:114:60
  1125d2:    01 e5 b2 ff 	r2, r1 = d[r11 + -4] 
  1125d6:    05 41       	r5 = [sp+ 16] 
  1125d8:    c5 88       	r5 += 24 			  ## layer2.c:109:2
  1125da:    00 e7 10 06 	r0 = b[r1 + r6] 			  ## layer2.c:114:20
  1125de:    00 e7 27 00 	r7 = b[r2 + r0] 			  ## layer2.c:114:20
  1125e2:    20 c6       	r0 = r4 			  ## layer2.c:115:14
  1125e4:    39 c6       	r1 = r7 			  ## layer2.c:115:14
  1125e6:    f9 e1 df ae 	call -51750 <mad_bit_read : 105bc4 >			  ## layer2.c:115:14
  1125ea:    40 c6       	r8 = r0 			  ## layer2.c:115:14
  1125ec:    79 cb       	r9 += r7 			  ## layer2.c:116:10
  1125ee:    80 ef 80 00 	cmp r8, 0			  ## layer2.c:117:7
  1125f2:    05 61       	[sp+ 16] = r5 			  ## layer2.c:117:7
  1125f4:    46 61       	[sp+ 20] = r6 			  ## layer2.c:117:7
  1125f6:    00 fb 40 08 	ifs (nzcv == 0) goto 264 <mp3_decoder_run+0x292 : 112702 >			  ## layer2.c:117:7
  1125fa:    20 c6       	r0 = r4 			  ## layer2.c:121:10
  1125fc:    31 80       	r1 = 6 			  ## layer2.c:121:10
  1125fe:    f9 e1 1f ae 	call -51774 <mad_bit_read : 105bc4 >			  ## layer2.c:121:10
  112602:    02 e5 b1 ff 	r1, r2 = d[r11 + -4] 			  ## layer2.c:123:24
  112606:    00 e7 22 06 	r2 = b[r2 + r6] 			  ## layer2.c:123:36
  11260a:    82 cb       	r2 += r8 			  ## layer2.c:123:61
  11260c:    00 e7 11 02 	r1 = b[r1 + r2] 			  ## layer2.c:123:10
  112610:    20 e4 02 ed 	r2 = [addr(948)]  <.GCPI394_0 : 1129c8 >
  112614:    80 e7 27 01 	r7 = b[r2 + r1] (s) 
  112618:    20 ee 72 01 	r2 = 1 - r7 
  11261c:    53 bf       	r3 = r2 >> 31 
  11261e:    d2 d4       	r2 = r2 + r3 
  112620:    02 db       	r2 &= (~1)
  112622:    20 e4 03 ea 	r3 = [addr(936)]  <.GCPI394_1 : 1129cc >
  112626:    d2 d4       	r2 = r2 + r3 
  112628:    42 62       	[sp+ 36] = r2 
  11262a:    92 d2       	r2 = r2 + -6 
  11262c:    02 62       	[sp+ 32] = r2 
  11262e:    0a a2       	r2 = r1 << 2 
  112630:    20 e4 03 e7 	r3 = [addr(924)]  <.GCPI394_2 : 1129d0 >
  112634:    d2 d4       	r2 = r2 + r3 
  112636:    82 62       	[sp+ 40] = r2 
  112638:    0a a1       	r2 = r1 << 1 
  11263a:    20 e4 03 e6 	r3 = [addr(920)]  <.GCPI394_3 : 1129d4 >
  11263e:    00 ee 3a 02 	r10 = r3 + r2 
  112642:    00 fc 72 03 	r2 = r7 * 3 			  ## layer2.c:124:4
  112646:    c2 61       	[sp+ 28] = r2 			  ## layer2.c:124:4
  112648:    ba dc       	r2 = -r7 			  ## layer2.c:124:4
  11264a:    82 61       	[sp+ 24] = r2 
  11264c:    20 e4 02 e4 	r2 = [addr(912)]  <.GCPI394_6 : 1129e0 >
  112650:    40 f7 21 01 	r1 = r2 >> r1 
  112654:    80 f3 1d 01 	r13 = r1 & 1 
  112658:    00 a2       	r0 = r0 << 2 
  11265a:    20 e4 01 df 	r1 = [addr(892)]  <.GCPI394_4 : 1129d8 >
  11265e:    00 ee 1e 00 	r14 = r1 + r0 
  112662:    00 ed 99 06 	r9 = r9 + 6 			  ## layer2.c:122:11
  112666:    53 ea 00 00 	r11 = 0 
  11266a:    68 c6       	r8 = r5 
  11266c:    80 ef d0 00 	cmp r13, 0			  ## layer2.c:128:9
  112670:    1b 11       	ifs (nzcv != 0) goto 54 <mp3_decoder_run+0x238 : 1126a8 >			  ## layer2.c:128:9
  112672:    20 c6       	r0 = r4 			  ## layer2.c:143:10
  112674:    81 41       	r1 = [sp+ 24] 			  ## layer2.c:143:10
  112676:    f9 e1 5f aa 	call -51894 <mad_bit_read : 105bc4 >			  ## layer2.c:143:10
  11267a:    01 42       	r1 = [sp+ 32] 			  ## layer2.c:150:16
  11267c:    90 e8 11 00 	r1 = h[r1 + 0] (s) 			  ## layer2.c:150:16
  112680:    42 42       	r2 = [sp+ 36] 			  ## layer2.c:149:12
  112682:    90 e8 22 00 	r2 = h[r2 + 0] (s) 			  ## layer2.c:149:12
  112686:    03 80       	r3 = 0 
  112688:    80 fc 06 01 	r6 = r0 * r1 			  ## layer2.c:155:18
  11268c:    76 af       	r6 = r6 >> 15 			  ## layer2.c:155:29
  11268e:    80 fc 65 02 	r5 = r6 * r2 			  ## layer2.c:156:26
  112692:    40 d7       	r0 = r0 - r5 			  ## layer2.c:156:21
  112694:    65 91       	r5 = sp + 44 			  ## layer2.c:156:21
  112696:    60 e7 50 03 	[r5 + r3] = r0 			  ## layer2.c:156:17
  11269a:    1b d1       	r3 = r3 + 4 			  ## layer2.c:151:20
  11269c:    63 98       	cmp r3, 12			  ## layer2.c:151:6
  11269e:    30 c6       	r0 = r6 			  ## layer2.c:151:6
  1126a0:    f3 11       	ifs (nzcv != 0) goto -26 <mp3_decoder_run+0x218 : 112688 >			  ## layer2.c:151:6
  1126a2:    40 ee 99 07 	r9 = r9 - r7 			  ## layer2.c:145:13
  1126a6:    0d 08       	goto 26 <mp3_decoder_run+0x252 : 1126c2 >
  1126a8:    06 80       	r6 = 0 
  1126aa:    20 c6       	r0 = r4 			  ## layer2.c:132:22
  1126ac:    39 c6       	r1 = r7 			  ## layer2.c:132:22
  1126ae:    f9 e1 9f a8 	call -51950 <mad_bit_read : 105bc4 >			  ## layer2.c:132:22
  1126b2:    61 91       	r1 = sp + 44 			  ## layer2.c:132:22
  1126b4:    60 e7 10 06 	[r1 + r6] = r0 			  ## layer2.c:132:20
  1126b8:    36 d1       	r6 = r6 + 4 			  ## layer2.c:130:26
  1126ba:    66 98       	cmp r6, 12			  ## layer2.c:130:6
  1126bc:    f6 11       	ifs (nzcv != 0) goto -20 <mp3_decoder_run+0x23A : 1126aa >			  ## layer2.c:130:6
  1126be:    c0 41       	r0 = [sp+ 28] 			  ## layer2.c:132:22
  1126c0:    41 cb       	r9 += r0 			  ## layer2.c:132:22
  1126c2:    20 e8 e0 00 	r0 = [r14 + 0] 
  1126c6:    81 42       	r1 = [sp+ 40] 			  ## layer2.c:185:16
  1126c8:    09 48       	r1 = [r1 + 0] 			  ## layer2.c:185:16
  1126ca:    10 e8 a2 00 	r2 = h[r10 + 0] 			  ## layer2.c:184:14
  1126ce:    20 ee 22 01 	r2 = 1 - r2 
  1126d2:    03 80       	r3 = 0 
  1126d4:    c4 c6       	r12 = r8 
  1126d6:    65 91       	r5 = sp + 44 
  1126d8:    20 e7 55 03 	r5 = [r5 + r3] 			  ## layer2.c:189:21
  1126dc:    2d a1       	r5 = r5 << 1 			  ## layer2.c:189:30
  1126de:    ad d4       	r5 = r5 + r2 			  ## layer2.c:189:40
  1126e0:    0d 06       	r5 *= r1 			  ## layer2.c:190:33
  1126e2:    e8 06       	macc = r5 * r0 (s) 			  ## layer2.c:191:7
  1126e4:    c0 f9 05 1f 	r5 = macc >>> 31 			  ## layer2.c:191:7
  1126e8:    58 e8 c5 80 	h[r12 ++= 2] = r5 			  ## layer2.c:191:7
  1126ec:    1b d1       	r3 = r3 + 4 			  ## layer2.c:187:20
  1126ee:    63 98       	cmp r3, 12			  ## layer2.c:187:6
  1126f0:    f2 11       	ifs (nzcv != 0) goto -28 <mp3_decoder_run+0x266 : 1126d6 >			  ## layer2.c:187:6
  1126f2:    00 ed 88 06 	r8 = r8 + 6 			  ## layer2.c:124:4
  1126f6:    00 ed bb 03 	r11 = r11 + 3 			  ## layer2.c:124:25
  1126fa:    80 ef b0 0c 	cmp r11, 12			  ## layer2.c:124:4
  1126fe:    b6 1b       	ifs (nzcv < 0) goto -148 <mp3_decoder_run+0x1FC : 11266c >			  ## layer2.c:124:4
  112700:    07 08       	goto 14 <mp3_decoder_run+0x2A0 : 112710 >			  ## layer2.c:124:4
  112702:    00 80       	r0 = 0 
  112704:    01 80       	r1 = 0 
  112706:    50 e7 51 00 	h[r5 + r0] = r1 			  ## layer2.c:202:33
  11270a:    80 d0       	r0 = r0 + 2 			  ## layer2.c:200:18
  11270c:    c0 98       	cmp r0, 24			  ## layer2.c:200:4
  11270e:    fb 11       	ifs (nzcv != 0) goto -10 <mp3_decoder_run+0x296 : 112706 >			  ## layer2.c:200:4
  112710:    20 e9 0b 03 	r11 = [sp+ 12] 
  112714:    20 e8 b0 02 	r0 = [r11 + 8] 			  ## layer2.c:109:32
  112718:    46 41       	r6 = [sp+ 20] 			  ## layer2.c:109:32
  11271a:    76 d0       	r6 = r6 + 1 			  ## layer2.c:109:42
  11271c:    30 ce       	cmp r6, r0			  ## layer2.c:109:2
  11271e:    ff fb 8b f5 	ifs (nzcv < 0) goto -336 <mp3_decoder_run+0x162 : 1125d2 >			  ## layer2.c:109:2
  112722:    16 09       	goto 556 <mp3_decoder_run+0x4E0 : 112950 >			  ## layer2.c:109:2
  112724:    30 58       	r0 = b[r6 + 0] 			  ## layer3.c:2864:16
  112726:    a0 22       	if (r0 == 0) goto 84 <mp3_decoder_run+0x30C : 11277c >			  ## layer3.c:2864:7
  112728:    00 80       	r0 = 0 
  11272a:    30 78       	b[r6 + 0] = r0 			  ## layer3.c:2866:21
  11272c:    40 e8 80 00 	b[r8 + 0] = r0 			  ## layer3.c:2867:22
  112730:    0e ed 41 c6 	r1 = r4 + 3782 			  ## layer3.c:2789:31
  112734:    09 50       	r1 = h[r1 + 0] 			  ## layer3.c:2789:31
  112736:    50 e8 81 87 	h[r8 + 30] = r1 			  ## layer3.c:2789:21
  11273a:    0e ed 41 c4 	r1 = r4 + 3780 			  ## layer3.c:2790:31
  11273e:    09 50       	r1 = h[r1 + 0] 			  ## layer3.c:2790:31
  112740:    50 e8 81 07 	h[r8 + 28] = r1 			  ## layer3.c:2790:21
  112744:    f1 4d       	r1 = [r6 + -36] 			  ## layer3.c:2792:27
  112746:    e1 68       	[r4 + 12] = r1 			  ## layer3.c:2792:17
  112748:    0e ed 41 c9 	r1 = r4 + 3785 			  ## layer3.c:2794:31
  11274c:    09 58       	r1 = b[r1 + 0] 			  ## layer3.c:2794:31
  11274e:    40 e8 81 40 	b[r8 + 1] = r1 			  ## layer3.c:2794:21
  112752:    31 4e       	r1 = [r6 + -32] 			  ## layer3.c:2795:29
  112754:    60 e8 81 02 	[r8 + 8] = r1 			  ## layer3.c:2795:19
  112758:    50 e8 80 03 	h[r8 + 12] = r0 			  ## layer3.c:2797:21
  11275c:    50 e8 80 01 	h[r8 + 4] = r0 			  ## layer3.c:2798:17
  112760:    13 08       	goto 38 <mp3_decoder_run+0x318 : 112788 >			  ## layer3.c:2798:17
  112762:    0e ed 40 cc 	r0 = r4 + 3788 			  ## layer2.c:283:29
  112766:    21 c6       	r1 = r4 			  ## layer2.c:283:3
  112768:    62 80       	r2 = 12 			  ## layer2.c:283:3
  11276a:    f9 e1 3f a8 	call -51962 <mTSY_get_bpinfo : 105c74 >			  ## layer2.c:283:3
  11276e:    00 e8 81 00 	r1 = b[r8 + 0] 			  ## layer2.c:283:3
  112772:    00 82       	r0 = 64 
  112774:    01 98       	cmp r1, 0
  112776:    00 fb 61 0e 	ifs (nzcv != 0) goto 460 <mp3_decoder_run+0x4D6 : 112946 >
  11277a:    0c 0f       	goto -488 <mp3_decoder_run+0x124 : 112594 >
  11277c:    0e ed 40 cc 	r0 = r4 + 3788 			  ## layer3.c:2872:30
  112780:    21 c6       	r1 = r4 			  ## layer3.c:2872:4
  112782:    92 80       	r2 = 18 			  ## layer3.c:2872:4
  112784:    f9 e1 6f a7 	call -51988 <mTSY_get_bpinfo : 105c74 >			  ## layer3.c:2872:4
  112788:    20 c6       	r0 = r4 			  ## layer3.c:2875:18
  11278a:    09 80       	r1 = 1 			  ## layer3.c:2875:18
  11278c:    f9 e1 af a1 	call -52172 <mad_bit_read : 105bc4 >			  ## layer3.c:2875:18
  112790:    40 e8 b0 40 	b[r11 + 1] = r0 			  ## layer3.c:2875:17
  112794:    20 c6       	r0 = r4 			  ## layer3.c:2876:16
  112796:    09 80       	r1 = 1 			  ## layer3.c:2876:16
  112798:    f9 e1 4f a1 	call -52184 <mad_bit_read : 105bc4 >			  ## layer3.c:2876:16
  11279c:    40 e8 b0 00 	b[r11 + 0] = r0 			  ## layer3.c:2876:15
  1127a0:    20 c6       	r0 = r4 			  ## layer3.c:2877:40
  1127a2:    11 80       	r1 = 2 			  ## layer3.c:2877:40
  1127a4:    f9 e1 ef a0 	call -52196 <mad_bit_read : 105bc4 >			  ## layer3.c:2877:40
  1127a8:    00 a1       	r0 = r0 << 1 			  ## layer3.c:2877:18
  1127aa:    20 e4 01 8c 	r1 = [addr(560)]  <.GCPI394_5 : 1129dc >			  ## layer3.c:2877:18
  1127ae:    10 e7 11 00 	r1 = h[r1 + r0] 			  ## layer3.c:2877:18
  1127b2:    50 e8 b1 7f 	h[r11 + -4] = r1 			  ## layer3.c:2877:17
  1127b6:    00 e8 b0 00 	r0 = b[r11 + 0] 			  ## layer3.c:2879:11
  1127ba:    80 20       	if (r0 == 0) goto 16 <mp3_decoder_run+0x35C : 1127cc >			  ## layer3.c:2879:11
  1127bc:    4a a1       	r2 = r1 >> 1 			  ## layer3.c:2880:19
  1127be:    50 e8 b2 7f 	h[r11 + -4] = r2 			  ## layer3.c:2880:19
  1127c2:    00 e8 b2 40 	r2 = b[r11 + 1] 			  ## layer3.c:2881:12
  1127c6:    22 20       	if (r2 == 0) goto 4 <mp3_decoder_run+0x35C : 1127cc >			  ## layer3.c:2881:12
  1127c8:    49 a2       	r1 = r1 >> 2 			  ## layer3.c:2883:20
  1127ca:    39 70       	h[r7 + 0] = r1 			  ## layer3.c:2883:20
  1127cc:    00 e8 81 00 	r1 = b[r8 + 0] 			  ## layer3.c:2887:14
  1127d0:    01 98       	cmp r1, 0			  ## layer3.c:2887:14
  1127d2:    00 fb b1 09 	ifs (nzcv != 0) goto 310 <mp3_decoder_run+0x49C : 11290c >			  ## layer3.c:2887:14
  1127d6:    47 62       	[sp+ 36] = r7 
  1127d8:    85 62       	[sp+ 40] = r5 
  1127da:    60 e9 08 02 	[sp+ 8] = r8 
  1127de:    51 ea 01 00 	r9 = 1 
  1127e2:    88 20       	if (r0 != 0) goto 16 <mp3_decoder_run+0x384 : 1127f4 >
  1127e4:    20 c6       	r0 = r4 			  ## layer3.c:507:18
  1127e6:    21 80       	r1 = 4 			  ## layer3.c:507:18
  1127e8:    f9 e1 cf 9e 	call -52264 <mad_bit_read : 105bc4 >			  ## layer3.c:507:18
  1127ec:    40 e8 b0 80 	b[r11 + 2] = r0 			  ## layer3.c:507:16
  1127f0:    51 ea 02 00 	r9 = 2 			  ## layer3.c:507:16
  1127f4:    0e ed 4a 53 	r10 = r4 + 3667 			  ## layer3.c:512:2
  1127f8:    0e ed 46 50 	r6 = r4 + 3664 			  ## layer3.c:512:2
  1127fc:    55 ea 00 00 	r13 = 0 			  ## layer3.c:512:2
  112800:    56 ea 00 00 	r14 = 0 			  ## layer3.c:512:2
  112804:    20 c6       	r0 = r4 			  ## layer3.c:517:32
  112806:    41 80       	r1 = 8 			  ## layer3.c:517:32
  112808:    f9 e1 cf 9d 	call -52296 <mad_bit_read : 105bc4 >			  ## layer3.c:517:32
  11280c:    00 fc e1 38 	r1 = r14 * 56 			  ## layer3.c:517:12
  112810:    67 d4       	r7 = r4 + r1 			  ## layer3.c:517:12
  112812:    0e ed 75 4c 	r5 = r7 + 3660 			  ## layer3.c:517:12
  112816:    e8 77       	h[r5 + -2] = r0 			  ## layer3.c:517:30
  112818:    00 e8 b0 00 	r0 = b[r11 + 0] 			  ## layer3.c:518:71
  11281c:    49 80       	r1 = 9 			  ## layer3.c:518:50
  11281e:    18 20       	if (r0 != 0) goto 2 <mp3_decoder_run+0x3B2 : 112822 >			  ## layer3.c:518:50
  112820:    21 80       	r1 = 4 			  ## layer3.c:518:50
  112822:    20 c6       	r0 = r4 			  ## layer3.c:518:32
  112824:    f9 e1 ef 9c 	call -52324 <mad_bit_read : 105bc4 >			  ## layer3.c:518:32
  112828:    28 70       	h[r5 + 0] = r0 			  ## layer3.c:518:30
  11282a:    40 e8 5d 80 	b[r5 + 2] = r13 			  ## layer3.c:519:18
  11282e:    0e ed 78 4e 	r8 = r7 + 3662 			  ## layer3.c:519:12
  112832:    20 c6       	r0 = r4 			  ## layer3.c:523:7
  112834:    09 80       	r1 = 1 			  ## layer3.c:523:7
  112836:    f9 e1 5f 9c 	call -52342 <mad_bit_read : 105bc4 >			  ## layer3.c:523:7
  11283a:    60 21       	if (r0 == 0) goto 44 <mp3_decoder_run+0x3F8 : 112868 >			  ## layer3.c:523:7
  11283c:    20 c6       	r0 = r4 			  ## layer3.c:524:26
  11283e:    11 80       	r1 = 2 			  ## layer3.c:524:26
  112840:    f9 e1 0f 9c 	call -52352 <mad_bit_read : 105bc4 >			  ## layer3.c:524:26
  112844:    0e ed 71 50 	r1 = r7 + 3664 			  ## layer3.c:524:26
  112848:    c8 7f       	b[r1 + -1] = r0 			  ## layer3.c:524:24
  11284a:    38 80       	r0 = 7 			  ## layer3.c:526:27
  11284c:    48 7c       	b[r1 + 6] = r0 			  ## layer3.c:526:27
  11284e:    20 81       	r0 = 36 			  ## layer3.c:527:27
  112850:    48 7e       	b[r1 + 7] = r0 			  ## layer3.c:527:27
  112852:    20 c6       	r0 = r4 			  ## layer3.c:529:8
  112854:    09 80       	r1 = 1 			  ## layer3.c:529:8
  112856:    f9 e1 5f 9b 	call -52374 <mad_bit_read : 105bc4 >			  ## layer3.c:529:8
  11285a:    10 22       	if (r0 == 0) goto 66 <mp3_decoder_run+0x42E : 11289e >			  ## layer3.c:529:8
  11285c:    00 e8 80 00 	r0 = b[r8 + 0] 			  ## layer3.c:530:20
  112860:    18 d8       	r0 |= 8			  ## layer3.c:530:20
  112862:    40 e8 80 00 	b[r8 + 0] = r0 			  ## layer3.c:530:20
  112866:    24 08       	goto 72 <mp3_decoder_run+0x440 : 1128b0 >			  ## layer3.c:530:20
  112868:    05 80       	r5 = 0 
  11286a:    10 ea 4f 0e 	r0 = 3663 			  ## layer3.c:545:24
  11286e:    40 e7 75 00 	b[r7 + r0] = r5 			  ## layer3.c:545:24
  112872:    20 c6       	r0 = r4 			  ## layer3.c:549:32
  112874:    29 80       	r1 = 5 			  ## layer3.c:549:32
  112876:    f9 e1 5f 9a 	call -52406 <mad_bit_read : 105bc4 >			  ## layer3.c:549:32
  11287a:    40 e7 60 05 	b[r6 + r5] = r0 			  ## layer3.c:549:30
  11287e:    6d d0       	r5 = r5 + 1 			  ## layer3.c:547:23
  112880:    1d 98       	cmp r5, 3			  ## layer3.c:547:4
  112882:    f7 11       	ifs (nzcv != 0) goto -18 <mp3_decoder_run+0x402 : 112872 >			  ## layer3.c:547:4
  112884:    20 c6       	r0 = r4 			  ## layer3.c:552:29
  112886:    21 80       	r1 = 4 			  ## layer3.c:552:29
  112888:    f9 e1 cf 99 	call -52424 <mad_bit_read : 105bc4 >			  ## layer3.c:552:29
  11288c:    0e ed 75 54 	r5 = r7 + 3668 			  ## layer3.c:552:29
  112890:    28 7c       	b[r5 + 2] = r0 			  ## layer3.c:552:27
  112892:    20 c6       	r0 = r4 			  ## layer3.c:553:29
  112894:    19 80       	r1 = 3 			  ## layer3.c:553:29
  112896:    f9 e1 5f 99 	call -52438 <mad_bit_read : 105bc4 >			  ## layer3.c:553:29
  11289a:    28 7e       	b[r5 + 3] = r0 			  ## layer3.c:553:27
  11289c:    1d 08       	goto 58 <mp3_decoder_run+0x468 : 1128d8 >			  ## layer3.c:553:27
  11289e:    0e ed 70 4f 	r0 = r7 + 3663 			  ## layer3.c:524:13
  1128a2:    00 58       	r0 = b[r0 + 0] 			  ## layer3.c:531:22
  1128a4:    10 98       	cmp r0, 2			  ## layer3.c:531:13
  1128a6:    02 03       	ifs (nzcv == 0) {			  ## layer3.c:526:13
  1128a8:    0e ed 70 56 		r0 = r7 + 3670 			  ## layer3.c:526:13
  1128ac:    41 80       		r1 = 8 			  ## layer3.c:532:28
  1128ae:    01 78       		b[r0 + 0] = r1 
                               	}			  ## layer3.c:532:28
  1128b0:    17 80       	r7 = 2 
  1128b2:    35 c6       	r5 = r6 
  1128b4:    20 c6       	r0 = r4 			  ## layer3.c:536:32
  1128b6:    29 80       	r1 = 5 			  ## layer3.c:536:32
  1128b8:    f9 e1 4f 98 	call -52472 <mad_bit_read : 105bc4 >			  ## layer3.c:536:32
  1128bc:    48 e8 50 40 	b[r5 ++= 1] = r0 			  ## layer3.c:536:30
  1128c0:    ff d3       	r7 = r7 + -1 			  ## layer3.c:534:18
  1128c2:    f8 11       	ifs (nzcv != 0) goto -16 <mp3_decoder_run+0x444 : 1128b4 >			  ## layer3.c:534:4
  1128c4:    1f 80       	r7 = 3 
  1128c6:    95 c6       	r5 = r10 
  1128c8:    20 c6       	r0 = r4 			  ## layer3.c:541:33
  1128ca:    19 80       	r1 = 3 			  ## layer3.c:541:33
  1128cc:    f9 e1 af 97 	call -52492 <mad_bit_read : 105bc4 >			  ## layer3.c:541:33
  1128d0:    48 e8 50 40 	b[r5 ++= 1] = r0 			  ## layer3.c:541:31
  1128d4:    ff d3       	r7 = r7 + -1 			  ## layer3.c:539:18
  1128d6:    f8 11       	ifs (nzcv != 0) goto -16 <mp3_decoder_run+0x458 : 1128c8 >			  ## layer3.c:539:18
  1128d8:    00 e8 b0 00 	r0 = b[r11 + 0] 			  ## layer3.c:556:60
  1128dc:    11 80       	r1 = 2 			  ## layer3.c:556:39
  1128de:    18 20       	if (r0 != 0) goto 2 <mp3_decoder_run+0x472 : 1128e2 >			  ## layer3.c:556:39
  1128e0:    19 80       	r1 = 3 
  1128e2:    20 c6       	r0 = r4 			  ## layer3.c:556:21
  1128e4:    f9 e1 ef 96 	call -52516 <mad_bit_read : 105bc4 >			  ## layer3.c:556:21
  1128e8:    00 e8 81 00 	r1 = b[r8 + 0] 			  ## layer3.c:556:18
  1128ec:    08 da       	r0 |= r1 			  ## layer3.c:556:18
  1128ee:    40 e8 80 00 	b[r8 + 0] = r0 			  ## layer3.c:556:18
  1128f2:    00 ed aa 38 	r10 = r10 + 56 			  ## layer3.c:512:2
  1128f6:    c6 89       	r6 += 56 			  ## layer3.c:512:2
  1128f8:    00 ed ee 01 	r14 = r14 + 1 			  ## layer3.c:512:25
  1128fc:    f1 ce       	cmp r14, r9			  ## layer3.c:512:2
  1128fe:    82 13       	if (nzcv < 0) goto -252 <mp3_decoder_run+0x394 : 112804 >
  112900:    20 e9 08 02 	r8 = [sp+ 8] 
  112904:    00 e8 81 00 	r1 = b[r8 + 0] 			  ## layer3.c:2895:15
  112908:    85 42       	r5 = [sp+ 40] 			  ## layer3.c:2895:15
  11290a:    47 42       	r7 = [sp+ 36] 			  ## layer3.c:2895:15
  11290c:    01 98       	cmp r1, 0
  11290e:    ff fb 90 de 	ifs (nzcv == 0) goto -1070 <mp3_decoder_run+0x74 : 1124e4 >
  112912:    00 80       	r0 = 0 
  112914:    09 98       	cmp r1, 1
  112916:    0c 11       	ifs (nzcv != 0) goto 24 <mp3_decoder_run+0x4C0 : 112930 >
  112918:    60 e8 80 02 	[r8 + 8] = r0 			  ## layer3.c:2897:21
  11291c:    40 e8 80 00 	b[r8 + 0] = r0 			  ## layer3.c:2898:22
  112920:    40 e8 b0 bf 	b[r11 + -2] = r0 			  ## layer3.c:2899:22
  112924:    40 e8 80 40 	b[r8 + 1] = r0 			  ## layer3.c:2900:23
  112928:    50 e8 80 03 	h[r8 + 12] = r0 			  ## layer3.c:2901:23
  11292c:    00 82       	r0 = 64 			  ## layer3.c:2901:23
  11292e:    0b 08       	goto 22 <mp3_decoder_run+0x4D6 : 112946 >			  ## layer3.c:2901:23
  112930:    60 e8 80 02 	[r8 + 8] = r0 			  ## layer3.c:2906:21
  112934:    40 e8 80 00 	b[r8 + 0] = r0 			  ## layer3.c:2907:22
  112938:    40 e8 b0 bf 	b[r11 + -2] = r0 			  ## layer3.c:2908:22
  11293c:    40 e8 80 40 	b[r8 + 1] = r0 			  ## layer3.c:2909:23
  112940:    50 e8 80 03 	h[r8 + 12] = r0 			  ## layer3.c:2910:23
  112944:    18 82       	r0 = 67 
  112946:    38 cd       	sp += 56 
  112948:    30 c4       	{macch, maccl} = [sp++] 
  11294a:    1e c0       	{pc, r14-r4} = [sp++] 
  11294c:    51 ea 00 00 	r9 = 0 
  112950:    20 e8 b0 01 	r0 = [r11 + 4] 			  ## layer2.c:208:30
  112954:    07 a3       	r7 = r0 << 3 			  ## layer2.c:208:40
  112956:    79 ce       	cmp r7, r9			  ## layer2.c:208:6
  112958:    1c 1d       	ifs (nzcv <= 0) goto 56 <mp3_decoder_run+0x522 : 112992 >			  ## layer2.c:208:6
  11295a:    40 ee 76 09 	r6 = r7 - r9 			  ## layer2.c:210:39
  11295e:    4e 98       	cmp r6, 9			  ## layer2.c:211:3
  112960:    13 1b       	ifs (nzcv < 0) goto 38 <mp3_decoder_run+0x518 : 112988 >			  ## layer2.c:211:3
  112962:    b8 87       	r0 = -9 			  ## layer2.c:213:4
  112964:    40 ee 08 09 	r8 = r0 - r9 			  ## layer2.c:213:4
  112968:    20 c6       	r0 = r4 			  ## layer2.c:213:4
  11296a:    41 80       	r1 = 8 			  ## layer2.c:213:4
  11296c:    f9 e1 af 92 	call -52652 <mad_bit_read : 105bc4 >			  ## layer2.c:213:4
  112970:    36 d2       	r6 = r6 + -8 			  ## layer2.c:214:11
  112972:    46 98       	cmp r6, 8			  ## layer2.c:211:3
  112974:    f9 1c       	ifs (nzcv > 0) goto -14 <mp3_decoder_run+0x4F8 : 112968 >			  ## layer2.c:211:3
  112976:    c0 87       	r0 = -8 			  ## layer2.c:213:4
  112978:    40 ee 00 09 	r0 = r0 - r9 			  ## layer2.c:213:4
  11297c:    c0 d5       	r0 = r0 + r7 			  ## layer2.c:213:4
  11297e:    00 ee 81 07 	r1 = r8 + r7 			  ## layer2.c:213:4
  112982:    c0 f3 11 07 	r1 = r1 & (~7) 			  ## layer2.c:213:4
  112986:    46 d6       	r6 = r0 - r1 			  ## layer2.c:213:4
  112988:    46 20       	if (r6 == 0) goto 8 <mp3_decoder_run+0x522 : 112992 >
  11298a:    20 c6       	r0 = r4 			  ## layer2.c:218:4
  11298c:    31 c6       	r1 = r6 			  ## layer2.c:218:4
  11298e:    f9 e1 9f 91 	call -52686 <mad_bit_read : 105bc4 >			  ## layer2.c:218:4
  112992:    85 40       	r5 = [sp+ 8] 
  112994:    29 58       	r1 = b[r5 + 0] 			  ## layer2.c:222:14
  112996:    00 82       	r0 = 64 			  ## layer2.c:222:14
  112998:    01 98       	cmp r1, 0			  ## layer2.c:222:6
  11299a:    41 40       	r1 = [sp+ 4] 			  ## layer2.c:222:6
  11299c:    02 40       	r2 = [sp] 			  ## layer2.c:222:6
  11299e:    d3 11       	ifs (nzcv != 0) goto -90 <mp3_decoder_run+0x4D6 : 112946 >			  ## layer2.c:222:6
  1129a0:    10 c6       	r0 = r2 			  ## layer2.c:227:2
  1129a2:    22 c6       	r2 = r4 			  ## layer2.c:227:2
  1129a4:    ff e1 df 27 	call -6918 <mTSYmad_synth_frame : 110ea2 >			  ## layer2.c:227:2
  1129a8:    e8 55       	r0 = h[r5 + 30] 			  ## layer2.c:228:21
  1129aa:    01 ed 01 80 	r1 = r0 + 384 			  ## layer2.c:228:21
  1129ae:    e9 75       	h[r5 + 30] = r1 			  ## layer2.c:228:21
  1129b0:    10 e8 b2 7f 	r2 = h[r11 + -4] 			  ## layer2.c:229:32
  1129b4:    4b c9       	r3 = r1.l 			  ## layer2.c:228:21
  1129b6:    00 80       	r0 = 0 			  ## layer2.c:228:21
  1129b8:    1a ce       	cmp r3, r2			  ## layer2.c:229:6
  1129ba:    c5 13       	if (nzcv < 0) goto -118 <mp3_decoder_run+0x4D6 : 112946 >			  ## layer2.c:229:6
  1129bc:    89 d6       	r1 = r1 - r2 			  ## layer2.c:231:22
  1129be:    e9 75       	h[r5 + 30] = r1 			  ## layer2.c:231:22
  1129c0:    e9 51       	r1 = h[r5 + 28] 			  ## layer2.c:232:21
  1129c2:    49 d0       	r1 = r1 + 1 			  ## layer2.c:232:21
  1129c4:    e9 71       	h[r5 + 28] = r1 			  ## layer2.c:232:21
  1129c6:    bf 0f       	goto -130 <mp3_decoder_run+0x4D6 : 112946 >			  ## layer2.c:232:21


.GCPI394_0:
  1129c8:    f8 a6 11 00     < 1156856 : 0x11A6F8 >

.GCPI394_1:
  1129cc:    8c 95 11 00     < 1152396 : 0x11958C >

.GCPI394_2:
  1129d0:    98 95 11 00     < 1152408 : 0x119598 >

.GCPI394_3:
  1129d4:    d6 a5 11 00     < 1156566 : 0x11A5D6 >

.GCPI394_4:
  1129d8:    d0 d6 11 00     < 1169104 : 0x11D6D0 >

.GCPI394_5:
  1129dc:    26 a5 11 00     < 1156390 : 0x11A526 >

.GCPI394_6:
  1129e0:    f4 ff 01 00     < 131060 : 0x1FFF4 >

get_dec_inf:
  1129e4:    00 ed 00 a0 	r0 = r0 + 160 			  ## testmp3.c:157:0
  1129e8:    20 00       	rts			  ## testmp3.c:159:2


get_time:
  1129ea:    10 e8 00 2b 	r0 = h[r0 + 172] 			  ## testmp3.c:170:0
  1129ee:    20 00       	rts			  ## testmp3.c:172:5


get_bp_inf:
  1129f0:    14 c2       	[--sp] = {rets, r4} 			  ## testmp3.c:177:0
  1129f2:    0e ed 01 ce 	r1 = r0 + 3790 			  ## testmp3.c:179:40
  1129f6:    02 80       	r2 = 0 
  1129f8:    03 80       	r3 = 0 
  1129fa:    10 e7 14 02 	r4 = h[r1 + r2] 			  ## testmp3.c:38:11
  1129fe:    e4 d4       	r4 = r4 + r3 			  ## testmp3.c:38:8
  112a00:    63 c9       	r3 = r4.l 			  ## testmp3.c:36:2
  112a02:    92 d0       	r2 = r2 + 2 			  ## testmp3.c:36:16
  112a04:    92 98       	cmp r2, 18			  ## testmp3.c:36:2
  112a06:    f9 11       	ifs (nzcv != 0) goto -14 <get_bp_inf+0xA : 1129fa >			  ## testmp3.c:36:2
  112a08:    00 ed 41 0a 	r1 = r4 + 10 			  ## testmp3.c:40:14
  112a0c:    12 ea cc 0e 	r2 = 3788 			  ## testmp3.c:179:32
  112a10:    50 e7 01 02 	h[r0 + r2] = r1 			  ## testmp3.c:180:24
  112a14:    0e ed 00 cc 	r0 = r0 + 3788 			  ## testmp3.c:179:32
  112a18:    14 c0       	{pc, r4} = [sp++] 


need_dcbuf_size:
  112a1a:    10 ea e4 0e 	r0 = 3812 			  ## testmp3.c:186:0
  112a1e:    20 00       	rts			  ## testmp3.c:188:2


need_bpbuf_size:
  112a20:    a0 80       	r0 = 20 			  ## testmp3.c:193:0
  112a22:    20 00       	rts			  ## testmp3.c:194:2


mp3_dec_confing:
  112a24:    15 c2       	[--sp] = {rets, r5, r4} 			  ## testmp3.c:200:0
  112a26:    05 c6       	r5 = r0 			  ## testmp3.c:200:0
  112a28:    80 ef 10 90 	cmp r1, 144			  ## testmp3.c:201:6
  112a2c:    27 11       	ifs (nzcv != 0) goto 78 <mp3_dec_confing+0x58 : 112a7c >			  ## testmp3.c:201:6
  112a2e:    0e ed 54 b8 	r4 = r5 + 3768 			  ## testmp3.c:204:20
  112a32:    20 c6       	r0 = r4 			  ## testmp3.c:204:3
  112a34:    11 c6       	r1 = r2 			  ## testmp3.c:204:3
  112a36:    a2 80       	r2 = 20 			  ## testmp3.c:204:3
  112a38:    d8 e1 af 28 	call -326380 <memcpy : c2f50 >			  ## testmp3.c:204:3
  112a3c:    09 80       	r1 = 1 			  ## testmp3.c:204:3
  112a3e:    0e ed 50 e0 	r0 = r5 + 3808 			  ## testmp3.c:204:3
  112a42:    01 78       	b[r0 + 0] = r1 			  ## testmp3.c:205:20
  112a44:    01 80       	r1 = 0 			  ## testmp3.c:205:20
  112a46:    00 ed 52 90 	r2 = r5 + 144 			  ## testmp3.c:205:20
  112a4a:    11 78       	b[r2 + 0] = r1 			  ## testmp3.c:206:32
  112a4c:    c2 4d       	r2 = [r0 + -36] 			  ## testmp3.c:207:28
  112a4e:    52 21       	if (r2 == 0) goto 42 <mp3_dec_confing+0x56 : 112a7a >			  ## testmp3.c:207:28
  112a50:    22 54       	r2 = h[r4 + 2] 			  ## testmp3.c:211:33
  112a52:    11 ea 54 6d 	r1 = 27988 			  ## testmp3.c:211:45
  112a56:    11 ce       	cmp r2, r1			  ## testmp3.c:211:12
  112a58:    0f 11       	ifs (nzcv != 0) goto 30 <mp3_dec_confing+0x54 : 112a78 >			  ## testmp3.c:211:12
  112a5a:    0e ed 52 bc 	r2 = r5 + 3772 			  ## testmp3.c:36:2
  112a5e:    03 80       	r3 = 0 			  ## testmp3.c:36:2
  112a60:    10 e7 25 03 	r5 = h[r2 + r3] 			  ## testmp3.c:38:11
  112a64:    49 c9       	r1 = r1.l 			  ## testmp3.c:36:2
  112a66:    49 d5       	r1 = r1 + r5 			  ## testmp3.c:38:8
  112a68:    9b d0       	r3 = r3 + 2 			  ## testmp3.c:36:16
  112a6a:    83 98       	cmp r3, 16			  ## testmp3.c:36:2
  112a6c:    f9 11       	ifs (nzcv != 0) goto -14 <mp3_dec_confing+0x3C : 112a60 >			  ## testmp3.c:36:2
  112a6e:    22 50       	r2 = h[r4 + 0] 			  ## testmp3.c:218:37
  112a70:    51 88       	r1 += 10 			  ## testmp3.c:40:14
  112a72:    49 c9       	r1 = r1.l 			  ## testmp3.c:40:9
  112a74:    0a ce       	cmp r1, r2			  ## testmp3.c:218:8
  112a76:    02 10       	ifs (nzcv == 0) goto 4 <mp3_dec_confing+0x58 : 112a7c >			  ## testmp3.c:218:8
  112a78:    01 80       	r1 = 0 
  112a7a:    01 78       	b[r0 + 0] = r1 
  112a7c:    00 80       	r0 = 0 			  ## testmp3.c:224:2
  112a7e:    15 c0       	{pc, r5, r4} = [sp++] 			  ## testmp3.c:224:2


MIDI_DEC_MAIN:
  112a80:    1e c2       	[--sp] = {rets, r14-r4} 			  ## midi_dec.c:816:0
  112a82:    30 c5       	[--sp] = {macch, maccl} 			  ## midi_dec.c:816:0
  112a84:    1f ed ff 38 	sp = sp + -200 			  ## midi_dec.c:816:0
  112a88:    04 c6       	r4 = r0 			  ## midi_dec.c:816:0
  112a8a:    07 ed 40 94 	r0 = r4 + 1940 			  ## midi_dec.c:816:0
  112a8e:    40 63       	[sp+ 52] = r0 			  ## midi_dec.c:816:0
  112a90:    90 e8 05 91 	r5 = h[r0 + 70] (s) 			  ## midi_dec.c:825:19
  112a94:    02 ed 42 d8 	r2 = r4 + 728 			  ## midi_dec.c:825:19
  112a98:    03 ed 46 cc 	r6 = r4 + 972 			  ## midi_dec.c:825:19
  112a9c:    05 ed 40 b8 	r0 = r4 + 1464 			  ## midi_dec.c:825:19
  112aa0:    00 61       	[sp+ 16] = r0 			  ## midi_dec.c:825:19
  112aa2:    05 ed 40 e8 	r0 = r4 + 1512 			  ## midi_dec.c:825:19
  112aa6:    80 61       	[sp+ 24] = r0 			  ## midi_dec.c:825:19
  112aa8:    06 ed 40 38 	r0 = r4 + 1592 			  ## midi_dec.c:825:19
  112aac:    80 65       	[sp+ 88] = r0 			  ## midi_dec.c:825:19
  112aae:    07 ed 4c c0 	r12 = r4 + 1984 			  ## midi_dec.c:825:19
  112ab2:    60 e9 0c 1b 	[sp+ 108] = r12 			  ## midi_dec.c:825:19
  112ab6:    c2 63       	[sp+ 60] = r2 			  ## midi_dec.c:825:19
  112ab8:    8c 61       	[sp+ 152] = r4 			  ## midi_dec.c:825:19
  112aba:    86 63       	[sp+ 56] = r6 
  112abc:    25 22       	if (r5 == 0) goto 68 <MIDI_DEC_MAIN+0x82 : 112b02 >
  112abe:    10 4f       	r0 = [r2 + -16] 			  ## midi_dec.c:830:62
  112ac0:    93 4f       	r3 = [r2 + -8] 			  ## midi_dec.c:830:35
  112ac2:    10 e8 c1 06 	r1 = h[r12 + 24] 			  ## midi_dec.c:830:69
  112ac6:    04 ed 4a f0 	r10 = r4 + 1264 			  ## midi_dec.c:827:54
  112aca:    91 cb       	r1 += r10 			  ## midi_dec.c:830:69
  112acc:    2a c6       	r2 = r5 			  ## midi_dec.c:830:15
  112ace:    ab 01       	call r3			  ## midi_dec.c:830:15
  112ad0:    06 c6       	r6 = r0 			  ## midi_dec.c:830:15
  112ad2:    05 ed 47 30 	r7 = r4 + 1328 			  ## midi_dec.c:831:23
  112ad6:    51 ea 00 00 	r9 = 0 			  ## midi_dec.c:831:23
  112ada:    38 c6       	r0 = r7 			  ## midi_dec.c:831:3
  112adc:    01 80       	r1 = 0 			  ## midi_dec.c:831:3
  112ade:    12 ea 80 00 	r2 = 128 			  ## midi_dec.c:831:3
  112ae2:    d8 e1 bf 23 	call -326538 <memset : c2f5c >			  ## midi_dec.c:831:3
  112ae6:    2e ce       	cmp r5, r6			  ## midi_dec.c:832:7
  112ae8:    00 fb 3d 91 	ifs (nzcv <= 0) goto 4646 <.GJTIE412_1_1_+0x854 : 113d12 >			  ## midi_dec.c:832:7
  112aec:    07 ed 40 d8 	r0 = r4 + 2008 			  ## midi_dec.c:834:25
  112af0:    00 50       	r0 = h[r0 + 0] 			  ## midi_dec.c:834:25
  112af2:    80 d5       	r0 = r0 + r6 			  ## midi_dec.c:834:25
  112af4:    50 e8 c0 06 	h[r12 + 24] = r0 			  ## midi_dec.c:834:25
  112af8:    a8 d7       	r0 = r5 - r6 			  ## midi_dec.c:835:33
  112afa:    50 e8 c0 86 	h[r12 + 26] = r0 			  ## midi_dec.c:835:23
  112afe:    00 fa 30 c4 	goto 6278 <.GJTIE412_1_1_+0xECA : 114388 >			  ## midi_dec.c:835:23
  112b02:    41 65       	[sp+ 84] = r1 
  112b04:    03 ed 40 00 	r0 = r4 + 768 
  112b08:    40 64       	[sp+ 68] = r0 
  112b0a:    06 ed 40 04 	r0 = r4 + 1540 
  112b0e:    40 62       	[sp+ 36] = r0 
  112b10:    04 ed 40 bc 	r0 = r4 + 1212 
  112b14:    c0 62       	[sp+ 44] = r0 
  112b16:    06 ed 40 00 	r0 = r4 + 1536 
  112b1a:    80 62       	[sp+ 40] = r0 
  112b1c:    05 ed 40 fc 	r0 = r4 + 1532 
  112b20:    00 62       	[sp+ 32] = r0 
  112b22:    05 ed 40 ed 	r0 = r4 + 1517 
  112b26:    00 63       	[sp+ 48] = r0 
  112b28:    02 ed 40 f0 	r0 = r4 + 752 
  112b2c:    00 65       	[sp+ 80] = r0 
  112b2e:    04 ed 40 f0 	r0 = r4 + 1264 
  112b32:    80 64       	[sp+ 72] = r0 
  112b34:    02 ed 40 c8 	r0 = r4 + 712 
  112b38:    c0 60       	[sp+ 12] = r0 
  112b3a:    03 ed 40 20 	r0 = r4 + 800 
  112b3e:    00 64       	[sp+ 64] = r0 
  112b40:    03 ed 40 7c 	r0 = r4 + 892 
  112b44:    08 61       	[sp+ 144] = r0 
  112b46:    04 ed 4d ec 	r13 = r4 + 1260 
  112b4a:    03 ed 40 38 	r0 = r4 + 824 
  112b4e:    40 61       	[sp+ 20] = r0 
  112b50:    06 ed 40 7c 	r0 = r4 + 1660 
  112b54:    80 60       	[sp+ 8] = r0 
  112b56:    04 ed 40 b8 	r0 = r4 + 1208 
  112b5a:    c8 60       	[sp+ 140] = r0 
  112b5c:    03 ed 40 3c 	r0 = r4 + 828 
  112b60:    48 60       	[sp+ 132] = r0 
  112b62:    03 ed 40 8c 	r0 = r4 + 908 
  112b66:    00 67       	[sp+ 112] = r0 
  112b68:    52 ea 00 00 	r10 = 0 
  112b6c:    60 e9 0d 13 	[sp+ 76] = r13 
  112b70:    15 c6       	r5 = r2 
  112b72:    00 fa 70 84 	goto 4238 <.GJTIE412_1_1_+0x746 : 113c04 >
  112b76:    80 45       	r0 = [sp+ 88] 			  ## midi_dec.c:933:19
  112b78:    00 4f       	r0 = [r0 + -16] 			  ## midi_dec.c:933:19
  112b7a:    08 98       	cmp r0, 1			  ## midi_dec.c:933:6
  112b7c:    8d 60       	[sp+ 136] = r5 			  ## midi_dec.c:933:6
  112b7e:    87 67       	[sp+ 120] = r7 			  ## midi_dec.c:933:6
  112b80:    10 11       	ifs (nzcv != 0) goto 32 <MIDI_DEC_MAIN+0x122 : 112ba2 >			  ## midi_dec.c:933:6
  112b82:    80 45       	r0 = [sp+ 88] 			  ## midi_dec.c:935:20
  112b84:    40 5b       	r0 = b[r0 + -11] 			  ## midi_dec.c:935:20
  112b86:    10 98       	cmp r0, 2			  ## midi_dec.c:935:7
  112b88:    85 c6       	r5 = r8 			  ## midi_dec.c:935:7
  112b8a:    00 fb 10 7f 	ifs (nzcv == 0) goto 4066 <.GJTIE412_1_1_+0x6B2 : 113b70 >			  ## midi_dec.c:935:7
  112b8e:    40 43       	r0 = [sp+ 52] 			  ## midi_dec.c:941:22
  112b90:    c0 5d       	r0 = b[r0 + -2] 			  ## midi_dec.c:941:22
  112b92:    8d 40       	r5 = [sp+ 136] 			  ## midi_dec.c:941:22
  112b94:    87 47       	r7 = [sp+ 120] 			  ## midi_dec.c:941:22
  112b96:    00 98       	cmp r0, 0			  ## midi_dec.c:941:22
  112b98:    00 fb d0 80 	ifs (nzcv == 0) goto 4122 <.GJTIE412_1_1_+0x6F8 : 113bb6 >			  ## midi_dec.c:941:22
  112b9c:    80 45       	r0 = [sp+ 88] 			  ## midi_dec.c:969:24
  112b9e:    40 e8 0a 82 	b[r0 + 10] = r10 			  ## midi_dec.c:969:24
  112ba2:    38 58       	r0 = b[r7 + 0] 			  ## midi_dec.c:972:19
  112ba4:    89 41       	r1 = [sp+ 152] 			  ## midi_dec.c:972:19
  112ba6:    07 ed 14 20 	r4 = r1 + 1824 			  ## midi_dec.c:972:19
  112baa:    b8 20       	if (r0 != 0) goto 22 <MIDI_DEC_MAIN+0x142 : 112bc2 >			  ## midi_dec.c:972:19
  112bac:    80 40       	r0 = [sp+ 8] 			  ## midi_dec.c:974:3
  112bae:    41 41       	r1 = [sp+ 20] 			  ## midi_dec.c:974:3
  112bb0:    12 ea a0 00 	r2 = 160 			  ## midi_dec.c:974:3
  112bb4:    d8 e1 cf 1c 	call -326760 <memcpy : c2f50 >			  ## midi_dec.c:974:3
  112bb8:    81 c6       	r1 = r8 			  ## midi_dec.c:974:3
  112bba:    88 4e       	r0 = [r1 + -24] 			  ## midi_dec.c:975:62
  112bbc:    20 68       	[r4 + 0] = r0 			  ## midi_dec.c:975:38
  112bbe:    48 4e       	r0 = [r1 + -28] 			  ## midi_dec.c:976:62
  112bc0:    e0 6f       	[r4 + -4] = r0 			  ## midi_dec.c:976:38
  112bc2:    81 45       	r1 = [sp+ 88] 
  112bc4:    88 5c       	r0 = b[r1 + 10] 			  ## midi_dec.c:979:19
  112bc6:    40 20       	if (r0 == 0) goto 8 <MIDI_DEC_MAIN+0x150 : 112bd0 >			  ## midi_dec.c:979:6
  112bc8:    38 58       	r0 = b[r7 + 0] 			  ## midi_dec.c:981:20
  112bca:    10 98       	cmp r0, 2			  ## midi_dec.c:981:7
  112bcc:    06 12       	if (nzcv >= 0) goto 12 <MIDI_DEC_MAIN+0x15A : 112bda >			  ## midi_dec.c:981:7
  112bce:    16 08       	goto 44 <MIDI_DEC_MAIN+0x17C : 112bfc >			  ## midi_dec.c:981:7
  112bd0:    08 4f       	r0 = [r1 + -16] 			  ## midi_dec.c:990:24
  112bd2:    08 98       	cmp r0, 1			  ## midi_dec.c:990:11
  112bd4:    13 11       	ifs (nzcv != 0) goto 38 <MIDI_DEC_MAIN+0x17C : 112bfc >			  ## midi_dec.c:990:11
  112bd6:    38 58       	r0 = b[r7 + 0] 			  ## midi_dec.c:992:20
  112bd8:    10 21       	if (r0 == 0) goto 34 <MIDI_DEC_MAIN+0x17C : 112bfc >			  ## midi_dec.c:992:20
  112bda:    40 41       	r0 = [sp+ 20] 
  112bdc:    81 40       	r1 = [sp+ 8] 
  112bde:    12 ea a0 00 	r2 = 160 
  112be2:    d8 e1 5f 1b 	call -326806 <memcpy : c2f50 >
  112be6:    e0 4f       	r0 = [r4 + -4] 
  112be8:    69 49       	r1 = [r5 + 20] 
  112bea:    08 d6       	r0 = r1 - r0 
  112bec:    68 69       	[r5 + 20] = r0 
  112bee:    80 c6       	r0 = r8 
  112bf0:    60 e8 0a fa 	[r0 + -24] = r10 
  112bf4:    60 e8 0a f9 	[r0 + -28] = r10 
  112bf8:    40 e8 7a 00 	b[r7 + 0] = r10 
  112bfc:    c4 61       	[sp+ 28] = r4 
  112bfe:    85 c6       	r5 = r8 
  112c00:    e8 51       	r0 = h[r5 + 28] 			  ## midi_dec.c:1004:43
  112c02:    00 98       	cmp r0, 0			  ## midi_dec.c:1004:43
  112c04:    00 fb 40 7b 	ifs (nzcv == 0) goto 3944 <.GJTIE412_1_1_+0x6B2 : 113b70 >			  ## midi_dec.c:1004:43
  112c08:    00 80       	r0 = 0 
  112c0a:    c8 61       	[sp+ 156] = r0 
  112c0c:    ca 41       	r2 = [sp+ 156] 
  112c0e:    13 a2       	r3 = r2 << 2 			  ## midi_dec.c:1006:15
  112c10:    48 40       	r0 = [sp+ 132] 			  ## midi_dec.c:1006:15
  112c12:    20 e7 0e 03 	r14 = [r0 + r3] 			  ## midi_dec.c:1006:15
  112c16:    b0 48       	r0 = [r6 + 8] 			  ## midi_dec.c:1016:21
  112c18:    80 f1 01 02 	r1 = r0 & setbit(r2) 			  ## midi_dec.c:1016:34
  112c1c:    0b 60       	[sp+ 128] = r3 			  ## midi_dec.c:1016:34
  112c1e:    00 fb b0 79 	ifs (nzcv == 0) goto 3894 <.GJTIE412_1_1_+0x69A : 113b58 >			  ## midi_dec.c:1016:34
  112c22:    09 80       	r1 = 1 			  ## midi_dec.c:1016:36
  112c24:    11 cf       	r1 <<= r2 			  ## midi_dec.c:1016:36
  112c26:    49 61       	[sp+ 148] = r1 			  ## midi_dec.c:1016:36
  112c28:    01 47       	r1 = [sp+ 112] 			  ## midi_dec.c:1016:36
  112c2a:    00 ee 1b 03 	r11 = r1 + r3 			  ## midi_dec.c:1016:36
  112c2e:    d1 c9       	r1 = r2.l (s) 			  ## midi_dec.c:1016:36
  112c30:    c1 67       	[sp+ 124] = r1 
  112c32:    09 0b       	goto 1554 <MIDI_DEC_MAIN+0x7C6 : 113246 >
  112c34:    45 20       	if (r5 == 0) goto 8 <MIDI_DEC_MAIN+0x1BE : 112c3e >
  112c36:    c0 f0 40 01 	r0 = r4 & ~r1 			  ## midi_synth.c:1809:43
  112c3a:    c1 42       	r1 = [sp+ 44] 			  ## midi_synth.c:1809:43
  112c3c:    08 68       	[r1 + 0] = r0 			  ## midi_synth.c:1809:43
  112c3e:    98 d4       	r0 = r3 + r2 			  ## midi_synth.c:1810:109
  112c40:    42 58       	r2 = b[r0 + 4] 			  ## midi_synth.c:1810:9
  112c42:    41 5a       	r1 = b[r0 + 5] 			  ## midi_synth.c:1810:9
  112c44:    00 42       	r0 = [sp+ 32] 			  ## midi_synth.c:1810:89
  112c46:    00 48       	r0 = [r0 + 0] 			  ## midi_synth.c:1810:89
  112c48:    43 42       	r3 = [sp+ 36] 			  ## midi_synth.c:1810:39
  112c4a:    1b 48       	r3 = [r3 + 0] 			  ## midi_synth.c:1810:39
  112c4c:    ab 01       	call r3			  ## midi_synth.c:1810:9
  112c4e:    c5 43       	r5 = [sp+ 60] 			  ## midi_synth.c:1810:9
  112c50:    86 43       	r6 = [sp+ 56] 			  ## midi_synth.c:1810:9
  112c52:    81 45       	r1 = [sp+ 88] 
  112c54:    48 5c       	r0 = b[r1 + 6] 			  ## midi_synth.c:1820:23
  112c56:    70 23       	if (r0 == 0) goto 110 <MIDI_DEC_MAIN+0x246 : 112cc6 >			  ## midi_synth.c:1820:9
  112c58:    0b 4f       	r3 = [r1 + -16] 
  112c5a:    20 e9 0c 1b 	r12 = [sp+ 108] 
  112c5e:    0b 98       	cmp r3, 1			  ## midi_synth.c:1854:58
  112c60:    04 11       	ifs (nzcv != 0) goto 8 <MIDI_DEC_MAIN+0x1EA : 112c6a >			  ## midi_synth.c:1854:58
  112c62:    00 e8 c0 42 	r0 = b[r12 + 9] 			  ## midi_synth.c:1854:75
  112c66:    08 98       	cmp r0, 1			  ## midi_synth.c:1854:9
  112c68:    11 10       	ifs (nzcv == 0) goto 34 <MIDI_DEC_MAIN+0x20C : 112c8c >			  ## midi_synth.c:1854:9
  112c6a:    80 41       	r0 = [sp+ 24] 			  ## midi_synth.c:1856:23
  112c6c:    40 58       	r0 = b[r0 + 4] 			  ## midi_synth.c:1856:23
  112c6e:    e0 20       	if (r0 == 0) goto 28 <MIDI_DEC_MAIN+0x20C : 112c8c >			  ## midi_synth.c:1856:23
  112c70:    88 40       	r0 = [sp+ 136] 			  ## midi_synth.c:1858:27
  112c72:    c0 5e       	r0 = b[r0 + 15] 			  ## midi_synth.c:1858:27
  112c74:    c1 47       	r1 = [sp+ 124] 			  ## midi_synth.c:1858:11
  112c76:    08 ce       	cmp r1, r0			  ## midi_synth.c:1858:11
  112c78:    09 11       	ifs (nzcv != 0) goto 18 <MIDI_DEC_MAIN+0x20C : 112c8c >			  ## midi_synth.c:1858:11
  112c7a:    00 41       	r0 = [sp+ 16] 			  ## midi_synth.c:1860:73
  112c7c:    c0 4b       	r0 = [r0 + 60] 			  ## midi_synth.c:1860:73
  112c7e:    81 41       	r1 = [sp+ 24] 			  ## midi_synth.c:1860:33
  112c80:    0b 49       	r3 = [r1 + 16] 			  ## midi_synth.c:1860:33
  112c82:    41 47       	r1 = [sp+ 116] 			  ## midi_synth.c:1860:8
  112c84:    80 f3 11 7f 	r1 = r1 & 127 			  ## midi_synth.c:1860:8
  112c88:    3a c6       	r2 = r7 			  ## midi_synth.c:1860:8
  112c8a:    ab 01       	call r3			  ## midi_synth.c:1860:8
  112c8c:    00 43       	r0 = [sp+ 48] 			  ## midi_synth.c:1865:22
  112c8e:    00 58       	r0 = b[r0 + 0] 			  ## midi_synth.c:1865:22
  112c90:    20 e9 0d 13 	r13 = [sp+ 76] 			  ## midi_synth.c:1865:22
  112c94:    00 98       	cmp r0, 0			  ## midi_synth.c:1865:22
  112c96:    00 fb 60 74 	ifs (nzcv == 0) goto 3724 <.GJTIE412_1_1_+0x668 : 113b26 >			  ## midi_synth.c:1865:22
  112c9a:    88 40       	r0 = [sp+ 136] 			  ## midi_synth.c:1867:26
  112c9c:    c0 5e       	r0 = b[r0 + 15] 			  ## midi_synth.c:1867:26
  112c9e:    c1 47       	r1 = [sp+ 124] 			  ## midi_synth.c:1867:10
  112ca0:    08 ce       	cmp r1, r0			  ## midi_synth.c:1867:10
  112ca2:    00 fb 01 74 	ifs (nzcv != 0) goto 3712 <.GJTIE412_1_1_+0x668 : 113b26 >			  ## midi_synth.c:1867:10
  112ca6:    68 4a       	r0 = [r5 + 36] 			  ## midi_synth.c:1869:43
  112ca8:    20 e8 81 fb 	r1 = [r8 + -20] 			  ## midi_synth.c:1869:40
  112cac:    00 f1 11 00 	r1 = r1 | setbit(r0) 			  ## midi_synth.c:1869:40
  112cb0:    60 e8 81 fb 	[r8 + -20] = r1 			  ## midi_synth.c:1869:40
  112cb4:    89 41       	r1 = [sp+ 152] 			  ## midi_synth.c:1870:7
  112cb6:    40 d4       	r0 = r0 + r1 			  ## midi_synth.c:1870:7
  112cb8:    11 ea c0 04 	r1 = 1216 			  ## midi_synth.c:1870:56
  112cbc:    42 47       	r2 = [sp+ 116] 			  ## midi_synth.c:1870:56
  112cbe:    40 e7 02 01 	b[r0 + r1] = r2 			  ## midi_synth.c:1870:56
  112cc2:    00 fa 00 73 	goto 3680 <.GJTIE412_1_1_+0x668 : 113b26 >			  ## midi_synth.c:1870:56
  112cc6:    c0 46       	r0 = [sp+ 108] 			  ## midi_synth.c:1080:22
  112cc8:    40 e8 0a be 	b[r0 + -6] = r10 			  ## midi_synth.c:1080:22
  112ccc:    0b 4f       	r3 = [r1 + -16] 			  ## midi_synth.c:1089:20
  112cce:    23 20       	if (r3 == 0) goto 4 <MIDI_DEC_MAIN+0x254 : 112cd4 >			  ## midi_synth.c:1089:20
  112cd0:    1b 98       	cmp r3, 3
  112cd2:    53 11       	ifs (nzcv != 0) goto 166 <MIDI_DEC_MAIN+0x2FA : 112d7a >
  112cd4:    68 4a       	r0 = [r5 + 36] 			  ## midi_synth.c:1163:34
  112cd6:    20 e8 81 fa 	r1 = [r8 + -24] 			  ## midi_synth.c:1163:31
  112cda:    00 f1 10 00 	r0 = r1 | setbit(r0) 			  ## midi_synth.c:1163:31
  112cde:    60 e8 80 fa 	[r8 + -24] = r0 			  ## midi_synth.c:1163:31
  112ce2:    20 e9 0d 13 	r13 = [sp+ 76] 			  ## midi_synth.c:1163:31
  112ce6:    88 41       	r0 = [sp+ 152] 			  ## midi_synth.c:1167:26
  112ce8:    07 ed 00 be 	r0 = r0 + 1982 			  ## midi_synth.c:1167:26
  112cec:    00 50       	r0 = h[r0 + 0] 			  ## midi_synth.c:1167:26
  112cee:    40 d0       	r0 = r0 + 1 			  ## midi_synth.c:1167:26
  112cf0:    c1 46       	r1 = [sp+ 108] 			  ## midi_synth.c:1167:26
  112cf2:    c8 77       	h[r1 + -2] = r0 			  ## midi_synth.c:1167:26
  112cf4:    8c 40       	r4 = [sp+ 136] 			  ## midi_synth.c:1167:26
  112cf6:    20 50       	r0 = h[r4 + 0] 			  ## midi_synth.c:1170:31
  112cf8:    00 f1 00 0c 	r0 = r0 | setbit(r12) 			  ## midi_synth.c:1170:31
  112cfc:    20 70       	h[r4 + 0] = r0 			  ## midi_synth.c:1170:31
  112cfe:    20 e8 80 07 	r0 = [r8 + 28] 			  ## midi_synth.c:1172:27
  112d02:    69 4a       	r1 = [r5 + 36] 			  ## midi_synth.c:1172:53
  112d04:    00 fc 11 e0 	r1 = r1 * 224 			  ## midi_synth.c:1172:67
  112d08:    40 d4       	r0 = r0 + r1 			  ## midi_synth.c:1172:67
  112d0a:    c0 65       	[sp+ 92] = r0 
  112d0c:    01 80       	r1 = 0 			  ## midi_synth.c:1173:2
  112d0e:    12 ea e0 00 	r2 = 224 			  ## midi_synth.c:1173:2
  112d12:    d8 e1 3f 12 	call -327098 <memset : c2f5c >			  ## midi_synth.c:1173:2
  112d16:    80 45       	r0 = [sp+ 88] 			  ## midi_synth.c:1176:20
  112d18:    00 4f       	r0 = [r0 + -16] 			  ## midi_synth.c:1176:20
  112d1a:    18 98       	cmp r0, 3			  ## midi_synth.c:1176:57
  112d1c:    41 43       	r1 = [sp+ 52] 			  ## midi_synth.c:1176:57
  112d1e:    58 11       	ifs (nzcv != 0) goto 176 <MIDI_DEC_MAIN+0x350 : 112dd0 >			  ## midi_synth.c:1176:57
  112d20:    e0 5e       	r0 = b[r4 + 15] 			  ## midi_synth.c:1176:77
  112d22:    c2 47       	r2 = [sp+ 124] 			  ## midi_synth.c:1176:6
  112d24:    10 ce       	cmp r2, r0			  ## midi_synth.c:1176:6
  112d26:    54 11       	ifs (nzcv != 0) goto 168 <MIDI_DEC_MAIN+0x350 : 112dd0 >			  ## midi_synth.c:1176:6
  112d28:    48 4f       	r0 = [r1 + -12] 			  ## midi_synth.c:1181:60
  112d2a:    0b c6       	r3 = r1 			  ## midi_synth.c:1181:60
  112d2c:    01 a2       	r1 = r0 << 2 			  ## midi_synth.c:1181:33
  112d2e:    8a 41       	r2 = [sp+ 152] 			  ## midi_synth.c:1181:33
  112d30:    07 ed 22 24 	r2 = r2 + 1828 			  ## midi_synth.c:1181:33
  112d34:    89 d4       	r1 = r1 + r2 			  ## midi_synth.c:1181:33
  112d36:    4a 48       	r2 = [r1 + 4] 			  ## midi_synth.c:1181:33
  112d38:    aa 6a       	[r5 + 40] = r2 			  ## midi_synth.c:1181:31
  112d3a:    09 4b       	r1 = [r1 + 48] 			  ## midi_synth.c:1182:32
  112d3c:    a1 76       	h[r4 + -22] = r1 			  ## midi_synth.c:1182:30
  112d3e:    11 ea f7 ff 	r1 = 65527 			  ## midi_synth.c:1184:29
  112d42:    e1 76       	h[r4 + -18] = r1 			  ## midi_synth.c:1184:29
  112d44:    01 80       	r1 = 0 			  ## midi_synth.c:1184:29
  112d46:    e9 6a       	[r5 + 44] = r1 			  ## midi_synth.c:1185:29
  112d48:    12 ea 44 0c 	r2 = 3140 			  ## midi_synth.c:1186:30
  112d4c:    e2 72       	h[r4 + -20] = r2 			  ## midi_synth.c:1186:30
  112d4e:    12 ea 00 10 	r2 = 4096 			  ## midi_synth.c:1187:27
  112d52:    62 73       	h[r4 + -12] = r2 			  ## midi_synth.c:1187:27
  112d54:    a1 79       	b[r4 + -8] = r1 			  ## midi_synth.c:1188:26
  112d56:    20 e4 11 cd 	r1 = [addr(1844)]  <.GCPI412_5 : 11348c >			  ## midi_synth.c:1190:31
  112d5a:    29 6b       	[r5 + 48] = r1 			  ## midi_synth.c:1190:31
  112d5c:    11 ea 00 40 	r1 = 16384 			  ## midi_synth.c:1191:30
  112d60:    21 73       	h[r4 + -16] = r1 			  ## midi_synth.c:1191:30
  112d62:    c1 41       	r1 = [sp+ 28] 			  ## midi_synth.c:1194:38
  112d64:    49 48       	r1 = [r1 + 4] 			  ## midi_synth.c:1194:38
  112d66:    40 d0       	r0 = r0 + 1 			  ## midi_synth.c:1193:21
  112d68:    01 ce       	cmp r0, r1			  ## midi_synth.c:1194:7
  112d6a:    20 03       	if (nzcv >= 0) {			  ## midi_synth.c:1194:7
  112d6c:    00 80       		r0 = 0 
                               	}			  ## midi_synth.c:1194:7
  112d6e:    58 6f       	[r3 + -12] = r0 			  ## midi_synth.c:1196:23
  112d70:    d8 59       	r0 = b[r3 + -4] 			  ## midi_synth.c:1199:20
  112d72:    f0 21       	if (r0 == 0) goto 62 <MIDI_DEC_MAIN+0x332 : 112db2 >			  ## midi_synth.c:1199:20
  112d74:    89 40       	r1 = [sp+ 136] 			  ## midi_synth.c:1214:29
  112d76:    48 7d       	b[r1 + -10] = r0 			  ## midi_synth.c:1214:29
  112d78:    2b 08       	goto 86 <MIDI_DEC_MAIN+0x350 : 112dd0 >			  ## midi_synth.c:1214:29
  112d7a:    40 43       	r0 = [sp+ 52] 			  ## midi_synth.c:1091:23
  112d7c:    09 80       	r1 = 1 			  ## midi_synth.c:1091:23
  112d7e:    c1 7d       	b[r0 + -2] = r1 			  ## midi_synth.c:1091:23
  112d80:    c0 46       	r0 = [sp+ 108] 			  ## midi_synth.c:1102:20
  112d82:    81 58       	r1 = b[r0 + 8] 			  ## midi_synth.c:1102:20
  112d84:    01 98       	cmp r1, 0			  ## midi_synth.c:1102:7
  112d86:    00 fb 80 22 	ifs (nzcv == 0) goto 1104 <MIDI_DEC_MAIN+0x75A : 1131da >			  ## midi_synth.c:1102:7
  112d8a:    11 98       	cmp r1, 2
  112d8c:    00 fb d0 22 	ifs (nzcv == 0) goto 1114 <MIDI_DEC_MAIN+0x76A : 1131ea >
  112d90:    09 98       	cmp r1, 1
  112d92:    20 e9 0d 13 	r13 = [sp+ 76] 
  112d96:    a7 11       	ifs (nzcv != 0) goto -178 <MIDI_DEC_MAIN+0x266 : 112ce6 >
  112d98:    82 45       	r2 = [sp+ 88] 
  112d9a:    51 5b       	r1 = b[r2 + -11] 			  ## midi_synth.c:1104:22
  112d9c:    09 98       	cmp r1, 1			  ## midi_synth.c:1104:36
  112d9e:    00 fb e1 23 	ifs (nzcv != 0) goto 1148 <MIDI_DEC_MAIN+0x79E : 11321e >			  ## midi_synth.c:1104:36
  112da2:    c0 46       	r0 = [sp+ 108] 			  ## midi_synth.c:1104:52
  112da4:    c1 59       	r1 = b[r0 + -4] 			  ## midi_synth.c:1104:52
  112da6:    01 98       	cmp r1, 0			  ## midi_synth.c:1104:52
  112da8:    00 fb 90 23 	ifs (nzcv == 0) goto 1138 <MIDI_DEC_MAIN+0x79E : 11321e >			  ## midi_synth.c:1104:52
  112dac:    10 80       	r0 = 2 			  ## midi_synth.c:1106:26
  112dae:    50 7b       	b[r2 + -11] = r0 			  ## midi_synth.c:1106:26
  112db0:    2f 0a       	goto 1118 <MIDI_DEC_MAIN+0x790 : 113210 >			  ## midi_synth.c:1106:26
  112db2:    88 41       	r0 = [sp+ 152] 			  ## midi_synth.c:1201:40
  112db4:    07 ed 00 84 	r0 = r0 + 1924 			  ## midi_synth.c:1201:40
  112db8:    00 58       	r0 = b[r0 + 0] 			  ## midi_synth.c:1201:31
  112dba:    82 46       	r2 = [sp+ 104] 			  ## midi_synth.c:1201:31
  112dbc:    80 d4       	r0 = r0 + r2 			  ## midi_synth.c:1201:49
  112dbe:    81 c9       	r1 = r0.b (s) 			  ## midi_synth.c:1201:31
  112dc0:    01 98       	cmp r1, 0			  ## midi_synth.c:1202:8
  112dc2:    11 c6       	r1 = r2 			  ## midi_synth.c:1202:8
  112dc4:    a0 03       	ifs (nzcv >= 0) {			  ## midi_synth.c:1202:8
  112dc6:    01 c6       		r1 = r0 
                               	}			  ## midi_synth.c:1202:8
  112dc8:    88 40       	r0 = [sp+ 136] 			  ## midi_synth.c:1201:29
  112dca:    41 7d       	b[r0 + -10] = r1 			  ## midi_synth.c:1201:29
  112dcc:    40 43       	r0 = [sp+ 52] 			  ## midi_synth.c:1210:25
  112dce:    c1 79       	b[r0 + -4] = r1 			  ## midi_synth.c:1210:25
  112dd0:    c2 45       	r2 = [sp+ 92] 
  112dd2:    00 ed 20 b8 	r0 = r2 + 184 
  112dd6:    c9 41       	r1 = [sp+ 156] 			  ## midi_synth.c:1220:18
  112dd8:    01 78       	b[r0 + 0] = r1 			  ## midi_synth.c:1220:18
  112dda:    83 46       	r3 = [sp+ 104] 			  ## midi_synth.c:1220:18
  112ddc:    53 7a       	b[r2 + 5] = r3 			  ## midi_synth.c:1222:18
  112dde:    57 7c       	b[r2 + 6] = r7 			  ## midi_synth.c:1223:18
  112de0:    40 e8 2c 01 	b[r2 + 4] = r12 			  ## midi_synth.c:1224:17
  112de4:    80 45       	r0 = [sp+ 88] 			  ## midi_synth.c:1226:19
  112de6:    c0 5a       	r0 = b[r0 + 13] 			  ## midi_synth.c:1226:19
  112de8:    f0 20       	if (r0 == 0) goto 30 <MIDI_DEC_MAIN+0x388 : 112e08 >			  ## midi_synth.c:1226:19
  112dea:    88 41       	r0 = [sp+ 152] 			  ## midi_synth.c:1228:17
  112dec:    a0 cb       	r0 += r12 			  ## midi_synth.c:1228:17
  112dee:    11 ea 46 06 	r1 = 1606 			  ## midi_synth.c:1228:17
  112df2:    80 e7 00 01 	r0 = b[r0 + r1] (s) 			  ## midi_synth.c:1228:17
  112df6:    c0 d4       	r0 = r0 + r3 			  ## midi_synth.c:1228:15
  112df8:    f8 9b       	cmp r0, 127			  ## midi_synth.c:1229:7
  112dfa:    03 c6       	r3 = r0 			  ## midi_synth.c:1229:7
  112dfc:    a0 03       	ifs (nzcv >= 0) {			  ## midi_synth.c:1229:7
  112dfe:    fb 83       		r3 = 127 
                               	}			  ## midi_synth.c:1229:7
  112e00:    00 98       	cmp r0, 0			  ## midi_synth.c:1231:7
  112e02:    08 80       	r0 = 1 			  ## midi_synth.c:1231:7
  112e04:    d0 03       	ifs (nzcv <= 0) {			  ## midi_synth.c:1231:7
  112e06:    03 80       		r3 = 0 
                               	}			  ## midi_synth.c:1231:7
  112e08:    1c c6       	r4 = r3 
  112e0a:    00 fc c0 07 	r0 = r12 * 7 			  ## midi_synth.c:1235:25
  112e0e:    89 41       	r1 = [sp+ 152] 			  ## midi_synth.c:1235:25
  112e10:    40 d4       	r0 = r0 + r1 			  ## midi_synth.c:1235:25
  112e12:    11 ea 48 04 	r1 = 1096 			  ## midi_synth.c:1235:25
  112e16:    00 e7 01 01 	r1 = b[r0 + r1] 			  ## midi_synth.c:1235:25
  112e1a:    08 80       	r0 = 1 			  ## midi_synth.c:1235:81
  112e1c:    01 9a       	cmp r1, 64			  ## midi_synth.c:1235:81
  112e1e:    90 03       	if (nzcv <= 0) {			  ## midi_synth.c:1235:81
  112e20:    00 80       		r0 = 0 
                               	}			  ## midi_synth.c:1235:81
  112e22:    c3 45       	r3 = [sp+ 92] 			  ## midi_synth.c:1235:81
  112e24:    18 7c       	b[r3 + 2] = r0 			  ## midi_synth.c:1235:22
  112e26:    20 e4 10 9a 	r0 = [addr(1640)]  <.GCPI412_6 : 113490 >			  ## midi_synth.c:1238:47
  112e2a:    00 e7 00 07 	r0 = b[r0 + r7] 			  ## midi_synth.c:1238:47
  112e2e:    8a 40       	r2 = [sp+ 136] 			  ## midi_synth.c:1238:47
  112e30:    51 56       	r1 = h[r2 + -26] 			  ## midi_synth.c:1237:24
  112e32:    08 06       	r0 *= r1 			  ## midi_synth.c:1238:45
  112e34:    40 a8       	r0 = r0 >> 8 			  ## midi_synth.c:1238:72
  112e36:    60 e8 30 12 	[r3 + 72] = r0 			  ## midi_synth.c:1238:22
  112e3a:    50 5d       	r0 = b[r2 + -10] 			  ## midi_synth.c:1244:23
  112e3c:    20 d6       	r0 = r4 - r0 			  ## midi_synth.c:1244:21
  112e3e:    81 c9       	r1 = r0.b (s) 			  ## midi_synth.c:1251:18
  112e40:    02 b8       	r2 = r0 << 24 
  112e42:    01 98       	cmp r1, 0			  ## midi_synth.c:1251:7
  112e44:    87 66       	[sp+ 104] = r7 			  ## midi_synth.c:1251:7
  112e46:    0f 1b       	ifs (nzcv < 0) goto 30 <MIDI_DEC_MAIN+0x3E6 : 112e66 >			  ## midi_synth.c:1251:7
  112e48:    68 80       	r0 = 13 
  112e4a:    2f c6       	r7 = r5 
  112e4c:    06 ef 20 30 	cmp r2, 184549376			  ## midi_synth.c:1262:4
  112e50:    16 1d       	ifs (nzcv <= 0) goto 44 <MIDI_DEC_MAIN+0x3FE : 112e7e >			  ## midi_synth.c:1262:4
  112e52:    68 80       	r0 = 13 
  112e54:    c0 d3       	r0 = r0 + -1 			  ## midi_synth.c:1265:12
  112e56:    09 b8       	r1 = r1 << 24 			  ## midi_synth.c:1262:11
  112e58:    14 ee 12 74 	r2 = r1 + 4093640704 			  ## midi_synth.c:1262:11
  112e5c:    d1 b8       	r1 = r2 >>> 24 			  ## midi_synth.c:1262:11
  112e5e:    06 ef 20 30 	cmp r2, 184549376			  ## midi_synth.c:1262:4
  112e62:    f8 1c       	ifs (nzcv > 0) goto -16 <MIDI_DEC_MAIN+0x3D4 : 112e54 >			  ## midi_synth.c:1262:4
  112e64:    0c 08       	goto 24 <MIDI_DEC_MAIN+0x3FE : 112e7e >			  ## midi_synth.c:1262:4
  112e66:    2f c6       	r7 = r5 
  112e68:    68 80       	r0 = 13 
  112e6a:    fa 9f       	cmp r2, -1			  ## midi_synth.c:1253:4
  112e6c:    08 1c       	ifs (nzcv > 0) goto 16 <MIDI_DEC_MAIN+0x3FE : 112e7e >			  ## midi_synth.c:1253:4
  112e6e:    68 80       	r0 = 13 
  112e70:    40 d0       	r0 = r0 + 1 			  ## midi_synth.c:1256:12
  112e72:    09 b8       	r1 = r1 << 24 			  ## midi_synth.c:1253:11
  112e74:    16 ee 12 40 	r2 = r1 + 201326592 			  ## midi_synth.c:1253:11
  112e78:    d1 b8       	r1 = r2 >>> 24 			  ## midi_synth.c:1253:11
  112e7a:    02 98       	cmp r2, 0			  ## midi_synth.c:1253:4
  112e7c:    f9 1b       	ifs (nzcv < 0) goto -14 <MIDI_DEC_MAIN+0x3F0 : 112e70 >			  ## midi_synth.c:1253:4
  112e7e:    09 a1       	r1 = r1 << 1 
  112e80:    20 e4 12 84 	r2 = [addr(1552)]  <.GCPI412_7 : 113494 >
  112e84:    10 e7 21 01 	r1 = h[r2 + r1] 
  112e88:    8d 40       	r5 = [sp+ 136] 
  112e8a:    eb 4f       	r3 = [r5 + -4] 			  ## midi_synth.c:1270:55
  112e8c:    1a a2       	r2 = r3 << 2 			  ## midi_synth.c:1270:24
  112e8e:    20 e4 14 82 	r4 = [addr(1544)]  <.GCPI412_8 : 113498 >			  ## midi_synth.c:1270:24
  112e92:    20 e7 42 02 	r2 = [r4 + r2] 			  ## midi_synth.c:1270:24
  112e96:    11 06       	r1 *= r2 			  ## midi_synth.c:1270:22
  112e98:    49 ad       	r1 = r1 >> 13 			  ## midi_synth.c:1270:69
  112e9a:    6a 53       	r2 = h[r5 + -12] 			  ## midi_synth.c:1272:55
  112e9c:    11 06       	r1 *= r2 			  ## midi_synth.c:1272:53
  112e9e:    00 c9       	r0 = r0.b 			  ## midi_synth.c:1272:96
  112ea0:    40 f7 10 00 	r0 = r1 >> r0 			  ## midi_synth.c:1272:93
  112ea4:    c6 45       	r6 = [sp+ 92] 			  ## midi_synth.c:1272:29
  112ea6:    64 e8 60 04 	[++ r6 = 16] = r0 			  ## midi_synth.c:1272:29
  112eaa:    b8 4a       	r0 = [r7 + 40] 			  ## midi_synth.c:1275:42
  112eac:    30 69       	[r6 + 16] = r0 			  ## midi_synth.c:1275:22
  112eae:    e9 56       	r1 = h[r5 + -18] 			  ## midi_synth.c:1276:26
  112eb0:    30 c6       	r0 = r6 			  ## midi_synth.c:1276:24
  112eb2:    64 e8 01 14 	[++ r0 = 80] = r1 			  ## midi_synth.c:1276:24
  112eb6:    00 ed 62 a8 	r2 = r6 + 168 			  ## midi_synth.c:1276:24
  112eba:    84 80       	r4 = 16 			  ## midi_synth.c:1277:28
  112ebc:    14 7a       	b[r2 + 1] = r4 			  ## midi_synth.c:1277:28
  112ebe:    2c 52       	r4 = h[r5 + -32] 			  ## midi_synth.c:1278:40
  112ec0:    84 77       	h[r0 + -6] = r4 			  ## midi_synth.c:1278:20
  112ec2:    00 ed 60 4a 	r0 = r6 + 74 			  ## midi_synth.c:1278:12
  112ec6:    06 60       	[sp] = r6 			  ## midi_synth.c:1278:12
  112ec8:    00 ed 62 50 	r2 = r6 + 80 			  ## midi_synth.c:1276:12
  112ecc:    0e 80       	r6 = 1 			  ## midi_synth.c:1276:12
  112ece:    1b 98       	cmp r3, 3			  ## midi_synth.c:1282:3
  112ed0:    0b 1b       	ifs (nzcv < 0) goto 22 <MIDI_DEC_MAIN+0x468 : 112ee8 >			  ## midi_synth.c:1282:3
  112ed2:    c9 06       	macc = r1 * r1 (s) 			  ## midi_synth.c:1285:4
  112ed4:    c0 f9 01 10 	r1 = macc >>> 16 			  ## midi_synth.c:1285:4
  112ed8:    11 68       	[r2 + 0] = r1 			  ## midi_synth.c:1285:4
  112eda:    04 50       	r4 = h[r0 + 0] 			  ## midi_synth.c:1287:25
  112edc:    24 06       	r4 *= r4 			  ## midi_synth.c:1287:48
  112ede:    64 b0       	r4 = r4 >> 16 			  ## midi_synth.c:1287:69
  112ee0:    04 70       	h[r0 + 0] = r4 			  ## midi_synth.c:1287:22
  112ee2:    5b d3       	r3 = r3 + -3 			  ## midi_synth.c:1284:18
  112ee4:    13 98       	cmp r3, 2			  ## midi_synth.c:1282:3
  112ee6:    f5 1c       	ifs (nzcv > 0) goto -22 <MIDI_DEC_MAIN+0x452 : 112ed2 >			  ## midi_synth.c:1282:3
  112ee8:    a3 20       	if (r3 == 0) goto 20 <MIDI_DEC_MAIN+0x47E : 112efe >
  112eea:    14 ea ff ff 	r4 = 65535 
  112eee:    cc 06       	macc = r1 * r4 (s) 			  ## midi_synth.c:1292:4
  112ef0:    c0 f9 01 10 	r1 = macc >>> 16 			  ## midi_synth.c:1292:4
  112ef4:    11 68       	[r2 + 0] = r1 			  ## midi_synth.c:1292:4
  112ef6:    03 50       	r3 = h[r0 + 0] 			  ## midi_synth.c:1293:25
  112ef8:    23 06       	r3 *= r4 			  ## midi_synth.c:1293:48
  112efa:    5c b0       	r4 = r3 >> 16 			  ## midi_synth.c:1293:57
  112efc:    04 70       	h[r0 + 0] = r4 			  ## midi_synth.c:1293:22
  112efe:    13 ea 9a 07 	r3 = 1946 			  ## midi_synth.c:1296:52
  112f02:    45 46       	r5 = [sp+ 100] 			  ## midi_synth.c:1296:52
  112f04:    10 e7 53 03 	r3 = h[r5 + r3] 			  ## midi_synth.c:1296:52
  112f08:    19 06       	r1 *= r3 			  ## midi_synth.c:1296:50
  112f0a:    c9 af       	r1 = r1 >>> 15 			  ## midi_synth.c:1296:83
  112f0c:    11 68       	[r2 + 0] = r1 			  ## midi_synth.c:1296:25
  112f0e:    80 fc 31 04 	r1 = r3 * r4 			  ## midi_synth.c:1297:42
  112f12:    49 af       	r1 = r1 >> 15 			  ## midi_synth.c:1297:75
  112f14:    01 70       	h[r0 + 0] = r1 			  ## midi_synth.c:1297:21
  112f16:    8a 41       	r2 = [sp+ 152] 			  ## midi_synth.c:1297:21
  112f18:    03 ed 20 14 	r0 = r2 + 788 			  ## midi_synth.c:1302:41
  112f1c:    00 50       	r0 = h[r0 + 0] 			  ## midi_synth.c:1302:41
  112f1e:    c5 45       	r5 = [sp+ 92] 			  ## midi_synth.c:1302:41
  112f20:    29 c6       	r1 = r5 			  ## midi_synth.c:1302:21
  112f22:    54 e8 10 17 	h[++ r1 = 92] = r0 			  ## midi_synth.c:1302:21
  112f26:    03 ed 24 16 	r4 = r2 + 790 			  ## midi_synth.c:1303:46
  112f2a:    20 50       	r0 = h[r4 + 0] 			  ## midi_synth.c:1303:46
  112f2c:    88 70       	h[r1 + 8] = r0 			  ## midi_synth.c:1303:26
  112f2e:    8a 40       	r2 = [sp+ 136] 			  ## midi_synth.c:1303:26
  112f30:    90 56       	r0 = h[r2 + -22] 			  ## midi_synth.c:1308:23
  112f32:    a8 6a       	[r5 + 40] = r0 			  ## midi_synth.c:1308:21
  112f34:    90 52       	r0 = h[r2 + -24] 			  ## midi_synth.c:1309:22
  112f36:    28 6b       	[r5 + 48] = r0 			  ## midi_synth.c:1309:20
  112f38:    51 52       	r1 = h[r2 + -28] 			  ## midi_synth.c:1310:24
  112f3a:    e9 6a       	[r5 + 44] = r1 			  ## midi_synth.c:1310:22
  112f3c:    40 d4       	r0 = r0 + r1 			  ## midi_synth.c:1311:42
  112f3e:    68 6b       	[r5 + 52] = r0 			  ## midi_synth.c:1311:20
  112f40:    92 59       	r2 = b[r2 + -8] 			  ## midi_synth.c:1312:37
  112f42:    aa 78       	b[r5 + 8] = r2 			  ## midi_synth.c:1312:17
  112f44:    bb 4a       	r3 = [r7 + 40] 			  ## midi_synth.c:1314:81
  112f46:    f8 48       	r0 = [r7 + 12] 			  ## midi_synth.c:1314:50
  112f48:    2f c6       	r7 = r5 			  ## midi_synth.c:1314:50
  112f4a:    c1 d4       	r1 = r0 + r3 			  ## midi_synth.c:1314:37
  112f4c:    b9 69       	[r7 + 24] = r1 			  ## midi_synth.c:1314:26
  112f4e:    80 45       	r0 = [sp+ 88] 			  ## midi_synth.c:1316:20
  112f50:    05 4f       	r5 = [r0 + -16] 			  ## midi_synth.c:1316:20
  112f52:    00 ed 70 18 	r0 = r7 + 24 			  ## midi_synth.c:1314:18
  112f56:    1d 98       	cmp r5, 3			  ## midi_synth.c:1316:57
  112f58:    0d 11       	ifs (nzcv != 0) goto 26 <MIDI_DEC_MAIN+0x4F4 : 112f74 >			  ## midi_synth.c:1316:57
  112f5a:    8d 40       	r5 = [sp+ 136] 			  ## midi_synth.c:1316:77
  112f5c:    ed 5e       	r5 = b[r5 + 15] 			  ## midi_synth.c:1316:77
  112f5e:    c7 47       	r7 = [sp+ 124] 			  ## midi_synth.c:1316:6
  112f60:    3d ce       	cmp r7, r5			  ## midi_synth.c:1316:6
  112f62:    c7 45       	r7 = [sp+ 92] 			  ## midi_synth.c:1316:6
  112f64:    07 11       	ifs (nzcv != 0) goto 14 <MIDI_DEC_MAIN+0x4F4 : 112f74 >			  ## midi_synth.c:1316:6
  112f66:    41 43       	r1 = [sp+ 52] 			  ## midi_synth.c:1318:51
  112f68:    89 4f       	r1 = [r1 + -8] 			  ## midi_synth.c:1318:51
  112f6a:    c9 d4       	r1 = r1 + r3 			  ## midi_synth.c:1318:38
  112f6c:    01 68       	[r0 + 0] = r1 			  ## midi_synth.c:1318:27
  112f6e:    40 e8 7a 47 	b[r7 + 29] = r10 			  ## midi_synth.c:1323:21
  112f72:    28 08       	goto 80 <MIDI_DEC_MAIN+0x544 : 112fc4 >			  ## midi_synth.c:1323:21
  112f74:    43 43       	r3 = [sp+ 52] 			  ## midi_synth.c:1327:20
  112f76:    1b 4b       	r3 = [r3 + 48] 			  ## midi_synth.c:1327:20
  112f78:    53 22       	if (r3 == 0) goto 74 <MIDI_DEC_MAIN+0x544 : 112fc4 >			  ## midi_synth.c:1327:20
  112f7a:    0e c6       	r6 = r1 			  ## midi_synth.c:1329:24
  112f7c:    08 e8 63 40 	r3 = b[r6 ++= 1] 			  ## midi_synth.c:1329:24
  112f80:    3d c6       	r5 = r7 			  ## midi_synth.c:1329:22
  112f82:    44 e8 53 47 	b[++ r5 = 29] = r3 			  ## midi_synth.c:1329:22
  112f86:    06 68       	[r0 + 0] = r6 			  ## midi_synth.c:1330:28
  112f88:    a3 21       	if (r3 == 0) goto 52 <MIDI_DEC_MAIN+0x53E : 112fbe >			  ## midi_synth.c:1330:28
  112f8a:    23 98       	cmp r3, 4			  ## midi_synth.c:1336:13
  112f8c:    0e 80       	r6 = 1 			  ## midi_synth.c:1336:13
  112f8e:    1a 13       	if (nzcv < 0) goto 52 <MIDI_DEC_MAIN+0x544 : 112fc4 >			  ## midi_synth.c:1336:13
  112f90:    4e 5a       	r6 = b[r1 + 5] 			  ## midi_synth.c:1340:23
  112f92:    4b 58       	r3 = b[r1 + 4] 			  ## midi_synth.c:1340:38
  112f94:    41 f6 63 08 	r3 <= insert(r6, p:8, l:8) 			  ## midi_synth.c:1340:36
  112f98:    0f 5e       	r7 = b[r1 + 3] 			  ## midi_synth.c:1339:25
  112f9a:    0e 5c       	r6 = b[r1 + 2] 			  ## midi_synth.c:1339:40
  112f9c:    41 f6 76 08 	r6 <= insert(r7, p:8, l:8) 			  ## midi_synth.c:1339:38
  112fa0:    02 98       	cmp r2, 0			  ## midi_synth.c:1341:9
  112fa2:    04 03       	ifs (nzcv == 0) {			  ## midi_synth.c:1348:41
  112fa4:    09 d1       		r1 = r1 + 4 
                               	} else {			  ## midi_synth.c:1348:41
  112fa6:    89 d1       		r1 = r1 + 6 
                               	}			  ## midi_synth.c:1343:41
  112fa8:    01 68       	[r0 + 0] = r1 			  ## midi_synth.c:1343:41
  112faa:    f1 c9       	r1 = r6.l (s) 			  ## midi_synth.c:1343:41
  112fac:    da c9       	r2 = r3.l (s) 			  ## midi_synth.c:1343:41
  112fae:    c7 45       	r7 = [sp+ 92] 			  ## midi_synth.c:1343:41
  112fb0:    38 c6       	r0 = r7 			  ## midi_synth.c:1343:41
  112fb2:    fb e1 2f 4e 	call -38460 <sr_renew_waveinfo : 10997a >			  ## midi_synth.c:1343:41
  112fb6:    28 58       	r0 = b[r5 + 0] 			  ## midi_synth.c:1351:35
  112fb8:    00 d3       	r0 = r0 + -4 			  ## midi_synth.c:1351:43
  112fba:    28 78       	b[r5 + 0] = r0 			  ## midi_synth.c:1351:23
  112fbc:    02 08       	goto 4 <MIDI_DEC_MAIN+0x542 : 112fc2 >			  ## midi_synth.c:1351:23
  112fbe:    89 d0       	r1 = r1 + 2 			  ## midi_synth.c:1334:40
  112fc0:    01 68       	[r0 + 0] = r1 			  ## midi_synth.c:1334:29
  112fc2:    0e 80       	r6 = 1 
  112fc4:    60 e8 7a 05 	[r7 + 20] = r10 			  ## midi_synth.c:1355:24
  112fc8:    8d 41       	r5 = [sp+ 152] 			  ## midi_synth.c:1355:24
  112fca:    28 c6       	r0 = r5 			  ## midi_synth.c:1357:2
  112fcc:    39 c6       	r1 = r7 			  ## midi_synth.c:1357:2
  112fce:    a2 c6       	r2 = r12 			  ## midi_synth.c:1357:2
  112fd0:    fb e1 1f 4f 	call -38430 <control_pan : 1099b6 >			  ## midi_synth.c:1357:2
  112fd4:    28 c6       	r0 = r5 			  ## midi_synth.c:1358:2
  112fd6:    a2 c6       	r2 = r12 			  ## midi_synth.c:1358:2
  112fd8:    fb e1 ef 50 	call -38372 <control_volume : 1099f8 >			  ## midi_synth.c:1358:2
  112fdc:    20 83       	r0 = 100 			  ## midi_synth.c:1369:29
  112fde:    60 e8 70 36 	[r7 + 216] = r0 			  ## midi_synth.c:1369:29
  112fe2:    80 45       	r0 = [sp+ 88] 			  ## midi_synth.c:1371:19
  112fe4:    00 4f       	r0 = [r0 + -16] 			  ## midi_synth.c:1371:19
  112fe6:    40 60       	[sp+ 4] = r0 			  ## midi_synth.c:1371:19
  112fe8:    08 98       	cmp r0, 1			  ## midi_synth.c:1371:6
  112fea:    01 03       	ifs (nzcv == 0) {			  ## midi_synth.c:1373:23
  112fec:    c0 46       		r0 = [sp+ 108] 			  ## midi_synth.c:1373:23
  112fee:    86 7d       		b[r0 + -6] = r6 
                               	}			  ## midi_synth.c:1373:23
  112ff0:    00 ed 71 48 	r1 = r7 + 72 			  ## midi_synth.c:1237:12
  112ff4:    60 e8 7a 03 	[r7 + 12] = r10 			  ## midi_synth.c:1378:24
  112ff8:    40 e8 7a c0 	b[r7 + 3] = r10 			  ## midi_synth.c:1379:24
  112ffc:    3e 78       	b[r7 + 0] = r6 			  ## midi_synth.c:1380:17
  112ffe:    3e 7a       	b[r7 + 1] = r6 			  ## midi_synth.c:1381:18
  113000:    03 ed 52 10 	r2 = r5 + 784 			  ## midi_synth.c:1383:45
  113004:    12 50       	r2 = h[r2 + 0] 			  ## midi_synth.c:1383:27
  113006:    12 b0       	r2 = r2 << 16 			  ## midi_synth.c:1383:54
  113008:    60 e8 72 13 	[r7 + 76] = r2 			  ## midi_synth.c:1383:24
  11300c:    88 40       	r0 = [sp+ 136] 			  ## midi_synth.c:1385:24
  11300e:    42 5f       	r2 = b[r0 + -9] 			  ## midi_synth.c:1385:24
  113010:    c0 43       	r0 = [sp+ 60] 			  ## midi_synth.c:1385:24
  113012:    72 20       	if (r2 == 0) goto 14 <MIDI_DEC_MAIN+0x5A2 : 113022 >			  ## midi_synth.c:1385:24
  113014:    20 f7 c3 09 	r3 = r12 << 9 			  ## midi_synth.c:1387:30
  113018:    c0 f3 22 f0 	r2 = r2 & (~240) 			  ## midi_synth.c:1387:66
  11301c:    1a da       	r2 |= r3 			  ## midi_synth.c:1387:36
  11301e:    ba 74       	h[r7 + 10] = r2 			  ## midi_synth.c:1387:23
  113020:    be 7a       	b[r7 + 9] = r6 			  ## midi_synth.c:1388:20
  113022:    05 40       	r5 = [sp] 
  113024:    2a 48       	r2 = [r5 + 0] 			  ## midi_synth.c:1391:40
  113026:    0a 68       	[r1 + 0] = r2 			  ## midi_synth.c:1391:22
  113028:    11 ea 08 06 	r1 = 1544 			  ## midi_synth.c:1392:53
  11302c:    43 46       	r3 = [sp+ 100] 			  ## midi_synth.c:1392:53
  11302e:    10 e7 31 01 	r1 = h[r3 + r1] 			  ## midi_synth.c:1392:53
  113032:    11 06       	r1 *= r2 			  ## midi_synth.c:1392:51
  113034:    c9 a8       	r1 = r1 >>> 8 			  ## midi_synth.c:1392:84
  113036:    29 68       	[r5 + 0] = r1 			  ## midi_synth.c:1392:28
  113038:    8d 40       	r5 = [sp+ 136] 			  ## midi_synth.c:1392:28
  11303a:    aa 57       	r2 = h[r5 + -6] 			  ## midi_synth.c:1393:24
  11303c:    00 ed 71 bc 	r1 = r7 + 188 			  ## midi_synth.c:1393:24
  113040:    f2 22       	if (r2 == 0) goto 94 <MIDI_DEC_MAIN+0x620 : 1130a0 >			  ## midi_synth.c:1393:6
  113042:    00 ed 73 64 	r3 = r7 + 100 			  ## midi_synth.c:1303:12
  113046:    0e 78       	b[r1 + 0] = r6 			  ## midi_synth.c:1396:21
  113048:    c1 48       	r1 = [r0 + 12] 			  ## midi_synth.c:1399:39
  11304a:    2a 53       	r2 = h[r5 + -16] 			  ## midi_synth.c:1398:21
  11304c:    24 50       	r4 = h[r4 + 0] 			  ## midi_synth.c:1397:12
  11304e:    42 f6 42 10 	r2 <= insert(r4, p:16, l:16) 			  ## midi_synth.c:1398:19
  113052:    52 d4       	r2 = r2 + r1 			  ## midi_synth.c:1399:26
  113054:    39 c6       	r1 = r7 			  ## midi_synth.c:1399:23
  113056:    64 e8 12 30 	[++ r1 = 192] = r2 			  ## midi_synth.c:1399:23
  11305a:    10 ea ff 7f 	r0 = 32767 			  ## midi_synth.c:1400:19
  11305e:    48 70       	h[r1 + 4] = r0 			  ## midi_synth.c:1400:19
  113060:    50 e8 3a 00 	h[r3 + 0] = r10 			  ## midi_synth.c:1401:27
  113064:    4b 49       	r3 = [r1 + 20] 			  ## midi_synth.c:1408:41
  113066:    5c d0       	r4 = r3 + 1 			  ## midi_synth.c:1408:41
  113068:    4c 69       	[r1 + 20] = r4 			  ## midi_synth.c:1408:41
  11306a:    00 e7 23 03 	r3 = b[r2 + r3] 			  ## midi_synth.c:1408:17
  11306e:    c0 f3 31 80 	r1 = r3 & (~128) 			  ## midi_synth.c:1409:22
  113072:    9d c9       	r5 = r3.b (s) 			  ## midi_synth.c:1408:17
  113074:    00 ed 73 d4 	r3 = r7 + 212 			  ## midi_synth.c:1408:37
  113078:    05 98       	cmp r5, 0			  ## midi_synth.c:1410:4
  11307a:    20 e9 0c 1b 	r12 = [sp+ 108] 			  ## midi_synth.c:1410:4
  11307e:    15 1b       	ifs (nzcv < 0) goto 42 <MIDI_DEC_MAIN+0x62A : 1130aa >			  ## midi_synth.c:1410:4
  113080:    3e 80       	r6 = 7 
  113082:    65 d0       	r5 = r4 + 1 			  ## midi_synth.c:1412:39
  113084:    1d 68       	[r3 + 0] = r5 			  ## midi_synth.c:1412:39
  113086:    00 e7 24 04 	r4 = b[r2 + r4] 			  ## midi_synth.c:1412:15
  11308a:    c0 f3 47 80 	r7 = r4 & (~128) 			  ## midi_synth.c:1413:24
  11308e:    f6 c9       	r6 = r6.l (s) 			  ## midi_synth.c:1413:35
  113090:    37 cf       	r7 <<= r6 			  ## midi_synth.c:1413:32
  113092:    39 da       	r1 |= r7 			  ## midi_synth.c:1413:45
  113094:    a4 c9       	r4 = r4.b (s) 			  ## midi_synth.c:1412:15
  113096:    f6 d1       	r6 = r6 + 7 			  ## midi_synth.c:1414:14
  113098:    fc 9f       	cmp r4, -1			  ## midi_synth.c:1410:4
  11309a:    2c c6       	r4 = r5 			  ## midi_synth.c:1412:39
  11309c:    f2 1c       	ifs (nzcv > 0) goto -28 <MIDI_DEC_MAIN+0x602 : 113082 >			  ## midi_synth.c:1412:39
  11309e:    06 08       	goto 12 <MIDI_DEC_MAIN+0x62C : 1130ac >			  ## midi_synth.c:1412:39
  1130a0:    40 e8 1a 00 	b[r1 + 0] = r10 			  ## midi_synth.c:1451:30
  1130a4:    20 e9 0c 1b 	r12 = [sp+ 108] 			  ## midi_synth.c:1451:30
  1130a8:    56 08       	goto 172 <MIDI_DEC_MAIN+0x6D6 : 113156 >			  ## midi_synth.c:1451:30
  1130aa:    25 c6       	r5 = r4 			  ## midi_synth.c:1425:41
  1130ac:    c7 45       	r7 = [sp+ 92] 
  1130ae:    60 e8 71 32 	[r7 + 200] = r1 			  ## midi_synth.c:1418:24
  1130b2:    09 98       	cmp r1, 1			  ## midi_synth.c:1420:7
  1130b4:    50 1b       	ifs (nzcv < 0) goto 160 <MIDI_DEC_MAIN+0x6D6 : 113156 >			  ## midi_synth.c:1420:7
  1130b6:    00 ed 70 c8 	r0 = r7 + 200 			  ## midi_synth.c:1418:13
  1130ba:    40 66       	[sp+ 100] = r0 			  ## midi_synth.c:1423:46
  1130bc:    00 44       	r0 = [sp+ 64] 			  ## midi_synth.c:1423:46
  1130be:    04 48       	r4 = [r0 + 0] 			  ## midi_synth.c:1423:46
  1130c0:    6e d0       	r6 = r5 + 1 			  ## midi_synth.c:1425:41
  1130c2:    1e 68       	[r3 + 0] = r6 			  ## midi_synth.c:1425:41
  1130c4:    00 e7 20 05 	r0 = b[r2 + r5] 			  ## midi_synth.c:1425:17
  1130c8:    00 ed 5c 02 	r12 = r5 + 2 
  1130cc:    60 e8 3c 00 	[r3 + 0] = r12 
  1130d0:    24 a2       	r4 = r4 << 2 			  ## midi_synth.c:1423:19
  1130d2:    20 e4 47 b0 	r7 = [addr(4800)]  <.GCPI412_0 : 114394 >			  ## midi_synth.c:1423:19
  1130d6:    20 e7 74 04 	r4 = [r7 + r4] 			  ## midi_synth.c:1423:19
  1130da:    17 ea c8 00 	r7 = 200 			  ## midi_synth.c:1423:63
  1130de:    c0 fc 44 07 	r4 = r4 / r7 (s) 			  ## midi_synth.c:1423:63
  1130e2:    04 60       	[sp] = r4 
  1130e4:    00 e7 24 06 	r4 = b[r2 + r6] 
  1130e8:    c0 f3 07 80 	r7 = r0 & (~128) 			  ## midi_synth.c:1426:22
  1130ec:    80 c9       	r0 = r0.b (s) 			  ## midi_synth.c:1425:17
  1130ee:    00 98       	cmp r0, 0			  ## midi_synth.c:1429:4
  1130f0:    15 1b       	ifs (nzcv < 0) goto 42 <MIDI_DEC_MAIN+0x69C : 11311c >			  ## midi_synth.c:1429:4
  1130f2:    3e 80       	r6 = 7 
  1130f4:    e8 d0       	r0 = r5 + 3 
  1130f6:    18 68       	[r3 + 0] = r0 
  1130f8:    f0 c9       	r0 = r6.l (s) 			  ## midi_synth.c:1432:35
  1130fa:    c0 f3 46 80 	r6 = r4 & (~128) 			  ## midi_synth.c:1432:24
  1130fe:    06 cf       	r6 <<= r0 			  ## midi_synth.c:1432:32
  113100:    37 da       	r7 |= r6 			  ## midi_synth.c:1432:45
  113102:    56 d5       	r6 = r2 + r5 
  113104:    00 e8 6d 80 	r13 = b[r6 + 2] 
  113108:    6d d0       	r5 = r5 + 1 			  ## midi_synth.c:1429:4
  11310a:    c6 d1       	r6 = r0 + 7 			  ## midi_synth.c:1433:14
  11310c:    a0 c9       	r0 = r4.b (s) 			  ## midi_synth.c:1432:24
  11310e:    f8 9f       	cmp r0, -1			  ## midi_synth.c:1429:4
  113110:    ac c6       	r4 = r13 			  ## midi_synth.c:1429:4
  113112:    f0 1c       	ifs (nzcv > 0) goto -32 <MIDI_DEC_MAIN+0x674 : 1130f4 >			  ## midi_synth.c:1429:4
  113114:    00 ed 5c 02 	r12 = r5 + 2 			  ## midi_synth.c:1435:8
  113118:    6e d0       	r6 = r5 + 1 			  ## midi_synth.c:1435:8
  11311a:    01 08       	goto 2 <MIDI_DEC_MAIN+0x69E : 11311e >			  ## midi_synth.c:1435:8
  11311c:    65 c6       	r13 = r4 
  11311e:    b0 d0       	r0 = r6 + 2 			  ## midi_synth.c:1438:37
  113120:    18 68       	[r3 + 0] = r0 			  ## midi_synth.c:1438:37
  113122:    00 ee 20 0c 	r0 = r2 + r12 			  ## midi_synth.c:1438:13
  113126:    00 58       	r0 = b[r0 + 0] 			  ## midi_synth.c:1438:13
  113128:    00 a8       	r0 = r0 << 8 			  ## midi_synth.c:1439:21
  11312a:    00 f0 00 0d 	r0 = r0 | r13 			  ## midi_synth.c:1439:27
  11312e:    c0 c9       	r0 = r0.l (s) 			  ## midi_synth.c:1442:24
  113130:    20 e9 0c 00 	r12 = [sp] 			  ## midi_synth.c:1442:24
  113134:    c0 fc 00 0c 	r0 = r0 / r12 (s) 			  ## midi_synth.c:1442:31
  113138:    c3 45       	r3 = [sp+ 92] 			  ## midi_synth.c:1442:31
  11313a:    1a c6       	r2 = r3 			  ## midi_synth.c:1442:22
  11313c:    64 e8 20 34 	[++ r2 = 208] = r0 			  ## midi_synth.c:1442:22
  113140:    80 fc 70 0c 	r0 = r7 * r12 			  ## midi_synth.c:1443:32
  113144:    1f c6       	r7 = r3 			  ## midi_synth.c:1443:32
  113146:    d0 6f       	[r2 + -4] = r0 			  ## midi_synth.c:1443:22
  113148:    c8 d3       	r0 = r1 + -1 			  ## midi_synth.c:1445:24
  11314a:    41 46       	r1 = [sp+ 100] 			  ## midi_synth.c:1445:24
  11314c:    08 68       	[r1 + 0] = r0 			  ## midi_synth.c:1445:24
  11314e:    20 e9 0c 1b 	r12 = [sp+ 108] 			  ## midi_synth.c:1445:24
  113152:    20 e9 0d 13 	r13 = [sp+ 76] 			  ## midi_synth.c:1445:24
  113156:    08 80       	r0 = 1 			  ## midi_synth.c:1453:28
  113158:    11 ea ba 00 	r1 = 186 			  ## midi_synth.c:1453:28
  11315c:    40 e7 70 01 	b[r7 + r1] = r0 			  ## midi_synth.c:1453:28
  113160:    c5 43       	r5 = [sp+ 60] 			  ## midi_synth.c:1453:28
  113162:    86 43       	r6 = [sp+ 56] 			  ## midi_synth.c:1453:28
  113164:    87 46       	r7 = [sp+ 104] 			  ## midi_synth.c:1453:28
  113166:    01 46       	r1 = [sp+ 96] 			  ## midi_synth.c:1453:28
  113168:    43 40       	r3 = [sp+ 4] 			  ## midi_synth.c:1453:28
  11316a:    80 45       	r0 = [sp+ 88] 			  ## midi_synth.c:1823:24
  11316c:    40 5b       	r0 = b[r0 + -11] 			  ## midi_synth.c:1823:24
  11316e:    10 98       	cmp r0, 2			  ## midi_synth.c:1823:38
  113170:    1d 11       	ifs (nzcv != 0) goto 58 <MIDI_DEC_MAIN+0x72C : 1131ac >			  ## midi_synth.c:1823:38
  113172:    0b 98       	cmp r3, 1
  113174:    1b 11       	ifs (nzcv != 0) goto 54 <MIDI_DEC_MAIN+0x72C : 1131ac >
  113176:    00 e8 c0 42 	r0 = b[r12 + 9] 			  ## midi_synth.c:1825:24
  11317a:    08 98       	cmp r0, 1			  ## midi_synth.c:1825:11
  11317c:    00 fb 31 4d 	ifs (nzcv != 0) goto 2470 <.GJTIE412_1_1_+0x668 : 113b26 >			  ## midi_synth.c:1825:11
  113180:    80 41       	r0 = [sp+ 24] 			  ## midi_synth.c:1827:25
  113182:    40 58       	r0 = b[r0 + 4] 			  ## midi_synth.c:1827:25
  113184:    00 98       	cmp r0, 0			  ## midi_synth.c:1827:25
  113186:    00 fb e0 4c 	ifs (nzcv == 0) goto 2460 <.GJTIE412_1_1_+0x668 : 113b26 >			  ## midi_synth.c:1827:25
  11318a:    88 40       	r0 = [sp+ 136] 			  ## midi_synth.c:1829:29
  11318c:    c0 5e       	r0 = b[r0 + 15] 			  ## midi_synth.c:1829:29
  11318e:    c1 47       	r1 = [sp+ 124] 			  ## midi_synth.c:1829:13
  113190:    08 ce       	cmp r1, r0			  ## midi_synth.c:1829:13
  113192:    00 fb 81 4c 	ifs (nzcv != 0) goto 2448 <.GJTIE412_1_1_+0x668 : 113b26 >			  ## midi_synth.c:1829:13
  113196:    00 41       	r0 = [sp+ 16] 			  ## midi_synth.c:1831:75
  113198:    c0 4b       	r0 = [r0 + 60] 			  ## midi_synth.c:1831:75
  11319a:    81 41       	r1 = [sp+ 24] 			  ## midi_synth.c:1831:35
  11319c:    0b 49       	r3 = [r1 + 16] 			  ## midi_synth.c:1831:35
  11319e:    41 47       	r1 = [sp+ 116] 			  ## midi_synth.c:1831:10
  1131a0:    80 f3 11 7f 	r1 = r1 & 127 			  ## midi_synth.c:1831:10
  1131a4:    3a c6       	r2 = r7 			  ## midi_synth.c:1831:10
  1131a6:    ab 01       	call r3			  ## midi_synth.c:1831:10
  1131a8:    00 fa d0 4b 	goto 2426 <.GJTIE412_1_1_+0x668 : 113b26 >			  ## midi_synth.c:1831:10
  1131ac:    01 98       	cmp r1, 0
  1131ae:    ff fb 60 d5 	ifs (nzcv == 0) goto -1364 <MIDI_DEC_MAIN+0x1DE : 112c5e >
  1131b2:    20 e8 80 07 	r0 = [r8 + 28] 			  ## midi_synth.c:1841:32
  1131b6:    69 4a       	r1 = [r5 + 36] 			  ## midi_synth.c:1841:58
  1131b8:    00 fc 11 e0 	r1 = r1 * 224 			  ## midi_synth.c:1842:32
  1131bc:    09 d4       	r1 = r1 + r0 			  ## midi_synth.c:1842:32
  1131be:    14 e8 10 a9 	r0 = h[++ r1 = 166] 			  ## midi_synth.c:1842:17
  1131c2:    82 41       	r2 = [sp+ 24] 			  ## midi_synth.c:1842:44
  1131c4:    52 54       	r2 = h[r2 + 6] 			  ## midi_synth.c:1842:44
  1131c6:    10 06       	r0 *= r2 			  ## midi_synth.c:1842:42
  1131c8:    42 aa       	r2 = r0 >> 10 			  ## midi_synth.c:1842:71
  1131ca:    10 ea ff ff 	r0 = 65535 			  ## midi_synth.c:1843:11
  1131ce:    10 ce       	cmp r2, r0			  ## midi_synth.c:1843:11
  1131d0:    20 03       	if (nzcv >= 0) {			  ## midi_synth.c:1843:11
  1131d2:    12 ea ff ff 		r2 = 65535 
                               	}			  ## midi_synth.c:1843:11
  1131d6:    0a 70       	h[r1 + 0] = r2 			  ## midi_synth.c:1847:27
  1131d8:    42 0d       	goto -1404 <MIDI_DEC_MAIN+0x1DE : 112c5e >			  ## midi_synth.c:1847:27
  1131da:    88 40       	r0 = [sp+ 136] 			  ## midi_synth.c:1116:24
  1131dc:    c1 5e       	r1 = b[r0 + 15] 			  ## midi_synth.c:1116:24
  1131de:    c0 47       	r0 = [sp+ 124] 			  ## midi_synth.c:1116:8
  1131e0:    01 ce       	cmp r0, r1			  ## midi_synth.c:1116:8
  1131e2:    20 e9 0d 13 	r13 = [sp+ 76] 			  ## midi_synth.c:1116:8
  1131e6:    09 10       	ifs (nzcv == 0) goto 18 <MIDI_DEC_MAIN+0x77A : 1131fa >			  ## midi_synth.c:1116:8
  1131e8:    26 08       	goto 76 <MIDI_DEC_MAIN+0x7B6 : 113236 >			  ## midi_synth.c:1116:8
  1131ea:    88 40       	r0 = [sp+ 136] 			  ## midi_synth.c:1141:24
  1131ec:    c1 5e       	r1 = b[r0 + 15] 			  ## midi_synth.c:1141:24
  1131ee:    c0 47       	r0 = [sp+ 124] 			  ## midi_synth.c:1141:8
  1131f0:    01 ce       	cmp r0, r1			  ## midi_synth.c:1141:8
  1131f2:    20 e9 0d 13 	r13 = [sp+ 76] 			  ## midi_synth.c:1141:8
  1131f6:    ff fb 61 d7 	ifs (nzcv != 0) goto -1300 <MIDI_DEC_MAIN+0x266 : 112ce6 >			  ## midi_synth.c:1141:8
  1131fa:    80 45       	r0 = [sp+ 88] 
  1131fc:    41 5a       	r1 = b[r0 + 5] 
  1131fe:    b1 20       	if (r1 == 0) goto 22 <MIDI_DEC_MAIN+0x796 : 113216 >
  113200:    41 5b       	r1 = b[r0 + -11] 
  113202:    09 98       	cmp r1, 1
  113204:    16 11       	ifs (nzcv != 0) goto 44 <MIDI_DEC_MAIN+0x7B2 : 113232 >
  113206:    c1 46       	r1 = [sp+ 108] 
  113208:    c9 59       	r1 = b[r1 + -4] 
  11320a:    31 21       	if (r1 == 0) goto 38 <MIDI_DEC_MAIN+0x7B2 : 113232 >
  11320c:    11 80       	r1 = 2 
  11320e:    41 7b       	b[r0 + -11] = r1 
  113210:    08 80       	r0 = 1 
  113212:    81 47       	r1 = [sp+ 120] 
  113214:    08 78       	b[r1 + 0] = r0 
  113216:    20 e9 0c 1b 	r12 = [sp+ 108] 
  11321a:    01 46       	r1 = [sp+ 96] 
  11321c:    a6 0f       	goto -180 <MIDI_DEC_MAIN+0x6EA : 11316a >
  11321e:    68 4a       	r0 = [r5 + 36] 			  ## midi_synth.c:1110:35
  113220:    20 e8 81 fa 	r1 = [r8 + -24] 			  ## midi_synth.c:1110:32
  113224:    00 f1 10 00 	r0 = r1 | setbit(r0) 			  ## midi_synth.c:1110:32
  113228:    60 e8 80 fa 	[r8 + -24] = r0 			  ## midi_synth.c:1110:32
  11322c:    08 80       	r0 = 1 			  ## midi_synth.c:1111:25
  11322e:    50 7b       	b[r2 + -11] = r0 			  ## midi_synth.c:1111:25
  113230:    5a 0d       	goto -1356 <MIDI_DEC_MAIN+0x266 : 112ce6 >			  ## midi_synth.c:1111:25
  113232:    09 80       	r1 = 1 
  113234:    41 7b       	b[r0 + -11] = r1 
  113236:    68 4a       	r0 = [r5 + 36] 
  113238:    20 e8 81 fa 	r1 = [r8 + -24] 
  11323c:    00 f1 10 00 	r0 = r1 | setbit(r0) 
  113240:    60 e8 80 fa 	[r8 + -24] = r0 
  113244:    50 0d       	goto -1376 <MIDI_DEC_MAIN+0x266 : 112ce6 >
  113246:    20 e8 b7 00 	r7 = [r11 + 0] 			  ## midi_dec.c:1025:42
  11324a:    89 41       	r1 = [sp+ 152] 			  ## midi_dec.c:1025:42
  11324c:    04 ed 18 d0 	r8 = r1 + 1232 			  ## midi_dec.c:1025:42
  113250:    07 98       	cmp r7, 0			  ## midi_dec.c:1025:42
  113252:    00 fb d1 09 	ifs (nzcv != 0) goto 314 <.GJTIE412_0_0_+0x46 : 113390 >			  ## midi_dec.c:1025:42
  113256:    80 ef e0 01 	cmp r14, 1			  ## midi_dec.c:1027:10
  11325a:    00 fb 9b 47 	ifs (nzcv < 0) goto 2290 <.GJTIE412_1_1_+0x692 : 113b50 >			  ## midi_dec.c:1027:10
  11325e:    07 80       	r7 = 0 
  113260:    30 5a       	r0 = b[r6 + 1] 			  ## midi_dec.c:1035:24
  113262:    90 20       	if (r0 == 0) goto 18 <MIDI_DEC_MAIN+0x7F6 : 113276 >			  ## midi_dec.c:1035:11
  113264:    30 58       	r0 = b[r6 + 0] 			  ## midi_dec.c:1037:17
  113266:    40 e8 6a 40 	b[r6 + 1] = r10 			  ## midi_dec.c:1038:30
  11326a:    c0 f3 01 80 	r1 = r0 & (~128) 			  ## midi_dec.c:1039:41
  11326e:    3a a7       	r2 = r7 << 7 			  ## midi_dec.c:1039:25
  113270:    00 f0 17 02 	r7 = r1 | r2 			  ## midi_dec.c:1039:31
  113274:    0b 08       	goto 22 <MIDI_DEC_MAIN+0x80C : 11328c >
  113276:    88 41       	r0 = [sp+ 152] 			  ## midi_dec.c:1043:17
  113278:    09 80       	r1 = 1 			  ## midi_dec.c:1043:17
  11327a:    f8 e1 0f 91 	call -60896 <midi_inputdata : 10449e >			  ## midi_dec.c:1043:17
  11327e:    80 f3 01 7f 	r1 = r0 & 127 			  ## midi_dec.c:1044:41
  113282:    3a a7       	r2 = r7 << 7 			  ## midi_dec.c:1044:25
  113284:    00 f0 17 02 	r7 = r1 | r2 			  ## midi_dec.c:1044:31
  113288:    1f ed ee ff 	r14 = r14 + -1 			  ## midi_dec.c:1045:30
  11328c:    80 c9       	r0 = r0.b (s) 			  ## midi_dec.c:1048:6
  11328e:    00 98       	cmp r0, 0			  ## midi_dec.c:1048:6
  113290:    e7 1b       	ifs (nzcv < 0) goto -50 <MIDI_DEC_MAIN+0x7E0 : 113260 >			  ## midi_dec.c:1048:6
  113292:    60 e8 b7 00 	[r11 + 0] = r7 			  ## midi_dec.c:1050:46
  113296:    00 e8 c0 be 	r0 = b[r12 + -6] 			  ## midi_dec.c:1052:23
  11329a:    00 98       	cmp r0, 0			  ## midi_dec.c:1052:23
  11329c:    76 10       	ifs (nzcv == 0) goto 236 <.GJTIE412_0_0_+0x40 : 11338a >			  ## midi_dec.c:1052:23
  11329e:    20 e8 80 07 	r0 = [r8 + 28] 			  ## midi_dec.c:1054:46
  1132a2:    69 4a       	r1 = [r5 + 36] 			  ## midi_dec.c:1054:72
  1132a4:    40 e8 ca be 	b[r12 + -6] = r10 			  ## midi_dec.c:1055:27
  1132a8:    00 fc 11 e0 	r1 = r1 * 224 			  ## midi_dec.c:1057:24
  1132ac:    00 ee 09 01 	r9 = r0 + r1 			  ## midi_dec.c:1057:24
  1132b0:    20 e8 90 14 	r0 = [r9 + 80] 			  ## midi_dec.c:1057:24
  1132b4:    68 20       	if (r0 != 0) goto 12 <MIDI_DEC_MAIN+0x842 : 1132c2 >			  ## midi_dec.c:1057:24
  1132b6:    10 e8 90 96 	r0 = h[r9 + 90] 			  ## midi_dec.c:1057:74
  1132ba:    20 e8 91 18 	r1 = [r9 + 96] 			  ## midi_dec.c:1057:59
  1132be:    08 ce       	cmp r1, r0			  ## midi_dec.c:1057:11
  1132c0:    62 10       	ifs (nzcv == 0) goto 196 <.GJTIE412_0_0_+0x3C : 113386 >			  ## midi_dec.c:1057:11
  1132c2:    00 e5 51 fa 	r1, r0 = d[r5 + -24] 			  ## midi_dec.c:1060:39
  1132c6:    0e d4       	r6 = r1 + r0 			  ## midi_dec.c:1060:21
  1132c8:    08 41       	r0 = [sp+ 144] 			  ## midi_dec.c:1062:21
  1132ca:    c9 41       	r1 = [sp+ 156] 			  ## midi_dec.c:1062:21
  1132cc:    00 e7 00 01 	r0 = b[r0 + r1] 			  ## midi_dec.c:1062:21
  1132d0:    00 ed 9d 05 	r13 = r9 + 5 			  ## midi_dec.c:1062:21
  1132d4:    02 80       	r2 = 0 			  ## midi_dec.c:1062:21
  1132d6:    04 80       	r4 = 0 			  ## midi_dec.c:1062:21
  1132d8:    24 08       	goto 72 <MIDI_DEC_MAIN+0x8A2 : 113322 >			  ## midi_dec.c:1062:21
  1132da:    00 80       	r0 = 0 
  1132dc:    05 80       	r5 = 0 
  1132de:    52 d0       	r2 = r2 + 1 			  ## midi_dec.c:1110:19
  1132e0:    11 c9       	r1 = r2.b 			  ## midi_dec.c:1110:19
  1132e2:    0c 80       	r4 = 1 			  ## midi_dec.c:1110:19
  1132e4:    81 98       	cmp r1, 16			  ## midi_dec.c:1111:14
  1132e6:    90 03       	if (nzcv <= 0) {			  ## midi_dec.c:1111:14
  1132e8:    04 c6       		r4 = r0 
                               	}			  ## midi_dec.c:1111:14
  1132ea:    08 e8 6c 40 	r12 = b[r6 ++= 1] 			  ## midi_dec.c:1109:19
  1132ee:    00 80       	r0 = 0 
  1132f0:    81 98       	cmp r1, 16			  ## midi_dec.c:1111:14
  1132f2:    90 03       	if (nzcv <= 0) {			  ## midi_dec.c:1111:14
  1132f4:    a0 c6       		r0 = r12 
                               	}			  ## midi_dec.c:1111:14
  1132f6:    80 f3 01 7f 	r1 = r0 & 127 			  ## midi_dec.c:1116:47
  1132fa:    2d a7       	r5 = r5 << 7 			  ## midi_dec.c:1116:31
  1132fc:    0d da       	r5 |= r1 			  ## midi_dec.c:1116:37
  1132fe:    80 c9       	r0 = r0.b (s) 			  ## midi_dec.c:1117:9
  113300:    00 98       	cmp r0, 0			  ## midi_dec.c:1117:9
  113302:    20 c6       	r0 = r4 
  113304:    ec 1b       	ifs (nzcv < 0) goto -40 <MIDI_DEC_MAIN+0x85E : 1132de >
  113306:    7f d5       	r7 = r7 + r5 			  ## midi_dec.c:1119:16
  113308:    18 c6       	r0 = r3 
  11330a:    0b 08       	goto 22 <MIDI_DEC_MAIN+0x8A2 : 113322 >
  11330c:    00 e8 d0 00 	r0 = b[r13 + 0] 			  ## midi_dec.c:1082:38
  113310:    29 58       	r1 = b[r5 + 0] 			  ## midi_dec.c:1082:14
  113312:    08 ce       	cmp r1, r0			  ## midi_dec.c:1082:45
  113314:    03 11       	ifs (nzcv != 0) goto 6 <MIDI_DEC_MAIN+0x89C : 11331c >			  ## midi_dec.c:1082:45
  113316:    29 5a       	r1 = b[r5 + 1] 			  ## midi_dec.c:1082:49
  113318:    08 80       	r0 = 1 			  ## midi_dec.c:1082:49
  11331a:    11 20       	if (r1 == 0) goto 2 <MIDI_DEC_MAIN+0x89E : 11331e >			  ## midi_dec.c:1082:49
  11331c:    20 c6       	r0 = r4 
  11331e:    ae d0       	r6 = r5 + 2 			  ## midi_dec.c:1085:16
  113320:    23 08       	goto 70 <.GJTIE412_0_0_+0x1E : 113368 >
  113322:    35 c6       	r5 = r6 			  ## midi_dec.c:1066:14
  113324:    88 e8 53 40 	r3 = b[r5 ++= 1] (s) 			  ## midi_dec.c:1066:14
  113328:    03 98       	cmp r3, 0			  ## midi_dec.c:1067:12
  11332a:    a0 03       	ifs (nzcv >= 0) {			  ## midi_dec.c:1067:12
  11332c:    35 c6       		r5 = r6 
                               	}			  ## midi_dec.c:1067:12
  11332e:    03 98       	cmp r3, 0			  ## midi_dec.c:1067:12
  113330:    a0 03       	ifs (nzcv >= 0) {			  ## midi_dec.c:1067:12
  113332:    03 c6       		r3 = r0 
                               	}			  ## midi_dec.c:1067:12
  113334:    80 f3 30 f0 	r0 = r3 & 240 			  ## midi_dec.c:1079:16
  113338:    00 8c       	r0 += -128 			  ## midi_dec.c:1079:8
  11333a:    40 a4       	r0 = r0 >> 4 			  ## midi_dec.c:1079:8
  11333c:    30 98       	cmp r0, 6			  ## midi_dec.c:1079:8
  11333e:    08 18       	if (nzcv > 0) goto 16 <.GJTIE412_0_0_+0x6 : 113350 >			  ## midi_dec.c:1079:8
  113340:    b0 01       	tbb [r0]


.GJTIS412_0_0_:
  113342:    09     < 9 : 0x9 >
  113343:    04     < 4 : 0x4 >
  113344:    11     < 17 : 0x11 >
  113345:    11     < 17 : 0x11 >
  113346:    05     < 5 : 0x5 >
  113347:    05     < 5 : 0x5 >
  113348:    11     < 17 : 0x11 >
  113349:    00     < 0 : 0x0 >
  11334a:    e0 0f       	goto -64 <MIDI_DEC_MAIN+0x88C : 11330c >
  11334c:    6e d0       	r6 = r5 + 1 			  ## midi_dec.c:1099:14
  11334e:    0b 08       	goto 22 <.GJTIE412_0_0_+0x1C : 113366 >			  ## midi_dec.c:1099:14
  113350:    2e c6       	r6 = r5 
  113352:    09 08       	goto 18 <.GJTIE412_0_0_+0x1C : 113366 >
  113354:    00 e8 d1 00 	r1 = b[r13 + 0] 			  ## midi_dec.c:1088:37
  113358:    2e 58       	r6 = b[r5 + 0] 			  ## midi_dec.c:1088:13
  11335a:    08 80       	r0 = 1 			  ## midi_dec.c:1088:13
  11335c:    31 ce       	cmp r6, r1			  ## midi_dec.c:1088:13
  11335e:    10 03       	ifs (nzcv != 0) {			  ## midi_dec.c:1088:13
  113360:    20 c6       		r0 = r4 
                               	}			  ## midi_dec.c:1088:13
  113362:    04 c6       	r4 = r0 			  ## midi_dec.c:1088:13
  113364:    ae d0       	r6 = r5 + 2 			  ## midi_dec.c:1096:15
  113366:    20 c6       	r0 = r4 
  113368:    00 c9       	r0 = r0.b 			  ## midi_dec.c:1104:22
  11336a:    b7 10       	ifs (nzcv == 0) goto -146 <MIDI_DEC_MAIN+0x85A : 1132da >			  ## midi_dec.c:1104:22
  11336c:    87 ef 70 d0 	cmp r7, 2000			  ## midi_dec.c:1126:12
  113370:    20 03       	if (nzcv >= 0) {			  ## midi_dec.c:1126:12
  113372:    17 ea d0 07 		r7 = 2000 
                               	}			  ## midi_dec.c:1126:12
  113376:    60 e8 97 36 	[r9 + 216] = r7 			  ## midi_dec.c:1128:89
  11337a:    20 e9 0c 1b 	r12 = [sp+ 108] 
  11337e:    c5 43       	r5 = [sp+ 60] 
  113380:    86 43       	r6 = [sp+ 56] 
  113382:    20 e9 0d 13 	r13 = [sp+ 76] 
  113386:    20 e8 b7 00 	r7 = [r11 + 0] 			  ## midi_dec.c:1140:42
  11338a:    07 98       	cmp r7, 0
  11338c:    00 fb 10 0a 	ifs (nzcv == 0) goto 322 <.GJTIE412_1_1_+0x14 : 1134d2 >
  113390:    f8 d3       	r0 = r7 + -1 			  ## midi_dec.c:1142:45
  113392:    60 e8 b0 00 	[r11 + 0] = r0 			  ## midi_dec.c:1142:45
  113396:    51 ea 01 00 	r9 = 1 
  11339a:    00 fb d1 3d 	ifs (nzcv != 0) goto 1978 <.GJTIE412_1_1_+0x69A : 113b58 >
  11339e:    88 41       	r0 = [sp+ 152] 			  ## midi_dec.c:1148:12
  1133a0:    09 80       	r1 = 1 			  ## midi_dec.c:1148:12
  1133a2:    f8 e1 cf 87 	call -61192 <midi_inputdata : 10449e >			  ## midi_dec.c:1148:12
  1133a6:    80 f3 01 f0 	r1 = r0 & 240 			  ## midi_dec.c:1151:15
  1133aa:    1f ed e4 ff 	r4 = r14 + -1 			  ## midi_dec.c:1149:28
  1133ae:    80 ef 10 f0 	cmp r1, 240			  ## midi_dec.c:1151:10
  1133b2:    4f 11       	ifs (nzcv != 0) goto 158 <.GJTIE412_0_0_+0x108 : 113452 >			  ## midi_dec.c:1151:10
  1133b4:    40 c9       	r0 = r0.l 			  ## midi_dec.c:1151:11
  1133b6:    80 ef 00 ff 	cmp r0, 255			  ## midi_dec.c:1153:11
  1133ba:    56 11       	ifs (nzcv != 0) goto 172 <.GJTIE412_0_0_+0x11E : 113468 >			  ## midi_dec.c:1153:11
  1133bc:    68 c6       	r8 = r5 
  1133be:    8d 41       	r5 = [sp+ 152] 
  1133c0:    28 c6       	r0 = r5 			  ## midi_synth.c:853:9
  1133c2:    09 80       	r1 = 1 			  ## midi_synth.c:853:9
  1133c4:    f8 e1 bf 86 	call -61226 <midi_inputdata : 10449e >			  ## midi_synth.c:853:9
  1133c8:    06 c6       	r6 = r0 			  ## midi_synth.c:853:9
  1133ca:    1f ed e4 fe 	r4 = r14 + -2 			  ## midi_synth.c:854:11
  1133ce:    07 80       	r7 = 0 
  1133d0:    28 c6       	r0 = r5 			  ## midi_synth.c:857:12
  1133d2:    09 80       	r1 = 1 			  ## midi_synth.c:857:12
  1133d4:    f8 e1 3f 86 	call -61242 <midi_inputdata : 10449e >			  ## midi_synth.c:857:12
  1133d8:    80 f3 01 7f 	r1 = r0 & 127 			  ## midi_synth.c:858:38
  1133dc:    3a a7       	r2 = r7 << 7 			  ## midi_synth.c:858:22
  1133de:    00 f0 17 02 	r7 = r1 | r2 			  ## midi_synth.c:858:28
  1133e2:    80 c9       	r0 = r0.b (s) 			  ## midi_synth.c:860:2
  1133e4:    e4 d3       	r4 = r4 + -1 			  ## midi_synth.c:859:12
  1133e6:    00 98       	cmp r0, 0			  ## midi_synth.c:860:2
  1133e8:    f3 1b       	ifs (nzcv < 0) goto -26 <.GJTIE412_0_0_+0x86 : 1133d0 >			  ## midi_synth.c:860:2
  1133ea:    70 c9       	r0 = r6.l 
  1133ec:    81 d2       	r1 = r0 + -6 			  ## midi_synth.c:862:2
  1133ee:    11 98       	cmp r1, 2			  ## midi_synth.c:862:2
  1133f0:    73 13       	if (nzcv < 0) goto 230 <.GJTIE412_1_1_+0x1A : 1134d8 >			  ## midi_synth.c:862:2
  1133f2:    c0 9a       	cmp r0, 88
  1133f4:    86 43       	r6 = [sp+ 56] 
  1133f6:    85 c6       	r5 = r8 
  1133f8:    00 fb a0 0b 	ifs (nzcv == 0) goto 372 <.GJTIE412_1_1_+0xB2 : 113570 >
  1133fc:    88 9a       	cmp r0, 81
  1133fe:    00 fb 71 10 	ifs (nzcv != 0) goto 526 <.GJTIE412_1_1_+0x152 : 113610 >
  113402:    1d 80       	r5 = 3 
  113404:    88 41       	r0 = [sp+ 152] 			  ## midi_synth.c:866:23
  113406:    19 80       	r1 = 3 			  ## midi_synth.c:866:23
  113408:    f8 e1 9f 84 	call -61294 <midi_inputdata : 10449e >			  ## midi_synth.c:866:23
  11340c:    01 80       	r1 = 0 
  11340e:    02 c9       	r2 = r0.b 			  ## midi_dec.c:705:48
  113410:    09 a8       	r1 = r1 << 8 			  ## midi_dec.c:705:34
  113412:    11 da       	r1 |= r2 			  ## midi_dec.c:705:40
  113414:    ed d3       	r5 = r5 + -1 			  ## midi_dec.c:703:16
  113416:    40 a8       	r0 = r0 >> 8 			  ## midi_dec.c:706:15
  113418:    ad 27       	if (r5 != 0) goto -12 <.GJTIE412_0_0_+0xC4 : 11340e >			  ## midi_dec.c:703:2
  11341a:    c7 43       	r7 = [sp+ 60] 
  11341c:    f8 55       	r0 = h[r7 + 30] 			  ## midi_synth.c:553:120
  11341e:    8d 40       	r5 = [sp+ 136] 			  ## midi_synth.c:553:120
  113420:    ea 4f       	r2 = [r5 + -4] 			  ## midi_synth.c:553:70
  113422:    12 a2       	r2 = r2 << 2 			  ## midi_synth.c:553:43
  113424:    20 e4 33 db 	r3 = [addr(3948)]  <.GCPI412_0 : 114394 >			  ## midi_synth.c:553:43
  113428:    20 e7 32 02 	r2 = [r3 + r2] 			  ## midi_synth.c:553:43
  11342c:    12 a7       	r2 = r2 << 7 			  ## midi_synth.c:553:83
  11342e:    c0 fc 20 00 	r0 = r2 / r0 (s) 			  ## midi_synth.c:553:118
  113432:    12 ea 09 3d 	r2 = 15625 			  ## midi_synth.c:553:31
  113436:    c0 fc 11 02 	r1 = r1 / r2 (s) 			  ## midi_synth.c:553:31
  11343a:    08 06       	r0 *= r1 			  ## midi_synth.c:553:40
  11343c:    38 6a       	[r7 + 32] = r0 			  ## midi_synth.c:553:23
  11343e:    e9 50       	r1 = h[r5 + 12] 			  ## midi_synth.c:554:2
  113440:    3d c6       	r5 = r7 			  ## midi_synth.c:554:2
  113442:    c1 06       	macc = r0 * r1 (s) 			  ## midi_synth.c:554:2
  113444:    c0 f9 00 0a 	r0 = macc >>> 10 			  ## midi_synth.c:554:2
  113448:    81 45       	r1 = [sp+ 88] 			  ## midi_synth.c:554:2
  11344a:    88 6f       	[r1 + -8] = r0 			  ## midi_synth.c:554:2
  11344c:    1f ed 4e fd 	r14 = r4 + -3 			  ## midi_synth.c:553:31
  113450:    76 0b       	goto 1772 <.GJTIE412_1_1_+0x680 : 113b3e >			  ## midi_synth.c:553:31
  113452:    81 c9       	r1 = r0.b (s) 			  ## midi_dec.c:1161:15
  113454:    f9 9f       	cmp r1, -1			  ## midi_dec.c:1161:11
  113456:    22 1d       	ifs (nzcv <= 0) goto 68 <.GCPI412_8+0x4 : 11349c >			  ## midi_dec.c:1161:11
  113458:    30 78       	b[r6 + 0] = r0 			  ## midi_dec.c:1167:30
  11345a:    08 80       	r0 = 1 			  ## midi_dec.c:1168:30
  11345c:    30 7a       	b[r6 + 1] = r0 			  ## midi_dec.c:1168:30
  11345e:    08 41       	r0 = [sp+ 144] 			  ## midi_dec.c:1169:14
  113460:    c9 41       	r1 = [sp+ 156] 			  ## midi_dec.c:1169:14
  113462:    00 e7 00 01 	r0 = b[r0 + r1] 			  ## midi_dec.c:1169:14
  113466:    1e 08       	goto 60 <.GCPI412_8+0xC : 1134a4 >			  ## midi_dec.c:1169:14
  113468:    1f ed 00 10 	r0 = r0 + -240 			  ## midi_synth.c:935:2
  11346c:    18 98       	cmp r0, 3			  ## midi_synth.c:935:2
  11346e:    00 fb 08 0a 	if (nzcv > 0) goto 320 <.GJTIE412_1_1_+0xF4 : 1135b2 >			  ## midi_synth.c:935:2
  113472:    01 a1       	r1 = r0 << 1 
  113474:    b9 01       	tbh [r1]


.GJTIL412_2_2_:
  113476:    a0 00     < 160 : 0xA0 >
  113478:    04 00     < 4 : 0x4 >
  11347a:    b4 00     < 180 : 0xB4 >
  11347c:    04 00     < 4 : 0x4 >
  11347e:    88 41       	r0 = [sp+ 152] 			  ## midi_synth.c:956:3
  113480:    09 80       	r1 = 1 			  ## midi_synth.c:956:3
  113482:    f8 e1 cf 80 	call -61416 <midi_inputdata : 10449e >			  ## midi_synth.c:956:3
  113486:    1f ed ee fe 	r14 = r14 + -2 			  ## midi_synth.c:957:25
  11348a:    59 0b       	goto 1714 <.GJTIE412_1_1_+0x680 : 113b3e >


.GCPI412_5:
  11348c:    00 00 ff ff     < 4294901760 : 0xFFFF0000 >

.GCPI412_6:
  113490:    34 9a 11 00     < 1153588 : 0x119A34 >

.GCPI412_7:
  113494:    1c 9a 11 00     < 1153564 : 0x119A1C >

.GCPI412_8:
  113498:    78 99 11 00     < 1153400 : 0x119978 >


.GCPI412_8:
  11349c:    09 41       	r1 = [sp+ 144] 			  ## midi_dec.c:1163:38
  11349e:    ca 41       	r2 = [sp+ 156] 			  ## midi_dec.c:1163:38
  1134a0:    40 e7 10 02 	b[r1 + r2] = r0 			  ## midi_dec.c:1163:38
  1134a4:    80 f3 01 f0 	r1 = r0 & 240 			  ## midi_synth.c:1587:25
  1134a8:    01 8c       	r1 += -128 			  ## midi_synth.c:1591:2
  1134aa:    49 a4       	r1 = r1 >> 4 			  ## midi_synth.c:1591:2
  1134ac:    31 98       	cmp r1, 6			  ## midi_synth.c:1591:2
  1134ae:    28 18       	if (nzcv > 0) goto 80 <.GJTIE412_1_1_+0x42 : 113500 >			  ## midi_synth.c:1591:2
  1134b0:    80 f3 0c 0f 	r12 = r0 & 15 			  ## midi_synth.c:1586:22
  1134b4:    b1 01       	tbb [r1]			  ## midi_synth.c:1586:22


.GJTIS412_1_1_:
  1134b6:    04     < 4 : 0x4 >
  1134b7:    27     < 39 : 0x27 >
  1134b8:    32     < 50 : 0x32 >
  1134b9:    3b     < 59 : 0x3B >
  1134ba:    45     < 69 : 0x45 >
  1134bb:    4d     < 77 : 0x4D >
  1134bc:    54     < 84 : 0x54 >
  1134bd:    00     < 0 : 0x0 >
  1134be:    68 c6       	r8 = r5 
  1134c0:    30 5a       	r0 = b[r6 + 1] 			  ## midi_synth.c:1880:20
  1134c2:    00 98       	cmp r0, 0			  ## midi_synth.c:1880:7
  1134c4:    00 fb 70 0a 	ifs (nzcv == 0) goto 334 <.GJTIE412_1_1_+0x158 : 113616 >			  ## midi_synth.c:1880:7
  1134c8:    37 58       	r7 = b[r6 + 0] 			  ## midi_synth.c:1882:24
  1134ca:    40 e8 6a 40 	b[r6 + 1] = r10 			  ## midi_synth.c:1883:26
  1134ce:    8d 41       	r5 = [sp+ 152] 			  ## midi_synth.c:1883:26
  1134d0:    a9 08       	goto 338 <.GJTIE412_1_1_+0x166 : 113624 >			  ## midi_synth.c:1883:26
  1134d2:    51 ea 00 00 	r9 = 0 
  1134d6:    63 0f       	goto -314 <.GJTIE412_0_0_+0x54 : 11339e >
  1134d8:    85 c6       	r5 = r8 
  1134da:    07 98       	cmp r7, 0
  1134dc:    00 fb 60 08 	ifs (nzcv == 0) goto 268 <.GJTIE412_1_1_+0x12E : 1135ec >
  1134e0:    06 80       	r6 = 0 
  1134e2:    0d 80       	r5 = 1 
  1134e4:    20 e9 08 12 	r8 = [sp+ 72] 
  1134e8:    88 41       	r0 = [sp+ 152] 			  ## midi_synth.c:907:19
  1134ea:    09 80       	r1 = 1 			  ## midi_synth.c:907:19
  1134ec:    f8 e1 7f 7d 	call -61522 <midi_inputdata : 10449e >			  ## midi_synth.c:907:19
  1134f0:    40 e7 80 06 	b[r8 + r6] = r0 			  ## midi_synth.c:907:17
  1134f4:    2e c9       	r6 = r5.b 			  ## midi_synth.c:905:19
  1134f6:    6d d0       	r5 = r5 + 1 			  ## midi_synth.c:905:3
  1134f8:    37 ce       	cmp r6, r7			  ## midi_synth.c:905:3
  1134fa:    f6 13       	if (nzcv < 0) goto -20 <.GJTIE412_1_1_+0x2A : 1134e8 >			  ## midi_synth.c:905:3
  1134fc:    c5 43       	r5 = [sp+ 60] 
  1134fe:    77 08       	goto 238 <.GJTIE412_1_1_+0x130 : 1135ee >
  113500:    66 c6       	r14 = r4 
  113502:    11 0b       	goto 1570 <.GJTIE412_1_1_+0x668 : 113b26 >
  113504:    2f c6       	r7 = r5 
  113506:    30 5a       	r0 = b[r6 + 1] 			  ## midi_synth.c:1595:20
  113508:    00 98       	cmp r0, 0			  ## midi_synth.c:1595:7
  11350a:    00 fb 30 0a 	ifs (nzcv == 0) goto 326 <.GJTIE412_1_1_+0x196 : 113654 >			  ## midi_synth.c:1595:7
  11350e:    30 58       	r0 = b[r6 + 0] 			  ## midi_synth.c:1597:24
  113510:    40 67       	[sp+ 116] = r0 			  ## midi_synth.c:1598:26
  113512:    40 e8 6a 40 	b[r6 + 1] = r10 			  ## midi_synth.c:1598:26
  113516:    8d 41       	r5 = [sp+ 152] 			  ## midi_synth.c:1598:26
  113518:    a4 08       	goto 328 <.GJTIE412_1_1_+0x1A4 : 113662 >			  ## midi_synth.c:1598:26
  11351a:    2f c6       	r7 = r5 
  11351c:    30 5a       	r0 = b[r6 + 1] 			  ## midi_synth.c:1940:20
  11351e:    00 98       	cmp r0, 0			  ## midi_synth.c:1940:7
  113520:    00 fb 80 10 	ifs (nzcv == 0) goto 528 <.GJTIE412_1_1_+0x276 : 113734 >			  ## midi_synth.c:1940:7
  113524:    40 e8 6a 40 	b[r6 + 1] = r10 			  ## midi_synth.c:1943:26
  113528:    8d 41       	r5 = [sp+ 152] 			  ## midi_synth.c:1943:26
  11352a:    0a 09       	goto 532 <.GJTIE412_1_1_+0x282 : 113740 >			  ## midi_synth.c:1943:26
  11352c:    30 5a       	r0 = b[r6 + 1] 			  ## midi_synth.c:1956:20
  11352e:    00 98       	cmp r0, 0			  ## midi_synth.c:1956:7
  113530:    00 fb e0 10 	ifs (nzcv == 0) goto 540 <.GJTIE412_1_1_+0x292 : 113750 >			  ## midi_synth.c:1956:7
  113534:    30 c6       	r0 = r6 
  113536:    06 58       	r6 = b[r0 + 0] 			  ## midi_synth.c:1958:11
  113538:    40 e8 0a 40 	b[r0 + 1] = r10 			  ## midi_synth.c:1959:26
  11353c:    8d 41       	r5 = [sp+ 152] 			  ## midi_synth.c:1959:26
  11353e:    0f 09       	goto 542 <.GJTIE412_1_1_+0x2A0 : 11375e >			  ## midi_synth.c:1959:26
  113540:    30 5a       	r0 = b[r6 + 1] 			  ## midi_synth.c:2038:20
  113542:    00 98       	cmp r0, 0			  ## midi_synth.c:2038:7
  113544:    00 fb 30 14 	ifs (nzcv == 0) goto 646 <.GJTIE412_1_1_+0x310 : 1137ce >			  ## midi_synth.c:2038:7
  113548:    30 58       	r0 = b[r6 + 0] 			  ## midi_synth.c:2040:11
  11354a:    40 e8 6a 40 	b[r6 + 1] = r10 			  ## midi_synth.c:2041:26
  11354e:    44 09       	goto 648 <.GJTIE412_1_1_+0x31A : 1137d8 >			  ## midi_synth.c:2041:26
  113550:    30 5a       	r0 = b[r6 + 1] 			  ## midi_synth.c:2082:20
  113552:    00 98       	cmp r0, 0			  ## midi_synth.c:2082:7
  113554:    00 fb f0 16 	ifs (nzcv == 0) goto 734 <.GJTIE412_1_1_+0x378 : 113836 >			  ## midi_synth.c:2082:7
  113558:    40 e8 6a 40 	b[r6 + 1] = r10 			  ## midi_synth.c:2085:26
  11355c:    71 09       	goto 738 <.GJTIE412_1_1_+0x382 : 113840 >			  ## midi_synth.c:2085:26
  11355e:    2f c6       	r7 = r5 
  113560:    30 5a       	r0 = b[r6 + 1] 			  ## midi_synth.c:1977:20
  113562:    00 98       	cmp r0, 0			  ## midi_synth.c:1977:7
  113564:    00 fb f0 16 	ifs (nzcv == 0) goto 734 <.GJTIE412_1_1_+0x388 : 113846 >			  ## midi_synth.c:1977:7
  113568:    40 e8 6a 40 	b[r6 + 1] = r10 			  ## midi_synth.c:1980:26
  11356c:    8d 41       	r5 = [sp+ 152] 			  ## midi_synth.c:1980:26
  11356e:    71 09       	goto 738 <.GJTIE412_1_1_+0x394 : 113852 >			  ## midi_synth.c:1980:26
  113570:    88 41       	r0 = [sp+ 152] 			  ## midi_synth.c:872:10
  113572:    21 80       	r1 = 4 			  ## midi_synth.c:872:10
  113574:    f8 e1 3f 79 	call -61658 <midi_inputdata : 10449e >			  ## midi_synth.c:872:10
  113578:    85 45       	r5 = [sp+ 88] 
  11357a:    a8 78       	b[r5 + 8] = r0 			  ## midi_synth.c:873:30
  11357c:    01 f6 00 08 	r0 = uextra(r0, p:8, l:8) 			  ## midi_synth.c:875:43
  113580:    09 80       	r1 = 1 			  ## midi_synth.c:875:34
  113582:    00 f7 10 00 	r0 = r1 << r0 			  ## midi_synth.c:875:34
  113586:    e8 78       	b[r5 + 12] = r0 			  ## midi_synth.c:875:30
  113588:    41 43       	r1 = [sp+ 52] 			  ## midi_synth.c:875:30
  11358a:    48 58       	r0 = b[r1 + 4] 			  ## midi_synth.c:878:20
  11358c:    1f ed 4e fc 	r14 = r4 + -4 			  ## midi_synth.c:878:20
  113590:    e0 20       	if (r0 == 0) goto 28 <.GJTIE412_1_1_+0xF0 : 1135ae >			  ## midi_synth.c:878:20
  113592:    40 e8 1a 01 	b[r1 + 4] = r10 			  ## midi_synth.c:880:31
  113596:    68 58       	r0 = b[r5 + 4] 			  ## midi_synth.c:884:21
  113598:    30 20       	if (r0 == 0) goto 6 <.GJTIE412_1_1_+0xE2 : 1135a0 >			  ## midi_synth.c:884:21
  11359a:    00 e5 51 08 	r1, r0 = d[r5 + 32] 			  ## midi_synth.c:886:69
  11359e:    a9 01       	call r1			  ## midi_synth.c:886:5
  1135a0:    a8 5e       	r0 = b[r5 + 11] 			  ## midi_synth.c:890:21
  1135a2:    50 20       	if (r0 == 0) goto 10 <.GJTIE412_1_1_+0xF0 : 1135ae >			  ## midi_synth.c:890:21
  1135a4:    ea 58       	r2 = b[r5 + 12] 			  ## midi_synth.c:892:5
  1135a6:    a9 58       	r1 = b[r5 + 8] 			  ## midi_synth.c:892:5
  1135a8:    00 e5 53 0a 	r3, r0 = d[r5 + 40] 			  ## midi_synth.c:892:64
  1135ac:    ab 01       	call r3			  ## midi_synth.c:892:5
  1135ae:    c5 43       	r5 = [sp+ 60] 
  1135b0:    c6 0a       	goto 1420 <.GJTIE412_1_1_+0x680 : 113b3e >
  1135b2:    66 c6       	r14 = r4 
  1135b4:    c4 0a       	goto 1416 <.GJTIE412_1_1_+0x680 : 113b3e >
  1135b6:    05 80       	r5 = 0 
  1135b8:    8e 41       	r6 = [sp+ 152] 
  1135ba:    30 c6       	r0 = r6 			  ## midi_synth.c:942:14
  1135bc:    09 80       	r1 = 1 			  ## midi_synth.c:942:14
  1135be:    f8 e1 ef 76 	call -61732 <midi_inputdata : 10449e >			  ## midi_synth.c:942:14
  1135c2:    80 f3 01 7f 	r1 = r0 & 127 			  ## midi_synth.c:943:40
  1135c6:    2a a7       	r2 = r5 << 7 			  ## midi_synth.c:943:24
  1135c8:    00 f0 15 02 	r5 = r1 | r2 			  ## midi_synth.c:943:30
  1135cc:    80 c9       	r0 = r0.b (s) 			  ## midi_synth.c:945:4
  1135ce:    e4 d3       	r4 = r4 + -1 			  ## midi_synth.c:944:27
  1135d0:    00 98       	cmp r0, 0			  ## midi_synth.c:945:4
  1135d2:    f3 1b       	ifs (nzcv < 0) goto -26 <.GJTIE412_1_1_+0xFC : 1135ba >			  ## midi_synth.c:945:4
  1135d4:    40 ee 4e 05 	r14 = r4 - r5 			  ## midi_synth.c:949:3
  1135d8:    c5 43       	r5 = [sp+ 60] 			  ## midi_synth.c:949:3
  1135da:    86 43       	r6 = [sp+ 56] 
  1135dc:    b0 0a       	goto 1376 <.GJTIE412_1_1_+0x680 : 113b3e >
  1135de:    88 41       	r0 = [sp+ 152] 			  ## midi_synth.c:951:3
  1135e0:    11 80       	r1 = 2 			  ## midi_synth.c:951:3
  1135e2:    f8 e1 cf 75 	call -61768 <midi_inputdata : 10449e >			  ## midi_synth.c:951:3
  1135e6:    1f ed ee fd 	r14 = r14 + -3 			  ## midi_synth.c:952:25
  1135ea:    a9 0a       	goto 1362 <.GJTIE412_1_1_+0x680 : 113b3e >
  1135ec:    07 80       	r7 = 0 
  1135ee:    86 43       	r6 = [sp+ 56] 
  1135f0:    80 41       	r0 = [sp+ 24] 			  ## midi_synth.c:909:20
  1135f2:    80 5f       	r0 = b[r0 + -5] 			  ## midi_synth.c:909:20
  1135f4:    60 20       	if (r0 == 0) goto 12 <.GJTIE412_1_1_+0x144 : 113602 >			  ## midi_synth.c:909:20
  1135f6:    01 41       	r1 = [sp+ 16] 
  1135f8:    00 e5 13 0b 	r3, r0 = d[r1 + 44] 			  ## midi_synth.c:911:63
  1135fc:    3a c9       	r2 = r7.b 			  ## midi_synth.c:911:4
  1135fe:    81 44       	r1 = [sp+ 72] 			  ## midi_synth.c:911:4
  113600:    ab 01       	call r3			  ## midi_synth.c:911:4
  113602:    80 45       	r0 = [sp+ 88] 			  ## midi_synth.c:914:20
  113604:    80 5c       	r0 = b[r0 + 10] 			  ## midi_synth.c:914:20
  113606:    40 20       	if (r0 == 0) goto 8 <.GJTIE412_1_1_+0x152 : 113610 >			  ## midi_synth.c:914:20
  113608:    81 47       	r1 = [sp+ 120] 
  11360a:    08 58       	r0 = b[r1 + 0] 			  ## midi_synth.c:916:28
  11360c:    40 d0       	r0 = r0 + 1 			  ## midi_synth.c:916:28
  11360e:    08 78       	b[r1 + 0] = r0 			  ## midi_synth.c:916:28
  113610:    40 ee 4e 07 	r14 = r4 - r7 
  113614:    94 0a       	goto 1320 <.GJTIE412_1_1_+0x680 : 113b3e >
  113616:    8d 41       	r5 = [sp+ 152] 
  113618:    28 c6       	r0 = r5 			  ## midi_synth.c:1888:11
  11361a:    09 80       	r1 = 1 			  ## midi_synth.c:1888:11
  11361c:    f8 e1 ff 73 	call -61826 <midi_inputdata : 10449e >			  ## midi_synth.c:1888:11
  113620:    07 c6       	r7 = r0 			  ## midi_synth.c:1888:11
  113622:    66 c6       	r14 = r4 			  ## midi_synth.c:1888:11
  113624:    28 c6       	r0 = r5 			  ## midi_synth.c:1890:10
  113626:    09 80       	r1 = 1 			  ## midi_synth.c:1890:10
  113628:    f8 e1 9f 73 	call -61838 <midi_inputdata : 10449e >			  ## midi_synth.c:1890:10
  11362c:    80 45       	r0 = [sp+ 88] 			  ## midi_synth.c:1899:20
  11362e:    00 4f       	r0 = [r0 + -16] 			  ## midi_synth.c:1899:20
  113630:    1f ed ee fe 	r14 = r14 + -2 			  ## midi_synth.c:1891:13
  113634:    08 98       	cmp r0, 1			  ## midi_synth.c:1899:7
  113636:    0c 11       	ifs (nzcv != 0) goto 24 <.GJTIE412_1_1_+0x192 : 113650 >			  ## midi_synth.c:1899:7
  113638:    c0 46       	r0 = [sp+ 108] 			  ## midi_synth.c:1901:22
  11363a:    80 58       	r0 = b[r0 + 8] 			  ## midi_synth.c:1901:22
  11363c:    10 98       	cmp r0, 2			  ## midi_synth.c:1901:57
  11363e:    08 11       	ifs (nzcv != 0) goto 16 <.GJTIE412_1_1_+0x192 : 113650 >			  ## midi_synth.c:1901:57
  113640:    88 40       	r0 = [sp+ 136] 			  ## midi_synth.c:1901:77
  113642:    c0 5e       	r0 = b[r0 + 15] 			  ## midi_synth.c:1901:77
  113644:    c1 47       	r1 = [sp+ 124] 			  ## midi_synth.c:1901:8
  113646:    08 ce       	cmp r1, r0			  ## midi_synth.c:1901:8
  113648:    85 c6       	r5 = r8 			  ## midi_synth.c:1901:8
  11364a:    00 fb 50 13 	ifs (nzcv == 0) goto 618 <.GJTIE412_1_1_+0x3FA : 1138b8 >			  ## midi_synth.c:1901:8
  11364e:    6b 0a       	goto 1238 <.GJTIE412_1_1_+0x668 : 113b26 >			  ## midi_synth.c:1901:8
  113650:    85 c6       	r5 = r8 
  113652:    32 09       	goto 612 <.GJTIE412_1_1_+0x3FA : 1138b8 >
  113654:    8d 41       	r5 = [sp+ 152] 
  113656:    28 c6       	r0 = r5 			  ## midi_synth.c:1603:11
  113658:    09 80       	r1 = 1 			  ## midi_synth.c:1603:11
  11365a:    f8 e1 0f 72 	call -61888 <midi_inputdata : 10449e >			  ## midi_synth.c:1603:11
  11365e:    40 67       	[sp+ 116] = r0 			  ## midi_synth.c:1603:11
  113660:    66 c6       	r14 = r4 			  ## midi_synth.c:1603:11
  113662:    28 c6       	r0 = r5 			  ## midi_synth.c:1605:11
  113664:    09 80       	r1 = 1 			  ## midi_synth.c:1605:11
  113666:    f8 e1 af 71 	call -61900 <midi_inputdata : 10449e >			  ## midi_synth.c:1605:11
  11366a:    89 40       	r1 = [sp+ 136] 			  ## midi_synth.c:1608:20
  11366c:    c9 5c       	r1 = b[r1 + 14] 			  ## midi_synth.c:1608:20
  11366e:    59 20       	if (r1 != 0) goto 10 <.GJTIE412_1_1_+0x1BC : 11367a >
  113670:    8a 40       	r2 = [sp+ 136] 
  113672:    c9 41       	r1 = [sp+ 156] 
  113674:    d1 7e       	b[r2 + 15] = r1 
  113676:    09 80       	r1 = 1 			  ## midi_synth.c:1618:27
  113678:    d1 7c       	b[r2 + 14] = r1 			  ## midi_synth.c:1618:27
  11367a:    1f ed ee fe 	r14 = r14 + -2 			  ## midi_synth.c:1606:13
  11367e:    81 45       	r1 = [sp+ 88] 			  ## midi_synth.c:1627:20
  113680:    09 4f       	r1 = [r1 + -16] 			  ## midi_synth.c:1627:20
  113682:    09 98       	cmp r1, 1			  ## midi_synth.c:1627:7
  113684:    3d c6       	r5 = r7 			  ## midi_synth.c:1627:7
  113686:    0a 11       	ifs (nzcv != 0) goto 20 <.GJTIE412_1_1_+0x1DE : 11369c >			  ## midi_synth.c:1627:7
  113688:    c1 46       	r1 = [sp+ 108] 			  ## midi_synth.c:1629:22
  11368a:    89 58       	r1 = b[r1 + 8] 			  ## midi_synth.c:1629:22
  11368c:    11 98       	cmp r1, 2			  ## midi_synth.c:1629:57
  11368e:    06 11       	ifs (nzcv != 0) goto 12 <.GJTIE412_1_1_+0x1DE : 11369c >			  ## midi_synth.c:1629:57
  113690:    89 40       	r1 = [sp+ 136] 			  ## midi_synth.c:1629:77
  113692:    c9 5e       	r1 = b[r1 + 15] 			  ## midi_synth.c:1629:77
  113694:    c2 47       	r2 = [sp+ 124] 			  ## midi_synth.c:1629:8
  113696:    11 ce       	cmp r2, r1			  ## midi_synth.c:1629:8
  113698:    00 fb 91 20 	ifs (nzcv != 0) goto 1042 <.GJTIE412_1_1_+0x5F0 : 113aae >			  ## midi_synth.c:1629:8
  11369c:    80 f3 07 7f 	r7 = r0 & 127 			  ## midi_synth.c:1605:10
  1136a0:    00 fb 90 10 	ifs (nzcv == 0) goto 530 <.GJTIE412_1_1_+0x3F8 : 1138b6 >
  1136a4:    00 45       	r0 = [sp+ 80] 			  ## midi_synth.c:1666:33
  1136a6:    90 e8 00 00 	r0 = h[r0 + 0] (s) 			  ## midi_synth.c:1666:33
  1136aa:    00 98       	cmp r0, 0			  ## midi_synth.c:1666:4
  1136ac:    00 fb ed 16 	ifs (nzcv <= 0) goto 732 <.GJTIE412_1_1_+0x4CE : 11398c >			  ## midi_synth.c:1666:4
  1136b0:    87 66       	[sp+ 104] = r7 
  1136b2:    40 47       	r0 = [sp+ 116] 
  1136b4:    43 c9       	r3 = r0.l 
  1136b6:    06 80       	r6 = 0 
  1136b8:    55 ea 00 00 	r13 = 0 
  1136bc:    05 80       	r5 = 0 
  1136be:    04 45       	r4 = [sp+ 80] 
  1136c0:    1f c6       	r7 = r3 
  1136c2:    c8 40       	r0 = [sp+ 140] 			  ## midi_synth.c:1668:23
  1136c4:    00 48       	r0 = [r0 + 0] 			  ## midi_synth.c:1668:23
  1136c6:    80 f1 00 05 	r0 = r0 & setbit(r5) 			  ## midi_synth.c:1668:38
  1136ca:    22 10       	ifs (nzcv == 0) goto 68 <.GJTIE412_1_1_+0x252 : 113710 >			  ## midi_synth.c:1668:9
  1136cc:    20 e8 80 07 	r0 = [r8 + 28] 			  ## midi_synth.c:1670:44
  1136d0:    81 d5       	r1 = r0 + r6 			  ## midi_synth.c:1671:24
  1136d2:    80 45       	r0 = [sp+ 88] 			  ## midi_synth.c:1671:24
  1136d4:    00 4f       	r0 = [r0 + -16] 			  ## midi_synth.c:1671:24
  1136d6:    08 98       	cmp r0, 1			  ## midi_synth.c:1671:59
  1136d8:    0f 11       	ifs (nzcv != 0) goto 30 <.GJTIE412_1_1_+0x23A : 1136f8 >			  ## midi_synth.c:1671:59
  1136da:    c0 46       	r0 = [sp+ 108] 			  ## midi_synth.c:1671:76
  1136dc:    80 58       	r0 = b[r0 + 8] 			  ## midi_synth.c:1671:76
  1136de:    10 98       	cmp r0, 2			  ## midi_synth.c:1671:10
  1136e0:    0b 11       	ifs (nzcv != 0) goto 22 <.GJTIE412_1_1_+0x23A : 1136f8 >			  ## midi_synth.c:1671:10
  1136e2:    80 47       	r0 = [sp+ 120] 			  ## midi_synth.c:1678:25
  1136e4:    00 5a       	r0 = b[r0 + 1] 			  ## midi_synth.c:1678:25
  1136e6:    b0 21       	if (r0 == 0) goto 54 <.GJTIE412_1_1_+0x260 : 11371e >			  ## midi_synth.c:1678:25
  1136e8:    10 ea b8 00 	r0 = 184 
  1136ec:    00 e7 10 00 	r0 = b[r1 + r0] 
  1136f0:    c2 47       	r2 = [sp+ 124] 			  ## midi_synth.c:1678:11
  1136f2:    02 ce       	cmp r0, r2			  ## midi_synth.c:1678:11
  1136f4:    07 10       	ifs (nzcv == 0) goto 14 <.GJTIE412_1_1_+0x246 : 113704 >			  ## midi_synth.c:1678:11
  1136f6:    13 08       	goto 38 <.GJTIE412_1_1_+0x260 : 11371e >			  ## midi_synth.c:1678:11
  1136f8:    48 58       	r0 = b[r1 + 4] 			  ## midi_synth.c:1683:27
  1136fa:    44 ce       	cmp r0, r12			  ## midi_synth.c:1683:40
  1136fc:    10 11       	ifs (nzcv != 0) goto 32 <.GJTIE412_1_1_+0x260 : 11371e >			  ## midi_synth.c:1683:40
  1136fe:    48 5a       	r0 = b[r1 + 5] 			  ## midi_synth.c:1683:44
  113700:    03 ce       	cmp r0, r3			  ## midi_synth.c:1683:15
  113702:    0d 11       	ifs (nzcv != 0) goto 26 <.GJTIE412_1_1_+0x260 : 11371e >			  ## midi_synth.c:1683:15
  113704:    88 41       	r0 = [sp+ 152] 
  113706:    a2 c6       	r2 = r12 
  113708:    fb e1 1f 10 	call -40446 <control_stop : 10990e >
  11370c:    3b c6       	r3 = r7 
  11370e:    07 08       	goto 14 <.GJTIE412_1_1_+0x260 : 11371e >
  113710:    80 ef d0 00 	cmp r13, 0			  ## midi_synth.c:1690:10
  113714:    02 03       	ifs (nzcv == 0) {			  ## midi_synth.c:1692:33
  113716:    c0 43       		r0 = [sp+ 60] 			  ## midi_synth.c:1692:33
  113718:    45 6a       		[r0 + 36] = r5 			  ## midi_synth.c:1692:33
  11371a:    55 ea 01 00 		r13 = 1 
                               	}
  11371e:    00 ed 66 e0 	r6 = r6 + 224 			  ## midi_synth.c:1666:18
  113722:    6d d0       	r5 = r5 + 1 			  ## midi_synth.c:1666:51
  113724:    90 e8 40 00 	r0 = h[r4 + 0] (s) 			  ## midi_synth.c:1666:20
  113728:    28 ce       	cmp r5, r0			  ## midi_synth.c:1666:4
  11372a:    cb 1b       	ifs (nzcv < 0) goto -106 <.GJTIE412_1_1_+0x204 : 1136c2 >			  ## midi_synth.c:1666:4
  11372c:    c5 43       	r5 = [sp+ 60] 
  11372e:    86 43       	r6 = [sp+ 56] 
  113730:    87 46       	r7 = [sp+ 104] 
  113732:    30 09       	goto 608 <.GJTIE412_1_1_+0x4D6 : 113994 >
  113734:    8d 41       	r5 = [sp+ 152] 
  113736:    28 c6       	r0 = r5 			  ## midi_synth.c:1948:11
  113738:    09 80       	r1 = 1 			  ## midi_synth.c:1948:11
  11373a:    f8 e1 0f 6b 	call -62112 <midi_inputdata : 10449e >			  ## midi_synth.c:1948:11
  11373e:    66 c6       	r14 = r4 			  ## midi_synth.c:1948:11
  113740:    28 c6       	r0 = r5 			  ## midi_synth.c:1950:10
  113742:    09 80       	r1 = 1 			  ## midi_synth.c:1950:10
  113744:    f8 e1 bf 6a 	call -62122 <midi_inputdata : 10449e >			  ## midi_synth.c:1950:10
  113748:    1f ed ee fe 	r14 = r14 + -2 			  ## midi_synth.c:1951:13
  11374c:    3d c6       	r5 = r7 
  11374e:    eb 09       	goto 982 <.GJTIE412_1_1_+0x668 : 113b26 >
  113750:    8d 41       	r5 = [sp+ 152] 
  113752:    28 c6       	r0 = r5 			  ## midi_synth.c:1964:11
  113754:    09 80       	r1 = 1 			  ## midi_synth.c:1964:11
  113756:    f8 e1 2f 6a 	call -62140 <midi_inputdata : 10449e >			  ## midi_synth.c:1964:11
  11375a:    06 c6       	r6 = r0 			  ## midi_synth.c:1964:11
  11375c:    66 c6       	r14 = r4 			  ## midi_synth.c:1964:11
  11375e:    04 45       	r4 = [sp+ 80] 
  113760:    28 c6       	r0 = r5 			  ## midi_synth.c:1966:10
  113762:    09 80       	r1 = 1 			  ## midi_synth.c:1966:10
  113764:    f8 e1 bf 69 	call -62154 <midi_inputdata : 10449e >			  ## midi_synth.c:1966:10
  113768:    40 ec 68 00 	r8 = r6.l 			  ## midi_synth.c:1471:2
  11376c:    80 ef 80 0b 	cmp r8, 11			  ## midi_synth.c:1471:2
  113770:    86 43       	r6 = [sp+ 56] 			  ## midi_synth.c:1471:2
  113772:    08 19       	if (nzcv <= 0) goto 16 <.GJTIE412_1_1_+0x2C6 : 113784 >			  ## midi_synth.c:1471:2
  113774:    1f ed 82 c0 	r2 = r8 + -64 
  113778:    1a 98       	cmp r2, 3
  11377a:    00 fb 18 1d 	if (nzcv > 0) goto 930 <.GJTIE412_1_1_+0x662 : 113b20 >
  11377e:    0a 98       	cmp r2, 1
  113780:    07 11       	ifs (nzcv != 0) goto 14 <.GJTIE412_1_1_+0x2D2 : 113790 >
  113782:    ce 09       	goto 924 <.GJTIE412_1_1_+0x662 : 113b20 >
  113784:    09 80       	r1 = 1 
  113786:    00 f7 12 08 	r2 = r1 << r8 
  11378a:    0e f4 20 48 	tst r2, 3200
  11378e:    f2 10       	ifs (nzcv == 0) goto -28 <.GJTIE412_1_1_+0x2B6 : 113774 >
  113790:    90 e8 42 00 	r2 = h[r4 + 0] (s) 			  ## midi_synth.c:1479:40
  113794:    0a 98       	cmp r2, 1			  ## midi_synth.c:1479:3
  113796:    00 fb 6b 0b 	ifs (nzcv < 0) goto 364 <.GJTIE412_1_1_+0x448 : 113906 >			  ## midi_synth.c:1479:3
  11379a:    20 e8 d3 00 	r3 = [r13 + 0] 
  11379e:    1b d1       	r3 = r3 + 4 			  ## midi_synth.c:1479:3
  1137a0:    05 80       	r5 = 0 			  ## midi_synth.c:1479:3
  1137a2:    04 80       	r4 = 0 			  ## midi_synth.c:1479:3
  1137a4:    06 80       	r6 = 0 			  ## midi_synth.c:1479:3
  1137a6:    19 58       	r1 = b[r3 + 0] 			  ## midi_synth.c:1481:51
  1137a8:    4c ce       	cmp r1, r12			  ## midi_synth.c:1481:8
  1137aa:    0a 11       	ifs (nzcv != 0) goto 20 <.GJTIE412_1_1_+0x302 : 1137c0 >			  ## midi_synth.c:1481:8
  1137ac:    c9 40       	r1 = [sp+ 140] 			  ## midi_synth.c:1483:22
  1137ae:    09 48       	r1 = [r1 + 0] 			  ## midi_synth.c:1483:22
  1137b0:    80 f1 11 06 	r1 = r1 & setbit(r6) 			  ## midi_synth.c:1483:37
  1137b4:    05 10       	ifs (nzcv == 0) goto 10 <.GJTIE412_1_1_+0x302 : 1137c0 >			  ## midi_synth.c:1483:37
  1137b6:    00 ed f1 a8 	r1 = sp + 168 
  1137ba:    40 e7 15 04 	b[r1 + r4] = r5 			  ## midi_synth.c:1485:22
  1137be:    64 d0       	r4 = r4 + 1 			  ## midi_synth.c:1485:18
  1137c0:    00 ed 33 e0 	r3 = r3 + 224 			  ## midi_synth.c:1479:25
  1137c4:    6d d0       	r5 = r5 + 1 			  ## midi_synth.c:1479:25
  1137c6:    76 d0       	r6 = r6 + 1 			  ## midi_synth.c:1479:62
  1137c8:    16 ce       	cmp r2, r6			  ## midi_synth.c:1479:3
  1137ca:    ed 11       	ifs (nzcv != 0) goto -38 <.GJTIE412_1_1_+0x2E8 : 1137a6 >			  ## midi_synth.c:1479:3
  1137cc:    9d 08       	goto 314 <.GJTIE412_1_1_+0x44A : 113908 >			  ## midi_synth.c:1479:3
  1137ce:    88 41       	r0 = [sp+ 152] 			  ## midi_synth.c:2046:11
  1137d0:    09 80       	r1 = 1 			  ## midi_synth.c:2046:11
  1137d2:    f8 e1 4f 66 	call -62264 <midi_inputdata : 10449e >			  ## midi_synth.c:2046:11
  1137d6:    66 c6       	r14 = r4 			  ## midi_synth.c:2046:11
  1137d8:    41 c9       	r1 = r0.l 			  ## midi_synth.c:2057:16
  1137da:    00 ed 10 80 	r0 = r1 + 128 			  ## midi_synth.c:2060:17
  1137de:    80 ef c0 09 	cmp r12, 9			  ## midi_synth.c:2058:8
  1137e2:    10 03       	ifs (nzcv != 0) {			  ## midi_synth.c:2058:8
  1137e4:    08 c6       		r0 = r1 
                               	}			  ## midi_synth.c:2058:8
  1137e6:    8b 41       	r3 = [sp+ 152] 
  1137e8:    00 ee 31 0c 	r1 = r3 + r12 			  ## midi_synth.c:2063:8
  1137ec:    12 ea 38 04 	r2 = 1080 			  ## midi_synth.c:2063:8
  1137f0:    00 e7 12 02 	r2 = b[r1 + r2] 			  ## midi_synth.c:2063:8
  1137f4:    1f ed ee ff 	r14 = r14 + -1 			  ## midi_synth.c:2049:12
  1137f8:    10 ce       	cmp r2, r0			  ## midi_synth.c:2063:8
  1137fa:    00 fb 40 19 	ifs (nzcv == 0) goto 808 <.GJTIE412_1_1_+0x668 : 113b26 >			  ## midi_synth.c:2063:8
  1137fe:    04 ed 11 38 	r1 = r1 + 1080 			  ## midi_synth.c:2063:8
  113802:    08 78       	b[r1 + 0] = r0 			  ## midi_synth.c:2066:32
  113804:    69 49       	r1 = [r5 + 20] 			  ## midi_synth.c:2071:56
  113806:    ea 48       	r2 = [r5 + 12] 			  ## midi_synth.c:2070:31
  113808:    80 d4       	r0 = r0 + r2 			  ## midi_synth.c:2070:31
  11380a:    00 5c       	r0 = b[r0 + 2] 			  ## midi_synth.c:2071:43
  11380c:    02 a1       	r2 = r0 << 1 			  ## midi_synth.c:2071:43
  11380e:    89 d4       	r1 = r1 + r2 			  ## midi_synth.c:2071:43
  113810:    09 50       	r1 = h[r1 + 0] 			  ## midi_synth.c:2071:43
  113812:    20 f7 c2 01 	r2 = r12 << 1 			  ## midi_synth.c:2071:5
  113816:    d2 d4       	r2 = r2 + r3 			  ## midi_synth.c:2071:5
  113818:    14 ea 18 04 	r4 = 1048 			  ## midi_synth.c:2071:41
  11381c:    50 e7 21 04 	h[r2 + r4] = r1 			  ## midi_synth.c:2071:41
  113820:    a9 48       	r1 = [r5 + 8] 			  ## midi_synth.c:2072:61
  113822:    00 a7       	r0 = r0 << 7 			  ## midi_synth.c:2072:86
  113824:    40 d4       	r0 = r0 + r1 			  ## midi_synth.c:2072:48
  113826:    20 f7 c1 02 	r1 = r12 << 2 			  ## midi_synth.c:2072:5
  11382a:    c9 d4       	r1 = r1 + r3 			  ## midi_synth.c:2072:5
  11382c:    12 ea d8 03 	r2 = 984 			  ## midi_synth.c:2072:37
  113830:    60 e7 10 02 	[r1 + r2] = r0 			  ## midi_synth.c:2072:37
  113834:    78 09       	goto 752 <.GJTIE412_1_1_+0x668 : 113b26 >			  ## midi_synth.c:2072:37
  113836:    88 41       	r0 = [sp+ 152] 			  ## midi_synth.c:2090:11
  113838:    09 80       	r1 = 1 			  ## midi_synth.c:2090:11
  11383a:    f8 e1 0f 63 	call -62368 <midi_inputdata : 10449e >			  ## midi_synth.c:2090:11
  11383e:    66 c6       	r14 = r4 			  ## midi_synth.c:2090:11
  113840:    1f ed ee ff 	r14 = r14 + -1 			  ## midi_synth.c:2093:12
  113844:    70 09       	goto 736 <.GJTIE412_1_1_+0x668 : 113b26 >
  113846:    8d 41       	r5 = [sp+ 152] 
  113848:    28 c6       	r0 = r5 			  ## midi_synth.c:1985:11
  11384a:    09 80       	r1 = 1 			  ## midi_synth.c:1985:11
  11384c:    f8 e1 7f 62 	call -62386 <midi_inputdata : 10449e >			  ## midi_synth.c:1985:11
  113850:    66 c6       	r14 = r4 			  ## midi_synth.c:1985:11
  113852:    28 c6       	r0 = r5 			  ## midi_synth.c:1988:10
  113854:    09 80       	r1 = 1 			  ## midi_synth.c:1988:10
  113856:    f8 e1 2f 62 	call -62396 <midi_inputdata : 10449e >			  ## midi_synth.c:1988:10
  11385a:    28 c6       	r0 = r5 			  ## midi_synth.c:2015:18
  11385c:    11 80       	r1 = 2 			  ## midi_synth.c:2015:18
  11385e:    f8 e1 ef 61 	call -62404 <midi_inputdata : 10449e >			  ## midi_synth.c:2015:18
  113862:    20 f7 c1 01 	r1 = r12 << 1 			  ## midi_synth.c:2016:4
  113866:    49 d5       	r1 = r1 + r5 			  ## midi_synth.c:2016:4
  113868:    12 ea 08 06 	r2 = 1544 			  ## midi_synth.c:2016:34
  11386c:    50 e7 10 02 	h[r1 + r2] = r0 			  ## midi_synth.c:2016:34
  113870:    3d c6       	r5 = r7 
  113872:    90 e8 51 06 	r1 = h[r5 + 24] (s) 			  ## midi_synth.c:2019:41
  113876:    1f ed ee fe 	r14 = r14 + -2 			  ## midi_synth.c:1989:13
  11387a:    09 98       	cmp r1, 1			  ## midi_synth.c:2019:4
  11387c:    00 fb 3b 15 	ifs (nzcv < 0) goto 678 <.GJTIE412_1_1_+0x668 : 113b26 >			  ## midi_synth.c:2019:4
  113880:    40 c9       	r0 = r0.l 
  113882:    ca 40       	r2 = [sp+ 140] 
  113884:    12 48       	r2 = [r2 + 0] 
  113886:    04 80       	r4 = 0 
  113888:    0d 80       	r5 = 1 
  11388a:    2b c6       	r3 = r5 
  11388c:    80 f1 25 04 	r5 = r2 & setbit(r4) 			  ## midi_synth.c:2021:37
  113890:    0d 10       	ifs (nzcv == 0) goto 26 <.GJTIE412_1_1_+0x3EE : 1138ac >			  ## midi_synth.c:2021:37
  113892:    00 fc 44 e0 	r4 = r4 * 224 			  ## midi_synth.c:2023:53
  113896:    20 e8 d5 00 	r5 = [r13 + 0] 			  ## midi_synth.c:2023:23
  11389a:    64 d5       	r4 = r4 + r5 			  ## midi_synth.c:2023:53
  11389c:    65 58       	r5 = b[r4 + 4] 			  ## midi_synth.c:2023:53
  11389e:    6c ce       	cmp r5, r12			  ## midi_synth.c:2023:10
  1138a0:    03 03       	ifs (nzcv == 0) {			  ## midi_synth.c:2026:46
  1138a2:    20 e8 45 12 		r5 = [r4 + 72] 			  ## midi_synth.c:2026:46
  1138a6:    05 06       		r5 *= r0 			  ## midi_synth.c:2026:56
  1138a8:    ed a8       		r5 = r5 >>> 8 			  ## midi_synth.c:2026:67
  1138aa:    25 69       		[r4 + 16] = r5 
                               	}			  ## midi_synth.c:2026:33
  1138ac:    5d d0       	r5 = r3 + 1 			  ## midi_synth.c:2019:4
  1138ae:    1c c9       	r4 = r3.b 			  ## midi_synth.c:2019:20
  1138b0:    21 ce       	cmp r4, r1			  ## midi_synth.c:2019:4
  1138b2:    eb 1b       	ifs (nzcv < 0) goto -42 <.GJTIE412_1_1_+0x3CC : 11388a >			  ## midi_synth.c:2019:4
  1138b4:    37 09       	goto 622 <.GJTIE412_1_1_+0x666 : 113b24 >			  ## midi_synth.c:2019:4
  1138b6:    47 47       	r7 = [sp+ 116] 
  1138b8:    00 45       	r0 = [sp+ 80] 			  ## midi_synth.c:1920:33
  1138ba:    90 e8 00 00 	r0 = h[r0 + 0] (s) 			  ## midi_synth.c:1920:33
  1138be:    08 98       	cmp r0, 1			  ## midi_synth.c:1920:4
  1138c0:    00 fb 1b 13 	ifs (nzcv < 0) goto 610 <.GJTIE412_1_1_+0x668 : 113b26 >			  ## midi_synth.c:1920:4
  1138c4:    7c c9       	r4 = r7.l 
  1138c6:    05 80       	r5 = 0 
  1138c8:    06 80       	r6 = 0 
  1138ca:    07 45       	r7 = [sp+ 80] 
  1138cc:    c9 40       	r1 = [sp+ 140] 			  ## midi_synth.c:1922:22
  1138ce:    09 48       	r1 = [r1 + 0] 			  ## midi_synth.c:1922:22
  1138d0:    80 f1 11 06 	r1 = r1 & setbit(r6) 			  ## midi_synth.c:1922:37
  1138d4:    0f 10       	ifs (nzcv == 0) goto 30 <.GJTIE412_1_1_+0x436 : 1138f4 >			  ## midi_synth.c:1922:37
  1138d6:    20 e8 d1 00 	r1 = [r13 + 0] 			  ## midi_synth.c:1924:30
  1138da:    49 d5       	r1 = r1 + r5 			  ## midi_synth.c:1925:19
  1138dc:    4a 58       	r2 = b[r1 + 4] 			  ## midi_synth.c:1925:19
  1138de:    54 ce       	cmp r2, r12			  ## midi_synth.c:1925:32
  1138e0:    09 11       	ifs (nzcv != 0) goto 18 <.GJTIE412_1_1_+0x436 : 1138f4 >			  ## midi_synth.c:1925:32
  1138e2:    4a 5a       	r2 = b[r1 + 5] 			  ## midi_synth.c:1925:36
  1138e4:    14 ce       	cmp r2, r4			  ## midi_synth.c:1925:10
  1138e6:    06 11       	ifs (nzcv != 0) goto 12 <.GJTIE412_1_1_+0x436 : 1138f4 >			  ## midi_synth.c:1925:10
  1138e8:    88 41       	r0 = [sp+ 152] 			  ## midi_synth.c:1927:12
  1138ea:    a2 c6       	r2 = r12 			  ## midi_synth.c:1927:12
  1138ec:    fb e1 ff 00 	call -40930 <control_stop : 10990e >			  ## midi_synth.c:1927:12
  1138f0:    70 20       	if (r0 == 0) goto 14 <.GJTIE412_1_1_+0x442 : 113900 >			  ## midi_synth.c:1927:12
  1138f2:    38 50       	r0 = h[r7 + 0] 
  1138f4:    00 ed 55 e0 	r5 = r5 + 224 			  ## midi_synth.c:1920:18
  1138f8:    76 d0       	r6 = r6 + 1 			  ## midi_synth.c:1920:51
  1138fa:    c1 c9       	r1 = r0.l (s) 			  ## midi_synth.c:1920:20
  1138fc:    31 ce       	cmp r6, r1			  ## midi_synth.c:1920:4
  1138fe:    e6 1b       	ifs (nzcv < 0) goto -52 <.GJTIE412_1_1_+0x40E : 1138cc >			  ## midi_synth.c:1920:4
  113900:    c5 43       	r5 = [sp+ 60] 
  113902:    86 43       	r6 = [sp+ 56] 
  113904:    10 09       	goto 544 <.GJTIE412_1_1_+0x668 : 113b26 >
  113906:    04 80       	r4 = 0 
  113908:    80 ef 80 3f 	cmp r8, 63			  ## midi_synth.c:1513:2
  11390c:    8a 41       	r2 = [sp+ 152] 			  ## midi_synth.c:1513:2
  11390e:    14 1c       	ifs (nzcv > 0) goto 40 <.GJTIE412_1_1_+0x47A : 113938 >			  ## midi_synth.c:1513:2
  113910:    80 ef 80 07 	cmp r8, 7
  113914:    00 fb 00 0d 	ifs (nzcv == 0) goto 416 <.GJTIE412_1_1_+0x5FA : 113ab8 >
  113918:    80 ef 80 0a 	cmp r8, 10
  11391c:    86 43       	r6 = [sp+ 56] 
  11391e:    00 fb 60 0d 	ifs (nzcv == 0) goto 428 <.GJTIE412_1_1_+0x610 : 113ace >
  113922:    80 ef 80 0b 	cmp r8, 11
  113926:    00 fb b1 0f 	ifs (nzcv != 0) goto 502 <.GJTIE412_1_1_+0x662 : 113b20 >
  11392a:    00 fc c1 07 	r1 = r12 * 7 			  ## midi_synth.c:1543:3
  11392e:    8a 41       	r2 = [sp+ 152] 			  ## midi_synth.c:1543:3
  113930:    89 d4       	r1 = r1 + r2 			  ## midi_synth.c:1543:3
  113932:    12 ea 49 04 	r2 = 1097 			  ## midi_synth.c:1543:29
  113936:    f2 08       	goto 484 <.GJTIE412_1_1_+0x65E : 113b1c >			  ## midi_synth.c:1543:29
  113938:    80 ef 80 40 	cmp r8, 64
  11393c:    00 fb d0 0c 	ifs (nzcv == 0) goto 410 <.GJTIE412_1_1_+0x61C : 113ada >
  113940:    80 ef 80 43 	cmp r8, 67
  113944:    86 43       	r6 = [sp+ 56] 
  113946:    00 fb 40 0e 	ifs (nzcv == 0) goto 456 <.GJTIE412_1_1_+0x654 : 113b12 >
  11394a:    80 ef 80 42 	cmp r8, 66
  11394e:    00 fb 71 0e 	ifs (nzcv != 0) goto 462 <.GJTIE412_1_1_+0x662 : 113b20 >
  113952:    00 fc c1 07 	r1 = r12 * 7 			  ## midi_synth.c:1517:3
  113956:    8a 41       	r2 = [sp+ 152] 			  ## midi_synth.c:1517:3
  113958:    89 d4       	r1 = r1 + r2 			  ## midi_synth.c:1517:3
  11395a:    12 ea 48 04 	r2 = 1096 			  ## midi_synth.c:1517:31
  11395e:    40 e7 10 02 	b[r1 + r2] = r0 			  ## midi_synth.c:1517:31
  113962:    0c 98       	cmp r4, 1			  ## midi_synth.c:1518:3
  113964:    00 fb cb 0d 	ifs (nzcv < 0) goto 440 <.GJTIE412_1_1_+0x662 : 113b20 >			  ## midi_synth.c:1518:3
  113968:    00 ed f5 a8 	r5 = sp + 168 
  11396c:    20 e8 d0 00 	r0 = [r13 + 0] 			  ## midi_synth.c:1520:40
  113970:    29 58       	r1 = b[r5 + 0] 			  ## midi_synth.c:1520:27
  113972:    00 fc 11 e0 	r1 = r1 * 224 			  ## midi_synth.c:1521:17
  113976:    09 d4       	r1 = r1 + r0 			  ## midi_synth.c:1521:17
  113978:    08 5e       	r0 = b[r1 + 3] 			  ## midi_synth.c:1521:17
  11397a:    40 20       	if (r0 == 0) goto 8 <.GJTIE412_1_1_+0x4C6 : 113984 >			  ## midi_synth.c:1521:17
  11397c:    88 41       	r0 = [sp+ 152] 			  ## midi_synth.c:1523:5
  11397e:    a2 c6       	r2 = r12 			  ## midi_synth.c:1523:5
  113980:    fa e1 5f fc 	call -41078 <control_stop : 10990e >			  ## midi_synth.c:1523:5
  113984:    6d d0       	r5 = r5 + 1 			  ## midi_synth.c:1518:25
  113986:    e4 d3       	r4 = r4 + -1 			  ## midi_synth.c:1518:25
  113988:    f1 11       	ifs (nzcv != 0) goto -30 <.GJTIE412_1_1_+0x4AE : 11396c >			  ## midi_synth.c:1518:25
  11398a:    ca 08       	goto 404 <.GJTIE412_1_1_+0x662 : 113b20 >			  ## midi_synth.c:1518:25
  11398c:    40 47       	r0 = [sp+ 116] 			  ## midi_synth.c:1709:17
  11398e:    43 c9       	r3 = r0.l 			  ## midi_synth.c:1709:17
  113990:    55 ea 00 00 	r13 = 0 			  ## midi_synth.c:1709:17
  113994:    20 f7 c0 02 	r0 = r12 << 2 			  ## midi_synth.c:1709:17
  113998:    8a 41       	r2 = [sp+ 152] 			  ## midi_synth.c:1709:17
  11399a:    80 d4       	r0 = r0 + r2 			  ## midi_synth.c:1709:17
  11399c:    11 ea d8 03 	r1 = 984 			  ## midi_synth.c:1709:17
  1139a0:    20 e7 00 01 	r0 = [r0 + r1] 			  ## midi_synth.c:1709:17
  1139a4:    83 66       	[sp+ 104] = r3 			  ## midi_synth.c:1709:17
  1139a6:    80 e7 00 03 	r0 = b[r0 + r3] (s) 			  ## midi_synth.c:1709:17
  1139aa:    20 f7 c1 01 	r1 = r12 << 1 			  ## midi_synth.c:1710:19
  1139ae:    89 d4       	r1 = r1 + r2 			  ## midi_synth.c:1710:19
  1139b0:    41 66       	[sp+ 100] = r1 			  ## midi_synth.c:1710:19
  1139b2:    04 ed 11 18 	r1 = r1 + 1048 			  ## midi_synth.c:1710:19
  1139b6:    09 50       	r1 = h[r1 + 0] 			  ## midi_synth.c:1710:19
  1139b8:    09 d4       	r1 = r1 + r0 			  ## midi_synth.c:1710:55
  1139ba:    c9 d3       	r1 = r1 + -1 			  ## midi_synth.c:1710:95
  1139bc:    8b 40       	r3 = [sp+ 136] 			  ## midi_synth.c:1710:95
  1139be:    5a 5a       	r2 = b[r3 + 5] 			  ## midi_synth.c:1711:23
  1139c0:    42 22       	if (r2 == 0) goto 72 <.GJTIE412_1_1_+0x54C : 113a0a >
  1139c2:    da 5c       	r2 = b[r3 + 14] 			  ## midi_synth.c:1711:49
  1139c4:    04 80       	r4 = 0 			  ## midi_synth.c:1711:49
  1139c6:    02 21       	if (r2 == 0) goto 32 <.GJTIE412_1_1_+0x52A : 1139e8 >			  ## midi_synth.c:1711:49
  1139c8:    da 5e       	r2 = b[r3 + 15] 			  ## midi_synth.c:1714:10
  1139ca:    c3 47       	r3 = [sp+ 124] 			  ## midi_synth.c:1714:10
  1139cc:    13 ce       	cmp r2, r3			  ## midi_synth.c:1714:10
  1139ce:    0c 11       	ifs (nzcv != 0) goto 24 <.GJTIE412_1_1_+0x52A : 1139e8 >			  ## midi_synth.c:1714:10
  1139d0:    88 40       	r0 = [sp+ 136] 			  ## midi_synth.c:1725:32
  1139d2:    80 48       	r0 = [r0 + 8] 			  ## midi_synth.c:1725:32
  1139d4:    81 46       	r1 = [sp+ 104] 			  ## midi_synth.c:1725:19
  1139d6:    00 e7 00 01 	r0 = b[r0 + r1] 			  ## midi_synth.c:1725:19
  1139da:    89 41       	r1 = [sp+ 152] 			  ## midi_synth.c:1726:34
  1139dc:    03 ed 11 2a 	r1 = r1 + 810 			  ## midi_synth.c:1726:34
  1139e0:    09 50       	r1 = h[r1 + 0] 			  ## midi_synth.c:1726:34
  1139e2:    09 d4       	r1 = r1 + r0 			  ## midi_synth.c:1726:56
  1139e4:    c9 d3       	r1 = r1 + -1 			  ## midi_synth.c:1726:68
  1139e6:    0c 80       	r4 = 1 
  1139e8:    42 43       	r2 = [sp+ 52] 			  ## midi_synth.c:1732:49
  1139ea:    52 5a       	r2 = b[r2 + 5] 			  ## midi_synth.c:1732:49
  1139ec:    0a 98       	cmp r2, 1			  ## midi_synth.c:1732:9
  1139ee:    0e 11       	ifs (nzcv != 0) goto 28 <.GJTIE412_1_1_+0x54E : 113a0c >			  ## midi_synth.c:1732:9
  1139f0:    88 40       	r0 = [sp+ 136] 			  ## midi_synth.c:1734:31
  1139f2:    80 48       	r0 = [r0 + 8] 			  ## midi_synth.c:1734:31
  1139f4:    81 46       	r1 = [sp+ 104] 			  ## midi_synth.c:1734:18
  1139f6:    00 e7 00 01 	r0 = b[r0 + r1] 			  ## midi_synth.c:1734:18
  1139fa:    89 41       	r1 = [sp+ 152] 			  ## midi_synth.c:1735:33
  1139fc:    03 ed 11 2a 	r1 = r1 + 810 			  ## midi_synth.c:1735:33
  113a00:    09 50       	r1 = h[r1 + 0] 			  ## midi_synth.c:1735:33
  113a02:    09 d4       	r1 = r1 + r0 			  ## midi_synth.c:1735:55
  113a04:    c9 d3       	r1 = r1 + -1 			  ## midi_synth.c:1735:67
  113a06:    0c 80       	r4 = 1 			  ## midi_synth.c:1735:67
  113a08:    01 08       	goto 2 <.GJTIE412_1_1_+0x54E : 113a0c >			  ## midi_synth.c:1735:67
  113a0a:    04 80       	r4 = 0 
  113a0c:    04 66       	[sp+ 96] = r4 
  113a0e:    80 20       	if (r0 == 0) goto 16 <.GJTIE412_1_1_+0x562 : 113a20 >
  113a10:    68 48       	r0 = [r5 + 4] 			  ## midi_synth.c:1746:30
  113a12:    49 c9       	r1 = r1.l 			  ## midi_synth.c:1746:47
  113a14:    09 a5       	r1 = r1 << 5 			  ## midi_synth.c:1746:61
  113a16:    09 d4       	r1 = r1 + r0 			  ## midi_synth.c:1746:45
  113a18:    40 44       	r0 = [sp+ 68] 			  ## midi_synth.c:1751:6
  113a1a:    02 81       	r2 = 32 			  ## midi_synth.c:1751:6
  113a1c:    d7 e1 8f a9 	call -330448 <memcpy : c2f50 >			  ## midi_synth.c:1751:6
  113a20:    80 ef d0 01 	cmp r13, 1			  ## midi_synth.c:1789:8
  113a24:    ff fb 50 91 	ifs (nzcv == 0) goto -3542 <MIDI_DEC_MAIN+0x1D2 : 112c52 >			  ## midi_synth.c:1789:8
  113a28:    80 ef d0 00 	cmp r13, 0
  113a2c:    3d 11       	ifs (nzcv != 0) goto 122 <.GJTIE412_1_1_+0x5EA : 113aa8 >
  113a2e:    00 45       	r0 = [sp+ 80] 			  ## midi_synth.c:1791:14
  113a30:    90 e8 00 00 	r0 = h[r0 + 0] (s) 			  ## midi_synth.c:1791:14
  113a34:    00 fc 02 e0 	r2 = r0 * 224 			  ## midi_synth.c:1791:10
  113a38:    20 e9 0d 13 	r13 = [sp+ 76] 			  ## midi_synth.c:1791:10
  113a3c:    c0 d3       	r0 = r0 + -1 
  113a3e:    00 98       	cmp r0, 0			  ## midi_synth.c:1791:5
  113a40:    72 1b       	ifs (nzcv < 0) goto 228 <.GJTIE412_1_1_+0x668 : 113b26 >			  ## midi_synth.c:1791:5
  113a42:    20 e8 d3 00 	r3 = [r13 + 0] 			  ## midi_synth.c:1793:47
  113a46:    99 d4       	r1 = r3 + r2 			  ## midi_synth.c:1794:24
  113a48:    94 ea 20 ff 	r4 = -224 			  ## midi_synth.c:1794:24
  113a4c:    00 e7 11 04 	r1 = b[r1 + r4] 			  ## midi_synth.c:1794:24
  113a50:    1f ed 22 20 	r2 = r2 + -224 			  ## midi_synth.c:1794:10
  113a54:    11 98       	cmp r1, 2			  ## midi_synth.c:1794:10
  113a56:    f2 11       	ifs (nzcv != 0) goto -28 <.GJTIE412_1_1_+0x57E : 113a3c >			  ## midi_synth.c:1794:10
  113a58:    68 6a       	[r5 + 36] = r0 			  ## midi_synth.c:1797:33
  113a5a:    81 41       	r1 = [sp+ 24] 			  ## midi_synth.c:1799:24
  113a5c:    49 5a       	r1 = b[r1 + 5] 			  ## midi_synth.c:1799:24
  113a5e:    01 98       	cmp r1, 0			  ## midi_synth.c:1799:24
  113a60:    ff fb 70 8f 	ifs (nzcv == 0) goto -3602 <MIDI_DEC_MAIN+0x1D2 : 112c52 >			  ## midi_synth.c:1799:24
  113a64:    09 80       	r1 = 1 
  113a66:    01 cf       	r1 <<= r0 
  113a68:    c4 42       	r4 = [sp+ 44] 
  113a6a:    24 48       	r4 = [r4 + 0] 
  113a6c:    80 f1 45 00 	r5 = r4 & setbit(r0) 
  113a70:    86 42       	r6 = [sp+ 40] 			  ## midi_synth.c:1801:43
  113a72:    36 58       	r6 = b[r6 + 0] 			  ## midi_synth.c:1801:43
  113a74:    06 98       	cmp r6, 0			  ## midi_synth.c:1801:60
  113a76:    ff fb d0 8d 	ifs (nzcv == 0) goto -3654 <MIDI_DEC_MAIN+0x1B4 : 112c34 >			  ## midi_synth.c:1801:60
  113a7a:    05 98       	cmp r5, 0			  ## midi_synth.c:1801:12
  113a7c:    c5 43       	r5 = [sp+ 60] 			  ## midi_synth.c:1801:12
  113a7e:    86 43       	r6 = [sp+ 56] 			  ## midi_synth.c:1801:12
  113a80:    ff fb 70 8e 	ifs (nzcv == 0) goto -3634 <MIDI_DEC_MAIN+0x1D2 : 112c52 >			  ## midi_synth.c:1801:12
  113a84:    c0 f0 41 01 	r1 = r4 & ~r1 			  ## midi_synth.c:1803:42
  113a88:    60 e8 81 fb 	[r8 + -20] = r1 			  ## midi_synth.c:1803:42
  113a8c:    89 41       	r1 = [sp+ 152] 			  ## midi_synth.c:1804:95
  113a8e:    40 d4       	r0 = r0 + r1 			  ## midi_synth.c:1804:95
  113a90:    11 ea c0 04 	r1 = 1216 			  ## midi_synth.c:1804:9
  113a94:    00 e7 01 01 	r1 = b[r0 + r1] 			  ## midi_synth.c:1804:9
  113a98:    84 41       	r4 = [sp+ 24] 			  ## midi_synth.c:1804:9
  113a9a:    60 49       	r0 = [r4 + 20] 			  ## midi_synth.c:1804:89
  113a9c:    e4 49       	r4 = [r4 + 28] 			  ## midi_synth.c:1804:39
  113a9e:    d2 d4       	r2 = r2 + r3 			  ## midi_synth.c:1804:135
  113aa0:    52 58       	r2 = b[r2 + 4] 			  ## midi_synth.c:1804:9
  113aa2:    ac 01       	call r4			  ## midi_synth.c:1804:9
  113aa4:    ff fa 5f 8d 	goto -3670 <MIDI_DEC_MAIN+0x1D2 : 112c52 >			  ## midi_synth.c:1804:9
  113aa8:    20 e9 0d 13 	r13 = [sp+ 76] 
  113aac:    3c 08       	goto 120 <.GJTIE412_1_1_+0x668 : 113b26 >
  113aae:    c1 46       	r1 = [sp+ 108] 
  113ab0:    c8 49       	r0 = [r1 + 28] 			  ## midi_synth.c:1631:43
  113ab2:    40 d0       	r0 = r0 + 1 			  ## midi_synth.c:1631:53
  113ab4:    c8 69       	[r1 + 28] = r0 			  ## midi_synth.c:1631:28
  113ab6:    37 08       	goto 110 <.GJTIE412_1_1_+0x668 : 113b26 >			  ## midi_synth.c:1631:28
  113ab8:    00 fc c1 07 	r1 = r12 * 7 			  ## midi_synth.c:1553:3
  113abc:    89 d4       	r1 = r1 + r2 			  ## midi_synth.c:1553:3
  113abe:    80 f3 00 7f 	r0 = r0 & 127 			  ## midi_synth.c:1553:30
  113ac2:    12 ea 4a 04 	r2 = 1098 			  ## midi_synth.c:1553:28
  113ac6:    40 e7 10 02 	b[r1 + r2] = r0 			  ## midi_synth.c:1553:28
  113aca:    86 43       	r6 = [sp+ 56] 			  ## midi_synth.c:1553:28
  113acc:    29 08       	goto 82 <.GJTIE412_1_1_+0x662 : 113b20 >			  ## midi_synth.c:1553:28
  113ace:    00 fc c1 07 	r1 = r12 * 7 			  ## midi_synth.c:1573:3
  113ad2:    89 d4       	r1 = r1 + r2 			  ## midi_synth.c:1573:3
  113ad4:    12 ea 4e 04 	r2 = 1102 			  ## midi_synth.c:1573:28
  113ad8:    21 08       	goto 66 <.GJTIE412_1_1_+0x65E : 113b1c >			  ## midi_synth.c:1573:28
  113ada:    00 fc c1 07 	r1 = r12 * 7 			  ## midi_synth.c:1531:3
  113ade:    89 d4       	r1 = r1 + r2 			  ## midi_synth.c:1531:3
  113ae0:    12 ea 4c 04 	r2 = 1100 			  ## midi_synth.c:1531:31
  113ae4:    40 e7 10 02 	b[r1 + r2] = r0 			  ## midi_synth.c:1531:31
  113ae8:    0c 98       	cmp r4, 1			  ## midi_synth.c:1532:3
  113aea:    86 43       	r6 = [sp+ 56] 			  ## midi_synth.c:1532:3
  113aec:    19 1b       	ifs (nzcv < 0) goto 50 <.GJTIE412_1_1_+0x662 : 113b20 >			  ## midi_synth.c:1532:3
  113aee:    00 ed f5 a8 	r5 = sp + 168 
  113af2:    20 e8 d0 00 	r0 = [r13 + 0] 			  ## midi_synth.c:1534:40
  113af6:    29 58       	r1 = b[r5 + 0] 			  ## midi_synth.c:1534:27
  113af8:    00 fc 11 e0 	r1 = r1 * 224 			  ## midi_synth.c:1535:17
  113afc:    09 d4       	r1 = r1 + r0 			  ## midi_synth.c:1535:17
  113afe:    08 5e       	r0 = b[r1 + 3] 			  ## midi_synth.c:1535:17
  113b00:    40 20       	if (r0 == 0) goto 8 <.GJTIE412_1_1_+0x64C : 113b0a >			  ## midi_synth.c:1535:17
  113b02:    88 41       	r0 = [sp+ 152] 			  ## midi_synth.c:1537:5
  113b04:    a2 c6       	r2 = r12 			  ## midi_synth.c:1537:5
  113b06:    fa e1 2f f0 	call -41468 <control_stop : 10990e >			  ## midi_synth.c:1537:5
  113b0a:    6d d0       	r5 = r5 + 1 			  ## midi_synth.c:1532:25
  113b0c:    e4 d3       	r4 = r4 + -1 			  ## midi_synth.c:1532:25
  113b0e:    f1 11       	ifs (nzcv != 0) goto -30 <.GJTIE412_1_1_+0x634 : 113af2 >			  ## midi_synth.c:1532:25
  113b10:    07 08       	goto 14 <.GJTIE412_1_1_+0x662 : 113b20 >			  ## midi_synth.c:1532:25
  113b12:    00 fc c1 07 	r1 = r12 * 7 			  ## midi_synth.c:1563:3
  113b16:    89 d4       	r1 = r1 + r2 			  ## midi_synth.c:1563:3
  113b18:    12 ea 4b 04 	r2 = 1099 			  ## midi_synth.c:1563:31
  113b1c:    40 e7 10 02 	b[r1 + r2] = r0 
  113b20:    1f ed ee fe 	r14 = r14 + -2 			  ## midi_synth.c:1967:13
  113b24:    c5 43       	r5 = [sp+ 60] 
  113b26:    81 45       	r1 = [sp+ 88] 
  113b28:    48 5b       	r0 = b[r1 + -11] 			  ## midi_dec.c:1173:25
  113b2a:    10 98       	cmp r0, 2			  ## midi_dec.c:1173:39
  113b2c:    06 11       	ifs (nzcv != 0) goto 12 <.GJTIE412_1_1_+0x67C : 113b3a >			  ## midi_dec.c:1173:39
  113b2e:    08 4f       	r0 = [r1 + -16] 			  ## midi_dec.c:1173:56
  113b30:    08 98       	cmp r0, 1			  ## midi_dec.c:1173:11
  113b32:    20 e9 0c 1b 	r12 = [sp+ 108] 			  ## midi_dec.c:1173:11
  113b36:    03 11       	ifs (nzcv != 0) goto 6 <.GJTIE412_1_1_+0x680 : 113b3e >			  ## midi_dec.c:1173:11
  113b38:    1b 08       	goto 54 <.GJTIE412_1_1_+0x6B2 : 113b70 >			  ## midi_dec.c:1173:11
  113b3a:    20 e9 0c 1b 	r12 = [sp+ 108] 
  113b3e:    80 ef 90 00 	cmp r9, 0			  ## midi_dec.c:1016:8
  113b42:    0a 11       	ifs (nzcv != 0) goto 20 <.GJTIE412_1_1_+0x69A : 113b58 >			  ## midi_dec.c:1016:8
  113b44:    b0 48       	r0 = [r6 + 8] 			  ## midi_dec.c:1016:21
  113b46:    49 41       	r1 = [sp+ 148] 			  ## midi_dec.c:1016:34
  113b48:    81 da       	r1 &= r0 			  ## midi_dec.c:1016:34
  113b4a:    ff fb c1 b7 	ifs (nzcv != 0) goto -2312 <MIDI_DEC_MAIN+0x7C6 : 113246 >			  ## midi_dec.c:1016:34
  113b4e:    04 08       	goto 8 <.GJTIE412_1_1_+0x69A : 113b58 >			  ## midi_dec.c:1016:34
  113b50:    49 41       	r1 = [sp+ 148] 			  ## midi_dec.c:1029:33
  113b52:    c0 f0 00 01 	r0 = r0 & ~r1 			  ## midi_dec.c:1029:33
  113b56:    b0 68       	[r6 + 8] = r0 			  ## midi_dec.c:1029:33
  113b58:    48 40       	r0 = [sp+ 132] 			  ## midi_dec.c:1006:15
  113b5a:    09 40       	r1 = [sp+ 128] 			  ## midi_dec.c:1006:15
  113b5c:    40 d4       	r0 = r0 + r1 			  ## midi_dec.c:1006:15
  113b5e:    60 e8 0e 00 	[r0 + 0] = r14 			  ## midi_dec.c:1201:35
  113b62:    e8 51       	r0 = h[r5 + 28] 			  ## midi_dec.c:1004:30
  113b64:    c9 41       	r1 = [sp+ 156] 			  ## midi_dec.c:1004:30
  113b66:    49 d0       	r1 = r1 + 1 			  ## midi_dec.c:1004:58
  113b68:    c9 61       	[sp+ 156] = r1 
  113b6a:    08 ce       	cmp r1, r0			  ## midi_dec.c:1004:2
  113b6c:    ff fb e3 84 	if (nzcv < 0) goto -3940 <MIDI_DEC_MAIN+0x18C : 112c0c >			  ## midi_dec.c:1004:2
  113b70:    00 e8 c0 02 	r0 = b[r12 + 8] 			  ## midi_dec.c:1218:19
  113b74:    10 98       	cmp r0, 2			  ## midi_dec.c:1218:53
  113b76:    8c 40       	r4 = [sp+ 136] 			  ## midi_dec.c:1218:53
  113b78:    00 fb b1 33 	ifs (nzcv != 0) goto 1654 <.GJTIE412_1_1_+0xD34 : 1141f2 >			  ## midi_dec.c:1218:53
  113b7c:    80 45       	r0 = [sp+ 88] 			  ## midi_dec.c:1218:69
  113b7e:    40 5d       	r0 = b[r0 + -10] 			  ## midi_dec.c:1218:69
  113b80:    00 98       	cmp r0, 0			  ## midi_dec.c:1218:69
  113b82:    00 fb 10 33 	ifs (nzcv == 0) goto 1634 <.GJTIE412_1_1_+0xD2A : 1141e8 >			  ## midi_dec.c:1218:69
  113b86:    c8 40       	r0 = [sp+ 140] 			  ## midi_dec.c:1220:21
  113b88:    00 48       	r0 = [r0 + 0] 			  ## midi_dec.c:1220:21
  113b8a:    00 98       	cmp r0, 0			  ## midi_dec.c:1220:21
  113b8c:    00 fb 91 32 	ifs (nzcv != 0) goto 1618 <.GJTIE412_1_1_+0xD24 : 1141e2 >			  ## midi_dec.c:1220:21
  113b90:    20 e8 c0 07 	r0 = [r12 + 28] 			  ## midi_dec.c:1220:59
  113b94:    00 98       	cmp r0, 0			  ## midi_dec.c:1220:59
  113b96:    00 fb 40 32 	ifs (nzcv == 0) goto 1608 <.GJTIE412_1_1_+0xD24 : 1141e2 >			  ## midi_dec.c:1220:59
  113b9a:    20 e8 c1 09 	r1 = [r12 + 36] 			  ## midi_dec.c:1222:57
  113b9e:    01 ce       	cmp r0, r1			  ## midi_dec.c:1222:8
  113ba0:    31 13       	if (nzcv < 0) goto 98 <.GJTIE412_1_1_+0x746 : 113c04 >			  ## midi_dec.c:1222:8
  113ba2:    20 e8 c0 08 	r0 = [r12 + 32] 			  ## midi_dec.c:1224:87
  113ba6:    20 e8 c1 0a 	r1 = [r12 + 40] 			  ## midi_dec.c:1224:46
  113baa:    a9 01       	call r1			  ## midi_dec.c:1224:23
  113bac:    09 80       	r1 = 1 			  ## midi_dec.c:1225:28
  113bae:    60 e8 c1 07 	[r12 + 28] = r1 			  ## midi_dec.c:1225:28
  113bb2:    80 22       	if (r0 == 0) goto 80 <.GJTIE412_1_1_+0x746 : 113c04 >			  ## midi_dec.c:1225:28
  113bb4:    e1 0b       	goto 1986 <.GJTIE412_1_1_+0xEBA : 114378 >			  ## midi_dec.c:1225:28
  113bb6:    10 e8 80 07 	r0 = h[r8 + 28] 			  ## midi_dec.c:944:46
  113bba:    00 98       	cmp r0, 0			  ## midi_dec.c:944:46
  113bbc:    ff fb e0 7e 	ifs (nzcv == 0) goto -4132 <MIDI_DEC_MAIN+0x11C : 112b9c >			  ## midi_dec.c:944:46
  113bc0:    f9 87       	r1 = -1 
  113bc2:    02 47       	r2 = [sp+ 112] 
  113bc4:    03 c6       	r3 = r0 
  113bc6:    20 e8 24 ec 	r4 = [r2 + -80] 			  ## midi_dec.c:946:10
  113bca:    54 20       	if (r4 == 0) goto 10 <.GJTIE412_1_1_+0x718 : 113bd6 >			  ## midi_dec.c:946:10
  113bcc:    14 48       	r4 = [r2 + 0] 			  ## midi_dec.c:948:66
  113bce:    0c ce       	cmp r1, r4			  ## midi_dec.c:948:19
  113bd0:    90 03       	if (nzcv <= 0) {			  ## midi_dec.c:948:19
  113bd2:    0c c6       		r4 = r1 
                               	}			  ## midi_dec.c:948:19
  113bd4:    21 c6       	r1 = r4 
  113bd6:    12 d1       	r2 = r2 + 4 			  ## midi_dec.c:944:31
  113bd8:    db d3       	r3 = r3 + -1 			  ## midi_dec.c:944:31
  113bda:    f5 11       	ifs (nzcv != 0) goto -22 <.GJTIE412_1_1_+0x708 : 113bc6 >			  ## midi_dec.c:944:31
  113bdc:    01 98       	cmp r1, 0
  113bde:    ff fb d0 7d 	ifs (nzcv == 0) goto -4166 <MIDI_DEC_MAIN+0x11C : 112b9c >
  113be2:    20 ee 11 01 	r1 = 1 - r1 
  113be6:    02 47       	r2 = [sp+ 112] 
  113be8:    13 48       	r3 = [r2 + 0] 			  ## midi_dec.c:955:44
  113bea:    23 20       	if (r3 == 0) goto 4 <.GJTIE412_1_1_+0x732 : 113bf0 >			  ## midi_dec.c:955:44
  113bec:    5b d4       	r3 = r3 + r1 			  ## midi_dec.c:957:102
  113bee:    13 68       	[r2 + 0] = r3 			  ## midi_dec.c:957:48
  113bf0:    12 d1       	r2 = r2 + 4 			  ## midi_dec.c:953:32
  113bf2:    c0 d3       	r0 = r0 + -1 			  ## midi_dec.c:953:32
  113bf4:    f9 11       	ifs (nzcv != 0) goto -14 <.GJTIE412_1_1_+0x72A : 113be8 >			  ## midi_dec.c:953:32
  113bf6:    80 45       	r0 = [sp+ 88] 
  113bf8:    00 4f       	r0 = [r0 + -16] 
  113bfa:    08 98       	cmp r0, 1			  ## midi_dec.c:967:6
  113bfc:    ff fb e0 7c 	ifs (nzcv == 0) goto -4196 <MIDI_DEC_MAIN+0x11C : 112b9c >			  ## midi_dec.c:967:6
  113c00:    ff fa ff 7c 	goto -4194 <MIDI_DEC_MAIN+0x122 : 112ba2 >			  ## midi_dec.c:967:6
  113c04:    81 45       	r1 = [sp+ 88] 
  113c06:    08 4f       	r0 = [r1 + -16] 			  ## midi_dec.c:846:19
  113c08:    8a 41       	r2 = [sp+ 152] 			  ## midi_dec.c:846:19
  113c0a:    06 ed 27 74 	r7 = r2 + 1652 			  ## midi_dec.c:846:19
  113c0e:    08 98       	cmp r0, 1			  ## midi_dec.c:846:6
  113c10:    05 11       	ifs (nzcv != 0) goto 10 <.GJTIE412_1_1_+0x75E : 113c1c >			  ## midi_dec.c:846:6
  113c12:    48 5d       	r0 = b[r1 + -10] 			  ## midi_dec.c:848:20
  113c14:    00 98       	cmp r0, 0			  ## midi_dec.c:848:7
  113c16:    00 41       	r0 = [sp+ 16] 			  ## midi_dec.c:848:7
  113c18:    08 11       	ifs (nzcv != 0) goto 16 <.GJTIE412_1_1_+0x76C : 113c2a >			  ## midi_dec.c:848:7
  113c1a:    a0 0b       	goto 1856 <.GJTIE412_1_1_+0xE9E : 11435c >			  ## midi_dec.c:848:7
  113c1c:    40 e8 1a 7d 	b[r1 + -11] = r10 			  ## midi_dec.c:858:24
  113c20:    40 e8 7a 00 	b[r7 + 0] = r10 			  ## midi_dec.c:859:28
  113c24:    40 e8 ca 3f 	b[r12 + -4] = r10 			  ## midi_dec.c:860:29
  113c28:    00 41       	r0 = [sp+ 16] 			  ## midi_dec.c:860:29
  113c2a:    68 c6       	r8 = r5 
  113c2c:    89 41       	r1 = [sp+ 152] 
  113c2e:    03 ed 15 24 	r5 = r1 + 804 
  113c32:    41 45       	r1 = [sp+ 84] 
  113c34:    11 98       	cmp r1, 2			  ## midi_dec.c:863:6
  113c36:    0f 10       	ifs (nzcv == 0) goto 30 <.GJTIE412_1_1_+0x798 : 113c56 >			  ## midi_dec.c:863:6
  113c38:    09 98       	cmp r1, 1
  113c3a:    51 11       	ifs (nzcv != 0) goto 162 <.GJTIE412_1_1_+0x820 : 113cde >
  113c3c:    02 c6       	r2 = r0 
  113c3e:    10 58       	r0 = b[r2 + 0] 			  ## midi_dec.c:865:21
  113c40:    00 22       	if (r0 == 0) goto 64 <.GJTIE412_1_1_+0x7C4 : 113c82 >			  ## midi_dec.c:865:21
  113c42:    50 48       	r0 = [r2 + 4] 			  ## midi_dec.c:872:93
  113c44:    e9 4f       	r1 = [r5 + -4] 			  ## midi_dec.c:872:65
  113c46:    09 a2       	r1 = r1 << 2 			  ## midi_dec.c:872:38
  113c48:    20 e4 13 d2 	r3 = [addr(1864)]  <.GCPI412_0 : 114394 >			  ## midi_dec.c:872:38
  113c4c:    20 e7 31 01 	r1 = [r3 + r1] 			  ## midi_dec.c:872:38
  113c50:    08 06       	r0 *= r1 			  ## midi_dec.c:872:78
  113c52:    d1 4f       	r1 = [r2 + -4] 			  ## midi_dec.c:872:35
  113c54:    21 08       	goto 66 <.GJTIE412_1_1_+0x7DA : 113c98 >			  ## midi_dec.c:872:35
  113c56:    02 c6       	r2 = r0 
  113c58:    10 58       	r0 = b[r2 + 0] 			  ## midi_dec.c:877:21
  113c5a:    10 22       	if (r0 == 0) goto 66 <.GJTIE412_1_1_+0x7E0 : 113c9e >			  ## midi_dec.c:877:21
  113c5c:    50 48       	r0 = [r2 + 4] 			  ## midi_dec.c:899:97
  113c5e:    e9 4f       	r1 = [r5 + -4] 			  ## midi_dec.c:899:69
  113c60:    09 a2       	r1 = r1 << 2 			  ## midi_dec.c:899:42
  113c62:    20 e4 13 cc 	r3 = [addr(1840)]  <.GCPI412_0 : 114394 >			  ## midi_dec.c:899:42
  113c66:    20 e7 31 01 	r1 = [r3 + r1] 			  ## midi_dec.c:899:42
  113c6a:    08 06       	r0 *= r1 			  ## midi_dec.c:899:82
  113c6c:    d1 4f       	r1 = [r2 + -4] 			  ## midi_dec.c:899:29
  113c6e:    08 ce       	cmp r1, r0			  ## midi_dec.c:899:8
  113c70:    9a 03       	if (nzcv <= 0) {			  ## midi_dec.c:905:36
  113c72:    60 e8 2a ff 		[r2 + -4] = r10 			  ## midi_dec.c:905:36
  113c76:    30 82       		r0 = 70 			  ## midi_dec.c:906:22
  113c78:    40 e8 80 00 		b[r8 + 0] = r0 
                               	} else {			  ## midi_dec.c:906:22
  113c7c:    08 d6       		r0 = r1 - r0 			  ## midi_dec.c:901:36
  113c7e:    d0 6f       		[r2 + -4] = r0 
                               	}			  ## midi_dec.c:901:36
  113c80:    2e 08       	goto 92 <.GJTIE412_1_1_+0x820 : 113cde >			  ## midi_dec.c:901:36
  113c82:    08 80       	r0 = 1 			  ## midi_dec.c:867:25
  113c84:    10 78       	b[r2 + 0] = r0 			  ## midi_dec.c:867:25
  113c86:    50 48       	r0 = [r2 + 4] 			  ## midi_dec.c:868:117
  113c88:    e9 4f       	r1 = [r5 + -4] 			  ## midi_dec.c:868:89
  113c8a:    09 a2       	r1 = r1 << 2 			  ## midi_dec.c:868:62
  113c8c:    20 e4 13 c1 	r3 = [addr(1796)]  <.GCPI412_0 : 114394 >			  ## midi_dec.c:868:62
  113c90:    20 e7 31 01 	r1 = [r3 + r1] 			  ## midi_dec.c:868:62
  113c94:    08 06       	r0 *= r1 			  ## midi_dec.c:868:102
  113c96:    71 48       	r1 = [r6 + 4] 			  ## midi_dec.c:868:50
  113c98:    40 d4       	r0 = r0 + r1 
  113c9a:    d0 6f       	[r2 + -4] = r0 
  113c9c:    20 08       	goto 64 <.GJTIE412_1_1_+0x820 : 113cde >
  113c9e:    50 48       	r0 = [r2 + 4] 			  ## midi_dec.c:888:103
  113ca0:    e9 4f       	r1 = [r5 + -4] 			  ## midi_dec.c:883:38
  113ca2:    09 a2       	r1 = r1 << 2 			  ## midi_dec.c:888:48
  113ca4:    20 e4 12 bb 	r2 = [addr(1772)]  <.GCPI412_0 : 114394 >			  ## midi_dec.c:888:48
  113ca8:    20 e7 21 01 	r1 = [r2 + r1] 			  ## midi_dec.c:888:48
  113cac:    08 06       	r0 *= r1 			  ## midi_dec.c:888:88
  113cae:    71 48       	r1 = [r6 + 4] 			  ## midi_dec.c:888:36
  113cb0:    08 d6       	r0 = r1 - r0 			  ## midi_dec.c:888:46
  113cb2:    48 62       	[sp+ 164] = r0 			  ## midi_dec.c:888:21
  113cb4:    00 ed f6 a8 	r6 = sp + 168 			  ## midi_dec.c:888:21
  113cb8:    30 c6       	r0 = r6 			  ## midi_dec.c:889:4
  113cba:    c1 40       	r1 = [sp+ 12] 			  ## midi_dec.c:889:4
  113cbc:    62 80       	r2 = 12 			  ## midi_dec.c:889:4
  113cbe:    d7 e1 7f 94 	call -331122 <memcpy : c2f50 >			  ## midi_dec.c:889:4
  113cc2:    00 ed f2 a0 	r2 = sp + 160 
  113cc6:    8c 41       	r4 = [sp+ 152] 
  113cc8:    20 c6       	r0 = r4 			  ## midi_dec.c:890:4
  113cca:    31 c6       	r1 = r6 			  ## midi_dec.c:890:4
  113ccc:    86 43       	r6 = [sp+ 56] 			  ## midi_dec.c:890:4
  113cce:    f8 e1 7f 3a 	call -63666 <midi_open : 104420 >			  ## midi_dec.c:890:4
  113cd2:    20 c6       	r0 = r4 			  ## midi_dec.c:892:8
  113cd4:    f8 e1 5f 45 	call -63318 <MIDI_FORMAT_CHECK : 104582 >			  ## midi_dec.c:892:8
  113cd8:    00 98       	cmp r0, 0			  ## midi_dec.c:892:8
  113cda:    00 fb 31 35 	ifs (nzcv != 0) goto 1702 <.GJTIE412_1_1_+0xEC6 : 114384 >			  ## midi_dec.c:892:8
  113cde:    b0 48       	r0 = [r6 + 8] 			  ## midi_dec.c:913:20
  113ce0:    00 98       	cmp r0, 0			  ## midi_dec.c:913:6
  113ce2:    ff fb 81 74 	ifs (nzcv != 0) goto -4464 <MIDI_DEC_MAIN+0xF6 : 112b76 >			  ## midi_dec.c:913:6
  113ce6:    00 41       	r0 = [sp+ 16] 			  ## midi_dec.c:916:20
  113ce8:    01 58       	r1 = b[r0 + 0] 			  ## midi_dec.c:916:20
  113cea:    00 82       	r0 = 64 			  ## midi_dec.c:916:7
  113cec:    11 20       	if (r1 == 0) goto 2 <.GJTIE412_1_1_+0x832 : 113cf0 >			  ## midi_dec.c:916:7
  113cee:    20 82       	r0 = 68 			  ## midi_dec.c:916:7
  113cf0:    40 e8 80 00 	b[r8 + 0] = r0 			  ## midi_dec.c:918:21
  113cf4:    82 45       	r2 = [sp+ 88] 			  ## midi_dec.c:918:21
  113cf6:    51 5e       	r1 = b[r2 + 7] 			  ## midi_dec.c:920:20
  113cf8:    91 20       	if (r1 == 0) goto 18 <.GJTIE412_1_1_+0x84E : 113d0c >			  ## midi_dec.c:920:20
  113cfa:    01 80       	r1 = 0 
  113cfc:    51 7e       	b[r2 + 7] = r1 			  ## midi_dec.c:922:30
  113cfe:    51 58       	r1 = b[r2 + 4] 			  ## midi_dec.c:923:21
  113d00:    51 20       	if (r1 == 0) goto 10 <.GJTIE412_1_1_+0x84E : 113d0c >			  ## midi_dec.c:923:21
  113d02:    00 e5 21 08 	r1, r0 = d[r2 + 32] 			  ## midi_dec.c:925:69
  113d06:    a9 01       	call r1			  ## midi_dec.c:925:5
  113d08:    00 e8 80 00 	r0 = b[r8 + 0] 			  ## midi_dec.c:925:5
  113d0c:    00 ec 09 00 	r9 = r0.b 			  ## midi_dec.c:928:10
  113d10:    3b 0b       	goto 1654 <.GJTIE412_1_1_+0xECA : 114388 >			  ## midi_dec.c:928:10
  113d12:    c7 61       	[sp+ 28] = r7 
  113d14:    02 ed 40 d0 	r0 = r4 + 720 			  ## midi_dec.c:830:35
  113d18:    80 60       	[sp+ 8] = r0 			  ## midi_dec.c:830:28
  113d1a:    02 ed 40 c8 	r0 = r4 + 712 			  ## midi_dec.c:830:28
  113d1e:    c0 60       	[sp+ 12] = r0 			  ## midi_dec.c:838:29
  113d20:    20 e8 cb 05 	r11 = [r12 + 20] 			  ## midi_dec.c:838:29
  113d24:    60 e8 c9 06 	[r12 + 24] = r9 			  ## midi_dec.c:840:24
  113d28:    05 ed 40 fc 	r0 = r4 + 1532 			  ## midi_dec.c:840:24
  113d2c:    00 62       	[sp+ 32] = r0 			  ## midi_dec.c:840:24
  113d2e:    06 ed 40 04 	r0 = r4 + 1540 			  ## midi_dec.c:840:24
  113d32:    40 62       	[sp+ 36] = r0 			  ## midi_dec.c:840:24
  113d34:    04 ed 40 bc 	r0 = r4 + 1212 			  ## midi_dec.c:840:24
  113d38:    c0 62       	[sp+ 44] = r0 			  ## midi_dec.c:840:24
  113d3a:    06 ed 40 00 	r0 = r4 + 1536 			  ## midi_dec.c:840:24
  113d3e:    80 62       	[sp+ 40] = r0 			  ## midi_dec.c:840:24
  113d40:    05 ed 40 ed 	r0 = r4 + 1517 			  ## midi_dec.c:840:24
  113d44:    00 63       	[sp+ 48] = r0 			  ## midi_dec.c:840:24
  113d46:    02 ed 49 f0 	r9 = r4 + 752 			  ## midi_dec.c:840:24
  113d4a:    03 ed 40 20 	r0 = r4 + 800 			  ## midi_dec.c:840:24
  113d4e:    00 64       	[sp+ 64] = r0 			  ## midi_dec.c:840:24
  113d50:    04 ed 4d ec 	r13 = r4 + 1260 			  ## midi_dec.c:840:24
  113d54:    04 ed 40 b8 	r0 = r4 + 1208 			  ## midi_dec.c:840:24
  113d58:    c8 60       	[sp+ 140] = r0 			  ## midi_dec.c:840:24
  113d5a:    04 ed 40 c0 	r0 = r4 + 1216 
  113d5e:    40 61       	[sp+ 20] = r0 
  113d60:    50 ea 01 00 	r8 = 1 
  113d64:    00 80       	r0 = 0 
  113d66:    48 60       	[sp+ 132] = r0 
  113d68:    60 e9 0a 12 	[sp+ 72] = r10 
  113d6c:    60 e9 09 14 	[sp+ 80] = r9 
  113d70:    60 e9 0d 13 	[sp+ 76] = r13 
  113d74:    80 ef b0 00 	cmp r11, 0			  ## midi_dec.c:1315:3
  113d78:    00 fb 10 22 	ifs (nzcv == 0) goto 1090 <.GJTIE412_1_1_+0xD00 : 1141be >			  ## midi_dec.c:1315:3
  113d7c:    80 ef b0 20 	cmp r11, 32			  ## midi_dec.c:1318:18
  113d80:    60 e9 0b 1e 	[sp+ 120] = r11 			  ## midi_dec.c:1318:18
  113d84:    a1 03       	ifs (nzcv >= 0) {			  ## midi_dec.c:1318:18
  113d86:    00 81       		r0 = 32 			  ## midi_dec.c:1318:18
  113d88:    80 67       		[sp+ 120] = r0 
                               	}			  ## midi_dec.c:1318:18
  113d8a:    90 e8 90 00 	r0 = h[r9 + 0] (s) 			  ## midi_dec.c:1321:33
  113d8e:    08 98       	cmp r0, 1			  ## midi_dec.c:1321:4
  113d90:    00 fb fb 1b 	ifs (nzcv < 0) goto 894 <.GJTIE412_1_1_+0xC54 : 114112 >			  ## midi_dec.c:1321:4
  113d94:    06 80       	r6 = 0 
  113d96:    60 e9 0b 11 	[sp+ 68] = r11 
  113d9a:    2e 08       	goto 92 <.GJTIE412_1_1_+0x93A : 113df8 >
  113d9c:    ca 40       	r2 = [sp+ 140] 
  113d9e:    11 48       	r1 = [r2 + 0] 			  ## midi_dec.c:1498:35
  113da0:    c0 f0 11 0e 	r1 = r1 & ~r14 			  ## midi_dec.c:1498:35
  113da4:    11 68       	[r2 + 0] = r1 			  ## midi_dec.c:1498:35
  113da6:    01 43       	r1 = [sp+ 48] 			  ## midi_dec.c:1499:24
  113da8:    09 58       	r1 = b[r1 + 0] 			  ## midi_dec.c:1499:24
  113daa:    01 98       	cmp r1, 0			  ## midi_dec.c:1499:24
  113dac:    00 fb 90 1a 	ifs (nzcv == 0) goto 850 <.GJTIE412_1_1_+0xC44 : 114102 >			  ## midi_dec.c:1499:24
  113db0:    40 f2 e1 00 	r1 = ~r14 			  ## midi_dec.c:1498:38
  113db4:    c2 42       	r2 = [sp+ 44] 			  ## midi_dec.c:1498:38
  113db6:    12 48       	r2 = [r2 + 0] 			  ## midi_dec.c:1498:38
  113db8:    80 f0 23 0e 	r3 = r2 & r14 			  ## midi_dec.c:1498:38
  113dbc:    84 42       	r4 = [sp+ 40] 			  ## midi_dec.c:1501:43
  113dbe:    24 58       	r4 = b[r4 + 0] 			  ## midi_dec.c:1501:43
  113dc0:    d4 20       	if (r4 == 0) goto 26 <.GJTIE412_1_1_+0x91E : 113ddc >			  ## midi_dec.c:1501:60
  113dc2:    50 ea 01 00 	r8 = 1 
  113dc6:    03 98       	cmp r3, 0
  113dc8:    00 fb d0 19 	ifs (nzcv == 0) goto 826 <.GJTIE412_1_1_+0xC48 : 114106 >
  113dcc:    91 da       	r1 &= r2 			  ## midi_dec.c:1503:42
  113dce:    c2 42       	r2 = [sp+ 44] 			  ## midi_dec.c:1503:42
  113dd0:    11 68       	[r2 + 0] = r1 			  ## midi_dec.c:1503:42
  113dd2:    41 41       	r1 = [sp+ 20] 			  ## midi_dec.c:1504:9
  113dd4:    00 e7 11 06 	r1 = b[r1 + r6] 			  ## midi_dec.c:1504:9
  113dd8:    42 58       	r2 = b[r0 + 4] 			  ## midi_dec.c:1504:9
  113dda:    08 08       	goto 16 <.GJTIE412_1_1_+0x92E : 113dec >			  ## midi_dec.c:1504:9
  113ddc:    50 ea 01 00 	r8 = 1 
  113de0:    33 20       	if (r3 == 0) goto 6 <.GJTIE412_1_1_+0x92A : 113de8 >
  113de2:    91 da       	r1 &= r2 			  ## midi_dec.c:1509:43
  113de4:    c2 42       	r2 = [sp+ 44] 			  ## midi_dec.c:1509:43
  113de6:    11 68       	[r2 + 0] = r1 			  ## midi_dec.c:1509:43
  113de8:    42 58       	r2 = b[r0 + 4] 			  ## midi_dec.c:1510:9
  113dea:    41 5a       	r1 = b[r0 + 5] 			  ## midi_dec.c:1510:9
  113dec:    00 42       	r0 = [sp+ 32] 
  113dee:    00 48       	r0 = [r0 + 0] 
  113df0:    43 42       	r3 = [sp+ 36] 
  113df2:    1b 48       	r3 = [r3 + 0] 
  113df4:    ab 01       	call r3
  113df6:    87 09       	goto 782 <.GJTIE412_1_1_+0xC48 : 114106 >
  113df8:    c8 40       	r0 = [sp+ 140] 			  ## midi_dec.c:1323:22
  113dfa:    00 48       	r0 = [r0 + 0] 			  ## midi_dec.c:1323:22
  113dfc:    80 f1 00 06 	r0 = r0 & setbit(r6) 			  ## midi_dec.c:1323:37
  113e00:    00 fb 10 18 	ifs (nzcv == 0) goto 770 <.GJTIE412_1_1_+0xC48 : 114106 >			  ## midi_dec.c:1323:37
  113e04:    20 e8 d1 00 	r1 = [r13 + 0] 			  ## midi_dec.c:1327:32
  113e08:    80 ef b0 01 	cmp r11, 1			  ## midi_dec.c:1333:7
  113e0c:    86 66       	[sp+ 104] = r6 			  ## midi_dec.c:1333:7
  113e0e:    41 66       	[sp+ 100] = r1 			  ## midi_dec.c:1333:7
  113e10:    00 fb 8b 0f 	ifs (nzcv < 0) goto 496 <.GJTIE412_1_1_+0xB46 : 114004 >			  ## midi_dec.c:1333:7
  113e14:    00 fc 60 e0 	r0 = r6 * 224 
  113e18:    40 d4       	r0 = r0 + r1 
  113e1a:    00 ed 01 d4 	r1 = r0 + 212 
  113e1e:    00 ed 02 c0 	r2 = r0 + 192 
  113e22:    42 65       	[sp+ 84] = r2 
  113e24:    00 ed 02 c8 	r2 = r0 + 200 
  113e28:    c2 67       	[sp+ 124] = r2 
  113e2a:    00 ed 02 d0 	r2 = r0 + 208 
  113e2e:    0a 60       	[sp+ 128] = r2 
  113e30:    00 ed 06 c4 	r6 = r0 + 196 
  113e34:    00 ed 02 cc 	r2 = r0 + 204 
  113e38:    0a 61       	[sp+ 144] = r2 
  113e3a:    00 ed 02 50 	r2 = r0 + 80 
  113e3e:    42 67       	[sp+ 116] = r2 
  113e40:    00 ed 02 60 	r2 = r0 + 96 
  113e44:    02 67       	[sp+ 112] = r2 
  113e46:    00 ed 02 bc 	r2 = r0 + 188 
  113e4a:    8a 60       	[sp+ 136] = r2 
  113e4c:    00 ed 09 64 	r9 = r0 + 100 
  113e50:    00 ed 0d a6 	r13 = r0 + 166 
  113e54:    00 ed 05 54 	r5 = r0 + 84 
  113e58:    00 ed 02 4c 	r2 = r0 + 76 
  113e5c:    4a 61       	[sp+ 148] = r2 
  113e5e:    00 ed 0e 1c 	r14 = r0 + 28 
  113e62:    54 ea 00 00 	r12 = 0 
  113e66:    03 80       	r3 = 0 
  113e68:    20 e9 0a 1e 	r10 = [sp+ 120] 
  113e6c:    4f 40       	r7 = [sp+ 132] 
  113e6e:    ce 61       	[sp+ 156] = r6 
  113e70:    9a 08       	goto 308 <.GJTIE412_1_1_+0xAE8 : 113fa6 >
  113e72:    8a 40       	r2 = [sp+ 136] 			  ## midi_dec.c:1356:37
  113e74:    12 58       	r2 = b[r2 + 0] 			  ## midi_dec.c:1356:37
  113e76:    02 98       	cmp r2, 0			  ## midi_dec.c:1356:18
  113e78:    5c 10       	ifs (nzcv == 0) goto 184 <.GJTIE412_1_1_+0xA74 : 113f32 >			  ## midi_dec.c:1356:18
  113e7a:    0a 41       	r2 = [sp+ 144] 			  ## midi_dec.c:1360:24
  113e7c:    12 48       	r2 = [r2 + 0] 			  ## midi_dec.c:1360:24
  113e7e:    0a 98       	cmp r2, 1			  ## midi_dec.c:1360:14
  113e80:    18 1b       	ifs (nzcv < 0) goto 48 <.GJTIE412_1_1_+0x9F4 : 113eb2 >			  ## midi_dec.c:1360:14
  113e82:    3c c6       	r4 = r7 
  113e84:    70 c6       	r8 = r6 
  113e86:    0e 40       	r6 = [sp+ 128] 			  ## midi_dec.c:1362:51
  113e88:    36 48       	r6 = [r6 + 0] 			  ## midi_dec.c:1362:51
  113e8a:    90 e8 87 00 	r7 = h[r8 + 0] (s) 			  ## midi_dec.c:1362:23
  113e8e:    f6 d5       	r6 = r6 + r7 			  ## midi_dec.c:1362:39
  113e90:    17 ea ff 7f 	r7 = 32767 			  ## midi_dec.c:1363:15
  113e94:    37 ce       	cmp r6, r7			  ## midi_dec.c:1363:15
  113e96:    a0 03       	ifs (nzcv >= 0) {			  ## midi_dec.c:1363:15
  113e98:    16 ea ff 7f 		r6 = 32767 
                               	}			  ## midi_dec.c:1363:15
  113e9c:    50 e8 86 00 	h[r8 + 0] = r6 			  ## midi_dec.c:1367:27
  113ea0:    d2 d3       	r2 = r2 + -1 			  ## midi_dec.c:1368:28
  113ea2:    0e 41       	r6 = [sp+ 144] 			  ## midi_dec.c:1368:28
  113ea4:    32 68       	[r6 + 0] = r2 			  ## midi_dec.c:1368:28
  113ea6:    02 98       	cmp r2, 0			  ## midi_dec.c:1371:14
  113ea8:    27 c6       	r7 = r4 			  ## midi_dec.c:1371:14
  113eaa:    86 c6       	r6 = r8 			  ## midi_dec.c:1371:14
  113eac:    50 ea 01 00 	r8 = 1 			  ## midi_dec.c:1371:14
  113eb0:    70 1c       	ifs (nzcv > 0) goto 224 <.GJTIE412_1_1_+0xAD4 : 113f92 >			  ## midi_dec.c:1371:14
  113eb2:    c2 47       	r2 = [sp+ 124] 			  ## midi_dec.c:1374:25
  113eb4:    12 48       	r2 = [r2 + 0] 			  ## midi_dec.c:1374:25
  113eb6:    12 98       	cmp r2, 2			  ## midi_dec.c:1374:15
  113eb8:    6c 1b       	ifs (nzcv < 0) goto 216 <.GJTIE412_1_1_+0xAD4 : 113f92 >			  ## midi_dec.c:1374:15
  113eba:    02 66       	[sp+ 96] = r2 
  113ebc:    4f 60       	[sp+ 132] = r7 
  113ebe:    02 44       	r2 = [sp+ 64] 			  ## midi_dec.c:1373:53
  113ec0:    12 48       	r2 = [r2 + 0] 			  ## midi_dec.c:1373:53
  113ec2:    12 a2       	r2 = r2 << 2 			  ## midi_dec.c:1373:26
  113ec4:    20 e4 14 33 	r4 = [addr(1228)]  <.GCPI412_0 : 114394 >			  ## midi_dec.c:1373:26
  113ec8:    20 e7 42 02 	r2 = [r4 + r2] 			  ## midi_dec.c:1373:26
  113ecc:    14 ea c8 00 	r4 = 200 			  ## midi_dec.c:1373:70
  113ed0:    c0 fc 22 04 	r2 = r2 / r4 (s) 			  ## midi_dec.c:1373:70
  113ed4:    c2 65       	[sp+ 92] = r2 			  ## midi_dec.c:1378:35
  113ed6:    42 45       	r2 = [sp+ 84] 			  ## midi_dec.c:1378:35
  113ed8:    20 e8 2a 00 	r10 = [r2 + 0] 			  ## midi_dec.c:1378:35
  113edc:    20 e8 18 00 	r8 = [r1 + 0] 			  ## midi_dec.c:1378:59
  113ee0:    00 ed 84 01 	r4 = r8 + 1 			  ## midi_dec.c:1378:59
  113ee4:    0c 68       	[r1 + 0] = r4 			  ## midi_dec.c:1378:59
  113ee6:    00 e7 a7 08 	r7 = b[r10 + r8] 			  ## midi_dec.c:1378:25
  113eea:    00 ed 8b 02 	r11 = r8 + 2 
  113eee:    60 e8 1b 00 	[r1 + 0] = r11 
  113ef2:    00 e7 a6 04 	r6 = b[r10 + r4] 
  113ef6:    c0 f3 72 80 	r2 = r7 & (~128) 			  ## midi_dec.c:1379:30
  113efa:    bf c9       	r7 = r7.b (s) 			  ## midi_dec.c:1378:25
  113efc:    07 98       	cmp r7, 0			  ## midi_dec.c:1382:12
  113efe:    29 1b       	ifs (nzcv < 0) goto 82 <.GJTIE412_1_1_+0xA94 : 113f52 >			  ## midi_dec.c:1382:12
  113f00:    3f 80       	r7 = 7 
  113f02:    00 ed 84 03 	r4 = r8 + 3 
  113f06:    0c 68       	[r1 + 0] = r4 
  113f08:    fc c9       	r4 = r7.l (s) 			  ## midi_dec.c:1385:43
  113f0a:    c0 f3 67 80 	r7 = r6 & (~128) 			  ## midi_dec.c:1385:32
  113f0e:    27 cf       	r7 <<= r4 			  ## midi_dec.c:1385:40
  113f10:    3a da       	r2 |= r7 			  ## midi_dec.c:1385:53
  113f12:    00 ee a7 08 	r7 = r10 + r8 
  113f16:    00 e8 7b 80 	r11 = b[r7 + 2] 
  113f1a:    00 ed 88 01 	r8 = r8 + 1 			  ## midi_dec.c:1382:12
  113f1e:    e7 d1       	r7 = r4 + 7 			  ## midi_dec.c:1386:22
  113f20:    b4 c9       	r4 = r6.b (s) 			  ## midi_dec.c:1385:32
  113f22:    fc 9f       	cmp r4, -1			  ## midi_dec.c:1382:12
  113f24:    9e c6       	r6 = r11 			  ## midi_dec.c:1382:12
  113f26:    ed 1c       	ifs (nzcv > 0) goto -38 <.GJTIE412_1_1_+0xA44 : 113f02 >			  ## midi_dec.c:1382:12
  113f28:    00 ed 86 02 	r6 = r8 + 2 			  ## midi_dec.c:1388:16
  113f2c:    00 ed 84 01 	r4 = r8 + 1 			  ## midi_dec.c:1388:16
  113f30:    13 08       	goto 38 <.GJTIE412_1_1_+0xA9A : 113f58 >			  ## midi_dec.c:1388:16
  113f32:    02 47       	r2 = [sp+ 112] 			  ## midi_dec.c:1407:10
  113f34:    12 48       	r2 = [r2 + 0] 			  ## midi_dec.c:1407:10
  113f36:    2c 48       	r4 = [r5 + 0] 			  ## midi_dec.c:1407:10
  113f38:    e2 06       	macc = r4 * r2 (s) 			  ## midi_dec.c:1407:10
  113f3a:    c0 f9 06 10 	r6 = macc >>> 16 			  ## midi_dec.c:1407:10
  113f3e:    42 47       	r2 = [sp+ 116] 			  ## midi_dec.c:1408:44
  113f40:    12 48       	r2 = [r2 + 0] 			  ## midi_dec.c:1408:44
  113f42:    32 ce       	cmp r6, r2			  ## midi_dec.c:1408:14
  113f44:    20 03       	if (nzcv >= 0) {			  ## midi_dec.c:1408:14
  113f46:    32 c6       		r2 = r6 
                               	}			  ## midi_dec.c:1408:14
  113f48:    2a 68       	[r5 + 0] = r2 			  ## midi_dec.c:1410:29
  113f4a:    10 e8 d4 00 	r4 = h[r13 + 0] 			  ## midi_dec.c:1412:10
  113f4e:    d4 06       	macc = r2 * r4 (s) 			  ## midi_dec.c:1412:10
  113f50:    4b 08       	goto 150 <.GJTIE412_1_1_+0xB2A : 113fe8 >			  ## midi_dec.c:1412:10
  113f52:    9f c6       	r7 = r11 
  113f54:    73 c6       	r11 = r6 
  113f56:    3e c6       	r6 = r7 
  113f58:    a4 d0       	r4 = r4 + 2 			  ## midi_dec.c:1391:55
  113f5a:    0c 68       	[r1 + 0] = r4 			  ## midi_dec.c:1391:55
  113f5c:    00 ee a4 06 	r4 = r10 + r6 			  ## midi_dec.c:1391:21
  113f60:    24 58       	r4 = b[r4 + 0] 			  ## midi_dec.c:1391:21
  113f62:    24 a8       	r4 = r4 << 8 			  ## midi_dec.c:1392:29
  113f64:    00 f0 44 0b 	r4 = r4 | r11 			  ## midi_dec.c:1392:35
  113f68:    e4 c9       	r4 = r4.l (s) 			  ## midi_dec.c:1395:32
  113f6a:    c7 45       	r7 = [sp+ 92] 			  ## midi_dec.c:1395:32
  113f6c:    c0 fc 44 07 	r4 = r4 / r7 (s) 			  ## midi_dec.c:1395:39
  113f70:    0e 40       	r6 = [sp+ 128] 			  ## midi_dec.c:1395:30
  113f72:    34 68       	[r6 + 0] = r4 			  ## midi_dec.c:1395:30
  113f74:    3a 06       	r2 *= r7 			  ## midi_dec.c:1396:40
  113f76:    0c 41       	r4 = [sp+ 144] 			  ## midi_dec.c:1396:30
  113f78:    22 68       	[r4 + 0] = r2 			  ## midi_dec.c:1396:30
  113f7a:    02 46       	r2 = [sp+ 96] 			  ## midi_dec.c:1398:32
  113f7c:    d2 d3       	r2 = r2 + -1 			  ## midi_dec.c:1398:32
  113f7e:    c4 47       	r4 = [sp+ 124] 			  ## midi_dec.c:1398:32
  113f80:    22 68       	[r4 + 0] = r2 			  ## midi_dec.c:1398:32
  113f82:    20 e9 0b 11 	r11 = [sp+ 68] 			  ## midi_dec.c:1398:32
  113f86:    50 ea 01 00 	r8 = 1 			  ## midi_dec.c:1398:32
  113f8a:    20 e9 0a 1e 	r10 = [sp+ 120] 			  ## midi_dec.c:1398:32
  113f8e:    4f 40       	r7 = [sp+ 132] 			  ## midi_dec.c:1398:32
  113f90:    ce 41       	r6 = [sp+ 156] 			  ## midi_dec.c:1398:32
  113f92:    90 e8 62 00 	r2 = h[r6 + 0] (s) 			  ## midi_dec.c:1401:10
  113f96:    2c 48       	r4 = [r5 + 0] 			  ## midi_dec.c:1401:10
  113f98:    e2 06       	macc = r4 * r2 (s) 			  ## midi_dec.c:1401:10
  113f9a:    c0 f9 02 0f 	r2 = macc >>> 15 			  ## midi_dec.c:1401:10
  113f9e:    10 e8 d4 00 	r4 = h[r13 + 0] 			  ## midi_dec.c:1402:10
  113fa2:    d4 06       	macc = r2 * r4 (s) 			  ## midi_dec.c:1402:10
  113fa4:    22 08       	goto 68 <.GJTIE412_1_1_+0xB2C : 113fea >			  ## midi_dec.c:1402:10
  113fa6:    00 e8 e2 00 	r2 = b[r14 + 0] 			  ## midi_dec.c:1335:22
  113faa:    d2 20       	if (r2 == 0) goto 26 <.GJTIE412_1_1_+0xB08 : 113fc6 >			  ## midi_dec.c:1335:22
  113fac:    10 e8 92 00 	r2 = h[r9 + 0] 			  ## midi_dec.c:1350:23
  113fb0:    02 98       	cmp r2, 0			  ## midi_dec.c:1350:13
  113fb2:    ff fb e0 f5 	ifs (nzcv == 0) goto -324 <.GJTIE412_1_1_+0x9B4 : 113e72 >			  ## midi_dec.c:1350:13
  113fb6:    d2 d3       	r2 = r2 + -1 			  ## midi_dec.c:1352:33
  113fb8:    50 e8 92 00 	h[r9 + 0] = r2 			  ## midi_dec.c:1352:33
  113fbc:    10 e8 d2 00 	r2 = h[r13 + 0] 			  ## midi_dec.c:1353:10
  113fc0:    2e 48       	r6 = [r5 + 0] 			  ## midi_dec.c:1353:10
  113fc2:    f2 06       	macc = r6 * r2 (s) 			  ## midi_dec.c:1353:10
  113fc4:    11 08       	goto 34 <.GJTIE412_1_1_+0xB2A : 113fe8 >			  ## midi_dec.c:1353:10
  113fc6:    4a 41       	r2 = [sp+ 148] 			  ## midi_dec.c:1337:40
  113fc8:    12 48       	r2 = [r2 + 0] 			  ## midi_dec.c:1337:40
  113fca:    2e 48       	r6 = [r5 + 0] 			  ## midi_dec.c:1337:27
  113fcc:    92 d5       	r2 = r2 + r6 			  ## midi_dec.c:1337:27
  113fce:    2a 68       	[r5 + 0] = r2 			  ## midi_dec.c:1337:27
  113fd0:    04 ef 20 80 	cmp r2, 1073741824			  ## midi_dec.c:1338:13
  113fd4:    82 03       	if (nzcv > 0) {			  ## midi_dec.c:1338:13
  113fd6:    24 ea 02 80 		r2 = 1073741824 			  ## midi_dec.c:1338:13
  113fda:    2a 68       		[r5 + 0] = r2 			  ## midi_dec.c:1340:28
  113fdc:    40 e8 e8 00 		b[r14 + 0] = r8 
                               	}			  ## midi_dec.c:1341:28
  113fe0:    10 e8 d6 00 	r6 = h[r13 + 0] 			  ## midi_dec.c:1343:9
  113fe4:    d6 06       	macc = r2 * r6 (s) 			  ## midi_dec.c:1343:9
  113fe6:    0f 80       	r7 = 1 
  113fe8:    ce 41       	r6 = [sp+ 156] 
  113fea:    20 f7 c2 01 	r2 = r12 << 1 
  113fee:    12 d4       	r2 = r2 + r0 
  113ff0:    c0 f9 04 1d 	r4 = macc >>> 29 			  ## midi_dec.c:1343:9
  113ff4:    50 e8 24 99 	h[r2 + 102] = r4 
  113ff8:    5b d0       	r3 = r3 + 1 			  ## midi_dec.c:1333:45
  113ffa:    00 ec 3c 00 	r12 = r3.b 			  ## midi_dec.c:1333:23
  113ffe:    e2 ce       	cmp r12, r10			  ## midi_dec.c:1333:7
  114000:    d2 1b       	ifs (nzcv < 0) goto -92 <.GJTIE412_1_1_+0xAE8 : 113fa6 >			  ## midi_dec.c:1333:7
  114002:    03 08       	goto 6 <.GJTIE412_1_1_+0xB4C : 11400a >			  ## midi_dec.c:1333:7
  114004:    20 e9 0a 1e 	r10 = [sp+ 120] 
  114008:    4f 40       	r7 = [sp+ 132] 
  11400a:    86 46       	r6 = [sp+ 104] 
  11400c:    00 f7 8e 06 	r14 = r8 << r6 			  ## midi_dec.c:1323:39
  114010:    00 fc 65 e0 	r5 = r6 * 224 			  ## midi_dec.c:1421:21
  114014:    44 46       	r4 = [sp+ 100] 			  ## midi_dec.c:1421:21
  114016:    00 e7 40 05 	r0 = b[r4 + r5] 			  ## midi_dec.c:1421:21
  11401a:    10 98       	cmp r0, 2			  ## midi_dec.c:1421:11
  11401c:    4f 60       	[sp+ 132] = r7 			  ## midi_dec.c:1421:11
  11401e:    10 10       	ifs (nzcv == 0) goto 32 <.GJTIE412_1_1_+0xB82 : 114040 >			  ## midi_dec.c:1421:11
  114020:    08 98       	cmp r0, 1
  114022:    20 e9 0c 1b 	r12 = [sp+ 108] 
  114026:    20 e9 0a 12 	r10 = [sp+ 72] 
  11402a:    20 e9 09 14 	r9 = [sp+ 80] 
  11402e:    20 e9 0d 13 	r13 = [sp+ 76] 
  114032:    5a 11       	ifs (nzcv != 0) goto 180 <.GJTIE412_1_1_+0xC2A : 1140e8 >
  114034:    88 41       	r0 = [sp+ 152] 			  ## midi_dec.c:1423:12
  114036:    31 c6       	r1 = r6 			  ## midi_dec.c:1423:12
  114038:    82 47       	r2 = [sp+ 120] 			  ## midi_dec.c:1423:12
  11403a:    f8 e1 df 8c 	call -61030 <midi_gen_sample : 1051d8 >			  ## midi_dec.c:1423:12
  11403e:    54 08       	goto 168 <.GJTIE412_1_1_+0xC2A : 1140e8 >			  ## midi_dec.c:1423:12
  114040:    00 ee 48 05 	r8 = r4 + r5 			  ## midi_dec.c:1448:24
  114044:    00 ed 87 0c 	r7 = r8 + 12 			  ## midi_dec.c:1448:24
  114048:    00 e8 80 c0 	r0 = b[r8 + 3] 			  ## midi_dec.c:1448:24
  11404c:    80 21       	if (r0 == 0) goto 48 <.GJTIE412_1_1_+0xBC0 : 11407e >			  ## midi_dec.c:1448:24
  11404e:    88 41       	r0 = [sp+ 152] 			  ## midi_dec.c:1470:10
  114050:    31 c6       	r1 = r6 			  ## midi_dec.c:1470:10
  114052:    92 c6       	r2 = r10 			  ## midi_dec.c:1470:10
  114054:    f8 e1 0f 8c 	call -61056 <midi_gen_sample : 1051d8 >			  ## midi_dec.c:1470:10
  114058:    38 48       	r0 = [r7 + 0] 			  ## midi_dec.c:1471:30
  11405a:    20 e9 0c 1b 	r12 = [sp+ 108] 			  ## midi_dec.c:1471:30
  11405e:    20 e9 0a 12 	r10 = [sp+ 72] 			  ## midi_dec.c:1471:30
  114062:    20 e9 09 14 	r9 = [sp+ 80] 			  ## midi_dec.c:1471:30
  114066:    20 e9 0d 13 	r13 = [sp+ 76] 			  ## midi_dec.c:1471:30
  11406a:    e0 23       	if (r0 == 0) goto 124 <.GJTIE412_1_1_+0xC2A : 1140e8 >			  ## midi_dec.c:1471:30
  11406c:    c9 40       	r1 = [sp+ 140] 
  11406e:    08 48       	r0 = [r1 + 0] 			  ## midi_dec.c:1473:39
  114070:    c0 f0 00 0e 	r0 = r0 & ~r14 			  ## midi_dec.c:1473:39
  114074:    08 68       	[r1 + 0] = r0 			  ## midi_dec.c:1473:39
  114076:    00 43       	r0 = [sp+ 48] 			  ## midi_dec.c:1474:28
  114078:    00 58       	r0 = b[r0 + 0] 			  ## midi_dec.c:1474:28
  11407a:    68 21       	if (r0 != 0) goto 44 <.GJTIE412_1_1_+0xBEA : 1140a8 >			  ## midi_dec.c:1474:28
  11407c:    35 08       	goto 106 <.GJTIE412_1_1_+0xC2A : 1140e8 >			  ## midi_dec.c:1474:28
  11407e:    38 48       	r0 = [r7 + 0] 			  ## midi_dec.c:1448:57
  114080:    60 26       	if (r0 == 0) goto -52 <.GJTIE412_1_1_+0xB90 : 11404e >			  ## midi_dec.c:1448:57
  114082:    00 80       	r0 = 0 			  ## midi_dec.c:1450:26
  114084:    40 e8 80 42 	b[r8 + 9] = r0 			  ## midi_dec.c:1450:26
  114088:    c9 40       	r1 = [sp+ 140] 			  ## midi_dec.c:1450:26
  11408a:    08 48       	r0 = [r1 + 0] 			  ## midi_dec.c:1451:37
  11408c:    c0 f0 00 0e 	r0 = r0 & ~r14 			  ## midi_dec.c:1451:37
  114090:    08 68       	[r1 + 0] = r0 			  ## midi_dec.c:1451:37
  114092:    00 43       	r0 = [sp+ 48] 			  ## midi_dec.c:1452:26
  114094:    00 58       	r0 = b[r0 + 0] 			  ## midi_dec.c:1452:26
  114096:    20 e9 0c 1b 	r12 = [sp+ 108] 			  ## midi_dec.c:1452:26
  11409a:    20 e9 0a 12 	r10 = [sp+ 72] 			  ## midi_dec.c:1452:26
  11409e:    20 e9 09 14 	r9 = [sp+ 80] 			  ## midi_dec.c:1452:26
  1140a2:    20 e9 0d 13 	r13 = [sp+ 76] 			  ## midi_dec.c:1452:26
  1140a6:    00 22       	if (r0 == 0) goto 64 <.GJTIE412_1_1_+0xC2A : 1140e8 >			  ## midi_dec.c:1452:26
  1140a8:    40 f2 e0 00 	r0 = ~r14 
  1140ac:    c1 42       	r1 = [sp+ 44] 
  1140ae:    09 48       	r1 = [r1 + 0] 
  1140b0:    80 f0 12 0e 	r2 = r1 & r14 
  1140b4:    83 42       	r3 = [sp+ 40] 
  1140b6:    1b 58       	r3 = b[r3 + 0] 
  1140b8:    a3 20       	if (r3 == 0) goto 20 <.GJTIE412_1_1_+0xC10 : 1140ce >
  1140ba:    62 21       	if (r2 == 0) goto 44 <.GJTIE412_1_1_+0xC2A : 1140e8 >
  1140bc:    88 da       	r0 &= r1 
  1140be:    c1 42       	r1 = [sp+ 44] 
  1140c0:    08 68       	[r1 + 0] = r0 
  1140c2:    40 41       	r0 = [sp+ 20] 
  1140c4:    00 e7 01 06 	r1 = b[r0 + r6] 
  1140c8:    00 e8 82 01 	r2 = b[r8 + 4] 
  1140cc:    08 08       	goto 16 <.GJTIE412_1_1_+0xC20 : 1140de >
  1140ce:    32 20       	if (r2 == 0) goto 6 <.GJTIE412_1_1_+0xC18 : 1140d6 >
  1140d0:    88 da       	r0 &= r1 
  1140d2:    c1 42       	r1 = [sp+ 44] 
  1140d4:    08 68       	[r1 + 0] = r0 
  1140d6:    00 e8 82 01 	r2 = b[r8 + 4] 
  1140da:    00 e8 81 41 	r1 = b[r8 + 5] 
  1140de:    00 42       	r0 = [sp+ 32] 
  1140e0:    00 48       	r0 = [r0 + 0] 
  1140e2:    43 42       	r3 = [sp+ 36] 
  1140e4:    1b 48       	r3 = [r3 + 0] 
  1140e6:    ab 01       	call r3
  1140e8:    60 d5       	r0 = r4 + r5 			  ## midi_dec.c:1496:20
  1140ea:    20 e8 01 15 	r1 = [r0 + 84] 			  ## midi_dec.c:1496:20
  1140ee:    01 98       	cmp r1, 0			  ## midi_dec.c:1496:20
  1140f0:    ff fb 40 e5 	ifs (nzcv == 0) goto -856 <.GJTIE412_1_1_+0x8DE : 113d9c >			  ## midi_dec.c:1496:20
  1140f4:    40 43       	r0 = [sp+ 52] 			  ## midi_dec.c:1514:48
  1140f6:    c2 4a       	r2 = [r0 + 44] 			  ## midi_dec.c:1514:48
  1140f8:    08 80       	r0 = 1 			  ## midi_dec.c:1514:15
  1140fa:    0a ce       	cmp r1, r2			  ## midi_dec.c:1514:15
  1140fc:    90 03       	if (nzcv <= 0) {			  ## midi_dec.c:1514:15
  1140fe:    48 40       		r0 = [sp+ 132] 
                               	}			  ## midi_dec.c:1514:15
  114100:    48 60       	[sp+ 132] = r0 			  ## midi_dec.c:1514:15
  114102:    50 ea 01 00 	r8 = 1 
  114106:    76 d0       	r6 = r6 + 1 			  ## midi_dec.c:1321:51
  114108:    90 e8 90 00 	r0 = h[r9 + 0] (s) 			  ## midi_dec.c:1321:20
  11410c:    30 ce       	cmp r6, r0			  ## midi_dec.c:1321:4
  11410e:    ff fb 3b e7 	ifs (nzcv < 0) goto -794 <.GJTIE412_1_1_+0x93A : 113df8 >			  ## midi_dec.c:1321:4
  114112:    00 e8 c0 7f 	r0 = b[r12 + -3] 			  ## midi_dec.c:1528:22
  114116:    60 21       	if (r0 == 0) goto 44 <.GJTIE412_1_1_+0xC86 : 114144 >			  ## midi_dec.c:1528:9
  114118:    80 ef b0 01 	cmp r11, 1			  ## midi_dec.c:1530:6
  11411c:    83 47       	r3 = [sp+ 120] 			  ## midi_dec.c:1530:6
  11411e:    0b 1b       	ifs (nzcv < 0) goto 22 <.GJTIE412_1_1_+0xC78 : 114136 >			  ## midi_dec.c:1530:6
  114120:    00 80       	r0 = 0 
  114122:    c1 41       	r1 = [sp+ 28] 
  114124:    0a 48       	r2 = [r1 + 0] 			  ## midi_dec.c:1532:18
  114126:    08 ed 22 00 	r2 = r2 + 2048 			  ## midi_dec.c:1532:46
  11412a:    d2 ac       	r2 = r2 >>> 12 			  ## midi_dec.c:1532:54
  11412c:    68 e8 12 01 	[r1 ++= 4] = r2 			  ## midi_dec.c:1533:35
  114130:    40 d0       	r0 = r0 + 1 			  ## midi_dec.c:1530:44
  114132:    03 ce       	cmp r0, r3			  ## midi_dec.c:1530:6
  114134:    f7 1b       	ifs (nzcv < 0) goto -18 <.GJTIE412_1_1_+0xC66 : 114124 >			  ## midi_dec.c:1530:6
  114136:    81 45       	r1 = [sp+ 88] 
  114138:    00 e5 14 0c 	r4, r0 = d[r1 + 48] 			  ## midi_dec.c:1535:70
  11413c:    c1 41       	r1 = [sp+ 28] 			  ## midi_dec.c:1535:6
  11413e:    92 c6       	r2 = r10 			  ## midi_dec.c:1535:6
  114140:    ac 01       	call r4			  ## midi_dec.c:1535:6
  114142:    1e 08       	goto 60 <.GJTIE412_1_1_+0xCC2 : 114180 >			  ## midi_dec.c:1535:6
  114144:    80 ef b0 01 	cmp r11, 1			  ## midi_dec.c:1539:6
  114148:    1b 1b       	ifs (nzcv < 0) goto 54 <.GJTIE412_1_1_+0xCC2 : 114180 >			  ## midi_dec.c:1539:6
  11414a:    00 80       	r0 = 0 
  11414c:    c1 41       	r1 = [sp+ 28] 
  11414e:    92 c6       	r2 = r10 
  114150:    28 e8 13 01 	r3 = [r1 ++= 4] 			  ## midi_dec.c:1541:18
  114154:    08 ed 33 00 	r3 = r3 + 2048 			  ## midi_dec.c:1541:46
  114158:    db ac       	r3 = r3 >>> 12 			  ## midi_dec.c:1541:54
  11415a:    94 ea 00 80 	r4 = -32768 			  ## midi_dec.c:1546:16
  11415e:    1c ce       	cmp r3, r4			  ## midi_dec.c:1546:16
  114160:    1c c6       	r4 = r3 			  ## midi_dec.c:1546:16
  114162:    d0 03       	ifs (nzcv <= 0) {			  ## midi_dec.c:1546:16
  114164:    94 ea 00 80 		r4 = -32768 
                               	}			  ## midi_dec.c:1546:16
  114168:    15 ea ff 7f 	r5 = 32767 			  ## midi_dec.c:1546:16
  11416c:    0c ef 30 00 	cmp r3, 32768			  ## midi_dec.c:1549:41
  114170:    b0 03       	ifs (nzcv < 0) {			  ## midi_dec.c:1549:41
  114172:    25 c6       		r5 = r4 
                               	}			  ## midi_dec.c:1549:41
  114174:    58 e8 25 80 	h[r2 ++= 2] = r5 			  ## midi_dec.c:1549:39
  114178:    40 d0       	r0 = r0 + 1 			  ## midi_dec.c:1539:44
  11417a:    83 47       	r3 = [sp+ 120] 			  ## midi_dec.c:1539:6
  11417c:    03 ce       	cmp r0, r3			  ## midi_dec.c:1539:6
  11417e:    e8 1b       	ifs (nzcv < 0) goto -48 <.GJTIE412_1_1_+0xC92 : 114150 >			  ## midi_dec.c:1539:6
  114180:    c0 40       	r0 = [sp+ 12] 			  ## midi_dec.c:1552:64
  114182:    00 48       	r0 = [r0 + 0] 			  ## midi_dec.c:1552:64
  114184:    81 40       	r1 = [sp+ 8] 			  ## midi_dec.c:1552:37
  114186:    0b 48       	r3 = [r1 + 0] 			  ## midi_dec.c:1552:37
  114188:    84 47       	r4 = [sp+ 120] 			  ## midi_dec.c:1552:37
  11418a:    26 a1       	r6 = r4 << 1 			  ## midi_dec.c:1552:104
  11418c:    91 c6       	r1 = r10 			  ## midi_dec.c:1552:17
  11418e:    32 c6       	r2 = r6 			  ## midi_dec.c:1552:17
  114190:    ab 01       	call r3			  ## midi_dec.c:1552:17
  114192:    05 c6       	r5 = r0 			  ## midi_dec.c:1552:17
  114194:    c0 41       	r0 = [sp+ 28] 			  ## midi_dec.c:1553:5
  114196:    01 80       	r1 = 0 			  ## midi_dec.c:1553:5
  114198:    12 ea 80 00 	r2 = 128 			  ## midi_dec.c:1553:5
  11419c:    d7 e1 ef 6d 	call -332356 <memset : c2f5c >			  ## midi_dec.c:1553:5
  1141a0:    40 ee bb 04 	r11 = r11 - r4 			  ## midi_dec.c:1556:28
  1141a4:    35 ce       	cmp r6, r5			  ## midi_dec.c:1557:8
  1141a6:    ff fb 5d de 	ifs (nzcv <= 0) goto -1078 <.GJTIE412_1_1_+0x8B6 : 113d74 >			  ## midi_dec.c:1557:8
  1141aa:    50 e8 c5 06 	h[r12 + 24] = r5 			  ## midi_dec.c:1559:26
  1141ae:    70 d7       	r0 = r6 - r5 			  ## midi_dec.c:1560:38
  1141b0:    50 e8 c0 86 	h[r12 + 26] = r0 			  ## midi_dec.c:1560:24
  1141b4:    60 e8 cb 05 	[r12 + 20] = r11 			  ## midi_dec.c:1561:36
  1141b8:    51 ea 00 00 	r9 = 0 			  ## midi_dec.c:1561:36
  1141bc:    e5 08       	goto 458 <.GJTIE412_1_1_+0xECA : 114388 >			  ## midi_dec.c:1561:36
  1141be:    48 40       	r0 = [sp+ 132] 			  ## midi_dec.c:1567:7
  1141c0:    38 20       	if (r0 != 0) goto 6 <.GJTIE412_1_1_+0xD0A : 1141c8 >			  ## midi_dec.c:1567:7
  1141c2:    00 80       	r0 = 0 			  ## midi_dec.c:1569:29
  1141c4:    50 e8 c0 ff 	h[r12 + -2] = r0 			  ## midi_dec.c:1569:29
  1141c8:    80 43       	r0 = [sp+ 56] 			  ## midi_dec.c:1572:49
  1141ca:    40 48       	r0 = [r0 + 4] 			  ## midi_dec.c:1572:49
  1141cc:    01 41       	r1 = [sp+ 16] 			  ## midi_dec.c:1572:34
  1141ce:    c8 6f       	[r1 + -4] = r0 			  ## midi_dec.c:1572:34
  1141d0:    10 e8 c0 86 	r0 = h[r12 + 26] 			  ## midi_dec.c:1573:20
  1141d4:    51 ea 00 00 	r9 = 0 			  ## midi_dec.c:1573:20
  1141d8:    c5 43       	r5 = [sp+ 60] 			  ## midi_dec.c:1573:20
  1141da:    00 98       	cmp r0, 0			  ## midi_dec.c:1573:20
  1141dc:    00 fb 41 0d 	ifs (nzcv != 0) goto 424 <.GJTIE412_1_1_+0xECA : 114388 >			  ## midi_dec.c:1573:20
  1141e0:    64 08       	goto 200 <.GJTIE412_1_1_+0xDEC : 1142aa >			  ## midi_dec.c:1573:20
  1141e2:    00 80       	r0 = 0 			  ## midi_dec.c:1237:27
  1141e4:    60 e8 c0 07 	[r12 + 28] = r0 			  ## midi_dec.c:1237:27
  1141e8:    c8 40       	r0 = [sp+ 140] 			  ## midi_dec.c:1241:69
  1141ea:    00 48       	r0 = [r0 + 0] 			  ## midi_dec.c:1241:69
  1141ec:    00 98       	cmp r0, 0			  ## midi_dec.c:1241:69
  1141ee:    00 fb 00 09 	ifs (nzcv == 0) goto 288 <.GJTIE412_1_1_+0xE54 : 114312 >			  ## midi_dec.c:1241:69
  1141f2:    80 45       	r0 = [sp+ 88] 
  1141f4:    80 4f       	r0 = [r0 + -8] 
  1141f6:    21 49       	r1 = [r4 + 16] 
  1141f8:    40 d4       	r0 = r0 + r1 
  1141fa:    11 ea ff 1f 	r1 = 8191 
  1141fe:    81 da       	r1 &= r0 
  114200:    21 69       	[r4 + 16] = r1 
  114202:    60 f7 0b 0d 	r11 = r0 >> 13 
  114206:    70 48       	r0 = [r6 + 4] 
  114208:    98 cb       	r0 += r11 
  11420a:    70 68       	[r6 + 4] = r0 
  11420c:    80 45       	r0 = [sp+ 88] 			  ## midi_dec.c:1265:19
  11420e:    40 5b       	r0 = b[r0 + -11] 			  ## midi_dec.c:1265:19
  114210:    e0 23       	if (r0 == 0) goto 124 <.GJTIE412_1_1_+0xDD0 : 11428e >			  ## midi_dec.c:1265:19
  114212:    08 80       	r0 = 1 
  114214:    40 e8 c0 3f 	b[r12 + -4] = r0 			  ## midi_dec.c:1267:29
  114218:    80 45       	r0 = [sp+ 88] 			  ## midi_dec.c:1268:20
  11421a:    00 4f       	r0 = [r0 + -16] 			  ## midi_dec.c:1268:20
  11421c:    08 98       	cmp r0, 1			  ## midi_dec.c:1268:7
  11421e:    37 11       	ifs (nzcv != 0) goto 110 <.GJTIE412_1_1_+0xDD0 : 11428e >			  ## midi_dec.c:1268:7
  114220:    00 45       	r0 = [sp+ 80] 			  ## midi_dec.c:1271:43
  114222:    90 e8 03 00 	r3 = h[r0 + 0] (s) 			  ## midi_dec.c:1271:43
  114226:    0b 98       	cmp r3, 1			  ## midi_dec.c:1271:4
  114228:    32 1b       	ifs (nzcv < 0) goto 100 <.GJTIE412_1_1_+0xDD0 : 11428e >			  ## midi_dec.c:1271:4
  11422a:    00 80       	r0 = 0 
  11422c:    01 80       	r1 = 0 
  11422e:    02 80       	r2 = 0 
  114230:    cc 40       	r4 = [sp+ 140] 			  ## midi_dec.c:1273:22
  114232:    24 48       	r4 = [r4 + 0] 			  ## midi_dec.c:1273:22
  114234:    80 f1 44 02 	r4 = r4 & setbit(r2) 			  ## midi_dec.c:1273:37
  114238:    23 10       	ifs (nzcv == 0) goto 70 <.GJTIE412_1_1_+0xDC2 : 114280 >			  ## midi_dec.c:1273:37
  11423a:    20 e8 d4 00 	r4 = [r13 + 0] 			  ## midi_dec.c:1276:32
  11423e:    64 d4       	r4 = r4 + r1 			  ## midi_dec.c:1277:31
  114240:    25 c6       	r5 = r4 			  ## midi_dec.c:1277:31
  114242:    24 e8 56 37 	r6 = [++ r5 = 220] 			  ## midi_dec.c:1277:31
  114246:    76 d0       	r6 = r6 + 1 			  ## midi_dec.c:1277:31
  114248:    2e 68       	[r5 + 0] = r6 			  ## midi_dec.c:1277:31
  11424a:    ed 4f       	r5 = [r5 + -4] 			  ## midi_dec.c:1278:49
  11424c:    35 ce       	cmp r6, r5			  ## midi_dec.c:1278:10
  11424e:    17 11       	ifs (nzcv != 0) goto 46 <.GJTIE412_1_1_+0xDC0 : 11427e >			  ## midi_dec.c:1278:10
  114250:    25 c6       	r5 = r4 			  ## midi_dec.c:1280:30
  114252:    64 e8 50 14 	[++ r5 = 80] = r0 			  ## midi_dec.c:1280:30
  114256:    ae 54       	r6 = h[r5 + 10] 			  ## midi_dec.c:1281:31
  114258:    2e 69       	[r5 + 16] = r6 			  ## midi_dec.c:1281:29
  11425a:    00 ed 45 bc 	r5 = r4 + 188 			  ## midi_dec.c:1281:29
  11425e:    2e 58       	r6 = b[r5 + 0] 			  ## midi_dec.c:1282:30
  114260:    06 98       	cmp r6, 0			  ## midi_dec.c:1282:11
  114262:    86 43       	r6 = [sp+ 56] 			  ## midi_dec.c:1282:11
  114264:    0d 10       	ifs (nzcv == 0) goto 26 <.GJTIE412_1_1_+0xDC2 : 114280 >			  ## midi_dec.c:1282:11
  114266:    28 78       	b[r5 + 0] = r0 			  ## midi_dec.c:1284:35
  114268:    90 e8 43 31 	r3 = h[r4 + 196] (s) 			  ## midi_dec.c:1285:8
  11426c:    24 e8 45 15 	r5 = [++ r4 = 84] 			  ## midi_dec.c:1285:8
  114270:    eb 06       	macc = r5 * r3 (s) 			  ## midi_dec.c:1285:8
  114272:    c0 f9 03 0f 	r3 = macc >>> 15 			  ## midi_dec.c:1285:8
  114276:    23 68       	[r4 + 0] = r3 			  ## midi_dec.c:1285:8
  114278:    03 45       	r3 = [sp+ 80] 			  ## midi_dec.c:1285:8
  11427a:    1b 50       	r3 = h[r3 + 0] 			  ## midi_dec.c:1285:8
  11427c:    01 08       	goto 2 <.GJTIE412_1_1_+0xDC2 : 114280 >			  ## midi_dec.c:1285:8
  11427e:    86 43       	r6 = [sp+ 56] 
  114280:    00 ed 11 e0 	r1 = r1 + 224 			  ## midi_dec.c:1271:28
  114284:    52 d0       	r2 = r2 + 1 			  ## midi_dec.c:1271:66
  114286:    dc c9       	r4 = r3.l (s) 			  ## midi_dec.c:1271:30
  114288:    14 ce       	cmp r2, r4			  ## midi_dec.c:1271:4
  11428a:    c5 43       	r5 = [sp+ 60] 			  ## midi_dec.c:1271:4
  11428c:    d1 1b       	ifs (nzcv < 0) goto -94 <.GJTIE412_1_1_+0xD72 : 114230 >			  ## midi_dec.c:1271:4
  11428e:    80 45       	r0 = [sp+ 88] 			  ## midi_dec.c:1296:19
  114290:    40 5c       	r0 = b[r0 + 6] 			  ## midi_dec.c:1296:19
  114292:    b8 20       	if (r0 != 0) goto 22 <.GJTIE412_1_1_+0xDEC : 1142aa >			  ## midi_dec.c:1296:19
  114294:    01 41       	r1 = [sp+ 16] 
  114296:    08 58       	r0 = b[r1 + 0] 			  ## midi_dec.c:1308:20
  114298:    00 98       	cmp r0, 0			  ## midi_dec.c:1308:20
  11429a:    54 10       	ifs (nzcv == 0) goto 168 <.GJTIE412_1_1_+0xE86 : 114344 >			  ## midi_dec.c:1308:20
  11429c:    c8 4f       	r0 = [r1 + -4] 			  ## midi_dec.c:1581:54
  11429e:    71 48       	r1 = [r6 + 4] 			  ## midi_dec.c:1581:20
  1142a0:    08 ce       	cmp r1, r0			  ## midi_dec.c:1581:7
  1142a2:    22 03       	if (nzcv >= 0) {			  ## midi_dec.c:1583:25
  1142a4:    00 80       		r0 = 0 			  ## midi_dec.c:1583:25
  1142a6:    01 41       		r1 = [sp+ 16] 			  ## midi_dec.c:1583:25
  1142a8:    08 78       		b[r1 + 0] = r0 
                               	}			  ## midi_dec.c:1583:25
  1142aa:    84 45       	r4 = [sp+ 88] 
  1142ac:    20 48       	r0 = [r4 + 0] 			  ## midi_dec.c:1589:23
  1142ae:    40 d0       	r0 = r0 + 1 			  ## midi_dec.c:1589:23
  1142b0:    20 68       	[r4 + 0] = r0 			  ## midi_dec.c:1589:23
  1142b2:    e9 55       	r1 = h[r5 + 30] 			  ## midi_dec.c:1591:31
  1142b4:    01 ce       	cmp r0, r1			  ## midi_dec.c:1591:6
  1142b6:    1f 13       	if (nzcv < 0) goto 62 <.GJTIE412_1_1_+0xE38 : 1142f6 >			  ## midi_dec.c:1591:6
  1142b8:    00 80       	r0 = 0 
  1142ba:    20 68       	[r4 + 0] = r0 			  ## midi_dec.c:1593:25
  1142bc:    88 41       	r0 = [sp+ 152] 			  ## midi_dec.c:1593:25
  1142be:    06 ed 01 3f 	r1 = r0 + 1599 			  ## midi_dec.c:1595:16
  1142c2:    09 58       	r1 = b[r1 + 0] 			  ## midi_dec.c:1595:28
  1142c4:    4a d0       	r2 = r1 + 1 			  ## midi_dec.c:1595:28
  1142c6:    62 7e       	b[r4 + 7] = r2 			  ## midi_dec.c:1595:28
  1142c8:    a1 58       	r1 = b[r4 + 8] 			  ## midi_dec.c:1596:49
  1142ca:    12 c9       	r2 = r2.b 			  ## midi_dec.c:1595:28
  1142cc:    11 ce       	cmp r2, r1			  ## midi_dec.c:1596:7
  1142ce:    0c 11       	ifs (nzcv != 0) goto 24 <.GJTIE412_1_1_+0xE2A : 1142e8 >			  ## midi_dec.c:1596:7
  1142d0:    a1 5a       	r1 = b[r4 + 9] 			  ## midi_dec.c:1599:21
  1142d2:    21 20       	if (r1 == 0) goto 4 <.GJTIE412_1_1_+0xE1A : 1142d8 >			  ## midi_dec.c:1599:21
  1142d4:    f8 e1 8f 2e 	call -64048 <midi_save_bk_fun : 1048a8 >			  ## midi_dec.c:1601:5
  1142d8:    00 80       	r0 = 0 
  1142da:    84 45       	r4 = [sp+ 88] 
  1142dc:    60 7e       	b[r4 + 7] = r0 			  ## midi_dec.c:1604:30
  1142de:    60 58       	r0 = b[r4 + 4] 			  ## midi_dec.c:1605:21
  1142e0:    30 20       	if (r0 == 0) goto 6 <.GJTIE412_1_1_+0xE2A : 1142e8 >			  ## midi_dec.c:1605:21
  1142e2:    00 e5 41 08 	r1, r0 = d[r4 + 32] 			  ## midi_dec.c:1607:69
  1142e6:    a9 01       	call r1			  ## midi_dec.c:1607:5
  1142e8:    a0 5e       	r0 = b[r4 + 11] 			  ## midi_dec.c:1613:20
  1142ea:    50 20       	if (r0 == 0) goto 10 <.GJTIE412_1_1_+0xE38 : 1142f6 >			  ## midi_dec.c:1613:20
  1142ec:    e2 58       	r2 = b[r4 + 12] 			  ## midi_dec.c:1615:4
  1142ee:    a1 58       	r1 = b[r4 + 8] 			  ## midi_dec.c:1615:4
  1142f0:    00 e5 43 0a 	r3, r0 = d[r4 + 40] 			  ## midi_dec.c:1615:63
  1142f4:    ab 01       	call r3			  ## midi_dec.c:1615:4
  1142f6:    80 41       	r0 = [sp+ 24] 			  ## midi_dec.c:1620:19
  1142f8:    40 58       	r0 = b[r0 + 4] 			  ## midi_dec.c:1620:19
  1142fa:    51 ea 00 00 	r9 = 0 			  ## midi_dec.c:1620:19
  1142fe:    00 98       	cmp r0, 0			  ## midi_dec.c:1620:19
  114300:    43 10       	ifs (nzcv == 0) goto 134 <.GJTIE412_1_1_+0xECA : 114388 >			  ## midi_dec.c:1620:19
  114302:    10 e8 c0 ff 	r0 = h[r12 + -2] 			  ## midi_dec.c:1622:20
  114306:    d0 20       	if (r0 == 0) goto 26 <.GJTIE412_1_1_+0xE64 : 114322 >			  ## midi_dec.c:1622:20
  114308:    51 ea 00 00 	r9 = 0 
  11430c:    40 e8 c9 fe 	b[r12 + -5] = r9 			  ## midi_dec.c:1632:27
  114310:    3b 08       	goto 118 <.GJTIE412_1_1_+0xECA : 114388 >			  ## midi_dec.c:1632:27
  114312:    20 e8 c0 07 	r0 = [r12 + 28] 			  ## midi_dec.c:1243:20
  114316:    53 ea 00 00 	r11 = 0 			  ## midi_dec.c:1243:20
  11431a:    00 98       	cmp r0, 0			  ## midi_dec.c:1243:20
  11431c:    ff fb 31 f7 	ifs (nzcv != 0) goto -282 <.GJTIE412_1_1_+0xD48 : 114206 >			  ## midi_dec.c:1243:20
  114320:    68 0f       	goto -304 <.GJTIE412_1_1_+0xD34 : 1141f2 >			  ## midi_dec.c:1243:20
  114322:    00 e8 c0 fe 	r0 = b[r12 + -5] 			  ## midi_dec.c:1624:21
  114326:    08 23       	if (r0 != 0) goto 96 <.GJTIE412_1_1_+0xECA : 114388 >			  ## midi_dec.c:1624:21
  114328:    08 80       	r0 = 1 			  ## midi_dec.c:1626:28
  11432a:    40 e8 c0 fe 	b[r12 + -5] = r0 			  ## midi_dec.c:1626:28
  11432e:    00 41       	r0 = [sp+ 16] 			  ## midi_dec.c:1627:70
  114330:    c0 4b       	r0 = [r0 + 60] 			  ## midi_dec.c:1627:70
  114332:    81 41       	r1 = [sp+ 24] 			  ## midi_dec.c:1627:30
  114334:    0b 49       	r3 = [r1 + 16] 			  ## midi_dec.c:1627:30
  114336:    51 ea 00 00 	r9 = 0 			  ## midi_dec.c:1627:30
  11433a:    11 ea ff 00 	r1 = 255 			  ## midi_dec.c:1627:5
  11433e:    02 80       	r2 = 0 			  ## midi_dec.c:1627:5
  114340:    ab 01       	call r3			  ## midi_dec.c:1627:5
  114342:    22 08       	goto 68 <.GJTIE412_1_1_+0xECA : 114388 >			  ## midi_dec.c:1627:5
  114344:    8c 41       	r4 = [sp+ 152] 
  114346:    05 ed 40 30 	r0 = r4 + 1328 
  11434a:    c0 61       	[sp+ 28] = r0 
  11434c:    02 ed 40 d0 	r0 = r4 + 720 
  114350:    80 60       	[sp+ 8] = r0 
  114352:    20 e9 0a 12 	r10 = [sp+ 72] 
  114356:    20 e9 09 14 	r9 = [sp+ 80] 
  11435a:    ff 0c       	goto -1538 <.GJTIE412_1_1_+0x89C : 113d5a >
  11435c:    51 ea 00 00 	r9 = 0 
  114360:    84 44       	r4 = [sp+ 72] 
  114362:    20 c6       	r0 = r4 			  ## midi_dec.c:850:4
  114364:    01 80       	r1 = 0 			  ## midi_dec.c:850:4
  114366:    02 82       	r2 = 64 			  ## midi_dec.c:850:4
  114368:    d7 e1 8f 5f 	call -332816 <memset : c2f5c >			  ## midi_dec.c:850:4
  11436c:    28 4f       	r0 = [r5 + -16] 			  ## midi_dec.c:851:51
  11436e:    ab 4f       	r3 = [r5 + -8] 			  ## midi_dec.c:851:24
  114370:    21 c6       	r1 = r4 			  ## midi_dec.c:851:4
  114372:    02 82       	r2 = 64 			  ## midi_dec.c:851:4
  114374:    ab 01       	call r3			  ## midi_dec.c:851:4
  114376:    08 08       	goto 16 <.GJTIE412_1_1_+0xECA : 114388 >			  ## midi_dec.c:851:4
  114378:    00 e8 c0 02 	r0 = b[r12 + 8] 
  11437c:    10 98       	cmp r0, 2			  ## midi_dec.c:1241:53
  11437e:    ff fb 30 f3 	ifs (nzcv == 0) goto -410 <.GJTIE412_1_1_+0xD2A : 1141e8 >			  ## midi_dec.c:1241:53
  114382:    37 0f       	goto -402 <.GJTIE412_1_1_+0xD34 : 1141f2 >			  ## midi_dec.c:1241:53
  114384:    51 ea 41 00 	r9 = 65 
  114388:    88 c6       	r0 = r9 			  ## midi_dec.c:1641:1
  11438a:    00 ed ff c8 	sp = sp + 200 			  ## midi_dec.c:1641:1
  11438e:    30 c4       	{macch, maccl} = [sp++] 			  ## midi_dec.c:1641:1
  114390:    1e c0       	{pc, r14-r4} = [sp++] 			  ## midi_dec.c:1641:1
  114392:    00 00       	nop			  ## midi_dec.c:1641:1


.GCPI412_0:
  114394:    54 99 11 00     < 1153364 : 0x119954 >

get_dec_inf.1371:
  114398:    04 ed 00 e0 	r0 = r0 + 1248 			  ## midi_dec.c:1695:0
  11439c:    20 00       	rts			  ## midi_dec.c:1697:2


midi_get_time:
  11439e:    03 ed 01 d0 	r1 = r0 + 976 			  ## midi_dec.c:1678:0
  1143a2:    09 48       	r1 = [r1 + 0] 			  ## midi_dec.c:1680:22
  1143a4:    03 ed 00 20 	r0 = r0 + 800 			  ## midi_dec.c:1680:22
  1143a8:    00 48       	r0 = [r0 + 0] 			  ## midi_dec.c:1680:61
  1143aa:    00 a2       	r0 = r0 << 2 			  ## midi_dec.c:1680:34
  1143ac:    c2 28       	r2 = [addr(12)]  <.GCPI414_0 : 1143b8 >			  ## midi_dec.c:1680:34
  1143ae:    20 e7 20 00 	r0 = [r2 + r0] 			  ## midi_dec.c:1680:34
  1143b2:    40 fc 10 00 	r0 = r1 / r0 			  ## midi_dec.c:1680:32
  1143b6:    20 00       	rts			  ## midi_dec.c:1680:2


.GCPI414_0:
  1143b8:    54 99 11 00     < 1153364 : 0x119954 >

get_bp_inf.1372:
  1143bc:    05 ed 00 b0 	r0 = r0 + 1456 			  ## midi_dec.c:1684:0
  1143c0:    20 00       	rts			  ## midi_dec.c:1687:2


need_dcbuf_size.1373:
  1143c2:    10 ea ec 0e 	r0 = 3820 			  ## midi_dec.c:1663:0
  1143c6:    20 00       	rts			  ## midi_dec.c:1664:2


need_bpbuf_size.1374:
  1143c8:    40 80       	r0 = 8 			  ## midi_dec.c:1702:0
  1143ca:    20 00       	rts			  ## midi_dec.c:1704:2


get_play_time.1401:
  1143cc:    20 e8 00 22 	r0 = [r0 + 136] 			  ## testmain.c:86:0
  1143d0:    20 00       	rts			  ## testmain.c:88:2


need_dcbuf_size.1403:
  1143d2:    10 ea e4 00 	r0 = 228 			  ## testmain.c:8:0
  1143d6:    20 00       	rts			  ## testmain.c:9:2


need_bpbuf_size.1404:
  1143d8:    c0 80       	r0 = 24 			  ## testmain.c:14:0
  1143da:    20 00       	rts			  ## testmain.c:15:2


ima_dec_confing:
  1143dc:    16 c2       	[--sp] = {rets, r6-r4} 			  ## testmain.c:41:0
  1143de:    14 c6       	r4 = r2 			  ## testmain.c:41:0
  1143e0:    05 c6       	r5 = r0 			  ## testmain.c:41:0
  1143e2:    80 ef 10 90 	cmp r1, 144			  ## testmain.c:44:6
  1143e6:    17 11       	ifs (nzcv != 0) goto 46 <ima_dec_confing+0x3A : 114416 >			  ## testmain.c:44:6
  1143e8:    66 51       	r6 = h[r4 + 20] 			  ## testmain.c:51:14
  1143ea:    20 c6       	r0 = r4 			  ## testmain.c:53:9
  1143ec:    f7 e1 4f c5 	call -67416 <get_crcv.1396 : 103c98 >			  ## testmain.c:53:9
  1143f0:    11 ea 4d 41 	r1 = 16717 			  ## testmain.c:51:6
  1143f4:    31 ce       	cmp r6, r1			  ## testmain.c:56:7
  1143f6:    0f 11       	ifs (nzcv != 0) goto 30 <ima_dec_confing+0x3A : 114416 >			  ## testmain.c:56:7
  1143f8:    61 55       	r1 = h[r4 + 22] 			  ## testmain.c:54:15
  1143fa:    08 ce       	cmp r1, r0			  ## testmain.c:54:15
  1143fc:    0c 11       	ifs (nzcv != 0) goto 24 <ima_dec_confing+0x3A : 114416 >			  ## testmain.c:54:15
  1143fe:    a0 50       	r0 = h[r4 + 8] 			  ## testmain.c:58:35
  114400:    00 ed 51 80 	r1 = r5 + 128 			  ## testmain.c:58:35
  114404:    08 74       	h[r1 + 2] = r0 			  ## testmain.c:58:25
  114406:    e0 48       	r0 = [r4 + 12] 			  ## testmain.c:59:33
  114408:    88 68       	[r1 + 8] = r0 			  ## testmain.c:59:23
  11440a:    20 49       	r0 = [r4 + 16] 			  ## testmain.c:60:35
  11440c:    88 6a       	[r1 + 40] = r0 			  ## testmain.c:60:25
  11440e:    20 48       	r0 = [r4 + 0] 			  ## testmain.c:61:36
  114410:    c8 6a       	[r1 + 44] = r0 			  ## testmain.c:61:26
  114412:    60 48       	r0 = [r4 + 4] 			  ## testmain.c:62:38
  114414:    08 6b       	[r1 + 48] = r0 			  ## testmain.c:62:28
  114416:    00 80       	r0 = 0 			  ## testmain.c:66:2
  114418:    16 c0       	{pc, r6-r4} = [sp++] 			  ## testmain.c:66:2


ima_decoder_unit:
  11441a:    1e c2       	[--sp] = {rets, r14-r4} 			  ## en_adpcm.c:37:0
  11441c:    f8 cd       	sp += -8 			  ## en_adpcm.c:37:0
  11441e:    04 c6       	r4 = r0 			  ## en_adpcm.c:37:0
  114420:    00 ed 46 98 	r6 = r4 + 152 			  ## en_adpcm.c:37:0
  114424:    30 5c       	r0 = b[r6 + 2] 			  ## en_adpcm.c:42:19
  114426:    50 20       	if (r0 == 0) goto 10 <ima_decoder_unit+0x18 : 114432 >			  ## en_adpcm.c:42:2
  114428:    08 98       	cmp r0, 1
  11442a:    7c 11       	ifs (nzcv != 0) goto 248 <ima_decoder_unit+0x10A : 114524 >
  11442c:    90 e8 49 27 	r9 = h[r4 + 156] (s) 			  ## en_adpcm.c:42:2
  114430:    0a 08       	goto 20 <ima_decoder_unit+0x2C : 114446 >			  ## en_adpcm.c:42:2
  114432:    08 80       	r0 = 1 			  ## en_adpcm.c:45:21
  114434:    30 7c       	b[r6 + 2] = r0 			  ## en_adpcm.c:45:21
  114436:    51 ea 00 00 	r9 = 0 			  ## en_adpcm.c:45:21
  11443a:    50 e8 69 01 	h[r6 + 4] = r9 			  ## en_adpcm.c:46:22
  11443e:    50 e8 69 00 	h[r6 + 0] = r9 			  ## en_adpcm.c:47:18
  114442:    50 e8 69 ff 	h[r6 + -2] = r9 			  ## en_adpcm.c:48:20
  114446:    b0 48       	r0 = [r6 + 8] 			  ## en_adpcm.c:51:31
  114448:    00 ee 08 09 	r8 = r0 + r9 			  ## en_adpcm.c:51:19
  11444c:    00 ed 4d 40 	r13 = r4 + 64 
  114450:    20 e4 0a 4a 	r10 = [addr(296)]  <.GCPI422_0 : 11457c >
  114454:    00 ed fe 06 	r14 = sp + 6 
  114458:    20 e4 0b 49 	r11 = [addr(292)]  <.GCPI422_1 : 114580 >
  11445c:    54 ea 00 00 	r12 = 0 
  114460:    04 60       	[sp] = r4 
  114462:    5d 08       	goto 186 <ima_decoder_unit+0x104 : 11451e >
  114464:    08 e8 80 40 	r0 = b[r8 ++= 1] 			  ## en_adpcm.c:54:18
  114468:    c0 f3 01 f0 	r1 = r0 & (~240) 			  ## en_adpcm.c:55:27
  11446c:    40 e9 c1 01 	b[sp+ 7] = r1 			  ## en_adpcm.c:55:13
  114470:    40 a4       	r0 = r0 >> 4 			  ## en_adpcm.c:56:28
  114472:    40 e9 80 01 	b[sp+ 6] = r0 			  ## en_adpcm.c:56:13
  114476:    05 80       	r5 = 0 
  114478:    4e 08       	goto 156 <ima_decoder_unit+0xFC : 114516 >
  11447a:    70 49       	r0 = [r6 + 20] 			  ## en_adpcm.c:65:42
  11447c:    01 a2       	r1 = r0 << 2 			  ## en_adpcm.c:65:12
  11447e:    20 e7 a2 01 	r2 = [r10 + r1] 			  ## en_adpcm.c:65:12
  114482:    00 e7 e1 05 	r1 = b[r14 + r5] 			  ## en_adpcm.c:68:9
  114486:    80 f6 13 41 	r3 = sextra(r1, p:2, l:1) 			  ## en_adpcm.c:68:18
  11448a:    93 da       	r3 &= r2 			  ## en_adpcm.c:68:9
  11448c:    80 f6 14 21 	r4 = sextra(r1, p:1, l:1) 			  ## en_adpcm.c:69:18
  114490:    d7 a1       	r7 = r2 >>> 1 			  ## en_adpcm.c:69:39
  114492:    bc da       	r4 &= r7 			  ## en_adpcm.c:69:9
  114494:    d7 a3       	r7 = r2 >>> 3 			  ## en_adpcm.c:71:21
  114496:    e4 d5       	r4 = r4 + r7 			  ## en_adpcm.c:69:9
  114498:    1b d5       	r3 = r3 + r4 			  ## en_adpcm.c:70:9
  11449a:    c0 f3 14 fe 	r4 = r1 & (~254) 			  ## en_adpcm.c:70:18
  11449e:    a4 dc       	r4 = -r4 			  ## en_adpcm.c:70:18
  1144a0:    d2 a2       	r2 = r2 >>> 2 			  ## en_adpcm.c:70:39
  1144a2:    a2 da       	r2 &= r4 			  ## en_adpcm.c:70:9
  1144a4:    d2 d4       	r2 = r2 + r3 			  ## en_adpcm.c:71:12
  1144a6:    93 dc       	r3 = -r2 			  ## en_adpcm.c:73:9
  1144a8:    00 f4 10 08 	tst r1, 8			  ## en_adpcm.c:73:9
  1144ac:    10 03       	ifs (nzcv != 0) {			  ## en_adpcm.c:73:9
  1144ae:    1a c6       		r2 = r3 
                               	}			  ## en_adpcm.c:73:9
  1144b0:    b3 49       	r3 = [r6 + 24] 
  1144b2:    9b d4       	r3 = r3 + r2 			  ## en_adpcm.c:73:9
  1144b4:    92 ea 00 80 	r2 = -32768 			  ## en_adpcm.c:81:14
  1144b8:    1a ce       	cmp r3, r2			  ## en_adpcm.c:81:14
  1144ba:    1c c6       	r4 = r3 			  ## en_adpcm.c:81:14
  1144bc:    d0 03       	ifs (nzcv <= 0) {			  ## en_adpcm.c:81:14
  1144be:    94 ea 00 80 		r4 = -32768 
                               	}			  ## en_adpcm.c:81:14
  1144c2:    12 ea ff 7f 	r2 = 32767 			  ## en_adpcm.c:79:13
  1144c6:    0c ef 30 00 	cmp r3, 32768			  ## en_adpcm.c:79:9
  1144ca:    b0 03       	ifs (nzcv < 0) {			  ## en_adpcm.c:79:9
  1144cc:    22 c6       		r2 = r4 
                               	}			  ## en_adpcm.c:79:9
  1144ce:    b2 69       	[r6 + 24] = r2 			  ## en_adpcm.c:84:29
  1144d0:    09 a2       	r1 = r1 << 2 			  ## en_adpcm.c:85:30
  1144d2:    20 e7 b1 01 	r1 = [r11 + r1] 			  ## en_adpcm.c:85:30
  1144d6:    40 d4       	r0 = r0 + r1 			  ## en_adpcm.c:85:27
  1144d8:    00 98       	cmp r0, 0			  ## en_adpcm.c:86:9
  1144da:    d0 03       	ifs (nzcv <= 0) {			  ## en_adpcm.c:86:9
  1144dc:    00 80       		r0 = 0 
                               	}			  ## en_adpcm.c:86:9
  1144de:    c0 9a       	cmp r0, 88			  ## en_adpcm.c:88:9
  1144e0:    04 40       	r4 = [sp] 			  ## en_adpcm.c:88:9
  1144e2:    a0 03       	ifs (nzcv >= 0) {			  ## en_adpcm.c:88:9
  1144e4:    c0 82       		r0 = 88 
                               	}			  ## en_adpcm.c:88:9
  1144e6:    70 69       	[r6 + 20] = r0 			  ## en_adpcm.c:85:27
  1144e8:    70 4f       	r0 = [r6 + -12] 			  ## en_adpcm.c:91:26
  1144ea:    40 d0       	r0 = r0 + 1 			  ## en_adpcm.c:91:26
  1144ec:    70 6f       	[r6 + -12] = r0 			  ## en_adpcm.c:91:26
  1144ee:    b0 53       	r0 = h[r6 + -8] 			  ## en_adpcm.c:92:42
  1144f0:    41 d0       	r1 = r0 + 1 			  ## en_adpcm.c:92:42
  1144f2:    b1 73       	h[r6 + -8] = r1 			  ## en_adpcm.c:92:42
  1144f4:    00 a1       	r0 = r0 << 1 			  ## en_adpcm.c:92:5
  1144f6:    00 d5       	r0 = r0 + r4 			  ## en_adpcm.c:92:5
  1144f8:    50 e8 02 10 	h[r0 + 64] = r2 			  ## en_adpcm.c:92:46
  1144fc:    b0 53       	r0 = h[r6 + -8] 			  ## en_adpcm.c:96:18
  1144fe:    00 99       	cmp r0, 32			  ## en_adpcm.c:96:9
  114500:    09 11       	ifs (nzcv != 0) goto 18 <ima_decoder_unit+0xFA : 114514 >			  ## en_adpcm.c:96:9
  114502:    b0 4a       	r0 = [r6 + 40] 			  ## en_adpcm.c:99:62
  114504:    33 4b       	r3 = [r6 + 48] 			  ## en_adpcm.c:99:35
  114506:    a9 c6       	r1 = r13 			  ## en_adpcm.c:99:15
  114508:    02 82       	r2 = 64 			  ## en_adpcm.c:99:15
  11450a:    ab 01       	call r3			  ## en_adpcm.c:99:15
  11450c:    50 e8 6c 7e 	h[r6 + -8] = r12 			  ## en_adpcm.c:100:27
  114510:    f8 99       	cmp r0, 63			  ## en_adpcm.c:101:10
  114512:    1c 1d       	ifs (nzcv <= 0) goto 56 <ima_decoder_unit+0x132 : 11454c >			  ## en_adpcm.c:101:10
  114514:    6d d0       	r5 = r5 + 1 			  ## en_adpcm.c:58:24
  114516:    0d 98       	cmp r5, 1			  ## en_adpcm.c:58:4
  114518:    b0 1d       	ifs (nzcv <= 0) goto -160 <ima_decoder_unit+0x60 : 11447a >			  ## en_adpcm.c:58:4
  11451a:    00 ed 99 01 	r9 = r9 + 1 			  ## en_adpcm.c:52:59
  11451e:    f0 48       	r0 = [r6 + 12] 			  ## en_adpcm.c:52:48
  114520:    88 ce       	cmp r9, r0			  ## en_adpcm.c:52:3
  114522:    a0 13       	if (nzcv < 0) goto -192 <ima_decoder_unit+0x4A : 114464 >			  ## en_adpcm.c:52:3
  114524:    05 80       	r5 = 0 
  114526:    35 7c       	b[r6 + 2] = r5 			  ## en_adpcm.c:112:20
  114528:    b2 53       	r2 = h[r6 + -8] 			  ## en_adpcm.c:113:15
  11452a:    b2 21       	if (r2 == 0) goto 54 <ima_decoder_unit+0x148 : 114562 >			  ## en_adpcm.c:113:15
  11452c:    b0 4a       	r0 = [r6 + 40] 			  ## en_adpcm.c:116:59
  11452e:    33 4b       	r3 = [r6 + 48] 			  ## en_adpcm.c:116:32
  114530:    00 ed 41 40 	r1 = r4 + 64 			  ## en_adpcm.c:116:65
  114534:    12 a1       	r2 = r2 << 1 			  ## en_adpcm.c:116:104
  114536:    ab 01       	call r3			  ## en_adpcm.c:116:12
  114538:    b1 53       	r1 = h[r6 + -8] 			  ## en_adpcm.c:117:9
  11453a:    b5 73       	h[r6 + -8] = r5 			  ## en_adpcm.c:118:24
  11453c:    09 a1       	r1 = r1 << 1 			  ## en_adpcm.c:117:30
  11453e:    08 ce       	cmp r1, r0			  ## en_adpcm.c:119:7
  114540:    10 1d       	ifs (nzcv <= 0) goto 32 <ima_decoder_unit+0x148 : 114562 >			  ## en_adpcm.c:119:7
  114542:    f2 57       	r2 = h[r6 + -2] 			  ## en_adpcm.c:121:21
  114544:    12 d4       	r2 = r2 + r0 			  ## en_adpcm.c:121:21
  114546:    f2 77       	h[r6 + -2] = r2 			  ## en_adpcm.c:121:21
  114548:    08 d6       	r0 = r1 - r0 			  ## en_adpcm.c:122:25
  11454a:    08 08       	goto 16 <ima_decoder_unit+0x142 : 11455c >
  11454c:    00 ed 91 01 	r1 = r9 + 1 			  ## en_adpcm.c:103:31
  114550:    71 70       	h[r6 + 4] = r1 			  ## en_adpcm.c:103:26
  114552:    f1 57       	r1 = h[r6 + -2] 			  ## en_adpcm.c:104:24
  114554:    09 d4       	r1 = r1 + r0 			  ## en_adpcm.c:104:24
  114556:    f1 77       	h[r6 + -2] = r1 			  ## en_adpcm.c:104:24
  114558:    20 ee 00 40 	r0 = 64 - r0 			  ## en_adpcm.c:105:36
  11455c:    30 70       	h[r6 + 0] = r0 
  11455e:    0d 80       	r5 = 1 
  114560:    09 08       	goto 18 <ima_decoder_unit+0x15A : 114574 >
  114562:    b0 56       	r0 = h[r6 + -22] 			  ## en_adpcm.c:126:31
  114564:    71 4f       	r1 = [r6 + -12] 			  ## en_adpcm.c:126:15
  114566:    08 ce       	cmp r1, r0			  ## en_adpcm.c:126:6
  114568:    23 03       	if (nzcv >= 0) {			  ## en_adpcm.c:128:21
  11456a:    32 4f       		r2 = [r6 + -16] 			  ## en_adpcm.c:128:21
  11456c:    52 d0       		r2 = r2 + 1 			  ## en_adpcm.c:128:21
  11456e:    08 d6       		r0 = r1 - r0 			  ## en_adpcm.c:129:25
  114570:    42 e5 60 fc 		d[r6 + -16] = r0, r2 
                               	}			  ## en_adpcm.c:128:21
  114574:    28 c6       	r0 = r5 			  ## en_adpcm.c:132:1
  114576:    08 cd       	sp += 8 			  ## en_adpcm.c:132:1
  114578:    1e c0       	{pc, r14-r4} = [sp++] 			  ## en_adpcm.c:132:1
  11457a:    00 00       	nop			  ## en_adpcm.c:132:1


.GCPI422_0:
  11457c:    dc 9a 11 00     < 1153756 : 0x119ADC >

.GCPI422_1:
  114580:    40 9c 11 00     < 1154112 : 0x119C40 >

ima_decoder_run:
  114584:    17 c2       	[--sp] = {rets, r7-r4} 			  ## en_adpcm.c:135:0
  114586:    04 c6       	r4 = r0 			  ## en_adpcm.c:135:0
  114588:    90 e8 42 26 	r2 = h[r4 + 152] (s) 			  ## en_adpcm.c:142:15
  11458c:    00 ed 46 98 	r6 = r4 + 152 			  ## en_adpcm.c:142:15
  114590:    02 98       	cmp r2, 0			  ## en_adpcm.c:142:6
  114592:    1b 1d       	ifs (nzcv <= 0) goto 54 <ima_decoder_run+0x46 : 1145ca >			  ## en_adpcm.c:142:6
  114594:    f0 57       	r0 = h[r6 + -2] 			  ## en_adpcm.c:146:66
  114596:    00 d5       	r0 = r0 + r4 			  ## en_adpcm.c:144:53
  114598:    00 ed 01 40 	r1 = r0 + 64 			  ## en_adpcm.c:146:66
  11459c:    b0 4a       	r0 = [r6 + 40] 			  ## en_adpcm.c:146:59
  11459e:    33 4b       	r3 = [r6 + 48] 			  ## en_adpcm.c:146:32
  1145a0:    ab 01       	call r3			  ## en_adpcm.c:146:12
  1145a2:    90 e8 41 26 	r1 = h[r4 + 152] (s) 			  ## en_adpcm.c:147:16
  1145a6:    01 ce       	cmp r0, r1			  ## en_adpcm.c:147:7
  1145a8:    07 1a       	ifs (nzcv >= 0) goto 14 <ima_decoder_run+0x34 : 1145b8 >			  ## en_adpcm.c:147:7
  1145aa:    49 c9       	r1 = r1.l 			  ## en_adpcm.c:147:25
  1145ac:    f2 57       	r2 = h[r6 + -2] 			  ## en_adpcm.c:149:21
  1145ae:    12 d4       	r2 = r2 + r0 			  ## en_adpcm.c:149:21
  1145b0:    f2 77       	h[r6 + -2] = r2 			  ## en_adpcm.c:149:21
  1145b2:    08 d6       	r0 = r1 - r0 			  ## en_adpcm.c:150:36
  1145b4:    30 70       	h[r6 + 0] = r0 			  ## en_adpcm.c:150:19
  1145b6:    19 08       	goto 50 <ima_decoder_run+0x66 : 1145ea >			  ## en_adpcm.c:150:19
  1145b8:    05 80       	r5 = 0 
  1145ba:    35 70       	h[r6 + 0] = r5 			  ## en_adpcm.c:153:18
  1145bc:    f5 77       	h[r6 + -2] = r5 			  ## en_adpcm.c:154:20
  1145be:    30 5c       	r0 = b[r6 + 2] 			  ## en_adpcm.c:155:16
  1145c0:    40 20       	if (r0 == 0) goto 8 <ima_decoder_run+0x46 : 1145ca >
  1145c2:    20 c6       	r0 = r4 			  ## en_adpcm.c:157:8
  1145c4:    ff e1 9f f2 	call -430 <ima_decoder_unit : 11441a >			  ## en_adpcm.c:157:8
  1145c8:    18 21       	if (r0 != 0) goto 34 <ima_decoder_run+0x68 : 1145ec >			  ## en_adpcm.c:157:8
  1145ca:    31 49       	r1 = [r6 + 16] 			  ## en_adpcm.c:28:77
  1145cc:    00 e5 67 0a 	r7, r0 = d[r6 + 40] 			  ## en_adpcm.c:28:59
  1145d0:    05 82       	r5 = 64 			  ## en_adpcm.c:28:59
  1145d2:    22 c6       	r2 = r4 			  ## en_adpcm.c:28:13
  1145d4:    03 82       	r3 = 64 			  ## en_adpcm.c:28:13
  1145d6:    af 01       	call r7			  ## en_adpcm.c:28:13
  1145d8:    31 49       	r1 = [r6 + 16] 			  ## en_adpcm.c:30:23
  1145da:    09 d4       	r1 = r1 + r0 			  ## en_adpcm.c:30:23
  1145dc:    40 e5 61 03 	d[r6 + 12] = r1, r0 			  ## en_adpcm.c:30:23
  1145e0:    40 c9       	r0 = r0.l 			  ## en_adpcm.c:166:10
  1145e2:    04 10       	ifs (nzcv == 0) goto 8 <ima_decoder_run+0x68 : 1145ec >
  1145e4:    20 c6       	r0 = r4 			  ## en_adpcm.c:170:2
  1145e6:    ff e1 8f f1 	call -464 <ima_decoder_unit : 11441a >			  ## en_adpcm.c:170:2
  1145ea:    05 80       	r5 = 0 
  1145ec:    28 c6       	r0 = r5 			  ## en_adpcm.c:172:1
  1145ee:    17 c0       	{pc, r7-r4} = [sp++] 			  ## en_adpcm.c:172:1


mp2_getbuf:
  1145f0:    10 ea 14 0c 	r0 = 3092 			  ## mp2_test.c:38:0
  1145f4:    20 00       	rts			  ## mp2_test.c:39:2


mp2_put_bits:
  1145f6:    19 c2       	[--sp] = {rets, r9-r4} 			  ## encodemp2.c:447:0
  1145f8:    01 98       	cmp r1, 0			  ## encodemp2.c:451:6
  1145fa:    2d 1b       	ifs (nzcv < 0) goto 90 <mp2_put_bits+0x60 : 114656 >			  ## encodemp2.c:451:6
  1145fc:    06 ed 03 50 	r3 = r0 + 1616 
  114600:    1f 5c       	r7 = b[r3 + 2] 			  ## encodemp2.c:453:54
  114602:    7c d4       	r4 = r7 + r1 			  ## encodemp2.c:454:41
  114604:    1c 7c       	b[r3 + 2] = r4 			  ## encodemp2.c:454:21
  114606:    51 ea 01 00 	r9 = 1 			  ## encodemp2.c:454:21
  11460a:    00 f7 98 01 	r8 = r9 << r1 			  ## encodemp2.c:453:28
  11460e:    16 ea ff ff 	r6 = 65535 			  ## encodemp2.c:453:36
  114612:    86 cb       	r6 += r8 			  ## encodemp2.c:453:36
  114614:    b2 da       	r2 &= r6 			  ## encodemp2.c:453:22
  114616:    3a cf       	r2 <<= r7 			  ## encodemp2.c:453:42
  114618:    de 4f       	r6 = [r3 + -4] 			  ## encodemp2.c:455:39
  11461a:    32 da       	r2 |= r6 			  ## encodemp2.c:455:28
  11461c:    da 6f       	[r3 + -4] = r2 			  ## encodemp2.c:462:22
  11461e:    26 c9       	r6 = r4.b 			  ## encodemp2.c:454:41
  114620:    46 98       	cmp r6, 8			  ## encodemp2.c:456:3
  114622:    19 13       	if (nzcv < 0) goto 50 <mp2_put_bits+0x60 : 114656 >			  ## encodemp2.c:456:3
  114624:    1e 50       	r6 = h[r3 + 0] 
  114626:    c9 d5       	r1 = r1 + r7 			  ## encodemp2.c:456:3
  114628:    09 d2       	r1 = r1 + -8 			  ## encodemp2.c:456:3
  11462a:    09 c9       	r1 = r1.b 			  ## encodemp2.c:456:3
  11462c:    06 ed 00 53 	r0 = r0 + 1619 			  ## encodemp2.c:456:3
  114630:    24 d2       	r4 = r4 + -8 			  ## encodemp2.c:458:22
  114632:    1c 7c       	b[r3 + 2] = r4 			  ## encodemp2.c:458:22
  114634:    77 d0       	r7 = r6 + 1 			  ## encodemp2.c:460:48
  114636:    1f 70       	h[r3 + 0] = r7 			  ## encodemp2.c:460:48
  114638:    76 c9       	r6 = r6.l 			  ## encodemp2.c:460:4
  11463a:    40 e7 02 06 	b[r0 + r6] = r2 			  ## encodemp2.c:460:52
  11463e:    00 f7 96 01 	r6 = r9 << r1 			  ## encodemp2.c:462:29
  114642:    45 29       	r5 = [addr(20)]  <.GCPI425_0 : 114658 >			  ## encodemp2.c:462:51
  114644:    ad d5       	r5 = r5 + r6 			  ## encodemp2.c:462:51
  114646:    52 a8       	r2 = r2 >> 8 			  ## encodemp2.c:461:43
  114648:    aa da       	r2 &= r5 			  ## encodemp2.c:462:22
  11464a:    da 6f       	[r3 + -4] = r2 			  ## encodemp2.c:462:22
  11464c:    09 d2       	r1 = r1 + -8 			  ## encodemp2.c:456:28
  11464e:    25 c9       	r5 = r4.b 			  ## encodemp2.c:458:22
  114650:    3d 98       	cmp r5, 7			  ## encodemp2.c:456:3
  114652:    3e c6       	r6 = r7 			  ## encodemp2.c:460:48
  114654:    ed 18       	if (nzcv > 0) goto -38 <mp2_put_bits+0x3A : 114630 >			  ## encodemp2.c:460:48
  114656:    19 c0       	{pc, r9-r4} = [sp++] 


.GCPI425_0:
  114658:    ff ff ff 00     < 16777215 : 0xFFFFFF >

mp2encode:
  11465c:    1e c2       	[--sp] = {rets, r14-r4} 			  ## mp2_test.c:8:0
  11465e:    30 c5       	[--sp] = {macch, maccl} 			  ## mp2_test.c:8:0
  114660:    1e ed ff 38 	sp = sp + -456 			  ## mp2_test.c:8:0
  114664:    05 c6       	r5 = r0 			  ## mp2_test.c:8:0
  114666:    0c ed 54 08 	r4 = r5 + 3080 			  ## mp2_test.c:8:0
  11466a:    90 e8 42 00 	r2 = h[r4 + 0] (s) 			  ## mp2_test.c:14:15
  11466e:    0a 98       	cmp r2, 1			  ## mp2_test.c:14:6
  114670:    13 1b       	ifs (nzcv < 0) goto 38 <mp2encode+0x3C : 114698 >			  ## mp2_test.c:14:6
  114672:    20 54       	r0 = h[r4 + 2] 			  ## mp2_test.c:16:70
  114674:    61 48       	r1 = [r4 + 4] 			  ## mp2_test.c:16:79
  114676:    09 d4       	r1 = r1 + r0 			  ## mp2_test.c:16:70
  114678:    e0 4e       	r0 = [r4 + -20] 			  ## mp2_test.c:16:56
  11467a:    63 4f       	r3 = [r4 + -12] 			  ## mp2_test.c:16:26
  11467c:    52 c9       	r2 = r2.l 			  ## mp2_test.c:16:8
  11467e:    ab 01       	call r3			  ## mp2_test.c:16:8
  114680:    21 50       	r1 = h[r4 + 0] 			  ## mp2_test.c:17:27
  114682:    09 d6       	r1 = r1 - r0 			  ## mp2_test.c:17:27
  114684:    21 70       	h[r4 + 0] = r1 			  ## mp2_test.c:17:27
  114686:    0c ed 52 0a 	r2 = r5 + 3082 			  ## mp2_test.c:16:99
  11468a:    12 50       	r2 = h[r2 + 0] 			  ## mp2_test.c:18:25
  11468c:    80 d4       	r0 = r0 + r2 			  ## mp2_test.c:18:25
  11468e:    20 74       	h[r4 + 2] = r0 			  ## mp2_test.c:18:25
  114690:    c8 c9       	r0 = r1.l (s) 			  ## mp2_test.c:17:27
  114692:    00 98       	cmp r0, 0			  ## mp2_test.c:19:7
  114694:    00 fb 5c 45 	ifs (nzcv > 0) goto 2218 <mp2encode+0x8E6 : 114f42 >			  ## mp2_test.c:19:7
  114698:    28 c6       	r0 = r5 			  ## mp2dsp.c:389:23
  11469a:    08 e8 06 03 	r6 = b[r0 ++= 12] 			  ## mp2dsp.c:389:23
  11469e:    00 63       	[sp+ 48] = r0 			  ## mp2dsp.c:389:23
  1146a0:    5e 98       	cmp r6, 11			  ## mp2dsp.c:397:2
  1146a2:    c4 63       	[sp+ 60] = r4 			  ## mp2dsp.c:397:2
  1146a4:    45 64       	[sp+ 68] = r5 			  ## mp2dsp.c:397:2
  1146a6:    00 fb 48 27 	if (nzcv > 0) goto 1256 <mp2encode+0x536 : 114b92 >			  ## mp2dsp.c:397:2
  1146aa:    30 a2       	r0 = r6 << 2 			  ## mp2dsp.c:397:2
  1146ac:    40 d5       	r0 = r0 + r5 			  ## mp2dsp.c:397:2
  1146ae:    00 ed 07 4c 	r7 = r0 + 76 			  ## mp2dsp.c:397:2
  1146b2:    0b ed 50 74 	r0 = r5 + 2932 			  ## mp2dsp.c:397:2
  1146b6:    c0 62       	[sp+ 44] = r0 			  ## mp2dsp.c:397:2
  1146b8:    00 ed f0 c8 	r0 = sp + 200 			  ## mp2dsp.c:397:2
  1146bc:    01 d1       	r1 = r0 + 4 			  ## mp2dsp.c:397:2
  1146be:    41 62       	[sp+ 36] = r1 			  ## mp2dsp.c:397:2
  1146c0:    00 ed fd 48 	r13 = sp + 72 			  ## mp2dsp.c:397:2
  1146c4:    00 ed d1 14 	r1 = r13 + 20 			  ## mp2dsp.c:397:2
  1146c8:    01 62       	[sp+ 32] = r1 			  ## mp2dsp.c:397:2
  1146ca:    00 ed d1 78 	r1 = r13 + 120 			  ## mp2dsp.c:397:2
  1146ce:    c1 61       	[sp+ 28] = r1 			  ## mp2dsp.c:397:2
  1146d0:    00 ed d1 0c 	r1 = r13 + 12 			  ## mp2dsp.c:397:2
  1146d4:    81 61       	[sp+ 24] = r1 			  ## mp2dsp.c:397:2
  1146d6:    00 ed d1 74 	r1 = r13 + 116 			  ## mp2dsp.c:397:2
  1146da:    41 61       	[sp+ 20] = r1 			  ## mp2dsp.c:397:2
  1146dc:    00 ed da 04 	r10 = r13 + 4 			  ## mp2dsp.c:397:2
  1146e0:    00 ed dc 40 	r12 = r13 + 64 			  ## mp2dsp.c:397:2
  1146e4:    00 ed d1 2c 	r1 = r13 + 44 			  ## mp2dsp.c:397:2
  1146e8:    01 61       	[sp+ 16] = r1 			  ## mp2dsp.c:397:2
  1146ea:    00 ed de 7c 	r14 = r13 + 124 			  ## mp2dsp.c:397:2
  1146ee:    00 ed 01 84 	r1 = r0 + 132 			  ## mp2dsp.c:397:2
  1146f2:    c1 60       	[sp+ 12] = r1 			  ## mp2dsp.c:397:2
  1146f4:    00 ed 01 fc 	r1 = r0 + 252 			  ## mp2dsp.c:397:2
  1146f8:    81 60       	[sp+ 8] = r1 			  ## mp2dsp.c:397:2
  1146fa:    00 ed d1 44 	r1 = r13 + 68 			  ## mp2dsp.c:397:2
  1146fe:    41 60       	[sp+ 4] = r1 			  ## mp2dsp.c:397:2
  114700:    00 ed 09 44 	r9 = r0 + 68 			  ## mp2dsp.c:397:2
  114704:    80 62       	[sp+ 40] = r0 			  ## mp2dsp.c:397:2
  114706:    e0 89       	r0 += 60 			  ## mp2dsp.c:397:2
  114708:    00 60       	[sp] = r0 			  ## mp2dsp.c:397:2
  11470a:    53 ea ff 01 	r11 = 511 			  ## mp2dsp.c:397:2
  11470e:    20 e4 28 10 	r8 = [addr(2112)]  <.GCPI426_1 : 114f50 >			  ## mp2dsp.c:397:2
  114712:    60 e9 0e 10 	[sp+ 64] = r14 			  ## mp2dsp.c:397:2
  114716:    00 e5 43 fb 	r3, r0 = d[r4 + -20] 			  ## mp2dsp.c:402:66
  11471a:    a1 48       	r1 = [r4 + 8] 			  ## mp2dsp.c:402:99
  11471c:    4a c9       	r2 = r1.l 			  ## mp2dsp.c:402:19
  11471e:    20 ee 11 40 	r1 = 64 - r1 			  ## mp2dsp.c:402:88
  114722:    49 d5       	r1 = r1 + r5 			  ## mp2dsp.c:402:79
  114724:    61 88       	r1 += 12 			  ## mp2dsp.c:402:79
  114726:    ab 01       	call r3			  ## mp2dsp.c:402:19
  114728:    a1 48       	r1 = [r4 + 8] 			  ## mp2dsp.c:403:28
  11472a:    08 ce       	cmp r1, r0			  ## mp2dsp.c:403:8
  11472c:    00 fb bc 32 	ifs (nzcv > 0) goto 1622 <mp2encode+0x72A : 114d86 >			  ## mp2dsp.c:403:8
  114730:    47 63       	[sp+ 52] = r7 
  114732:    86 63       	[sp+ 56] = r6 
  114734:    00 82       	r0 = 64 			  ## mp2dsp.c:410:22
  114736:    a0 68       	[r4 + 8] = r0 			  ## mp2dsp.c:410:22
  114738:    f8 80       	r0 = 31 
  11473a:    01 43       	r1 = [sp+ 48] 
  11473c:    44 44       	r4 = [sp+ 68] 
  11473e:    15 ea 52 07 	r5 = 1874 
  114742:    90 e8 42 01 	r2 = h[r4 + 4] (s) 			  ## mp2dsp.c:418:29
  114746:    12 d4       	r2 = r2 + r0 			  ## mp2dsp.c:418:5
  114748:    12 a1       	r2 = r2 << 1 			  ## mp2dsp.c:418:5
  11474a:    12 d5       	r2 = r2 + r4 			  ## mp2dsp.c:418:5
  11474c:    18 e8 13 80 	r3 = h[r1 ++= 2] 			  ## mp2dsp.c:418:57
  114750:    50 e7 23 05 	h[r2 + r5] = r3 			  ## mp2dsp.c:418:55
  114754:    c0 d3       	r0 = r0 + -1 			  ## mp2dsp.c:412:18
  114756:    f8 9f       	cmp r0, -1			  ## mp2dsp.c:412:4
  114758:    f4 11       	ifs (nzcv != 0) goto -24 <mp2encode+0xE6 : 114742 >			  ## mp2dsp.c:412:4
  11475a:    10 ea c0 01 	r0 = 448 
  11475e:    81 42       	r1 = [sp+ 40] 
  114760:    20 e4 12 fa 	r2 = [addr(2024)]  <.GCPI426_0 : 114f4c >
  114764:    63 50       	r3 = h[r4 + 4] 			  ## mp2dsp.c:428:15
  114766:    1b d4       	r3 = r3 + r0 			  ## mp2dsp.c:428:41
  114768:    1e ed 36 40 	r6 = r3 + -448 			  ## mp2dsp.c:428:41
  11476c:    80 f0 66 0b 	r6 = r6 & r11 			  ## mp2dsp.c:428:41
  114770:    20 f7 6e 01 	r14 = r6 << 1 			  ## mp2dsp.c:429:5
  114774:    07 ed 46 52 	r6 = r4 + 1874 			  ## mp2dsp.c:429:5
  114778:    90 e7 65 0e 	r5 = h[r6 + r14] (s) 			  ## mp2dsp.c:429:5
  11477c:    17 48       	r7 = [r2 + 0] 			  ## mp2dsp.c:429:5
  11477e:    ef 06       	macc = r5 * r7 (s) 			  ## mp2dsp.c:429:5
  114780:    1e ed 35 80 	r5 = r3 + -384 			  ## mp2dsp.c:432:20
  114784:    80 f0 55 0b 	r5 = r5 & r11 			  ## mp2dsp.c:432:20
  114788:    2d a1       	r5 = r5 << 1 			  ## mp2dsp.c:433:5
  11478a:    90 e7 65 05 	r5 = h[r6 + r5] (s) 			  ## mp2dsp.c:433:5
  11478e:    20 e8 27 40 	r7 = [r2 + 256] 			  ## mp2dsp.c:433:5
  114792:    af 07       	macc += r5 * r7 (s) 			  ## mp2dsp.c:433:5
  114794:    02 ed 25 00 	r5 = r2 + 512 			  ## mp2dsp.c:433:5
  114798:    2d 48       	r5 = [r5 + 0] 			  ## mp2dsp.c:436:5
  11479a:    1e ed 37 c0 	r7 = r3 + -320 			  ## mp2dsp.c:435:20
  11479e:    80 f0 77 0b 	r7 = r7 & r11 			  ## mp2dsp.c:435:20
  1147a2:    3f a1       	r7 = r7 << 1 			  ## mp2dsp.c:436:5
  1147a4:    90 e7 67 07 	r7 = h[r6 + r7] (s) 			  ## mp2dsp.c:436:5
  1147a8:    bd 07       	macc += r7 * r5 (s) 			  ## mp2dsp.c:436:5
  1147aa:    03 ed 25 00 	r5 = r2 + 768 			  ## mp2dsp.c:436:5
  1147ae:    2d 48       	r5 = [r5 + 0] 			  ## mp2dsp.c:439:5
  1147b0:    1f ed 37 00 	r7 = r3 + -256 			  ## mp2dsp.c:438:20
  1147b4:    80 f0 77 0b 	r7 = r7 & r11 			  ## mp2dsp.c:438:20
  1147b8:    3f a1       	r7 = r7 << 1 			  ## mp2dsp.c:439:5
  1147ba:    90 e7 67 07 	r7 = h[r6 + r7] (s) 			  ## mp2dsp.c:439:5
  1147be:    bd 07       	macc += r7 * r5 (s) 			  ## mp2dsp.c:439:5
  1147c0:    04 ed 25 00 	r5 = r2 + 1024 			  ## mp2dsp.c:439:5
  1147c4:    2d 48       	r5 = [r5 + 0] 			  ## mp2dsp.c:442:5
  1147c6:    1f ed 37 40 	r7 = r3 + -192 			  ## mp2dsp.c:441:20
  1147ca:    80 f0 77 0b 	r7 = r7 & r11 			  ## mp2dsp.c:441:20
  1147ce:    3f a1       	r7 = r7 << 1 			  ## mp2dsp.c:442:5
  1147d0:    90 e7 67 07 	r7 = h[r6 + r7] (s) 			  ## mp2dsp.c:442:5
  1147d4:    bd 07       	macc += r7 * r5 (s) 			  ## mp2dsp.c:442:5
  1147d6:    05 ed 25 00 	r5 = r2 + 1280 			  ## mp2dsp.c:442:5
  1147da:    2d 48       	r5 = [r5 + 0] 			  ## mp2dsp.c:445:5
  1147dc:    1f ed 37 80 	r7 = r3 + -128 			  ## mp2dsp.c:444:20
  1147e0:    80 f0 77 0b 	r7 = r7 & r11 			  ## mp2dsp.c:444:20
  1147e4:    3f a1       	r7 = r7 << 1 			  ## mp2dsp.c:445:5
  1147e6:    90 e7 67 07 	r7 = h[r6 + r7] (s) 			  ## mp2dsp.c:445:5
  1147ea:    bd 07       	macc += r7 * r5 (s) 			  ## mp2dsp.c:445:5
  1147ec:    06 ed 25 00 	r5 = r2 + 1536 			  ## mp2dsp.c:445:5
  1147f0:    2d 48       	r5 = [r5 + 0] 			  ## mp2dsp.c:448:5
  1147f2:    1f ed 37 c0 	r7 = r3 + -64 			  ## mp2dsp.c:447:20
  1147f6:    80 f0 77 0b 	r7 = r7 & r11 			  ## mp2dsp.c:447:20
  1147fa:    3f a1       	r7 = r7 << 1 			  ## mp2dsp.c:448:5
  1147fc:    90 e7 67 07 	r7 = h[r6 + r7] (s) 			  ## mp2dsp.c:448:5
  114800:    bd 07       	macc += r7 * r5 (s) 			  ## mp2dsp.c:448:5
  114802:    07 ed 25 00 	r5 = r2 + 1792 			  ## mp2dsp.c:448:5
  114806:    2d 48       	r5 = [r5 + 0] 			  ## mp2dsp.c:451:5
  114808:    80 f0 33 0b 	r3 = r3 & r11 			  ## mp2dsp.c:450:20
  11480c:    1b a1       	r3 = r3 << 1 			  ## mp2dsp.c:451:5
  11480e:    90 e7 63 03 	r3 = h[r6 + r3] (s) 			  ## mp2dsp.c:451:5
  114812:    9d 07       	macc += r3 * r5 (s) 			  ## mp2dsp.c:451:5
  114814:    c0 f9 03 10 	r3 = macc >>> 16 			  ## mp2dsp.c:453:5
  114818:    68 e8 13 01 	[r1 ++= 4] = r3 			  ## mp2dsp.c:453:5
  11481c:    12 d1       	r2 = r2 + 4 			  ## mp2dsp.c:424:4
  11481e:    40 d0       	r0 = r0 + 1 			  ## mp2dsp.c:424:18
  114820:    82 ef 00 00 	cmp r0, 512			  ## mp2dsp.c:424:4
  114824:    9f 11       	ifs (nzcv != 0) goto -194 <mp2encode+0x108 : 114764 >			  ## mp2dsp.c:424:4
  114826:    90 40       	r0 = [sp+ 264] 			  ## mp2dsp.c:458:14
  114828:    80 64       	[sp+ 72] = r0 			  ## mp2dsp.c:458:12
  11482a:    00 80       	r0 = 0 
  11482c:    01 40       	r1 = [sp] 
  11482e:    20 e7 92 00 	r2 = [r9 + r0] 			  ## mp2dsp.c:460:16
  114832:    28 e8 13 ff 	r3 = [r1 ++= -4] 			  ## mp2dsp.c:460:30
  114836:    d2 d4       	r2 = r2 + r3 			  ## mp2dsp.c:460:28
  114838:    60 e7 a2 00 	[r10 + r0] = r2 			  ## mp2dsp.c:460:13
  11483c:    00 d1       	r0 = r0 + 4 			  ## mp2dsp.c:459:18
  11483e:    00 9a       	cmp r0, 64			  ## mp2dsp.c:459:4
  114840:    f6 11       	ifs (nzcv != 0) goto -20 <mp2encode+0x1D2 : 11482e >			  ## mp2dsp.c:459:4
  114842:    00 80       	r0 = 0 
  114844:    81 40       	r1 = [sp+ 8] 
  114846:    04 44       	r4 = [sp+ 64] 
  114848:    c5 40       	r5 = [sp+ 12] 
  11484a:    46 40       	r6 = [sp+ 4] 
  11484c:    20 e7 52 00 	r2 = [r5 + r0] 			  ## mp2dsp.c:462:16
  114850:    28 e8 13 ff 	r3 = [r1 ++= -4] 			  ## mp2dsp.c:462:30
  114854:    d2 d6       	r2 = r2 - r3 			  ## mp2dsp.c:462:28
  114856:    60 e7 62 00 	[r6 + r0] = r2 			  ## mp2dsp.c:462:13
  11485a:    00 d1       	r0 = r0 + 4 			  ## mp2dsp.c:461:19
  11485c:    e0 99       	cmp r0, 60			  ## mp2dsp.c:461:4
  11485e:    f6 11       	ifs (nzcv != 0) goto -20 <mp2encode+0x1F0 : 11484c >			  ## mp2dsp.c:461:4
  114860:    f8 80       	r0 = 31 
  114862:    4a 44       	r2 = [sp+ 196] 
  114864:    21 c6       	r1 = r4 			  ## mp2dsp.c:217:10
  114866:    8b 4f       	r3 = [r1 + -8] 			  ## mp2dsp.c:217:13
  114868:    d2 d4       	r2 = r2 + r3 			  ## mp2dsp.c:217:10
  11486a:    0a 68       	[r1 + 0] = r2 			  ## mp2dsp.c:217:10
  11486c:    0a 4f       	r2 = [r1 + -16] 			  ## mp2dsp.c:218:17
  11486e:    9b d4       	r3 = r3 + r2 			  ## mp2dsp.c:218:14
  114870:    8b 6f       	[r1 + -8] = r3 			  ## mp2dsp.c:218:14
  114872:    8b 4e       	r3 = [r1 + -24] 			  ## mp2dsp.c:219:17
  114874:    d2 d4       	r2 = r2 + r3 			  ## mp2dsp.c:219:14
  114876:    0a 6f       	[r1 + -16] = r2 			  ## mp2dsp.c:219:14
  114878:    0d 4e       	r5 = [r1 + -32] 			  ## mp2dsp.c:220:17
  11487a:    ea d4       	r2 = r5 + r3 			  ## mp2dsp.c:220:14
  11487c:    8a 6e       	[r1 + -24] = r2 			  ## mp2dsp.c:220:14
  11487e:    0b c6       	r3 = r1 			  ## mp2dsp.c:221:17
  114880:    24 e8 32 f6 	r2 = [++ r3 = -40] 			  ## mp2dsp.c:221:17
  114884:    ad d4       	r5 = r5 + r2 			  ## mp2dsp.c:221:14
  114886:    0d 6e       	[r1 + -32] = r5 			  ## mp2dsp.c:221:14
  114888:    b0 8f       	r0 += -10 			  ## mp2dsp.c:221:23
  11488a:    50 98       	cmp r0, 10			  ## mp2dsp.c:215:2
  11488c:    19 c6       	r1 = r3 			  ## mp2dsp.c:217:10
  11488e:    eb 1c       	ifs (nzcv > 0) goto -42 <mp2encode+0x20A : 114866 >			  ## mp2dsp.c:215:2
  114890:    f0 80       	r0 = 30 
  114892:    0a 44       	r2 = [sp+ 192] 
  114894:    21 c6       	r1 = r4 			  ## mp2dsp.c:226:10
  114896:    cb 4e       	r3 = [r1 + -20] 			  ## mp2dsp.c:226:13
  114898:    d2 d4       	r2 = r2 + r3 			  ## mp2dsp.c:226:10
  11489a:    ca 6f       	[r1 + -4] = r2 			  ## mp2dsp.c:226:10
  11489c:    0a c6       	r2 = r1 			  ## mp2dsp.c:227:17
  11489e:    24 e8 25 fc 	r5 = [++ r2 = -16] 			  ## mp2dsp.c:227:17
  1148a2:    0e 48       	r6 = [r1 + 0] 			  ## mp2dsp.c:227:14
  1148a4:    ad d5       	r5 = r5 + r6 			  ## mp2dsp.c:227:14
  1148a6:    0d 68       	[r1 + 0] = r5 			  ## mp2dsp.c:227:14
  1148a8:    00 d3       	r0 = r0 + -4 			  ## mp2dsp.c:226:19
  1148aa:    10 98       	cmp r0, 2			  ## mp2dsp.c:224:2
  1148ac:    11 c6       	r1 = r2 			  ## mp2dsp.c:226:10
  1148ae:    1a c6       	r2 = r3 			  ## mp2dsp.c:226:10
  1148b0:    f2 1c       	ifs (nzcv > 0) goto -28 <mp2encode+0x23A : 114896 >			  ## mp2dsp.c:224:2
  1148b2:    e0 80       	r0 = 28 
  1148b4:    8a 43       	r2 = [sp+ 184] 
  1148b6:    21 c6       	r1 = r4 			  ## mp2dsp.c:232:10
  1148b8:    4b 4d       	r3 = [r1 + -44] 			  ## mp2dsp.c:232:13
  1148ba:    d2 d4       	r2 = r2 + r3 			  ## mp2dsp.c:232:10
  1148bc:    4a 6f       	[r1 + -12] = r2 			  ## mp2dsp.c:232:10
  1148be:    8a 4d       	r2 = [r1 + -40] 			  ## mp2dsp.c:233:17
  1148c0:    8d 4f       	r5 = [r1 + -8] 			  ## mp2dsp.c:233:14
  1148c2:    52 d5       	r2 = r2 + r5 			  ## mp2dsp.c:233:14
  1148c4:    8a 6f       	[r1 + -8] = r2 			  ## mp2dsp.c:233:14
  1148c6:    ca 4d       	r2 = [r1 + -36] 			  ## mp2dsp.c:234:17
  1148c8:    cd 4f       	r5 = [r1 + -4] 			  ## mp2dsp.c:234:14
  1148ca:    52 d5       	r2 = r2 + r5 			  ## mp2dsp.c:234:14
  1148cc:    ca 6f       	[r1 + -4] = r2 			  ## mp2dsp.c:234:14
  1148ce:    0a c6       	r2 = r1 			  ## mp2dsp.c:235:17
  1148d0:    24 e8 25 f8 	r5 = [++ r2 = -32] 			  ## mp2dsp.c:235:17
  1148d4:    0e 48       	r6 = [r1 + 0] 			  ## mp2dsp.c:235:14
  1148d6:    ad d5       	r5 = r5 + r6 			  ## mp2dsp.c:235:14
  1148d8:    0d 68       	[r1 + 0] = r5 			  ## mp2dsp.c:235:14
  1148da:    00 d2       	r0 = r0 + -8 			  ## mp2dsp.c:232:19
  1148dc:    20 98       	cmp r0, 4			  ## mp2dsp.c:230:2
  1148de:    11 c6       	r1 = r2 			  ## mp2dsp.c:232:10
  1148e0:    1a c6       	r2 = r3 			  ## mp2dsp.c:232:10
  1148e2:    ea 1c       	ifs (nzcv > 0) goto -44 <mp2encode+0x25C : 1148b8 >			  ## mp2dsp.c:230:2
  1148e4:    00 80       	r0 = 0 
  1148e6:    01 41       	r1 = [sp+ 16] 
  1148e8:    0a 4e       	r2 = [r1 + -32] 			  ## mp2dsp.c:240:17
  1148ea:    92 dc       	r2 = -r2 			  ## mp2dsp.c:240:16
  1148ec:    0a 6e       	[r1 + -32] = r2 			  ## mp2dsp.c:240:14
  1148ee:    ca 4e       	r2 = [r1 + -20] 			  ## mp2dsp.c:241:17
  1148f0:    92 dc       	r2 = -r2 			  ## mp2dsp.c:241:16
  1148f2:    ca 6e       	[r1 + -20] = r2 			  ## mp2dsp.c:241:14
  1148f4:    0a 48       	r2 = [r1 + 0] 			  ## mp2dsp.c:242:18
  1148f6:    92 dc       	r2 = -r2 			  ## mp2dsp.c:242:17
  1148f8:    0a 68       	[r1 + 0] = r2 			  ## mp2dsp.c:242:15
  1148fa:    4a 48       	r2 = [r1 + 4] 			  ## mp2dsp.c:243:18
  1148fc:    92 dc       	r2 = -r2 			  ## mp2dsp.c:243:17
  1148fe:    4a 68       	[r1 + 4] = r2 			  ## mp2dsp.c:243:15
  114900:    8a 48       	r2 = [r1 + 8] 			  ## mp2dsp.c:244:18
  114902:    92 dc       	r2 = -r2 			  ## mp2dsp.c:244:17
  114904:    8a 68       	[r1 + 8] = r2 			  ## mp2dsp.c:244:15
  114906:    0a 49       	r2 = [r1 + 16] 			  ## mp2dsp.c:245:18
  114908:    92 dc       	r2 = -r2 			  ## mp2dsp.c:245:17
  11490a:    0a 69       	[r1 + 16] = r2 			  ## mp2dsp.c:245:15
  11490c:    01 8a       	r1 += 64 			  ## mp2dsp.c:238:16
  11490e:    80 88       	r0 += 16 			  ## mp2dsp.c:238:24
  114910:    00 99       	cmp r0, 32			  ## mp2dsp.c:238:2
  114912:    ea 1b       	ifs (nzcv < 0) goto -44 <mp2encode+0x28C : 1148e8 >			  ## mp2dsp.c:238:2
  114914:    00 80       	r0 = 0 
  114916:    00 ee d1 00 	r1 = r13 + r0 			  ## mp2dsp.c:252:3
  11491a:    0a c6       	r2 = r1 			  ## mp2dsp.c:252:3
  11491c:    24 e8 23 10 	r3 = [++ r2 = 64] 			  ## mp2dsp.c:252:3
  114920:    20 e4 15 93 	r5 = [addr(1612)]  <.GCPI426_9 : 114f70 >			  ## mp2dsp.c:252:3
  114924:    dd 06       	macc = r3 * r5 (s) 			  ## mp2dsp.c:252:3
  114926:    c0 f9 0e 18 	r14 = macc >>> 24 			  ## mp2dsp.c:252:3
  11492a:    0e 4a       	r6 = [r1 + 32] 			  ## mp2dsp.c:256:3
  11492c:    17 4a       	r7 = [r2 + 32] 			  ## mp2dsp.c:256:3
  11492e:    bf d5       	r7 = r7 + r6 			  ## mp2dsp.c:256:3
  114930:    bf dc       	r7 = -r7 			  ## mp2dsp.c:256:3
  114932:    20 e7 d4 00 	r4 = [r13 + r0] 			  ## mp2dsp.c:253:8
  114936:    fd 06       	macc = r7 * r5 (s) 			  ## mp2dsp.c:256:3
  114938:    c0 f9 05 18 	r5 = macc >>> 24 			  ## mp2dsp.c:256:3
  11493c:    77 d7       	r7 = r6 - r5 			  ## mp2dsp.c:257:3
  11493e:    20 e4 13 8d 	r3 = [addr(1588)]  <.GCPI426_10 : 114f74 >			  ## mp2dsp.c:257:3
  114942:    fb 06       	macc = r7 * r3 (s) 			  ## mp2dsp.c:257:3
  114944:    73 d5       	r3 = r6 + r5 			  ## mp2dsp.c:258:3
  114946:    c0 f9 05 18 	r5 = macc >>> 24 			  ## mp2dsp.c:257:3
  11494a:    20 e4 16 8b 	r6 = [addr(1580)]  <.GCPI426_11 : 114f78 >			  ## mp2dsp.c:258:3
  11494e:    de 06       	macc = r3 * r6 (s) 			  ## mp2dsp.c:258:3
  114950:    00 ee 43 0e 	r3 = r4 + r14 			  ## mp2dsp.c:254:13
  114954:    ee d4       	r6 = r5 + r3 			  ## mp2dsp.c:260:13
  114956:    c0 f9 07 18 	r7 = macc >>> 24 			  ## mp2dsp.c:258:3
  11495a:    60 e7 d6 00 	[r13 + r0] = r6 			  ## mp2dsp.c:260:8
  11495e:    40 ee 44 0e 	r4 = r4 - r14 			  ## mp2dsp.c:253:13
  114962:    e6 d7       	r6 = r4 - r7 			  ## mp2dsp.c:261:17
  114964:    0e 6a       	[r1 + 32] = r6 			  ## mp2dsp.c:261:12
  114966:    39 d5       	r1 = r7 + r4 			  ## mp2dsp.c:262:18
  114968:    11 68       	[r2 + 0] = r1 			  ## mp2dsp.c:262:13
  11496a:    59 d7       	r1 = r3 - r5 			  ## mp2dsp.c:263:18
  11496c:    11 6a       	[r2 + 32] = r1 			  ## mp2dsp.c:263:13
  11496e:    00 d1       	r0 = r0 + 4 			  ## mp2dsp.c:249:16
  114970:    00 99       	cmp r0, 32			  ## mp2dsp.c:249:2
  114972:    d1 11       	ifs (nzcv != 0) goto -94 <mp2encode+0x2BA : 114916 >			  ## mp2dsp.c:249:2
  114974:    80 87       	r0 = -16 
  114976:    00 ee c1 00 	r1 = r12 + r0 			  ## mp2dsp.c:280:3
  11497a:    0a c6       	r2 = r1 			  ## mp2dsp.c:280:3
  11497c:    24 e8 23 10 	r3 = [++ r2 = 64] 			  ## mp2dsp.c:280:3
  114980:    20 e4 14 7e 	r4 = [addr(1528)]  <.GCPI426_12 : 114f7c >			  ## mp2dsp.c:280:3
  114984:    dc 06       	macc = r3 * r4 (s) 			  ## mp2dsp.c:280:3
  114986:    c0 f9 03 18 	r3 = macc >>> 24 			  ## mp2dsp.c:280:3
  11498a:    0c 4d       	r4 = [r1 + -48] 			  ## mp2dsp.c:281:24
  11498c:    e5 d6       	r5 = r4 - r3 			  ## mp2dsp.c:281:41
  11498e:    15 68       	[r2 + 0] = r5 			  ## mp2dsp.c:281:21
  114990:    e2 d4       	r2 = r4 + r3 			  ## mp2dsp.c:282:40
  114992:    0a 6d       	[r1 + -48] = r2 			  ## mp2dsp.c:282:20
  114994:    0a 4a       	r2 = [r1 + 32] 			  ## mp2dsp.c:284:3
  114996:    20 e4 13 7a 	r3 = [addr(1512)]  <.GCPI426_13 : 114f80 >			  ## mp2dsp.c:284:3
  11499a:    d3 06       	macc = r2 * r3 (s) 			  ## mp2dsp.c:284:3
  11499c:    c0 f9 02 18 	r2 = macc >>> 24 			  ## mp2dsp.c:284:3
  1149a0:    0b 4f       	r3 = [r1 + -16] 			  ## mp2dsp.c:285:24
  1149a2:    9c d6       	r4 = r3 - r2 			  ## mp2dsp.c:285:41
  1149a4:    0c 6a       	[r1 + 32] = r4 			  ## mp2dsp.c:285:21
  1149a6:    d2 d4       	r2 = r2 + r3 			  ## mp2dsp.c:286:40
  1149a8:    0a 6f       	[r1 + -16] = r2 			  ## mp2dsp.c:286:20
  1149aa:    20 e7 c2 00 	r2 = [r12 + r0] 			  ## mp2dsp.c:288:3
  1149ae:    20 e4 13 75 	r3 = [addr(1492)]  <.GCPI426_14 : 114f84 >			  ## mp2dsp.c:288:3
  1149b2:    d3 06       	macc = r2 * r3 (s) 			  ## mp2dsp.c:288:3
  1149b4:    c0 f9 02 18 	r2 = macc >>> 24 			  ## mp2dsp.c:288:3
  1149b8:    0b 49       	r3 = [r1 + 16] 			  ## mp2dsp.c:289:24
  1149ba:    9c d6       	r4 = r3 - r2 			  ## mp2dsp.c:289:41
  1149bc:    60 e7 c4 00 	[r12 + r0] = r4 			  ## mp2dsp.c:289:21
  1149c0:    d2 d4       	r2 = r2 + r3 			  ## mp2dsp.c:290:40
  1149c2:    0a 69       	[r1 + 16] = r2 			  ## mp2dsp.c:290:20
  1149c4:    0a 4e       	r2 = [r1 + -32] 			  ## mp2dsp.c:292:3
  1149c6:    20 e4 13 70 	r3 = [addr(1472)]  <.GCPI426_15 : 114f88 >			  ## mp2dsp.c:292:3
  1149ca:    d3 06       	macc = r2 * r3 (s) 			  ## mp2dsp.c:292:3
  1149cc:    c0 f9 02 18 	r2 = macc >>> 24 			  ## mp2dsp.c:292:3
  1149d0:    0b 4b       	r3 = [r1 + 48] 			  ## mp2dsp.c:293:24
  1149d2:    9c d6       	r4 = r3 - r2 			  ## mp2dsp.c:293:41
  1149d4:    0c 6e       	[r1 + -32] = r4 			  ## mp2dsp.c:293:21
  1149d6:    d2 d4       	r2 = r2 + r3 			  ## mp2dsp.c:294:40
  1149d8:    0a 6b       	[r1 + 48] = r2 			  ## mp2dsp.c:294:20
  1149da:    00 d1       	r0 = r0 + 4 			  ## mp2dsp.c:278:16
  1149dc:    cc 11       	ifs (nzcv != 0) goto -104 <mp2encode+0x31A : 114976 >			  ## mp2dsp.c:278:2
  1149de:    00 80       	r0 = 0 
  1149e0:    20 e9 0e 10 	r14 = [sp+ 64] 
  1149e4:    b1 c6       	r1 = r14 
  1149e6:    92 c6       	r2 = r10 
  1149e8:    47 43       	r7 = [sp+ 52] 
  1149ea:    00 ee 83 00 	r3 = r8 + r0 			  ## mp2dsp.c:300:3
  1149ee:    9b 49       	r3 = [r3 + 24] 			  ## mp2dsp.c:300:3
  1149f0:    cc 4f       	r4 = [r1 + -4] 			  ## mp2dsp.c:300:3
  1149f2:    e3 06       	macc = r4 * r3 (s) 			  ## mp2dsp.c:300:3
  1149f4:    c0 f9 04 18 	r4 = macc >>> 24 			  ## mp2dsp.c:300:3
  1149f8:    d5 4f       	r5 = [r2 + -4] 			  ## mp2dsp.c:301:22
  1149fa:    2e d7       	r6 = r5 - r4 			  ## mp2dsp.c:301:33
  1149fc:    ce 6f       	[r1 + -4] = r6 			  ## mp2dsp.c:301:19
  1149fe:    64 d5       	r4 = r4 + r5 			  ## mp2dsp.c:302:28
  114a00:    d4 6f       	[r2 + -4] = r4 			  ## mp2dsp.c:302:14
  114a02:    0c 48       	r4 = [r1 + 0] 			  ## mp2dsp.c:304:3
  114a04:    e3 06       	macc = r4 * r3 (s) 			  ## mp2dsp.c:304:3
  114a06:    c0 f9 03 18 	r3 = macc >>> 24 			  ## mp2dsp.c:304:3
  114a0a:    14 48       	r4 = [r2 + 0] 			  ## mp2dsp.c:305:22
  114a0c:    e5 d6       	r5 = r4 - r3 			  ## mp2dsp.c:305:37
  114a0e:    0d 68       	[r1 + 0] = r5 			  ## mp2dsp.c:305:19
  114a10:    1b d5       	r3 = r3 + r4 			  ## mp2dsp.c:306:36
  114a12:    13 68       	[r2 + 0] = r3 			  ## mp2dsp.c:306:18
  114a14:    81 8f       	r1 += -16 			  ## mp2dsp.c:298:16
  114a16:    82 88       	r2 += 16 			  ## mp2dsp.c:298:16
  114a18:    00 d1       	r0 = r0 + 4 			  ## mp2dsp.c:298:16
  114a1a:    80 98       	cmp r0, 16			  ## mp2dsp.c:298:2
  114a1c:    e6 11       	ifs (nzcv != 0) goto -52 <mp2encode+0x38E : 1149ea >			  ## mp2dsp.c:298:2
  114a1e:    00 80       	r0 = 0 
  114a20:    81 41       	r1 = [sp+ 24] 
  114a22:    42 41       	r2 = [sp+ 20] 
  114a24:    00 ee 83 00 	r3 = r8 + r0 			  ## mp2dsp.c:311:3
  114a28:    9b 4a       	r3 = [r3 + 40] 			  ## mp2dsp.c:311:3
  114a2a:    cc 4f       	r4 = [r1 + -4] 			  ## mp2dsp.c:311:3
  114a2c:    e3 06       	macc = r4 * r3 (s) 			  ## mp2dsp.c:311:3
  114a2e:    c0 f9 04 18 	r4 = macc >>> 24 			  ## mp2dsp.c:311:3
  114a32:    d5 4f       	r5 = [r2 + -4] 			  ## mp2dsp.c:312:21
  114a34:    2e d7       	r6 = r5 - r4 			  ## mp2dsp.c:312:37
  114a36:    ce 6f       	[r1 + -4] = r6 			  ## mp2dsp.c:312:18
  114a38:    64 d5       	r4 = r4 + r5 			  ## mp2dsp.c:313:38
  114a3a:    d4 6f       	[r2 + -4] = r4 			  ## mp2dsp.c:313:19
  114a3c:    0c 48       	r4 = [r1 + 0] 			  ## mp2dsp.c:315:3
  114a3e:    e3 06       	macc = r4 * r3 (s) 			  ## mp2dsp.c:315:3
  114a40:    c0 f9 03 18 	r3 = macc >>> 24 			  ## mp2dsp.c:315:3
  114a44:    14 48       	r4 = [r2 + 0] 			  ## mp2dsp.c:316:21
  114a46:    e5 d6       	r5 = r4 - r3 			  ## mp2dsp.c:316:37
  114a48:    0d 68       	[r1 + 0] = r5 			  ## mp2dsp.c:316:18
  114a4a:    1b d5       	r3 = r3 + r4 			  ## mp2dsp.c:317:38
  114a4c:    13 68       	[r2 + 0] = r3 			  ## mp2dsp.c:317:19
  114a4e:    81 88       	r1 += 16 			  ## mp2dsp.c:309:16
  114a50:    82 8f       	r2 += -16 			  ## mp2dsp.c:309:16
  114a52:    00 d1       	r0 = r0 + 4 			  ## mp2dsp.c:309:16
  114a54:    80 98       	cmp r0, 16			  ## mp2dsp.c:309:2
  114a56:    e6 11       	ifs (nzcv != 0) goto -52 <mp2encode+0x3C8 : 114a24 >			  ## mp2dsp.c:309:2
  114a58:    00 ed 80 44 	r0 = r8 + 68 
  114a5c:    f1 80       	r1 = 30 
  114a5e:    02 42       	r2 = [sp+ 32] 
  114a60:    c3 41       	r3 = [sp+ 28] 
  114a62:    44 4f       	r4 = [r0 + -12] 			  ## mp2dsp.c:332:3
  114a64:    15 4f       	r5 = [r2 + -16] 			  ## mp2dsp.c:332:3
  114a66:    ec 06       	macc = r5 * r4 (s) 			  ## mp2dsp.c:332:3
  114a68:    c0 f9 04 18 	r4 = macc >>> 24 			  ## mp2dsp.c:332:3
  114a6c:    1d 48       	r5 = [r3 + 0] 			  ## mp2dsp.c:333:16
  114a6e:    2e d7       	r6 = r5 - r4 			  ## mp2dsp.c:333:21
  114a70:    16 6f       	[r2 + -16] = r6 			  ## mp2dsp.c:333:13
  114a72:    64 d5       	r4 = r4 + r5 			  ## mp2dsp.c:334:16
  114a74:    1c 68       	[r3 + 0] = r4 			  ## mp2dsp.c:334:8
  114a76:    84 4f       	r4 = [r0 + -8] 			  ## mp2dsp.c:336:3
  114a78:    95 4f       	r5 = [r2 + -8] 			  ## mp2dsp.c:336:3
  114a7a:    ec 06       	macc = r5 * r4 (s) 			  ## mp2dsp.c:336:3
  114a7c:    c0 f9 04 18 	r4 = macc >>> 24 			  ## mp2dsp.c:336:3
  114a80:    9d 4f       	r5 = [r3 + -8] 			  ## mp2dsp.c:337:16
  114a82:    2e d7       	r6 = r5 - r4 			  ## mp2dsp.c:337:25
  114a84:    96 6f       	[r2 + -8] = r6 			  ## mp2dsp.c:337:13
  114a86:    64 d5       	r4 = r4 + r5 			  ## mp2dsp.c:338:24
  114a88:    9c 6f       	[r3 + -8] = r4 			  ## mp2dsp.c:338:12
  114a8a:    c4 4f       	r4 = [r0 + -4] 			  ## mp2dsp.c:340:3
  114a8c:    15 48       	r5 = [r2 + 0] 			  ## mp2dsp.c:340:3
  114a8e:    ec 06       	macc = r5 * r4 (s) 			  ## mp2dsp.c:340:3
  114a90:    c0 f9 04 18 	r4 = macc >>> 24 			  ## mp2dsp.c:340:3
  114a94:    1d 4f       	r5 = [r3 + -16] 			  ## mp2dsp.c:341:16
  114a96:    2e d7       	r6 = r5 - r4 			  ## mp2dsp.c:341:25
  114a98:    16 68       	[r2 + 0] = r6 			  ## mp2dsp.c:341:13
  114a9a:    64 d5       	r4 = r4 + r5 			  ## mp2dsp.c:342:24
  114a9c:    1c 6f       	[r3 + -16] = r4 			  ## mp2dsp.c:342:12
  114a9e:    04 48       	r4 = [r0 + 0] 			  ## mp2dsp.c:344:3
  114aa0:    95 48       	r5 = [r2 + 8] 			  ## mp2dsp.c:344:3
  114aa2:    ec 06       	macc = r5 * r4 (s) 			  ## mp2dsp.c:344:3
  114aa4:    c0 f9 04 18 	r4 = macc >>> 24 			  ## mp2dsp.c:344:3
  114aa8:    9d 4e       	r5 = [r3 + -24] 			  ## mp2dsp.c:345:16
  114aaa:    2e d7       	r6 = r5 - r4 			  ## mp2dsp.c:345:25
  114aac:    96 68       	[r2 + 8] = r6 			  ## mp2dsp.c:345:13
  114aae:    64 d5       	r4 = r4 + r5 			  ## mp2dsp.c:346:24
  114ab0:    9c 6e       	[r3 + -24] = r4 			  ## mp2dsp.c:346:12
  114ab2:    02 89       	r2 += 32 			  ## mp2dsp.c:330:17
  114ab4:    03 8f       	r3 += -32 			  ## mp2dsp.c:330:17
  114ab6:    80 88       	r0 += 16 			  ## mp2dsp.c:330:17
  114ab8:    09 d2       	r1 = r1 + -8 			  ## mp2dsp.c:330:25
  114aba:    29 98       	cmp r1, 5			  ## mp2dsp.c:330:2
  114abc:    d2 1c       	ifs (nzcv > 0) goto -92 <mp2encode+0x406 : 114a62 >			  ## mp2dsp.c:330:2
  114abe:    80 44       	r0 = [sp+ 72] 			  ## mp2dsp.c:352:11
  114ac0:    88 64       	[sp+ 200] = r0 			  ## mp2dsp.c:352:9
  114ac2:    89 40       	r1 = [sp+ 136] 			  ## mp2dsp.c:353:11
  114ac4:    c9 64       	[sp+ 204] = r1 			  ## mp2dsp.c:353:9
  114ac6:    81 46       	r1 = [sp+ 104] 			  ## mp2dsp.c:354:11
  114ac8:    09 65       	[sp+ 208] = r1 			  ## mp2dsp.c:354:9
  114aca:    89 42       	r1 = [sp+ 168] 			  ## mp2dsp.c:355:11
  114acc:    49 65       	[sp+ 212] = r1 			  ## mp2dsp.c:355:9
  114ace:    81 45       	r1 = [sp+ 88] 			  ## mp2dsp.c:356:11
  114ad0:    89 65       	[sp+ 216] = r1 			  ## mp2dsp.c:356:9
  114ad2:    89 41       	r1 = [sp+ 152] 			  ## mp2dsp.c:357:11
  114ad4:    c9 65       	[sp+ 220] = r1 			  ## mp2dsp.c:357:9
  114ad6:    81 47       	r1 = [sp+ 120] 			  ## mp2dsp.c:358:11
  114ad8:    09 66       	[sp+ 224] = r1 			  ## mp2dsp.c:358:9
  114ada:    89 43       	r1 = [sp+ 184] 			  ## mp2dsp.c:359:11
  114adc:    49 66       	[sp+ 228] = r1 			  ## mp2dsp.c:359:9
  114ade:    01 45       	r1 = [sp+ 80] 			  ## mp2dsp.c:360:11
  114ae0:    89 66       	[sp+ 232] = r1 			  ## mp2dsp.c:360:9
  114ae2:    09 41       	r1 = [sp+ 144] 			  ## mp2dsp.c:361:11
  114ae4:    c9 66       	[sp+ 236] = r1 			  ## mp2dsp.c:361:9
  114ae6:    01 47       	r1 = [sp+ 112] 			  ## mp2dsp.c:362:12
  114ae8:    09 67       	[sp+ 240] = r1 			  ## mp2dsp.c:362:10
  114aea:    09 43       	r1 = [sp+ 176] 			  ## mp2dsp.c:363:12
  114aec:    49 67       	[sp+ 244] = r1 			  ## mp2dsp.c:363:10
  114aee:    01 46       	r1 = [sp+ 96] 			  ## mp2dsp.c:364:12
  114af0:    89 67       	[sp+ 248] = r1 			  ## mp2dsp.c:364:10
  114af2:    09 42       	r1 = [sp+ 160] 			  ## mp2dsp.c:365:12
  114af4:    c9 67       	[sp+ 252] = r1 			  ## mp2dsp.c:365:10
  114af6:    09 40       	r1 = [sp+ 128] 			  ## mp2dsp.c:366:12
  114af8:    11 60       	[sp+ 256] = r1 			  ## mp2dsp.c:366:10
  114afa:    09 44       	r1 = [sp+ 192] 			  ## mp2dsp.c:367:12
  114afc:    51 60       	[sp+ 260] = r1 			  ## mp2dsp.c:367:10
  114afe:    c1 44       	r1 = [sp+ 76] 			  ## mp2dsp.c:368:12
  114b00:    91 60       	[sp+ 264] = r1 			  ## mp2dsp.c:368:10
  114b02:    c9 40       	r1 = [sp+ 140] 			  ## mp2dsp.c:369:12
  114b04:    d1 60       	[sp+ 268] = r1 			  ## mp2dsp.c:369:10
  114b06:    c1 46       	r1 = [sp+ 108] 			  ## mp2dsp.c:370:12
  114b08:    11 61       	[sp+ 272] = r1 			  ## mp2dsp.c:370:10
  114b0a:    c9 42       	r1 = [sp+ 172] 			  ## mp2dsp.c:371:12
  114b0c:    51 61       	[sp+ 276] = r1 			  ## mp2dsp.c:371:10
  114b0e:    c1 45       	r1 = [sp+ 92] 			  ## mp2dsp.c:372:12
  114b10:    91 61       	[sp+ 280] = r1 			  ## mp2dsp.c:372:10
  114b12:    c9 41       	r1 = [sp+ 156] 			  ## mp2dsp.c:373:12
  114b14:    d1 61       	[sp+ 284] = r1 			  ## mp2dsp.c:373:10
  114b16:    c1 47       	r1 = [sp+ 124] 			  ## mp2dsp.c:374:12
  114b18:    11 62       	[sp+ 288] = r1 			  ## mp2dsp.c:374:10
  114b1a:    c9 43       	r1 = [sp+ 188] 			  ## mp2dsp.c:375:12
  114b1c:    51 62       	[sp+ 292] = r1 			  ## mp2dsp.c:375:10
  114b1e:    41 45       	r1 = [sp+ 84] 			  ## mp2dsp.c:376:12
  114b20:    91 62       	[sp+ 296] = r1 			  ## mp2dsp.c:376:10
  114b22:    49 41       	r1 = [sp+ 148] 			  ## mp2dsp.c:377:12
  114b24:    d1 62       	[sp+ 300] = r1 			  ## mp2dsp.c:377:10
  114b26:    41 47       	r1 = [sp+ 116] 			  ## mp2dsp.c:378:12
  114b28:    11 63       	[sp+ 304] = r1 			  ## mp2dsp.c:378:10
  114b2a:    49 43       	r1 = [sp+ 180] 			  ## mp2dsp.c:379:12
  114b2c:    51 63       	[sp+ 308] = r1 			  ## mp2dsp.c:379:10
  114b2e:    41 46       	r1 = [sp+ 100] 			  ## mp2dsp.c:380:12
  114b30:    91 63       	[sp+ 312] = r1 			  ## mp2dsp.c:380:10
  114b32:    49 42       	r1 = [sp+ 164] 			  ## mp2dsp.c:381:12
  114b34:    d1 63       	[sp+ 316] = r1 			  ## mp2dsp.c:381:10
  114b36:    49 40       	r1 = [sp+ 132] 			  ## mp2dsp.c:382:12
  114b38:    11 64       	[sp+ 320] = r1 			  ## mp2dsp.c:382:10
  114b3a:    49 44       	r1 = [sp+ 196] 			  ## mp2dsp.c:383:12
  114b3c:    51 64       	[sp+ 324] = r1 			  ## mp2dsp.c:383:10
  114b3e:    29 81       	r1 = 37 
  114b40:    3a c6       	r2 = r7 			  ## mp2dsp.c:469:50
  114b42:    c3 42       	r3 = [sp+ 44] 			  ## mp2dsp.c:469:50
  114b44:    46 42       	r6 = [sp+ 36] 			  ## mp2dsp.c:469:50
  114b46:    05 08       	goto 10 <mp2encode+0x4F6 : 114b52 >			  ## mp2dsp.c:469:50
  114b48:    82 89       	r2 += 48 			  ## mp2dsp.c:466:4
  114b4a:    1b d1       	r3 = r3 + 4 			  ## mp2dsp.c:466:4
  114b4c:    c9 d3       	r1 = r1 + -1 			  ## mp2dsp.c:466:4
  114b4e:    28 e8 60 01 	r0 = [r6 ++= 4] 			  ## mp2dsp.c:466:4
  114b52:    c4 a6       	r4 = r0 >>> 6 			  ## mp2dsp.c:469:57
  114b54:    14 68       	[r2 + 0] = r4 			  ## mp2dsp.c:469:48
  114b56:    c4 bf       	r4 = r0 >>> 31 			  ## mp2dsp.c:469:57
  114b58:    00 d5       	r0 = r0 + r4 			  ## mp2dsp.c:469:57
  114b5a:    60 da       	r0 ^= r4 			  ## mp2dsp.c:469:57
  114b5c:    c0 a6       	r0 = r0 >>> 6 			  ## mp2dsp.c:474:21
  114b5e:    08 06       	r0 *= r1 			  ## mp2dsp.c:475:22
  114b60:    1c 48       	r4 = [r3 + 0] 			  ## mp2dsp.c:476:17
  114b62:    04 ce       	cmp r0, r4			  ## mp2dsp.c:476:8
  114b64:    c0 03       	ifs (nzcv > 0) {			  ## mp2dsp.c:477:31
  114b66:    18 68       		[r3 + 0] = r0 
                               	}			  ## mp2dsp.c:477:31
  114b68:    31 98       	cmp r1, 6			  ## mp2dsp.c:466:4
  114b6a:    ee 11       	ifs (nzcv != 0) goto -36 <mp2encode+0x4EC : 114b48 >			  ## mp2dsp.c:466:4
  114b6c:    45 44       	r5 = [sp+ 68] 
  114b6e:    68 50       	r0 = h[r5 + 4] 			  ## mp2dsp.c:481:30
  114b70:    00 8f       	r0 += -32 			  ## mp2dsp.c:481:37
  114b72:    42 c9       	r2 = r0.l 			  ## mp2dsp.c:481:37
  114b74:    11 ea e0 01 	r1 = 480 			  ## mp2dsp.c:482:7
  114b78:    14 ea e0 ff 	r4 = 65504 			  ## mp2dsp.c:482:7
  114b7c:    14 ce       	cmp r2, r4			  ## mp2dsp.c:482:7
  114b7e:    10 03       	ifs (nzcv != 0) {			  ## mp2dsp.c:482:7
  114b80:    01 c6       		r1 = r0 
                               	}			  ## mp2dsp.c:482:7
  114b82:    69 70       	h[r5 + 4] = r1 			  ## mp2dsp.c:481:19
  114b84:    3f d1       	r7 = r7 + 4 			  ## mp2dsp.c:397:2
  114b86:    86 43       	r6 = [sp+ 56] 			  ## mp2dsp.c:397:2
  114b88:    76 d0       	r6 = r6 + 1 			  ## mp2dsp.c:397:30
  114b8a:    66 98       	cmp r6, 12			  ## mp2dsp.c:397:2
  114b8c:    c4 43       	r4 = [sp+ 60] 			  ## mp2dsp.c:397:2
  114b8e:    ff fb 2b dc 	ifs (nzcv < 0) goto -1148 <mp2encode+0xBA : 114716 >			  ## mp2dsp.c:397:2
  114b92:    06 80       	r6 = 0 
  114b94:    2e 78       	b[r5 + 0] = r6 
  114b96:    28 5a       	r0 = b[r5 + 1] 			  ## encodemp2.c:405:23
  114b98:    2c c6       	r4 = r5 			  ## encodemp2.c:405:23
  114b9a:    00 98       	cmp r0, 0			  ## encodemp2.c:405:23
  114b9c:    56 10       	ifs (nzcv == 0) goto 172 <mp2encode+0x5EE : 114c4a >			  ## encodemp2.c:405:23
  114b9e:    00 ed 40 50 	r0 = r4 + 80 			  ## encodemp2.c:408:33
  114ba2:    01 80       	r1 = 0 			  ## encodemp2.c:408:33
  114ba4:    20 e4 09 eb 	r9 = [addr(940)]  <.GCPI426_2 : 114f54 >			  ## encodemp2.c:408:33
  114ba8:    20 e4 08 eb 	r8 = [addr(940)]  <.GCPI426_3 : 114f58 >			  ## encodemp2.c:408:33
  114bac:    15 ea 52 0b 	r5 = 2898 			  ## encodemp2.c:408:33
  114bb0:    00 fc 12 30 	r2 = r1 * 48 			  ## encodemp2.c:408:9
  114bb4:    12 d5       	r2 = r2 + r4 			  ## encodemp2.c:408:9
  114bb6:    20 e8 22 13 	r2 = [r2 + 76] 			  ## encodemp2.c:409:17
  114bba:    d3 bf       	r3 = r2 >>> 31 			  ## encodemp2.c:409:17
  114bbc:    d2 d4       	r2 = r2 + r3 			  ## encodemp2.c:409:17
  114bbe:    40 f0 26 03 	r6 = r2 ^ r3 			  ## encodemp2.c:409:17
  114bc2:    5b 80       	r3 = 11 
  114bc4:    07 c6       	r7 = r0 
  114bc6:    28 e8 72 01 	r2 = [r7 ++= 4] 			  ## encodemp2.c:413:15
  114bca:    d4 bf       	r4 = r2 >>> 31 			  ## encodemp2.c:413:15
  114bcc:    12 d5       	r2 = r2 + r4 			  ## encodemp2.c:413:15
  114bce:    62 da       	r2 ^= r4 			  ## encodemp2.c:413:15
  114bd0:    16 ce       	cmp r2, r6			  ## encodemp2.c:414:9
  114bd2:    d0 03       	ifs (nzcv <= 0) {			  ## encodemp2.c:414:9
  114bd4:    32 c6       		r2 = r6 
                               	}			  ## encodemp2.c:414:9
  114bd6:    db d3       	r3 = r3 + -1 			  ## encodemp2.c:410:14
  114bd8:    16 c6       	r6 = r2 			  ## encodemp2.c:410:14
  114bda:    f5 11       	ifs (nzcv != 0) goto -22 <mp2encode+0x56A : 114bc6 >			  ## encodemp2.c:410:14
  114bdc:    0a 98       	cmp r2, 1			  ## encodemp2.c:418:8
  114bde:    29 1b       	ifs (nzcv < 0) goto 82 <mp2encode+0x5D6 : 114c32 >			  ## encodemp2.c:418:8
  114be0:    53 b0       	r3 = r2 >> 16 			  ## encodemp2.c:156:11
  114be2:    0e 80       	r6 = 1 
  114be4:    01 11       	ifs (nzcv != 0) goto 2 <mp2encode+0x58C : 114be8 >
  114be6:    06 80       	r6 = 0 
  114be8:    37 a4       	r7 = r6 << 4 			  ## encodemp2.c:154:9
  114bea:    1b 20       	if (r3 != 0) goto 2 <mp2encode+0x592 : 114bee >
  114bec:    13 c6       	r3 = r2 			  ## encodemp2.c:154:9
  114bee:    0c f4 30 7f 	tst r3, 65280			  ## encodemp2.c:159:9
  114bf2:    11 03       	ifs (nzcv != 0) {			  ## encodemp2.c:162:11
  114bf4:    1f d8       		r7 |= 8			  ## encodemp2.c:162:11
  114bf6:    5b a8       		r3 = r3 >> 8 
                               	}			  ## encodemp2.c:161:11
  114bf8:    00 f4 30 f0 	tst r3, 240			  ## encodemp2.c:164:9
  114bfc:    11 03       	ifs (nzcv != 0) {			  ## encodemp2.c:167:11
  114bfe:    3f d1       		r7 = r7 + 4 			  ## encodemp2.c:167:11
  114c00:    5b a4       		r3 = r3 >> 4 
                               	}			  ## encodemp2.c:166:11
  114c02:    00 e7 93 03 	r3 = b[r9 + r3] 			  ## encodemp2.c:169:10
  114c06:    20 ee 74 15 	r4 = 21 - r7 			  ## encodemp2.c:169:7
  114c0a:    e4 d6       	r4 = r4 - r3 			  ## encodemp2.c:423:33
  114c0c:    00 fc 44 03 	r4 = r4 * 3 			  ## encodemp2.c:423:38
  114c10:    66 d3       	r6 = r4 + -3 			  ## encodemp2.c:423:42
  114c12:    06 98       	cmp r6, 0			  ## encodemp2.c:424:9
  114c14:    10 1b       	ifs (nzcv < 0) goto 32 <mp2encode+0x5DA : 114c36 >			  ## encodemp2.c:424:9
  114c16:    34 a2       	r4 = r6 << 2 			  ## encodemp2.c:400:9
  114c18:    84 cb       	r4 += r8 			  ## encodemp2.c:400:9
  114c1a:    26 d1       	r6 = r4 + 4 			  ## encodemp2.c:400:9
  114c1c:    db d5       	r3 = r3 + r7 			  ## encodemp2.c:400:9
  114c1e:    00 fc 33 03 	r3 = r3 * 3 			  ## encodemp2.c:400:9
  114c22:    20 ee 33 3b 	r3 = 59 - r3 			  ## encodemp2.c:400:9
  114c26:    28 e8 64 01 	r4 = [r6 ++= 4] 			  ## encodemp2.c:426:21
  114c2a:    5b d0       	r3 = r3 + 1 			  ## encodemp2.c:426:6
  114c2c:    14 ce       	cmp r2, r4			  ## encodemp2.c:426:6
  114c2e:    fb 1d       	ifs (nzcv <= 0) goto -10 <mp2encode+0x5CA : 114c26 >			  ## encodemp2.c:426:6
  114c30:    03 08       	goto 6 <mp2encode+0x5DC : 114c38 >			  ## encodemp2.c:426:6
  114c32:    f3 81       	r3 = 62 
  114c34:    01 08       	goto 2 <mp2encode+0x5DC : 114c38 >
  114c36:    03 80       	r3 = 0 
  114c38:    44 44       	r4 = [sp+ 68] 
  114c3a:    62 d4       	r2 = r4 + r1 			  ## encodemp2.c:439:4
  114c3c:    40 e7 23 05 	b[r2 + r5] = r3 			  ## encodemp2.c:439:10
  114c40:    80 89       	r0 += 48 			  ## encodemp2.c:405:3
  114c42:    49 d0       	r1 = r1 + 1 			  ## encodemp2.c:405:32
  114c44:    26 5a       	r6 = b[r4 + 1] 			  ## encodemp2.c:405:23
  114c46:    0e ce       	cmp r1, r6			  ## encodemp2.c:405:3
  114c48:    b3 1b       	ifs (nzcv < 0) goto -154 <mp2encode+0x554 : 114bb0 >			  ## encodemp2.c:405:3
  114c4a:    0b ed 40 74 	r0 = r4 + 2932 
  114c4e:    05 48       	r5 = [r0 + 0] 			  ## encodemp2.c:260:14
  114c50:    8d 64       	[sp+ 200] = r5 
  114c52:    16 98       	cmp r6, 2			  ## encodemp2.c:261:5
  114c54:    14 13       	if (nzcv < 0) goto 40 <mp2encode+0x622 : 114c7e >			  ## encodemp2.c:261:5
  114c56:    43 48       	r3 = [r0 + 4] 
  114c58:    40 44       	r0 = [sp+ 68] 			  ## encodemp2.c:261:5
  114c5a:    0b ed 00 7c 	r0 = r0 + 2940 			  ## encodemp2.c:261:5
  114c5e:    f1 d3       	r1 = r6 + -1 			  ## encodemp2.c:261:5
  114c60:    00 ed f2 c8 	r2 = sp + 200 			  ## encodemp2.c:261:5
  114c64:    12 d1       	r2 = r2 + 4 			  ## encodemp2.c:261:5
  114c66:    1c c6       	r4 = r3 			  ## encodemp2.c:263:56
  114c68:    23 a1       	r3 = r4 << 1 			  ## encodemp2.c:263:49
  114c6a:    ed d4       	r5 = r5 + r3 			  ## encodemp2.c:263:47
  114c6c:    28 e8 03 01 	r3 = [r0 ++= 4] 			  ## encodemp2.c:263:87
  114c70:    ed d4       	r5 = r5 + r3 			  ## encodemp2.c:263:80
  114c72:    ed a2       	r5 = r5 >>> 2 			  ## encodemp2.c:263:114
  114c74:    68 e8 25 01 	[r2 ++= 4] = r5 			  ## encodemp2.c:263:114
  114c78:    c9 d3       	r1 = r1 + -1 			  ## encodemp2.c:261:15
  114c7a:    25 c6       	r5 = r4 			  ## encodemp2.c:263:21
  114c7c:    f4 11       	ifs (nzcv != 0) goto -24 <mp2encode+0x60A : 114c66 >			  ## encodemp2.c:263:21
  114c7e:    46 92       	r6 = sp + 72 
  114c80:    56 ea 00 00 	r14 = 0 
  114c84:    30 c6       	r0 = r6 			  ## encodemp2.c:266:5
  114c86:    01 80       	r1 = 0 			  ## encodemp2.c:266:5
  114c88:    02 81       	r2 = 32 			  ## encodemp2.c:266:5
  114c8a:    d7 e1 7f 16 	call -335154 <memset : c2f5c >			  ## encodemp2.c:266:5
  114c8e:    00 43       	r0 = [sp+ 48] 			  ## encodemp2.c:267:5
  114c90:    01 80       	r1 = 0 			  ## encodemp2.c:267:5
  114c92:    02 81       	r2 = 32 			  ## encodemp2.c:267:5
  114c94:    d7 e1 2f 16 	call -335164 <memset : c2f5c >			  ## encodemp2.c:267:5
  114c98:    44 44       	r4 = [sp+ 68] 
  114c9a:    00 e8 4d 40 	r13 = b[r4 + 1] 			  ## encodemp2.c:277:25
  114c9e:    08 80       	r0 = 1 			  ## encodemp2.c:277:25
  114ca0:    80 ef d0 00 	cmp r13, 0			  ## encodemp2.c:277:5
  114ca4:    6e 10       	ifs (nzcv == 0) goto 220 <mp2encode+0x726 : 114d82 >			  ## encodemp2.c:277:5
  114ca6:    c1 43       	r1 = [sp+ 60] 
  114ca8:    60 54       	r0 = h[r4 + 6] 			  ## encodemp2.c:270:20
  114caa:    20 f7 0a 03 	r10 = r0 << 3 			  ## encodemp2.c:270:40
  114cae:    0b e5 10 fe 	r0, r11 = d[r1 + -8] 			  ## encodemp2.c:275:24
  114cb2:    99 c6       	r1 = r11 
  114cb4:    aa c6       	r2 = r13 
  114cb6:    08 e8 13 40 	r3 = b[r1 ++= 1] 			  ## encodemp2.c:279:18
  114cba:    00 e7 03 03 	r3 = b[r0 + r3] 			  ## encodemp2.c:280:16
  114cbe:    5e cb       	r14 += r3 			  ## encodemp2.c:281:28
  114cc0:    d2 d3       	r2 = r2 + -1 			  ## encodemp2.c:277:15
  114cc2:    f9 11       	ifs (nzcv != 0) goto -14 <mp2encode+0x65A : 114cb6 >			  ## encodemp2.c:277:15
  114cc4:    00 ed fc c8 	r12 = sp + 200 
  114cc8:    20 e4 09 a4 	r9 = [addr(656)]  <.GCPI426_4 : 114f5c >
  114ccc:    00 ec d2 00 	r2 = r13.b 
  114cd0:    24 ea 05 00 	r5 = 2147483648 
  114cd4:    ff 87       	r7 = -1 
  114cd6:    00 80       	r0 = 0 
  114cd8:    a3 c6       	r3 = r12 
  114cda:    19 48       	r1 = [r3 + 0] 			  ## encodemp2.c:292:17
  114cdc:    0d ce       	cmp r1, r5			  ## encodemp2.c:292:37
  114cde:    0a 1d       	ifs (nzcv <= 0) goto 20 <mp2encode+0x698 : 114cf4 >			  ## encodemp2.c:292:37
  114ce0:    00 e7 68 00 	r8 = b[r6 + r0] 			  ## encodemp2.c:292:40
  114ce4:    80 ef 80 02 	cmp r8, 2			  ## encodemp2.c:292:17
  114ce8:    10 03       	ifs (nzcv != 0) {			  ## encodemp2.c:292:17
  114cea:    07 c6       		r7 = r0 
                               	}			  ## encodemp2.c:292:17
  114cec:    80 ef 80 02 	cmp r8, 2			  ## encodemp2.c:292:17
  114cf0:    10 03       	ifs (nzcv != 0) {			  ## encodemp2.c:292:17
  114cf2:    0d c6       		r5 = r1 
                               	}			  ## encodemp2.c:292:17
  114cf4:    1b d1       	r3 = r3 + 4 			  ## encodemp2.c:290:19
  114cf6:    40 d0       	r0 = r0 + 1 			  ## encodemp2.c:290:38
  114cf8:    02 ce       	cmp r0, r2			  ## encodemp2.c:290:9
  114cfa:    ef 1b       	ifs (nzcv < 0) goto -34 <mp2encode+0x67E : 114cda >			  ## encodemp2.c:290:9
  114cfc:    ff 9f       	cmp r7, -1			  ## encodemp2.c:299:13
  114cfe:    48 1d       	ifs (nzcv <= 0) goto 144 <mp2encode+0x734 : 114d90 >
  114d00:    00 e7 b0 07 	r0 = b[r11 + r7] 			  ## encodemp2.c:306:18
  114d04:    c1 43       	r1 = [sp+ 60] 			  ## encodemp2.c:306:27
  114d06:    c9 4f       	r1 = [r1 + -4] 			  ## encodemp2.c:306:27
  114d08:    40 d4       	r0 = r0 + r1 			  ## encodemp2.c:306:18
  114d0a:    00 e7 61 07 	r1 = b[r6 + r7] 			  ## encodemp2.c:308:13
  114d0e:    e1 20       	if (r1 == 0) goto 28 <mp2encode+0x6D0 : 114d2c >			  ## encodemp2.c:308:13
  114d10:    e1 d5       	r1 = r4 + r7 			  ## encodemp2.c:317:17
  114d12:    c9 58       	r1 = b[r1 + 12] 			  ## encodemp2.c:317:17
  114d14:    00 e7 02 01 	r2 = b[r0 + r1] 			  ## encodemp2.c:318:52
  114d18:    12 a1       	r2 = r2 << 1 			  ## encodemp2.c:318:52
  114d1a:    10 e7 92 02 	r2 = h[r9 + r2] 			  ## encodemp2.c:318:52
  114d1e:    09 d4       	r1 = r1 + r0 			  ## encodemp2.c:318:37
  114d20:    09 5a       	r1 = b[r1 + 1] 			  ## encodemp2.c:318:20
  114d22:    09 a1       	r1 = r1 << 1 			  ## encodemp2.c:318:20
  114d24:    10 e7 91 01 	r1 = h[r9 + r1] 			  ## encodemp2.c:318:20
  114d28:    89 d6       	r1 = r1 - r2 			  ## encodemp2.c:318:51
  114d2a:    05 08       	goto 10 <mp2encode+0x6DA : 114d36 >
  114d2c:    01 5a       	r1 = b[r0 + 1] 			  ## encodemp2.c:312:21
  114d2e:    09 a1       	r1 = r1 << 1 			  ## encodemp2.c:312:21
  114d30:    10 e7 91 01 	r1 = h[r9 + r1] 			  ## encodemp2.c:312:21
  114d34:    89 d1       	r1 = r1 + 6 			  ## encodemp2.c:312:18
  114d36:    b1 cb       	r1 += r14 			  ## encodemp2.c:321:32
  114d38:    12 80       	r2 = 2 
  114d3a:    4a ce       	cmp r1, r10			  ## encodemp2.c:321:13
  114d3c:    1a 1c       	ifs (nzcv > 0) goto 52 <mp2encode+0x716 : 114d72 >			  ## encodemp2.c:321:13
  114d3e:    e2 d5       	r2 = r4 + r7 			  ## encodemp2.c:324:19
  114d40:    d3 58       	r3 = b[r2 + 12] 			  ## encodemp2.c:324:17
  114d42:    5b d0       	r3 = r3 + 1 			  ## encodemp2.c:324:17
  114d44:    d3 78       	b[r2 + 12] = r3 			  ## encodemp2.c:324:17
  114d46:    3a a2       	r2 = r7 << 2 			  ## encodemp2.c:327:30
  114d48:    00 ed f4 c8 	r4 = sp + 200 			  ## encodemp2.c:327:30
  114d4c:    20 e7 45 02 	r5 = [r4 + r2] 			  ## encodemp2.c:327:30
  114d50:    ed a1       	r5 = r5 >>> 1 			  ## encodemp2.c:327:44
  114d52:    60 e7 45 02 	[r4 + r2] = r5 			  ## encodemp2.c:327:28
  114d56:    1b c9       	r3 = r3.b 			  ## encodemp2.c:324:17
  114d58:    00 58       	r0 = b[r0 + 0] 			  ## encodemp2.c:329:29
  114d5a:    0a 80       	r2 = 1 
  114d5c:    00 f7 20 00 	r0 = r2 << r0 			  ## encodemp2.c:329:26
  114d60:    c0 d3       	r0 = r0 + -1 			  ## encodemp2.c:329:39
  114d62:    12 80       	r2 = 2 			  ## encodemp2.c:329:39
  114d64:    18 ce       	cmp r3, r0			  ## encodemp2.c:329:17
  114d66:    b0 03       	ifs (nzcv < 0) {			  ## encodemp2.c:329:17
  114d68:    0a 80       		r2 = 1 
                               	}			  ## encodemp2.c:329:17
  114d6a:    44 44       	r4 = [sp+ 68] 			  ## encodemp2.c:329:17
  114d6c:    00 e8 4d 40 	r13 = b[r4 + 1] 			  ## encodemp2.c:329:17
  114d70:    4e c6       	r14 = r1 			  ## encodemp2.c:329:17
  114d72:    40 e7 62 07 	b[r6 + r7] = r2 
  114d76:    00 ec d0 00 	r0 = r13.b 			  ## encodemp2.c:290:19
  114d7a:    a8 11       	ifs (nzcv != 0) goto -176 <mp2encode+0x670 : 114ccc >			  ## encodemp2.c:290:19
  114d7c:    c6 43       	r6 = [sp+ 60] 
  114d7e:    08 80       	r0 = 1 
  114d80:    31 08       	goto 98 <mp2encode+0x788 : 114de4 >
  114d82:    c6 43       	r6 = [sp+ 60] 
  114d84:    2f 08       	goto 94 <mp2encode+0x788 : 114de4 >
  114d86:    08 d6       	r0 = r1 - r0 			  ## mp2dsp.c:405:43
  114d88:    a0 68       	[r4 + 8] = r0 			  ## mp2dsp.c:405:23
  114d8a:    40 44       	r0 = [sp+ 68] 			  ## mp2dsp.c:405:23
  114d8c:    06 78       	b[r0 + 0] = r6 			  ## mp2dsp.c:405:23
  114d8e:    d9 08       	goto 434 <mp2encode+0x8E6 : 114f42 >			  ## mp2dsp.c:405:23
  114d90:    00 80       	r0 = 0 
  114d92:    11 ea 74 0b 	r1 = 2932 
  114d96:    c6 43       	r6 = [sp+ 60] 
  114d98:    20 e7 42 01 	r2 = [r4 + r1] 			  ## encodemp2.c:343:33
  114d9c:    00 fc 22 03 	r2 = r2 * 3 			  ## encodemp2.c:343:32
  114da0:    d2 a2       	r2 = r2 >>> 2 			  ## encodemp2.c:343:58
  114da2:    60 e7 42 01 	[r4 + r1] = r2 			  ## encodemp2.c:343:28
  114da6:    22 d4       	r2 = r4 + r0 			  ## encodemp2.c:344:13
  114da8:    d3 58       	r3 = b[r2 + 12] 			  ## encodemp2.c:344:13
  114daa:    13 21       	if (r3 == 0) goto 34 <mp2encode+0x772 : 114dce >			  ## encodemp2.c:344:13
  114dac:    05 e5 64 fe 	r4, r5 = d[r6 + -8] 			  ## encodemp2.c:346:50
  114db0:    00 e7 55 00 	r5 = b[r5 + r0] 			  ## encodemp2.c:346:62
  114db4:    5b d5       	r3 = r3 + r5 			  ## encodemp2.c:346:82
  114db6:    1b d5       	r3 = r3 + r4 			  ## encodemp2.c:346:41
  114db8:    1b 58       	r3 = b[r3 + 0] 			  ## encodemp2.c:346:41
  114dba:    1c a1       	r4 = r3 << 1 			  ## encodemp2.c:346:109
  114dbc:    00 f3 43 01 	r3 = r4 | 1 			  ## encodemp2.c:346:114
  114dc0:    44 e8 23 0b 	b[++ r2 = 44] = r3 			  ## encodemp2.c:346:38
  114dc4:    24 c9       	r4 = r4.b 			  ## encodemp2.c:346:109
  114dc6:    fc 98       	cmp r4, 31			  ## encodemp2.c:347:8
  114dc8:    44 44       	r4 = [sp+ 68] 			  ## encodemp2.c:347:8
  114dca:    03 18       	if (nzcv > 0) goto 6 <mp2encode+0x776 : 114dd2 >			  ## encodemp2.c:347:8
  114dcc:    03 08       	goto 6 <mp2encode+0x778 : 114dd4 >			  ## encodemp2.c:347:8
  114dce:    62 89       	r2 += 44 
  114dd0:    03 80       	r3 = 0 
  114dd2:    13 78       	b[r2 + 0] = r3 
  114dd4:    09 d1       	r1 = r1 + 4 			  ## encodemp2.c:341:15
  114dd6:    22 5a       	r2 = b[r4 + 1] 			  ## encodemp2.c:341:25
  114dd8:    40 d0       	r0 = r0 + 1 			  ## encodemp2.c:341:34
  114dda:    02 ce       	cmp r0, r2			  ## encodemp2.c:341:5
  114ddc:    dd 1b       	ifs (nzcv < 0) goto -70 <mp2encode+0x73C : 114d98 >			  ## encodemp2.c:341:5
  114dde:    08 80       	r0 = 1 			  ## encodemp2.c:356:1
  114de0:    12 20       	if (r2 == 0) goto 2 <mp2encode+0x788 : 114de4 >
  114de2:    00 80       	r0 = 0 			  ## encodemp2.c:356:1
  114de4:    03 80       	r3 = 0 
  114de6:    06 ed 45 50 	r5 = r4 + 1616 
  114dea:    2b 70       	h[r5 + 0] = r3 			  ## encodemp2.c:482:27
  114dec:    2b 7c       	b[r5 + 2] = r3 			  ## encodemp2.c:483:20
  114dee:    eb 6f       	[r5 + -4] = r3 			  ## encodemp2.c:484:20
  114df0:    00 f4 00 01 	tst r0, 1			  ## encodemp2.c:487:2
  114df4:    00 80       	r0 = 0 			  ## encodemp2.c:475:46
  114df6:    02 80       	r2 = 0 			  ## encodemp2.c:475:46
  114df8:    00 fb e1 08 	ifs (nzcv != 0) goto 284 <mp2encode+0x8BC : 114f18 >			  ## encodemp2.c:475:46
  114dfc:    85 63       	[sp+ 56] = r5 
  114dfe:    00 ed 40 54 	r0 = r4 + 84 			  ## encodemp2.c:492:29
  114e02:    00 64       	[sp+ 64] = r0 			  ## encodemp2.c:492:29
  114e04:    07 80       	r7 = 0 			  ## encodemp2.c:492:29
  114e06:    50 ea 4c 00 	r8 = 76 			  ## encodemp2.c:492:29
  114e0a:    01 e5 60 fe 	r0, r1 = d[r6 + -8] 			  ## encodemp2.c:492:29
  114e0e:    00 e7 11 07 	r1 = b[r1 + r7] 			  ## encodemp2.c:492:20
  114e12:    80 e7 01 01 	r1 = b[r0 + r1] (s) 			  ## encodemp2.c:493:3
  114e16:    e5 d5       	r5 = r4 + r7 			  ## encodemp2.c:493:41
  114e18:    ea 58       	r2 = b[r5 + 12] 			  ## encodemp2.c:493:41
  114e1a:    20 c6       	r0 = r4 			  ## encodemp2.c:493:3
  114e1c:    ff e1 bf be 	call -2090 <mp2_put_bits : 1145f6 >			  ## encodemp2.c:493:3
  114e20:    e8 58       	r0 = b[r5 + 12] 			  ## encodemp2.c:495:7
  114e22:    00 98       	cmp r0, 0			  ## encodemp2.c:495:7
  114e24:    6b 10       	ifs (nzcv == 0) goto 214 <mp2encode+0x8A0 : 114efc >			  ## encodemp2.c:495:7
  114e26:    0b ed 54 50 	r4 = r5 + 2896 
  114e2a:    22 5c       	r2 = b[r4 + 2] 			  ## encodemp2.c:499:29
  114e2c:    40 44       	r0 = [sp+ 68] 			  ## encodemp2.c:499:4
  114e2e:    31 80       	r1 = 6 			  ## encodemp2.c:499:4
  114e30:    ff e1 1f be 	call -2110 <mp2_put_bits : 1145f6 >			  ## encodemp2.c:499:4
  114e34:    21 5c       	r1 = b[r4 + 2] 			  ## encodemp2.c:507:8
  114e36:    44 44       	r4 = [sp+ 68] 
  114e38:    90 2a       	r0 = [addr(296)]  <.GCPI426_5 : 114f60 >			  ## encodemp2.c:508:12
  114e3a:    00 e7 00 01 	r0 = b[r0 + r1] 			  ## encodemp2.c:508:12
  114e3e:    09 a2       	r1 = r1 << 2 			  ## encodemp2.c:509:11
  114e40:    52 2a       	r2 = [addr(292)]  <.GCPI426_6 : 114f64 >			  ## encodemp2.c:509:11
  114e42:    20 e7 22 01 	r2 = [r2 + r1] 			  ## encodemp2.c:509:11
  114e46:    00 e8 51 0b 	r1 = b[r5 + 44] 			  ## encodemp2.c:501:13
  114e4a:    60 f7 1a 01 	r10 = r1 >> 1 			  ## encodemp2.c:501:38
  114e4e:    20 f7 a1 01 	r1 = r10 << 1 			  ## encodemp2.c:506:12
  114e52:    53 29       	r3 = [addr(276)]  <.GCPI426_7 : 114f68 >			  ## encodemp2.c:506:12
  114e54:    10 e7 39 01 	r9 = h[r3 + r1] 			  ## encodemp2.c:506:12
  114e58:    1f ed 91 ff 	r1 = r9 + -1 
  114e5c:    65 80       	r5 = 12 
  114e5e:    86 c6       	r6 = r8 
  114e60:    20 e7 43 06 	r3 = [r4 + r6] 			  ## encodemp2.c:514:14
  114e64:    da 06       	macc = r3 * r2 (s) 			  ## encodemp2.c:515:5
  114e66:    80 f9 03 00 	r3 = macc >>> r0 			  ## encodemp2.c:515:5
  114e6a:    80 fd 93 00 	macc = r3 * r9 (s) 			  ## encodemp2.c:516:5
  114e6e:    c0 f9 03 15 	r3 = macc >>> 21 			  ## encodemp2.c:516:5
  114e72:    8b cb       	r3 += r9 			  ## encodemp2.c:518:46
  114e74:    db a1       	r3 = r3 >>> 1 			  ## encodemp2.c:518:55
  114e76:    59 ce       	cmp r3, r9			  ## encodemp2.c:519:9
  114e78:    a0 03       	ifs (nzcv >= 0) {			  ## encodemp2.c:519:9
  114e7a:    0b c6       		r3 = r1 
                               	}			  ## encodemp2.c:519:9
  114e7c:    60 e7 43 06 	[r4 + r6] = r3 			  ## encodemp2.c:518:40
  114e80:    36 d1       	r6 = r6 + 4 			  ## encodemp2.c:510:17
  114e82:    ed d3       	r5 = r5 + -1 			  ## encodemp2.c:510:17
  114e84:    ed 11       	ifs (nzcv != 0) goto -38 <mp2encode+0x804 : 114e60 >			  ## encodemp2.c:510:17
  114e86:    48 2e       	r0 = [addr(228)]  <.GCPI426_8 : 114f6c >
  114e88:    00 e7 0b 0a 	r11 = b[r0 + r10] 
  114e8c:    30 ee bc 00 	r12 = -r11 
  114e90:    58 80       	r0 = 11 
  114e92:    40 f7 00 0a 	r0 = r0 >> r10 
  114e96:    80 f3 0d 01 	r13 = r0 & 1 
  114e9a:    56 ea 00 00 	r14 = 0 
  114e9e:    20 e9 0a 10 	r10 = [sp+ 64] 
  114ea2:    c6 43       	r6 = [sp+ 60] 
  114ea4:    20 e8 a0 fe 	r0 = [r10 + -8] 
  114ea8:    80 ef d0 00 	cmp r13, 0			  ## encodemp2.c:530:9
  114eac:    12 11       	ifs (nzcv != 0) goto 36 <mp2encode+0x876 : 114ed2 >			  ## encodemp2.c:530:9
  114eae:    80 ec b5 00 	r5 = r11.b (s) 			  ## encodemp2.c:536:6
  114eb2:    42 c9       	r2 = r0.l 			  ## encodemp2.c:536:6
  114eb4:    20 c6       	r0 = r4 			  ## encodemp2.c:536:6
  114eb6:    29 c6       	r1 = r5 			  ## encodemp2.c:536:6
  114eb8:    ff e1 df b9 	call -2246 <mp2_put_bits : 1145f6 >			  ## encodemp2.c:536:6
  114ebc:    10 e8 a2 7f 	r2 = h[r10 + -4] 			  ## encodemp2.c:537:6
  114ec0:    20 c6       	r0 = r4 			  ## encodemp2.c:537:6
  114ec2:    29 c6       	r1 = r5 			  ## encodemp2.c:537:6
  114ec4:    ff e1 7f b9 	call -2258 <mp2_put_bits : 1145f6 >			  ## encodemp2.c:537:6
  114ec8:    10 e8 a2 00 	r2 = h[r10 + 0] 			  ## encodemp2.c:538:6
  114ecc:    20 c6       	r0 = r4 			  ## encodemp2.c:538:6
  114ece:    29 c6       	r1 = r5 			  ## encodemp2.c:538:6
  114ed0:    0c 08       	goto 24 <mp2encode+0x88E : 114eea >			  ## encodemp2.c:538:6
  114ed2:    02 e5 a1 ff 	r1, r2 = d[r10 + -4] 			  ## encodemp2.c:532:130
  114ed6:    80 fc 11 09 	r1 = r1 * r9 			  ## encodemp2.c:532:128
  114eda:    89 d4       	r1 = r1 + r2 			  ## encodemp2.c:532:120
  114edc:    80 fc 11 09 	r1 = r1 * r9 			  ## encodemp2.c:532:78
  114ee0:    40 d4       	r0 = r0 + r1 			  ## encodemp2.c:532:70
  114ee2:    42 c9       	r2 = r0.l 			  ## encodemp2.c:532:6
  114ee4:    80 ec c1 00 	r1 = r12.b (s) 			  ## encodemp2.c:532:6
  114ee8:    20 c6       	r0 = r4 			  ## encodemp2.c:532:6
  114eea:    ff e1 4f b8 	call -2296 <mp2_put_bits : 1145f6 >
  114eee:    00 ed aa 0c 	r10 = r10 + 12 			  ## encodemp2.c:526:18
  114ef2:    00 ed ee 03 	r14 = r14 + 3 			  ## encodemp2.c:526:26
  114ef6:    80 ef e0 0c 	cmp r14, 12			  ## encodemp2.c:526:4
  114efa:    d4 1b       	ifs (nzcv < 0) goto -88 <mp2encode+0x848 : 114ea4 >			  ## encodemp2.c:526:4
  114efc:    00 44       	r0 = [sp+ 64] 			  ## encodemp2.c:487:2
  114efe:    80 89       	r0 += 48 			  ## encodemp2.c:487:2
  114f00:    00 64       	[sp+ 64] = r0 			  ## encodemp2.c:487:2
  114f02:    00 ed 88 30 	r8 = r8 + 48 			  ## encodemp2.c:487:2
  114f06:    7f d0       	r7 = r7 + 1 			  ## encodemp2.c:487:35
  114f08:    20 5a       	r0 = b[r4 + 1] 			  ## encodemp2.c:487:16
  114f0a:    38 ce       	cmp r7, r0			  ## encodemp2.c:487:2
  114f0c:    ff fb db f7 	ifs (nzcv < 0) goto -262 <mp2encode+0x7AE : 114e0a >			  ## encodemp2.c:487:2
  114f10:    85 43       	r5 = [sp+ 56] 
  114f12:    ea 4f       	r2 = [r5 + -4] 
  114f14:    28 50       	r0 = h[r5 + 0] 
  114f16:    03 80       	r3 = 0 
  114f18:    41 d0       	r1 = r0 + 1 			  ## encodemp2.c:475:46
  114f1a:    29 70       	h[r5 + 0] = r1 			  ## encodemp2.c:475:46
  114f1c:    06 ed 41 53 	r1 = r4 + 1619 			  ## encodemp2.c:475:11
  114f20:    40 e7 12 00 	b[r1 + r0] = r2 			  ## encodemp2.c:475:50
  114f24:    71 68       	[r6 + 4] = r1 			  ## encodemp2.c:558:23
  114f26:    33 74       	h[r6 + 2] = r3 			  ## encodemp2.c:559:25
  114f28:    62 54       	r2 = h[r4 + 6] 			  ## encodemp2.c:560:38
  114f2a:    32 70       	h[r6 + 0] = r2 			  ## encodemp2.c:560:27
  114f2c:    f0 4e       	r0 = [r6 + -20] 			  ## encodemp2.c:561:58
  114f2e:    73 4f       	r3 = [r6 + -12] 			  ## encodemp2.c:561:28
  114f30:    ab 01       	call r3			  ## encodemp2.c:561:10
  114f32:    31 50       	r1 = h[r6 + 0] 			  ## encodemp2.c:562:27
  114f34:    09 d6       	r1 = r1 - r0 			  ## encodemp2.c:562:27
  114f36:    31 70       	h[r6 + 0] = r1 			  ## encodemp2.c:562:27
  114f38:    0c ed 41 0a 	r1 = r4 + 3082 			  ## encodemp2.c:559:12
  114f3c:    09 50       	r1 = h[r1 + 0] 			  ## encodemp2.c:563:25
  114f3e:    40 d4       	r0 = r0 + r1 			  ## encodemp2.c:563:25
  114f40:    30 74       	h[r6 + 2] = r0 			  ## encodemp2.c:563:25
  114f42:    00 80       	r0 = 0 			  ## mp2_test.c:35:1
  114f44:    01 ed ff c8 	sp = sp + 456 			  ## mp2_test.c:35:1
  114f48:    30 c4       	{macch, maccl} = [sp++] 			  ## mp2_test.c:35:1
  114f4a:    1e c0       	{pc, r14-r4} = [sp++] 			  ## mp2_test.c:35:1


.GCPI426_0:
  114f4c:    8c 9c 11 00     < 1154188 : 0x119C8C >

.GCPI426_1:
  114f50:    8c a4 11 00     < 1156236 : 0x11A48C >

.GCPI426_2:
  114f54:    90 d9 11 00     < 1169808 : 0x11D990 >

.GCPI426_3:
  114f58:    d0 d7 11 00     < 1169360 : 0x11D7D0 >

.GCPI426_4:
  114f5c:    04 a5 11 00     < 1156356 : 0x11A504 >

.GCPI426_5:
  114f60:    8e d6 11 00     < 1169038 : 0x11D68E >

.GCPI426_6:
  114f64:    f8 a5 11 00     < 1156600 : 0x11A5F8 >

.GCPI426_7:
  114f68:    d6 a5 11 00     < 1156566 : 0x11A5D6 >

.GCPI426_8:
  114f6c:    f8 a6 11 00     < 1156856 : 0x11A6F8 >

.GCPI426_9:
  114f70:    f3 04 b5 00     < 11863283 : 0xB504F3 >

.GCPI426_10:
  114f74:    d4 8b 8a 00     < 9079764 : 0x8A8BD4 >

.GCPI426_11:
  114f78:    e9 7a 4e 01     < 21920489 : 0x14E7AE9 >

.GCPI426_12:
  114f7c:    f7 81 82 00     < 8552951 : 0x8281F7 >

.GCPI426_13:
  114f80:    d8 64 e6 00     < 15099096 : 0xE664D8 >

.GCPI426_14:
  114f84:    bd f1 99 00     < 10088893 : 0x99F1BD >

.GCPI426_15:
  114f88:    3a 1b 90 02     < 42998586 : 0x2901B3A >

__lesf2:
  114f8c:    14 c2       	[--sp] = {rets, r4} 
  114f8e:    02 c6       	r2 = r0 
  114f90:    c4 f3 23 00 	r3 = r2 & (~2147483648) 
  114f94:    08 80       	r0 = 1 
  114f96:    04 ef 30 ff 	cmp r3, 2139095040
  114f9a:    17 18       	if (nzcv > 0) goto 46 <__lesf2+0x3E : 114fca >
  114f9c:    c4 f3 14 00 	r4 = r1 & (~2147483648) 
  114fa0:    04 ef 40 ff 	cmp r4, 2139095040
  114fa4:    12 18       	if (nzcv > 0) goto 36 <__lesf2+0x3E : 114fca >
  114fa6:    23 da       	r3 |= r4 
  114fa8:    00 80       	r0 = 0 
  114faa:    0f 10       	ifs (nzcv == 0) goto 30 <__lesf2+0x3E : 114fca >
  114fac:    80 f0 10 02 	r0 = r1 & r2 
  114fb0:    00 98       	cmp r0, 0
  114fb2:    04 1b       	ifs (nzcv < 0) goto 8 <__lesf2+0x30 : 114fbc >
  114fb4:    f8 87       	r0 = -1 
  114fb6:    11 ce       	cmp r2, r1
  114fb8:    04 1a       	ifs (nzcv >= 0) goto 8 <__lesf2+0x36 : 114fc2 >
  114fba:    07 08       	goto 14 <__lesf2+0x3E : 114fca >
  114fbc:    f8 87       	r0 = -1 
  114fbe:    11 ce       	cmp r2, r1
  114fc0:    04 1c       	ifs (nzcv > 0) goto 8 <__lesf2+0x3E : 114fca >
  114fc2:    11 ce       	cmp r2, r1
  114fc4:    08 80       	r0 = 1 
  114fc6:    00 03       	ifs (nzcv == 0) {
  114fc8:    00 80       		r0 = 0 
                               	}
  114fca:    14 c0       	{pc, r4} = [sp++] 


__gesf2:
  114fcc:    14 c2       	[--sp] = {rets, r4} 
  114fce:    02 c6       	r2 = r0 
  114fd0:    c4 f3 23 00 	r3 = r2 & (~2147483648) 
  114fd4:    f8 87       	r0 = -1 
  114fd6:    04 ef 30 ff 	cmp r3, 2139095040
  114fda:    17 18       	if (nzcv > 0) goto 46 <__gesf2+0x3E : 11500a >
  114fdc:    c4 f3 14 00 	r4 = r1 & (~2147483648) 
  114fe0:    04 ef 40 ff 	cmp r4, 2139095040
  114fe4:    12 18       	if (nzcv > 0) goto 36 <__gesf2+0x3E : 11500a >
  114fe6:    23 da       	r3 |= r4 
  114fe8:    00 80       	r0 = 0 
  114fea:    0f 10       	ifs (nzcv == 0) goto 30 <__gesf2+0x3E : 11500a >
  114fec:    80 f0 10 02 	r0 = r1 & r2 
  114ff0:    00 98       	cmp r0, 0
  114ff2:    04 1b       	ifs (nzcv < 0) goto 8 <__gesf2+0x30 : 114ffc >
  114ff4:    11 ce       	cmp r2, r1
  114ff6:    f8 87       	r0 = -1 
  114ff8:    04 1a       	ifs (nzcv >= 0) goto 8 <__gesf2+0x36 : 115002 >
  114ffa:    07 08       	goto 14 <__gesf2+0x3E : 11500a >
  114ffc:    11 ce       	cmp r2, r1
  114ffe:    f8 87       	r0 = -1 
  115000:    04 1c       	ifs (nzcv > 0) goto 8 <__gesf2+0x3E : 11500a >
  115002:    11 ce       	cmp r2, r1
  115004:    08 80       	r0 = 1 
  115006:    00 03       	ifs (nzcv == 0) {
  115008:    00 80       		r0 = 0 
                               	}
  11500a:    14 c0       	{pc, r4} = [sp++] 


__unordsf2:
  11500c:    c4 f3 03 00 	r3 = r0 & (~2147483648) 
  115010:    c4 f3 12 00 	r2 = r1 & (~2147483648) 
  115014:    08 80       	r0 = 1 
  115016:    04 ef 30 ff 	cmp r3, 2139095040
  11501a:    09 80       	r1 = 1 
  11501c:    90 03       	if (nzcv <= 0) {
  11501e:    01 80       		r1 = 0 
                               	}
  115020:    04 ef 20 ff 	cmp r2, 2139095040
  115024:    90 03       	if (nzcv <= 0) {
  115026:    00 80       		r0 = 0 
                               	}
  115028:    08 da       	r0 |= r1 
  11502a:    20 00       	rts


__eqsf2:
  11502c:    af 0f       	goto -162 <__lesf2 : 114f8c >


__ltsf2:
  11502e:    ae 0f       	goto -164 <__lesf2 : 114f8c >


__nesf2:
  115030:    ad 0f       	goto -166 <__lesf2 : 114f8c >


__gtsf2:
  115032:    cc 0f       	goto -104 <__gesf2 : 114fcc >


__fixsfsi:
  115034:    14 c2       	[--sp] = {rets, r4} 
  115036:    01 c6       	r1 = r0 
  115038:    02 f6 12 e8 	r2 = uextra(r1, p:23, l:8) 
  11503c:    00 80       	r0 = 0 
  11503e:    fa 9b       	cmp r2, 127
  115040:    19 13       	if (nzcv < 0) goto 50 <__fixsfsi+0x40 : 115074 >
  115042:    c8 bf       	r0 = r1 >>> 31 
  115044:    00 d8       	r0 |= 1
  115046:    1f ed 23 81 	r3 = r2 + -127 
  11504a:    03 99       	cmp r3, 32
  11504c:    07 13       	if (nzcv < 0) goto 14 <__fixsfsi+0x28 : 11505c >
  11504e:    08 98       	cmp r0, 1
  115050:    80 2a       	r0 = [addr(40)]  <.GCPI0_0 : 115078 >
  115052:    11 03       	ifs (nzcv != 0) {
  115054:    24 ea 00 00 		r0 = 2147483648 
  115058:    14 c0       		{pc, r4} = [sp++] 
                               	}
  11505a:    0c 08       	goto 24 <__fixsfsi+0x40 : 115074 >
  11505c:    04 2a       	r4 = [addr(32)]  <.GCPI0_1 : 11507c >
  11505e:    a1 da       	r1 &= r4 
  115060:    b9 d8       	r1 |= 8388608
  115062:    b3 98       	cmp r3, 22
  115064:    c9 03       	ifs (nzcv > 0) {
  115066:    1f ed 22 6a 		r2 = r2 + -150 
  11506a:    11 cf       		r1 <<= r2 
                               	} else {
  11506c:    20 ee 22 96 		r2 = 150 - r2 
  115070:    51 cf       		r1 >>= r2 
                               	}
  115072:    08 06       	r0 *= r1 
  115074:    14 c0       	{pc, r4} = [sp++] 
  115076:    00 00       	nop


.GCPI0_0:
  115078:    ff ff ff 7f     < 2147483647 : 0x7FFFFFFF >

.GCPI0_1:
  11507c:    ff ff 7f 00     < 8388607 : 0x7FFFFF >

__fixunssfsi:
  115080:    01 c6       	r1 = r0 
  115082:    02 f6 12 e8 	r2 = uextra(r1, p:23, l:8) 
  115086:    00 80       	r0 = 0 
  115088:    01 98       	cmp r1, 0
  11508a:    13 1b       	ifs (nzcv < 0) goto 38 <__fixunssfsi+0x32 : 1150b2 >
  11508c:    fa 9b       	cmp r2, 127
  11508e:    11 13       	if (nzcv < 0) goto 34 <__fixunssfsi+0x32 : 1150b2 >
  115090:    1f ed 23 81 	r3 = r2 + -127 
  115094:    f8 87       	r0 = -1 
  115096:    03 99       	cmp r3, 32
  115098:    0c 18       	if (nzcv > 0) goto 24 <__fixunssfsi+0x32 : 1150b2 >
  11509a:    80 29       	r0 = [addr(24)]  <.GCPI0_0 : 1150b4 >
  11509c:    88 da       	r0 &= r1 
  11509e:    b8 d8       	r0 |= 8388608
  1150a0:    b3 98       	cmp r3, 22
  1150a2:    d2 03       	ifs (nzcv <= 0) {
  1150a4:    20 ee 21 96 		r1 = 150 - r2 
  1150a8:    48 cf       		r0 >>= r1 
  1150aa:    20 00       		rts
                               	}
  1150ac:    1f ed 21 6a 	r1 = r2 + -150 
  1150b0:    08 cf       	r0 <<= r1 
  1150b2:    20 00       	rts


.GCPI0_0:
  1150b4:    ff ff 7f 00     < 8388607 : 0x7FFFFF >

__floatsisf:
  1150b8:    15 c2       	[--sp] = {rets, r5, r4} 
  1150ba:    01 80       	r1 = 0 
  1150bc:    c0 22       	if (r0 == 0) goto 88 <__floatsisf+0x5E : 115116 >
  1150be:    c1 bf       	r1 = r0 >>> 31 
  1150c0:    42 d4       	r2 = r0 + r1 
  1150c2:    4a da       	r2 ^= r1 
  1150c4:    84 f3 00 00 	r0 = r0 & 2147483648 
  1150c8:    00 f5 21 00 	r1 = clz(r2) 
  1150cc:    40 f3 11 1f 	r1 = r1 ^ 31 
  1150d0:    b9 98       	cmp r1, 23
  1150d2:    05 18       	if (nzcv > 0) goto 10 <__floatsisf+0x26 : 1150de >
  1150d4:    20 ee 13 17 	r3 = 23 - r1 
  1150d8:    1a cf       	r2 <<= r3 
  1150da:    ba d9       	r2 ^= 8388608
  1150dc:    17 08       	goto 46 <__floatsisf+0x54 : 11510c >
  1150de:    1f ed 13 e9 	r3 = r1 + -23 
  1150e2:    40 f7 23 03 	r3 = r2 >> r3 
  1150e6:    48 f3 34 00 	r4 = r3 ^ 8388608 
  1150ea:    20 ee 15 37 	r5 = 55 - r1 
  1150ee:    2a cf       	r2 <<= r5 
  1150f0:    04 ef 20 00 	cmp r2, 2147483648
  1150f4:    0d 80       	r5 = 1 
  1150f6:    90 03       	if (nzcv <= 0) {
  1150f8:    05 80       		r5 = 0 
                               	}
  1150fa:    2c cb       	r4 += r5 
  1150fc:    2b cb       	r3 += r5 
  1150fe:    80 f3 33 01 	r3 = r3 & 1 
  115102:    04 ef 20 00 	cmp r2, 2147483648
  115106:    10 03       	ifs (nzcv != 0) {
  115108:    03 80       		r3 = 0 
                               	}
  11510a:    e2 d4       	r2 = r4 + r3 
  11510c:    09 b7       	r1 = r1 << 23 
  11510e:    11 cb       	r1 += r2 
  115110:    15 ee 11 7e 	r1 = r1 + 1065353216 
  115114:    01 da       	r1 |= r0 
  115116:    08 c6       	r0 = r1 
  115118:    15 c0       	{pc, r5, r4} = [sp++] 
  11511a:    00 00       	nop


__floatunsidf:
  11511c:    14 c2       	[--sp] = {rets, r4} 
  11511e:    03 c6       	r3 = r0 
  115120:    00 80       	r0 = 0 
  115122:    01 80       	r1 = 0 
  115124:    f3 20       	if (r3 == 0) goto 30 <__floatunsidf+0x28 : 115144 >
  115126:    00 f5 30 00 	r0 = clz(r3) 
  11512a:    40 f3 04 1f 	r4 = r0 ^ 31 
  11512e:    20 ee 42 34 	r2 = 52 - r4 
  115132:    01 80       	r1 = 0 
  115134:    18 c6       	r0 = r3 
  115136:    00 e1 90 2c 	call 1426 <__ashldi3 : 1156cc >
  11513a:    a1 d9       	r1 ^= 1048576
  11513c:    22 b4       	r2 = r4 << 20 
  11513e:    11 cb       	r1 += r2 
  115140:    82 28       	r2 = [addr(8)]  <.GCPI0_0 : 115148 >
  115142:    11 cb       	r1 += r2 
  115144:    14 c0       	{pc, r4} = [sp++] 
  115146:    00 00       	nop


.GCPI0_0:
  115148:    00 00 f0 3f     < 1072693248 : 0x3FF00000 >

__floatunsisf:
  11514c:    14 c2       	[--sp] = {rets, r4} 
  11514e:    01 80       	r1 = 0 
  115150:    60 22       	if (r0 == 0) goto 76 <__floatunsisf+0x52 : 11519e >
  115152:    00 f5 01 00 	r1 = clz(r0) 
  115156:    40 f3 11 1f 	r1 = r1 ^ 31 
  11515a:    b9 98       	cmp r1, 23
  11515c:    05 18       	if (nzcv > 0) goto 10 <__floatunsisf+0x1C : 115168 >
  11515e:    20 ee 12 17 	r2 = 23 - r1 
  115162:    10 cf       	r0 <<= r2 
  115164:    b8 d9       	r0 ^= 8388608
  115166:    17 08       	goto 46 <__floatunsisf+0x4A : 115196 >
  115168:    1f ed 12 e9 	r2 = r1 + -23 
  11516c:    40 f7 02 02 	r2 = r0 >> r2 
  115170:    48 f3 23 00 	r3 = r2 ^ 8388608 
  115174:    20 ee 14 37 	r4 = 55 - r1 
  115178:    20 cf       	r0 <<= r4 
  11517a:    04 ef 00 00 	cmp r0, 2147483648
  11517e:    0c 80       	r4 = 1 
  115180:    90 03       	if (nzcv <= 0) {
  115182:    04 80       		r4 = 0 
                               	}
  115184:    23 cb       	r3 += r4 
  115186:    22 cb       	r2 += r4 
  115188:    80 f3 22 01 	r2 = r2 & 1 
  11518c:    04 ef 00 00 	cmp r0, 2147483648
  115190:    10 03       	ifs (nzcv != 0) {
  115192:    02 80       		r2 = 0 
                               	}
  115194:    98 d4       	r0 = r3 + r2 
  115196:    09 b7       	r1 = r1 << 23 
  115198:    08 cb       	r0 += r1 
  11519a:    15 ee 01 7e 	r1 = r0 + 1065353216 
  11519e:    08 c6       	r0 = r1 
  1151a0:    14 c0       	{pc, r4} = [sp++] 
  1151a2:    00 00       	nop


__iumoddi3:
  1151a4:    15 c2       	[--sp] = {rets, r5, r4} 
  1151a6:    30 c5       	[--sp] = {macch, maccl} 
  1151a8:    04 c7       	maccl = r0 
  1151aa:    0d c7       	macch = r1 
  1151ac:    02 05       	macc /= r2 
  1151ae:    23 c8       	r3 = maccl 
  1151b0:    2c c8       	r4 = macch 
  1151b2:    62 06       	macc = r4 * r2 
  1151b4:    e0 dc       	macc <<= 32 
  1151b6:    1a 07       	macc += r3 * r2 
  1151b8:    23 c8       	r3 = maccl 
  1151ba:    2c c8       	r4 = macch 
  1151bc:    c0 d6       	r0 = r0 - r3 
  1151be:    30 c4       	{macch, maccl} = [sp++] 
  1151c0:    15 c0       	{pc, r5, r4} = [sp++] 
  1151c2:    00 00       	nop


__muldf3:
  1151c4:    1e c2       	[--sp] = {rets, r14-r4} 
  1151c6:    e0 cd       	sp += -32 
  1151c8:    14 c6       	r4 = r2 
  1151ca:    05 c6       	r5 = r0 
  1151cc:    02 f6 1c 8b 	r12 = uextra(r1, p:20, l:11) 
  1151d0:    02 f6 3b 8b 	r11 = uextra(r3, p:20, l:11) 
  1151d4:    40 f0 30 01 	r0 = r3 ^ r1 
  1151d8:    84 f3 06 00 	r6 = r0 & 2147483648 
  1151dc:    52 ea 00 00 	r10 = 0 
  1151e0:    20 e4 00 9e 	r0 = [addr(632)]  <.GCPI0_0 : 11545c >
  1151e4:    80 f0 12 00 	r2 = r1 & r0 
  1151e8:    85 61       	[sp+ 24] = r5 
  1151ea:    c2 61       	[sp+ 28] = r2 
  1151ec:    80 f0 39 00 	r9 = r3 & r0 
  1151f0:    60 e9 09 05 	[sp+ 20] = r9 
  1151f4:    04 61       	[sp+ 16] = r4 
  1151f6:    1f ed c0 ff 	r0 = r12 + -1 
  1151fa:    87 ef 00 fd 	cmp r0, 2045
  1151fe:    61 18       	if (nzcv > 0) goto 194 <__muldf3+0xFE : 1152c2 >
  115200:    1f ed b0 ff 	r0 = r11 + -1 
  115204:    87 ef 00 fe 	cmp r0, 2046
  115208:    5c 12       	if (nzcv >= 0) goto 184 <__muldf3+0xFE : 1152c2 >
  11520a:    60 e9 0c 02 	[sp+ 8] = r12 
  11520e:    60 e9 0b 03 	[sp+ 12] = r11 
  115212:    46 60       	[sp+ 4] = r6 
  115214:    c0 41       	r0 = [sp+ 28] 
  115216:    87 41       	r7 = [sp+ 24] 
  115218:    09 f3 05 80 	r5 = r0 | 1048576 
  11521c:    87 61       	[sp+ 24] = r7 
  11521e:    c5 61       	[sp+ 28] = r5 
  115220:    09 f3 96 80 	r6 = r9 | 1048576 
  115224:    46 61       	[sp+ 20] = r6 
  115226:    04 61       	[sp+ 16] = r4 
  115228:    20 f7 4e 0b 	r14 = r4 << 11 
  11522c:    01 80       	r1 = 0 
  11522e:    03 80       	r3 = 0 
  115230:    50 ea 00 00 	r8 = 0 
  115234:    38 c6       	r0 = r7 
  115236:    b2 c6       	r2 = r14 
  115238:    00 e1 c0 12 	call 600 <__muldi3 : 115494 >
  11523c:    41 c6       	r9 = r0 
  11523e:    4b c6       	r11 = r1 
  115240:    60 b5       	r0 = r4 >> 21 
  115242:    31 ab       	r1 = r6 << 11 
  115244:    00 f0 06 01 	r6 = r0 | r1 
  115248:    01 80       	r1 = 0 
  11524a:    03 80       	r3 = 0 
  11524c:    30 c6       	r0 = r6 
  11524e:    3a c6       	r2 = r7 
  115250:    00 e1 00 12 	call 576 <__muldi3 : 115494 >
  115254:    45 c6       	r13 = r0 
  115256:    4c c6       	r12 = r1 
  115258:    01 80       	r1 = 0 
  11525a:    03 80       	r3 = 0 
  11525c:    28 c6       	r0 = r5 
  11525e:    b2 c6       	r2 = r14 
  115260:    00 e1 80 11 	call 560 <__muldi3 : 115494 >
  115264:    04 c6       	r4 = r0 
  115266:    0f c6       	r7 = r1 
  115268:    01 80       	r1 = 0 
  11526a:    03 80       	r3 = 0 
  11526c:    28 c6       	r0 = r5 
  11526e:    32 c6       	r2 = r6 
  115270:    00 e1 00 11 	call 544 <__muldi3 : 115494 >
  115274:    92 ea 00 f8 	r2 = -2048 
  115278:    80 f0 99 02 	r9 = r9 & r2 
  11527c:    a2 da       	r2 &= r4 
  11527e:    00 ee d3 0b 	r3 = r13 + r11 
  115282:    80 ee 85 08 	r5 = r8 + r8 + c 
  115286:    9c d4       	r4 = r3 + r2 
  115288:    80 ee 52 08 	r2 = r5 + r8 + c 
  11528c:    a0 cb       	r0 += r12 
  11528e:    80 ee 11 08 	r1 = r1 + r8 + c 
  115292:    38 cb       	r0 += r7 
  115294:    80 ee 11 08 	r1 = r1 + r8 + c 
  115298:    85 d4       	r5 = r0 + r2 
  11529a:    80 ee 16 08 	r6 = r1 + r8 + c 
  11529e:    c0 40       	r0 = [sp+ 12] 
  1152a0:    81 40       	r1 = [sp+ 8] 
  1152a2:    08 cb       	r0 += r1 
  1152a4:    90 cb       	r0 += r10 
  1152a6:    1c ed 00 01 	r0 = r0 + -1023 
  1152aa:    09 f4 60 80 	tst r6, 1048576
  1152ae:    01 10       	ifs (nzcv == 0) goto 2 <__muldf3+0xEE : 1152b2 >
  1152b0:    1f 08       	goto 62 <__muldf3+0x12C : 1152f0 >
  1152b2:    69 d5       	r1 = r5 + r5 
  1152b4:    36 dc       	r6 += r6 + c 
  1152b6:    62 bf       	r2 = r4 >> 31 
  1152b8:    00 f0 15 02 	r5 = r1 | r2 
  1152bc:    c9 cb       	r9 += r9 
  1152be:    24 dc       	r4 += r4 + c 
  1152c0:    18 08       	goto 48 <__muldf3+0x12E : 1152f2 >
  1152c2:    04 60       	[sp] = r4 
  1152c4:    c4 f3 10 00 	r0 = r1 & (~2147483648) 
  1152c8:    c4 f3 38 00 	r8 = r3 & (~2147483648) 
  1152cc:    5f 29       	r7 = [addr(404)]  <.GCPI0_1 : 115460 >
  1152ce:    0a 80       	r2 = 1 
  1152d0:    07 ce       	cmp r0, r7
  1152d2:    0c 80       	r4 = 1 
  1152d4:    20 03       	if (nzcv >= 0) {
  1152d6:    04 80       		r4 = 0 
                               	}
  1152d8:    15 20       	if (r5 == 0) goto 2 <__muldf3+0x118 : 1152dc >
  1152da:    02 80       	r2 = 0 
  1152dc:    07 ce       	cmp r0, r7
  1152de:    10 03       	ifs (nzcv != 0) {
  1152e0:    22 c6       		r2 = r4 
                               	}
  1152e2:    00 f4 20 01 	tst r2, 1
  1152e6:    14 11       	ifs (nzcv != 0) goto 40 <__muldf3+0x14C : 115310 >
  1152e8:    00 08       	goto 0 <__muldf3+0x126 : 1152ea >
  1152ea:    0a f3 16 00 	r6 = r1 | 524288 
  1152ee:    8c 08       	goto 280 <__muldf3+0x244 : 115408 >
  1152f0:    08 88       	r0 += 1 
  1152f2:    87 ef 00 ff 	cmp r0, 2047
  1152f6:    05 1b       	ifs (nzcv < 0) goto 10 <__muldf3+0x13E : 115302 >
  1152f8:    90 2e       	r0 = [addr(360)]  <.GCPI0_1 : 115460 >
  1152fa:    46 40       	r6 = [sp+ 4] 
  1152fc:    06 da       	r6 |= r0 
  1152fe:    05 80       	r5 = 0 
  115300:    83 08       	goto 262 <__muldf3+0x244 : 115408 >
  115302:    00 98       	cmp r0, 0
  115304:    29 1d       	ifs (nzcv <= 0) goto 82 <__muldf3+0x194 : 115358 >
  115306:    51 2d       	r1 = [addr(340)]  <.GCPI0_0 : 11545c >
  115308:    b1 da       	r1 &= r6 
  11530a:    00 b4       	r0 = r0 << 20 
  11530c:    01 da       	r1 |= r0 
  11530e:    5d 08       	goto 186 <__muldf3+0x206 : 1153ca >
  115310:    17 2d       	r7 = [addr(336)]  <.GCPI0_1 : 115460 >
  115312:    0a 80       	r2 = 1 
  115314:    87 ce       	cmp r8, r7
  115316:    52 ea 01 00 	r10 = 1 
  11531a:    20 03       	if (nzcv >= 0) {
  11531c:    52 ea 00 00 		r10 = 0 
                               	}
  115320:    04 40       	r4 = [sp] 
  115322:    14 20       	if (r4 == 0) goto 2 <__muldf3+0x162 : 115326 >
  115324:    02 80       	r2 = 0 
  115326:    87 ce       	cmp r8, r7
  115328:    10 03       	ifs (nzcv != 0) {
  11532a:    92 c6       		r2 = r10 
                               	}
  11532c:    00 f4 20 01 	tst r2, 1
  115330:    05 11       	ifs (nzcv != 0) goto 10 <__muldf3+0x178 : 11533c >
  115332:    00 08       	goto 0 <__muldf3+0x170 : 115334 >
  115334:    0a f3 36 00 	r6 = r3 | 524288 
  115338:    05 40       	r5 = [sp] 
  11533a:    66 08       	goto 204 <__muldf3+0x244 : 115408 >
  11533c:    52 2a       	r2 = [addr(292)]  <.GCPI0_1 : 115460 >
  11533e:    40 f0 04 02 	r4 = r0 ^ r2 
  115342:    2c da       	r4 |= r5 
  115344:    10 11       	ifs (nzcv != 0) goto 32 <__muldf3+0x1A2 : 115366 >
  115346:    00 40       	r0 = [sp] 
  115348:    00 f0 00 08 	r0 = r0 | r8 
  11534c:    61 10       	ifs (nzcv == 0) goto 194 <__muldf3+0x24C : 115410 >
  11534e:    84 f3 30 00 	r0 = r3 & 2147483648 
  115352:    40 f0 06 01 	r6 = r0 ^ r1 
  115356:    58 08       	goto 176 <__muldf3+0x244 : 115408 >
  115358:    20 ee 07 01 	r7 = 1 - r0 
  11535c:    ff 99       	cmp r7, 63
  11535e:    10 19       	if (nzcv <= 0) goto 32 <__muldf3+0x1BC : 115380 >
  115360:    05 80       	r5 = 0 
  115362:    46 40       	r6 = [sp+ 4] 
  115364:    51 08       	goto 162 <__muldf3+0x244 : 115408 >
  115366:    40 f0 22 08 	r2 = r2 ^ r8 
  11536a:    04 40       	r4 = [sp] 
  11536c:    22 da       	r2 |= r4 
  11536e:    52 11       	ifs (nzcv != 0) goto 164 <__muldf3+0x250 : 115414 >
  115370:    28 da       	r0 |= r5 
  115372:    4e 10       	ifs (nzcv == 0) goto 156 <__muldf3+0x24C : 115410 >
  115374:    84 f3 10 00 	r0 = r1 & 2147483648 
  115378:    40 f0 06 03 	r6 = r0 ^ r3 
  11537c:    25 c6       	r5 = r4 
  11537e:    44 08       	goto 136 <__muldf3+0x244 : 115408 >
  115380:    20 ee 7a 40 	r10 = 64 - r7 
  115384:    88 c6       	r0 = r9 
  115386:    21 c6       	r1 = r4 
  115388:    92 c6       	r2 = r10 
  11538a:    00 e1 f0 19 	call 830 <__ashldi3 : 1156cc >
  11538e:    08 da       	r0 |= r1 
  115390:    50 ea 01 00 	r8 = 1 
  115394:    02 11       	ifs (nzcv != 0) goto 4 <__muldf3+0x1D6 : 11539a >
  115396:    50 ea 00 00 	r8 = 0 
  11539a:    28 c6       	r0 = r5 
  11539c:    31 c6       	r1 = r6 
  11539e:    92 c6       	r2 = r10 
  1153a0:    00 e1 40 19 	call 808 <__ashldi3 : 1156cc >
  1153a4:    42 c6       	r10 = r0 
  1153a6:    4b c6       	r11 = r1 
  1153a8:    88 c6       	r0 = r9 
  1153aa:    21 c6       	r1 = r4 
  1153ac:    3a c6       	r2 = r7 
  1153ae:    00 e1 50 19 	call 810 <__lshrdi3 : 1156dc >
  1153b2:    00 f0 b4 01 	r4 = r11 | r1 
  1153b6:    00 f0 00 0a 	r0 = r0 | r10 
  1153ba:    00 f0 09 08 	r9 = r0 | r8 
  1153be:    28 c6       	r0 = r5 
  1153c0:    31 c6       	r1 = r6 
  1153c2:    3a c6       	r2 = r7 
  1153c4:    00 e1 a0 18 	call 788 <__lshrdi3 : 1156dc >
  1153c8:    05 c6       	r5 = r0 
  1153ca:    46 40       	r6 = [sp+ 4] 
  1153cc:    0e da       	r6 |= r1 
  1153ce:    08 80       	r0 = 1 
  1153d0:    80 ef 90 00 	cmp r9, 0
  1153d4:    09 80       	r1 = 1 
  1153d6:    10 03       	ifs (nzcv != 0) {
  1153d8:    01 80       		r1 = 0 
                               	}
  1153da:    fc 9f       	cmp r4, -1
  1153dc:    d0 03       	ifs (nzcv <= 0) {
  1153de:    00 80       		r0 = 0 
                               	}
  1153e0:    04 ef 40 00 	cmp r4, 2147483648
  1153e4:    10 03       	ifs (nzcv != 0) {
  1153e6:    01 c6       		r1 = r0 
                               	}
  1153e8:    00 f4 10 01 	tst r1, 1
  1153ec:    03 11       	ifs (nzcv != 0) goto 6 <__muldf3+0x230 : 1153f4 >
  1153ee:    00 08       	goto 0 <__muldf3+0x22C : 1153f0 >
  1153f0:    08 80       	r0 = 1 
  1153f2:    07 08       	goto 14 <__muldf3+0x23E : 115402 >
  1153f4:    44 f3 40 00 	r0 = r4 ^ 2147483648 
  1153f8:    00 f0 00 09 	r0 = r0 | r9 
  1153fc:    05 11       	ifs (nzcv != 0) goto 10 <__muldf3+0x244 : 115408 >
  1153fe:    80 f3 50 01 	r0 = r5 & 1 
  115402:    01 80       	r1 = 0 
  115404:    05 cb       	r5 += r0 
  115406:    0e dc       	r6 += r1 + c 
  115408:    28 c6       	r0 = r5 
  11540a:    31 c6       	r1 = r6 
  11540c:    20 cd       	sp += 32 
  11540e:    1e c0       	{pc, r14-r4} = [sp++] 
  115410:    46 2d       	r6 = [addr(84)]  <.GCPI0_2 : 115464 >
  115412:    75 0f       	goto -278 <__muldf3+0x13A : 1152fe >
  115414:    00 f0 51 00 	r1 = r5 | r0 
  115418:    ff fb 10 f7 	ifs (nzcv == 0) goto -286 <__muldf3+0x13A : 1152fe >
  11541c:    00 f0 41 08 	r1 = r4 | r8 
  115420:    ff fb d0 f6 	ifs (nzcv == 0) goto -294 <__muldf3+0x13A : 1152fe >
  115424:    46 60       	[sp+ 4] = r6 
  115426:    52 ea 00 00 	r10 = 0 
  11542a:    40 b4       	r0 = r0 >> 20 
  11542c:    03 11       	ifs (nzcv != 0) goto 6 <__muldf3+0x270 : 115434 >
  11542e:    c0 90       	r0 = sp + 24 
  115430:    1b 04       	call 54 <normalize : 115468 >
  115432:    42 c6       	r10 = r0 
  115434:    60 f7 80 14 	r0 = r8 >> 20 
  115438:    0b 11       	ifs (nzcv != 0) goto 22 <__muldf3+0x28C : 115450 >
  11543a:    60 e9 0c 02 	[sp+ 8] = r12 
  11543e:    60 e9 0b 03 	[sp+ 12] = r11 
  115442:    80 90       	r0 = sp + 16 
  115444:    11 04       	call 34 <normalize : 115468 >
  115446:    20 e9 09 05 	r9 = [sp+ 20] 
  11544a:    04 41       	r4 = [sp+ 16] 
  11544c:    42 cb       	r10 += r0 
  11544e:    e2 0e       	goto -572 <__muldf3+0x50 : 115214 >
  115450:    60 e9 0c 02 	[sp+ 8] = r12 
  115454:    60 e9 0b 03 	[sp+ 12] = r11 
  115458:    dd 0e       	goto -582 <__muldf3+0x50 : 115214 >
  11545a:    00 00       	nop


.GCPI0_0:
  11545c:    ff ff 0f 00     < 1048575 : 0xFFFFF >

.GCPI0_1:
  115460:    00 00 f0 7f     < 2146435072 : 0x7FF00000 >

.GCPI0_2:
  115464:    00 00 f8 7f     < 2146959360 : 0x7FF80000 >

normalize:
  115468:    15 c2       	[--sp] = {rets, r5, r4} 
  11546a:    04 c6       	r4 = r0 
  11546c:    61 48       	r1 = [r4 + 4] 
  11546e:    20 48       	r0 = [r4 + 0] 
  115470:    01 98       	cmp r1, 0
  115472:    05 03       	ifs (nzcv == 0) {
  115474:    00 f5 02 00 		r2 = clz(r0) 
  115478:    00 f3 25 20 		r5 = r2 | 32 
                               	} else {
  11547c:    00 f5 15 00 		r5 = clz(r1) 
                               	}
  115480:    1f ed 52 f5 	r2 = r5 + -11 
  115484:    00 e1 20 12 	call 580 <__ashldi3 : 1156cc >
  115488:    61 68       	[r4 + 4] = r1 
  11548a:    20 ee 51 0c 	r1 = 12 - r5 
  11548e:    20 68       	[r4 + 0] = r0 
  115490:    08 c6       	r0 = r1 
  115492:    15 c0       	{pc, r5, r4} = [sp++] 


__muldi3:
  115494:    30 c5       	[--sp] = {macch, maccl} 
  115496:    c3 06       	macc = r0 * r3 (s) 
  115498:    8a 07       	macc += r1 * r2 (s) 
  11549a:    e0 dc       	macc <<= 32 
  11549c:    02 07       	macc += r0 * r2 
  11549e:    20 c8       	r0 = maccl 
  1154a0:    29 c8       	r1 = macch 
  1154a2:    30 c4       	{macch, maccl} = [sp++] 
  1154a4:    20 00       	rts
  1154a6:    00 00       	nop


__mulsf3:
  1154a8:    19 c2       	[--sp] = {rets, r9-r4} 
  1154aa:    02 f6 05 e8 	r5 = uextra(r0, p:23, l:8) 
  1154ae:    02 f6 16 e8 	r6 = uextra(r1, p:23, l:8) 
  1154b2:    40 f0 12 00 	r2 = r1 ^ r0 
  1154b6:    84 f3 24 00 	r4 = r2 & 2147483648 
  1154ba:    12 2a       	r2 = [addr(288)]  <.GCPI0_0 : 1155dc >
  1154bc:    80 f0 09 02 	r9 = r0 & r2 
  1154c0:    80 f0 13 02 	r3 = r1 & r2 
  1154c4:    ea d3       	r2 = r5 + -1 
  1154c6:    80 ef 20 fd 	cmp r2, 253
  1154ca:    05 18       	if (nzcv > 0) goto 10 <__mulsf3+0x2E : 1154d6 >
  1154cc:    f2 d3       	r2 = r6 + -1 
  1154ce:    07 80       	r7 = 0 
  1154d0:    80 ef 20 fe 	cmp r2, 254
  1154d4:    40 13       	if (nzcv < 0) goto 128 <__mulsf3+0xAE : 115556 >
  1154d6:    c4 f3 02 00 	r2 = r0 & (~2147483648) 
  1154da:    04 ef 20 ff 	cmp r2, 2139095040
  1154de:    03 19       	if (nzcv <= 0) goto 6 <__mulsf3+0x3E : 1154e6 >
  1154e0:    08 f3 04 80 	r4 = r0 | 4194304 
  1154e4:    78 08       	goto 240 <__mulsf3+0x12E : 1155d6 >
  1154e6:    c4 f3 18 00 	r8 = r1 & (~2147483648) 
  1154ea:    04 ef 80 ff 	cmp r8, 2139095040
  1154ee:    03 19       	if (nzcv <= 0) goto 6 <__mulsf3+0x4E : 1154f6 >
  1154f0:    08 f3 14 80 	r4 = r1 | 4194304 
  1154f4:    70 08       	goto 224 <__mulsf3+0x12E : 1155d6 >
  1154f6:    04 ef 20 ff 	cmp r2, 2139095040
  1154fa:    09 11       	ifs (nzcv != 0) goto 18 <__mulsf3+0x66 : 11550e >
  1154fc:    4c 2e       	r4 = [addr(228)]  <.GCPI0_1 : 1155e0 >
  1154fe:    80 ef 80 00 	cmp r8, 0
  115502:    11 03       	ifs (nzcv != 0) {
  115504:    84 f3 11 00 		r1 = r1 & 2147483648 
  115508:    40 f0 14 00 		r4 = r1 ^ r0 
                               	}
  11550c:    64 08       	goto 200 <__mulsf3+0x12E : 1155d6 >
  11550e:    04 ef 80 ff 	cmp r8, 2139095040
  115512:    08 11       	ifs (nzcv != 0) goto 16 <__mulsf3+0x7C : 115524 >
  115514:    cc 2c       	r4 = [addr(204)]  <.GCPI0_1 : 1155e0 >
  115516:    02 98       	cmp r2, 0
  115518:    5e 10       	ifs (nzcv == 0) goto 188 <__mulsf3+0x12E : 1155d6 >
  11551a:    84 f3 00 00 	r0 = r0 & 2147483648 
  11551e:    40 f0 04 01 	r4 = r0 ^ r1 
  115522:    59 08       	goto 178 <__mulsf3+0x12E : 1155d6 >
  115524:    02 98       	cmp r2, 0
  115526:    57 10       	ifs (nzcv == 0) goto 174 <__mulsf3+0x12E : 1155d6 >
  115528:    80 ef 80 00 	cmp r8, 0
  11552c:    54 10       	ifs (nzcv == 0) goto 168 <__mulsf3+0x12E : 1155d6 >
  11552e:    07 80       	r7 = 0 
  115530:    50 b7       	r0 = r2 >> 23 
  115532:    07 11       	ifs (nzcv != 0) goto 14 <__mulsf3+0x9A : 115542 >
  115534:    00 f5 90 00 	r0 = clz(r9) 
  115538:    01 d2       	r1 = r0 + -8 
  11553a:    00 f7 99 01 	r9 = r9 << r1 
  11553e:    20 ee 07 09 	r7 = 9 - r0 
  115542:    60 f7 80 17 	r0 = r8 >> 23 
  115546:    07 11       	ifs (nzcv != 0) goto 14 <__mulsf3+0xAE : 115556 >
  115548:    00 f5 30 00 	r0 = clz(r3) 
  11554c:    01 d2       	r1 = r0 + -8 
  11554e:    0b cf       	r3 <<= r1 
  115550:    20 ee 00 09 	r0 = 9 - r0 
  115554:    07 cb       	r7 += r0 
  115556:    08 f3 92 00 	r2 = r9 | 8388608 
  11555a:    18 a8       	r0 = r3 << 8 
  11555c:    04 f3 00 00 	r0 = r0 | 2147483648 
  115560:    01 80       	r1 = 0 
  115562:    03 80       	r3 = 0 
  115564:    ff e1 6f f9 	call -212 <__muldi3 : 115494 >
  115568:    aa d5       	r2 = r5 + r6 
  11556a:    3a cb       	r2 += r7 
  11556c:    0a 8c       	r2 += -127 
  11556e:    08 f4 10 00 	tst r1, 8388608
  115572:    01 10       	ifs (nzcv == 0) goto 2 <__mulsf3+0xCE : 115576 >
  115574:    05 08       	goto 10 <__mulsf3+0xD8 : 115580 >
  115576:    09 cb       	r1 += r1 
  115578:    43 bf       	r3 = r0 >> 31 
  11557a:    19 da       	r1 |= r3 
  11557c:    00 a1       	r0 = r0 << 1 
  11557e:    01 08       	goto 2 <__mulsf3+0xDA : 115582 >
  115580:    0a 88       	r2 += 1 
  115582:    80 ef 20 ff 	cmp r2, 255
  115586:    03 1b       	ifs (nzcv < 0) goto 6 <__mulsf3+0xE6 : 11558e >
  115588:    04 f3 44 ff 	r4 = r4 | 2139095040 
  11558c:    24 08       	goto 72 <__mulsf3+0x12E : 1155d6 >
  11558e:    02 98       	cmp r2, 0
  115590:    05 1d       	ifs (nzcv <= 0) goto 10 <__mulsf3+0xF4 : 11559c >
  115592:    83 2c       	r3 = [addr(72)]  <.GCPI0_0 : 1155dc >
  115594:    99 da       	r1 &= r3 
  115596:    12 b7       	r2 = r2 << 23 
  115598:    11 da       	r1 |= r2 
  11559a:    11 08       	goto 34 <__mulsf3+0x116 : 1155be >
  11559c:    20 ee 22 01 	r2 = 1 - r2 
  1155a0:    fa 98       	cmp r2, 31
  1155a2:    19 18       	if (nzcv > 0) goto 50 <__mulsf3+0x12E : 1155d6 >
  1155a4:    20 ee 23 20 	r3 = 32 - r2 
  1155a8:    00 f7 05 03 	r5 = r0 << r3 
  1155ac:    0d 80       	r5 = 1 
  1155ae:    01 11       	ifs (nzcv != 0) goto 2 <__mulsf3+0x10A : 1155b2 >
  1155b0:    05 80       	r5 = 0 
  1155b2:    00 f7 13 03 	r3 = r1 << r3 
  1155b6:    50 cf       	r0 >>= r2 
  1155b8:    18 da       	r0 |= r3 
  1155ba:    28 da       	r0 |= r5 
  1155bc:    51 cf       	r1 >>= r2 
  1155be:    0c da       	r4 |= r1 
  1155c0:    04 ef 00 00 	cmp r0, 2147483648
  1155c4:    02 19       	if (nzcv <= 0) goto 4 <__mulsf3+0x122 : 1155ca >
  1155c6:    0c 88       	r4 += 1 
  1155c8:    06 08       	goto 12 <__mulsf3+0x12E : 1155d6 >
  1155ca:    04 ef 00 00 	cmp r0, 2147483648
  1155ce:    01 03       	ifs (nzcv == 0) {
  1155d0:    80 f3 10 01 		r0 = r1 & 1 
  1155d4:    04 cb       		r4 += r0 
                               	}
  1155d6:    20 c6       	r0 = r4 
  1155d8:    19 c0       	{pc, r9-r4} = [sp++] 
  1155da:    00 00       	nop


.GCPI0_0:
  1155dc:    ff ff 7f 00     < 8388607 : 0x7FFFFF >

.GCPI0_1:
  1155e0:    00 00 c0 7f     < 2143289344 : 0x7FC00000 >

__truncdfsf2:
  1155e4:    18 c2       	[--sp] = {rets, r8-r4} 
  1155e6:    0c c6       	r4 = r1 
  1155e8:    05 c6       	r5 = r0 
  1155ea:    c4 f3 41 00 	r1 = r4 & (~2147483648) 
  1155ee:    c8 2b       	r0 = [addr(188)]  <.GCPI0_0 : 1156ac >
  1155f0:    08 cb       	r0 += r1 
  1155f2:    ca 2b       	r2 = [addr(188)]  <.GCPI0_1 : 1156b0 >
  1155f4:    0a cb       	r2 += r1 
  1155f6:    02 ce       	cmp r0, r2
  1155f8:    0a 12       	if (nzcv >= 0) goto 20 <__truncdfsf2+0x2A : 11560e >
  1155fa:    68 bd       	r0 = r5 >> 29 
  1155fc:    21 a3       	r1 = r4 << 3 
  1155fe:    08 da       	r0 |= r1 
  115600:    c4 f3 51 60 	r1 = r5 & (~3758096384) 
  115604:    05 ef 10 80 	cmp r1, 268435456
  115608:    19 19       	if (nzcv <= 0) goto 50 <__truncdfsf2+0x58 : 11563c >
  11560a:    89 2a       	r1 = [addr(168)]  <.GCPI0_2 : 1156b4 >
  11560c:    1d 08       	goto 58 <__truncdfsf2+0x64 : 115648 >
  11560e:    8a 2a       	r2 = [addr(168)]  <.GCPI0_3 : 1156b8 >
  115610:    08 80       	r0 = 1 
  115612:    0a ce       	cmp r1, r2
  115614:    0b 80       	r3 = 1 
  115616:    20 03       	if (nzcv >= 0) {
  115618:    03 80       		r3 = 0 
                               	}
  11561a:    15 20       	if (r5 == 0) goto 2 <__truncdfsf2+0x3A : 11561e >
  11561c:    00 80       	r0 = 0 
  11561e:    0a ce       	cmp r1, r2
  115620:    10 03       	ifs (nzcv != 0) {
  115622:    18 c6       		r0 = r3 
                               	}
  115624:    00 f4 00 01 	tst r0, 1
  115628:    11 11       	ifs (nzcv != 0) goto 34 <__truncdfsf2+0x68 : 11564c >
  11562a:    00 08       	goto 0 <__truncdfsf2+0x48 : 11562c >
  11562c:    68 bd       	r0 = r5 >> 29 
  11562e:    21 a3       	r1 = r4 << 3 
  115630:    08 da       	r0 |= r1 
  115632:    89 28       	r1 = [addr(136)]  <.GCPI0_4 : 1156bc >
  115634:    88 da       	r0 &= r1 
  115636:    89 28       	r1 = [addr(136)]  <.GCPI0_5 : 1156c0 >
  115638:    08 da       	r0 |= r1 
  11563a:    33 08       	goto 102 <__truncdfsf2+0xBE : 1156a2 >
  11563c:    14 ee 00 80 	r0 = r0 + 1073741824 
  115640:    e1 d9       	r1 ^= 268435456
  115642:    2f 11       	ifs (nzcv != 0) goto 94 <__truncdfsf2+0xBE : 1156a2 >
  115644:    80 f3 01 01 	r1 = r0 & 1 
  115648:    08 cb       	r0 += r1 
  11564a:    2b 08       	goto 86 <__truncdfsf2+0xBE : 1156a2 >
  11564c:    24 ea 00 ff 	r0 = 2139095040 
  115650:    42 2f       	r2 = [addr(116)]  <.GCPI0_6 : 1156c4 >
  115652:    0a ce       	cmp r1, r2
  115654:    26 18       	if (nzcv > 0) goto 76 <__truncdfsf2+0xBE : 1156a2 >
  115656:    48 b4       	r0 = r1 >> 20 
  115658:    2f ee 01 60 	r1 = 896 - r0 
  11565c:    00 80       	r0 = 0 
  11565e:    99 99       	cmp r1, 51
  115660:    20 1c       	ifs (nzcv > 0) goto 64 <__truncdfsf2+0xBE : 1156a2 >
  115662:    40 2e       	r0 = [addr(100)]  <.GCPI0_7 : 1156c8 >
  115664:    a0 da       	r0 &= r4 
  115666:    09 f3 06 80 	r6 = r0 | 1048576 
  11566a:    20 ee 12 3f 	r2 = 63 - r1 
  11566e:    00 ed 18 01 	r8 = r1 + 1 
  115672:    28 c6       	r0 = r5 
  115674:    31 c6       	r1 = r6 
  115676:    00 e1 90 02 	call 82 <__ashldi3 : 1156cc >
  11567a:    08 da       	r0 |= r1 
  11567c:    0f 80       	r7 = 1 
  11567e:    01 11       	ifs (nzcv != 0) goto 2 <__truncdfsf2+0x9E : 115682 >
  115680:    07 80       	r7 = 0 
  115682:    28 c6       	r0 = r5 
  115684:    31 c6       	r1 = r6 
  115686:    82 c6       	r2 = r8 
  115688:    00 e1 80 02 	call 80 <__lshrdi3 : 1156dc >
  11568c:    00 f0 72 00 	r2 = r7 | r0 
  115690:    09 a3       	r1 = r1 << 3 
  115692:    40 bd       	r0 = r0 >> 29 
  115694:    08 da       	r0 |= r1 
  115696:    c4 f3 21 60 	r1 = r2 & (~3758096384) 
  11569a:    05 ef 10 80 	cmp r1, 268435456
  11569e:    d0 19       	if (nzcv <= 0) goto -96 <__truncdfsf2+0x5C : 115640 >
  1156a0:    08 88       	r0 += 1 
  1156a2:    84 f3 41 00 	r1 = r4 & 2147483648 
  1156a6:    08 da       	r0 |= r1 
  1156a8:    18 c0       	{pc, r8-r4} = [sp++] 
  1156aa:    00 00       	nop


.GCPI0_0:
  1156ac:    00 00 f0 c7     < 3354394624 : 0xC7F00000 >

.GCPI0_1:
  1156b0:    00 00 10 b8     < 3088056320 : 0xB8100000 >

.GCPI0_2:
  1156b4:    01 00 00 40     < 1073741825 : 0x40000001 >

.GCPI0_3:
  1156b8:    00 00 f0 7f     < 2146435072 : 0x7FF00000 >

.GCPI0_4:
  1156bc:    ff ff 3f 00     < 4194303 : 0x3FFFFF >

.GCPI0_5:
  1156c0:    00 00 c0 7f     < 2143289344 : 0x7FC00000 >

.GCPI0_6:
  1156c4:    ff ff ef 47     < 1206910975 : 0x47EFFFFF >

.GCPI0_7:
  1156c8:    ff ff 0f 00     < 1048575 : 0xFFFFF >

__ashldi3:
  1156cc:    30 c5       	[--sp] = {macch, maccl} 
  1156ce:    04 c7       	maccl = r0 
  1156d0:    0d c7       	macch = r1 
  1156d2:    82 dd       	macc <<= r2 
  1156d4:    20 c8       	r0 = maccl 
  1156d6:    29 c8       	r1 = macch 
  1156d8:    30 c4       	{macch, maccl} = [sp++] 
  1156da:    20 00       	rts


__lshrdi3:
  1156dc:    30 c5       	[--sp] = {macch, maccl} 
  1156de:    04 c7       	maccl = r0 
  1156e0:    0d c7       	macch = r1 
  1156e2:    02 de       	macc >>= r2 
  1156e4:    20 c8       	r0 = maccl 
  1156e6:    29 c8       	r1 = macch 
  1156e8:    30 c4       	{macch, maccl} = [sp++] 
  1156ea:    20 00       	rts
  1156ec:    00 00       	nop
  1156ee:    00 00       	nop
  1156f0:    00 00       	nop
  1156f2:    00 00       	nop
  1156f4:    00 00       	nop
  1156f6:    00 00       	nop
  1156f8:    00 00       	nop
  1156fa:    00 00       	nop
  1156fc:    00 00       	nop
  1156fe:    00 00       	nop


flash_code_protect_callback:
  115700:    02 2a       	r2 = [addr(32)]  <.GCPI155_0 : 115720 >			  ## init.c:89:0
  115702:    20 e8 22 2a 	r2 = [r2 + 168] 			  ## init.c:90:30
  115706:    10 ce       	cmp r2, r0			  ## init.c:92:31
  115708:    81 03       	if (nzcv > 0) {			  ## init.c:99:1
  11570a:    08 80       		r0 = 1 			  ## init.c:99:1
  11570c:    20 00       		rts
                               	}			  ## init.c:99:1
  11570e:    09 d4       	r1 = r1 + r0 			  ## init.c:92:43
  115710:    40 29       	r0 = [addr(20)]  <.GCPI155_1 : 115724 >			  ## init.c:92:62
  115712:    82 49       	r2 = [r0 + 24] 			  ## init.c:92:62
  115714:    08 80       	r0 = 1 			  ## init.c:92:50
  115716:    0a ce       	cmp r1, r2			  ## init.c:92:50
  115718:    90 03       	if (nzcv <= 0) {			  ## init.c:92:50
  11571a:    00 80       		r0 = 0 
                               	}			  ## init.c:92:50
  11571c:    20 00       	rts			  ## init.c:92:9
  11571e:    00 00       	nop			  ## init.c:92:9


.GCPI155_0:
  115720:    60 1c 00 00     < 7264 : 0x1C60 >

.GCPI155_1:
  115724:    8c 7e 00 00     < 32396 : 0x7E8C >

flash_addr2cpu_addr.645:
  115728:    01 29       	r1 = [addr(16)]  <.GCPI199_0 : 115738 >			  ## vm_sfc.c:291:0
  11572a:    24 e8 12 2c 	r2 = [++ r1 = 176] 			  ## vm_sfc.c:293:30
  11572e:    80 d6       	r0 = r0 - r2 			  ## vm_sfc.c:293:12
  115730:    49 48       	r1 = [r1 + 4] 			  ## vm_sfc.c:295:27
  115732:    40 d4       	r0 = r0 + r1 			  ## vm_sfc.c:295:36
  115734:    20 00       	rts			  ## vm_sfc.c:295:5
  115736:    00 00       	nop			  ## vm_sfc.c:295:5


.GCPI199_0:
  115738:    60 1d 00 00     < 7520 : 0x1D60 >

load_spi_code2cache:
  11573c:    fc cd       	sp += -4 			  ## vm_sfc.c:317:0
  11573e:    c0 29       	r0 = [addr(28)]  <.GCPI204_0 : 11575c >			  ## vm_sfc.c:317:0
  115740:    c0 f3 00 1f 	r0 = r0 & (~31) 			  ## vm_sfc.c:317:0
  115744:    c1 29       	r1 = [addr(28)]  <.GCPI204_1 : 115760 >			  ## vm_sfc.c:317:0
  115746:    01 ed 11 00 	r1 = r1 + 256 			  ## vm_sfc.c:317:0
  11574a:    01 ce       	cmp r0, r1			  ## vm_sfc.c:324:5
  11574c:    21 03       	if (nzcv >= 0) {			  ## vm_sfc.c:324:5
  11574e:    04 cd       		sp += 4 			  ## vm_sfc.c:324:5
  115750:    20 00       		rts
                               	}			  ## vm_sfc.c:327:1
  115752:    08 e8 02 08 	r2 = b[r0 ++= 32] 			  ## vm_sfc.c:325:15
  115756:    40 e9 c2 00 	b[sp+ 3] = r2 			  ## vm_sfc.c:325:13
  11575a:    f7 0f       	goto -18 <load_spi_code2cache+0xE : 11574a >


.GCPI204_0:
  11575c:    00 57 11 00     < 1136384 : 0x115700 >

.GCPI204_1:
  115760:    6c 5f 11 00     < 1138540 : 0x115F6C >

enter_spi_code:
  115764:    1f c2       	[--sp] = {rets} 			  ## vm_sfc.c:345:0
  115766:    c0 29       	r0 = [addr(28)]  <.GCPI205_0 : 115784 >			  ## vm_sfc.c:347:9
  115768:    20 e8 01 11 	r1 = [r0 + 68] 			  ## vm_sfc.c:347:9
  11576c:    0a 80       	r2 = 1 			  ## vm_sfc.c:347:9
  11576e:    82 7a       	b[r0 + 9] = r2 			  ## vm_sfc.c:352:13
  115770:    0f f3 10 00 	r0 = r1 | 512 			  ## vm_sfc.c:349:18
  115774:    75 e1 4f 93 	call -1133976 <_OS_ENTER_CRITICAL : 9e0 >			  ## vm_sfc.c:353:5
  115778:    e1 04       	call -62 <load_spi_code2cache : 11573c >			  ## vm_sfc.c:354:5
  11577a:    08 80       	r0 = 1 			  ## vm_sfc.c:355:5
  11577c:    40 c4       	{rets} = [sp++] 			  ## vm_sfc.c:355:5
  11577e:    75 fa 3f 65 	goto -1135450 <sfc_suspend : 428 >			  ## vm_sfc.c:355:5
  115782:    00 00       	nop			  ## vm_sfc.c:355:5


.GCPI205_0:
  115784:    60 1c 00 00     < 7264 : 0x1C60 >

spi_wait_ok:
  115788:    08 00       	csync			  ## vm_sfc.c:136:0
  11578a:    00 29       	r0 = [addr(16)]  <.GCPI207_0 : 11579c >			  ## vm_sfc.c:137:5
  11578c:    01 48       	r1 = [r0 + 0] 			  ## vm_sfc.c:138:23
  11578e:    c9 c9       	r1 = r1.l (s) 			  ## vm_sfc.c:138:12
  115790:    f9 9f       	cmp r1, -1			  ## vm_sfc.c:138:5
  115792:    fc 1c       	ifs (nzcv > 0) goto -8 <spi_wait_ok+0x4 : 11578c >			  ## vm_sfc.c:138:5
  115794:    0c e2 00 80 	[r0 + 0] |= 16384 			  ## vm_sfc.c:139:18
  115798:    20 00       	rts			  ## vm_sfc.c:140:1
  11579a:    00 00       	nop			  ## vm_sfc.c:140:1


.GCPI207_0:
  11579c:    00 0c 09 00     < 592896 : 0x90C00 >

spi_writebyte:
  1157a0:    c1 28       	r1 = [addr(12)]  <.GCPI208_0 : 1157ac >			  ## vm_sfc.c:144:0
  1157a2:    fd e3 1f 80 	[r1 + -4] &= (~4096) 			  ## vm_sfc.c:145:18
  1157a6:    48 68       	[r1 + 4] = r0 			  ## vm_sfc.c:146:18
  1157a8:    ef 0f       	goto -34 <spi_wait_ok : 115788 >			  ## vm_sfc.c:147:5
  1157aa:    00 00       	nop			  ## vm_sfc.c:147:5


.GCPI208_0:
  1157ac:    04 0c 09 00     < 592900 : 0x90C04 >

exit_continue_mode:
  1157b0:    14 c2       	[--sp] = {rets, r4} 			  ## vm_sfc.c:545:0
  1157b2:    80 2b       	r0 = [addr(56)]  <.GCPI209_0 : 1157ec >			  ## vm_sfc.c:546:29
  1157b4:    00 48       	r0 = [r0 + 0] 			  ## vm_sfc.c:546:29
  1157b6:    01 f6 00 04 	r0 = uextra(r0, p:8, l:4) 			  ## vm_sfc.c:549:9
  1157ba:    30 98       	cmp r0, 6			  ## vm_sfc.c:549:9
  1157bc:    07 10       	ifs (nzcv == 0) goto 14 <exit_continue_mode+0x1C : 1157cc >			  ## vm_sfc.c:549:9
  1157be:    04 80       	r4 = 0 
  1157c0:    38 98       	cmp r0, 7
  1157c2:    11 11       	ifs (nzcv != 0) goto 34 <exit_continue_mode+0x36 : 1157e6 >
  1157c4:    00 80       	r0 = 0 			  ## vm_sfc.c:550:9
  1157c6:    75 e1 bf 48 	call -1136362 <spi_cs : e0 >			  ## vm_sfc.c:550:9
  1157ca:    06 08       	goto 12 <exit_continue_mode+0x28 : 1157d8 >			  ## vm_sfc.c:550:9
  1157cc:    00 80       	r0 = 0 			  ## vm_sfc.c:555:9
  1157ce:    75 e1 7f 48 	call -1136370 <spi_cs : e0 >			  ## vm_sfc.c:555:9
  1157d2:    10 ea ff 00 	r0 = 255 			  ## vm_sfc.c:556:9
  1157d6:    e4 04       	call -56 <spi_writebyte : 1157a0 >			  ## vm_sfc.c:556:9
  1157d8:    10 ea ff 00 	r0 = 255 
  1157dc:    e1 04       	call -62 <spi_writebyte : 1157a0 >
  1157de:    0c 80       	r4 = 1 
  1157e0:    08 80       	r0 = 1 
  1157e2:    75 e1 df 47 	call -1136390 <spi_cs : e0 >
  1157e6:    20 c6       	r0 = r4 			  ## vm_sfc.c:561:5
  1157e8:    14 c0       	{pc, r4} = [sp++] 
  1157ea:    00 00       	nop


.GCPI209_0:
  1157ec:    00 02 08 00     < 524800 : 0x80200 >

spi_readbyte:
  1157f0:    1f c2       	[--sp] = {rets} 			  ## vm_sfc.c:152:0
  1157f2:    42 29       	r2 = [addr(20)]  <.GCPI210_0 : 115808 >			  ## vm_sfc.c:152:0
  1157f4:    fd e2 2f 80 	[r2 + -4] |= 4096 			  ## vm_sfc.c:154:18
  1157f8:    10 ea ff 00 	r0 = 255 			  ## vm_sfc.c:154:18
  1157fc:    50 68       	[r2 + 4] = r0 			  ## vm_sfc.c:155:18
  1157fe:    c4 04       	call -120 <spi_wait_ok : 115788 >			  ## vm_sfc.c:156:5
  115800:    50 48       	r0 = [r2 + 4] 			  ## vm_sfc.c:157:25
  115802:    00 c9       	r0 = r0.b 			  ## vm_sfc.c:159:5
  115804:    1f c0       	{pc} = [sp++] 			  ## vm_sfc.c:159:5
  115806:    00 00       	nop			  ## vm_sfc.c:159:5


.GCPI210_0:
  115808:    04 0c 09 00     < 592900 : 0x90C04 >

norflash_write_enable:
  11580c:    1f c2       	[--sp] = {rets} 			  ## vm_sfc.c:369:0
  11580e:    00 80       	r0 = 0 			  ## vm_sfc.c:370:5
  115810:    75 e1 6f 46 	call -1136436 <spi_cs : e0 >			  ## vm_sfc.c:370:5
  115814:    30 80       	r0 = 6 			  ## vm_sfc.c:371:5
  115816:    c4 04       	call -120 <spi_writebyte : 1157a0 >			  ## vm_sfc.c:371:5
  115818:    08 80       	r0 = 1 			  ## vm_sfc.c:372:5
  11581a:    40 c4       	{rets} = [sp++] 			  ## vm_sfc.c:372:5
  11581c:    75 fa 0f 46 	goto -1136448 <spi_cs : e0 >			  ## vm_sfc.c:372:5


norflash_write_enable_mode:
  115820:    1f c2       	[--sp] = {rets} 			  ## vm_sfc.c:1488:0
  115822:    90 20       	if (r0 == 0) goto 18 <norflash_write_enable_mode+0x16 : 115836 >			  ## vm_sfc.c:1489:9
  115824:    00 80       	r0 = 0 			  ## vm_sfc.c:1481:5
  115826:    75 e1 bf 45 	call -1136458 <spi_cs : e0 >			  ## vm_sfc.c:1481:5
  11582a:    80 82       	r0 = 80 			  ## vm_sfc.c:1482:5
  11582c:    b9 04       	call -142 <spi_writebyte : 1157a0 >			  ## vm_sfc.c:1482:5
  11582e:    08 80       	r0 = 1 			  ## vm_sfc.c:1483:5
  115830:    40 c4       	{rets} = [sp++] 			  ## vm_sfc.c:1483:5
  115832:    75 fa 5f 45 	goto -1136470 <spi_cs : e0 >			  ## vm_sfc.c:1483:5
  115836:    40 c4       	{rets} = [sp++] 			  ## vm_sfc.c:1492:9
  115838:    e9 0f       	goto -46 <norflash_write_enable : 11580c >			  ## vm_sfc.c:1492:9


norflash_wait_ok:
  11583a:    15 c2       	[--sp] = {rets, r5, r4} 			  ## vm_sfc.c:414:0
  11583c:    c5 2a       	r5 = [addr(44)]  <.GCPI213_0 : 115868 >			  ## vm_sfc.c:414:0
  11583e:    11 08       	goto 34 <norflash_wait_ok+0x28 : 115862 >			  ## vm_sfc.c:414:0
  115840:    00 80       	r0 = 0 			  ## vm_sfc.c:389:5
  115842:    75 e1 df 44 	call -1136486 <spi_cs : e0 >			  ## vm_sfc.c:389:5
  115846:    28 80       	r0 = 5 			  ## vm_sfc.c:390:5
  115848:    ab 04       	call -170 <spi_writebyte : 1157a0 >			  ## vm_sfc.c:390:5
  11584a:    d2 04       	call -92 <spi_readbyte : 1157f0 >			  ## vm_sfc.c:391:14
  11584c:    04 c6       	r4 = r0 			  ## vm_sfc.c:391:14
  11584e:    08 80       	r0 = 1 			  ## vm_sfc.c:392:5
  115850:    75 e1 6f 44 	call -1136500 <spi_cs : e0 >			  ## vm_sfc.c:392:5
  115854:    00 f4 40 01 	tst r4, 1			  ## vm_sfc.c:418:13
  115858:    05 10       	ifs (nzcv == 0) goto 10 <norflash_wait_ok+0x2A : 115864 >			  ## vm_sfc.c:418:13
  11585a:    20 83       	r0 = 100 			  ## vm_sfc.c:424:9
  11585c:    75 e1 6f 3f 	call -1136660 <udelay : 4c >			  ## vm_sfc.c:424:9
  115860:    6d d0       	r5 = r5 + 1 			  ## vm_sfc.c:416:5
  115862:    ed 26       	if (r5 != 0) goto -36 <norflash_wait_ok+0x6 : 115840 >
  115864:    15 c0       	{pc, r5, r4} = [sp++] 
  115866:    00 00       	nop


.GCPI213_0:
  115868:    e0 5e f8 ff     < 4294467296 : 0xFFF85EE0 >

norflash_send_addr:
  11586c:    1f c2       	[--sp] = {rets} 			  ## vm_sfc.c:377:0
  11586e:    02 c6       	r2 = r0 			  ## vm_sfc.c:377:0
  115870:    40 2a       	r0 = [addr(36)]  <.GCPI214_0 : 115894 >			  ## vm_sfc.c:378:20
  115872:    20 e8 00 26 	r0 = [r0 + 152] 			  ## vm_sfc.c:378:20
  115876:    07 ef 00 80 	cmp r0, 16777216			  ## vm_sfc.c:378:9
  11587a:    81 03       	if (nzcv > 0) {			  ## vm_sfc.c:379:28
  11587c:    50 b8       		r0 = r2 >> 24 			  ## vm_sfc.c:379:28
  11587e:    90 04       		call -224
                               	} <spi_writebyte : 1157a0 >			  ## vm_sfc.c:379:9
  115880:    02 f6 20 08 	r0 = uextra(r2, p:16, l:8) 			  ## vm_sfc.c:381:5
  115884:    8d 04       	call -230 <spi_writebyte : 1157a0 >			  ## vm_sfc.c:381:5
  115886:    01 f6 20 08 	r0 = uextra(r2, p:8, l:8) 			  ## vm_sfc.c:382:5
  11588a:    8a 04       	call -236 <spi_writebyte : 1157a0 >			  ## vm_sfc.c:382:5
  11588c:    10 c9       	r0 = r2.b 			  ## vm_sfc.c:383:5
  11588e:    40 c4       	{rets} = [sp++] 			  ## vm_sfc.c:383:5
  115890:    87 0f       	goto -242 <spi_writebyte : 1157a0 >			  ## vm_sfc.c:383:5
  115892:    00 00       	nop			  ## vm_sfc.c:383:5


.GCPI214_0:
  115894:    60 1d 00 00     < 7520 : 0x1D60 >

spi_read_dma:
  115898:    16 c2       	[--sp] = {rets, r6-r4} 			  ## vm_sfc.c:238:0
  11589a:    0a c6       	r2 = r1 			  ## vm_sfc.c:238:0
  11589c:    03 c6       	r3 = r0 			  ## vm_sfc.c:238:0
  11589e:    c0 2d       	r0 = [addr(92)]  <.GCPI215_0 : 1158fc >			  ## vm_sfc.c:239:29
  1158a0:    00 48       	r0 = [r0 + 0] 			  ## vm_sfc.c:239:29
  1158a2:    c4 2d       	r4 = [addr(92)]  <.GCPI215_1 : 115900 >			  ## vm_sfc.c:239:29
  1158a4:    fd e2 4f 80 	[r4 + -4] |= 4096 			  ## vm_sfc.c:246:18
  1158a8:    e5 4f       	r5 = [r4 + -4] 			  ## vm_sfc.c:248:31
  1158aa:    01 f6 01 04 	r1 = uextra(r0, p:8, l:4) 			  ## vm_sfc.c:250:5
  1158ae:    49 98       	cmp r1, 9			  ## vm_sfc.c:250:5
  1158b0:    12 18       	if (nzcv > 0) goto 36 <spi_read_dma+0x3E : 1158d6 >			  ## vm_sfc.c:250:5
  1158b2:    10 ea 00 04 	r0 = 1024 
  1158b6:    0e 80       	r6 = 1 
  1158b8:    00 f7 61 01 	r1 = r6 << r1 
  1158bc:    0f f4 10 aa 	tst r1, 340
  1158c0:    05 11       	ifs (nzcv != 0) goto 10 <spi_read_dma+0x34 : 1158cc >
  1158c2:    0f f4 10 2a 	tst r1, 680
  1158c6:    07 10       	ifs (nzcv == 0) goto 14 <spi_read_dma+0x3E : 1158d6 >
  1158c8:    10 ea 00 08 	r0 = 2048 
  1158cc:    e1 4f       	r1 = [r4 + -4] 
  1158ce:    08 da       	r0 |= r1 
  1158d0:    e0 6f       	[r4 + -4] = r0 
  1158d2:    f0 e3 4f 08 	[r4 + -4] &= (~8) 
  1158d6:    16 ea ff 00 	r6 = 255 
  1158da:    07 08       	goto 14 <spi_read_dma+0x52 : 1158ea >
  1158dc:    66 68       	[r4 + 4] = r6 			  ## vm_sfc.c:272:22
  1158de:    ff e1 3f f5 	call -346 <spi_wait_ok : 115788 >			  ## vm_sfc.c:273:9
  1158e2:    60 48       	r0 = [r4 + 4] 			  ## vm_sfc.c:274:27
  1158e4:    48 e8 30 40 	b[r3 ++= 1] = r0 			  ## vm_sfc.c:274:16
  1158e8:    d2 d3       	r2 = r2 + -1 			  ## vm_sfc.c:271:5
  1158ea:    8a 27       	if (r2 != 0) goto -16 <spi_read_dma+0x44 : 1158dc >			  ## vm_sfc.c:271:5
  1158ec:    fe e3 4f 40 	[r4 + -4] &= (~3072) 			  ## vm_sfc.c:277:18
  1158f0:    00 f4 50 08 	tst r5, 8			  ## vm_sfc.c:279:9
  1158f4:    10 03       	ifs (nzcv != 0) {			  ## vm_sfc.c:280:22
  1158f6:    f0 e2 4f 08 		[r4 + -4] |= 8 
                               	}			  ## vm_sfc.c:280:22
  1158fa:    16 c0       	{pc, r6-r4} = [sp++] 			  ## vm_sfc.c:280:22


.GCPI215_0:
  1158fc:    00 02 08 00     < 524800 : 0x80200 >

.GCPI215_1:
  115900:    04 0c 09 00     < 592900 : 0x90C04 >

spi_write_dma:
  115904:    14 c2       	[--sp] = {rets, r4} 			  ## vm_sfc.c:165:0
  115906:    02 c6       	r2 = r0 			  ## vm_sfc.c:165:0
  115908:    c0 2c       	r0 = [addr(76)]  <.GCPI216_0 : 115954 >			  ## vm_sfc.c:166:29
  11590a:    00 48       	r0 = [r0 + 0] 			  ## vm_sfc.c:166:29
  11590c:    c3 2c       	r3 = [addr(76)]  <.GCPI216_1 : 115958 >			  ## vm_sfc.c:166:29
  11590e:    fd e3 3f 80 	[r3 + -4] &= (~4096) 			  ## vm_sfc.c:173:18
  115912:    01 f6 01 04 	r1 = uextra(r0, p:8, l:4) 			  ## vm_sfc.c:175:5
  115916:    49 98       	cmp r1, 9			  ## vm_sfc.c:175:5
  115918:    10 18       	if (nzcv > 0) goto 32 <spi_write_dma+0x36 : 11593a >			  ## vm_sfc.c:175:5
  11591a:    10 ea 00 04 	r0 = 1024 
  11591e:    0c 80       	r4 = 1 
  115920:    00 f7 41 01 	r1 = r4 << r1 
  115924:    0f f4 10 aa 	tst r1, 340
  115928:    05 11       	ifs (nzcv != 0) goto 10 <spi_write_dma+0x30 : 115934 >
  11592a:    0f f4 10 2a 	tst r1, 680
  11592e:    05 10       	ifs (nzcv == 0) goto 10 <spi_write_dma+0x36 : 11593a >
  115930:    10 ea 00 08 	r0 = 2048 
  115934:    d9 4f       	r1 = [r3 + -4] 
  115936:    08 da       	r0 |= r1 
  115938:    d8 6f       	[r3 + -4] = r0 
  11593a:    04 80       	r4 = 0 
  11593c:    24 98       	cmp r4, 4			  ## vm_sfc.c:194:5
  11593e:    01 03       	ifs (nzcv == 0) {			  ## vm_sfc.c:199:18
  115940:    fe e3 3f 40 		[r3 + -4] &= (~3072) 			  ## vm_sfc.c:199:18
  115944:    14 c0       		{pc, r4} = [sp++] 
                               	}			  ## vm_sfc.c:199:18
  115946:    00 e7 20 04 	r0 = b[r2 + r4] 			  ## vm_sfc.c:195:24
  11594a:    58 68       	[r3 + 4] = r0 			  ## vm_sfc.c:195:22
  11594c:    ff e1 cf f1 	call -456 <spi_wait_ok : 115788 >			  ## vm_sfc.c:196:9
  115950:    64 d0       	r4 = r4 + 1 			  ## vm_sfc.c:194:31
  115952:    f4 0f       	goto -24 <spi_write_dma+0x38 : 11593c >


.GCPI216_0:
  115954:    00 02 08 00     < 524800 : 0x80200 >

.GCPI216_1:
  115958:    04 0c 09 00     < 592900 : 0x90C04 >

__norflash_read:
  11595c:    17 c2       	[--sp] = {rets, r7-r4} 			  ## vm_sfc.c:434:0
  11595e:    fc cd       	sp += -4 			  ## vm_sfc.c:434:0
  115960:    1f c6       	r7 = r3 			  ## vm_sfc.c:434:0
  115962:    14 c6       	r4 = r2 			  ## vm_sfc.c:434:0
  115964:    0e c6       	r6 = r1 			  ## vm_sfc.c:434:0
  115966:    05 c6       	r5 = r0 			  ## vm_sfc.c:434:0
  115968:    d0 2a       	r0 = [addr(300)]  <.GCPI217_0 : 115a94 >			  ## vm_sfc.c:435:29
  11596a:    00 48       	r0 = [r0 + 0] 			  ## vm_sfc.c:435:29
  11596c:    81 f6 01 04 	r1 = sextra(r0, p:8, l:4) 			  ## vm_sfc.c:443:5
  115970:    01 98       	cmp r1, 0			  ## vm_sfc.c:443:5
  115972:    00 fb db 08 	ifs (nzcv < 0) goto 282 <.GJTIE217_0_0_+0x10C : 115a90 >			  ## vm_sfc.c:443:5
  115976:    01 f6 00 04 	r0 = uextra(r0, p:8, l:4) 
  11597a:    b0 01       	tbb [r0]


.GJTIS217_0_0_:
  11597c:    04     < 4 : 0x4 >
  11597d:    0e     < 14 : 0xE >
  11597e:    1a     < 26 : 0x1A >
  11597f:    25     < 37 : 0x25 >
  115980:    31     < 49 : 0x31 >
  115981:    40     < 64 : 0x40 >
  115982:    4f     < 79 : 0x4F >
  115983:    67     < 103 : 0x67 >
  115984:    00 80       	r0 = 0 			  ## vm_sfc.c:445:9
  115986:    75 e1 bf 3a 	call -1136810 <spi_cs : e0 >			  ## vm_sfc.c:445:9
  11598a:    18 80       	r0 = 3 			  ## vm_sfc.c:446:9
  11598c:    ff e1 8f f0 	call -496 <spi_writebyte : 1157a0 >			  ## vm_sfc.c:446:9
  115990:    30 c6       	r0 = r6 			  ## vm_sfc.c:447:9
  115992:    ff e1 bf f6 	call -298 <norflash_send_addr : 11586c >			  ## vm_sfc.c:447:9
  115996:    75 08       	goto 234 <.GJTIE217_0_0_+0xFE : 115a82 >			  ## vm_sfc.c:447:9
  115998:    00 80       	r0 = 0 			  ## vm_sfc.c:453:9
  11599a:    75 e1 1f 3a 	call -1136830 <spi_cs : e0 >			  ## vm_sfc.c:453:9
  11599e:    58 80       	r0 = 11 			  ## vm_sfc.c:454:9
  1159a0:    ff e1 ef ef 	call -516 <spi_writebyte : 1157a0 >			  ## vm_sfc.c:454:9
  1159a4:    30 c6       	r0 = r6 			  ## vm_sfc.c:455:9
  1159a6:    ff e1 1f f6 	call -318 <norflash_send_addr : 11586c >			  ## vm_sfc.c:455:9
  1159aa:    ff e1 1f f2 	call -446 <spi_readbyte : 1157f0 >			  ## vm_sfc.c:456:9
  1159ae:    69 08       	goto 210 <.GJTIE217_0_0_+0xFE : 115a82 >			  ## vm_sfc.c:456:9
  1159b0:    00 80       	r0 = 0 			  ## vm_sfc.c:488:9
  1159b2:    75 e1 5f 39 	call -1136854 <spi_cs : e0 >			  ## vm_sfc.c:488:9
  1159b6:    d8 81       	r0 = 59 			  ## vm_sfc.c:490:9
  1159b8:    ff e1 2f ef 	call -540 <spi_writebyte : 1157a0 >			  ## vm_sfc.c:490:9
  1159bc:    30 c6       	r0 = r6 			  ## vm_sfc.c:491:9
  1159be:    ff e1 5f f5 	call -342 <norflash_send_addr : 11586c >			  ## vm_sfc.c:491:9
  1159c2:    00 90       	r0 = sp + 0 			  ## vm_sfc.c:491:9
  1159c4:    5b 08       	goto 182 <.GJTIE217_0_0_+0xF8 : 115a7c >			  ## vm_sfc.c:491:9
  1159c6:    00 80       	r0 = 0 			  ## vm_sfc.c:498:9
  1159c8:    75 e1 af 38 	call -1136876 <spi_cs : e0 >			  ## vm_sfc.c:498:9
  1159cc:    58 83       	r0 = 107 			  ## vm_sfc.c:500:9
  1159ce:    ff e1 7f ee 	call -562 <spi_writebyte : 1157a0 >			  ## vm_sfc.c:500:9
  1159d2:    30 c6       	r0 = r6 			  ## vm_sfc.c:501:9
  1159d4:    ff e1 af f4 	call -364 <norflash_send_addr : 11586c >			  ## vm_sfc.c:501:9
  1159d8:    00 90       	r0 = sp + 0 			  ## vm_sfc.c:501:9
  1159da:    21 80       	r1 = 4 			  ## vm_sfc.c:502:9
  1159dc:    50 08       	goto 160 <.GJTIE217_0_0_+0xFA : 115a7e >			  ## vm_sfc.c:502:9
  1159de:    70 b0       	r0 = r6 >> 16 			  ## vm_sfc.c:462:38
  1159e0:    40 e9 00 00 	b[sp] = r0 			  ## vm_sfc.c:462:26
  1159e4:    70 a8       	r0 = r6 >> 8 			  ## vm_sfc.c:463:38
  1159e6:    40 e9 40 00 	b[sp+ 1] = r0 			  ## vm_sfc.c:463:26
  1159ea:    40 e9 86 00 	b[sp+ 2] = r6 			  ## vm_sfc.c:464:26
  1159ee:    00 80       	r0 = 0 			  ## vm_sfc.c:464:26
  1159f0:    40 e9 c0 00 	b[sp+ 3] = r0 			  ## vm_sfc.c:465:26
  1159f4:    00 80       	r0 = 0 			  ## vm_sfc.c:466:9
  1159f6:    75 e1 3f 37 	call -1136922 <spi_cs : e0 >			  ## vm_sfc.c:466:9
  1159fa:    1f 08       	goto 62 <.GJTIE217_0_0_+0xB6 : 115a3a >			  ## vm_sfc.c:466:9
  1159fc:    70 b0       	r0 = r6 >> 16 			  ## vm_sfc.c:508:38
  1159fe:    40 e9 00 00 	b[sp] = r0 			  ## vm_sfc.c:508:26
  115a02:    70 a8       	r0 = r6 >> 8 			  ## vm_sfc.c:509:38
  115a04:    40 e9 40 00 	b[sp+ 1] = r0 			  ## vm_sfc.c:509:26
  115a08:    40 e9 86 00 	b[sp+ 2] = r6 			  ## vm_sfc.c:510:26
  115a0c:    00 80       	r0 = 0 			  ## vm_sfc.c:510:26
  115a0e:    40 e9 c0 00 	b[sp+ 3] = r0 			  ## vm_sfc.c:511:26
  115a12:    00 80       	r0 = 0 			  ## vm_sfc.c:512:9
  115a14:    75 e1 4f 36 	call -1136952 <spi_cs : e0 >			  ## vm_sfc.c:512:9
  115a18:    28 08       	goto 80 <.GJTIE217_0_0_+0xE6 : 115a6a >			  ## vm_sfc.c:512:9
  115a1a:    70 b0       	r0 = r6 >> 16 			  ## vm_sfc.c:474:38
  115a1c:    40 e9 00 00 	b[sp] = r0 			  ## vm_sfc.c:474:26
  115a20:    70 a8       	r0 = r6 >> 8 			  ## vm_sfc.c:475:38
  115a22:    40 e9 40 00 	b[sp+ 1] = r0 			  ## vm_sfc.c:475:26
  115a26:    40 e9 86 00 	b[sp+ 2] = r6 			  ## vm_sfc.c:476:26
  115a2a:    10 ea a0 00 	r0 = 160 			  ## vm_sfc.c:477:26
  115a2e:    40 e9 c0 00 	b[sp+ 3] = r0 			  ## vm_sfc.c:477:26
  115a32:    00 80       	r0 = 0 			  ## vm_sfc.c:478:9
  115a34:    75 e1 4f 35 	call -1136984 <spi_cs : e0 >			  ## vm_sfc.c:478:9
  115a38:    47 20       	if (r7 == 0) goto 8 <.GJTIE217_0_0_+0xBE : 115a42 >			  ## vm_sfc.c:478:9
  115a3a:    10 ea bb 00 	r0 = 187 
  115a3e:    ff e1 ff ea 	call -674 <spi_writebyte : 1157a0 >
  115a42:    00 90       	r0 = sp + 0 
  115a44:    ff e1 ef f5 	call -324 <spi_write_dma : 115904 >
  115a48:    1c 08       	goto 56 <.GJTIE217_0_0_+0xFE : 115a82 >
  115a4a:    70 b0       	r0 = r6 >> 16 			  ## vm_sfc.c:522:38
  115a4c:    40 e9 00 00 	b[sp] = r0 			  ## vm_sfc.c:522:26
  115a50:    70 a8       	r0 = r6 >> 8 			  ## vm_sfc.c:523:38
  115a52:    40 e9 40 00 	b[sp+ 1] = r0 			  ## vm_sfc.c:523:26
  115a56:    40 e9 86 00 	b[sp+ 2] = r6 			  ## vm_sfc.c:524:26
  115a5a:    10 ea a0 00 	r0 = 160 			  ## vm_sfc.c:525:26
  115a5e:    40 e9 c0 00 	b[sp+ 3] = r0 			  ## vm_sfc.c:525:26
  115a62:    00 80       	r0 = 0 			  ## vm_sfc.c:526:9
  115a64:    75 e1 cf 33 	call -1137032 <spi_cs : e0 >			  ## vm_sfc.c:526:9
  115a68:    47 20       	if (r7 == 0) goto 8 <.GJTIE217_0_0_+0xEE : 115a72 >			  ## vm_sfc.c:526:9
  115a6a:    10 ea eb 00 	r0 = 235 
  115a6e:    ff e1 7f e9 	call -722 <spi_writebyte : 1157a0 >
  115a72:    06 90       	r6 = sp + 0 
  115a74:    30 c6       	r0 = r6 
  115a76:    ff e1 5f f4 	call -374 <spi_write_dma : 115904 >
  115a7a:    30 c6       	r0 = r6 
  115a7c:    11 80       	r1 = 2 
  115a7e:    ff e1 bf f0 	call -490 <spi_read_dma : 115898 >
  115a82:    28 c6       	r0 = r5 
  115a84:    21 c6       	r1 = r4 
  115a86:    ff e1 7f f0 	call -498 <spi_read_dma : 115898 >
  115a8a:    08 80       	r0 = 1 
  115a8c:    75 e1 8f 32 	call -1137072 <spi_cs : e0 >
  115a90:    04 cd       	sp += 4 
  115a92:    17 c0       	{pc, r7-r4} = [sp++] 


.GCPI217_0:
  115a94:    00 02 08 00     < 524800 : 0x80200 >

enter_continue_mode:
  115a98:    1f c2       	[--sp] = {rets} 			  ## vm_sfc.c:565:0
  115a9a:    fc cd       	sp += -4 			  ## vm_sfc.c:565:0
  115a9c:    00 90       	r0 = sp + 0 			  ## vm_sfc.c:565:0
  115a9e:    01 80       	r1 = 0 			  ## vm_sfc.c:567:5
  115aa0:    0a 80       	r2 = 1 			  ## vm_sfc.c:567:5
  115aa2:    0b 80       	r3 = 1 			  ## vm_sfc.c:567:5
  115aa4:    ff e1 af f5 	call -332 <__norflash_read : 11595c >			  ## vm_sfc.c:567:5
  115aa8:    04 cd       	sp += 4 			  ## vm_sfc.c:567:5
  115aaa:    1f c0       	{pc} = [sp++] 			  ## vm_sfc.c:567:5


exit_spi_code:
  115aac:    1f c2       	[--sp] = {rets} 			  ## vm_sfc.c:360:0
  115aae:    08 80       	r0 = 1 			  ## vm_sfc.c:361:5
  115ab0:    d6 e1 cf a7 	call -338696 <sfc_resume : c2fac >			  ## vm_sfc.c:361:5
  115ab4:    08 00       	csync			  ## vm_sfc.c:362:5
  115ab6:    75 e1 ff 7c 	call -1134690 <_OS_EXIT_CRITICAL : a58 >			  ## vm_sfc.c:363:5
  115aba:    80 28       	r0 = [addr(8)]  <.GCPI221_0 : 115ac4 >			  ## vm_sfc.c:364:13
  115abc:    01 80       	r1 = 0 			  ## vm_sfc.c:364:13
  115abe:    81 7a       	b[r0 + 9] = r1 			  ## vm_sfc.c:364:13
  115ac0:    1f c0       	{pc} = [sp++] 			  ## vm_sfc.c:364:13
  115ac2:    00 00       	nop			  ## vm_sfc.c:364:13


.GCPI221_0:
  115ac4:    60 1c 00 00     < 7264 : 0x1C60 >

norflash_write_protect_config:
  115ac8:    1d c2       	[--sp] = {rets, r13-r4} 			  ## vm_sfc.c:1623:0
  115aca:    fc cd       	sp += -4 			  ## vm_sfc.c:1623:0
  115acc:    80 22       	if (r0 == 0) goto 80 <norflash_write_protect_config+0x56 : 115b1e >			  ## vm_sfc.c:1623:0
  115ace:    40 aa       	r0 = r0 >> 10 			  ## vm_sfc.c:1633:14
  115ad0:    0a c6       	r2 = r1 
  115ad2:    08 e8 2c c0 	r12 = b[r2 ++= 3] 
  115ad6:    60 f7 c3 04 	r3 = r12 >> 4 
  115ada:    06 80       	r6 = 0 
  115adc:    fc 87       	r4 = -1 
  115ade:    11 08       	goto 34 <norflash_write_protect_config+0x3A : 115b02 >
  115ae0:    15 5a       	r5 = b[r2 + 1] 			  ## vm_sfc.c:1635:23
  115ae2:    17 58       	r7 = b[r2 + 0] 			  ## vm_sfc.c:1635:23
  115ae4:    41 f6 57 08 	r7 <= insert(r5, p:8, l:8) 			  ## vm_sfc.c:1635:23
  115ae8:    07 ce       	cmp r0, r7			  ## vm_sfc.c:1637:17
  115aea:    0d 13       	if (nzcv < 0) goto 26 <norflash_write_protect_config+0x3E : 115b06 >			  ## vm_sfc.c:1637:17
  115aec:    c7 d7       	r7 = r0 - r7 			  ## vm_sfc.c:1638:30
  115aee:    3c ce       	cmp r7, r4			  ## vm_sfc.c:1639:21
  115af0:    33 03       	if (nzcv < 0) {			  ## vm_sfc.c:1642:27
  115af2:    00 e8 2a ff 		r10 = b[r2 + -1] 			  ## vm_sfc.c:1642:27
  115af6:    00 e8 2d bf 		r13 = b[r2 + -2] 			  ## vm_sfc.c:1641:27
  115afa:    3c c6       		r4 = r7 
  115afc:    70 c6       		r8 = r6 
                               	}
  115afe:    12 d1       	r2 = r2 + 4 			  ## vm_sfc.c:1634:9
  115b00:    76 d0       	r6 = r6 + 1 			  ## vm_sfc.c:1634:48
  115b02:    33 ce       	cmp r6, r3			  ## vm_sfc.c:1634:9
  115b04:    ed 1b       	ifs (nzcv < 0) goto -38 <norflash_write_protect_config+0x18 : 115ae0 >			  ## vm_sfc.c:1634:9
  115b06:    fc 9f       	cmp r4, -1			  ## vm_sfc.c:1650:13
  115b08:    6e 10       	ifs (nzcv == 0) goto 220 <norflash_write_protect_config+0x11E : 115be6 >			  ## vm_sfc.c:1650:13
  115b0a:    20 f7 80 02 	r0 = r8 << 2 			  ## vm_sfc.c:1649:38
  115b0e:    40 d4       	r0 = r0 + r1 			  ## vm_sfc.c:1649:38
  115b10:    41 58       	r1 = b[r0 + 4] 			  ## vm_sfc.c:1649:19
  115b12:    00 5e       	r0 = b[r0 + 3] 			  ## vm_sfc.c:1649:19
  115b14:    41 f6 10 08 	r0 <= insert(r1, p:8, l:8) 			  ## vm_sfc.c:1649:19
  115b18:    20 f7 08 0a 	r8 = r0 << 10 			  ## vm_sfc.c:1649:46
  115b1c:    08 08       	goto 16 <norflash_write_protect_config+0x66 : 115b2e >
  115b1e:    00 e8 1c 00 	r12 = b[r1 + 0] 
  115b22:    55 ea 00 00 	r13 = 0 
  115b26:    52 ea 00 00 	r10 = 0 
  115b2a:    50 ea 00 00 	r8 = 0 
  115b2e:    ff e1 9f e1 	call -974 <enter_spi_code : 115764 >			  ## vm_sfc.c:1501:5
  115b32:    ff e1 df e3 	call -902 <exit_continue_mode : 1157b0 >			  ## vm_sfc.c:1502:21
  115b36:    41 c6       	r9 = r0 			  ## vm_sfc.c:1502:21
  115b38:    00 80       	r0 = 0 			  ## vm_sfc.c:1510:5
  115b3a:    75 e1 1f 2d 	call -1137246 <spi_cs : e0 >			  ## vm_sfc.c:1510:5
  115b3e:    28 80       	r0 = 5 			  ## vm_sfc.c:1511:5
  115b40:    ff e1 ef e2 	call -932 <spi_writebyte : 1157a0 >			  ## vm_sfc.c:1511:5
  115b44:    ff e1 4f e5 	call -856 <spi_readbyte : 1157f0 >			  ## vm_sfc.c:1512:19
  115b48:    07 c6       	r7 = r0 			  ## vm_sfc.c:1512:19
  115b4a:    0d 80       	r5 = 1 
  115b4c:    08 80       	r0 = 1 			  ## vm_sfc.c:1513:5
  115b4e:    75 e1 7f 2c 	call -1137266 <spi_cs : e0 >			  ## vm_sfc.c:1513:5
  115b52:    00 80       	r0 = 0 			  ## vm_sfc.c:1517:5
  115b54:    75 e1 4f 2c 	call -1137272 <spi_cs : e0 >			  ## vm_sfc.c:1517:5
  115b58:    a8 81       	r0 = 53 			  ## vm_sfc.c:1518:5
  115b5a:    ff e1 1f e2 	call -958 <spi_writebyte : 1157a0 >			  ## vm_sfc.c:1518:5
  115b5e:    ff e1 7f e4 	call -882 <spi_readbyte : 1157f0 >			  ## vm_sfc.c:1519:19
  115b62:    06 c6       	r6 = r0 			  ## vm_sfc.c:1519:19
  115b64:    08 80       	r0 = 1 			  ## vm_sfc.c:1520:5
  115b66:    75 e1 bf 2b 	call -1137290 <spi_cs : e0 >			  ## vm_sfc.c:1520:5
  115b6a:    00 f4 a0 40 	tst r10, 64			  ## vm_sfc.c:1523:39
  115b6e:    08 80       	r0 = 1 			  ## vm_sfc.c:1523:39
  115b70:    10 03       	ifs (nzcv != 0) {			  ## vm_sfc.c:1523:39
  115b72:    00 80       		r0 = 0 
                               	}			  ## vm_sfc.c:1523:39
  115b74:    80 ef 60 ff 	cmp r6, 255			  ## vm_sfc.c:1523:22
  115b78:    10 03       	ifs (nzcv != 0) {			  ## vm_sfc.c:1523:22
  115b7a:    05 80       		r5 = 0 
                               	}			  ## vm_sfc.c:1523:22
  115b7c:    80 f0 0b 05 	r11 = r0 & r5 			  ## vm_sfc.c:1523:31
  115b80:    80 f3 aa 40 	r10 = r10 & 64 			  ## vm_sfc.c:1507:9
  115b84:    80 f3 d5 7c 	r5 = r13 & 124 			  ## vm_sfc.c:1506:9
  115b88:    80 f3 70 7c 	r0 = r7 & 124 			  ## vm_sfc.c:1527:23
  115b8c:    05 ce       	cmp r0, r5			  ## vm_sfc.c:1527:39
  115b8e:    0c 11       	ifs (nzcv != 0) goto 24 <norflash_write_protect_config+0xE0 : 115ba8 >
  115b90:    80 f3 61 40 	r1 = r6 & 64 			  ## vm_sfc.c:1528:24
  115b94:    08 80       	r0 = 1 			  ## vm_sfc.c:1528:24
  115b96:    04 80       	r4 = 0 			  ## vm_sfc.c:1528:24
  115b98:    4a ce       	cmp r1, r10			  ## vm_sfc.c:1528:32
  115b9a:    10 03       	ifs (nzcv != 0) {			  ## vm_sfc.c:1528:32
  115b9c:    00 80       		r0 = 0 
                               	}			  ## vm_sfc.c:1528:32
  115b9e:    00 f0 00 0b 	r0 = r0 | r11 			  ## vm_sfc.c:1528:40
  115ba2:    00 f4 00 01 	tst r0, 1			  ## vm_sfc.c:1528:40
  115ba6:    63 11       	ifs (nzcv != 0) goto 198 <norflash_write_protect_config+0x1A6 : 115c6e >			  ## vm_sfc.c:1528:40
  115ba8:    80 ef 70 ff 	cmp r7, 255			  ## vm_sfc.c:1532:36
  115bac:    03 11       	ifs (nzcv != 0) goto 6 <norflash_write_protect_config+0xEC : 115bb4 >			  ## vm_sfc.c:1532:36
  115bae:    0c 80       	r4 = 1 
  115bb0:    3e ce       	cmp r7, r6
  115bb2:    5d 10       	ifs (nzcv == 0) goto 186 <norflash_write_protect_config+0x1A6 : 115c6e >
  115bb4:    00 f6 c7 21 	r7 = uextra(r12, p:1, l:1) 			  ## vm_sfc.c:1656:69
  115bb8:    c0 f3 c4 fe 	r4 = r12 & (~254) 			  ## vm_sfc.c:1656:54
  115bbc:    38 c6       	r0 = r7 			  ## vm_sfc.c:1542:9
  115bbe:    ff e1 ff e2 	call -930 <norflash_write_enable_mode : 115820 >			  ## vm_sfc.c:1542:9
  115bc2:    00 80       	r0 = 0 			  ## vm_sfc.c:1543:9
  115bc4:    75 e1 cf 28 	call -1137384 <spi_cs : e0 >			  ## vm_sfc.c:1543:9
  115bc8:    08 80       	r0 = 1 			  ## vm_sfc.c:1544:9
  115bca:    ff e1 9f de 	call -1070 <spi_writebyte : 1157a0 >			  ## vm_sfc.c:1544:9
  115bce:    28 c9       	r0 = r5.b 			  ## vm_sfc.c:1545:9
  115bd0:    ff e1 6f de 	call -1076 <spi_writebyte : 1157a0 >			  ## vm_sfc.c:1545:9
  115bd4:    80 f3 60 be 	r0 = r6 & 190 			  ## vm_sfc.c:1538:36
  115bd8:    00 f0 0c 0a 	r12 = r0 | r10 			  ## vm_sfc.c:1538:44
  115bdc:    6c 20       	if (r4 != 0) goto 12 <norflash_write_protect_config+0x122 : 115bea >			  ## vm_sfc.c:1538:44
  115bde:    00 f4 b0 01 	tst r11, 1			  ## vm_sfc.c:1582:13
  115be2:    14 10       	ifs (nzcv == 0) goto 40 <norflash_write_protect_config+0x144 : 115c0c >			  ## vm_sfc.c:1582:13
  115be4:    17 08       	goto 46 <norflash_write_protect_config+0x14C : 115c14 >			  ## vm_sfc.c:1582:13
  115be6:    00 80       	r0 = 0 
  115be8:    55 08       	goto 170 <norflash_write_protect_config+0x1CC : 115c94 >
  115bea:    08 80       	r0 = 1 			  ## vm_sfc.c:1546:9
  115bec:    75 e1 8f 27 	call -1137424 <spi_cs : e0 >			  ## vm_sfc.c:1546:9
  115bf0:    ff e1 3f e2 	call -954 <norflash_wait_ok : 11583a >			  ## vm_sfc.c:1547:9
  115bf4:    00 f4 b0 01 	tst r11, 1			  ## vm_sfc.c:1549:13
  115bf8:    12 11       	ifs (nzcv != 0) goto 36 <norflash_write_protect_config+0x156 : 115c1e >			  ## vm_sfc.c:1549:13
  115bfa:    38 c6       	r0 = r7 			  ## vm_sfc.c:1551:13
  115bfc:    ff e1 0f e1 	call -992 <norflash_write_enable_mode : 115820 >			  ## vm_sfc.c:1551:13
  115c00:    00 80       	r0 = 0 			  ## vm_sfc.c:1552:13
  115c02:    75 e1 df 26 	call -1137446 <spi_cs : e0 >			  ## vm_sfc.c:1552:13
  115c06:    88 81       	r0 = 49 			  ## vm_sfc.c:1553:13
  115c08:    ff e1 af dc 	call -1132 <spi_writebyte : 1157a0 >			  ## vm_sfc.c:1553:13
  115c0c:    00 ec c0 00 	r0 = r12.b 
  115c10:    ff e1 6f dc 	call -1140 <spi_writebyte : 1157a0 >
  115c14:    08 80       	r0 = 1 
  115c16:    75 e1 3f 26 	call -1137466 <spi_cs : e0 >
  115c1a:    ff e1 ef e0 	call -996 <norflash_wait_ok : 11583a >
  115c1e:    00 80       	r0 = 0 
  115c20:    75 e1 ef 25 	call -1137476 <spi_cs : e0 >
  115c24:    28 80       	r0 = 5 
  115c26:    ff e1 bf db 	call -1162 <spi_writebyte : 1157a0 >
  115c2a:    ff e1 1f de 	call -1086 <spi_readbyte : 1157f0 >
  115c2e:    07 c6       	r7 = r0 
  115c30:    08 80       	r0 = 1 
  115c32:    75 e1 5f 25 	call -1137494 <spi_cs : e0 >
  115c36:    00 f4 b0 01 	tst r11, 1
  115c3a:    0c 11       	ifs (nzcv != 0) goto 24 <norflash_write_protect_config+0x18C : 115c54 >
  115c3c:    00 80       	r0 = 0 
  115c3e:    75 e1 ff 24 	call -1137506 <spi_cs : e0 >
  115c42:    a8 81       	r0 = 53 
  115c44:    ff e1 cf da 	call -1192 <spi_writebyte : 1157a0 >
  115c48:    ff e1 2f dd 	call -1116 <spi_readbyte : 1157f0 >
  115c4c:    06 c6       	r6 = r0 
  115c4e:    08 80       	r0 = 1 
  115c50:    75 e1 6f 24 	call -1137524 <spi_cs : e0 >
  115c54:    80 f3 70 7c 	r0 = r7 & 124 			  ## vm_sfc.c:1604:23
  115c58:    0c 80       	r4 = 1 			  ## vm_sfc.c:1604:23
  115c5a:    05 ce       	cmp r0, r5			  ## vm_sfc.c:1604:39
  115c5c:    08 11       	ifs (nzcv != 0) goto 16 <norflash_write_protect_config+0x1A6 : 115c6e >			  ## vm_sfc.c:1604:39
  115c5e:    80 f3 61 40 	r1 = r6 & 64 			  ## vm_sfc.c:1605:24
  115c62:    08 80       	r0 = 1 			  ## vm_sfc.c:1605:32
  115c64:    4a ce       	cmp r1, r10			  ## vm_sfc.c:1605:32
  115c66:    00 03       	ifs (nzcv == 0) {			  ## vm_sfc.c:1605:32
  115c68:    00 80       		r0 = 0 
                               	}			  ## vm_sfc.c:1605:32
  115c6a:    c0 f0 04 0b 	r4 = r0 & ~r11 			  ## vm_sfc.c:1605:40
  115c6e:    80 ef 90 00 	cmp r9, 0			  ## vm_sfc.c:1610:9
  115c72:    10 03       	ifs (nzcv != 0) {			  ## vm_sfc.c:1611:9
  115c74:    ff e1 0f f1 		call -480
                               	} <enter_continue_mode : 115a98 >			  ## vm_sfc.c:1611:9
  115c78:    ff e1 8f f1 	call -464 <exit_spi_code : 115aac >			  ## vm_sfc.c:1613:5
  115c7c:    84 20       	if (r4 == 0) goto 16 <norflash_write_protect_config+0x1C6 : 115c8e >
  115c7e:    60 e8 fa 00 	[sp + 0] = r10 			  ## vm_sfc.c:1616:9
  115c82:    40 29       	r0 = [addr(20)]  <.GCPI222_0 : 115c98 >			  ## vm_sfc.c:1616:9
  115c84:    39 c6       	r1 = r7 			  ## vm_sfc.c:1616:9
  115c86:    2a c6       	r2 = r5 			  ## vm_sfc.c:1616:9
  115c88:    33 c6       	r3 = r6 			  ## vm_sfc.c:1616:9
  115c8a:    d6 e1 7f 9a 	call -339122 <xprintf : c2fdc >			  ## vm_sfc.c:1616:9
  115c8e:    00 80       	r0 = 0 			  ## vm_sfc.c:1615:9
  115c90:    1c 20       	if (r4 != 0) goto 2 <norflash_write_protect_config+0x1CC : 115c94 >
  115c92:    80 c6       	r0 = r8 			  ## vm_sfc.c:1657:12
  115c94:    04 cd       	sp += 4 
  115c96:    1d c0       	{pc, r13-r4} = [sp++] 


.GCPI222_0:
  115c98:    54 c5 11 00     < 1164628 : 0x11C554 >

norflash_entry_sleep:
  115c9c:    14 c2       	[--sp] = {rets, r4} 			  ## vm_sfc.c:1153:0
  115c9e:    ff e1 1f d6 	call -1342 <enter_spi_code : 115764 >			  ## vm_sfc.c:1154:5
  115ca2:    ff e1 5f d8 	call -1270 <exit_continue_mode : 1157b0 >			  ## vm_sfc.c:1155:21
  115ca6:    04 c6       	r4 = r0 			  ## vm_sfc.c:1155:21
  115ca8:    00 80       	r0 = 0 			  ## vm_sfc.c:1157:5
  115caa:    75 e1 9f 21 	call -1137614 <spi_cs : e0 >			  ## vm_sfc.c:1157:5
  115cae:    10 ea b9 00 	r0 = 185 			  ## vm_sfc.c:1158:5
  115cb2:    ff e1 5f d7 	call -1302 <spi_writebyte : 1157a0 >			  ## vm_sfc.c:1158:5
  115cb6:    08 80       	r0 = 1 			  ## vm_sfc.c:1159:5
  115cb8:    75 e1 2f 21 	call -1137628 <spi_cs : e0 >			  ## vm_sfc.c:1159:5
  115cbc:    24 20       	if (r4 == 0) goto 4 <norflash_entry_sleep+0x26 : 115cc2 >			  ## vm_sfc.c:1159:5
  115cbe:    ff e1 bf ee 	call -554 <enter_continue_mode : 115a98 >			  ## vm_sfc.c:1162:9
  115cc2:    ff e1 3f ef 	call -538 <exit_spi_code : 115aac >			  ## vm_sfc.c:1164:5
  115cc6:    14 c0       	{pc, r4} = [sp++] 			  ## vm_sfc.c:1164:5


_norflash_read:
  115cc8:    16 c2       	[--sp] = {rets, r6-r4} 			  ## vm_sfc.c:572:0
  115cca:    14 c6       	r4 = r2 			  ## vm_sfc.c:572:0
  115ccc:    0d c6       	r5 = r1 			  ## vm_sfc.c:572:0
  115cce:    06 c6       	r6 = r0 			  ## vm_sfc.c:572:0
  115cd0:    ff e1 8f d4 	call -1392 <enter_spi_code : 115764 >			  ## vm_sfc.c:574:5
  115cd4:    62 c9       	r2 = r4.l 			  ## vm_sfc.c:576:5
  115cd6:    30 c6       	r0 = r6 			  ## vm_sfc.c:576:5
  115cd8:    29 c6       	r1 = r5 			  ## vm_sfc.c:576:5
  115cda:    03 80       	r3 = 0 			  ## vm_sfc.c:576:5
  115cdc:    ff e1 ef e3 	call -900 <__norflash_read : 11595c >			  ## vm_sfc.c:576:5
  115ce0:    ff e1 4f ee 	call -568 <exit_spi_code : 115aac >			  ## vm_sfc.c:578:5
  115ce4:    20 c6       	r0 = r4 			  ## vm_sfc.c:579:5
  115ce6:    16 c0       	{pc, r6-r4} = [sp++] 			  ## vm_sfc.c:579:5


_norflash_write:
  115ce8:    18 c2       	[--sp] = {rets, r8-r4} 			  ## vm_sfc.c:761:0
  115cea:    14 c6       	r4 = r2 			  ## vm_sfc.c:761:0
  115cec:    0d c6       	r5 = r1 			  ## vm_sfc.c:761:0
  115cee:    06 c6       	r6 = r0 			  ## vm_sfc.c:761:0
  115cf0:    34 23       	if (r4 == 0) goto 102 <_norflash_write+0x70 : 115d58 >			  ## vm_sfc.c:761:0
  115cf2:    80 2e       	r0 = [addr(104)]  <.GCPI341_0 : 115d5c >			  ## vm_sfc.c:726:9
  115cf4:    20 e8 02 12 	r2 = [r0 + 72] 			  ## vm_sfc.c:726:9
  115cf8:    42 20       	if (r2 == 0) goto 8 <_norflash_write+0x1A : 115d02 >			  ## vm_sfc.c:726:9
  115cfa:    28 c6       	r0 = r5 			  ## vm_sfc.c:727:13
  115cfc:    21 c6       	r1 = r4 			  ## vm_sfc.c:727:13
  115cfe:    aa 01       	call r2			  ## vm_sfc.c:727:13
  115d00:    b8 22       	if (r0 != 0) goto 86 <_norflash_write+0x70 : 115d58 >			  ## vm_sfc.c:727:13
  115d02:    ff e1 ff d2 	call -1442 <enter_spi_code : 115764 >			  ## vm_sfc.c:731:5
  115d06:    ff e1 3f d5 	call -1370 <exit_continue_mode : 1157b0 >			  ## vm_sfc.c:732:21
  115d0a:    40 c6       	r8 = r0 			  ## vm_sfc.c:732:21
  115d0c:    ff e1 ef d7 	call -1284 <norflash_write_enable : 11580c >			  ## vm_sfc.c:734:5
  115d10:    07 80       	r7 = 0 			  ## vm_sfc.c:734:5
  115d12:    00 80       	r0 = 0 			  ## vm_sfc.c:736:5
  115d14:    75 e1 4f 1e 	call -1137720 <spi_cs : e0 >			  ## vm_sfc.c:736:5
  115d18:    10 80       	r0 = 2 			  ## vm_sfc.c:738:5
  115d1a:    ff e1 1f d4 	call -1406 <spi_writebyte : 1157a0 >			  ## vm_sfc.c:738:5
  115d1e:    28 c6       	r0 = r5 			  ## vm_sfc.c:740:5
  115d20:    ff e1 4f da 	call -1208 <norflash_send_addr : 11586c >			  ## vm_sfc.c:740:5
  115d24:    05 08       	goto 10 <_norflash_write+0x48 : 115d30 >			  ## vm_sfc.c:740:5
  115d26:    00 e7 60 07 	r0 = b[r6 + r7] 			  ## vm_sfc.c:744:9
  115d2a:    ff e1 9f d3 	call -1422 <spi_writebyte : 1157a0 >			  ## vm_sfc.c:744:9
  115d2e:    7f d0       	r7 = r7 + 1 			  ## vm_sfc.c:743:5
  115d30:    27 ce       	cmp r4, r7			  ## vm_sfc.c:743:5
  115d32:    f9 11       	ifs (nzcv != 0) goto -14 <_norflash_write+0x3E : 115d26 >			  ## vm_sfc.c:743:5
  115d34:    08 80       	r0 = 1 			  ## vm_sfc.c:747:5
  115d36:    75 e1 3f 1d 	call -1137754 <spi_cs : e0 >			  ## vm_sfc.c:747:5
  115d3a:    28 c6       	r0 = r5 			  ## vm_sfc.c:749:26
  115d3c:    ff e1 4f cf 	call -1560 <flash_addr2cpu_addr.645 : 115728 >			  ## vm_sfc.c:749:26
  115d40:    21 c6       	r1 = r4 			  ## vm_sfc.c:749:5
  115d42:    d6 e1 5f 93 	call -339350 <sfc_drop_cache : c2fb0 >			  ## vm_sfc.c:749:5
  115d46:    ff e1 8f d7 	call -1296 <norflash_wait_ok : 11583a >			  ## vm_sfc.c:750:5
  115d4a:    80 ef 80 00 	cmp r8, 0			  ## vm_sfc.c:752:9
  115d4e:    10 03       	ifs (nzcv != 0) {			  ## vm_sfc.c:753:9
  115d50:    ff e1 2f ea 		call -700
                               	} <enter_continue_mode : 115a98 >			  ## vm_sfc.c:753:9
  115d54:    ff e1 af ea 	call -684 <exit_spi_code : 115aac >			  ## vm_sfc.c:756:5
  115d58:    18 c0       	{pc, r8-r4} = [sp++] 
  115d5a:    00 00       	nop


.GCPI341_0:
  115d5c:    60 1c 00 00     < 7264 : 0x1C60 >

read_flash_id:
  115d60:    17 c2       	[--sp] = {rets, r7-r4} 			  ## vm_sfc.c:889:0
  115d62:    ff e1 ff cf 	call -1538 <enter_spi_code : 115764 >			  ## vm_sfc.c:890:5
  115d66:    ff e1 3f d2 	call -1466 <exit_continue_mode : 1157b0 >			  ## vm_sfc.c:891:21
  115d6a:    04 c6       	r4 = r0 			  ## vm_sfc.c:891:21
  115d6c:    06 80       	r6 = 0 
  115d6e:    00 80       	r0 = 0 			  ## vm_sfc.c:894:5
  115d70:    75 e1 6f 1b 	call -1137812 <spi_cs : e0 >			  ## vm_sfc.c:894:5
  115d74:    10 ea 9f 00 	r0 = 159 			  ## vm_sfc.c:895:5
  115d78:    ff e1 2f d1 	call -1500 <spi_writebyte : 1157a0 >			  ## vm_sfc.c:895:5
  115d7c:    c5 2f       	r5 = [addr(124)]  <.GCPI343_0 : 115df8 >			  ## vm_sfc.c:896:25
  115d7e:    60 e8 56 27 	[r5 + 156] = r6 			  ## vm_sfc.c:896:25
  115d82:    1b 80       	r3 = 3 			  ## vm_sfc.c:896:25
  115d84:    09 08       	goto 18 <read_flash_id+0x38 : 115d98 >
  115d86:    ff e1 3f d3 	call -1434 <spi_readbyte : 1157f0 >			  ## vm_sfc.c:898:32
  115d8a:    29 c6       	r1 = r5 			  ## vm_sfc.c:898:29
  115d8c:    24 e8 12 27 	r2 = [++ r1 = 156] 			  ## vm_sfc.c:898:29
  115d90:    10 da       	r0 |= r2 			  ## vm_sfc.c:898:29
  115d92:    00 a8       	r0 = r0 << 8 			  ## vm_sfc.c:899:29
  115d94:    08 68       	[r1 + 0] = r0 			  ## vm_sfc.c:899:29
  115d96:    db d3       	r3 = r3 + -1 			  ## vm_sfc.c:897:5
  115d98:    6b 27       	if (r3 != 0) goto -20 <read_flash_id+0x26 : 115d86 >
  115d9a:    08 80       	r0 = 1 			  ## vm_sfc.c:901:5
  115d9c:    75 e1 0f 1a 	call -1137856 <spi_cs : e0 >			  ## vm_sfc.c:901:5
  115da0:    06 80       	r6 = 0 
  115da2:    00 80       	r0 = 0 			  ## vm_sfc.c:906:5
  115da4:    75 e1 cf 19 	call -1137864 <spi_cs : e0 >			  ## vm_sfc.c:906:5
  115da8:    58 82       	r0 = 75 			  ## vm_sfc.c:907:5
  115daa:    ff e1 9f cf 	call -1550 <spi_writebyte : 1157a0 >			  ## vm_sfc.c:907:5
  115dae:    00 80       	r0 = 0 			  ## vm_sfc.c:908:5
  115db0:    ff e1 6f cf 	call -1556 <spi_writebyte : 1157a0 >			  ## vm_sfc.c:908:5
  115db4:    00 80       	r0 = 0 			  ## vm_sfc.c:909:5
  115db6:    ff e1 3f cf 	call -1562 <spi_writebyte : 1157a0 >			  ## vm_sfc.c:909:5
  115dba:    00 80       	r0 = 0 			  ## vm_sfc.c:910:5
  115dbc:    ff e1 0f cf 	call -1568 <spi_writebyte : 1157a0 >			  ## vm_sfc.c:910:5
  115dc0:    00 80       	r0 = 0 			  ## vm_sfc.c:911:5
  115dc2:    ff e1 df ce 	call -1574 <spi_writebyte : 1157a0 >			  ## vm_sfc.c:911:5
  115dc6:    13 ea 84 00 	r3 = 132 
  115dca:    06 08       	goto 12 <read_flash_id+0x78 : 115dd8 >
  115dcc:    af d5       	r7 = r5 + r6 			  ## vm_sfc.c:913:34
  115dce:    ff e1 ff d0 	call -1506 <spi_readbyte : 1157f0 >			  ## vm_sfc.c:913:36
  115dd2:    40 e7 70 03 	b[r7 + r3] = r0 			  ## vm_sfc.c:913:34
  115dd6:    76 d0       	r6 = r6 + 1 			  ## vm_sfc.c:912:27
  115dd8:    86 98       	cmp r6, 16			  ## vm_sfc.c:912:5
  115dda:    f8 11       	ifs (nzcv != 0) goto -16 <read_flash_id+0x6C : 115dcc >			  ## vm_sfc.c:912:5
  115ddc:    08 80       	r0 = 1 			  ## vm_sfc.c:915:5
  115dde:    75 e1 ff 17 	call -1137922 <spi_cs : e0 >			  ## vm_sfc.c:915:5
  115de2:    24 20       	if (r4 == 0) goto 4 <read_flash_id+0x88 : 115de8 >			  ## vm_sfc.c:915:5
  115de4:    ff e1 8f e5 	call -848 <enter_continue_mode : 115a98 >			  ## vm_sfc.c:918:9
  115de8:    24 e8 50 27 	r0 = [++ r5 = 156] 			  ## vm_sfc.c:920:25
  115dec:    40 a8       	r0 = r0 >> 8 			  ## vm_sfc.c:920:25
  115dee:    28 68       	[r5 + 0] = r0 			  ## vm_sfc.c:920:25
  115df0:    ff e1 cf e5 	call -840 <exit_spi_code : 115aac >			  ## vm_sfc.c:921:5
  115df4:    17 c0       	{pc, r7-r4} = [sp++] 			  ## vm_sfc.c:921:5
  115df6:    00 00       	nop			  ## vm_sfc.c:921:5


.GCPI343_0:
  115df8:    60 1d 00 00     < 7520 : 0x1D60 >

norflash_erase:
  115dfc:    18 c2       	[--sp] = {rets, r8-r4} 			  ## vm_sfc.c:811:0
  115dfe:    fc 87       	r4 = -1 			  ## vm_sfc.c:811:0
  115e00:    80 ef 00 c8 	cmp r0, 200			  ## vm_sfc.c:813:9
  115e04:    0b 10       	ifs (nzcv == 0) goto 22 <norflash_erase+0x20 : 115e1c >			  ## vm_sfc.c:813:9
  115e06:    80 ef 00 cc 	cmp r0, 204
  115e0a:    0c 10       	ifs (nzcv == 0) goto 24 <norflash_erase+0x28 : 115e24 >
  115e0c:    80 ef 00 c9 	cmp r0, 201
  115e10:    41 11       	ifs (nzcv != 0) goto 130 <norflash_erase+0x98 : 115e94 >
  115e12:    16 ea d8 00 	r6 = 216 
  115e16:    2b ea 05 80 	r5 = 65536 
  115e1a:    08 08       	goto 16 <norflash_erase+0x30 : 115e2c >
  115e1c:    06 81       	r6 = 32 
  115e1e:    15 ea 00 10 	r5 = 4096 
  115e22:    04 08       	goto 8 <norflash_erase+0x30 : 115e2c >
  115e24:    16 ea 81 00 	r6 = 129 
  115e28:    15 ea 00 01 	r5 = 256 
  115e2c:    a8 dc       	r0 = -r5 			  ## vm_sfc.c:828:13
  115e2e:    80 f0 07 01 	r7 = r0 & r1 			  ## vm_sfc.c:828:10
  115e32:    41 2e       	r1 = [addr(100)]  <.GCPI345_0 : 115e98 >			  ## vm_sfc.c:831:35
  115e34:    20 e8 11 26 	r1 = [r1 + 152] 			  ## vm_sfc.c:831:35
  115e38:    88 da       	r0 &= r1 			  ## vm_sfc.c:831:50
  115e3a:    38 ce       	cmp r7, r0			  ## vm_sfc.c:832:9
  115e3c:    2b 10       	ifs (nzcv == 0) goto 86 <norflash_erase+0x98 : 115e94 >			  ## vm_sfc.c:832:9
  115e3e:    c0 2d       	r0 = [addr(92)]  <.GCPI345_1 : 115e9c >			  ## vm_sfc.c:846:9
  115e40:    20 e8 02 12 	r2 = [r0 + 72] 			  ## vm_sfc.c:846:9
  115e44:    42 20       	if (r2 == 0) goto 8 <norflash_erase+0x52 : 115e4e >			  ## vm_sfc.c:846:9
  115e46:    38 c6       	r0 = r7 			  ## vm_sfc.c:847:13
  115e48:    29 c6       	r1 = r5 			  ## vm_sfc.c:847:13
  115e4a:    aa 01       	call r2			  ## vm_sfc.c:847:13
  115e4c:    38 22       	if (r0 != 0) goto 70 <norflash_erase+0x98 : 115e94 >			  ## vm_sfc.c:847:13
  115e4e:    ff e1 9f c8 	call -1774 <enter_spi_code : 115764 >			  ## vm_sfc.c:853:5
  115e52:    ff e1 df ca 	call -1702 <exit_continue_mode : 1157b0 >			  ## vm_sfc.c:854:21
  115e56:    40 c6       	r8 = r0 			  ## vm_sfc.c:854:21
  115e58:    ff e1 8f cd 	call -1616 <norflash_write_enable : 11580c >			  ## vm_sfc.c:856:5
  115e5c:    04 80       	r4 = 0 			  ## vm_sfc.c:856:5
  115e5e:    00 80       	r0 = 0 			  ## vm_sfc.c:858:5
  115e60:    75 e1 ef 13 	call -1138052 <spi_cs : e0 >			  ## vm_sfc.c:858:5
  115e64:    30 c6       	r0 = r6 			  ## vm_sfc.c:859:5
  115e66:    ff e1 bf c9 	call -1738 <spi_writebyte : 1157a0 >			  ## vm_sfc.c:859:5
  115e6a:    38 c6       	r0 = r7 			  ## vm_sfc.c:860:5
  115e6c:    ff e1 ef cf 	call -1540 <norflash_send_addr : 11586c >			  ## vm_sfc.c:860:5
  115e70:    08 80       	r0 = 1 			  ## vm_sfc.c:861:5
  115e72:    75 e1 5f 13 	call -1138070 <spi_cs : e0 >			  ## vm_sfc.c:861:5
  115e76:    38 c6       	r0 = r7 			  ## vm_sfc.c:863:26
  115e78:    ff e1 6f c5 	call -1876 <flash_addr2cpu_addr.645 : 115728 >			  ## vm_sfc.c:863:26
  115e7c:    29 c6       	r1 = r5 			  ## vm_sfc.c:863:5
  115e7e:    d6 e1 7f 89 	call -339666 <sfc_drop_cache : c2fb0 >			  ## vm_sfc.c:863:5
  115e82:    ff e1 af cd 	call -1612 <norflash_wait_ok : 11583a >			  ## vm_sfc.c:864:5
  115e86:    80 ef 80 00 	cmp r8, 0			  ## vm_sfc.c:866:9
  115e8a:    10 03       	ifs (nzcv != 0) {			  ## vm_sfc.c:867:9
  115e8c:    ff e1 4f e0 		call -1016
                               	} <enter_continue_mode : 115a98 >			  ## vm_sfc.c:867:9
  115e90:    ff e1 cf e0 	call -1000 <exit_spi_code : 115aac >			  ## vm_sfc.c:870:5
  115e94:    20 c6       	r0 = r4 			  ## vm_sfc.c:872:1
  115e96:    18 c0       	{pc, r8-r4} = [sp++] 			  ## vm_sfc.c:872:1


.GCPI345_0:
  115e98:    60 1d 00 00     < 7520 : 0x1D60 >

.GCPI345_1:
  115e9c:    60 1c 00 00     < 7264 : 0x1C60 >

sfc_drop_cache_api:
  115ea0:    14 c2       	[--sp] = {rets, r4} 			  ## vm_sfc.c:876:0
  115ea2:    04 c6       	r4 = r0 			  ## vm_sfc.c:876:0
  115ea4:    d6 e1 ef 83 	call -339844 <local_irq_disable : c2f24 >			  ## vm_sfc.c:877:5
  115ea8:    ff e1 8f c4 	call -1904 <load_spi_code2cache : 11573c >			  ## vm_sfc.c:878:5
  115eac:    00 80       	r0 = 0 			  ## vm_sfc.c:879:5
  115eae:    75 e1 bf 2b 	call -1137290 <sfc_suspend : 428 >			  ## vm_sfc.c:879:5
  115eb2:    20 c6       	r0 = r4 			  ## vm_sfc.c:881:26
  115eb4:    ff e1 8f c3 	call -1936 <flash_addr2cpu_addr.645 : 115728 >			  ## vm_sfc.c:881:26
  115eb8:    01 81       	r1 = 32 			  ## vm_sfc.c:881:5
  115eba:    d6 e1 9f 87 	call -339726 <sfc_drop_cache : c2fb0 >			  ## vm_sfc.c:881:5
  115ebe:    00 80       	r0 = 0 			  ## vm_sfc.c:883:5
  115ec0:    d6 e1 4f 87 	call -339736 <sfc_resume : c2fac >			  ## vm_sfc.c:883:5
  115ec4:    d6 e1 cf 82 	call -339880 <local_irq_enable : c2f20 >			  ## vm_sfc.c:884:5
  115ec8:    14 c0       	{pc, r4} = [sp++] 			  ## vm_sfc.c:884:5


norflash_get_uuid:
  115eca:    16 c2       	[--sp] = {rets, r6-r4} 			  ## vm_sfc.c:931:0
  115ecc:    04 c6       	r4 = r0 			  ## vm_sfc.c:931:0
  115ece:    ff e1 9f c4 	call -1902 <enter_spi_code : 115764 >			  ## vm_sfc.c:932:5
  115ed2:    ff e1 df c6 	call -1830 <exit_continue_mode : 1157b0 >			  ## vm_sfc.c:933:21
  115ed6:    05 c6       	r5 = r0 			  ## vm_sfc.c:933:21
  115ed8:    06 80       	r6 = 0 
  115eda:    00 80       	r0 = 0 			  ## vm_sfc.c:935:5
  115edc:    75 e1 0f 10 	call -1138176 <spi_cs : e0 >			  ## vm_sfc.c:935:5
  115ee0:    58 82       	r0 = 75 			  ## vm_sfc.c:936:5
  115ee2:    ff e1 df c5 	call -1862 <spi_writebyte : 1157a0 >			  ## vm_sfc.c:936:5
  115ee6:    00 80       	r0 = 0 			  ## vm_sfc.c:937:5
  115ee8:    ff e1 af c5 	call -1868 <spi_writebyte : 1157a0 >			  ## vm_sfc.c:937:5
  115eec:    00 80       	r0 = 0 			  ## vm_sfc.c:938:5
  115eee:    ff e1 7f c5 	call -1874 <spi_writebyte : 1157a0 >			  ## vm_sfc.c:938:5
  115ef2:    00 80       	r0 = 0 			  ## vm_sfc.c:939:5
  115ef4:    ff e1 4f c5 	call -1880 <spi_writebyte : 1157a0 >			  ## vm_sfc.c:939:5
  115ef8:    00 80       	r0 = 0 			  ## vm_sfc.c:940:5
  115efa:    ff e1 1f c5 	call -1886 <spi_writebyte : 1157a0 >			  ## vm_sfc.c:940:5
  115efe:    05 08       	goto 10 <norflash_get_uuid+0x40 : 115f0a >
  115f00:    ff e1 6f c7 	call -1812 <spi_readbyte : 1157f0 >			  ## vm_sfc.c:942:19
  115f04:    40 e7 40 06 	b[r4 + r6] = r0 			  ## vm_sfc.c:942:17
  115f08:    76 d0       	r6 = r6 + 1 			  ## vm_sfc.c:941:31
  115f0a:    86 98       	cmp r6, 16			  ## vm_sfc.c:941:5
  115f0c:    f9 11       	ifs (nzcv != 0) goto -14 <norflash_get_uuid+0x36 : 115f00 >			  ## vm_sfc.c:941:5
  115f0e:    08 80       	r0 = 1 			  ## vm_sfc.c:944:5
  115f10:    75 e1 6f 0e 	call -1138228 <spi_cs : e0 >			  ## vm_sfc.c:944:5
  115f14:    25 20       	if (r5 == 0) goto 4 <norflash_get_uuid+0x50 : 115f1a >			  ## vm_sfc.c:944:5
  115f16:    ff e1 ff db 	call -1154 <enter_continue_mode : 115a98 >			  ## vm_sfc.c:946:9
  115f1a:    ff e1 7f dc 	call -1138 <exit_spi_code : 115aac >			  ## vm_sfc.c:948:5
  115f1e:    16 c0       	{pc, r6-r4} = [sp++] 			  ## vm_sfc.c:948:5


norflash_read_otp_page:
  115f20:    17 c2       	[--sp] = {rets, r7-r4} 			  ## vm_sfc.c:1913:0
  115f22:    17 c6       	r7 = r2 			  ## vm_sfc.c:1913:0
  115f24:    0c c6       	r4 = r1 			  ## vm_sfc.c:1913:0
  115f26:    05 c6       	r5 = r0 			  ## vm_sfc.c:1913:0
  115f28:    f4 21       	if (r4 == 0) goto 62 <norflash_read_otp_page+0x48 : 115f68 >			  ## vm_sfc.c:1913:0
  115f2a:    ff e1 bf c1 	call -1994 <enter_spi_code : 115764 >			  ## vm_sfc.c:1919:5
  115f2e:    ff e1 ff c3 	call -1922 <exit_continue_mode : 1157b0 >			  ## vm_sfc.c:1920:21
  115f32:    06 c6       	r6 = r0 			  ## vm_sfc.c:1920:21
  115f34:    00 80       	r0 = 0 			  ## vm_sfc.c:1922:5
  115f36:    75 e1 3f 0d 	call -1138266 <spi_cs : e0 >			  ## vm_sfc.c:1922:5
  115f3a:    40 82       	r0 = 72 			  ## vm_sfc.c:1923:5
  115f3c:    ff e1 0f c3 	call -1952 <spi_writebyte : 1157a0 >			  ## vm_sfc.c:1923:5
  115f40:    38 c6       	r0 = r7 			  ## vm_sfc.c:1924:5
  115f42:    ff e1 3f c9 	call -1754 <norflash_send_addr : 11586c >			  ## vm_sfc.c:1924:5
  115f46:    ff e1 3f c5 	call -1882 <spi_readbyte : 1157f0 >			  ## vm_sfc.c:1925:5
  115f4a:    05 08       	goto 10 <norflash_read_otp_page+0x36 : 115f56 >
  115f4c:    ff e1 0f c5 	call -1888 <spi_readbyte : 1157f0 >			  ## vm_sfc.c:1927:21
  115f50:    48 e8 50 40 	b[r5 ++= 1] = r0 			  ## vm_sfc.c:1927:19
  115f54:    e4 d3       	r4 = r4 + -1 			  ## vm_sfc.c:1926:5
  115f56:    ac 27       	if (r4 != 0) goto -12 <norflash_read_otp_page+0x2C : 115f4c >			  ## vm_sfc.c:1926:5
  115f58:    08 80       	r0 = 1 			  ## vm_sfc.c:1929:5
  115f5a:    75 e1 1f 0c 	call -1138302 <spi_cs : e0 >			  ## vm_sfc.c:1929:5
  115f5e:    26 20       	if (r6 == 0) goto 4 <norflash_read_otp_page+0x44 : 115f64 >			  ## vm_sfc.c:1929:5
  115f60:    ff e1 af d9 	call -1228 <enter_continue_mode : 115a98 >			  ## vm_sfc.c:1932:9
  115f64:    ff e1 2f da 	call -1212 <exit_spi_code : 115aac >			  ## vm_sfc.c:1935:5
  115f68:    17 c0       	{pc, r7-r4} = [sp++] 
  115f6a:    00 00       	nop


_SPI_CODE_END:
  115f6c:    00 00       	nop
  115f6e:    00 00       	nop
  115f70:    00 00       	nop
  115f72:    00 00       	nop
  115f74:    00 00       	nop
  115f76:    00 00       	nop
  115f78:    00 00       	nop
  115f7a:    00 00       	nop
  115f7c:    00 00       	nop
  115f7e:    00 00       	nop


decoder_mutual:
  115f80:	 7c 43 10 00 90 43 10 00         |C...C..
  115f88:	 6c 5e 10 00 e4 3f 10 00         l^...?..
  115f90:	 10 4e 10 00 48 5b 10 00         .N..H[..


decoder_tab:
  115f98:	 44 43 10 00 60 43 10 00         DC..`C..
  115fa0:	 6c 5d 10 00 b0 3e 10 00         l]...>..
  115fa8:	 1a 4c 10 00 90 4f 10 00         .L...O..


a_evt:
  115fb0:	 09 ff ff 0a ff ff ff ff         ........
  115fb8:	 ff 0b                           ..


f1a_evt:
  115fba:	 00 ff ff 01 ff ff ff ff         ........
  115fc2:	 ff 02 03 ff ff 04 ff ff         ........
  115fca:	 ff ff ff 05                     ....


midi_evt:
  115fce:	 06 ff ff 07 ff ff ff ff         ........
  115fd6:	 ff ff                           ..


ump3_evt:
  115fd8:	 0c ff ff 0d ff ff ff ff         ........
  115fe0:	 ff 0e 00 00                     ....


a_dec_io0:
  115fe4:	 18 1e 00 00 80 5e 10 00         .....^..
  115fec:	 b8 5e 10 00                     .^..


a_ext:
  115ff0:	 2e 61 00                        .a.


b_ext:
  115ff3:	 2e 62 00 00 00                  .b...


f1a_dec_io:
  115ff8:	 a8 1f 00 00 80 5e 10 00         .....^..
  116000:	 b8 5e 10 00 e0 1f 00 00         .^......
  116008:	 80 5e 10 00 b8 5e 10 00         .^...^..


f1a_ext:
  116010:	 2e 66 31 61 00                  .f1a.


f1b_ext:
  116015:	 2e 66 31 62 00                  .f1b.


f1c_ext:
  11601a:	 2e 66 31 63 00                  .f1c.


f1x_ext:
  11601f:	 2e 66 31 78 00                  .f1x.


f1x_io:
  116024:	 b0 4a 00 00 a4 43 10 00         .J...C..
  11602c:	 e8 4a 00 00 a4 43 10 00         .J...C..


midi_dec_io0:
  116034:	 50 1e 00 00 80 5e 10 00         P....^..
  11603c:	 b8 5e 10 00                     .^..


midi_ctrl_ops:
  116040:	 95 ab 11 00 24 4e 10 00         ....$N..
  116048:	 6e 50 10 00 b6 56 10 00         nP...V..
  116050:	 30 5b 10 00 34 5b 10 00         0[..4[..
  116058:	 38 5b 10 00 68 50 10 00         8[..hP..
  116060:	 3c 5b 10 00 40 5b 10 00         <[..@[..


ump3_dec_io0:
  116068:	 c0 1e 00 00 80 5e 10 00         .....^..
  116070:	 b8 5e 10 00                     .^..


mp3_enc_io.113:
  116074:	 88 1d 00 00 1c 06 11 00         ........
  11607c:	 42 06 11 00                     B...


ad_key_table:
  116080:	 2e 00 8a 00 ff 00 72 01         ......r.
  116088:	 ce 01 32 02 9b 02 14 03         ..2.....
  116090:	 7c 03                           |.


event2msg:
  116092:	 00 08 01 08 02 08 03 08         ........
  11609a:	 04 08 05 08 06 08 07 08         ........
  1160a2:	 ff 0f 08 08 09 08 0a 08         ........
  1160aa:	 0b 08 0c 08 0d 08 0e 08         ........
  1160b2:	 0f 08 10 08 0e 00 11 08         ........
  1160ba:	 12 08 13 08 39 06 3d 06         ....9.=.
  1160c2:	 14 08 15 08 16 08 17 08         ........
  1160ca:	 3a 06 3e 06 44 06 45 06         :.>.D.E.
  1160d2:	 3c 06 ff 0f 00 00               <.....


sppitch_io:
  1160d8:	 d8 33 00 00 9a 5e 10 00         .3...^..


wk_param:
  1160e0:	 00 00 00 00 00 00 00 00         ........
  1160e8:	 14 61 11 00 00 00 00 00         .a......
  1160f0:	 00 00 00 00 00 00 00 00         ........
  1160f8:	 00 00 00 00 00 00 00 00         ........
  116100:	 00 00 00 00 19 61 11 00         .....a..
  116108:	 00 00 00 00 00 00 00 00         ........
  116110:	 1a 61 11 00                     .a..


port0:
  116114:	 01 01 02 00 00                  .....


charge_wkup:
  116119:	 02                              .


sub_wkup:
  11611a:	 02 00                           ..


sys_power_ops:
  11611c:	 00 00 00 00 fc 7a 10 00         .....z..
  116124:	 00 00 00 00 08 7b 10 00         .....{..
  11612c:	 14 7b 10 00 00 00 00 00         .{......
  116134:	 00 00 00 00 00 00 00 00         ........
  11613c:	 00 00 00 00                     ....


vol_tab:
  116140:	 00 00 a4 00 bf 00 df 00         ........
  116148:	 04 01 2f 01 61 01 9c 01         ../.a...
  116150:	 e0 01 2f 02 8c 02 f8 02         ../.....
  116158:	 77 03 0a 04 b5 04 7d 05         w.....}.
  116160:	 66 06 76 07 b3 08 25 0a         f.v...%.
  116168:	 d4 0b ca 0d 13 10 be 12         ........
  116170:	 da 15 7b 19 b5 1d a3 22         ..{...."
  116178:	 62 28 15 2f e4 36 ff 3f         b(./.6.?


device_name:
  116180:	 00 00 00 00 76 cc 11 00         ....v...


adkey_msg_idle_table:
  116188:	 ff 0f ff 0f ff 0f ff 0f         ........
  116190:	 ff 0f ff 0f ff 0f ff 0f         ........
  116198:	 ff 0f ff 0f ff 0f ff 0f         ........
  1161a0:	 ff 0f ff 0f ff 0f ff 0f         ........
  1161a8:	 ff 0f ff 0f ff 0f ff 0f         ........
  1161b0:	 ff 0f ff 0f ff 0f ff 0f         ........
  1161b8:	 13 06 ff 0f ff 0f ff 0f         ........
  1161c0:	 ff 0f ff 0f ff 0f ff 0f         ........
  1161c8:	 ff 0f ff 0f ff 0f ff 0f         ........
  1161d0:	 ff 0f ff 0f ff 0f ff 0f         ........
  1161d8:	 11 00 ff 0f ff 0f ff 0f         ........
  1161e0:	 ff 0f ff 0f ff 0f ff 0f         ........
  1161e8:	 ff 0f ff 0f ff 0f ff 0f         ........
  1161f0:	 ff 0f ff 0f ff 0f ff 0f         ........
  1161f8:	 ff 0f ff 0f ff 0f ff 0f         ........


dir_midi_tab:
  116200:	 c7 be 11 00                     ....


dir_tab_a:
  116204:	 8b c1 11 00                     ....


adkey_msg_midi_keyboard_table:
  116208:	 1f 00 20 00 21 00 22 00         .. .!.".
  116210:	 ff 0f ff 0f ff 0f ff 0f         ........
  116218:	 ff 0f ff 0f ff 0f ff 0f         ........
  116220:	 ff 0f ff 0f 19 00 1a 00         ........
  116228:	 2d 00 2e 00 ff 0f ff 0f         -.......
  116230:	 ff 0f ff 0f ff 0f ff 0f         ........
  116238:	 13 06 ff 0f 30 00 2f 00         ....0./.
  116240:	 ff 0f ff 0f ff 0f ff 0f         ........
  116248:	 ff 0f ff 0f ff 0f ff 0f         ........
  116250:	 30 00 2f 00 ff 0f ff 0f         0./.....
  116258:	 26 00 27 00 28 00 29 00         &.'.(.).
  116260:	 ff 0f ff 0f ff 0f ff 0f         ........
  116268:	 ff 0f ff 0f ff 0f ff 0f         ........
  116270:	 ff 0f ff 0f ff 0f ff 0f         ........
  116278:	 ff 0f ff 0f ff 0f ff 0f         ........


adkey_msg_midi_table:
  116280:	 ff 0f ff 0f ff 0f ff 0f         ........
  116288:	 ff 0f ff 0f ff 0f ff 0f         ........
  116290:	 ff 0f ff 0f 14 00 16 00         ........
  116298:	 15 00 19 00 1a 00 1e 00         ........
  1162a0:	 ff 0f ff 0f ff 0f ff 0f         ........
  1162a8:	 ff 0f ff 0f 18 00 ff 0f         ........
  1162b0:	 13 06 1d 00 ff 0f ff 0f         ........
  1162b8:	 ff 0f ff 0f ff 0f ff 0f         ........
  1162c0:	 ff 0f ff 0f ff 0f ff 0f         ........
  1162c8:	 ff 0f ff 0f ff 0f ff 0f         ........
  1162d0:	 11 00 ff 0f ff 0f ff 0f         ........
  1162d8:	 ff 0f ff 0f ff 0f ff 0f         ........
  1162e0:	 ff 0f ff 0f ff 0f ff 0f         ........
  1162e8:	 ff 0f ff 0f ff 0f ff 0f         ........
  1162f0:	 ff 0f ff 0f ff 0f ff 0f         ........


dir_inr_vm_tab:
  1162f8:	 21 22 23 24 25 00 00 00         !"#$%...


dir_inr_tab:
  116300:	 92 c1 11 00 9c c1 11 00         ........
  116308:	 a5 c1 11 00 b1 c1 11 00         ........
  116310:	 bc c1 11 00                     ....


dir_tab_a.482:
  116314:	 8b c1 11 00                     ....


adkey_msg_music_table:
  116318:	 ff 0f ff 0f ff 0f ff 0f         ........
  116320:	 ff 0f ff 0f ff 0f ff 0f         ........
  116328:	 ff 0f ff 0f 14 00 16 00         ........
  116330:	 15 00 19 00 1a 00 ff 0f         ........
  116338:	 ff 0f ff 0f ff 0f ff 0f         ........
  116340:	 ff 0f 17 00 18 00 17 06         ........
  116348:	 13 06 ff 0f ff 0f ff 0f         ........
  116350:	 ff 0f ff 0f ff 0f ff 0f         ........
  116358:	 ff 0f ff 0f ff 0f ff 0f         ........
  116360:	 ff 0f ff 0f ff 0f ff 0f         ........
  116368:	 11 00 ff 0f ff 0f ff 0f         ........
  116370:	 ff 0f ff 0f ff 0f ff 0f         ........
  116378:	 ff 0f ff 0f ff 0f ff 0f         ........
  116380:	 ff 0f ff 0f ff 0f ff 0f         ........
  116388:	 ff 0f ff 0f ff 0f ff 0f         ........


adkey_msg_record_table:
  116390:	 ff 0f ff 0f ff 0f ff 0f         ........
  116398:	 ff 0f ff 0f ff 0f ff 0f         ........
  1163a0:	 ff 0f ff 0f 0b 00 14 00         ........
  1163a8:	 1c 00 19 00 1a 00 ff 0f         ........
  1163b0:	 ff 0f ff 0f ff 0f ff 0f         ........
  1163b8:	 11 00 ff 0f ff 0f 19 00         ........
  1163c0:	 1a 00 13 06 ff 0f ff 0f         ........
  1163c8:	 ff 0f ff 0f ff 0f ff 0f         ........
  1163d0:	 ff 0f 19 00 1a 00 ff 0f         ........
  1163d8:	 ff 0f ff 0f ff 0f ff 0f         ........
  1163e0:	 ff 0f ff 0f ff 0f ff 0f         ........
  1163e8:	 ff 0f ff 0f ff 0f ff 0f         ........
  1163f0:	 ff 0f ff 0f                     ....


adkey_msg_loudspk_table:
  1163f4:	 ff 0f ff 0f ff 0f ff 0f         ........
  1163fc:	 ff 0f ff 0f ff 0f ff 0f         ........
  116404:	 ff 0f ff 0f 14 00 ff 0f         ........
  11640c:	 ff 0f 19 00 1a 00 ff 0f         ........
  116414:	 ff 0f ff 0f ff 0f ff 0f         ........
  11641c:	 11 00 ff 0f ff 0f 19 00         ........
  116424:	 1a 00 13 06 ff 0f ff 0f         ........
  11642c:	 ff 0f ff 0f ff 0f ff 0f         ........
  116434:	 ff 0f 19 00 1a 00 ff 0f         ........
  11643c:	 ff 0f ff 0f ff 0f ff 0f         ........
  116444:	 ff 0f ff 0f ff 0f ff 0f         ........
  11644c:	 ff 0f ff 0f ff 0f ff 0f         ........
  116454:	 ff 0f ff 0f                     ....


gpio_regs:
  116458:	 00 00 09 00 24 00 09 00         ....$...
  116460:	 48 00 09 00                     H...


default_otp_info:
  116464:	 cd ab 3b 00 a1 01 31 00         ..;...1.
  11646c:	 00 00 00 03 00 00 01 00         ........
  116474:	 10 00 00 00 20 00 00 00         .... ...
  11647c:	 30 00 00 00 40 00 00 00         0...@...
  116484:	 00 00 00 00 00 00 00 00         ........
  11648c:	 00 00 00 00 00 00 00 00         ........
  116494:	 00 00 00 00 00 00 00 00         ........
  11649c:	 00 00 00 00 00 00 00 00         ........


sfc_dev_ops:
  1164a4:	 60 e4 10 00 d8 dd 10 00         `.......
  1164ac:	 14 de 10 00 54 de 10 00         ....T...
  1164b4:	 c0 de 10 00 00 00 00 00         ........
  1164bc:	 00 00 00 00 00 00 00 00         ........
  1164c4:	 b0 df 10 00 64 e4 10 00         ....d...


PB_valid:
  1164cc:	 00 01 02                        ...


PD_valid:
  1164cf:	 00 01 02 03 04 00 00 00         ........
  1164d7:	 00 00 00 00 00 00 00 00         ........
  1164df:	 00                              .


flash_powerup_ok_flash:
  1164e0:	 66 6c 61 73 68 5f 70 6f         flash_po
  1164e8:	 77 65 72 75 70 5f 6f 6b         werup_ok
  1164f0:	 00 00 00 00 00 00 00 00         ........
  1164f8:	 00 00 00 00 00 00 00 00         ........


vddiom_string:
  116500:	 57 ca 11 00 66 ca 11 00         W...f...
  116508:	 75 ca 11 00 84 ca 11 00         u.......
  116510:	 93 ca 11 00 a2 ca 11 00         ........
  116518:	 b1 ca 11 00 c0 ca 11 00         ........


vddiow_string:
  116520:	 1b ca 11 00 2a ca 11 00         ....*...
  116528:	 39 ca 11 00 48 ca 11 00         9...H...


wdt_time:
  116530:	 01 00 00 00 02 00 00 00         ........
  116538:	 04 00 00 00 08 00 00 00         ........
  116540:	 10 00 00 00 20 00 00 00         .... ...
  116548:	 40 00 00 00 80 00 00 00         @.......
  116550:	 00 01 00 00 00 02 00 00         ........
  116558:	 00 04 00 00 00 08 00 00         ........
  116560:	 00 10 00 00 00 20 00 00         ..... ..
  116568:	 00 40 00 00 00 80 00 00         .@......
  116570:	 e0 2e 00 00 c0 5d 00 00         .....]..
  116578:	 00 00 00 00 40 1f 00 00         ....@...
  116580:	 80 3e 00 00 00 7d 00 00         .>...}..


src_ops:
  116588:	 00 e8 10 00 90 8a 10 00         ........
  116590:	 06 e8 10 00 18 e9 10 00         ........


echo_H_ops:
  116598:	 70 a9 10 00 74 ab 10 00         p...t...
  1165a0:	 ee aa 10 00 3e eb 10 00         ....>...
  1165a8:	 38 ee 10 00                     8...


HPICHTER_SHIFTER_OPS:
  1165ac:	 d0 a7 10 00 ee a7 10 00         ........
  1165b4:	 3e ee 10 00                     >...


HHILB_TAB_FAST:
  1165b8:	 bc ff f8 ff f7 ff f7 ff         ........
  1165c0:	 f6 ff f6 ff f5 ff f4 ff         ........
  1165c8:	 f4 ff f3 ff f2 ff f1 ff         ........
  1165d0:	 f0 ff ee ff ed ff ec ff         ........
  1165d8:	 ea ff e8 ff e5 ff e2 ff         ........
  1165e0:	 df ff db ff d6 ff cf ff         ........
  1165e8:	 c5 ff b8 ff a3 ff 7e ff         ......~.
  1165f0:	 27 ff 74 fd                     '.t.


fre_sinv_tab:
  1165f4:	 00 00 00 00 24 03 00 00         ....$...
  1165fc:	 46 06 00 00 64 09 00 00         F...d...
  116604:	 7c 0c 00 00 8d 0f 00 00         |.......
  11660c:	 94 12 00 00 90 15 00 00         ........
  116614:	 7e 18 00 00 5d 1b 00 00         ~...]...
  11661c:	 2b 1e 00 00 e7 20 00 00         +.... ..
  116624:	 8e 23 00 00 20 26 00 00         .#.. &..
  11662c:	 9a 28 00 00 fb 2a 00 00         .(...*..
  116634:	 41 2d 00 00 6c 2f 00 00         A-..l/..
  11663c:	 79 31 00 00 68 33 00 00         y1..h3..
  116644:	 37 35 00 00 e5 36 00 00         75...6..
  11664c:	 71 38 00 00 db 39 00 00         q8...9..
  116654:	 21 3b 00 00 42 3c 00 00         !;..B<..
  11665c:	 3f 3d 00 00 15 3e 00 00         ?=...>..
  116664:	 c5 3e 00 00 4f 3f 00 00         .>..O?..
  11666c:	 b1 3f 00 00 ec 3f 00 00         .?...?..
  116674:	 00 40 00 00 ec 3f 00 00         .@...?..
  11667c:	 b1 3f 00 00 4f 3f 00 00         .?..O?..
  116684:	 c5 3e 00 00 15 3e 00 00         .>...>..
  11668c:	 3f 3d 00 00 42 3c 00 00         ?=..B<..
  116694:	 21 3b 00 00 db 39 00 00         !;...9..
  11669c:	 71 38 00 00 e5 36 00 00         q8...6..
  1166a4:	 37 35 00 00 68 33 00 00         75..h3..
  1166ac:	 79 31 00 00 6c 2f 00 00         y1..l/..
  1166b4:	 41 2d 00 00 fb 2a 00 00         A-...*..
  1166bc:	 9a 28 00 00 20 26 00 00         .(.. &..
  1166c4:	 8e 23 00 00 e7 20 00 00         .#... ..
  1166cc:	 2b 1e 00 00 5d 1b 00 00         +...]...
  1166d4:	 7e 18 00 00 90 15 00 00         ~.......
  1166dc:	 94 12 00 00 8d 0f 00 00         ........
  1166e4:	 7c 0c 00 00 64 09 00 00         |...d...
  1166ec:	 46 06 00 00 24 03 00 00         F...$...
  1166f4:	 00 00 00 00 dc fc ff ff         ........
  1166fc:	 ba f9 ff ff 9c f6 ff ff         ........
  116704:	 84 f3 ff ff 73 f0 ff ff         ....s...
  11670c:	 6c ed ff ff 70 ea ff ff         l...p...
  116714:	 82 e7 ff ff a3 e4 ff ff         ........
  11671c:	 d5 e1 ff ff 19 df ff ff         ........
  116724:	 72 dc ff ff e0 d9 ff ff         r.......
  11672c:	 66 d7 ff ff 05 d5 ff ff         f.......
  116734:	 bf d2 ff ff 94 d0 ff ff         ........
  11673c:	 87 ce ff ff 98 cc ff ff         ........
  116744:	 c9 ca ff ff 1b c9 ff ff         ........
  11674c:	 8f c7 ff ff 25 c6 ff ff         ....%...
  116754:	 df c4 ff ff be c3 ff ff         ........
  11675c:	 c1 c2 ff ff eb c1 ff ff         ........
  116764:	 3b c1 ff ff b1 c0 ff ff         ;.......
  11676c:	 4f c0 ff ff 14 c0 ff ff         O.......
  116774:	 00 c0 ff ff 14 c0 ff ff         ........
  11677c:	 4f c0 ff ff b1 c0 ff ff         O.......
  116784:	 3b c1 ff ff eb c1 ff ff         ;.......
  11678c:	 c1 c2 ff ff be c3 ff ff         ........
  116794:	 df c4 ff ff 25 c6 ff ff         ....%...
  11679c:	 8f c7 ff ff 1b c9 ff ff         ........
  1167a4:	 c9 ca ff ff 98 cc ff ff         ........
  1167ac:	 87 ce ff ff 94 d0 ff ff         ........
  1167b4:	 bf d2 ff ff 05 d5 ff ff         ........
  1167bc:	 66 d7 ff ff e0 d9 ff ff         f.......
  1167c4:	 72 dc ff ff 19 df ff ff         r.......
  1167cc:	 d5 e1 ff ff a3 e4 ff ff         ........
  1167d4:	 82 e7 ff ff 70 ea ff ff         ....p...
  1167dc:	 6c ed ff ff 73 f0 ff ff         l...s...
  1167e4:	 84 f3 ff ff 9c f6 ff ff         ........
  1167ec:	 ba f9 ff ff dc fc ff ff         ........
  1167f4:	 00 00 00 00                     ....


CPURSsincfilter_2:
  1167f8:	 40 9f fe 01 e5 f2 ff 01         @.......
  116800:	 40 9f fe 01 b5 a8 fa 01         @.......
  116808:	 4d 1c f4 01 85 0f eb 01         M.......
  116810:	 de 9f df 01 54 f2 d1 01         ....T...
  116818:	 b4 32 c2 01 c8 92 b0 01         .2......
  116820:	 77 49 9d 01 c8 91 88 01         wI......
  116828:	 d7 a9 72 01 c7 d1 5b 01         ..r...[.
  116830:	 a6 4a 44 01 60 55 2c 01         .JD.`U,.
  116838:	 b1 31 14 01 2e 1d fc 00         .1......
  116840:	 57 52 e4 00 c7 07 cd 00         WR......
  116848:	 80 6f b6 00 51 b6 a0 00         .o..Q...
  116850:	 5d 03 8c 00 c5 77 78 00         ]....wx.
  116858:	 75 2e 66 00 0e 3c 55 00         u.f..<U.
  116860:	 f4 ae 45 00 7d 8f 37 00         ..E.}.7.
  116868:	 31 e0 2a 00 33 9e 1f 00         1.*.3...
  116870:	 b0 c1 15 00 6a 3e 0d 00         ....j>..
  116878:	 4b 04 06 00 00 00 00 00         K.......
  116880:	 9e 1b fb ff 42 3f f7 ff         ....B?..
  116888:	 b4 51 f4 ff fb 38 f2 ff         .Q...8..
  116890:	 f0 da f0 ff be 1d f0 ff         ........
  116898:	 59 e8 ef ff df 22 f0 ff         Y...."..
  1168a0:	 ee b6 f0 ff e4 8f f1 ff         ........
  1168a8:	 0f 9b f2 ff cd c7 f3 ff         ........
  1168b0:	 9e 07 f5 ff 20 4e f6 ff         .... N..
  1168b8:	 07 91 f7 ff 04 c8 f8 ff         ........
  1168c0:	 a7 ec f9 ff 36 fa fa ff         ....6...
  1168c8:	 82 ed fb ff b8 c4 fc ff         ........
  1168d0:	 31 7f fd ff 44 1d fe ff         1...D...
  1168d8:	 14 a0 fe ff 6a 09 ff ff         ....j...
  1168e0:	 8b 5b ff ff 19 99 ff ff         .[......
  1168e8:	 ee c4 ff ff 0c e2 ff ff         ........
  1168f0:	 81 f3 ff ff 58 fc ff ff         ....X...
  1168f8:	 8d ff ff ff 00 00 00 00         ........
  116900:	 00 00 00 00                     ....


fCos_Tab:
  116904:	 00 00 02 00 d9 ff 01 00         ........
  11690c:	 62 ff 01 00 9d fe 01 00         b.......
  116914:	 89 fd 01 00 26 fc 01 00         ....&...
  11691c:	 75 fa 01 00 76 f8 01 00         u...v...
  116924:	 29 f6 01 00 8f f3 01 00         ).......
  11692c:	 a8 f0 01 00 74 ed 01 00         ....t...
  116934:	 f4 e9 01 00 29 e6 01 00         ....)...
  11693c:	 12 e2 01 00 b1 dd 01 00         ........
  116944:	 07 d9 01 00 13 d4 01 00         ........
  11694c:	 d8 ce 01 00 55 c9 01 00         ....U...
  116954:	 8b c3 01 00 7c bd 01 00         ....|...
  11695c:	 28 b7 01 00 91 b0 01 00         (.......
  116964:	 b6 a9 01 00 9a a2 01 00         ........
  11696c:	 3e 9b 01 00 a2 93 01 00         >.......
  116974:	 c8 8b 01 00 b1 83 01 00         ........
  11697c:	 5e 7b 01 00 d1 72 01 00         ^{...r..
  116984:	 0a 6a 01 00 0b 61 01 00         .j...a..
  11698c:	 d7 57 01 00 6d 4e 01 00         .W..mN..
  116994:	 cf 44 01 00 00 3b 01 00         .D...;..
  11699c:	 ff 30 01 00 d0 26 01 00         .0...&..
  1169a4:	 74 1c 01 00 eb 11 01 00         t.......
  1169ac:	 38 07 01 00 5d fc 00 00         8...]...
  1169b4:	 5b f1 00 00 33 e6 00 00         [...3...
  1169bc:	 e9 da 00 00 7c cf 00 00         ....|...
  1169c4:	 ef c3 00 00 44 b8 00 00         ....D...
  1169cc:	 7d ac 00 00 9b a0 00 00         }.......
  1169d4:	 a0 94 00 00 8f 88 00 00         ........
  1169dc:	 68 7c 00 00 2e 70 00 00         h|...p..
  1169e4:	 e3 63 00 00 88 57 00 00         .c...W..
  1169ec:	 20 4b 00 00 ad 3e 00 00          K...>..
  1169f4:	 2f 32 00 00 aa 25 00 00         /2...%..
  1169fc:	 1f 19 00 00 91 0c 00 00         ........
  116a04:	 00 00 00 00                     ....


NotchHowlingApi:
  116a08:	 28 f4 10 00 de a5 10 00         (.......
  116a10:	 3c f4 10 00 80 fc 10 00         <.......
  116a18:	 ec f3 10 00                     ....


win:
  116a1c:	 00 00 00 00 85 04 43 00         ......C.
  116a24:	 72 04 86 00 30 fb c8 00         r...0...
  116a2c:	 27 e4 0b 01 c2 ba 4e 01         '.....N.
  116a34:	 6c 7a 91 01 92 1e d4 01         lz......
  116a3c:	 a2 a2 16 02 0e 02 59 02         ......Y.
  116a44:	 49 38 9b 02 c9 40 dd 02         I8...@..
  116a4c:	 08 17 1f 03 82 b6 60 03         ......`.
  116a54:	 b8 1a a2 03 2f 3f e3 03         ..../?..
  116a5c:	 70 1f 24 04 09 b7 64 04         p.$...d.
  116a64:	 8c 01 a5 04 91 fa e4 04         ........
  116a6c:	 b5 9d 24 05 9d e6 63 05         ..$...c.
  116a74:	 f2 d0 a2 05 64 58 e1 05         ....dX..
  116a7c:	 aa 78 1f 06 81 2d 5d 06         .x...-].
  116a84:	 b0 72 9a 06 02 44 d7 06         .r...D..
  116a8c:	 4e 9d 13 07 70 7a 4f 07         N...pzO.
  116a94:	 4e d7 8a 07 d6 af c5 07         N.......
  116a9c:	 00 00 00 08 cd c3 39 08         ......9.
  116aa4:	 46 f7 72 08 82 96 ab 08         F.r.....
  116aac:	 9d 9d e3 08 c1 08 1b 09         ........
  116ab4:	 22 d4 51 09 fe fb 87 09         ".Q.....
  116abc:	 a0 7c bd 09 5b 52 f2 09         .|..[R..
  116ac4:	 93 79 26 0a b2 ee 59 0a         .y&...Y.
  116acc:	 33 ae 8c 0a 9a b4 be 0a         3.......
  116ad4:	 7b fe ef 0a 75 88 20 0b         {...u. .
  116adc:	 33 4f 50 0b 70 4f 7f 0b         3OP.pO..
  116ae4:	 f3 85 ad 0b 91 ef da 0b         ........
  116aec:	 2e 89 07 0c ba 4f 33 0c         .....O3.
  116af4:	 36 40 5e 0c b0 57 88 0c         6@^..W..
  116afc:	 46 93 b1 0c 24 f0 d9 0c         F...$...
  116b04:	 86 6b 01 0d b8 02 28 0d         .k....(.
  116b0c:	 15 b3 4d 0d 06 7a 72 0d         ..M..zr.
  116b14:	 07 55 96 0d a3 41 b9 0d         .U...A..
  116b1c:	 74 3d db 0d 27 46 fc 0d         t=..'F..
  116b24:	 79 59 1c 0e 35 75 3b 0e         yY..5u;.
  116b2c:	 3b 97 59 0e 7a bd 76 0e         ;.Y.z.v.
  116b34:	 f2 e5 92 0e b6 0e ae 0e         ........
  116b3c:	 e8 35 c8 0e be 59 e1 0e         .5...Y..
  116b44:	 7e 78 f9 0e 82 90 10 0f         ~x......
  116b4c:	 35 a0 26 0f 13 a6 3b 0f         5.&...;.
  116b54:	 ab a0 4f 0f a0 8e 62 0f         ..O...b.
  116b5c:	 a4 6e 74 0f 7e 3f 85 0f         .nt.~?..
  116b64:	 07 00 95 0f 2b af a3 0f         ....+...
  116b6c:	 e8 4b b1 0f 4f d5 bd 0f         .K..O...
  116b74:	 85 4a c9 0f c0 aa d3 0f         .J......
  116b7c:	 49 f5 dc 0f 80 29 e5 0f         I....)..
  116b84:	 d2 46 ec 0f c4 4c f2 0f         .F...L..
  116b8c:	 eb 3a f7 0f f2 10 fb 0f         .:......
  116b94:	 94 ce fd 0f a3 73 ff 0f         .....s..
  116b9c:	 00 00 00 10 00 00 00 10         ........
  116ba4:	 00 00 00 10 00 00 00 10         ........
  116bac:	 00 00 00 10 00 00 00 10         ........
  116bb4:	 00 00 00 10 00 00 00 10         ........
  116bbc:	 00 00 00 10 00 00 00 10         ........
  116bc4:	 00 00 00 10 00 00 00 10         ........
  116bcc:	 00 00 00 10 00 00 00 10         ........
  116bd4:	 00 00 00 10 00 00 00 10         ........
  116bdc:	 00 00 00 10 00 00 00 10         ........
  116be4:	 00 00 00 10 00 00 00 10         ........
  116bec:	 00 00 00 10 00 00 00 10         ........
  116bf4:	 00 00 00 10 00 00 00 10         ........
  116bfc:	 00 00 00 10 00 00 00 10         ........
  116c04:	 00 00 00 10 00 00 00 10         ........
  116c0c:	 00 00 00 10 00 00 00 10         ........
  116c14:	 00 00 00 10 00 00 00 10         ........
  116c1c:	 00 00 00 10 00 00 00 10         ........
  116c24:	 00 00 00 10 00 00 00 10         ........
  116c2c:	 00 00 00 10 00 00 00 10         ........
  116c34:	 00 00 00 10 00 00 00 10         ........
  116c3c:	 00 00 00 10 00 00 00 10         ........
  116c44:	 00 00 00 10 00 00 00 10         ........
  116c4c:	 00 00 00 10 00 00 00 10         ........
  116c54:	 00 00 00 10 00 00 00 10         ........
  116c5c:	 00 00 00 10 00 00 00 10         ........
  116c64:	 00 00 00 10 00 00 00 10         ........
  116c6c:	 00 00 00 10 00 00 00 10         ........
  116c74:	 00 00 00 10 00 00 00 10         ........
  116c7c:	 00 00 00 10 00 00 00 10         ........
  116c84:	 00 00 00 10 00 00 00 10         ........
  116c8c:	 00 00 00 10 00 00 00 10         ........
  116c94:	 00 00 00 10 00 00 00 10         ........
  116c9c:	 00 00 00 10 a3 73 ff 0f         .....s..
  116ca4:	 94 ce fd 0f f2 10 fb 0f         ........
  116cac:	 eb 3a f7 0f c4 4c f2 0f         .:...L..
  116cb4:	 d2 46 ec 0f 80 29 e5 0f         .F...)..
  116cbc:	 49 f5 dc 0f c0 aa d3 0f         I.......
  116cc4:	 85 4a c9 0f 4f d5 bd 0f         .J..O...
  116ccc:	 e8 4b b1 0f 2b af a3 0f         .K..+...
  116cd4:	 07 00 95 0f 7e 3f 85 0f         ....~?..
  116cdc:	 a4 6e 74 0f a0 8e 62 0f         .nt...b.
  116ce4:	 ab a0 4f 0f 13 a6 3b 0f         ..O...;.
  116cec:	 35 a0 26 0f 82 90 10 0f         5.&.....
  116cf4:	 7e 78 f9 0e be 59 e1 0e         ~x...Y..
  116cfc:	 e8 35 c8 0e b6 0e ae 0e         .5......
  116d04:	 f2 e5 92 0e 7a bd 76 0e         ....z.v.
  116d0c:	 3b 97 59 0e 35 75 3b 0e         ;.Y.5u;.
  116d14:	 79 59 1c 0e 27 46 fc 0d         yY..'F..
  116d1c:	 74 3d db 0d a3 41 b9 0d         t=...A..
  116d24:	 07 55 96 0d 06 7a 72 0d         .U...zr.
  116d2c:	 15 b3 4d 0d b8 02 28 0d         ..M...(.
  116d34:	 86 6b 01 0d 24 f0 d9 0c         .k..$...
  116d3c:	 46 93 b1 0c b0 57 88 0c         F....W..
  116d44:	 36 40 5e 0c ba 4f 33 0c         6@^..O3.
  116d4c:	 2e 89 07 0c 91 ef da 0b         ........
  116d54:	 f3 85 ad 0b 70 4f 7f 0b         ....pO..
  116d5c:	 33 4f 50 0b 75 88 20 0b         3OP.u. .
  116d64:	 7b fe ef 0a 9a b4 be 0a         {.......
  116d6c:	 33 ae 8c 0a b2 ee 59 0a         3.....Y.
  116d74:	 93 79 26 0a 5b 52 f2 09         .y&.[R..
  116d7c:	 a0 7c bd 09 fe fb 87 09         .|......
  116d84:	 22 d4 51 09 c1 08 1b 09         ".Q.....
  116d8c:	 9d 9d e3 08 82 96 ab 08         ........
  116d94:	 46 f7 72 08 cd c3 39 08         F.r...9.
  116d9c:	 00 00 00 08 d6 af c5 07         ........
  116da4:	 4e d7 8a 07 70 7a 4f 07         N...pzO.
  116dac:	 4e 9d 13 07 02 44 d7 06         N....D..
  116db4:	 b0 72 9a 06 81 2d 5d 06         .r...-].
  116dbc:	 aa 78 1f 06 64 58 e1 05         .x..dX..
  116dc4:	 f2 d0 a2 05 9d e6 63 05         ......c.
  116dcc:	 b5 9d 24 05 91 fa e4 04         ..$.....
  116dd4:	 8c 01 a5 04 09 b7 64 04         ......d.
  116ddc:	 70 1f 24 04 2f 3f e3 03         p.$./?..
  116de4:	 b8 1a a2 03 82 b6 60 03         ......`.
  116dec:	 08 17 1f 03 c9 40 dd 02         .....@..
  116df4:	 49 38 9b 02 0e 02 59 02         I8....Y.
  116dfc:	 a2 a2 16 02 92 1e d4 01         ........
  116e04:	 6c 7a 91 01 c2 ba 4e 01         lz....N.
  116e0c:	 27 e4 0b 01 30 fb c8 00         '...0...
  116e14:	 72 04 86 00 85 04 43 00         r.....C.


rs_sample_coff2:
  116e1c:	 ef 08 fa 01 48 e1 fa 01         ....H...
  116e24:	 ef 08 fa 01 43 81 f7 01         ....C...
  116e2c:	 55 4e f3 01 e5 76 ed 01         UN...v..
  116e34:	 54 04 e6 01 90 02 dd 01         T.......
  116e3c:	 fd 7f d2 01 57 8d c6 01         ....W...
  116e44:	 94 3d b9 01 bc a5 aa 01         .=......
  116e4c:	 be dc 9a 01 47 fb 89 01         ....G...
  116e54:	 8e 1b 78 01 21 59 65 01         ..x.!Ye.
  116e5c:	 b4 d0 51 01 e4 9f 3d 01         ..Q...=.
  116e64:	 ff e4 28 01 cf be 13 01         ..(.....
  116e6c:	 5a 4c fe 00 ab ac e8 00         ZL......
  116e74:	 97 fe d2 00 86 60 bd 00         .....`..
  116e7c:	 3b f0 a7 00 9e ca 92 00         ;.......
  116e84:	 8a 0b 7e 00 9f cd 69 00         ..~...i.
  116e8c:	 12 2a 56 00 83 38 43 00         .*V..8C.
  116e94:	 dc 0e 31 00 2c c1 1f 00         ..1.,...
  116e9c:	 8b 61 0f 00 00 00 00 00         .a......
  116ea4:	 6f aa f1 ff 87 6c e4 ff         o....l..
  116eac:	 bc 4f d8 ff 3c 5b cd ff         .O..<[..
  116eb4:	 f3 93 c3 ff 8a fc ba ff         ........
  116ebc:	 73 95 b3 ff f7 5c ad ff         s....\..
  116ec4:	 43 4f a8 ff 81 66 a4 ff         CO...f..
  116ecc:	 ed 9a a1 ff f8 e2 9f ff         ........
  116ed4:	 63 33 9f ff 60 7f 9f ff         c3..`...
  116edc:	 bd b8 a0 ff 07 d0 a2 ff         ........
  116ee4:	 b4 b4 a5 ff 4b 55 a9 ff         ....KU..
  116eec:	 96 9f ad ff c6 80 b2 ff         ........
  116ef4:	 a1 e5 b7 ff b3 ba bd ff         ........
  116efc:	 6f ec c3 ff 64 67 ca ff         o...dg..
  116f04:	 5b 18 d1 ff 87 ec d7 ff         [.......
  116f0c:	 a3 d1 de ff 18 b6 e5 ff         ........
  116f14:	 1d 89 ec ff d2 3a f3 ff         .....:..
  116f1c:	 5d bc f9 ff 00 00 00 00         ].......
  116f24:	 2c f9 05 00 94 9c 0b 00         ,.......
  116f2c:	 36 e0 10 00 6b bb 15 00         6...k...
  116f34:	 e6 26 1a 00 bf 1c 1e 00         .&......
  116f3c:	 6a 98 21 00 ba 96 24 00         j.!...$.
  116f44:	 da 15 27 00 3e 15 29 00         ..'.>.).
  116f4c:	 9e 95 2a 00 e2 98 2b 00         ..*...+.
  116f54:	 12 22 2c 00 45 35 2c 00         .",.E5,.
  116f5c:	 89 d7 2b 00 ce 0e 2b 00         ..+...+.
  116f64:	 ce e1 29 00 f4 57 28 00         ..)..W(.
  116f6c:	 42 79 26 00 38 4e 24 00         By&.8N$.
  116f74:	 b7 df 21 00 e8 36 1f 00         ..!..6..
  116f7c:	 25 5d 1c 00 d9 5b 19 00         %]...[..
  116f84:	 6f 3c 16 00 33 08 13 00         o<..3...
  116f8c:	 40 c8 0f 00 6c 85 0c 00         @...l...
  116f94:	 2e 48 09 00 94 18 06 00         .H......
  116f9c:	 2e fe 02 00 00 00 00 00         ........
  116fa4:	 78 24 fd ff 62 71 fa ff         x$..bq..
  116fac:	 e0 eb f7 ff 66 98 f5 ff         ....f...
  116fb4:	 b2 7a f3 ff ce 95 f1 ff         .z......
  116fbc:	 0c ec ef ff 0b 7f ee ff         ........
  116fc4:	 b9 4f ed ff 58 5e ec ff         .O..X^..
  116fcc:	 85 aa eb ff 40 33 eb ff         ....@3..
  116fd4:	 f8 f6 ea ff 91 f3 ea ff         ........
  116fdc:	 71 26 eb ff 91 8c eb ff         q&......
  116fe4:	 81 22 ec ff 81 e4 ec ff         ."......
  116fec:	 83 ce ed ff 43 dc ee ff         ....C...
  116ff4:	 4e 09 f0 ff 13 51 f1 ff         N....Q..
  116ffc:	 f1 ae f2 ff 45 1e f4 ff         ....E...
  117004:	 71 9a f5 ff f0 1e f7 ff         q.......
  11700c:	 5a a7 f8 ff 76 2f fa ff         Z...v/..
  117014:	 3c b3 fb ff e2 2e fd ff         <.......
  11701c:	 e2 9e fe ff 00 00 00 00         ........
  117024:	 52 4f 01 00 40 8a 02 00         RO..@...
  11702c:	 8b ae 03 00 4d ba 04 00         ....M...
  117034:	 fa ab 05 00 60 82 06 00         ....`...
  11703c:	 a6 3c 07 00 4b da 07 00         .<..K...
  117044:	 23 5b 08 00 51 bf 08 00         #[..Q...
  11704c:	 46 07 09 00 b9 33 09 00         F....3..
  117054:	 a4 45 09 00 3d 3e 09 00         .E..=>..
  11705c:	 ee 1e 09 00 53 e9 08 00         ....S...
  117064:	 2c 9f 08 00 5f 42 08 00         ,..._B..
  11706c:	 e7 d4 07 00 d5 58 07 00         .....X..
  117074:	 48 d0 06 00 60 3d 06 00         H...`=..
  11707c:	 42 a2 05 00 08 01 05 00         B.......
  117084:	 c2 5b 04 00 6d b4 03 00         .[..m...
  11708c:	 f3 0c 03 00 1f 67 02 00         .....g..
  117094:	 a1 c4 01 00 08 27 01 00         .....'..
  11709c:	 bb 8f 00 00 00 00 00 00         ........
  1170a4:	 f1 78 ff ff 82 fb fe ff         .x......
  1170ac:	 7c 88 fe ff 7f 20 fe ff         |.... ..
  1170b4:	 04 c4 fd ff 59 73 fd ff         ....Ys..
  1170bc:	 a8 2e fd ff f6 f5 fc ff         ........
  1170c4:	 23 c9 fc ff f0 a7 fc ff         #.......
  1170cc:	 02 92 fc ff df 86 fc ff         ........
  1170d4:	 f9 85 fc ff a9 8e fc ff         ........
  1170dc:	 3a a0 fc ff e6 b9 fc ff         :.......
  1170e4:	 db da fc ff 40 02 fd ff         ....@...
  1170ec:	 37 2f fd ff df 60 fd ff         7/...`..
  1170f4:	 57 96 fd ff c2 ce fd ff         W.......
  1170fc:	 48 09 fe ff 19 45 fe ff         H....E..
  117104:	 6e 81 fe ff 8d bd fe ff         n.......
  11710c:	 c9 f8 fe ff 81 32 ff ff         .....2..
  117114:	 27 6a ff ff 3b 9f ff ff         'j..;...
  11711c:	 4d d1 ff ff 00 00 00 00         M.......
  117124:	 07 2b 00 00 25 52 00 00         .+..%R..
  11712c:	 30 75 00 00 0a 94 00 00         0u......
  117134:	 a9 ae 00 00 0f c5 00 00         ........
  11713c:	 49 d7 00 00 75 e5 00 00         I...u...
  117144:	 b8 ef 00 00 44 f6 00 00         ....D...
  11714c:	 52 f9 00 00 21 f9 00 00         R...!...
  117154:	 f8 f5 00 00 21 f0 00 00         ....!...
  11715c:	 eb e7 00 00 a5 dd 00 00         ........
  117164:	 9f d1 00 00 2a c4 00 00         ....*...
  11716c:	 94 b5 00 00 29 a6 00 00         ....)...
  117174:	 33 96 00 00 f5 85 00 00         3.......
  11717c:	 b0 75 00 00 9e 65 00 00         .u...e..
  117184:	 f5 55 00 00 e2 46 00 00         .U...F..
  11718c:	 90 38 00 00 20 2b 00 00         .8.. +..
  117194:	 ad 1e 00 00 4e 13 00 00         ....N...
  11719c:	 11 09 00 00 00 00 00 00         ........
  1171a4:	 1f f8 ff ff 6b f1 ff ff         ....k...
  1171ac:	 e0 eb ff ff 72 e7 ff ff         ....r...
  1171b4:	 13 e4 ff ff b2 e1 ff ff         ........
  1171bc:	 3a e0 ff ff 95 df ff ff         :.......
  1171c4:	 ab df ff ff 64 e0 ff ff         ....d...
  1171cc:	 a6 e1 ff ff 58 e3 ff ff         ....X...
  1171d4:	 61 e5 ff ff aa e7 ff ff         a.......
  1171dc:	 1b ea ff ff a1 ec ff ff         ........
  1171e4:	 27 ef ff ff 9e f1 ff ff         '.......
  1171ec:	 f8 f3 ff ff 28 f6 ff ff         ....(...
  1171f4:	 25 f8 ff ff e9 f9 ff ff         %.......
  1171fc:	 70 fb ff ff b8 fc ff ff         p.......
  117204:	 c2 fd ff ff 90 fe ff ff         ........
  11720c:	 28 ff ff ff 90 ff ff ff         (.......
  117214:	 d1 ff ff ff f2 ff ff ff         ........
  11721c:	 fe ff ff ff 00 00 00 00         ........


speedpitch_api_obj:
  117224:	 dc 88 10 00 f4 88 10 00         ........
  11722c:	 78 00 11 00                     x...


mmp3_decoder_ops:
  117230:	 86 d6 11 00 5c 5b 10 00         ....\[..
  117238:	 a8 5c 10 00 70 24 11 00         .\..p$..
  117240:	 e4 29 11 00 ea 29 11 00         .)...)..
  117248:	 f0 29 11 00 1a 2a 11 00         .)...*..
  117250:	 20 2a 11 00 24 2a 11 00          *..$*..


sfbwidth_table:
  117258:	 48 78 11 00 5e 78 11 00         Hx..^x..
  117260:	 85 78 11 00 ab 78 11 00         .x...x..
  117268:	 c1 78 11 00 e8 78 11 00         .x...x..
  117270:	 0e 79 11 00 24 79 11 00         .y..$y..
  117278:	 4b 79 11 00 71 79 11 00         Ky..qy..
  117280:	 87 79 11 00 ae 79 11 00         .y...y..
  117288:	 d2 79 11 00 e8 79 11 00         .y...y..
  117290:	 0f 7a 11 00 d2 79 11 00         .z...y..
  117298:	 33 7a 11 00 5a 7a 11 00         3z..Zz..
  1172a0:	 d2 79 11 00 33 7a 11 00         .y..3z..
  1172a8:	 5a 7a 11 00 d2 79 11 00         Zz...y..
  1172b0:	 33 7a 11 00 5a 7a 11 00         3z..Zz..
  1172b8:	 7e 7a 11 00 94 7a 11 00         ~z...z..
  1172c0:	 bb 7a 11 00                     .z..


nsfb_table:
  1172c4:	 06 05 05 05 09 09 09 09         ........
  1172cc:	 06 09 09 09 06 05 07 03         ........
  1172d4:	 09 09 0c 06 06 09 0c 06         ........
  1172dc:	 0b 0a 00 00 12 12 00 00         ........
  1172e4:	 0f 12 00 00 07 07 07 00         ........
  1172ec:	 0c 0c 0c 00 06 0f 0c 00         ........
  1172f4:	 06 06 06 03 0c 09 09 06         ........
  1172fc:	 06 0c 09 06 08 08 05 00         ........
  117304:	 0f 0c 09 00 06 12 09 00         ........


pretab:
  11730c:	 00 00 00 00 00 00 00 00         ........
  117314:	 00 00 00 01 01 01 01 02         ........
  11731c:	 02 03 03 03 02 00               ......


imdct_s:
  117322:	 f6 26 df c4 a5 f7 74 3f         .&....t?
  11732a:	 82 e7 3a cd 3a cd 7e 18         ..:.:.~.
  117332:	 74 3f 5b 08 df c4 0a d9         t?[.....
  11733a:	 7e 18 df c4 21 3b 82 e7         ~...!;..
  117342:	 82 e7 21 3b df c4 82 e7         ..!;....
  11734a:	 7e 18 21 3b 21 3b 7e 18         ~.!;!;~.
  117352:	 5b 08 82 e7 f6 26 3a cd         [....&:.
  11735a:	 21 3b 8c c0 8c c0 df c4         !;......
  117362:	 3a cd 0a d9 82 e7 a5 f7         :.......


window_s:
  11736a:	 5b 08 7e 18 f6 26 c6 32         [.~..&.2
  117372:	 21 3b 74 3f 74 3f 21 3b         !;t?t?!;
  11737a:	 c6 32 f6 26 7e 18 5b 08         .2.&~.[.
  117382:	 00 00                           ..


sc18_sc09_csdct:
  117384:	 34 f8 1f 00 eb b9 1f 00         4.......
  11738c:	 d1 3d 1f 00 d9 84 1e 00         .=......
  117394:	 6c 90 1d 00 65 62 1c 00         l...eb..
  11739c:	 10 fd 1a 00 27 63 19 00         ....'c..
  1173a4:	 c7 97 17 00 6f 9e 15 00         ....o...
  1173ac:	 f9 7a 13 00 8f 31 11 00         .z...1..
  1173b4:	 a5 c6 0e 00 f1 3e 0c 00         .....>..
  1173bc:	 62 9f 09 00 13 ed 06 00         b.......
  1173c4:	 45 2d 04 00 54 65 01 00         E-..Te..
  1173cc:	 d4 e0 1f 00 dd e8 1e 00         ........
  1173d4:	 79 00 1d 00 7e 36 1a 00         y...~6..
  1173dc:	 9e a0 16 00 bd 5a 12 00         .....Z..
  1173e4:	 17 86 0d 00 3f 48 08 00         ....?H..
  1173ec:	 fb c9 02 00 85 49 e4 ff         .....I..
  1173f4:	 74 7c e0 ff b7 91 14 00         t|......
  1173fc:	 7b b6 1b 00 f6 11 1e 00         {.......
  117404:	 70 83 18 00 87 8e 05 00         p.......
  11740c:	 d4 f1 0a 00                     ....


window_l:
  117410:	 cb 02 5b 08 da 0d 3f 13         ..[...?.
  117418:	 7e 18 8d 1d 63 22 f6 26         ~...c".&
  117420:	 3d 2b 30 2f c6 32 fa 35         =+0/.2.5
  117428:	 c5 38 21 3b 0a 3d 7c 3e         .8!;.=|>
  117430:	 74 3f f0 3f                     t?.?


pow2tabn_rq_tab:
  117434:	 45 d7 00 00 05 b5 00 00         E.......
  11743c:	 38 98 00 00 00 80 00 00         8.......
  117444:	 00 00 00 00 00 00 01 00         ........
  11744c:	 14 85 02 00 a6 53 04 00         .....S..
  117454:	 80 59 06 00 c5 8c 08 00         .Y......
  11745c:	 19 e7 0a 00 f9 63 0d 00         .....c..
  117464:	 00 00 10 00 83 b8 12 00         ........
  11746c:	 5a 8b 15 00 ba 76 18 00         Z....v..
  117474:	 20 79 1b 00 3e 91 1e 00          y..>...
  11747c:	 f3 bd 21 00 41 fe 24 00         ..!.A.$.
  117484:	 46 51 28 00 38 b6 2b 00         FQ(.8.+.
  11748c:	 60 2c 2f 00 1b b3 32 00         `,/...2.
  117494:	 d1 49 36 00 fa ef 39 00         .I6...9.
  11749c:	 16 a5 3d 00 b0 68 41 00         ..=..hA.
  1174a4:	 5d 3a 45 00 b7 19 49 00         ]:E...I.
  1174ac:	 60 06 4d 00 00 00 51 00         `.M...Q.
  1174b4:	 45 06 55 00 e1 18 59 00         E.U...Y.
  1174bc:	 8c 37 5d 00 ff 61 61 00         .7]..aa.
  1174c4:	 fb 97 65 00 40 d9 69 00         ..e.@.i.
  1174cc:	 95 25 6e 00 c1 7c 72 00         .%n..|r.
  1174d4:	 90 de 76 00 ce 4a 7b 00         ..v..J{.
  1174dc:	 4c c1 7f 00 db 41 84 00         L....A..
  1174e4:	 4f cc 88 00 7d 60 8d 00         O...}`..
  1174ec:	 3d fe 91 00 68 a5 96 00         =...h...
  1174f4:	 d8 55 9b 00 69 0f a0 00         .U..i...
  1174fc:	 f9 d1 a4 00 65 9d a9 00         ....e...
  117504:	 8e 71 ae 00 55 4e b3 00         .q..UN..
  11750c:	 9a 33 b8 00 42 21 bd 00         .3..B!..
  117514:	 30 17 c2 00 49 15 c7 00         0...I...
  11751c:	 72 1b cc 00 92 29 d1 00         r....)..
  117524:	 90 3f d6 00 54 5d db 00         .?..T]..
  11752c:	 c7 82 e0 00 d1 af e5 00         ........
  117534:	 5e e4 ea 00 57 20 f0 00         ^...W ..
  11753c:	 a8 63 f5 00 3c ae fa 00         .c..<...
  117544:	 00 00 00 01 e0 58 05 01         .....X..
  11754c:	 cb b8 0a 01 ac 1f 10 01         ........
  117554:	 74 8d 15 01 10 02 1b 01         t.......
  11755c:	 6f 7d 20 01 81 ff 25 01         o} ...%.
  117564:	 36 88 2b 01 7e 17 31 01         6.+.~.1.
  11756c:	 49 ad 36 01 89 49 3c 01         I.6..I<.
  117574:	 2f ec 41 01 2c 95 47 01         /.A.,.G.
  11757c:	 73 44 4d 01 f5 f9 52 01         sDM...R.
  117584:	 a5 b5 58 01 76 77 5e 01         ..X.vw^.
  11758c:	 5b 3f 64 01 47 0d 6a 01         [?d.G.j.
  117594:	 2e e1 6f 01 03 bb 75 01         ..o...u.
  11759c:	 bc 9a 7b 01 4b 80 81 01         ..{.K...
  1175a4:	 a6 6b 87 01 c1 5c 8d 01         .k...\..
  1175ac:	 91 53 93 01 0b 50 99 01         .S...P..
  1175b4:	 25 52 9f 01 d5 59 a5 01         %R...Y..
  1175bc:	 0f 67 ab 01 cb 79 b1 01         .g...y..
  1175c4:	 fd 91 b7 01 9d af bd 01         ........
  1175cc:	 a0 d2 c3 01 fe fa c9 01         ........
  1175d4:	 ad 28 d0 01 a3 5b d6 01         .(...[..
  1175dc:	 d9 93 dc 01 45 d1 e2 01         ....E...
  1175e4:	 df 13 e9 01 9d 5b ef 01         .....[..
  1175ec:	 79 a8 f5 01 68 fa fb 01         y...h...
  1175f4:	 65 51 02 02 65 ad 08 02         eQ..e...
  1175fc:	 62 0e 0f 02 54 74 15 02         b...Tt..
  117604:	 33 df 1b 02 f7 4e 22 02         3....N".
  11760c:	 9a c3 28 02 13 3d 2f 02         ..(..=/.
  117614:	 5c bb 35 02 6e 3e 3c 02         \.5.n><.
  11761c:	 42 c6 42 02 d0 52 49 02         B.B..RI.
  117624:	 12 e4 4f 02 01 7a 56 02         ..O..zV.
  11762c:	 97 14 5d 02 cd b3 63 02         ..]...c.
  117634:	 9d 57 6a 02 00 00 71 02         .Wj...q.
  11763c:	 f0 ac 77 02 67 5e 7e 02         ..w.g^~.
  117644:	 5f 14 85 02 d2 ce 8b 02         _.......
  11764c:	 ba 8d 92 02 10 51 99 02         .....Q..
  117654:	 d0 18 a0 02 f3 e4 a6 02         ........
  11765c:	 75 b5 ad 02 4e 8a b4 02         u...N...
  117664:	 7b 63 bb 02 f5 40 c2 02         {c...@..
  11766c:	 b6 22 c9 02 bb 08 d0 02         ."......
  117674:	 fd f2 d6 02 77 e1 dd 02         ....w...
  11767c:	 25 d4 e4 02 01 cb eb 02         %.......
  117684:	 06 c6 f2 02 2f c5 f9 02         ..../...
  11768c:	 77 c8 00 03 da cf 07 03         w.......
  117694:	 52 db 0e 03 dc ea 15 03         R.......
  11769c:	 72 fe 1c 03 10 16 24 03         r.....$.
  1176a4:	 b1 31 2b 03 50 51 32 03         .1+.PQ2.
  1176ac:	 ea 74 39 03 7a 9c 40 03         .t9.z.@.
  1176b4:	 fb c7 47 03 69 f7 4e 03         ..G.i.N.
  1176bc:	 c0 2a 56 03 fb 61 5d 03         .*V..a].
  1176c4:	 17 9d 64 03 10 dc 6b 03         ..d...k.
  1176cc:	 e0 1e 73 03 85 65 7a 03         ..s..ez.
  1176d4:	 fa af 81 03 3b fe 88 03         ....;...
  1176dc:	 44 50 90 03 11 a6 97 03         DP......
  1176e4:	 9f ff 9e 03 ea 5c a6 03         .....\..
  1176ec:	 ed bd ad 03 a6 22 b5 03         ....."..
  1176f4:	 10 8b bc 03 28 f7 c3 03         ....(...
  1176fc:	 ea 66 cb 03 53 da d2 03         .f..S...
  117704:	 5e 51 da 03 09 cc e1 03         ^Q......
  11770c:	 50 4a e9 03 30 cc f0 03         PJ..0...
  117714:	 a4 51 f8 03 aa da ff 03         .Q......
  11771c:	 3f 67 07 04 5e f7 0e 04         ?g..^...
  117724:	 05 8b 16 04 31 22 1e 04         ....1"..
  11772c:	 dd bc 25 04 08 5b 2d 04         ..%..[-.
  117734:	 ad fc 34 04 c9 a1 3c 04         ..4...<.
  11773c:	 5b 4a 44 04 5d f6 4b 04         [JD.].K.
  117744:	 ce a5 53 04 aa 58 5b 04         ..S..X[.
  11774c:	 ee 0e 63 04 97 c8 6a 04         ..c...j.
  117754:	 a2 85 72 04 0d 46 7a 04         ..r..Fz.
  11775c:	 d3 09 82 04 f4 d0 89 04         ........
  117764:	 6b 9b 91 04 35 69 99 04         k...5i..
  11776c:	 50 3a a1 04 ba 0e a9 04         P:......
  117774:	 6f e6 b0 04 6c c1 b8 04         o...l...
  11777c:	 af 9f c0 04 35 81 c8 04         ....5...
  117784:	 fb 65 d0 04 ff 4d d8 04         .e...M..
  11778c:	 3f 39 e0 04 b6 27 e8 04         ?9...'..
  117794:	 64 19 f0 04 44 0e f8 04         d...D...
  11779c:	 56 06 00 05 95 01 08 05         V.......
  1177a4:	 00 00 10 05 94 01 18 05         ........
  1177ac:	 4f 06 20 05 2e 0e 28 05         O. ...(.
  1177b4:	 2e 19 30 05 4e 27 38 05         ..0.N'8.
  1177bc:	 8b 38 40 05 e2 4c 48 05         .8@..LH.
  1177c4:	 51 64 50 05 d6 7e 58 05         QdP..~X.
  1177cc:	 6e 9c 60 05 17 bd 68 05         n.`...h.
  1177d4:	 cf e0 70 05 94 07 79 05         ..p...y.
  1177dc:	 62 31 81 05 39 5e 89 05         b1..9^..
  1177e4:	 15 8e 91 05 f5 c0 99 05         ........
  1177ec:	 d5 f6 a1 05 b5 2f aa 05         ...../..
  1177f4:	 92 6b b2 05 6a aa ba 05         .k..j...
  1177fc:	 3a ec c2 05 00 31 cb 05         :....1..
  117804:	 bb 78 d3 05 68 c3 db 05         .x..h...
  11780c:	 05 11 e4 05 90 61 ec 05         .....a..
  117814:	 07 b5 f4 05 68 0b fd 05         ....h...
  11781c:	 b1 64 05 06 e0 c0 0d 06         .d......
  117824:	 f3 1f 16 06 e8 81 1e 06         ........
  11782c:	 bc e6 26 06 6f 4e 2f 06         ..&.oN/.
  117834:	 fe b8 37 06 66 26 40 06         ..7.f&@.
  11783c:	 a7 96 48 06 be 09 51 06         ..H...Q.
  117844:	 a9 7f 59 06                     ..Y.


sfb_48000_long:
  117848:	 04 04 04 04 04 04 06 06         ........
  117850:	 06 08 0a 0c 10 12 16 1c         ........
  117858:	 22 28 2e 36 36 c0               "(.66.


sfb_48000_short:
  11785e:	 04 04 04 04 04 04 04 04         ........
  117866:	 04 04 04 04 06 06 06 06         ........
  11786e:	 06 06 0a 0a 0a 0c 0c 0c         ........
  117876:	 0e 0e 0e 10 10 10 14 14         ........
  11787e:	 14 1a 1a 1a 42 42 42            ....BBB


sfb_48000_mixed:
  117885:	 04 04 04 04 04 04 06 06         ........
  11788d:	 04 04 04 06 06 06 06 06         ........
  117895:	 06 0a 0a 0a 0c 0c 0c 0e         ........
  11789d:	 0e 0e 10 10 10 14 14 14         ........
  1178a5:	 1a 1a 1a 42 42 42               ...BBB


sfb_44100_long:
  1178ab:	 04 04 04 04 04 04 06 06         ........
  1178b3:	 08 08 0a 0c 10 14 18 1c         ........
  1178bb:	 22 2a 32 36 4c 9e               "*26L.


sfb_44100_short:
  1178c1:	 04 04 04 04 04 04 04 04         ........
  1178c9:	 04 04 04 04 06 06 06 08         ........
  1178d1:	 08 08 0a 0a 0a 0c 0c 0c         ........
  1178d9:	 0e 0e 0e 12 12 12 16 16         ........
  1178e1:	 16 1e 1e 1e 38 38 38            ....888


sfb_44100_mixed:
  1178e8:	 04 04 04 04 04 04 06 06         ........
  1178f0:	 04 04 04 06 06 06 08 08         ........
  1178f8:	 08 0a 0a 0a 0c 0c 0c 0e         ........
  117900:	 0e 0e 12 12 12 16 16 16         ........
  117908:	 1e 1e 1e 38 38 38               ...888


sfb_32000_long:
  11790e:	 04 04 04 04 04 04 06 06         ........
  117916:	 08 0a 0c 10 14 18 1e 26         .......&
  11791e:	 2e 38 44 54 66 1a               .8DTf.


sfb_32000_short:
  117924:	 04 04 04 04 04 04 04 04         ........
  11792c:	 04 04 04 04 06 06 06 08         ........
  117934:	 08 08 0c 0c 0c 10 10 10         ........
  11793c:	 14 14 14 1a 1a 1a 22 22         ......""
  117944:	 22 2a 2a 2a 0c 0c 0c            "***...


sfb_32000_mixed:
  11794b:	 04 04 04 04 04 04 06 06         ........
  117953:	 04 04 04 06 06 06 08 08         ........
  11795b:	 08 0c 0c 0c 10 10 10 14         ........
  117963:	 14 14 1a 1a 1a 22 22 22         ....."""
  11796b:	 2a 2a 2a 0c 0c 0c               ***...


sfb_24000_long:
  117971:	 06 06 06 06 06 06 08 0a         ........
  117979:	 0c 0e 10 12 16 1a 20 26         ...... &
  117981:	 2e 36 3e 46 4c 24               .6>FL$


sfb_24000_short:
  117987:	 04 04 04 04 04 04 04 04         ........
  11798f:	 04 06 06 06 08 08 08 0a         ........
  117997:	 0a 0a 0c 0c 0c 0e 0e 0e         ........
  11799f:	 12 12 12 18 18 18 20 20         ......  
  1179a7:	 20 2c 2c 2c 0c 0c 0c             ,,,...


sfb_24000_mixed:
  1179ae:	 06 06 06 06 06 06 06 06         ........
  1179b6:	 06 08 08 08 0a 0a 0a 0c         ........
  1179be:	 0c 0c 0e 0e 0e 12 12 12         ........
  1179c6:	 18 18 18 20 20 20 2c 2c         ...   ,,
  1179ce:	 2c 0c 0c 0c                     ,...


sfb_22050_long:
  1179d2:	 06 06 06 06 06 06 08 0a         ........
  1179da:	 0c 0e 10 14 18 1c 20 26         ...... &
  1179e2:	 2e 34 3c 44 3a 36               .4<D:6


sfb_22050_short:
  1179e8:	 04 04 04 04 04 04 04 04         ........
  1179f0:	 04 06 06 06 06 06 06 08         ........
  1179f8:	 08 08 0a 0a 0a 0e 0e 0e         ........
  117a00:	 12 12 12 1a 1a 1a 20 20         ......  
  117a08:	 20 2a 2a 2a 12 12 12             ***...


sfb_22050_mixed:
  117a0f:	 06 06 06 06 06 06 06 06         ........
  117a17:	 06 06 06 06 08 08 08 0a         ........
  117a1f:	 0a 0a 0e 0e 0e 12 12 12         ........
  117a27:	 1a 1a 1a 20 20 20 2a 2a         ...   **
  117a2f:	 2a 12 12 12                     *...


sfb_16000_short:
  117a33:	 04 04 04 04 04 04 04 04         ........
  117a3b:	 04 06 06 06 08 08 08 0a         ........
  117a43:	 0a 0a 0c 0c 0c 0e 0e 0e         ........
  117a4b:	 12 12 12 18 18 18 1e 1e         ........
  117a53:	 1e 28 28 28 12 12 12            .(((...


sfb_16000_mixed:
  117a5a:	 06 06 06 06 06 06 06 06         ........
  117a62:	 06 08 08 08 0a 0a 0a 0c         ........
  117a6a:	 0c 0c 0e 0e 0e 12 12 12         ........
  117a72:	 18 18 18 1e 1e 1e 28 28         ......((
  117a7a:	 28 12 12 12                     (...


sfb_8000_long:
  117a7e:	 0c 0c 0c 0c 0c 0c 10 14         ........
  117a86:	 18 1c 20 28 30 38 40 4c         .. (08@L
  117a8e:	 5a 02 02 02 02 02               Z.....


sfb_8000_short:
  117a94:	 08 08 08 08 08 08 08 08         ........
  117a9c:	 08 0c 0c 0c 10 10 10 14         ........
  117aa4:	 14 14 18 18 18 1c 1c 1c         ........
  117aac:	 24 24 24 02 02 02 02 02         $$$.....
  117ab4:	 02 02 02 02 1a 1a 1a            .......


sfb_8000_mixed:
  117abb:	 0c 0c 0c 04 04 04 08 08         ........
  117ac3:	 08 0c 0c 0c 10 10 10 14         ........
  117acb:	 14 14 18 18 18 1c 1c 1c         ........
  117ad3:	 24 24 24 02 02 02 02 02         $$$.....
  117adb:	 02 02 02 02 1a 1a 1a 00         ........
  117ae3:	 00                              .


mad_huff_quad_table:
  117ae4:	 ec 7a 11 00 24 7b 11 00         .z..${..


hufftabA:
  117aec:	 04 01 44 01 82 01 a2 01         ..D.....
  117af4:	 49 00 89 00 29 00 19 00         I...)...
  117afc:	 03 00 03 00 03 00 03 00         ........
  117b04:	 03 00 03 00 03 00 03 00         ........
  117b0c:	 d5 00 f5 00 b5 00 75 00         ......u.
  117b14:	 e5 00 a5 00 93 00 93 00         ........
  117b1c:	 63 00 c3 00 53 00 33 00         c...S.3.


hufftabB:
  117b24:	 f9 00 79 00 b9 00 39 00         ..y...9.
  117b2c:	 d9 00 59 00 99 00 19 00         ..Y.....
  117b34:	 e9 00 69 00 a9 00 29 00         ..i...).
  117b3c:	 c9 00 49 00 89 00 09 00         ..I.....


mad_huff_pair_table:
  117b44:	 44 7c 11 00 00 00 00 00         D|......
  117b4c:	 46 7c 11 00 00 00 03 00         F|......
  117b54:	 56 7c 11 00 00 00 03 00         V|......
  117b5c:	 76 7c 11 00 00 00 03 00         v|......
  117b64:	 00 00 00 00 00 00 00 00         ........
  117b6c:	 96 7c 11 00 00 00 03 00         .|......
  117b74:	 ca 7c 11 00 00 00 04 00         .|......
  117b7c:	 02 7d 11 00 00 00 04 00         .}......
  117b84:	 82 7d 11 00 00 00 04 00         .}......
  117b8c:	 06 7e 11 00 00 00 04 00         .~......
  117b94:	 72 7e 11 00 00 00 04 00         r~......
  117b9c:	 3e 7f 11 00 00 00 04 00         >.......
  117ba4:	 0e 80 11 00 00 00 04 00         ........
  117bac:	 ce 80 11 00 00 00 04 00         ........
  117bb4:	 00 00 00 00 00 00 00 00         ........
  117bbc:	 ea 83 11 00 00 00 04 00         ........
  117bc4:	 e2 86 11 00 01 00 04 00         ........
  117bcc:	 e2 86 11 00 02 00 04 00         ........
  117bd4:	 e2 86 11 00 03 00 04 00         ........
  117bdc:	 e2 86 11 00 04 00 04 00         ........
  117be4:	 e2 86 11 00 06 00 04 00         ........
  117bec:	 e2 86 11 00 08 00 04 00         ........
  117bf4:	 e2 86 11 00 0a 00 04 00         ........
  117bfc:	 e2 86 11 00 0d 00 04 00         ........
  117c04:	 06 8a 11 00 04 00 04 00         ........
  117c0c:	 06 8a 11 00 05 00 04 00         ........
  117c14:	 06 8a 11 00 06 00 04 00         ........
  117c1c:	 06 8a 11 00 07 00 04 00         ........
  117c24:	 06 8a 11 00 08 00 04 00         ........
  117c2c:	 06 8a 11 00 09 00 04 00         ........
  117c34:	 06 8a 11 00 0b 00 04 00         ........
  117c3c:	 06 8a 11 00 0d 00 04 00         ........


hufftab0:
  117c44:	 01 00                           ..


hufftab1:
  117c46:	 17 01 07 01 15 00 15 00         ........
  117c4e:	 03 00 03 00 03 00 03 00         ........


hufftab2:
  117c56:	 86 00 17 01 07 01 17 00         ........
  117c5e:	 03 00 03 00 03 00 03 00         ........
  117c66:	 27 02 07 02 15 02 15 02         '.......
  117c6e:	 25 01 25 01 25 00 25 00         %.%.%.%.


hufftab3:
  117c76:	 86 00 17 00 15 01 15 01         ........
  117c7e:	 05 01 05 01 05 00 05 00         ........
  117c86:	 27 02 07 02 15 02 15 02         '.......
  117c8e:	 25 01 25 01 25 00 25 00         %.%.%.%.


hufftab5:
  117c96:	 88 00 17 01 07 01 17 00         ........
  117c9e:	 03 00 03 00 03 00 03 00         ........
  117ca6:	 82 01 39 02 37 01 37 01         ..9.7.7.
  117cae:	 19 03 09 03 39 00 29 02         ....9.).
  117cb6:	 17 02 17 02 27 01 27 01         ....'.'.
  117cbe:	 07 02 07 02 27 00 27 00         ....'.'.
  117cc6:	 33 03 23 03                     3.#.


hufftab6:
  117cca:	 06 01 82 01 a2 01 19 02         ........
  117cd2:	 29 01 29 00 07 01 07 01         ).).....
  117cda:	 15 01 15 01 15 01 15 01         ........
  117ce2:	 17 00 17 00 07 00 07 00         ........
  117cea:	 37 03 07 03 25 03 25 03         7...%.%.
  117cf2:	 35 02 35 02 35 00 35 00         5.5.5.5.
  117cfa:	 13 03 33 01 23 02 03 02         ..3.#...


hufftab7:
  117d02:	 08 01 08 02 04 03 19 01         ........
  117d0a:	 07 01 07 01 17 00 17 00         ........
  117d12:	 03 00 03 00 03 00 03 00         ........
  117d1a:	 03 00 03 00 03 00 03 00         ........
  117d22:	 44 03 82 03 a2 03 19 05         D.......
  117d2a:	 59 01 c2 03 59 00 e2 03         Y...Y...
  117d32:	 29 04 49 02 17 04 17 04         ).I.....
  117d3a:	 47 01 47 01 47 00 47 00         G.G.G.G.
  117d42:	 09 04 29 03 39 02 09 03         ..).9...
  117d4a:	 17 03 17 03 37 01 37 01         ....7.7.
  117d52:	 37 00 37 00 27 02 27 02         7.7.'.'.
  117d5a:	 15 02 15 02 15 02 15 02         ........
  117d62:	 23 01 23 01 05 02 25 00         #.#...%.
  117d6a:	 55 05 45 05 55 04 55 03         U.E.U.U.
  117d72:	 33 05 43 04 23 05 53 02         3.C.#.S.
  117d7a:	 03 05 33 04 43 03 33 03         ..3.C.3.


hufftab8:
  117d82:	 08 01 08 02 19 02 29 01         ......).
  117d8a:	 15 01 15 01 15 01 15 01         ........
  117d92:	 07 01 07 01 17 00 17 00         ........
  117d9a:	 05 00 05 00 05 00 05 00         ........
  117da2:	 06 03 84 03 c2 03 19 05         ........
  117daa:	 59 01 e2 03 02 04 29 04         Y.....).
  117db2:	 49 02 19 04 47 01 47 01         I...G.G.
  117dba:	 09 04 49 00 29 03 39 02         ..I.).9.
  117dc2:	 19 03 39 01 09 03 39 00         ..9...9.
  117dca:	 25 02 25 02 25 02 25 02         %.%.%.%.
  117dd2:	 05 02 05 02 05 02 05 02         ........
  117dda:	 25 00 25 00 25 00 25 00         %.%.%.%.
  117de2:	 57 05 57 04 45 05 45 05         W.W.E.E.
  117dea:	 53 03 53 03 53 03 53 03         S.S.S.S.
  117df2:	 35 05 45 04 23 05 23 05         5.E.#.#.
  117dfa:	 53 02 03 05 33 04 43 03         S...3.C.
  117e02:	 53 00 33 03                     S.3.


hufftab9:
  117e06:	 08 01 06 02 84 02 c4 02         ........
  117e0e:	 02 03 19 02 29 01 29 00         ....).).
  117e16:	 17 01 17 01 07 01 07 01         ........
  117e1e:	 17 00 17 00 07 00 07 00         ........
  117e26:	 22 03 39 05 59 03 42 03         ".9.Y.B.
  117e2e:	 49 04 29 05 59 02 19 05         I.).Y...
  117e36:	 57 01 57 01 37 04 37 04         W.W.7.7.
  117e3e:	 47 03 47 03 59 00 09 04         G.G.Y...
  117e46:	 27 04 47 02 37 03 47 00         '.G.7.G.
  117e4e:	 15 04 15 04 45 01 45 01         ....E.E.
  117e56:	 25 03 35 02 13 03 13 03         %.5.....
  117e5e:	 33 01 33 01 05 03 35 00         3.3...5.
  117e66:	 23 02 03 02 53 05 43 05         #...S.C.
  117e6e:	 53 04 03 05                     S...


hufftab10:
  117e72:	 08 01 08 02 04 03 19 01         ........
  117e7a:	 07 01 07 01 17 00 17 00         ........
  117e82:	 03 00 03 00 03 00 03 00         ........
  117e8a:	 03 00 03 00 03 00 03 00         ........
  117e92:	 46 03 c4 03 06 04 82 04         F.......
  117e9a:	 a4 04 e4 04 24 05 19 07         ....$...
  117ea2:	 79 01 62 05 84 05 c4 05         y.b.....
  117eaa:	 19 06 69 01 69 00 02 06         ..i.i...
  117eb2:	 22 06 42 06 19 04 49 01         ".B...I.
  117eba:	 49 00 29 03 39 02 09 03         I.).9...
  117ec2:	 17 03 17 03 37 01 37 01         ....7.7.
  117eca:	 37 00 37 00 27 02 27 02         7.7.'.'.
  117ed2:	 15 02 25 01 05 02 25 00         ..%...%.
  117eda:	 77 07 67 07 77 06 57 07         w.g.w.W.
  117ee2:	 77 05 67 06 45 07 45 07         w.g.E.E.
  117eea:	 75 04 55 06 65 05 35 07         u.U.e.5.
  117ef2:	 75 03 75 03 45 06 45 06         u.u.E.E.
  117efa:	 57 05 57 04 65 03 65 03         W.W.e.e.
  117f02:	 23 07 73 02 65 04 05 07         #.s.e...
  117f0a:	 73 00 73 00 63 02 63 02         s.s.c.c.
  117f12:	 45 05 35 05 03 06 03 06         E.5.....
  117f1a:	 55 03 45 04 33 06 23 06         U.E.3.#.
  117f22:	 25 05 55 02 13 05 13 05         %.U.....
  117f2a:	 53 01 53 01 35 04 45 03         S.S.5.E.
  117f32:	 03 05 53 00 23 04 43 02         ..S.#.C.
  117f3a:	 33 03 03 04                     3...


hufftab11:
  117f3e:	 08 01 08 02 08 03 06 04         ........
  117f46:	 19 02 82 04 17 01 17 01         ........
  117f4e:	 07 01 07 01 17 00 17 00         ........
  117f56:	 05 00 05 00 05 00 05 00         ........
  117f5e:	 a4 04 e6 04 64 05 a2 05         ....d...
  117f66:	 c4 05 29 07 79 02 02 06         ..).y...
  117f6e:	 77 01 77 01 19 07 79 00         w.w...y.
  117f76:	 39 06 69 03 69 00 22 06         9.i.i.".
  117f7e:	 42 06 19 05 67 02 67 02         B...g.g.
  117f86:	 29 06 09 06 17 06 17 06         ).......
  117f8e:	 67 01 67 01 59 01 39 04         g.g.Y.9.
  117f96:	 59 00 62 06 29 04 49 02         Y.b.).I.
  117f9e:	 19 04 49 01 09 04 49 00         ..I...I.
  117fa6:	 27 03 27 03 37 02 37 02         '.'.7.7.
  117fae:	 15 03 15 03 15 03 15 03         ........
  117fb6:	 35 01 35 01 35 01 35 01         5.5.5.5.
  117fbe:	 07 03 37 00 25 02 25 02         ..7.%.%.
  117fc6:	 23 01 23 01 23 01 23 01         #.#.#.#.
  117fce:	 03 02 23 00 75 07 65 07         ..#.u.e.
  117fd6:	 75 06 75 05 65 06 65 06         u.u.e.e.
  117fde:	 45 07 45 07 75 04 75 04         E.E.u.u.
  117fe6:	 57 07 57 05 55 06 65 05         W.W.U.e.
  117fee:	 33 07 33 07 73 03 43 06         3.3.s.C.
  117ff6:	 45 05 55 04 35 05 55 03         E.U.5.U.
  117ffe:	 63 04 03 07 43 04 23 05         c...C.#.
  118006:	 53 02 03 05 43 03 33 03         S...C.3.


hufftab12:
  11800e:	 08 01 08 02 08 03 04 04         ........
  118016:	 46 04 c2 04 19 02 29 01         F.....).
  11801e:	 e2 04 09 00 17 01 17 01         ........
  118026:	 07 01 07 01 17 00 17 00         ........
  11802e:	 04 05 42 05 62 05 82 05         ..B.b...
  118036:	 59 06 39 07 a2 05 29 07         Y.9...).
  11803e:	 79 02 49 06 69 04 19 07         y.I.i...
  118046:	 79 01 c2 05 39 06 69 03         y...9.i.
  11804e:	 49 05 59 04 49 04 e2 05         I.Y.I...
  118056:	 27 06 27 06 67 02 67 02         '.'.g.g.
  11805e:	 67 01 67 01 19 06 69 00         g.g...i.
  118066:	 39 05 59 03 29 05 59 02         9.Y.).Y.
  11806e:	 17 05 17 05 57 01 57 01         ....W.W.
  118076:	 37 04 37 04 47 03 47 03         7.7.G.G.
  11807e:	 59 00 09 04 27 04 27 04         Y...'.'.
  118086:	 47 02 47 02 17 04 17 04         G.G.....
  11808e:	 35 03 45 01 25 03 35 02         5.E.%.5.
  118096:	 47 00 07 03 35 00 35 00         G...5.5.
  11809e:	 13 03 13 03 13 03 13 03         ........
  1180a6:	 33 01 23 02 03 02 23 00         3.#...#.
  1180ae:	 75 07 65 07 73 06 73 06         u.e.s.s.
  1180b6:	 53 07 73 05 63 06 43 07         S.s.c.C.
  1180be:	 73 04 63 05 73 03 53 05         s.c.s.S.
  1180c6:	 03 07 73 00 03 06 03 05         ..s.....


hufftab13:
  1180ce:	 08 01 08 02 08 03 04 04         ........
  1180d6:	 19 01 09 01 17 00 17 00         ........
  1180de:	 03 00 03 00 03 00 03 00         ........
  1180e6:	 03 00 03 00 03 00 03 00         ........
  1180ee:	 48 04 48 05 48 06 48 07         H.H.H.H.
  1180f6:	 48 08 48 09 46 0a c6 0a         H.H.F...
  1180fe:	 46 0b c6 0b 46 0c c6 0c         F...F...
  118106:	 42 0d 64 0d a6 0d 22 0e         B.d...".
  11810e:	 44 0e 84 0e c4 0e 04 0f         D.......
  118116:	 89 01 42 0f 62 0f 82 0f         ..B.b...
  11811e:	 a4 0f e2 0f 19 05 59 01         ......Y.
  118126:	 02 10 22 10 42 10 19 04         ..".B...
  11812e:	 47 01 47 01 09 04 49 00         G.G...I.
  118136:	 29 03 39 02 17 03 17 03         ).9.....
  11813e:	 37 01 37 01 07 03 07 03         7.7.....
  118146:	 37 00 37 00 27 02 27 02         7.7.'.'.
  11814e:	 15 02 25 01 05 02 25 00         ..%...%.
  118156:	 68 10 68 11 68 12 66 13         h.h.h.f.
  11815e:	 e4 13 24 14 66 14 e4 14         ..$.f...
  118166:	 22 15 44 15 84 15 c4 15         ".D.....
  11816e:	 04 16 44 16 19 0f f9 01         ..D.....
  118176:	 f9 00 82 16 a2 16 c2 16         ........
  11817e:	 e9 02 e2 16 19 0e e9 01         ........
  118186:	 02 17 22 17 42 17 62 17         ..".B.b.
  11818e:	 82 17 a2 17 c9 06 39 0d         ......9.
  118196:	 c2 17 29 0d d9 02 19 0d         ..).....
  11819e:	 b9 07 e2 17 02 18 c9 03         ........
  1181a6:	 22 18 49 0b d7 01 d7 01         ".I.....
  1181ae:	 09 0d d9 00 89 0a a9 08         ........
  1181b6:	 49 0c c9 04 69 0b b9 06         I...i...
  1181be:	 37 0c 37 0c 27 0c 27 0c         7.7.'.'.
  1181c6:	 c7 02 c7 02 57 0b 57 0b         ....W.W.
  1181ce:	 b9 05 89 09 17 0c 17 0c         ........
  1181d6:	 c7 01 c7 01 99 08 09 0c         ........
  1181de:	 c7 00 c7 00 b9 04 69 0a         ......i.
  1181e6:	 a9 06 79 09 37 0b 37 0b         ..y.7.7.
  1181ee:	 b7 03 b7 03 89 08 59 0a         ......Y.
  1181f6:	 27 0b 27 0b a9 05 69 09         '.'...i.
  1181fe:	 a7 04 a7 04 79 08 89 07         ....y...
  118206:	 97 04 97 04 79 07 79 06         ....y.y.
  11820e:	 b5 02 b5 02 b5 02 b5 02         ........
  118216:	 15 0b 15 0b b5 01 b5 01         ........
  11821e:	 07 0b b7 00 97 06 47 0a         ......G.
  118226:	 37 0a a7 03 57 09 97 05         7...W...
  11822e:	 25 0a 25 0a a5 02 a5 02         %.%.....
  118236:	 15 0a 15 0a a5 01 a5 01         ........
  11823e:	 07 0a 67 08 a5 00 a5 00         ..g.....
  118246:	 87 06 47 09 95 03 95 03         ..G.....
  11824e:	 37 09 57 08 87 05 67 07         7.W...g.
  118256:	 25 09 25 09 95 02 95 02         %.%.....
  11825e:	 57 07 77 05 35 08 35 08         W.w.5.5.
  118266:	 85 03 85 03 67 06 47 07         ....g.G.
  11826e:	 77 04 57 06 67 05 77 03         w.W.g.w.
  118276:	 13 09 93 01 05 09 95 00         ........
  11827e:	 45 08 85 04 75 02 75 02         E...u.u.
  118286:	 47 06 67 04 23 08 23 08         G.g.#.#.
  11828e:	 23 08 23 08 83 02 13 08         #.#.....
  118296:	 35 07 25 07 13 07 13 07         5.%.....
  11829e:	 73 01 73 01 55 05 05 07         s.s.U...
  1182a6:	 75 00 35 06 65 03 45 05         u.5.e.E.
  1182ae:	 55 04 25 06 65 02 35 05         U.%.e.5.
  1182b6:	 03 08 83 00 13 06 63 01         ......c.
  1182be:	 03 06 63 00 55 03 45 04         ..c.U.E.
  1182c6:	 23 05 23 05 53 02 03 05         #.#.S...
  1182ce:	 33 04 43 03 53 00 23 04         3.C.S.#.
  1182d6:	 43 02 33 03 46 18 f9 0f         C.3.F...
  1182de:	 e9 0f d9 0f e9 0e c9 0f         ........
  1182e6:	 d9 0e b9 0f f9 0b c9 0e         ........
  1182ee:	 d9 0c c2 18 e7 0c e7 0c         ........
  1182f6:	 d7 0d d7 0d f9 0a c9 0d         ........
  1182fe:	 b7 0e b7 0e e7 0b e7 0b         ........
  118306:	 97 0f 97 0f f7 09 f7 09         ........
  11830e:	 e7 0a e7 0a b7 0d b7 0d         ........
  118316:	 d7 0b d7 0b 87 0f 87 0f         ........
  11831e:	 f7 08 f7 08 c7 0c c7 0c         ........
  118326:	 a9 0e 99 0e 87 0e 87 0e         ........
  11832e:	 79 0f 79 0e f5 07 f5 07         y.y.....
  118336:	 f5 07 f5 07 d5 0a d5 0a         ........
  11833e:	 a7 0d b7 0c c7 0b f7 06         ........
  118346:	 65 0f 65 0f e5 08 55 0f         e.e...U.
  11834e:	 95 0d d5 09 f5 05 e5 07         ........
  118356:	 a5 0c b5 0b 45 0f 45 0f         ....E.E.
  11835e:	 f5 04 f5 04 c7 0a e7 06         ........
  118366:	 f5 03 f5 03 33 0f 33 0f         ....3.3.
  11836e:	 85 0d d5 08 23 0f f3 02         ....#...
  118376:	 65 0e 95 0c 03 0f 03 0f         e.......
  11837e:	 c5 09 55 0e a3 0b a3 0b         ..U.....
  118386:	 75 0d d5 07 43 0e 43 0e         u...C.C.
  11838e:	 c5 08 d5 06 33 0e 33 0e         ....3.3.
  118396:	 b3 09 b3 09 95 0b a5 0a         ........
  11839e:	 b3 0a e3 05 e3 04 83 0c         ........
  1183a6:	 63 0d e3 03 23 0e 03 0e         c...#...
  1183ae:	 e3 00 53 0d d3 05 73 0c         ..S...s.
  1183b6:	 c3 07 43 0d 83 0b b3 08         ..C.....
  1183be:	 d3 04 93 0a a3 09 63 0c         ......c.
  1183c6:	 d3 03 73 0b 53 0c c3 05         ..s.S...
  1183ce:	 93 09 73 0a a3 07 93 07         ..s.....
  1183d6:	 f7 0e f7 0c f5 0d f5 0d         ........
  1183de:	 e3 0d e3 0d e3 0d e3 0d         ........
  1183e6:	 a3 0f e3 09                     ....


hufftab15:
  1183ea:	 08 01 08 02 08 03 08 04         ........
  1183f2:	 08 05 06 06 86 06 04 07         ........
  1183fa:	 42 07 62 07 17 01 17 01         B.b.....
  118402:	 09 01 19 00 07 00 07 00         ........
  11840a:	 88 07 88 08 88 09 88 0a         ........
  118412:	 88 0b 86 0c 06 0d 88 0d         ........
  11841a:	 86 0e 06 0f 86 0f 06 10         ........
  118422:	 84 10 c6 10 46 11 c4 11         ....F...
  11842a:	 04 12 44 12 84 12 c4 12         ..D.....
  118432:	 04 13 44 13 84 13 c4 13         ..D.....
  11843a:	 02 14 22 14 42 14 64 14         ..".B.d.
  118442:	 a2 14 c2 14 e4 14 22 15         ......".
  11844a:	 42 15 62 15 99 01 82 15         B.b.....
  118452:	 a2 15 c2 15 e2 15 02 16         ........
  11845a:	 29 08 89 02 19 08 89 01         ).......
  118462:	 22 16 42 16 62 16 82 16         ".B.b...
  11846a:	 29 07 79 02 69 04 19 07         ).y.i...
  118472:	 59 05 79 01 a2 16 39 06         Y.y...9.
  11847a:	 69 03 49 05 59 04 29 06         i.I.Y.).
  118482:	 69 02 19 06 c2 16 39 05         i.....9.
  11848a:	 67 01 67 01 59 03 49 04         g.g.Y.I.
  118492:	 27 05 27 05 57 02 57 02         '.'.W.W.
  11849a:	 17 05 17 05 57 01 57 01         ....W.W.
  1184a2:	 09 05 59 00 37 04 37 04         ..Y.7.7.
  1184aa:	 47 03 27 04 47 02 37 03         G.'.G.7.
  1184b2:	 45 01 45 01 17 04 07 04         E.E.....
  1184ba:	 25 03 25 03 35 02 35 02         %.%.5.5.
  1184c2:	 47 00 07 03 15 03 15 03         G.......
  1184ca:	 35 01 35 00 23 02 23 02         5.5.#.#.
  1184d2:	 13 02 23 01 03 02 23 00         ..#...#.
  1184da:	 e2 16 02 17 e9 0e 22 17         ......".
  1184e2:	 42 17 62 17 f9 0b 82 17         B.b.....
  1184ea:	 d9 0d a9 0f f9 0a b9 0e         ........
  1184f2:	 e9 0b c9 0d d9 0c 99 0f         ........
  1184fa:	 f9 09 e9 0a b9 0d d9 0b         ........
  118502:	 89 0f f9 08 c9 0c 99 0e         ........
  11850a:	 e9 09 79 0f f9 07 a9 0d         ..y.....
  118512:	 d9 0a b9 0c 69 0f a2 17         ....i...
  11851a:	 c7 0b c7 0b f7 06 f7 06         ........
  118522:	 89 0e e9 08 59 0f 99 0d         ....Y...
  11852a:	 f7 05 f7 05 77 0e 77 0e         ....w.w.
  118532:	 e7 07 e7 07 a7 0c a7 0c         ........
  11853a:	 c7 0a c7 0a b7 0b b7 0b         ........
  118542:	 d9 09 89 0d 47 0f 47 0f         ....G.G.
  11854a:	 f7 04 f7 04 37 0f 37 0f         ....7.7.
  118552:	 f7 03 f7 03 d7 08 d7 08         ........
  11855a:	 e7 06 e7 06 27 0f 27 0f         ....'.'.
  118562:	 f7 02 f7 02 69 0e f9 00         ....i...
  11856a:	 17 0f 17 0f f7 01 f7 01         ........
  118572:	 97 0c 97 0c c7 09 c7 09         ........
  11857a:	 57 0e a7 0b b7 0a e7 05         W.......
  118582:	 77 0d d7 07 47 0e e7 04         w...G...
  11858a:	 87 0c c7 08 37 0e 67 0d         ....7.g.
  118592:	 d7 06 e7 03 97 0b b7 09         ........
  11859a:	 27 0e 27 0e a7 0a a7 0a         '.'.....
  1185a2:	 e7 02 e7 02 17 0e 17 0e         ........
  1185aa:	 e7 01 e7 01 09 0e e9 00         ........
  1185b2:	 57 0d 57 0d d7 05 d7 05         W.W.....
  1185ba:	 77 0c c7 07 47 0d 87 0b         w...G...
  1185c2:	 d5 04 d5 04 b7 08 97 0a         ........
  1185ca:	 a7 09 67 0c c7 06 37 0d         ..g...7.
  1185d2:	 d5 03 d5 03 d5 02 d5 02         ........
  1185da:	 27 0d 07 0d 15 0d 15 0d         '.......
  1185e2:	 75 0b 75 0b b5 07 b5 07         u.u.....
  1185ea:	 d5 01 d5 01 57 0c d7 00         ....W...
  1185f2:	 c5 05 c5 05 85 0a 85 0a         ........
  1185fa:	 a5 08 45 0c c5 04 65 0b         ..E...e.
  118602:	 b5 06 b5 06 97 09 07 0c         ........
  11860a:	 35 0c 35 0c c5 03 c5 03         5.5.....
  118612:	 75 0a 75 0a a5 07 a5 07         u.u.....
  11861a:	 a5 06 a5 06 c7 00 07 0b         ........
  118622:	 c3 02 c3 02 25 0c 55 0b         ....%.U.
  11862a:	 b5 05 15 0c 85 09 95 08         ........
  118632:	 c5 01 45 0b b5 04 65 0a         ..E...e.
  11863a:	 35 0b 75 09 b3 03 b3 03         5.u.....
  118642:	 95 07 85 08 25 0b 55 0a         ....%.U.
  11864a:	 b3 02 b3 02 a5 05 15 0b         ........
  118652:	 b3 01 b3 01 b5 00 65 09         ......e.
  11865a:	 95 06 45 0a a5 04 75 08         ..E...u.
  118662:	 85 07 35 0a a3 03 a3 03         ..5.....
  11866a:	 53 09 93 05 23 0a a3 02         S...#...
  118672:	 13 0a a3 01 05 0a a5 00         ........
  11867a:	 63 08 63 08 83 06 43 09         c.c...C.
  118682:	 93 04 33 09 93 03 93 03         ..3.....
  11868a:	 75 07 05 09 53 08 83 05         u...S...
  118692:	 23 09 63 07 73 06 93 02         #.c.s...
  11869a:	 13 09 93 00 43 08 83 04         ....C...
  1186a2:	 53 07 73 05 33 08 83 03         S.s.3...
  1186aa:	 63 06 43 07 73 04 03 08         c.C.s...
  1186b2:	 83 00 53 06 63 05 33 07         ..S.c.3.
  1186ba:	 73 03 43 06 03 07 73 00         s.C...s.
  1186c2:	 03 06 63 00 f3 0f e3 0f         ..c.....
  1186ca:	 f3 0e d3 0f f3 0d c3 0f         ........
  1186d2:	 f3 0c d3 0e e3 0d b3 0f         ........
  1186da:	 c3 0e e3 0c a3 0e 03 0f         ........


hufftab16:
  1186e2:	 08 01 08 02 08 03 04 04         ........
  1186ea:	 19 01 09 01 17 00 17 00         ........
  1186f2:	 03 00 03 00 03 00 03 00         ........
  1186fa:	 03 00 03 00 03 00 03 00         ........
  118702:	 46 04 c6 04 44 05 f9 0f         F...D...
  11870a:	 84 05 c2 05 e8 05 f9 02         ........
  118712:	 e2 06 19 0f f9 01 08 07         ........
  11871a:	 08 08 08 09 08 0a 08 0b         ........
  118722:	 08 0c 06 0d 86 0d 06 0e         ........
  11872a:	 86 0e 06 0f 86 0f 06 10         ........
  118732:	 84 10 c4 10 02 11 24 11         ......$.
  11873a:	 64 11 a2 11 59 01 c2 11         d...Y...
  118742:	 e2 11 02 12 22 12 19 04         ...."...
  11874a:	 49 01 42 12 29 03 39 02         I.B.).9.
  118752:	 17 03 17 03 37 01 37 01         ....7.7.
  11875a:	 09 03 39 00 27 02 27 02         ..9.'.'.
  118762:	 15 02 25 01 05 02 25 00         ..%...%.
  11876a:	 e7 0f f7 0e d7 0f f7 0d         ........
  118772:	 c7 0f f7 0c b7 0f f7 0b         ........
  11877a:	 a5 0f a5 0f f7 0a 97 0f         ........
  118782:	 f7 09 f7 08 85 0f 85 0f         ........
  11878a:	 75 0f f5 07 65 0f f5 06         u...e...
  118792:	 55 0f f5 05 43 0f 43 0f         U...C.C.
  11879a:	 f3 04 f3 03 f3 00 f3 00         ........
  1187a2:	 f3 00 f3 00 f3 00 f3 00         ........
  1187aa:	 f3 00 f3 00 35 0f 35 0f         ....5.5.
  1187b2:	 35 0f 35 0f 68 12 66 13         5.5.h.f.
  1187ba:	 e6 13 66 14 23 0f 03 0f         ..f.#...
  1187c2:	 e4 14 24 15 64 15 a2 15         ..$.d...
  1187ca:	 c4 15 04 16 42 16 64 16         ....B.d.
  1187d2:	 a4 16 e4 16 24 17 e9 03         ....$...
  1187da:	 62 17 82 17 a2 17 c2 17         b.......
  1187e2:	 e2 17 02 18 22 18 09 0d         ...."...
  1187ea:	 42 18 62 18 82 18 39 0c         B.b...9.
  1187f2:	 a2 18 19 0c c9 00 c2 18         ........
  1187fa:	 e7 02 e7 02 29 0e 19 0e         ....)...
  118802:	 d9 03 29 0d d9 02 d9 01         ..).....
  11880a:	 39 0b e2 18 17 0d 17 0d         9.......
  118812:	 c9 04 69 0b c9 03 a9 07         ..i.....
  11881a:	 27 0c 27 0c c9 02 b9 05         '.'.....
  118822:	 c9 01 09 0c 49 0b b9 04         ....I...
  11882a:	 69 0a a9 06 b7 03 b7 03         i.......
  118832:	 59 0a a9 05 27 0b 27 0b         Y...'.'.
  11883a:	 b7 02 b7 02 17 0b 17 0b         ........
  118842:	 b7 01 b7 01 09 0b b9 00         ........
  11884a:	 69 09 99 06 49 0a a9 04         i...I...
  118852:	 79 08 89 07 a7 03 a7 03         y.......
  11885a:	 39 0a 59 09 27 0a 27 0a         9.Y.'.'.
  118862:	 99 05 69 08 a7 01 a7 01         ..i.....
  11886a:	 89 06 79 07 97 04 97 04         ..y.....
  118872:	 49 09 59 07 67 07 67 07         I.Y.g.g.
  11887a:	 a5 02 a5 02 a5 02 a5 02         ........
  118882:	 15 0a 15 0a 07 0a a7 00         ........
  11888a:	 37 09 97 03 57 08 87 05         7...W...
  118892:	 25 09 25 09 95 02 95 02         %.%.....
  11889a:	 77 06 07 09 15 09 15 09         w.......
  1188a2:	 95 01 95 01 97 00 47 08         ......G.
  1188aa:	 87 04 77 05 37 08 87 03         ..w.7...
  1188b2:	 67 06 27 08 85 02 85 02         g.'.....
  1188ba:	 47 07 77 04 15 08 15 08         G.w.....
  1188c2:	 85 01 85 01 85 00 85 00         ........
  1188ca:	 07 08 57 06 35 07 35 07         ..W.5.5.
  1188d2:	 75 03 75 03 67 05 47 06         u.u.g.G.
  1188da:	 25 07 25 07 75 02 75 02         %.%.u.u.
  1188e2:	 67 04 57 05 05 07 05 07         g.W.....
  1188ea:	 13 07 13 07 13 07 13 07         ........
  1188f2:	 73 01 73 01 75 00 35 06         s.s.u.5.
  1188fa:	 65 03 45 05 55 04 25 06         e.E.U.%.
  118902:	 63 02 13 06 63 01 63 01         c...c.c.
  11890a:	 05 06 65 00 53 03 53 03         ..e.S.S.
  118912:	 35 05 45 04 23 05 53 02         5.E.#.S.
  11891a:	 13 05 03 05 33 04 43 03         ....3.C.
  118922:	 53 00 23 04 43 02 33 03         S.#.C.3.
  11892a:	 03 04 43 00 c9 0e 02 19         ..C.....
  118932:	 d7 0e d7 0e e7 09 e7 09         ........
  11893a:	 e9 0a d9 09 e5 0e e5 0e         ........
  118942:	 e5 0e e5 0e e7 0d e7 0d         ........
  11894a:	 e7 0b e7 0b b5 0e b5 0e         ........
  118952:	 c5 0d c5 0d d7 0c d7 0b         ........
  11895a:	 a5 0e a5 0e c5 0c c5 0c         ........
  118962:	 a7 0d d7 0a 77 0e a7 0c         ....w...
  11896a:	 c5 0a c5 0a c7 09 77 0d         ......w.
  118972:	 55 0e 55 0e b3 0d b3 0d         U.U.....
  11897a:	 b3 0d b3 0d 93 0e 93 0e         ........
  118982:	 b5 0c c5 0b 85 0e e5 08         ........
  11898a:	 95 0d e5 07 b5 0b 85 0d         ........
  118992:	 d5 08 65 0e e3 06 93 0c         ..e.....
  11899a:	 a5 0b b5 0a e5 05 d5 07         ........
  1189a2:	 43 0e 43 0e e5 04 85 0c         C.C.....
  1189aa:	 c3 08 33 0e 63 0d 63 0d         ..3.c.c.
  1189b2:	 d5 06 95 0b b5 09 a5 0a         ........
  1189ba:	 e3 01 e3 01 d3 04 d3 04         ........
  1189c2:	 b5 08 a5 09 73 0b 73 0b         ....s.s.
  1189ca:	 b5 07 d5 00 03 0e e3 00         ........
  1189d2:	 53 0d d3 05 73 0c c3 07         S...s...
  1189da:	 43 0d 83 0b 93 0a 63 0c         C.....c.
  1189e2:	 c3 06 33 0d 53 0c c3 05         ..3.S...
  1189ea:	 83 0a a3 08 93 09 43 0c         ......C.
  1189f2:	 b3 06 73 0a 53 0b 83 09         ..s.S...
  1189fa:	 93 08 73 09 93 07 83 08         ..s.....
  118a02:	 e3 0c d3 0d                     ....


hufftab24:
  118a06:	 08 01 08 02 08 03 f9 0f         ........
  118a0e:	 08 04 08 05 08 06 08 07         ........
  118a16:	 08 08 08 09 06 0a 84 0a         ........
  118a1e:	 19 01 09 01 19 00 09 00         ........
  118a26:	 e9 0f f9 0e d9 0f f9 0d         ........
  118a2e:	 c9 0f f9 0c b9 0f f9 0b         ........
  118a36:	 f7 0a f7 0a a9 0f 99 0f         ........
  118a3e:	 f7 09 f7 09 f7 08 f7 08         ........
  118a46:	 89 0f 79 0f f7 07 f7 07         ..y.....
  118a4e:	 67 0f 67 0f f7 06 f7 06         g.g.....
  118a56:	 57 0f 57 0f f7 05 f7 05         W.W.....
  118a5e:	 47 0f 47 0f f7 04 f7 04         G.G.....
  118a66:	 37 0f 37 0f f7 03 f7 03         7.7.....
  118a6e:	 27 0f 27 0f f7 02 f7 02         '.'.....
  118a76:	 f7 01 f7 01 19 0f f9 00         ........
  118a7e:	 c6 0a 46 0b c6 0b 46 0c         ..F...F.
  118a86:	 c8 0c c6 0d 46 0e c6 0e         ....F...
  118a8e:	 44 0f 84 0f c4 0f 04 10         D.......
  118a96:	 44 10 84 10 c4 10 04 11         D.......
  118a9e:	 44 11 86 11 04 12 44 12         D.....D.
  118aa6:	 84 12 c6 12 44 13 86 13         ....D...
  118aae:	 02 14 24 14 64 14 a2 14         ..$.d...
  118ab6:	 c4 14 02 15 22 15 42 15         ....".B.
  118abe:	 62 15 82 15 a2 15 c2 15         b.......
  118ac6:	 e2 15 02 16 22 16 42 16         ....".B.
  118ace:	 62 16 82 16 a2 16 c2 16         b.......
  118ad6:	 e2 16 02 17 24 17 62 17         ....$.b.
  118ade:	 84 17 79 03 c2 17 79 02         ..y...y.
  118ae6:	 49 06 69 04 59 05 79 01         I.i.Y.y.
  118aee:	 39 06 69 03 49 05 59 04         9.i.I.Y.
  118af6:	 29 06 69 02 19 06 69 01         ).i...i.
  118afe:	 e2 17 39 05 59 03 49 04         ..9.Y.I.
  118b06:	 29 05 59 02 19 05 02 18         ).Y.....
  118b0e:	 57 01 57 01 39 04 49 03         W.W.9.I.
  118b16:	 27 04 27 04 47 02 47 02         '.'.G.G.
  118b1e:	 37 03 37 03 17 04 17 04         7.7.....
  118b26:	 47 01 47 01 09 04 49 00         G.G...I.
  118b2e:	 27 03 27 03 37 02 37 02         '.'.7.7.
  118b36:	 15 03 15 03 15 03 15 03         ........
  118b3e:	 35 01 35 01 35 01 35 01         5.5.5.5.
  118b46:	 07 03 37 00 25 02 25 02         ..7.%.%.
  118b4e:	 13 02 13 02 13 02 13 02         ........
  118b56:	 23 01 23 01 05 02 25 00         #.#...%.
  118b5e:	 03 0f 03 0f 03 0f 03 0f         ........
  118b66:	 e7 0e d7 0e e7 0d c7 0e         ........
  118b6e:	 e7 0c d7 0d b7 0e e7 0b         ........
  118b76:	 c7 0d d7 0c a7 0e e7 0a         ........
  118b7e:	 b7 0d d7 0b c7 0c 97 0e         ........
  118b86:	 e7 09 a7 0d d7 0a b7 0c         ........
  118b8e:	 c7 0b 87 0e e7 08 97 0d         ........
  118b96:	 d7 09 77 0e e7 07 a7 0c         ..w.....
  118b9e:	 c7 0a c7 0a b7 0b b7 0b         ........
  118ba6:	 87 0d 87 0d d7 08 d7 08         ........
  118bae:	 09 0e e9 00 07 0d 07 0d         ........
  118bb6:	 e5 06 e5 06 e5 06 e5 06         ........
  118bbe:	 67 0e 97 0c c5 09 c5 09         g.......
  118bc6:	 55 0e 55 0e b5 0a b5 0a         U.U.....
  118bce:	 e5 05 e5 05 a7 0b 77 0d         ......w.
  118bd6:	 d5 07 d5 07 e5 04 e5 04         ........
  118bde:	 85 0c 85 0c c5 08 c5 08         ........
  118be6:	 47 0e 27 0e 35 0e 35 0e         G.'.5.5.
  118bee:	 65 0d d5 06 e5 03 95 0b         e.......
  118bf6:	 b5 09 a5 0a e5 02 15 0e         ........
  118bfe:	 e5 01 55 0d d5 05 75 0c         ..U...u.
  118c06:	 c5 07 45 0d 85 0b b5 08         ..E.....
  118c0e:	 d5 04 95 0a a5 09 65 0c         ......e.
  118c16:	 c5 06 35 0d d5 03 25 0d         ..5...%.
  118c1e:	 d5 02 15 0d 75 0b b5 07         ....u...
  118c26:	 d5 01 55 0c c5 05 85 0a         ..U.....
  118c2e:	 a5 08 95 09 45 0c c5 04         ....E...
  118c36:	 65 0b 65 0b b5 06 b5 06         e.e.....
  118c3e:	 d7 00 07 0c 35 0c 35 0c         ....5.5.
  118c46:	 c5 03 75 0a a5 07 25 0c         ..u...%.
  118c4e:	 c5 02 55 0b b5 05 15 0c         ..U.....
  118c56:	 85 09 95 08 c5 01 45 0b         ......E.
  118c5e:	 c7 00 07 0b 35 0b 35 0b         ....5.5.
  118c66:	 b7 00 07 0a 15 0a 15 0a         ........
  118c6e:	 b3 04 b3 04 65 0a a5 06         ....e...
  118c76:	 75 09 75 09 95 07 95 07         u.u.....
  118c7e:	 a7 00 07 09 95 00 95 00         ........
  118c86:	 b3 03 83 08 25 0b 55 0a         ....%.U.
  118c8e:	 b3 02 b3 02 a5 05 15 0b         ........
  118c96:	 b5 01 65 09 93 06 a3 04         ..e.....
  118c9e:	 45 0a 75 08 83 07 83 07         E.u.....
  118ca6:	 33 0a a3 03 53 09 93 05         3...S...
  118cae:	 23 0a a3 02 a3 01 63 08         #.....c.
  118cb6:	 83 06 73 07 43 09 93 04         ..s.C...
  118cbe:	 33 09 93 03 53 08 83 05         3...S...
  118cc6:	 23 09 63 07 73 06 93 02         #.c.s...
  118cce:	 13 09 93 01 43 08 83 04         ....C...
  118cd6:	 53 07 73 05 33 08 83 03         S.s.3...
  118cde:	 63 06 23 08 83 02 13 08         c.#.....
  118ce6:	 43 07 73 04 83 01 83 01         C.s.....
  118cee:	 05 08 85 00 53 06 63 05         ....S.c.
  118cf6:	 13 07 13 07 05 07 75 00         ......u.
  118cfe:	 33 07 23 07 03 06 63 00         3.#...c.
  118d06:	 03 05 53 00 00 00               ..S...


D:
  118d0c:	 00 00 00 00 f9 ff ff ff         ........
  118d14:	 35 00 00 00 8d ff ff ff         5.......
  118d1c:	 fd 01 00 00 f8 fa ff ff         ........
  118d24:	 6b 06 00 00 64 db ff ff         k...d...
  118d2c:	 47 49 00 00 9c 24 00 00         GI...$..
  118d34:	 6b 06 00 00 08 05 00 00         k.......
  118d3c:	 fd 01 00 00 73 00 00 00         ....s...
  118d44:	 35 00 00 00 07 00 00 00         5.......
  118d4c:	 00 00 00 00 f9 ff ff ff         ........
  118d54:	 35 00 00 00 8d ff ff ff         5.......
  118d5c:	 fd 01 00 00 f8 fa ff ff         ........
  118d64:	 6b 06 00 00 64 db ff ff         k...d...
  118d6c:	 47 49 00 00 9c 24 00 00         GI...$..
  118d74:	 6b 06 00 00 08 05 00 00         k.......
  118d7c:	 fd 01 00 00 73 00 00 00         ....s...
  118d84:	 35 00 00 00 07 00 00 00         5.......
  118d8c:	 00 00 00 00 f8 ff ff ff         ........
  118d94:	 36 00 00 00 7e ff ff ff         6...~...
  118d9c:	 f4 01 00 00 9d fa ff ff         ........
  118da4:	 d2 05 00 00 96 d9 ff ff         ........
  118dac:	 3c 49 00 00 ce 22 00 00         <I..."..
  118db4:	 f7 06 00 00 ad 04 00 00         ........
  118dbc:	 04 02 00 00 64 00 00 00         ....d...
  118dc4:	 34 00 00 00 06 00 00 00         4.......
  118dcc:	 00 00 00 00 f8 ff ff ff         ........
  118dd4:	 36 00 00 00 7e ff ff ff         6...~...
  118ddc:	 f4 01 00 00 9d fa ff ff         ........
  118de4:	 d2 05 00 00 96 d9 ff ff         ........
  118dec:	 3c 49 00 00 ce 22 00 00         <I..."..
  118df4:	 f7 06 00 00 ad 04 00 00         ........
  118dfc:	 04 02 00 00 64 00 00 00         ....d...
  118e04:	 34 00 00 00 06 00 00 00         4.......
  118e0c:	 00 00 00 00 f7 ff ff ff         ........
  118e14:	 37 00 00 00 6f ff ff ff         7...o...
  118e1c:	 e8 01 00 00 42 fa ff ff         ....B...
  118e24:	 2a 05 00 00 ca d7 ff ff         *.......
  118e2c:	 1a 49 00 00 00 21 00 00         .I...!..
  118e34:	 76 07 00 00 52 04 00 00         v...R...
  118e3c:	 08 02 00 00 57 00 00 00         ....W...
  118e44:	 32 00 00 00 06 00 00 00         2.......
  118e4c:	 00 00 00 00 f7 ff ff ff         ........
  118e54:	 37 00 00 00 6f ff ff ff         7...o...
  118e5c:	 e8 01 00 00 42 fa ff ff         ....B...
  118e64:	 2a 05 00 00 ca d7 ff ff         *.......
  118e6c:	 1a 49 00 00 00 21 00 00         .I...!..
  118e74:	 76 07 00 00 52 04 00 00         v...R...
  118e7c:	 08 02 00 00 57 00 00 00         ....W...
  118e84:	 32 00 00 00 06 00 00 00         2.......
  118e8c:	 00 00 00 00 f7 ff ff ff         ........
  118e94:	 38 00 00 00 5f ff ff ff         8..._...
  118e9c:	 d9 01 00 00 e9 f9 ff ff         ........
  118ea4:	 74 04 00 00 01 d6 ff ff         t.......
  118eac:	 e1 48 00 00 33 1f 00 00         .H..3...
  118eb4:	 e7 07 00 00 f8 03 00 00         ........
  118ebc:	 0a 02 00 00 49 00 00 00         ....I...
  118ec4:	 31 00 00 00 05 00 00 00         1.......
  118ecc:	 00 00 00 00 f7 ff ff ff         ........
  118ed4:	 38 00 00 00 5f ff ff ff         8..._...
  118edc:	 d9 01 00 00 e9 f9 ff ff         ........
  118ee4:	 74 04 00 00 01 d6 ff ff         t.......
  118eec:	 e1 48 00 00 33 1f 00 00         .H..3...
  118ef4:	 e7 07 00 00 f8 03 00 00         ........
  118efc:	 0a 02 00 00 49 00 00 00         ....I...
  118f04:	 31 00 00 00 05 00 00 00         1.......
  118f0c:	 00 00 00 00 f6 ff ff ff         ........
  118f14:	 39 00 00 00 4e ff ff ff         9...N...
  118f1c:	 c7 01 00 00 91 f9 ff ff         ........
  118f24:	 b0 03 00 00 3b d4 ff ff         ....;...
  118f2c:	 92 48 00 00 68 1d 00 00         .H..h...
  118f34:	 4b 08 00 00 9e 03 00 00         K.......
  118f3c:	 09 02 00 00 3d 00 00 00         ....=...
  118f44:	 2f 00 00 00 05 00 00 00         /.......
  118f4c:	 00 00 00 00 f6 ff ff ff         ........
  118f54:	 39 00 00 00 4e ff ff ff         9...N...
  118f5c:	 c7 01 00 00 91 f9 ff ff         ........
  118f64:	 b0 03 00 00 3b d4 ff ff         ....;...
  118f6c:	 92 48 00 00 68 1d 00 00         .H..h...
  118f74:	 4b 08 00 00 9e 03 00 00         K.......
  118f7c:	 09 02 00 00 3d 00 00 00         ....=...
  118f84:	 2f 00 00 00 05 00 00 00         /.......
  118f8c:	 00 00 00 00 f5 ff ff ff         ........
  118f94:	 39 00 00 00 3d ff ff ff         9...=...
  118f9c:	 b3 01 00 00 3a f9 ff ff         ....:...
  118fa4:	 de 02 00 00 7a d2 ff ff         ....z...
  118fac:	 2d 48 00 00 a0 1b 00 00         -H......
  118fb4:	 a2 08 00 00 46 03 00 00         ....F...
  118fbc:	 07 02 00 00 31 00 00 00         ....1...
  118fc4:	 2e 00 00 00 04 00 00 00         ........
  118fcc:	 00 00 00 00 f5 ff ff ff         ........
  118fd4:	 39 00 00 00 3d ff ff ff         9...=...
  118fdc:	 b3 01 00 00 3a f9 ff ff         ....:...
  118fe4:	 de 02 00 00 7a d2 ff ff         ....z...
  118fec:	 2d 48 00 00 a0 1b 00 00         -H......
  118ff4:	 a2 08 00 00 46 03 00 00         ....F...
  118ffc:	 07 02 00 00 31 00 00 00         ....1...
  119004:	 2e 00 00 00 04 00 00 00         ........
  11900c:	 00 00 00 00 f4 ff ff ff         ........
  119014:	 39 00 00 00 2c ff ff ff         9...,...
  11901c:	 9b 01 00 00 e6 f8 ff ff         ........
  119024:	 fd 01 00 00 bf d0 ff ff         ........
  11902c:	 b2 47 00 00 dc 19 00 00         .G......
  119034:	 ed 08 00 00 ef 02 00 00         ........
  11903c:	 02 02 00 00 26 00 00 00         ....&...
  119044:	 2c 00 00 00 04 00 00 00         ,.......
  11904c:	 00 00 00 00 f4 ff ff ff         ........
  119054:	 39 00 00 00 2c ff ff ff         9...,...
  11905c:	 9b 01 00 00 e6 f8 ff ff         ........
  119064:	 fd 01 00 00 bf d0 ff ff         ........
  11906c:	 b2 47 00 00 dc 19 00 00         .G......
  119074:	 ed 08 00 00 ef 02 00 00         ........
  11907c:	 02 02 00 00 26 00 00 00         ....&...
  119084:	 2c 00 00 00 04 00 00 00         ,.......
  11908c:	 00 00 00 00 f3 ff ff ff         ........
  119094:	 39 00 00 00 1a ff ff ff         9.......
  11909c:	 80 01 00 00 95 f8 ff ff         ........
  1190a4:	 0e 01 00 00 0a cf ff ff         ........
  1190ac:	 21 47 00 00 1d 18 00 00         !G......
  1190b4:	 2b 09 00 00 9a 02 00 00         +.......
  1190bc:	 fc 01 00 00 1c 00 00 00         ........
  1190c4:	 2a 00 00 00 03 00 00 00         *.......
  1190cc:	 00 00 00 00 f3 ff ff ff         ........
  1190d4:	 39 00 00 00 1a ff ff ff         9.......
  1190dc:	 80 01 00 00 95 f8 ff ff         ........
  1190e4:	 0e 01 00 00 0a cf ff ff         ........
  1190ec:	 21 47 00 00 1d 18 00 00         !G......
  1190f4:	 2b 09 00 00 9a 02 00 00         +.......
  1190fc:	 fc 01 00 00 1c 00 00 00         ........
  119104:	 2a 00 00 00 03 00 00 00         *.......
  11910c:	 00 00 00 00 f2 ff ff ff         ........
  119114:	 38 00 00 00 08 ff ff ff         8.......
  11911c:	 61 01 00 00 47 f8 ff ff         a...G...
  119124:	 11 00 00 00 5d cd ff ff         ....]...
  11912c:	 7a 46 00 00 64 16 00 00         zF..d...
  119134:	 5e 09 00 00 46 02 00 00         ^...F...
  11913c:	 f4 01 00 00 12 00 00 00         ........
  119144:	 28 00 00 00 03 00 00 00         (.......
  11914c:	 00 00 00 00 f2 ff ff ff         ........
  119154:	 38 00 00 00 08 ff ff ff         8.......
  11915c:	 61 01 00 00 47 f8 ff ff         a...G...
  119164:	 11 00 00 00 5d cd ff ff         ....]...
  11916c:	 7a 46 00 00 64 16 00 00         zF..d...
  119174:	 5e 09 00 00 46 02 00 00         ^...F...
  11917c:	 f4 01 00 00 12 00 00 00         ........
  119184:	 28 00 00 00 03 00 00 00         (.......
  11918c:	 00 00 00 00 f0 ff ff ff         ........
  119194:	 37 00 00 00 f6 fe ff ff         7.......
  11919c:	 40 01 00 00 fc f7 ff ff         @.......
  1191a4:	 07 ff ff ff b9 cb ff ff         ........
  1191ac:	 bf 45 00 00 b1 14 00 00         .E......
  1191b4:	 85 09 00 00 f5 01 00 00         ........
  1191bc:	 ea 01 00 00 09 00 00 00         ........
  1191c4:	 26 00 00 00 03 00 00 00         &.......
  1191cc:	 00 00 00 00 f0 ff ff ff         ........
  1191d4:	 37 00 00 00 f6 fe ff ff         7.......
  1191dc:	 40 01 00 00 fc f7 ff ff         @.......
  1191e4:	 07 ff ff ff b9 cb ff ff         ........
  1191ec:	 bf 45 00 00 b1 14 00 00         .E......
  1191f4:	 85 09 00 00 f5 01 00 00         ........
  1191fc:	 ea 01 00 00 09 00 00 00         ........
  119204:	 26 00 00 00 03 00 00 00         &.......
  11920c:	 00 00 00 00 ef ff ff ff         ........
  119214:	 36 00 00 00 e4 fe ff ff         6.......
  11921c:	 1b 01 00 00 b5 f7 ff ff         ........
  119224:	 ee fd ff ff 1e ca ff ff         ........
  11922c:	 ef 44 00 00 05 13 00 00         .D......
  119234:	 a2 09 00 00 a7 01 00 00         ........
  11923c:	 e0 01 00 00 00 00 00 00         ........
  119244:	 25 00 00 00 02 00 00 00         %.......
  11924c:	 00 00 00 00 ef ff ff ff         ........
  119254:	 36 00 00 00 e4 fe ff ff         6.......
  11925c:	 1b 01 00 00 b5 f7 ff ff         ........
  119264:	 ee fd ff ff 1e ca ff ff         ........
  11926c:	 ef 44 00 00 05 13 00 00         .D......
  119274:	 a2 09 00 00 a7 01 00 00         ........
  11927c:	 e0 01 00 00 00 00 00 00         ........
  119284:	 25 00 00 00 02 00 00 00         %.......
  11928c:	 ff ff ff ff ee ff ff ff         ........
  119294:	 34 00 00 00 d2 fe ff ff         4.......
  11929c:	 f2 00 00 00 73 f7 ff ff         ....s...
  1192a4:	 c7 fc ff ff 8e c8 ff ff         ........
  1192ac:	 0c 44 00 00 62 11 00 00         .D..b...
  1192b4:	 b4 09 00 00 5b 01 00 00         ....[...
  1192bc:	 d3 01 00 00 f9 ff ff ff         ........
  1192c4:	 23 00 00 00 02 00 00 00         #.......
  1192cc:	 ff ff ff ff ee ff ff ff         ........
  1192d4:	 34 00 00 00 d2 fe ff ff         4.......
  1192dc:	 f2 00 00 00 73 f7 ff ff         ....s...
  1192e4:	 c7 fc ff ff 8e c8 ff ff         ........
  1192ec:	 0c 44 00 00 62 11 00 00         .D..b...
  1192f4:	 b4 09 00 00 5b 01 00 00         ....[...
  1192fc:	 d3 01 00 00 f9 ff ff ff         ........
  119304:	 23 00 00 00 02 00 00 00         #.......
  11930c:	 ff ff ff ff ec ff ff ff         ........
  119314:	 32 00 00 00 bf fe ff ff         2.......
  11931c:	 c6 00 00 00 37 f7 ff ff         ....7...
  119324:	 93 fb ff ff 09 c7 ff ff         ........
  11932c:	 15 43 00 00 c7 0f 00 00         .C......
  119334:	 bb 09 00 00 12 01 00 00         ........
  11933c:	 c6 01 00 00 f2 ff ff ff         ........
  119344:	 21 00 00 00 02 00 00 00         !.......
  11934c:	 ff ff ff ff ec ff ff ff         ........
  119354:	 32 00 00 00 bf fe ff ff         2.......
  11935c:	 c6 00 00 00 37 f7 ff ff         ....7...
  119364:	 93 fb ff ff 09 c7 ff ff         ........
  11936c:	 15 43 00 00 c7 0f 00 00         .C......
  119374:	 bb 09 00 00 12 01 00 00         ........
  11937c:	 c6 01 00 00 f2 ff ff ff         ........
  119384:	 21 00 00 00 02 00 00 00         !.......
  11938c:	 ff ff ff ff eb ff ff ff         ........
  119394:	 2f 00 00 00 ad fe ff ff         /.......
  11939c:	 97 00 00 00 ff f6 ff ff         ........
  1193a4:	 52 fa ff ff 91 c5 ff ff         R.......
  1193ac:	 0b 42 00 00 35 0e 00 00         .B..5...
  1193b4:	 ba 09 00 00 cb 00 00 00         ........
  1193bc:	 b8 01 00 00 eb ff ff ff         ........
  1193c4:	 1f 00 00 00 02 00 00 00         ........
  1193cc:	 ff ff ff ff eb ff ff ff         ........
  1193d4:	 2f 00 00 00 ad fe ff ff         /.......
  1193dc:	 97 00 00 00 ff f6 ff ff         ........
  1193e4:	 52 fa ff ff 91 c5 ff ff         R.......
  1193ec:	 0b 42 00 00 35 0e 00 00         .B..5...
  1193f4:	 ba 09 00 00 cb 00 00 00         ........
  1193fc:	 b8 01 00 00 eb ff ff ff         ........
  119404:	 1f 00 00 00 02 00 00 00         ........
  11940c:	 ff ff ff ff e9 ff ff ff         ........
  119414:	 2c 00 00 00 9b fe ff ff         ,.......
  11941c:	 64 00 00 00 ce f6 ff ff         d.......
  119424:	 04 f9 ff ff 26 c4 ff ff         ....&...
  11942c:	 ef 40 00 00 ad 0c 00 00         .@......
  119434:	 af 09 00 00 88 00 00 00         ........
  11943c:	 a8 01 00 00 e6 ff ff ff         ........
  119444:	 1d 00 00 00 02 00 00 00         ........
  11944c:	 ff ff ff ff e9 ff ff ff         ........
  119454:	 2c 00 00 00 9b fe ff ff         ,.......
  11945c:	 64 00 00 00 ce f6 ff ff         d.......
  119464:	 04 f9 ff ff 26 c4 ff ff         ....&...
  11946c:	 ef 40 00 00 ad 0c 00 00         .@......
  119474:	 af 09 00 00 88 00 00 00         ........
  11947c:	 a8 01 00 00 e6 ff ff ff         ........
  119484:	 1d 00 00 00 02 00 00 00         ........
  11948c:	 ff ff ff ff e8 ff ff ff         ........
  119494:	 29 00 00 00 8a fe ff ff         ).......
  11949c:	 2e 00 00 00 a4 f6 ff ff         ........
  1194a4:	 a9 f7 ff ff c9 c2 ff ff         ........
  1194ac:	 c2 3f 00 00 30 0b 00 00         .?..0...
  1194b4:	 9b 09 00 00 48 00 00 00         ....H...
  1194bc:	 98 01 00 00 e0 ff ff ff         ........
  1194c4:	 1c 00 00 00 01 00 00 00         ........
  1194cc:	 ff ff ff ff e8 ff ff ff         ........
  1194d4:	 29 00 00 00 8a fe ff ff         ).......
  1194dc:	 2e 00 00 00 a4 f6 ff ff         ........
  1194e4:	 a9 f7 ff ff c9 c2 ff ff         ........
  1194ec:	 c2 3f 00 00 30 0b 00 00         .?..0...
  1194f4:	 9b 09 00 00 48 00 00 00         ....H...
  1194fc:	 98 01 00 00 e0 ff ff ff         ........
  119504:	 1c 00 00 00 01 00 00 00         ........
  11950c:	 ff ff ff ff e6 ff ff ff         ........
  119514:	 24 00 00 00 78 fe ff ff         $...x...
  11951c:	 f5 ff ff ff 80 f6 ff ff         ........
  119524:	 42 f6 ff ff 7b c1 ff ff         B...{...
  11952c:	 85 3e 00 00 be 09 00 00         .>......
  119534:	 80 09 00 00 0b 00 00 00         ........
  11953c:	 88 01 00 00 dc ff ff ff         ........
  119544:	 1a 00 00 00 01 00 00 00         ........
  11954c:	 ff ff ff ff e6 ff ff ff         ........
  119554:	 24 00 00 00 78 fe ff ff         $...x...
  11955c:	 f5 ff ff ff 80 f6 ff ff         ........
  119564:	 42 f6 ff ff 7b c1 ff ff         B...{...
  11956c:	 85 3e 00 00 be 09 00 00         .>......
  119574:	 80 09 00 00 0b 00 00 00         ........
  11957c:	 88 01 00 00 dc ff ff ff         ........
  119584:	 1a 00 00 00 01 00 00 00         ........


inv_tab:
  11958c:	 ab 2a 9a 19 39 0e 03 00         .*..9...
  119594:	 05 00 09 00                     ....


inv_steptab:
  119598:	 55 55 55 00 33 33 33 00         UUU.333.
  1195a0:	 49 92 24 00 c7 71 1c 00         I.$..q..
  1195a8:	 11 11 11 00 10 42 08 00         .....B..
  1195b0:	 41 10 04 00 08 04 02 00         A.......
  1195b8:	 01 01 01 00 40 80 00 00         ....@...
  1195c0:	 10 40 00 00 04 20 00 00         .@... ..
  1195c8:	 01 10 00 00 00 08 00 00         ........
  1195d0:	 00 04 00 00 00 02 00 00         ........
  1195d8:	 00 01 00 00                     ....


mp2d_alloc_sb1:
  1195dc:	 00 00 00 10 10 10 10 10         ........
  1195e4:	 10 10 10 20 20 20 20 20         ...     
  1195ec:	 20 20 20 20 20 20 20 28                (
  1195f4:	 28 28 28 28 28 28               ((((((


mp2d_alloc_table_1:
  1195fa:	 04 00 02 04 05 06 07 08         ........
  119602:	 09 0a 0b 0c 0d 0e 0f 10         ........
  11960a:	 04 00 01 02 03 04 05 06         ........
  119612:	 07 08 09 0a 0b 0c 0d 10         ........
  11961a:	 03 00 01 02 03 04 05 10         ........
  119622:	 02 00 01 10                     ....


mp2d_alloc_sb3:
  119626:	 00 00 10 10 10 10 10 10         ........
  11962e:	 10 10 10 10                     ....


mp2d_alloc_table_3:
  119632:	 04 00 01 03 04 05 06 07         ........
  11963a:	 08 09 0a 0b 0c 0d 0e 0f         ........
  119642:	 03 00 01 03 04 05 06 07         ........
  11964a:	 00 00                           ..


mp2d_alloc_sbs:
  11964c:	 dc 95 11 00 dc 95 11 00         ........
  119654:	 dc 95 11 00 26 96 11 00         ....&...
  11965c:	 26 96 11 00                     &...


mp2d_alloc_tables:
  119660:	 fa 95 11 00 fa 95 11 00         ........
  119668:	 fa 95 11 00 32 96 11 00         ....2...
  119670:	 32 96 11 00                     2...


midi_decoder_ops:
  119674:	 8a d6 11 00 20 44 10 00         .... D..
  11967c:	 82 45 10 00 80 2a 11 00         .E...*..
  119684:	 98 43 11 00 9e 43 11 00         .C...C..
  11968c:	 bc 43 11 00 c2 43 11 00         .C...C..
  119694:	 c8 43 11 00 00 49 10 00         .C...I..


logAprx.ilog2_coeff.1376:
  11969c:	 49 92 24 09 cd cc cc 0c         I.$.....
  1196a4:	 55 55 55 15                     UUU.


stepsizeTable:
  1196a8:	 07 00 08 00 09 00 0a 00         ........
  1196b0:	 0b 00 0c 00 0d 00 0e 00         ........
  1196b8:	 10 00 11 00 13 00 15 00         ........
  1196c0:	 17 00 19 00 1c 00 1f 00         ........
  1196c8:	 22 00 25 00 29 00 2d 00         ".%.).-.
  1196d0:	 32 00 37 00 3c 00 42 00         2.7.<.B.
  1196d8:	 49 00 50 00 58 00 61 00         I.P.X.a.
  1196e0:	 6b 00 76 00 82 00 8f 00         k.v.....
  1196e8:	 9d 00 ad 00 be 00 d1 00         ........
  1196f0:	 e6 00 fd 00 17 01 33 01         ......3.
  1196f8:	 51 01 73 01 98 01 c1 01         Q.s.....
  119700:	 ee 01 20 02 56 02 92 02         .. .V...
  119708:	 d4 02 1c 03 6c 03 c3 03         ....l...
  119710:	 24 04 8e 04 02 05 83 05         $.......
  119718:	 10 06 ab 06 56 07 12 08         ....V...
  119720:	 e0 08 c3 09 bd 0a d0 0b         ........
  119728:	 ff 0c 4c 0e ba 0f 4c 11         ..L...L.
  119730:	 07 13 ee 14 06 17 54 19         ......T.
  119738:	 dc 1b a5 1e b6 21 15 25         .....!.%
  119740:	 ca 28 df 2c 5b 31 4b 36         .(.,[1K6
  119748:	 b9 3b b2 41 44 48 7e 4f         .;.ADH~O
  119750:	 71 57 2f 60 ce 69 62 74         qW/`.ibt
  119758:	 ff 7f 00 00                     ....


tpowv_pos:
  11975c:	 e7 42 00 00 ef 45 00 00         .B...E..
  119764:	 1b 49 00 00 6b 4c 00 00         .I..kL..
  11976c:	 e2 4f 00 00 81 53 00 00         .O...S..
  119774:	 4b 57 00 00 40 5b 00 00         KW..@[..
  11977c:	 63 5f 00 00 b6 63 00 00         c_...c..
  119784:	 3b 68 00 00 f5 6c 00 00         ;h...l..
  11978c:	 e5 71 00 00 0f 77 00 00         .q...w..
  119794:	 75 7c 00 00 19 82 00 00         u|......
  11979c:	 ff 87 00 00 2a 8e 00 00         ....*...
  1197a4:	 9c 94 00 00 58 9b 00 00         ....X...
  1197ac:	 63 a2 00 00 c0 a9 00 00         c.......
  1197b4:	 72 b1 00 00 7d b9 00 00         r...}...
  1197bc:	 e6 c1 00 00 b1 ca 00 00         ........
  1197c4:	 e1 d3 00 00 7c dd 00 00         ....|...
  1197cc:	 87 e7 00 00 06 f2 00 00         ........
  1197d4:	 ff fc 00 00 77 08 01 00         ....w...
  1197dc:	 74 14 01 00 fd 20 01 00         t.... ..
  1197e4:	 17 2e 01 00 c9 3b 01 00         .....;..
  1197ec:	 1a 4a 01 00 11 59 01 00         .J...Y..
  1197f4:	 b6 68 01 00 10 79 01 00         .h...y..
  1197fc:	 28 8a 01 00 07 9c 01 00         (.......
  119804:	 b5 ae 01 00 3c c2 01 00         ....<...
  11980c:	 a5 d6 01 00 fb eb 01 00         ........
  119814:	 49 02 02 00 9a 19 02 00         I.......
  11981c:	 f9 31 02 00 74 4b 02 00         .1..tK..
  119824:	 15 66 02 00 ed 81 02 00         .f......
  11982c:	 07 9f 02 00 73 bd 02 00         ....s...
  119834:	 40 dd 02 00 7e fe 02 00         @...~...
  11983c:	 3d 21 03 00 91 45 03 00         =!...E..
  119844:	 89 6b 03 00 3b 93 03 00         .k..;...
  11984c:	 b9 bc 03 00 19 e8 03 00         ........
  119854:	 70 15 04 00 d5 44 04 00         p....D..
  11985c:	 60 76 04 00 2b aa 04 00         `v..+...
  119864:	 4e e0 04 00 e6 18 05 00         N.......
  11986c:	 0f 54 05 00 e6 91 05 00         .T......
  119874:	 8b d2 05 00 1e 16 06 00         ........
  11987c:	 c2 5c 06 00 99 a6 06 00         .\......
  119884:	 c9 f3 06 00 79 44 07 00         ....yD..
  11988c:	 d2 98 07 00 fd f0 07 00         ........
  119894:	 28 4d 08 00 81 ad 08 00         (M......
  11989c:	 38 12 09 00 7f 7b 09 00         8....{..
  1198a4:	 8d e9 09 00 97 5c 0a 00         .....\..
  1198ac:	 d9 d4 0a 00                     ....


tpowv_neg:
  1198b0:	 00 40 7d 3f fb 3e 7a 3e         .@}?.>z>
  1198b8:	 fa 3d 7b 3d fd 3c 80 3c         .={=.<.<
  1198c0:	 04 3c 89 3b 0f 3b 97 3a         .<.;.;.:
  1198c8:	 1f 3a a8 39 31 39 bc 38         .:.919.8
  1198d0:	 48 38 d5 37 62 37 f1 36         H8.7b7.6
  1198d8:	 81 36 11 36 a2 35 34 35         .6.6.545
  1198e0:	 c7 34 5b 34 f0 33 86 33         .4[4.3.3
  1198e8:	 1c 33 b4 32 4c 32 e5 31         .3.2L2.1
  1198f0:	 7e 31 19 31 b5 30 51 30         ~1.1.0Q0
  1198f8:	 ee 2f 8c 2f 2a 2f ca 2e         ././*/..
  119900:	 6a 2e 0b 2e ad 2d 4f 2d         j....-O-
  119908:	 f2 2c 96 2c 3b 2c e0 2b         .,.,;,.+
  119910:	 86 2b 2d 2b d5 2a 7d 2a         .+-+.*}*
  119918:	 26 2a d0 29 7a 29 25 29         &*.)z)%)
  119920:	 d1 28 7d 28 2a 28 d8 27         .(}(*(.'
  119928:	 87 27 36 27 e5 26 96 26         .'6'.&.&
  119930:	 47 26 f8 25 ab 25 5d 25         G&.%.%]%
  119938:	 11 25 c5 24 7a 24 2f 24         .%.$z$/$
  119940:	 e5 23 9b 23 52 23 0a 23         .#.#R#.#
  119948:	 c2 22 7b 22 34 22 ee 21         ."{"4".!
  119950:	 a9 21 00 00                     .!..


smpl_rate_tab:
  119954:	 80 bb 00 00 44 ac 00 00         ....D...
  11995c:	 00 7d 00 00 c0 5d 00 00         .}...]..
  119964:	 22 56 00 00 80 3e 00 00         "V...>..
  11996c:	 e0 2e 00 00 11 2b 00 00         .....+..
  119974:	 40 1f 00 00                     @...


inv_smpl_rate_tab:
  119978:	 ab 0a 00 00 9c 0b 00 00         ........
  119980:	 00 10 00 00 55 15 00 00         ....U...
  119988:	 38 17 00 00 00 20 00 00         8.... ..
  119990:	 ab 2a 00 00 71 2e 00 00         .*..q...
  119998:	 00 40 00 00                     .@..


pan_tab:
  11999c:	 00 01 02 03 04 05 06 07         ........
  1199a4:	 08 09 0b 0c 0d 0e 0f 10         ........
  1199ac:	 11 12 13 14 15 17 18 19         ........
  1199b4:	 1a 1b 1c 1d 1e 1f 20 21         ...... !
  1199bc:	 22 23 24 25 26 27 28 29         "#$%&'()
  1199c4:	 2a 2b 2c 2d 2e 2f 30 31         *+,-./01
  1199cc:	 32 33 34 35 35 36 37 38         23455678
  1199d4:	 39 3a 3b 3b 3c 3d 3e 3f         9:;;<=>?
  1199dc:	 40 40 41 42 43 43 44 45         @@ABCCDE
  1199e4:	 45 46 47 48 48 49 49 4a         EFGHHIIJ
  1199ec:	 4b 4b 4c 4d 4d 4e 4e 4f         KKLMMNNO
  1199f4:	 4f 50 50 51 51 52 52 53         OPPQQRRS
  1199fc:	 53 54 54 54 55 55 55 56         STTTUUUV
  119a04:	 56 56 57 57 57 58 58 58         VVWWWXXX
  119a0c:	 58 58 59 59 59 59 59 59         XXYYYYYY
  119a14:	 5a 5a 5a 5a 5a 5a 5a 5a         ZZZZZZZZ


pow2VALTab_12:
  119a1c:	 00 20 e7 21 eb 23 0e 26         . .!.#.&
  119a24:	 51 28 b7 2a 41 2d f2 2f         Q(.*A-./
  119a2c:	 cc 32 d1 35 04 39 68 3c         .2.5.9h<


mkey_vol_tab:
  119a34:	 01 01 01 01 01 01 01 01         ........
  119a3c:	 01 01 02 02 02 03 03 04         ........
  119a44:	 04 05 05 06 06 07 08 08         ........
  119a4c:	 09 0a 0b 0c 0c 0d 0e 0f         ........
  119a54:	 10 11 12 13 15 16 17 18         ........
  119a5c:	 19 1b 1c 1d 1f 20 22 23         ..... "#
  119a64:	 25 26 28 29 2b 2d 2e 30         %&()+-.0
  119a6c:	 32 34 35 37 39 3b 3d 3f         24579;=?
  119a74:	 41 43 45 47 49 4c 4e 50         ACEGILNP
  119a7c:	 52 55 57 59 5c 5e 61 63         RUWY\^ac
  119a84:	 66 68 6b 6d 70 73 75 78         fhkmpsux
  119a8c:	 7b 7e 81 83 86 89 8c 8f         {~......
  119a94:	 92 95 98 9c 9f a2 a5 a8         ........
  119a9c:	 ac af b2 b6 b9 bd c0 c4         ........
  119aa4:	 c7 cb ce d2 d6 d9 dd e1         ........
  119aac:	 e5 e8 ec f0 f4 f8 fc ff         ........


ima_decoder_ops:
  119ab4:	 ff c3 11 00 b0 3c 10 00         .....<..
  119abc:	 0c 3e 10 00 84 45 11 00         .>...E..
  119ac4:	 1e 3e 10 00 cc 43 11 00         .>...C..
  119acc:	 46 3e 10 00 d2 43 11 00         F>...C..
  119ad4:	 d8 43 11 00 dc 43 11 00         .C...C..


stepsizeTable.1407:
  119adc:	 07 00 00 00 08 00 00 00         ........
  119ae4:	 09 00 00 00 0a 00 00 00         ........
  119aec:	 0b 00 00 00 0c 00 00 00         ........
  119af4:	 0d 00 00 00 0e 00 00 00         ........
  119afc:	 10 00 00 00 11 00 00 00         ........
  119b04:	 13 00 00 00 15 00 00 00         ........
  119b0c:	 17 00 00 00 19 00 00 00         ........
  119b14:	 1c 00 00 00 1f 00 00 00         ........
  119b1c:	 22 00 00 00 25 00 00 00         "...%...
  119b24:	 29 00 00 00 2d 00 00 00         )...-...
  119b2c:	 32 00 00 00 37 00 00 00         2...7...
  119b34:	 3c 00 00 00 42 00 00 00         <...B...
  119b3c:	 49 00 00 00 50 00 00 00         I...P...
  119b44:	 58 00 00 00 61 00 00 00         X...a...
  119b4c:	 6b 00 00 00 76 00 00 00         k...v...
  119b54:	 82 00 00 00 8f 00 00 00         ........
  119b5c:	 9d 00 00 00 ad 00 00 00         ........
  119b64:	 be 00 00 00 d1 00 00 00         ........
  119b6c:	 e6 00 00 00 fd 00 00 00         ........
  119b74:	 17 01 00 00 33 01 00 00         ....3...
  119b7c:	 51 01 00 00 73 01 00 00         Q...s...
  119b84:	 98 01 00 00 c1 01 00 00         ........
  119b8c:	 ee 01 00 00 20 02 00 00         .... ...
  119b94:	 56 02 00 00 92 02 00 00         V.......
  119b9c:	 d4 02 00 00 1c 03 00 00         ........
  119ba4:	 6c 03 00 00 c3 03 00 00         l.......
  119bac:	 24 04 00 00 8e 04 00 00         $.......
  119bb4:	 02 05 00 00 83 05 00 00         ........
  119bbc:	 10 06 00 00 ab 06 00 00         ........
  119bc4:	 56 07 00 00 12 08 00 00         V.......
  119bcc:	 e0 08 00 00 c3 09 00 00         ........
  119bd4:	 bd 0a 00 00 d0 0b 00 00         ........
  119bdc:	 ff 0c 00 00 4c 0e 00 00         ....L...
  119be4:	 ba 0f 00 00 4c 11 00 00         ....L...
  119bec:	 07 13 00 00 ee 14 00 00         ........
  119bf4:	 06 17 00 00 54 19 00 00         ....T...
  119bfc:	 dc 1b 00 00 a5 1e 00 00         ........
  119c04:	 b6 21 00 00 15 25 00 00         .!...%..
  119c0c:	 ca 28 00 00 df 2c 00 00         .(...,..
  119c14:	 5b 31 00 00 4b 36 00 00         [1..K6..
  119c1c:	 b9 3b 00 00 b2 41 00 00         .;...A..
  119c24:	 44 48 00 00 7e 4f 00 00         DH..~O..
  119c2c:	 71 57 00 00 2f 60 00 00         qW../`..
  119c34:	 ce 69 00 00 62 74 00 00         .i..bt..
  119c3c:	 ff 7f 00 00                     ....


indexTable.1408:
  119c40:	 ff ff ff ff ff ff ff ff         ........
  119c48:	 ff ff ff ff ff ff ff ff         ........
  119c50:	 02 00 00 00 04 00 00 00         ........
  119c58:	 06 00 00 00 08 00 00 00         ........
  119c60:	 ff ff ff ff ff ff ff ff         ........
  119c68:	 ff ff ff ff ff ff ff ff         ........
  119c70:	 02 00 00 00 04 00 00 00         ........
  119c78:	 06 00 00 00 08 00 00 00         ........


mp2contobj_ops:
  119c80:	 f0 45 11 00 08 ae 10 00         .E......
  119c88:	 5c 46 11 00                     \F..


mp2_filter_bank:
  119c8c:	 00 00 00 00 28 ff ff ff         ....(...
  119c94:	 28 ff ff ff 28 ff ff ff         (...(...
  119c9c:	 28 ff ff ff 28 ff ff ff         (...(...
  119ca4:	 28 ff ff ff 50 fe ff ff         (...P...
  119cac:	 50 fe ff ff 50 fe ff ff         P...P...
  119cb4:	 50 fe ff ff 78 fd ff ff         P...x...
  119cbc:	 78 fd ff ff a0 fc ff ff         x.......
  119cc4:	 a0 fc ff ff c8 fb ff ff         ........
  119ccc:	 c8 fb ff ff f0 fa ff ff         ........
  119cd4:	 18 fa ff ff 18 fa ff ff         ........
  119cdc:	 40 f9 ff ff 68 f8 ff ff         @...h...
  119ce4:	 90 f7 ff ff b8 f6 ff ff         ........
  119cec:	 08 f5 ff ff 30 f4 ff ff         ....0...
  119cf4:	 80 f2 ff ff a8 f1 ff ff         ........
  119cfc:	 f8 ef ff ff 48 ee ff ff         ....H...
  119d04:	 c0 eb ff ff 10 ea ff ff         ........
  119d0c:	 88 e7 ff ff d8 e5 ff ff         ........
  119d14:	 78 e2 ff ff f0 df ff ff         x.......
  119d1c:	 68 dd ff ff 08 da ff ff         h.......
  119d24:	 a8 d6 ff ff 48 d3 ff ff         ....H...
  119d2c:	 10 cf ff ff d8 ca ff ff         ........
  119d34:	 a0 c6 ff ff 68 c2 ff ff         ....h...
  119d3c:	 58 bd ff ff 48 b8 ff ff         X...H...
  119d44:	 38 b3 ff ff 28 ae ff ff         8...(...
  119d4c:	 40 a8 ff ff 58 a2 ff ff         @...X...
  119d54:	 48 9d ff ff 88 96 ff ff         H.......
  119d5c:	 a0 90 ff ff b8 8a ff ff         ........
  119d64:	 f8 83 ff ff 10 7e ff ff         .....~..
  119d6c:	 28 78 ff ff 68 71 ff ff         (x..hq..
  119d74:	 80 6b ff ff 98 65 ff ff         .k...e..
  119d7c:	 b0 5f ff ff a0 5a ff ff         ._...Z..
  119d84:	 90 55 ff ff 80 50 ff ff         .U...P..
  119d8c:	 b8 b3 00 00 f0 b7 00 00         ........
  119d94:	 50 bb 00 00 d8 bd 00 00         P.......
  119d9c:	 88 bf 00 00 60 c0 00 00         ....`...
  119da4:	 60 c0 00 00 88 bf 00 00         `.......
  119dac:	 00 bd 00 00 78 ba 00 00         ....x...
  119db4:	 68 b5 00 00 80 af 00 00         h.......
  119dbc:	 c0 a8 00 00 78 9f 00 00         ....x...
  119dc4:	 58 95 00 00 88 89 00 00         X.......
  119dcc:	 30 7b 00 00 28 6b 00 00         0{..(k..
  119dd4:	 70 59 00 00 08 46 00 00         pY...F..
  119ddc:	 18 30 00 00 78 18 00 00         .0..x...
  119de4:	 50 fe ff ff a0 e1 ff ff         P.......
  119dec:	 40 c3 ff ff 58 a2 ff ff         @...X...
  119df4:	 e8 7e ff ff c8 59 ff ff         .~...Y..
  119dfc:	 20 32 ff ff f0 07 ff ff          2......
  119e04:	 38 db fe ff a8 ad fe ff         8.......
  119e0c:	 b8 7c fe ff 18 4a fe ff         .|...J..
  119e14:	 c8 15 fe ff c8 df fd ff         ........
  119e1c:	 18 a8 fd ff b8 6e fd ff         .....n..
  119e24:	 80 34 fd ff 98 f8 fc ff         .4......
  119e2c:	 d8 bb fc ff 40 7e fc ff         ....@~..
  119e34:	 a8 40 fc ff 10 03 fc ff         .@......
  119e3c:	 78 c5 fb ff e0 87 fb ff         x.......
  119e44:	 20 4b fb ff 10 10 fb ff          K......
  119e4c:	 d8 d5 fa ff 50 9d fa ff         ....P...
  119e54:	 50 67 fa ff d8 33 fa ff         Pg...3..
  119e5c:	 e8 02 fa ff 30 d6 f9 ff         ....0...
  119e64:	 d8 ac f9 ff 90 88 f9 ff         ........
  119e6c:	 a8 67 f9 ff 80 4d f9 ff         .g...M..
  119e74:	 68 38 f9 ff 38 29 f9 ff         h8..8)..
  119e7c:	 c8 20 f9 ff 18 1f f9 ff         . ......
  119e84:	 00 25 f9 ff 58 33 f9 ff         .%..X3..
  119e8c:	 b8 b6 06 00 80 97 06 00         ........
  119e94:	 00 6f 06 00 38 3d 06 00         .o..8=..
  119e9c:	 50 01 06 00 48 bb 05 00         P...H...
  119ea4:	 20 6b 05 00 28 0f 05 00          k..(...
  119eac:	 10 a9 04 00 00 38 04 00         .....8..
  119eb4:	 48 ba 03 00 70 32 03 00         H...p2..
  119ebc:	 f0 9d 02 00 78 fe 01 00         ....x...
  119ec4:	 30 53 01 00 18 9c 00 00         0S......
  119ecc:	 08 da ff ff 00 0d ff ff         ........
  119ed4:	 28 34 fe ff 30 51 fd ff         (4..0Q..
  119edc:	 18 64 fc ff e0 6c fb ff         .d...l..
  119ee4:	 60 6c fa ff 70 63 f9 ff         `l..pc..
  119eec:	 10 52 f8 ff 18 39 f7 ff         .R...9..
  119ef4:	 60 19 f6 ff 98 f4 f4 ff         `.......
  119efc:	 e8 c9 f3 ff d8 9b f2 ff         ........
  119f04:	 68 6a f1 ff 20 38 f0 ff         hj.. 8..
  119f0c:	 28 04 ef ff 08 d1 ed ff         (.......
  119f14:	 98 9f ec ff 88 71 eb ff         .....q..
  119f1c:	 88 48 ea ff 98 24 e9 ff         .H...$..
  119f24:	 18 09 e8 ff 08 f6 e6 ff         ........
  119f2c:	 f0 ed e5 ff a8 f1 e4 ff         ........
  119f34:	 b8 03 e4 ff f8 24 e3 ff         .....$..
  119f3c:	 f0 57 e2 ff 78 9d e1 ff         .W..x...
  119f44:	 40 f7 e0 ff a8 68 e0 ff         @....h..
  119f4c:	 d8 f0 df ff 30 93 df ff         ....0...
  119f54:	 60 51 df ff 18 2d df ff         `Q...-..
  119f5c:	 30 27 df ff 58 41 df ff         0'..XA..
  119f64:	 18 7e df ff 70 dd df ff         .~..p...
  119f6c:	 c0 62 e0 ff 08 0e e1 ff         .b......
  119f74:	 f8 e0 e1 ff 40 dd e2 ff         ....@...
  119f7c:	 e0 02 e4 ff 60 54 e5 ff         ....`T..
  119f84:	 c0 d1 e6 ff b0 7c e8 ff         .....|..
  119f8c:	 d0 aa 15 00 e8 a3 13 00         ........
  119f94:	 c0 6d 11 00 58 08 0f 00         .m..X...
  119f9c:	 00 72 0c 00 68 ac 09 00         .r..h...
  119fa4:	 b8 b6 06 00 f0 90 03 00         ........
  119fac:	 10 3b 00 00 f0 b5 fc ff         .;......
  119fb4:	 90 01 f9 ff a0 1f f5 ff         ........
  119fbc:	 48 0f f1 ff 10 d3 ec ff         H.......
  119fc4:	 d0 6b e8 ff 60 da e3 ff         .k..`...
  119fcc:	 98 1f df ff d8 3e da ff         .....>..
  119fd4:	 20 38 d5 ff 20 0d d0 ff          8.. ...
  119fdc:	 38 c1 ca ff 18 56 c5 ff         8....V..
  119fe4:	 70 cd bf ff c8 29 ba ff         p....)..
  119fec:	 a8 6d b4 ff 70 9c ae ff         .m..p...
  119ff4:	 d0 b7 a8 ff 28 c3 a2 ff         ....(...
  119ffc:	 00 c1 9c ff b8 b4 96 ff         ........
  11a004:	 d8 a0 90 ff c0 88 8a ff         ........
  11a00c:	 a8 70 84 ff 40 5a 7e ff         .p..@Z~.
  11a014:	 c0 49 78 ff b0 41 72 ff         .Ix..Ar.
  11a01c:	 48 46 6c ff e8 5a 66 ff         HFl..Zf.
  11a024:	 f0 82 60 ff e8 c0 5a ff         ..`...Z.
  11a02c:	 08 19 55 ff b0 8e 4f ff         ..U...O.
  11a034:	 90 23 4a ff 90 dd 44 ff         .#J...D.
  11a03c:	 88 bd 3f ff b0 c7 3a ff         ..?...:.
  11a044:	 68 ff 35 ff 60 66 31 ff         h.5.`f1.
  11a04c:	 f8 ff 2c ff 90 cf 28 ff         ..,...(.
  11a054:	 b0 d7 24 ff 08 1a 21 ff         ..$...!.
  11a05c:	 20 99 1d ff 58 58 1a ff          ...XX..
  11a064:	 b0 57 17 ff 60 9b 14 ff         .W..`...
  11a06c:	 68 23 12 ff 78 f1 0f ff         h#..x...
  11a074:	 18 08 0e ff 20 68 0c ff         .... h..
  11a07c:	 68 12 0b ff f0 06 0a ff         h.......
  11a084:	 40 48 09 ff 80 d5 08 ff         @H......
  11a08c:	 50 51 f7 00 80 2a f7 00         PQ...*..
  11a094:	 c0 b7 f6 00 10 f9 f5 00         ........
  11a09c:	 98 ed f4 00 e0 97 f3 00         ........
  11a0a4:	 e8 f7 f1 00 88 0e f0 00         ........
  11a0ac:	 98 dc ed 00 a0 64 eb 00         .....d..
  11a0b4:	 50 a8 e8 00 a8 a7 e5 00         P.......
  11a0bc:	 e0 66 e2 00 f8 e5 de 00         .f......
  11a0c4:	 50 28 db 00 70 30 d7 00         P(..p0..
  11a0cc:	 08 00 d3 00 a0 99 ce 00         ........
  11a0d4:	 98 00 ca 00 50 38 c5 00         ....P8..
  11a0dc:	 78 42 c0 00 70 22 bb 00         xB..p"..
  11a0e4:	 70 dc b5 00 50 71 b0 00         p...Pq..
  11a0ec:	 f8 e6 aa 00 18 3f a5 00         .....?..
  11a0f4:	 10 7d 9f 00 18 a5 99 00         .}......
  11a0fc:	 b8 b9 93 00 50 be 8d 00         ....P...
  11a104:	 40 b6 87 00 c0 a5 81 00         @.......
  11a10c:	 58 8f 7b 00 40 77 75 00         X.{.@wu.
  11a114:	 28 5f 6f 00 48 4b 69 00         (_o.HKi.
  11a11c:	 00 3f 63 00 d8 3c 5d 00         .?c..<].
  11a124:	 30 48 57 00 90 63 51 00         0HW..cQ.
  11a12c:	 58 92 4b 00 38 d6 45 00         X.K.8.E.
  11a134:	 90 32 40 00 e8 a9 3a 00         .2@...:.
  11a13c:	 c8 3e 35 00 e0 f2 2f 00         .>5.../.
  11a144:	 e0 c7 2a 00 28 c1 25 00         ..*.(.%.
  11a14c:	 68 e0 20 00 a0 25 1c 00         h. ..%..
  11a154:	 30 94 17 00 f0 2c 13 00         0....,..
  11a15c:	 b8 f0 0e 00 60 e0 0a 00         ....`...
  11a164:	 70 fe 06 00 10 4a 03 00         p....J..
  11a16c:	 f0 c4 ff ff 10 6f fc ff         .....o..
  11a174:	 48 49 f9 ff 98 53 f6 ff         HI...S..
  11a17c:	 00 8e f3 ff a8 f7 f0 ff         ........
  11a184:	 40 92 ee ff 18 5c ec ff         @....\..
  11a18c:	 d0 aa 15 00 50 83 17 00         ....P...
  11a194:	 40 2e 19 00 a0 ab 1a 00         @.......
  11a19c:	 20 fd 1b 00 c0 22 1d 00          ...."..
  11a1a4:	 08 1f 1e 00 f8 f1 1e 00         ........
  11a1ac:	 40 9d 1f 00 90 22 20 00         @...." .
  11a1b4:	 e8 81 20 00 a8 be 20 00         .. ... .
  11a1bc:	 d0 d8 20 00 e8 d2 20 00         .. ... .
  11a1c4:	 a0 ae 20 00 d0 6c 20 00         .. ..l .
  11a1cc:	 28 0f 20 00 58 97 1f 00         (. .X...
  11a1d4:	 c0 08 1f 00 88 62 1e 00         .....b..
  11a1dc:	 10 a8 1d 00 08 db 1c 00         ........
  11a1e4:	 48 fc 1b 00 58 0e 1b 00         H...X...
  11a1ec:	 10 12 1a 00 f8 09 19 00         ........
  11a1f4:	 e8 f6 17 00 68 db 16 00         ....h...
  11a1fc:	 78 b7 15 00 78 8e 14 00         x...x...
  11a204:	 68 60 13 00 f8 2e 12 00         h`......
  11a20c:	 d8 fb 10 00 e0 c7 0f 00         ........
  11a214:	 98 95 0e 00 28 64 0d 00         ....(d..
  11a21c:	 18 36 0c 00 68 0b 0b 00         .6..h...
  11a224:	 a0 e6 09 00 e8 c6 08 00         ........
  11a22c:	 f0 ad 07 00 90 9c 06 00         ........
  11a234:	 a0 93 05 00 20 93 04 00         .... ...
  11a23c:	 e8 9b 03 00 d0 ae 02 00         ........
  11a244:	 d8 cb 01 00 00 f3 00 00         ........
  11a24c:	 f8 25 00 00 e8 63 ff ff         .%...c..
  11a254:	 d0 ac fe ff 88 01 fe ff         ........
  11a25c:	 10 62 fd ff 90 cd fc ff         .b......
  11a264:	 b8 45 fc ff 00 c8 fb ff         .E......
  11a26c:	 f0 56 fb ff d8 f0 fa ff         .V......
  11a274:	 e0 94 fa ff b8 44 fa ff         .....D..
  11a27c:	 b0 fe f9 ff c8 c2 f9 ff         ........
  11a284:	 00 91 f9 ff 80 68 f9 ff         .....h..
  11a28c:	 b8 b6 06 00 a8 cc 06 00         ........
  11a294:	 00 db 06 00 e8 e0 06 00         ........
  11a29c:	 38 df 06 00 c8 d6 06 00         8.......
  11a2a4:	 98 c7 06 00 80 b2 06 00         ........
  11a2ac:	 58 98 06 00 70 77 06 00         X...pw..
  11a2b4:	 28 53 06 00 d0 29 06 00         (S...)..
  11a2bc:	 18 fd 05 00 28 cc 05 00         ....(...
  11a2c4:	 b0 98 05 00 b0 62 05 00         .....b..
  11a2cc:	 28 2a 05 00 f0 ef 04 00         (*......
  11a2d4:	 e0 b4 04 00 20 78 04 00         .... x..
  11a2dc:	 88 3a 04 00 f0 fc 03 00         .:......
  11a2e4:	 58 bf 03 00 c0 81 03 00         X.......
  11a2ec:	 28 44 03 00 68 07 03 00         (D..h...
  11a2f4:	 80 cb 02 00 48 91 02 00         ....H...
  11a2fc:	 e8 57 02 00 38 20 02 00         .W..8 ..
  11a304:	 38 ea 01 00 e8 b5 01 00         8.......
  11a30c:	 48 83 01 00 58 52 01 00         H...XR..
  11a314:	 c8 24 01 00 10 f8 00 00         .$......
  11a31c:	 e0 cd 00 00 38 a6 00 00         ....8...
  11a324:	 18 81 00 00 a8 5d 00 00         .....]..
  11a32c:	 c0 3c 00 00 60 1e 00 00         .<..`...
  11a334:	 b0 01 00 00 88 e7 ff ff         ........
  11a33c:	 e8 cf ff ff f8 b9 ff ff         ........
  11a344:	 90 a6 ff ff d8 94 ff ff         ........
  11a34c:	 d0 84 ff ff 78 76 ff ff         ....xv..
  11a354:	 a8 6a ff ff 88 60 ff ff         .j...`..
  11a35c:	 40 57 ff ff 80 50 ff ff         @W...P..
  11a364:	 98 4a ff ff 88 45 ff ff         .J...E..
  11a36c:	 00 43 ff ff 78 40 ff ff         .C..x@..
  11a374:	 a0 3f ff ff a0 3f ff ff         .?...?..
  11a37c:	 78 40 ff ff 28 42 ff ff         x@..(B..
  11a384:	 b0 44 ff ff 10 48 ff ff         .D...H..
  11a38c:	 b8 b3 00 00 80 af 00 00         ........
  11a394:	 70 aa 00 00 60 a5 00 00         p...`...
  11a39c:	 50 a0 00 00 68 9a 00 00         P...h...
  11a3a4:	 80 94 00 00 98 8e 00 00         ........
  11a3ac:	 d8 87 00 00 f0 81 00 00         ........
  11a3b4:	 08 7c 00 00 48 75 00 00         .|..Hu..
  11a3bc:	 60 6f 00 00 78 69 00 00         `o..xi..
  11a3c4:	 b8 62 00 00 a8 5d 00 00         .b...]..
  11a3cc:	 c0 57 00 00 d8 51 00 00         .W...Q..
  11a3d4:	 c8 4c 00 00 b8 47 00 00         .L...G..
  11a3dc:	 a8 42 00 00 98 3d 00 00         .B...=..
  11a3e4:	 60 39 00 00 28 35 00 00         `9..(5..
  11a3ec:	 f0 30 00 00 b8 2c 00 00         .0...,..
  11a3f4:	 58 29 00 00 f8 25 00 00         X)...%..
  11a3fc:	 98 22 00 00 10 20 00 00         ."... ..
  11a404:	 88 1d 00 00 28 1a 00 00         ....(...
  11a40c:	 78 18 00 00 f0 15 00 00         x.......
  11a414:	 40 14 00 00 b8 11 00 00         @.......
  11a41c:	 08 10 00 00 58 0e 00 00         ....X...
  11a424:	 80 0d 00 00 d0 0b 00 00         ........
  11a42c:	 f8 0a 00 00 48 09 00 00         ....H...
  11a434:	 70 08 00 00 98 07 00 00         p.......
  11a43c:	 c0 06 00 00 e8 05 00 00         ........
  11a444:	 e8 05 00 00 10 05 00 00         ........
  11a44c:	 38 04 00 00 38 04 00 00         8...8...
  11a454:	 60 03 00 00 60 03 00 00         `...`...
  11a45c:	 88 02 00 00 88 02 00 00         ........
  11a464:	 b0 01 00 00 b0 01 00 00         ........
  11a46c:	 b0 01 00 00 b0 01 00 00         ........
  11a474:	 d8 00 00 00 d8 00 00 00         ........
  11a47c:	 d8 00 00 00 d8 00 00 00         ........
  11a484:	 d8 00 00 00 d8 00 00 00         ........


mp2_costab32:
  11a48c:	 d4 8b 8a 00 e9 7a 4e 01         .....zN.
  11a494:	 f7 81 82 00 d8 64 e6 00         .....d..
  11a49c:	 bd f1 99 00 3a 1b 90 02         ....:...
  11a4a4:	 8d 9e 80 00 81 c4 c9 00         ........
  11a4ac:	 3f 23 91 00 4b f2 b8 01         ?#..K...
  11a4b4:	 e0 e4 19 05 1d 96 a5 00         ........
  11a4bc:	 93 88 0f 01 78 c2 85 00         ....x...
  11a4c4:	 60 a4 30 0a 3e c0 ac 00         `.0.>...
  11a4cc:	 6b 60 2b 01 69 f2 87 00         k`+.i...
  11a4d4:	 bd ca 0e 02 3a 3b 95 00         ....:;..
  11a4dc:	 9f df d6 00 8c 66 81 00         .....f..
  11a4e4:	 07 59 68 03 6e 5c 9f 00         .Yh.n\..
  11a4ec:	 3c fa f8 00 5b f4 83 00         <...[...
  11a4f4:	 37 f2 7b 01 38 98 8d 00         7.{.8...
  11a4fc:	 ee 99 be 00 85 27 80 00         .....'..


total_quant_bits:
  11a504:	 14 00 1c 00 24 00 28 00         ....$.(.
  11a50c:	 30 00 3c 00 48 00 54 00         0.<.H.T.
  11a514:	 60 00 6c 00 78 00 84 00         `.l.x...
  11a51c:	 90 00 9c 00 a8 00 b4 00         ........
  11a524:	 c0 00                           ..


mP2E_samplerate_table:
  11a526:	 44 ac 80 bb 00 7d 22 56         D....}"V
  11a52e:	 c0 5d 80 3e 11 2b e0 2e         .].>.+..
  11a536:	 40 1f                           @.


sblimt:
  11a538:	 1e 1b 0f 0c 08 00 00 00         ........


alloc_sbs:
  11a540:	 ac a5 11 00 ac a5 11 00         ........
  11a548:	 ac a5 11 00 ca a5 11 00         ........
  11a550:	 ca a5 11 00                     ....


alloc_tables:
  11a554:	 68 a5 11 00 68 a5 11 00         h...h...
  11a55c:	 68 a5 11 00 94 a5 11 00         h.......
  11a564:	 94 a5 11 00                     ....


alloc_table_1:
  11a568:	 04 00 02 04 05 06 07 08         ........
  11a570:	 09 0a 0b 0c 0d 0e 0f 10         ........
  11a578:	 04 00 01 02 03 04 05 06         ........
  11a580:	 07 08 09 0a 0b 0c 0d 10         ........
  11a588:	 03 00 01 02 03 04 05 10         ........
  11a590:	 02 00 01 10                     ....


alloc_table_3:
  11a594:	 04 00 01 03 04 05 06 07         ........
  11a59c:	 08 09 0a 0b 0c 0d 0e 0f         ........
  11a5a4:	 03 00 01 03 04 05 06 07         ........


alloc_sb1:
  11a5ac:	 00 00 00 10 10 10 10 10         ........
  11a5b4:	 10 10 10 20 20 20 20 20         ...     
  11a5bc:	 20 20 20 20 20 20 20 28                (
  11a5c4:	 28 28 28 28 28 28               ((((((


alloc_sb3:
  11a5ca:	 00 00 10 10 10 10 10 10         ........
  11a5d2:	 10 10 10 10                     ....


quant_steps:
  11a5d6:	 03 00 05 00 07 00 09 00         ........
  11a5de:	 0f 00 1f 00 3f 00 7f 00         ....?...
  11a5e6:	 ff 00 ff 01 ff 03 ff 07         ........
  11a5ee:	 ff 0f ff 1f ff 3f ff 7f         .....?..
  11a5f6:	 ff ff                           ..


scale_factor_mult:
  11a5f8:	 00 00 10 00 a2 28 14 00         .....(..
  11a600:	 fe 65 19 00 00 00 10 00         .e......
  11a608:	 a2 28 14 00 fe 65 19 00         .(...e..
  11a610:	 00 00 10 00 a2 28 14 00         .....(..
  11a618:	 fe 65 19 00 00 00 10 00         .e......
  11a620:	 a2 28 14 00 fe 65 19 00         .(...e..
  11a628:	 00 00 10 00 a2 28 14 00         .....(..
  11a630:	 fe 65 19 00 00 00 10 00         .e......
  11a638:	 a2 28 14 00 fe 65 19 00         .(...e..
  11a640:	 00 00 10 00 a2 28 14 00         .....(..
  11a648:	 fe 65 19 00 00 00 10 00         .e......
  11a650:	 a2 28 14 00 fe 65 19 00         .(...e..
  11a658:	 00 00 10 00 a2 28 14 00         .....(..
  11a660:	 fe 65 19 00 00 00 10 00         .e......
  11a668:	 a2 28 14 00 fe 65 19 00         .(...e..
  11a670:	 00 00 10 00 a2 28 14 00         .....(..
  11a678:	 fe 65 19 00 00 00 10 00         .e......
  11a680:	 a2 28 14 00 fe 65 19 00         .(...e..
  11a688:	 00 00 10 00 a2 28 14 00         .....(..
  11a690:	 fe 65 19 00 00 00 10 00         .e......
  11a698:	 a2 28 14 00 fe 65 19 00         .(...e..
  11a6a0:	 00 00 10 00 a2 28 14 00         .....(..
  11a6a8:	 fe 65 19 00 00 00 10 00         .e......
  11a6b0:	 a2 28 14 00 fe 65 19 00         .(...e..
  11a6b8:	 00 00 10 00 a2 28 14 00         .....(..
  11a6c0:	 fe 65 19 00 00 00 10 00         .e......
  11a6c8:	 a2 28 14 00 fe 65 19 00         .(...e..
  11a6d0:	 00 00 10 00 a2 28 14 00         .....(..
  11a6d8:	 fe 65 19 00 00 00 10 00         .e......
  11a6e0:	 a2 28 14 00 fe 65 19 00         .(...e..
  11a6e8:	 00 00 10 00 a2 28 14 00         .....(..
  11a6f0:	 fe 65 19 00 00 00 10 00         .e......


quant_bits:
  11a6f8:	 fb f9 03 f6 04 05 06 07         ........
  11a700:	 08 09 0a 0b 0c 0d 0e 0f         ........
  11a708:	 10 5b 49 6e 66 6f 5d 20         .[Info] 
  11a710:	 5b 6e 6f 72 6d 61 6c 5d         [normal]
  11a718:	 64 65 63 6f 64 65 20 73         decode s
  11a720:	 74 6f 70 20 77 61 69 74         top wait
  11a728:	 21 0a 0d 0a 00 2e 6d 69         !.....mi
  11a730:	 6f 00 5b 49 6e 66 6f 5d         o.[Info]
  11a738:	 20 5b 6e 6f 72 6d 61 6c          [normal
  11a740:	 5d 64 6f 27 74 20 6e 65         ]do't ne
  11a748:	 65 64 20 73 72 63 0a 0d         ed src..
  11a750:	 0a 00 5b 49 6e 66 6f 5d         ..[Info]
  11a758:	 20 5b 6e 6f 72 6d 61 6c          [normal
  11a760:	 5d 64 65 63 6f 64 65 20         ]decode 
  11a768:	 73 75 63 63 20 0a 0d 0a         succ ...
  11a770:	 00 5b 49 6e 66 6f 5d 20         .[Info] 
  11a778:	 5b 6e 6f 72 6d 61 6c 5d         [normal]
  11a780:	 64 65 63 6f 64 65 20 65         decode e
  11a788:	 72 72 20 3a 20 30 78 25         rr : 0x%
  11a790:	 78 0a 0d 0a 00 5b 49 6e         x....[In
  11a798:	 66 6f 5d 20 5b 6e 6f 72         fo] [nor
  11a7a0:	 6d 61 6c 5d 64 65 63 6f         mal]deco
  11a7a8:	 64 65 72 20 72 65 74 20         der ret 
  11a7b0:	 3a 20 30 78 25 78 0a 0d         : 0x%x..
  11a7b8:	 0a 00 5b 49 6e 66 6f 5d         ..[Info]
  11a7c0:	 20 5b 6e 6f 72 6d 61 6c          [normal
  11a7c8:	 5d 66 69 6c 65 20 65 6e         ]file en
  11a7d0:	 64 0a 0d 0a 00 5b 49 6e         d....[In
  11a7d8:	 66 6f 5d 20 5b 6e 6f 72         fo] [nor
  11a7e0:	 6d 61 6c 5d 20 67 65 74         mal] get
  11a7e8:	 20 64 65 63 6f 64 65 72          decoder
  11a7f0:	 20 70 6f 69 6e 74 20 62          point b
  11a7f8:	 75 66 20 6e 75 6c 6c 0a         uf null.
  11a800:	 0d 0a 00 5b 49 6e 66 6f         ...[Info
  11a808:	 5d 20 5b 6e 6f 72 6d 61         ] [norma
  11a810:	 6c 5d 20 65 72 72 20 64         l] err d
  11a818:	 70 20 73 69 7a 65 20 25         p size %
  11a820:	 64 20 25 64 0a 0d 0a 00         d %d....
  11a828:	 5b 49 6e 66 6f 5d 20 5b         [Info] [
  11a830:	 6e 6f 72 6d 61 6c 5d 20         normal] 
  11a838:	 20 63 68 65 63 6b 20 64          check d
  11a840:	 65 63 6f 64 65 72 20 70         ecoder p
  11a848:	 6f 69 6e 74 20 62 75 66         oint buf
  11a850:	 20 6e 75 6c 6c 0a 0d 0a          null...
  11a858:	 00 5b 49 6e 66 6f 5d 20         .[Info] 
  11a860:	 5b 6e 6f 72 6d 61 6c 5d         [normal]
  11a868:	 20 64 6f 63 6f 64 65 72          docoder
  11a870:	 5f 70 6f 69 6e 74 20 65         _point e
  11a878:	 72 72 2c 20 63 72 63 3a         rr, crc:
  11a880:	 20 30 78 25 78 20 30 78          0x%x 0x
  11a888:	 25 78 0a 0d 0a 00 5b 49         %x....[I
  11a890:	 6e 66 6f 5d 20 5b 6e 6f         nfo] [no
  11a898:	 72 6d 61 6c 5d 61 5f 64         rmal]a_d
  11a8a0:	 65 63 6f 64 65 5f 61 70         ecode_ap
  11a8a8:	 69 0d 0a 00 5b 49 6e 66         i...[Inf
  11a8b0:	 6f 5d 20 5b 6e 6f 72 6d         o] [norm
  11a8b8:	 61 6c 5d 66 69 6c 65 20         al]file 
  11a8c0:	 67 5f 66 69 6c 65 5f 73         g_file_s
  11a8c8:	 6e 61 6d 65 20 3a 20 25         name : %
  11a8d0:	 73 0d 0a 00 5b 49 6e 66         s...[Inf
  11a8d8:	 6f 5d 20 5b 6e 6f 72 6d         o] [norm
  11a8e0:	 61 6c 5d 66 69 6c 65 20         al]file 
  11a8e8:	 69 73 20 61 20 61 5f 66         is a a_f
  11a8f0:	 69 6c 65 0d 0a 00 5b 49         ile...[I
  11a8f8:	 6e 66 6f 5d 20 5b 6e 6f         nfo] [no
  11a900:	 72 6d 61 6c 5d 66 69 6c         rmal]fil
  11a908:	 65 20 69 73 20 61 20 62         e is a b
  11a910:	 5f 66 69 6c 65 0d 0a 00         _file...
  11a918:	 5b 49 6e 66 6f 5d 20 5b         [Info] [
  11a920:	 6e 6f 72 6d 61 6c 5d 66         normal]f
  11a928:	 69 6c 65 20 69 73 20 61         ile is a
  11a930:	 20 65 5f 66 69 6c 65 0d          e_file.
  11a938:	 0a 00 3c 45 72 72 6f 72         ..<Error
  11a940:	 3e 20 5b 6e 6f 72 6d 61         > [norma
  11a948:	 6c 5d 65 5f 66 69 6c 65         l]e_file
  11a950:	 20 66 6f 72 6d 61 74 20          format 
  11a958:	 63 68 65 63 6b 20 65 72         check er
  11a960:	 72 0a 0d 0a 00 5b 49 6e         r....[In
  11a968:	 66 6f 5d 20 5b 6e 6f 72         fo] [nor
  11a970:	 6d 61 6c 5d 66 31 61 5f         mal]f1a_
  11a978:	 64 65 63 6f 64 65 5f 61         decode_a
  11a980:	 70 69 0d 0a 00 5b 49 6e         pi...[In
  11a988:	 66 6f 5d 20 5b 6e 6f 72         fo] [nor
  11a990:	 6d 61 6c 5d 66 31 61 20         mal]f1a 
  11a998:	 62 75 66 66 20 6e 65 65         buff nee
  11a9a0:	 64 20 3a 20 30 78 25 78         d : 0x%x
  11a9a8:	 0a 0d 0a 00 5b 49 6e 66         ....[Inf
  11a9b0:	 6f 5d 20 5b 6e 6f 72 6d         o] [norm
  11a9b8:	 61 6c 5d 66 69 6c 65 20         al]file 
  11a9c0:	 6e 61 6d 65 20 3a 20 25         name : %
  11a9c8:	 73 0d 0a 00 3c 45 72 72         s...<Err
  11a9d0:	 6f 72 3e 20 5b 6e 6f 72         or> [nor
  11a9d8:	 6d 61 6c 5d 66 31 63 20         mal]f1c 
  11a9e0:	 66 6f 72 6d 61 74 20 65         format e
  11a9e8:	 72 72 0a 0d 0a 00 3c 45         rr....<E
  11a9f0:	 72 72 6f 72 3e 20 5b 6e         rror> [n
  11a9f8:	 6f 72 6d 61 6c 5d 66 31         ormal]f1
  11aa00:	 78 20 6e 75 6c 6c 0a 0d         x null..
  11aa08:	 0a 00 3c 45 72 72 6f 72         ..<Error
  11aa10:	 3e 20 5b 6e 6f 72 6d 61         > [norma
  11aa18:	 6c 5d 66 31 78 20 66 6f         l]f1x fo
  11aa20:	 72 6d 61 74 20 65 72 72         rmat err
  11aa28:	 0a 0d 0a 00 3c 45 72 72         ....<Err
  11aa30:	 6f 72 3e 20 5b 6e 6f 72         or> [nor
  11aa38:	 6d 61 6c 5d 66 31 61 20         mal]f1a 
  11aa40:	 74 79 70 65 20 65 72 72         type err
  11aa48:	 0a 0d 0a 00 5b 49 6e 66         ....[Inf
  11aa50:	 6f 5d 20 5b 6e 6f 72 6d         o] [norm
  11aa58:	 61 6c 5d 66 69 6c 65 20         al]file 
  11aa60:	 69 73 20 61 20 66 31 25         is a f1%
  11aa68:	 63 0d 0a 00 3c 45 72 72         c...<Err
  11aa70:	 6f 72 3e 20 5b 6e 6f 72         or> [nor
  11aa78:	 6d 61 6c 5d 66 31 78 20         mal]f1x 
  11aa80:	 70 61 72 73 69 6e 67 20         parsing 
  11aa88:	 30 78 25 78 0a 0d 0a 00         0x%x....
  11aa90:	 5b 49 6e 66 6f 5d 20 5b         [Info] [
  11aa98:	 6e 6f 72 6d 61 6c 5d 6d         normal]m
  11aaa0:	 69 64 69 5f 64 65 63 6f         idi_deco
  11aaa8:	 64 65 5f 61 70 69 0a 0d         de_api..
  11aab0:	 0a 00 5b 49 6e 66 6f 5d         ..[Info]
  11aab8:	 20 5b 6e 6f 72 6d 61 6c          [normal
  11aac0:	 5d 4d 49 44 49 5f 44 45         ]MIDI_DE
  11aac8:	 43 20 4e 65 65 64 20 42         C Need B
  11aad0:	 75 66 66 20 4c 65 6e 3a         uff Len:
  11aad8:	 25 64 0a 0d 0a 00 3c 45         %d....<E
  11aae0:	 72 72 6f 72 3e 20 5b 6e         rror> [n
  11aae8:	 6f 72 6d 61 6c 5d 41 53         ormal]AS
  11aaf0:	 53 45 52 54 3a 20 30 20         SERT: 0 
  11aaf8:	 6d 69 64 69 20 65 72 72         midi err
  11ab00:	 6f 72 20 73 72 20 21 21         or sr !!
  11ab08:	 21 3a 25 64 20 0a 0d 0a         !:%d ...
  11ab10:	 00 5b 49 6e 66 6f 5d 20         .[Info] 
  11ab18:	 5b 6e 6f 72 6d 61 6c 5d         [normal]
  11ab20:	 6d 69 64 69 20 64 65 63         midi dec
  11ab28:	 20 6d 64 61 20 6f 70 65          mda ope
  11ab30:	 6e 20 66 61 69 6c 2c 20         n fail, 
  11ab38:	 74 72 79 20 6f 6c 64 20         try old 
  11ab40:	 6d 69 64 69 5f 63 66 67         midi_cfg
  11ab48:	 2e 62 69 6e 21 0a 0d 0a         .bin!...
  11ab50:	 00 2f 6d 69 64 69 5f 63         ./midi_c
  11ab58:	 66 67 2f 6d 69 64 69 5f         fg/midi_
  11ab60:	 63 66 67 2e 62 69 6e 00         cfg.bin.
  11ab68:	 5b 49 6e 66 6f 5d 20 5b         [Info] [
  11ab70:	 6e 6f 72 6d 61 6c 5d 4d         normal]M
  11ab78:	 49 44 49 5f 43 54 52 4c         IDI_CTRL
  11ab80:	 20 4e 65 65 64 20 42 75          Need Bu
  11ab88:	 66 66 20 4c 65 6e 3a 25         ff Len:%
  11ab90:	 64 0a 0d 0a 00 6d 69 64         d....mid
  11ab98:	 69 5f 63 74 72 6c 00 2f         i_ctrl./
  11aba0:	 6d 69 64 69 5f 63 74 72         midi_ctr
  11aba8:	 6c 5f 70 72 6f 67 2f 4d         l_prog/M
  11abb0:	 49 44 49 5f 43 54 52 4c         IDI_CTRL
  11abb8:	 2e 6d 64 61 00 5b 49 6e         .mda.[In
  11abc0:	 66 6f 5d 20 5b 6e 6f 72         fo] [nor
  11abc8:	 6d 61 6c 5d 6d 69 64 69         mal]midi
  11abd0:	 20 63 74 72 6c 20 6d 64          ctrl md
  11abd8:	 61 20 6f 70 65 6e 20 66         a open f
  11abe0:	 61 69 6c 2c 20 74 72 79         ail, try
  11abe8:	 20 6f 6c 64 20 6d 69 64          old mid
  11abf0:	 69 5f 63 66 67 2e 62 69         i_cfg.bi
  11abf8:	 6e 21 0a 0d 0a 00 2f 6d         n!..../m
  11ac00:	 69 64 69 5f 63 66 67 2f         idi_cfg/
  11ac08:	 30 30 5f 4d 49 44 49 2e         00_MIDI.
  11ac10:	 6d 64 61 00 5b 49 6e 66         mda.[Inf
  11ac18:	 6f 5d 20 5b 6e 6f 72 6d         o] [norm
  11ac20:	 61 6c 5d 75 6d 70 33 5f         al]ump3_
  11ac28:	 64 65 63 6f 64 65 5f 61         decode_a
  11ac30:	 70 69 0a 0d 0a 00 5b 49         pi....[I
  11ac38:	 6e 66 6f 5d 20 5b 6e 6f         nfo] [no
  11ac40:	 72 6d 61 6c 5d 66 69 6c         rmal]fil
  11ac48:	 65 20 6e 61 6d 65 20 3a         e name :
  11ac50:	 20 25 73 0a 0d 0a 00 5b          %s....[
  11ac58:	 49 6e 66 6f 5d 20 5b 6e         Info] [n
  11ac60:	 6f 72 6d 61 6c 5d 20 2d         ormal] -
  11ac68:	 75 6d 70 33 20 6f 70 65         ump3 ope
  11ac70:	 6e 0a 0d 0a 00 5b 49 6e         n....[In
  11ac78:	 66 6f 5d 20 5b 6e 6f 72         fo] [nor
  11ac80:	 6d 61 6c 5d 20 2d 75 6d         mal] -um
  11ac88:	 70 33 20 6f 70 65 6e 20         p3 open 
  11ac90:	 6f 76 65 72 0a 0d 0a 00         over....
  11ac98:	 5b 49 6e 66 6f 5d 20 5b         [Info] [
  11aca0:	 6e 6f 72 6d 61 6c 5d 20         normal] 
  11aca8:	 75 6d 70 33 20 66 6f 72         ump3 for
  11acb0:	 6d 61 74 20 65 72 72 20         mat err 
  11acb8:	 3a 20 25 73 0a 0d 0a 00         : %s....
  11acc0:	 5b 49 6e 66 6f 5d 20 5b         [Info] [
  11acc8:	 6e 6f 72 6d 61 6c 5d 66         normal]f
  11acd0:	 69 6c 65 20 73 72 20 3a         ile sr :
  11acd8:	 20 25 64 0a 0d 0a 00 5b          %d....[
  11ace0:	 49 6e 66 6f 5d 20 5b 6e         Info] [n
  11ace8:	 6f 72 6d 61 6c 5d 73 74         ormal]st
  11acf0:	 6f 70 20 65 6e 63 6f 64         op encod
  11acf8:	 65 0a 0d 0a 00 5b 49 6e         e....[In
  11ad00:	 66 6f 5d 20 5b 6e 6f 72         fo] [nor
  11ad08:	 6d 61 6c 5d 73 74 6f 70         mal]stop
  11ad10:	 20 65 6e 63 6f 64 65 20          encode 
  11ad18:	 41 0a 0d 0a 00 5b 49 6e         A....[In
  11ad20:	 66 6f 5d 20 5b 6e 6f 72         fo] [nor
  11ad28:	 6d 61 6c 5d 73 74 6f 70         mal]stop
  11ad30:	 20 65 6e 63 6f 64 65 20          encode 
  11ad38:	 43 0a 0d 0a 00 5b 49 6e         C....[In
  11ad40:	 66 6f 5d 20 5b 6e 6f 72         fo] [nor
  11ad48:	 6d 61 6c 5d 73 74 6f 70         mal]stop
  11ad50:	 20 65 6e 63 6f 64 65 20          encode 
  11ad58:	 44 0a 0d 0a 00 5b 49 6e         D....[In
  11ad60:	 66 6f 5d 20 5b 6e 6f 72         fo] [nor
  11ad68:	 6d 61 6c 5d 65 6e 63 6f         mal]enco
  11ad70:	 64 65 20 73 75 63 63 3a         de succ:
  11ad78:	 20 0a 0d 0a 00 5b 49 6e          ....[In
  11ad80:	 66 6f 5d 20 5b 6e 6f 72         fo] [nor
  11ad88:	 6d 61 6c 5d 75 6d 70 33         mal]ump3
  11ad90:	 5f 65 6e 63 6f 64 65 5f         _encode_
  11ad98:	 61 70 69 0a 0d 0a 00 5b         api....[
  11ada0:	 49 6e 66 6f 5d 20 5b 6e         Info] [n
  11ada8:	 6f 72 6d 61 6c 5d 41 0a         ormal]A.
  11adb0:	 0d 0a 00 5b 49 6e 66 6f         ...[Info
  11adb8:	 5d 20 5b 6e 6f 72 6d 61         ] [norma
  11adc0:	 6c 5d 44 0a 0d 0a 00 5b         l]D....[
  11adc8:	 49 6e 66 6f 5d 20 5b 6e         Info] [n
  11add0:	 6f 72 6d 61 6c 5d 6e 6f         ormal]no
  11add8:	 72 66 73 5f 69 6e 69 74         rfs_init
  11ade0:	 5f 61 70 69 20 21 21 21         _api !!!
  11ade8:	 0a 0d 0a 00 66 61 74 00         ....fat.
  11adf0:	 5b 49 6e 66 6f 5d 20 5b         [Info] [
  11adf8:	 6e 6f 72 6d 61 6c 5d 73         normal]s
  11ae00:	 79 64 66 5f 69 6e 69 74         ydf_init
  11ae08:	 5f 61 70 69 20 21 21 21         _api !!!
  11ae10:	 0a 0d 0a 00 5b 49 6e 66         ....[Inf
  11ae18:	 6f 5d 20 5b 6e 6f 72 6d         o] [norm
  11ae20:	 61 6c 5d 6f 70 73 5f 69         al]ops_i
  11ae28:	 6e 69 74 21 21 21 0a 0d         nit!!!..
  11ae30:	 0a 00 5b 49 6e 66 6f 5d         ..[Info]
  11ae38:	 20 5b 6e 6f 72 6d 61 6c          [normal
  11ae40:	 5d 76 62 61 74 20 76 61         ]vbat va
  11ae48:	 6c 75 65 3a 25 64 20 0a         lue:%d .
  11ae50:	 0d 0a 00 3c 45 72 72 6f         ...<Erro
  11ae58:	 72 3e 20 5b 6e 6f 72 6d         r> [norm
  11ae60:	 61 6c 5d 57 61 72 6e 69         al]Warni
  11ae68:	 6e 67 21 21 21 20 56 62         ng!!! Vb
  11ae70:	 61 74 20 69 73 20 6e 65         at is ne
  11ae78:	 61 72 20 74 6f 20 6c 76         ar to lv
  11ae80:	 64 21 0a 0d 0a 00 5b 49         d!....[I
  11ae88:	 6e 66 6f 5d 20 5b 6e 6f         nfo] [no
  11ae90:	 72 6d 61 6c 5d 65 63 68         rmal]ech
  11ae98:	 6f 5f 61 70 69 0a 0d 0a         o_api...
  11aea0:	 00 5b 49 6e 66 6f 5d 20         .[Info] 
  11aea8:	 5b 6e 6f 72 6d 61 6c 5d         [normal]
  11aeb0:	 65 63 68 6f 20 77 6f 72         echo wor
  11aeb8:	 6b 5f 62 75 66 5f 6c 65         k_buf_le
  11aec0:	 6e 20 25 64 0a 0d 0a 00         n %d....
  11aec8:	 5b 49 6e 66 6f 5d 20 5b         [Info] [
  11aed0:	 6e 6f 72 6d 61 6c 5d 65         normal]e
  11aed8:	 63 68 6f 5f 68 64 6c 2d         cho_hdl-
  11aee0:	 3e 65 63 68 6f 2e 70 74         >echo.pt
  11aee8:	 72 20 25 78 0a 0d 0a 00         r %x....
  11aef0:	 3c 45 72 72 6f 72 3e 20         <Error> 
  11aef8:	 5b 6e 6f 72 6d 61 6c 5d         [normal]
  11af00:	 65 63 68 6f 20 77 6f 72         echo wor
  11af08:	 6b 20 62 75 66 20 6c 65         k buf le
  11af10:	 73 73 20 25 64 2c 20 6e         ss %d, n
  11af18:	 65 65 64 20 6c 65 6e 20         eed len 
  11af20:	 25 64 0d 0a 00 5b 49 6e         %d...[In
  11af28:	 66 6f 5d 20 5b 6e 6f 72         fo] [nor
  11af30:	 6d 61 6c 5d 70 61 72 6d         mal]parm
  11af38:	 2e 65 63 68 6f 5f 70 61         .echo_pa
  11af40:	 72 6d 5f 6f 62 6a 2e 64         rm_obj.d
  11af48:	 65 63 61 79 76 61 6c 20         ecayval 
  11af50:	 25 64 0a 0d 0a 00 5b 49         %d....[I
  11af58:	 6e 66 6f 5d 20 5b 6e 6f         nfo] [no
  11af60:	 72 6d 61 6c 5d 70 61 72         rmal]par
  11af68:	 6d 2e 65 63 68 6f 5f 70         m.echo_p
  11af70:	 61 72 6d 5f 6f 62 6a 2e         arm_obj.
  11af78:	 64 65 6c 61 79 20 25 64         delay %d
  11af80:	 0a 0d 0a 00 5b 49 6e 66         ....[Inf
  11af88:	 6f 5d 20 5b 6e 6f 72 6d         o] [norm
  11af90:	 61 6c 5d 70 61 72 6d 2e         al]parm.
  11af98:	 65 63 68 6f 5f 70 61 72         echo_par
  11afa0:	 6d 5f 6f 62 6a 2e 65 6e         m_obj.en
  11afa8:	 65 72 67 79 5f 76 61 64         ergy_vad
  11afb0:	 5f 74 68 72 65 73 68 6f         _thresho
  11afb8:	 6c 64 20 25 64 0a 0d 0a         ld %d...
  11afc0:	 00 5b 49 6e 66 6f 5d 20         .[Info] 
  11afc8:	 5b 6e 6f 72 6d 61 6c 5d         [normal]
  11afd0:	 70 61 72 6d 2e 65 63 68         parm.ech
  11afd8:	 6f 5f 70 61 72 6d 5f 6f         o_parm_o
  11afe0:	 62 6a 2e 64 69 72 65 63         bj.direc
  11afe8:	 74 5f 73 6f 75 6e 64 5f         t_sound_
  11aff0:	 65 6e 61 62 6c 65 20 25         enable %
  11aff8:	 64 0a 0d 0a 00 5b 49 6e         d....[In
  11b000:	 66 6f 5d 20 5b 6e 6f 72         fo] [nor
  11b008:	 6d 61 6c 5d 70 61 72 6d         mal]parm
  11b010:	 2e 65 63 68 6f 5f 66 69         .echo_fi
  11b018:	 78 5f 70 61 72 6d 2e 6d         x_parm.m
  11b020:	 61 78 5f 6d 73 20 25 64         ax_ms %d
  11b028:	 0a 0d 0a 00 5b 49 6e 66         ....[Inf
  11b030:	 6f 5d 20 5b 6e 6f 72 6d         o] [norm
  11b038:	 61 6c 5d 70 61 72 6d 2e         al]parm.
  11b040:	 65 63 68 6f 5f 66 69 78         echo_fix
  11b048:	 5f 70 61 72 6d 2e 73 72         _parm.sr
  11b050:	 20 25 64 0a 0d 0a 00 5b          %d....[
  11b058:	 49 6e 66 6f 5d 20 5b 6e         Info] [n
  11b060:	 6f 72 6d 61 6c 5d 70 61         ormal]pa
  11b068:	 72 6d 2e 65 63 68 6f 5f         rm.echo_
  11b070:	 66 69 78 5f 70 61 72 6d         fix_parm
  11b078:	 2e 77 65 74 67 61 69 6e         .wetgain
  11b080:	 20 25 64 0a 0d 0a 00 5b          %d....[
  11b088:	 49 6e 66 6f 5d 20 5b 6e         Info] [n
  11b090:	 6f 72 6d 61 6c 5d 70 61         ormal]pa
  11b098:	 72 6d 2e 65 63 68 6f 5f         rm.echo_
  11b0a0:	 66 69 78 5f 70 61 72 6d         fix_parm
  11b0a8:	 2e 64 72 79 67 61 69 6e         .drygain
  11b0b0:	 20 25 64 0a 0d 0a 00 5b          %d....[
  11b0b8:	 49 6e 66 6f 5d 20 5b 6e         Info] [n
  11b0c0:	 6f 72 6d 61 6c 5d 68 6f         ormal]ho
  11b0c8:	 77 6c 69 6e 67 20 77 6f         wling wo
  11b0d0:	 72 6b 5f 62 75 66 5f 6c         rk_buf_l
  11b0d8:	 65 6e 20 25 64 0a 0d 0a         en %d...
  11b0e0:	 00 3c 45 72 72 6f 72 3e         .<Error>
  11b0e8:	 20 5b 6e 6f 72 6d 61 6c          [normal
  11b0f0:	 5d 68 6f 77 69 6e 67 20         ]howing 
  11b0f8:	 77 6f 72 6b 20 62 75 66         work buf
  11b100:	 20 6c 65 73 73 20 25 64          less %d
  11b108:	 2c 20 6e 65 65 64 20 6c         , need l
  11b110:	 65 6e 20 25 64 0d 0a 00         en %d...
  11b118:	 5b 49 6e 66 6f 5d 20 5b         [Info] [
  11b120:	 6e 6f 72 6d 61 6c 5d 6e         normal]n
  11b128:	 6f 74 63 68 5f 68 6f 77         otch_how
  11b130:	 6c 69 6e 67 20 77 6f 72         ling wor
  11b138:	 6b 5f 62 75 66 5f 6c 65         k_buf_le
  11b140:	 6e 20 25 64 0a 0d 0a 00         n %d....
  11b148:	 5b 49 6e 66 6f 5d 20 5b         [Info] [
  11b150:	 6e 6f 72 6d 61 6c 5d 6e         normal]n
  11b158:	 6f 74 63 68 20 68 6f 77         otch how
  11b160:	 6c 69 6e 67 5f 68 64 6c         ling_hdl
  11b168:	 5f 70 74 72 20 25 78 0a         _ptr %x.
  11b170:	 0d 0a 00 3c 45 72 72 6f         ...<Erro
  11b178:	 72 3e 20 5b 6e 6f 72 6d         r> [norm
  11b180:	 61 6c 5d 6e 6f 74 63 68         al]notch
  11b188:	 20 68 6f 77 69 6e 67 20          howing 
  11b190:	 77 6f 72 6b 20 62 75 66         work buf
  11b198:	 20 6c 65 73 73 20 25 64          less %d
  11b1a0:	 2c 20 6e 65 65 64 20 6c         , need l
  11b1a8:	 65 6e 20 25 64 0d 0a 00         en %d...
  11b1b0:	 5b 49 6e 66 6f 5d 20 5b         [Info] [
  11b1b8:	 6e 6f 72 6d 61 6c 5d 68         normal]h
  11b1c0:	 6f 77 6c 69 6e 67 2d 3e         owling->
  11b1c8:	 70 61 72 6d 2e 67 61 69         parm.gai
  11b1d0:	 6e 20 25 64 0d 0a 00 5b         n %d...[
  11b1d8:	 49 6e 66 6f 5d 20 5b 6e         Info] [n
  11b1e0:	 6f 72 6d 61 6c 5d 68 6f         ormal]ho
  11b1e8:	 77 6c 69 6e 67 2d 3e 70         wling->p
  11b1f0:	 61 72 6d 2e 51 20 25 64         arm.Q %d
  11b1f8:	 0d 0a 00 5b 49 6e 66 6f         ...[Info
  11b200:	 5d 20 5b 6e 6f 72 6d 61         ] [norma
  11b208:	 6c 5d 68 6f 77 6c 69 6e         l]howlin
  11b210:	 67 2d 3e 70 61 72 6d 2e         g->parm.
  11b218:	 66 61 64 65 5f 74 69 6d         fade_tim
  11b220:	 65 20 25 64 0d 0a 00 5b         e %d...[
  11b228:	 49 6e 66 6f 5d 20 5b 6e         Info] [n
  11b230:	 6f 72 6d 61 6c 5d 68 6f         ormal]ho
  11b238:	 77 6c 69 6e 67 2d 3e 70         wling->p
  11b240:	 61 72 6d 2e 74 68 72 65         arm.thre
  11b248:	 73 68 6f 6c 64 20 25 64         shold %d
  11b250:	 0d 0a 00 5b 49 6e 66 6f         ...[Info
  11b258:	 5d 20 5b 6e 6f 72 6d 61         ] [norma
  11b260:	 6c 5d 68 6f 77 6c 69 6e         l]howlin
  11b268:	 67 2d 3e 70 61 72 6d 2e         g->parm.
  11b270:	 53 61 6d 70 6c 65 52 61         SampleRa
  11b278:	 74 65 20 25 64 0a 0d 0a         te %d...
  11b280:	 00 5b 49 6e 66 6f 5d 20         .[Info] 
  11b288:	 5b 6e 6f 72 6d 61 6c 5d         [normal]
  11b290:	 65 63 68 6f 20 69 6e 69         echo ini
  11b298:	 74 20 66 61 69 6c 0a 0d         t fail..
  11b2a0:	 0a 00 5b 49 6e 66 6f 5d         ..[Info]
  11b2a8:	 20 5b 6e 6f 72 6d 61 6c          [normal
  11b2b0:	 5d 73 70 65 65 64 5f 61         ]speed_a
  11b2b8:	 70 69 0a 0d 0a 00 5b 49         pi....[I
  11b2c0:	 6e 66 6f 5d 20 5b 6e 6f         nfo] [no
  11b2c8:	 72 6d 61 6c 5d 73 70 65         rmal]spe
  11b2d0:	 65 64 20 62 75 66 66 20         ed buff 
  11b2d8:	 6e 65 65 64 20 3a 20 30         need : 0
  11b2e0:	 78 25 78 0a 0d 0a 00 5b         x%x....[
  11b2e8:	 49 6e 66 6f 5d 20 5b 6e         Info] [n
  11b2f0:	 6f 72 6d 61 6c 5d 73 70         ormal]sp
  11b2f8:	 65 65 64 5f 73 75 63 63         eed_succ
  11b300:	 0a 0d 0a 00 5b 49 6e 66         ....[Inf
  11b308:	 6f 5d 20 5b 73 70 65 61         o] [spea
  11b310:	 6b 5f 61 70 69 5d 53 50         k_api]SP
  11b318:	 45 41 4b 45 52 20 53 54         EAKER ST
  11b320:	 41 52 54 20 21 21 21 20         ART !!! 
  11b328:	 0a 0d 0a 00 5b 49 6e 66         ....[Inf
  11b330:	 6f 5d 20 5b 73 70 65 61         o] [spea
  11b338:	 6b 5f 61 70 69 5d 53 50         k_api]SP
  11b340:	 45 41 4b 45 52 20 52 45         EAKER RE
  11b348:	 4c 45 53 53 20 21 21 21         LESS !!!
  11b350:	 20 0a 0d 0a 00 5b 49 6e          ....[In
  11b358:	 66 6f 5d 20 5b 63 6c 6f         fo] [clo
  11b360:	 63 6b 5d 20 73 79 73 20         ck] sys 
  11b368:	 63 6c 6f 63 6b 20 69 6e         clock in
  11b370:	 66 6f 20 65 72 72 0a 0d         fo err..
  11b378:	 0a 00 5b 49 6e 66 6f 5d         ..[Info]
  11b380:	 20 5b 63 6c 6f 63 6b 5d          [clock]
  11b388:	 2d 2d 2d 53 46 43 20 43         ---SFC C
  11b390:	 4c 4b 20 3a 20 25 64 0d         LK : %d.
  11b398:	 0a 00 5b 49 6e 66 6f 5d         ..[Info]
  11b3a0:	 20 5b 63 6c 6f 63 6b 5d          [clock]
  11b3a8:	 2d 2d 2d 53 50 49 20 43         ---SPI C
  11b3b0:	 4c 4b 20 3a 20 25 64 0d         LK : %d.
  11b3b8:	 0a 00 5b 49 6e 66 6f 5d         ..[Info]
  11b3c0:	 20 5b 63 6c 6f 63 6b 5d          [clock]
  11b3c8:	 2d 2d 2d 48 53 42 20 43         ---HSB C
  11b3d0:	 4c 4b 20 3a 20 25 64 0d         LK : %d.
  11b3d8:	 0a 00 6c 73 62 00 73 79         ..lsb.sy
  11b3e0:	 73 00 74 69 6d 65 72 00         s.timer.
  11b3e8:	 73 64 00 73 70 69 00 61         sd.spi.a
  11b3f0:	 64 63 00 6d 63 70 77 6d         dc.mcpwm
  11b3f8:	 00 6c 72 63 00 5b 49 6e         .lrc.[In
  11b400:	 66 6f 5d 20 5b 63 6c 6f         fo] [clo
  11b408:	 63 6b 5d 2d 2d 2d 4c 53         ck]---LS
  11b410:	 42 20 43 4c 4b 20 3a 20         B CLK : 
  11b418:	 25 64 0d 0a 00 5b 49 6e         %d...[In
  11b420:	 66 6f 5d 20 5b 63 6c 6f         fo] [clo
  11b428:	 63 6b 5d 6a 6c 5f 6c 72         ck]jl_lr
  11b430:	 63 74 2d 3e 6e 75 6d 20         ct->num 
  11b438:	 3d 20 25 64 0a 0d 0a 00         = %d....
  11b440:	 5b 49 6e 66 6f 5d 20 5b         [Info] [
  11b448:	 63 6c 6f 63 6b 5d 6f 6c         clock]ol
  11b450:	 64 5f 70 6c 6c 5f 64 73         d_pll_ds
  11b458:	 20 3d 20 25 64 0a 0d 0a          = %d...
  11b460:	 00 5b 49 6e 66 6f 5d 20         .[Info] 
  11b468:	 5b 63 6c 6f 63 6b 5d 6e         [clock]n
  11b470:	 65 77 5f 70 6c 6c 5f 64         ew_pll_d
  11b478:	 73 20 3d 20 25 64 0a 0d         s = %d..
  11b480:	 0a 00 5b 49 6e 66 6f 5d         ..[Info]
  11b488:	 20 5b 63 6c 6f 63 6b 5d          [clock]
  11b490:	 4a 4c 5f 50 4c 4c 2d 3e         JL_PLL->
  11b498:	 43 4f 4e 31 20 25 78 0d         CON1 %x.
  11b4a0:	 0a 00 5b 49 6e 66 6f 5d         ..[Info]
  11b4a8:	 20 5b 63 6c 6f 63 6b 5d          [clock]
  11b4b0:	 75 73 65 20 67 70 63 6e         use gpcn
  11b4b8:	 74 20 63 61 6c 20 68 74         t cal ht
  11b4c0:	 63 21 20 68 74 63 5f 70         c! htc_p
  11b4c8:	 6c 6c 5f 64 73 3a 25 64         ll_ds:%d
  11b4d0:	 0d 0a 00 5b 49 6e 66 6f         ...[Info
  11b4d8:	 5d 20 5b 63 6c 6f 63 6b         ] [clock
  11b4e0:	 5d 75 73 65 20 6d 61 73         ]use mas
  11b4e8:	 6b 20 68 74 63 21 20 68         k htc! h
  11b4f0:	 74 63 5f 70 6c 6c 5f 64         tc_pll_d
  11b4f8:	 73 3a 25 64 0d 0a 00 3c         s:%d...<
  11b500:	 45 72 72 6f 72 3e 20 5b         Error> [
  11b508:	 63 6c 6f 63 6b 5d 65 66         clock]ef
  11b510:	 75 73 65 5f 70 61 67 65         use_page
  11b518:	 30 20 42 49 54 28 31 35         0 BIT(15
  11b520:	 29 20 3d 20 30 2c 20 4e         ) = 0, N
  11b528:	 6f 20 6c 72 63 20 70 6c         o lrc pl
  11b530:	 6c 20 64 73 20 74 72 69         l ds tri
  11b538:	 6d 20 21 0a 0d 0a 00 3c         m !....<
  11b540:	 45 72 72 6f 72 3e 20 5b         Error> [
  11b548:	 63 6c 6f 63 6b 5d 4e 6f         clock]No
  11b550:	 20 65 66 75 73 65 20 74          efuse t
  11b558:	 72 69 6d 20 21 0a 0d 0a         rim !...
  11b560:	 00 5b 49 6e 66 6f 5d 20         .[Info] 
  11b568:	 5b 63 6c 6f 63 6b 5d 64         [clock]d
  11b570:	 73 5f 64 69 66 66 20 3d         s_diff =
  11b578:	 20 30 78 25 78 0a 0d 0a          0x%x...
  11b580:	 00 5b 49 6e 66 6f 5d 20         .[Info] 
  11b588:	 5b 63 6c 6f 63 6b 5d 6c         [clock]l
  11b590:	 72 63 5f 70 6c 6c 5f 64         rc_pll_d
  11b598:	 73 20 3d 20 30 78 25 78         s = 0x%x
  11b5a0:	 0a 0d 0a 00 5b 49 6e 66         ....[Inf
  11b5a8:	 6f 5d 20 5b 63 6c 6f 63         o] [cloc
  11b5b0:	 6b 5d 6e 75 6d 3a 25 64         k]num:%d
  11b5b8:	 2c 68 74 63 5f 63 6c 6b         ,htc_clk
  11b5c0:	 3a 25 64 0d 0a 00 5b 49         :%d...[I
  11b5c8:	 6e 66 6f 5d 20 5b 63 6c         nfo] [cl
  11b5d0:	 6f 63 6b 5d 63 68 61 6e         ock]chan
  11b5d8:	 67 65 20 70 6c 6c 5f 72         ge pll_r
  11b5e0:	 65 66 20 74 6f 20 6c 72         ef to lr
  11b5e8:	 63 21 0d 0a 00 5b 49 6e         c!...[In
  11b5f0:	 66 6f 5d 20 5b 63 6c 6f         fo] [clo
  11b5f8:	 63 6b 5d 63 68 61 6e 67         ck]chang
  11b600:	 65 20 70 6c 6c 5f 72 65         e pll_re
  11b608:	 66 20 74 6f 20 68 74 63         f to htc
  11b610:	 21 0d 0a 00 5b 49 6e 66         !...[Inf
  11b618:	 6f 5d 20 5b 70 77 72 61         o] [pwra
  11b620:	 5d 50 6f 77 65 72 20 69         ]Power i
  11b628:	 6e 69 74 20 3a 20 25 73         nit : %s
  11b630:	 0d 0a 00 46 3a 5c 4a 4c         ...F:\JL
  11b638:	 5c 66 77 2d 41 44 31 35         \fw-AD15
  11b640:	 4e 2d 6d 61 69 6e 5c 73         N-main\s
  11b648:	 64 6b 5c 61 70 70 5c 62         dk\app\b
  11b650:	 73 70 5c 63 70 75 5c 73         sp\cpu\s
  11b658:	 68 35 34 5c 70 6f 77 65         h54\powe
  11b660:	 72 5f 61 70 69 2e 63 00         r_api.c.
  11b668:	 75 61 72 74 00 5b 49 6e         uart.[In
  11b670:	 66 6f 5d 20 5b 6e 6f 72         fo] [nor
  11b678:	 6d 61 6c 5d 20 64 61 63         mal] dac
  11b680:	 20 76 6f 6c 20 25 64 2c          vol %d,
  11b688:	 20 30 78 25 78 0a 0d 0a          0x%x...
  11b690:	 00 3c 45 72 72 6f 72 3e         .<Error>
  11b698:	 20 5b 6e 6f 72 6d 61 6c          [normal
  11b6a0:	 5d 41 53 53 45 52 54 3a         ]ASSERT:
  11b6a8:	 20 21 65 72 72 20 66 69          !err fi
  11b6b0:	 69 20 76 66 73 20 6d 6f         i vfs mo
  11b6b8:	 75 6e 74 20 3a 20 30 78         unt : 0x
  11b6c0:	 25 78 0a 0d 0a 00 2f 61         %x..../a
  11b6c8:	 70 70 5f 61 72 65 61 5f         pp_area_
  11b6d0:	 68 65 61 64 2f 56 4d 00         head/VM.
  11b6d8:	 3c 45 72 72 6f 72 3e 20         <Error> 
  11b6e0:	 5b 6e 6f 72 6d 61 6c 5d         [normal]
  11b6e8:	 41 53 53 45 52 54 3a 20         ASSERT: 
  11b6f0:	 21 65 72 72 20 66 69 69         !err fii
  11b6f8:	 20 76 66 73 20 6f 70 65          vfs ope
  11b700:	 6e 62 79 70 61 74 68 20         nbypath 
  11b708:	 3a 20 30 78 25 78 0a 0d         : 0x%x..
  11b710:	 0a 00 3c 45 72 72 6f 72         ..<Error
  11b718:	 3e 20 5b 6e 6f 72 6d 61         > [norma
  11b720:	 6c 5d 41 53 53 45 52 54         l]ASSERT
  11b728:	 3a 20 21 65 72 72 20 66         : !err f
  11b730:	 69 69 20 76 66 73 20 69         ii vfs i
  11b738:	 6f 63 74 6c 20 3a 20 30         octl : 0
  11b740:	 78 25 78 0a 0d 0a 00 5b         x%x....[
  11b748:	 49 6e 66 6f 5d 20 5b 6e         Info] [n
  11b750:	 6f 72 6d 61 6c 5d 66 69         ormal]fi
  11b758:	 6c 65 20 73 69 7a 65 20         le size 
  11b760:	 3a 20 30 78 25 78 0a 66         : 0x%x.f
  11b768:	 69 6c 65 20 73 63 6c 75         ile sclu
  11b770:	 73 74 20 3a 20 30 78 25         st : 0x%
  11b778:	 78 0a 0d 0a 00 5b 49 6e         x....[In
  11b780:	 66 6f 5d 20 5b 6e 6f 72         fo] [nor
  11b788:	 6d 61 6c 5d 62 6f 6f 74         mal]boot
  11b790:	 20 69 6e 66 6f 20 30 78          info 0x
  11b798:	 25 78 0a 0d 0a 00 2f 61         %x..../a
  11b7a0:	 70 70 5f 61 72 65 61 5f         pp_area_
  11b7a8:	 68 65 61 64 2f 45 45 50         head/EEP
  11b7b0:	 52 4f 4d 00 5b 49 6e 66         ROM.[Inf
  11b7b8:	 6f 5d 20 5b 6e 6f 72 6d         o] [norm
  11b7c0:	 61 6c 5d 45 45 50 52 4f         al]EEPRO
  11b7c8:	 4d 20 73 69 7a 65 20 3a         M size :
  11b7d0:	 20 30 78 25 78 0a 45 45          0x%x.EE
  11b7d8:	 50 52 4f 4d 20 73 63 6c         PROM scl
  11b7e0:	 75 73 74 20 3a 20 30 78         ust : 0x
  11b7e8:	 25 78 0a 0d 0a 00 5b 49         %x....[I
  11b7f0:	 6e 66 6f 5d 20 5b 6d 61         nfo] [ma
  11b7f8:	 69 6e 5d 2d 2d 2d 2d 2d         in]-----
  11b800:	 2d 2d 2d 2d 73 68 35 78         ----sh5x
  11b808:	 20 61 70 70 73 2d 2d 2d          apps---
  11b810:	 2d 2d 2d 2d 2d 2d 2d 2d         --------
  11b818:	 2d 20 0a 0d 0a 00 5b 49         - ....[I
  11b820:	 6e 66 6f 5d 20 5b 63 6f         nfo] [co
  11b828:	 6d 6d 5f 6d 73 67 5d 76         mm_msg]v
  11b830:	 6f 6c 3a 25 64 20 0a 0d         ol:%d ..
  11b838:	 0a 00 5b 49 6e 66 6f 5d         ..[Info]
  11b840:	 20 5b 63 6f 6d 6d 5f 6d          [comm_m
  11b848:	 73 67 5d 4d 53 47 5f 4e         sg]MSG_N
  11b850:	 45 58 54 5f 57 4f 52 4b         EXT_WORK
  11b858:	 4d 4f 44 45 0a 0d 0a 00         MODE....
  11b860:	 5b 49 6e 66 6f 5d 20 5b         [Info] [
  11b868:	 63 6f 6d 6d 5f 6d 73 67         comm_msg
  11b870:	 5d 4d 53 47 5f 50 4f 57         ]MSG_POW
  11b878:	 45 52 5f 4f 46 46 0a 0d         ER_OFF..
  11b880:	 0a 00 5b 49 6e 66 6f 5d         ..[Info]
  11b888:	 20 5b 64 65 76 5f 61 70          [dev_ap
  11b890:	 70 5d 63 6c 6f 73 65 5f         p]close_
  11b898:	 64 65 76 69 63 65 20 46         device F
  11b8a0:	 41 49 4c 0a 0d 0a 00 5b         AIL....[
  11b8a8:	 49 6e 66 6f 5d 20 5b 6d         Info] [m
  11b8b0:	 69 64 69 5f 64 65 63 5d         idi_dec]
  11b8b8:	 64 65 76 69 63 65 20 6f         device o
  11b8c0:	 70 65 6e 20 6e 75 6c 6c         pen null
  11b8c8:	 21 0a 0d 0a 00 73 79 64         !....syd
  11b8d0:	 66 69 6c 65 00 5b 49 6e         file.[In
  11b8d8:	 66 6f 5d 20 5b 6d 69 64         fo] [mid
  11b8e0:	 69 5f 64 65 63 5d 76 66         i_dec]vf
  11b8e8:	 73 5f 6d 6f 75 6e 74 20         s_mount 
  11b8f0:	 65 72 72 3a 30 78 25 78         err:0x%x
  11b8f8:	 0a 0d 0a 00 3c 45 72 72         ....<Err
  11b900:	 6f 72 3e 20 5b 6d 69 64         or> [mid
  11b908:	 69 5f 64 65 63 5d 76 66         i_dec]vf
  11b910:	 73 5f 6f 70 65 6e 62 79         s_openby
  11b918:	 70 61 74 68 20 65 72 72         path err
  11b920:	 3a 30 78 25 78 0a 0d 0a         :0x%x...
  11b928:	 00 3c 45 72 72 6f 72 3e         .<Error>
  11b930:	 20 5b 6d 69 64 69 5f 64          [midi_d
  11b938:	 65 63 5d 76 66 73 5f 6f         ec]vfs_o
  11b940:	 70 65 6e 62 79 69 6e 64         penbyind
  11b948:	 65 78 20 65 72 72 3a 30         ex err:0
  11b950:	 78 25 78 20 69 64 78 3a         x%x idx:
  11b958:	 25 64 0a 0d 0a 00 5b 49         %d....[I
  11b960:	 6e 66 6f 5d 20 5b 6d 69         nfo] [mi
  11b968:	 64 69 5f 64 65 63 5d 64         di_dec]d
  11b970:	 65 76 3a 30 78 25 78 20         ev:0x%x 
  11b978:	 66 69 6e 64 65 78 3a 25         findex:%
  11b980:	 64 20 66 74 6f 74 61 6c         d ftotal
  11b988:	 3a 25 64 20 6c 6f 6f 70         :%d loop
  11b990:	 3a 25 64 0a 0d 0a 00 5b         :%d....[
  11b998:	 49 6e 66 6f 5d 20 5b 6d         Info] [m
  11b9a0:	 69 64 69 5f 64 65 63 5d         idi_dec]
  11b9a8:	 70 6c 61 79 5f 6e 65 78         play_nex
  11b9b0:	 74 5f 66 69 6c 65 20 46         t_file F
  11b9b8:	 41 49 4c 21 2c 20 65 72         AIL!, er
  11b9c0:	 72 3a 30 78 25 78 20 72         r:0x%x r
  11b9c8:	 65 74 72 79 3a 25 64 0a         etry:%d.
  11b9d0:	 0d 0a 00 5b 49 6e 66 6f         ...[Info
  11b9d8:	 5d 20 5b 6e 6f 72 6d 61         ] [norma
  11b9e0:	 6c 5d 74 6f 79 20 69 64         l]toy id
  11b9e8:	 6c 65 20 6d 6f 64 65 21         le mode!
  11b9f0:	 0a 0d 0a 00 5b 49 6e 66         ....[Inf
  11b9f8:	 6f 5d 20 5b 61 75 78 5d         o] [aux]
  11ba00:	 64 69 67 69 74 61 6c 20         digital 
  11ba08:	 6c 69 6e 65 69 6e 20 69         linein i
  11ba10:	 6e 69 74 21 0a 0d 0a 00         nit!....
  11ba18:	 5b 49 6e 66 6f 5d 20 5b         [Info] [
  11ba20:	 61 75 78 5d 67 65 74 20         aux]get 
  11ba28:	 6d 73 67 20 65 72 72 20         msg err 
  11ba30:	 30 78 25 78 0a 0d 0a 00         0x%x....
  11ba38:	 5b 49 6e 66 6f 5d 20 5b         [Info] [
  11ba40:	 61 75 78 5d 4d 55 54 45         aux]MUTE
  11ba48:	 0a 0d 0a 00 5b 49 6e 66         ....[Inf
  11ba50:	 6f 5d 20 5b 61 75 78 5d         o] [aux]
  11ba58:	 55 4e 4d 55 54 45 0a 0d         UNMUTE..
  11ba60:	 0a 00 5b 49 6e 66 6f 5d         ..[Info]
  11ba68:	 20 5b 61 75 78 5d 20 4a          [aux] J
  11ba70:	 4c 5f 41 44 44 41 2d 3e         L_ADDA->
  11ba78:	 44 41 43 5f 43 4f 4e 30         DAC_CON0
  11ba80:	 20 20 20 20 30 78 25 78             0x%x
  11ba88:	 3b 0d 0a 00 5b 49 6e 66         ;...[Inf
  11ba90:	 6f 5d 20 5b 61 75 78 5d         o] [aux]
  11ba98:	 20 4a 4c 5f 41 44 44 41          JL_ADDA
  11baa0:	 2d 3e 44 41 43 5f 43 4f         ->DAC_CO
  11baa8:	 4e 31 20 20 20 20 30 78         N1    0x
  11bab0:	 25 78 3b 0d 0a 00 5b 49         %x;...[I
  11bab8:	 6e 66 6f 5d 20 5b 61 75         nfo] [au
  11bac0:	 78 5d 20 4a 4c 5f 41 44         x] JL_AD
  11bac8:	 44 41 2d 3e 44 41 43 5f         DA->DAC_
  11bad0:	 54 52 4d 20 20 20 20 20         TRM     
  11bad8:	 30 78 25 78 3b 0d 0a 00         0x%x;...
  11bae0:	 5b 49 6e 66 6f 5d 20 5b         [Info] [
  11bae8:	 61 75 78 5d 20 4a 4c 5f         aux] JL_
  11baf0:	 41 44 44 41 2d 3e 44 41         ADDA->DA
  11baf8:	 43 5f 41 44 52 20 20 20         C_ADR   
  11bb00:	 20 20 30 78 25 78 3b 0d           0x%x;.
  11bb08:	 0a 00 5b 49 6e 66 6f 5d         ..[Info]
  11bb10:	 20 5b 61 75 78 5d 20 4a          [aux] J
  11bb18:	 4c 5f 41 44 44 41 2d 3e         L_ADDA->
  11bb20:	 44 41 43 5f 4c 45 4e 20         DAC_LEN 
  11bb28:	 20 20 20 20 30 78 25 78             0x%x
  11bb30:	 3b 0d 0a 00 5b 49 6e 66         ;...[Inf
  11bb38:	 6f 5d 20 5b 61 75 78 5d         o] [aux]
  11bb40:	 20 4a 4c 5f 41 44 44 41          JL_ADDA
  11bb48:	 2d 3e 44 41 43 5f 43 4f         ->DAC_CO
  11bb50:	 50 20 20 20 20 20 30 78         P     0x
  11bb58:	 25 78 3b 0d 0a 00 5b 49         %x;...[I
  11bb60:	 6e 66 6f 5d 20 5b 61 75         nfo] [au
  11bb68:	 78 5d 20 4a 4c 5f 41 44         x] JL_AD
  11bb70:	 44 41 2d 3e 44 41 43 5f         DA->DAC_
  11bb78:	 44 54 42 20 20 20 20 20         DTB     
  11bb80:	 30 78 25 78 3b 0d 0a 00         0x%x;...
  11bb88:	 5b 49 6e 66 6f 5d 20 5b         [Info] [
  11bb90:	 61 75 78 5d 20 4a 4c 5f         aux] JL_
  11bb98:	 41 44 44 41 2d 3e 41 44         ADDA->AD
  11bba0:	 43 5f 43 4f 4e 20 20 20         C_CON   
  11bba8:	 20 20 30 78 25 78 3b 0d           0x%x;.
  11bbb0:	 0a 00 5b 49 6e 66 6f 5d         ..[Info]
  11bbb8:	 20 5b 61 75 78 5d 20 4a          [aux] J
  11bbc0:	 4c 5f 41 44 44 41 2d 3e         L_ADDA->
  11bbc8:	 41 44 43 5f 41 44 52 20         ADC_ADR 
  11bbd0:	 20 20 20 20 30 78 25 78             0x%x
  11bbd8:	 3b 0d 0a 00 5b 49 6e 66         ;...[Inf
  11bbe0:	 6f 5d 20 5b 61 75 78 5d         o] [aux]
  11bbe8:	 20 4a 4c 5f 41 44 44 41          JL_ADDA
  11bbf0:	 2d 3e 41 44 43 5f 4c 45         ->ADC_LE
  11bbf8:	 4e 20 20 20 20 20 30 78         N     0x
  11bc00:	 25 78 3b 0d 0a 00 5b 49         %x;...[I
  11bc08:	 6e 66 6f 5d 20 5b 61 75         nfo] [au
  11bc10:	 78 5d 20 4a 4c 5f 41 44         x] JL_AD
  11bc18:	 44 41 2d 3e 52 41 4d 5f         DA->RAM_
  11bc20:	 53 50 44 20 20 20 20 20         SPD     
  11bc28:	 30 78 25 78 3b 0d 0a 00         0x%x;...
  11bc30:	 5b 49 6e 66 6f 5d 20 5b         [Info] [
  11bc38:	 61 75 78 5d 20 4a 4c 5f         aux] JL_
  11bc40:	 41 44 44 41 2d 3e 44 41         ADDA->DA
  11bc48:	 41 5f 43 4f 4e 30 20 20         A_CON0  
  11bc50:	 20 20 30 78 25 78 3b 0d           0x%x;.
  11bc58:	 0a 00 5b 49 6e 66 6f 5d         ..[Info]
  11bc60:	 20 5b 61 75 78 5d 20 4a          [aux] J
  11bc68:	 4c 5f 41 44 44 41 2d 3e         L_ADDA->
  11bc70:	 44 41 41 5f 43 4f 4e 31         DAA_CON1
  11bc78:	 20 20 20 20 30 78 25 78             0x%x
  11bc80:	 3b 0d 0a 00 5b 49 6e 66         ;...[Inf
  11bc88:	 6f 5d 20 5b 61 75 78 5d         o] [aux]
  11bc90:	 20 4a 4c 5f 41 44 44 41          JL_ADDA
  11bc98:	 2d 3e 41 44 41 5f 43 4f         ->ADA_CO
  11bca0:	 4e 30 20 20 20 20 30 78         N0    0x
  11bca8:	 25 78 3b 0d 0a 00 5b 49         %x;...[I
  11bcb0:	 6e 66 6f 5d 20 5b 61 75         nfo] [au
  11bcb8:	 78 5d 20 4a 4c 5f 41 44         x] JL_AD
  11bcc0:	 44 41 2d 3e 41 44 41 5f         DA->ADA_
  11bcc8:	 43 4f 4e 31 20 20 20 20         CON1    
  11bcd0:	 30 78 25 78 3b 0d 0a 00         0x%x;...
  11bcd8:	 5b 49 6e 66 6f 5d 20 5b         [Info] [
  11bce0:	 61 75 78 5d 20 4a 4c 5f         aux] JL_
  11bce8:	 41 44 44 41 2d 3e 41 44         ADDA->AD
  11bcf0:	 41 5f 43 4f 4e 32 20 20         A_CON2  
  11bcf8:	 20 20 30 78 25 78 3b 0a           0x%x;.
  11bd00:	 0d 0a 00 5b 49 6e 66 6f         ...[Info
  11bd08:	 5d 20 5b 6e 6f 72 6d 61         ] [norma
  11bd10:	 6c 5d 76 6f 69 63 65 20         l]voice 
  11bd18:	 74 6f 79 20 61 70 70 20         toy app 
  11bd20:	 72 75 6e 21 0a 0d 0a 00         run!....
  11bd28:	 5b 49 6e 66 6f 5d 20 5b         [Info] [
  11bd30:	 6e 6f 72 6d 61 6c 5d 2d         normal]-
  11bd38:	 2d 2d 2d 64 65 76 69 63         ---devic
  11bd40:	 65 20 75 70 64 61 74 65         e update
  11bd48:	 20 65 6e 64 2d 2d 2d 2d          end----
  11bd50:	 0a 0d 0a 00 5b 49 6e 66         ....[Inf
  11bd58:	 6f 5d 20 5b 6e 6f 72 6d         o] [norm
  11bd60:	 61 6c 5d 74 6f 79 20 6d         al]toy m
  11bd68:	 69 64 69 20 6d 6f 64 65         idi mode
  11bd70:	 21 0a 0d 0a 00 5b 49 6e         !....[In
  11bd78:	 66 6f 5d 20 5b 6e 6f 72         fo] [nor
  11bd80:	 6d 61 6c 5d 67 65 74 20         mal]get 
  11bd88:	 6d 73 67 20 65 72 72 20         msg err 
  11bd90:	 30 78 25 78 0a 0d 0a 00         0x%x....
  11bd98:	 5b 49 6e 66 6f 5d 20 5b         [Info] [
  11bda0:	 6e 6f 72 6d 61 6c 5d 4d         normal]M
  11bda8:	 53 47 5f 4d 49 44 49 5f         SG_MIDI_
  11bdb0:	 4d 4f 44 45 5f 53 57 49         MODE_SWI
  11bdb8:	 54 43 48 0a 0d 0a 00 5b         TCH....[
  11bdc0:	 49 6e 66 6f 5d 20 5b 6e         Info] [n
  11bdc8:	 6f 72 6d 61 6c 5d 61 0d         ormal]a.
  11bdd0:	 0a 00 5b 49 6e 66 6f 5d         ..[Info]
  11bdd8:	 20 5b 6e 6f 72 6d 61 6c          [normal
  11bde0:	 5d 4d 53 47 5f 50 4c 41         ]MSG_PLA
  11bde8:	 59 5f 46 49 4c 45 31 0a         Y_FILE1.
  11bdf0:	 0d 0a 00 5b 49 6e 66 6f         ...[Info
  11bdf8:	 5d 20 5b 6e 6f 72 6d 61         ] [norma
  11be00:	 6c 5d 4d 53 47 5f 50 50         l]MSG_PP
  11be08:	 0a 0d 0a 00 5b 49 6e 66         ....[Inf
  11be10:	 6f 5d 20 5b 6e 6f 72 6d         o] [norm
  11be18:	 61 6c 5d 4d 53 47 5f 50         al]MSG_P
  11be20:	 52 45 56 5f 46 49 4c 45         REV_FILE
  11be28:	 0a 0d 0a 00 5b 49 6e 66         ....[Inf
  11be30:	 6f 5d 20 5b 6e 6f 72 6d         o] [norm
  11be38:	 61 6c 5d 4d 53 47 5f 4e         al]MSG_N
  11be40:	 45 58 54 5f 46 49 4c 45         EXT_FILE
  11be48:	 0a 0d 0a 00 5b 49 6e 66         ....[Inf
  11be50:	 6f 5d 20 5b 6e 6f 72 6d         o] [norm
  11be58:	 61 6c 5d 46 49 4c 45 20         al]FILE 
  11be60:	 45 4e 44 20 4f 52 20 45         END OR E
  11be68:	 52 52 0a 0d 0a 00 5b 49         RR....[I
  11be70:	 6e 66 6f 5d 20 5b 6e 6f         nfo] [no
  11be78:	 72 6d 61 6c 5d 4d 53 47         rmal]MSG
  11be80:	 5f 41 5f 50 4c 41 59 0a         _A_PLAY.
  11be88:	 0d 0a 00 5b 49 6e 66 6f         ...[Info
  11be90:	 5d 20 5b 6e 6f 72 6d 61         ] [norma
  11be98:	 6c 5d 41 20 46 49 4c 45         l]A FILE
  11bea0:	 20 45 4e 44 20 4f 52 20          END OR 
  11bea8:	 45 52 52 0a 0d 0a 00 5b         ERR....[
  11beb0:	 49 6e 66 6f 5d 20 5b 6e         Info] [n
  11beb8:	 6f 72 6d 61 6c 5d 2d 6c         ormal]-l
  11bec0:	 6f 6f 70 0a 0d 0a 00 2f         oop..../
  11bec8:	 64 69 72 5f 6d 69 64 69         dir_midi
  11bed0:	 00 5b 49 6e 66 6f 5d 20         .[Info] 
  11bed8:	 5b 6d 69 64 69 5f 64 65         [midi_de
  11bee0:	 63 5d 74 6f 79 20 6d 69         c]toy mi
  11bee8:	 64 69 20 6b 65 79 62 6f         di keybo
  11bef0:	 61 72 64 20 6d 6f 64 65         ard mode
  11bef8:	 21 0a 0d 0a 00 5b 49 6e         !....[In
  11bf00:	 66 6f 5d 20 5b 6d 69 64         fo] [mid
  11bf08:	 69 5f 64 65 63 5d 6d 69         i_dec]mi
  11bf10:	 64 69 5f 6b 65 79 62 6f         di_keybo
  11bf18:	 61 72 64 20 69 6e 69 74         ard init
  11bf20:	 20 66 61 69 6c 21 0a 0d          fail!..
  11bf28:	 0a 00 5b 49 6e 66 6f 5d         ..[Info]
  11bf30:	 20 5b 6d 69 64 69 5f 64          [midi_d
  11bf38:	 65 63 5d 67 65 74 20 6d         ec]get m
  11bf40:	 73 67 20 65 72 72 20 30         sg err 0
  11bf48:	 78 25 78 0a 0d 0a 00 5b         x%x....[
  11bf50:	 49 6e 66 6f 5d 20 5b 6d         Info] [m
  11bf58:	 69 64 69 5f 64 65 63 5d         idi_dec]
  11bf60:	 44 6f 20 31 0d 0a 00 5b         Do 1...[
  11bf68:	 49 6e 66 6f 5d 20 5b 6d         Info] [m
  11bf70:	 69 64 69 5f 64 65 63 5d         idi_dec]
  11bf78:	 52 65 20 32 0d 0a 00 5b         Re 2...[
  11bf80:	 49 6e 66 6f 5d 20 5b 6d         Info] [m
  11bf88:	 69 64 69 5f 64 65 63 5d         idi_dec]
  11bf90:	 4d 69 20 33 0d 0a 00 5b         Mi 3...[
  11bf98:	 49 6e 66 6f 5d 20 5b 6d         Info] [m
  11bfa0:	 69 64 69 5f 64 65 63 5d         idi_dec]
  11bfa8:	 46 61 20 34 0d 0a 00 5b         Fa 4...[
  11bfb0:	 49 6e 66 6f 5d 20 5b 6d         Info] [m
  11bfb8:	 69 64 69 5f 64 65 63 5d         idi_dec]
  11bfc0:	 50 69 74 63 68 20 42 65         Pitch Be
  11bfc8:	 6e 64 20 3a 20 25 64 0a         nd : %d.
  11bfd0:	 0d 0a 00 5b 49 6e 66 6f         ...[Info
  11bfd8:	 5d 20 5b 6d 69 64 69 5f         ] [midi_
  11bfe0:	 64 65 63 5d 43 68 61 6e         dec]Chan
  11bfe8:	 6e 61 6c 3a 25 64 2c 20         nal:%d, 
  11bff0:	 50 72 6f 67 3a 25 64 0a         Prog:%d.
  11bff8:	 0d 0a 00 5b 49 6e 66 6f         ...[Info
  11c000:	 5d 20 5b 6d 69 64 69 5f         ] [midi_
  11c008:	 64 65 63 5d 4f 46 46 20         dec]OFF 
  11c010:	 25 64 20 25 64 0a 0d 0a         %d %d...
  11c018:	 00 5b 49 6e 66 6f 5d 20         .[Info] 
  11c020:	 5b 6d 69 64 69 5f 64 65         [midi_de
  11c028:	 63 5d 4f 4e 20 25 64 20         c]ON %d 
  11c030:	 25 64 0a 0d 0a 00 5b 49         %d....[I
  11c038:	 6e 66 6f 5d 20 5b 74 6f         nfo] [to
  11c040:	 79 5f 6d 75 73 69 63 5d         y_music]
  11c048:	 67 65 74 20 6d 73 67 20         get msg 
  11c050:	 65 72 72 20 30 78 25 78         err 0x%x
  11c058:	 0a 0d 0a 00 5b 49 6e 66         ....[Inf
  11c060:	 6f 5d 20 5b 74 6f 79 5f         o] [toy_
  11c068:	 6d 75 73 69 63 5d 4d 53         music]MS
  11c070:	 47 5f 50 4c 41 59 5f 46         G_PLAY_F
  11c078:	 49 4c 45 31 0a 0d 0a 00         ILE1....
  11c080:	 5b 49 6e 66 6f 5d 20 5b         [Info] [
  11c088:	 74 6f 79 5f 6d 75 73 69         toy_musi
  11c090:	 63 5d 4d 53 47 5f 50 50         c]MSG_PP
  11c098:	 0a 0d 0a 00 5b 49 6e 66         ....[Inf
  11c0a0:	 6f 5d 20 5b 74 6f 79 5f         o] [toy_
  11c0a8:	 6d 75 73 69 63 5d 4d 53         music]MS
  11c0b0:	 47 5f 50 52 45 56 5f 46         G_PREV_F
  11c0b8:	 49 4c 45 0a 0d 0a 00 5b         ILE....[
  11c0c0:	 49 6e 66 6f 5d 20 5b 74         Info] [t
  11c0c8:	 6f 79 5f 6d 75 73 69 63         oy_music
  11c0d0:	 5d 4d 53 47 5f 4e 45 58         ]MSG_NEX
  11c0d8:	 54 5f 46 49 4c 45 0a 0d         T_FILE..
  11c0e0:	 0a 00 5b 49 6e 66 6f 5d         ..[Info]
  11c0e8:	 20 5b 74 6f 79 5f 6d 75          [toy_mu
  11c0f0:	 73 69 63 5d 4d 53 47 5f         sic]MSG_
  11c0f8:	 4e 45 58 54 5f 44 49 52         NEXT_DIR
  11c100:	 0a 0d 0a 00 5b 49 6e 66         ....[Inf
  11c108:	 6f 5d 20 5b 74 6f 79 5f         o] [toy_
  11c110:	 6d 75 73 69 63 5d 46 49         music]FI
  11c118:	 4c 45 20 45 4e 44 20 4f         LE END O
  11c120:	 52 20 45 52 52 0a 0d 0a         R ERR...
  11c128:	 00 5b 49 6e 66 6f 5d 20         .[Info] 
  11c130:	 5b 74 6f 79 5f 6d 75 73         [toy_mus
  11c138:	 69 63 5d 4d 53 47 5f 41         ic]MSG_A
  11c140:	 5f 50 4c 41 59 0a 0d 0a         _PLAY...
  11c148:	 00 5b 49 6e 66 6f 5d 20         .[Info] 
  11c150:	 5b 74 6f 79 5f 6d 75 73         [toy_mus
  11c158:	 69 63 5d 41 20 46 49 4c         ic]A FIL
  11c160:	 45 20 45 4e 44 20 4f 52         E END OR
  11c168:	 20 45 52 52 0a 0d 0a 00          ERR....
  11c170:	 5b 49 6e 66 6f 5d 20 5b         [Info] [
  11c178:	 74 6f 79 5f 6d 75 73 69         toy_musi
  11c180:	 63 5d 2d 6c 6f 6f 70 0a         c]-loop.
  11c188:	 0d 0a 00 2f 64 69 72 5f         .../dir_
  11c190:	 61 00 2f 64 69 72 5f 73         a./dir_s
  11c198:	 6f 6e 67 00 2f 64 69 72         ong./dir
  11c1a0:	 5f 65 6e 67 00 2f 64 69         _eng./di
  11c1a8:	 72 5f 70 6f 65 74 72 79         r_poetry
  11c1b0:	 00 2f 64 69 72 5f 73 74         ./dir_st
  11c1b8:	 6f 72 79 00 2f 64 69 72         ory./dir
  11c1c0:	 5f 62 69 6e 5f 66 31 78         _bin_f1x
  11c1c8:	 00 5b 49 6e 66 6f 5d 20         .[Info] 
  11c1d0:	 5b 72 65 63 5d 64 65 76         [rec]dev
  11c1d8:	 69 63 65 5f 6f 70 65 6e         ice_open
  11c1e0:	 20 6e 75 6c 6c 21 0a 0d          null!..
  11c1e8:	 0a 00 5b 49 6e 66 6f 5d         ..[Info]
  11c1f0:	 20 5b 72 65 63 5d 76 66          [rec]vf
  11c1f8:	 73 5f 6d 6f 75 6e 74 20         s_mount 
  11c200:	 65 72 72 3a 30 78 25 78         err:0x%x
  11c208:	 0a 0d 0a 00 5b 49 6e 66         ....[Inf
  11c210:	 6f 5d 20 5b 72 65 63 5d         o] [rec]
  11c218:	 76 66 73 5f 63 72 65 61         vfs_crea
  11c220:	 74 65 66 69 6c 65 20 65         tefile e
  11c228:	 72 72 3a 30 78 25 78 0a         rr:0x%x.
  11c230:	 0d 0a 00 5b 49 6e 66 6f         ...[Info
  11c238:	 5d 20 5b 72 65 63 5d 52         ] [rec]R
  11c240:	 45 43 20 46 49 4c 45 20         EC FILE 
  11c248:	 49 4e 44 45 58 20 3a 20         INDEX : 
  11c250:	 25 64 0a 0d 0a 00 5b 49         %d....[I
  11c258:	 6e 66 6f 5d 20 5b 72 65         nfo] [re
  11c260:	 63 5d 76 66 73 5f 69 6f         c]vfs_io
  11c268:	 63 74 6c 20 65 72 72 3a         ctl err:
  11c270:	 30 78 25 78 0a 0d 0a 00         0x%x....
  11c278:	 5b 49 6e 66 6f 5d 20 5b         [Info] [
  11c280:	 72 65 63 5d 67 65 74 20         rec]get 
  11c288:	 6d 73 67 20 65 72 72 20         msg err 
  11c290:	 30 78 25 78 0a 0d 0a 00         0x%x....
  11c298:	 5b 49 6e 66 6f 5d 20 5b         [Info] [
  11c2a0:	 72 65 63 5d 20 61 75 64         rec] aud
  11c2a8:	 69 6f 20 61 64 63 20 69         io adc i
  11c2b0:	 6e 69 74 20 66 61 69 6c         nit fail
  11c2b8:	 20 3a 20 30 78 25 78 0a          : 0x%x.
  11c2c0:	 0d 0a 00 6e 6f 72 66 73         ...norfs
  11c2c8:	 00 5b 49 6e 66 6f 5d 20         .[Info] 
  11c2d0:	 5b 72 65 63 5d 76 66 73         [rec]vfs
  11c2d8:	 20 63 72 65 61 74 65 20          create 
  11c2e0:	 30 78 25 78 21 0a 0d 0a         0x%x!...
  11c2e8:	 00 5b 49 6e 66 6f 5d 20         .[Info] 
  11c2f0:	 5b 72 65 63 5d 64 65 76         [rec]dev
  11c2f8:	 3a 25 64 20 66 73 5f 6e         :%d fs_n
  11c300:	 61 6d 65 3a 25 73 0a 0d         ame:%s..
  11c308:	 0a 00 5b 49 6e 66 6f 5d         ..[Info]
  11c310:	 20 5b 72 65 63 5d 72 65          [rec]re
  11c318:	 63 6f 72 64 20 68 61 73         cord has
  11c320:	 6e 27 74 20 62 65 65 6e         n't been
  11c328:	 20 73 74 61 72 74 65 64          started
  11c330:	 21 0a 0d 0a 00 5b 49 6e         !....[In
  11c338:	 66 6f 5d 20 5b 72 65 63         fo] [rec
  11c340:	 5d 72 65 63 6f 72 64 20         ]record 
  11c348:	 66 69 6c 65 20 64 65 63         file dec
  11c350:	 6f 64 65 20 66 61 69 6c         ode fail
  11c358:	 21 0a 0d 0a 00 5b 49 6e         !....[In
  11c360:	 66 6f 5d 20 5b 72 65 63         fo] [rec
  11c368:	 5d 72 65 63 6f 72 64 20         ]record 
  11c370:	 6e 6f 72 6d 61 6c 20 6d         normal m
  11c378:	 6f 64 65 20 0a 0d 0a 00         ode ....
  11c380:	 5b 49 6e 66 6f 5d 20 5b         [Info] [
  11c388:	 72 65 63 5d 72 65 63 6f         rec]reco
  11c390:	 72 64 20 73 70 65 65 64         rd speed
  11c398:	 20 6d 6f 64 65 20 0a 0d          mode ..
  11c3a0:	 0a 00 5b 49 6e 66 6f 5d         ..[Info]
  11c3a8:	 20 5b 72 65 63 5d 4d 53          [rec]MS
  11c3b0:	 47 5f 57 46 49 4c 45 5f         G_WFILE_
  11c3b8:	 46 55 4c 4c 0a 0d 0a 00         FULL....
  11c3c0:	 5b 49 6e 66 6f 5d 20 5b         [Info] [
  11c3c8:	 6c 6f 77 5f 70 77 72 5d         low_pwr]
  11c3d0:	 76 66 73 5f 6d 6f 75 6e         vfs_moun
  11c3d8:	 74 20 65 72 72 20 3a 20         t err : 
  11c3e0:	 30 78 25 78 0a 0d 0a 00         0x%x....
  11c3e8:	 64 69 72 5f 6e 6f 74 69         dir_noti
  11c3f0:	 63 65 2f 70 6f 77 65 72         ce/power
  11c3f8:	 5f 6f 66 66 2e 66 31 61         _off.f1a
  11c400:	 00 5b 49 6e 66 6f 5d 20         .[Info] 
  11c408:	 5b 6c 6f 77 5f 70 77 72         [low_pwr
  11c410:	 5d 66 73 5f 6f 70 65 6e         ]fs_open
  11c418:	 62 79 70 61 74 68 20 65         bypath e
  11c420:	 72 72 20 3a 20 30 78 25         rr : 0x%
  11c428:	 78 0a 0d 0a 00 5b 49 6e         x....[In
  11c430:	 66 6f 5d 20 5b 6c 6f 77         fo] [low
  11c438:	 5f 70 77 72 5d 67 65 74         _pwr]get
  11c440:	 20 6d 73 67 20 65 72 72          msg err
  11c448:	 20 30 78 25 78 0a 0d 0a          0x%x...
  11c450:	 00 5b 49 6e 66 6f 5d 20         .[Info] 
  11c458:	 5b 74 6f 79 5f 73 70 6b         [toy_spk
  11c460:	 5d 67 65 74 20 6d 73 67         ]get msg
  11c468:	 20 65 72 72 20 30 78 25          err 0x%
  11c470:	 78 0a 0d 0a 00 5b 49 6e         x....[In
  11c478:	 66 6f 5d 20 5b 74 6f 79         fo] [toy
  11c480:	 5f 73 70 6b 5d 4d 55 54         _spk]MUT
  11c488:	 45 0a 0d 0a 00 5b 49 6e         E....[In
  11c490:	 66 6f 5d 20 5b 74 6f 79         fo] [toy
  11c498:	 5f 73 70 6b 5d 55 4e 4d         _spk]UNM
  11c4a0:	 55 54 45 0a 0d 0a 00 3c         UTE....<
  11c4a8:	 45 72 72 6f 72 3e 20 5b         Error> [
  11c4b0:	 76 6d 20 73 66 63 5d 41         vm sfc]A
  11c4b8:	 53 53 45 52 54 3a 20 5f         SSERT: _
  11c4c0:	 61 72 67 20 21 3d 20 4e         arg != N
  11c4c8:	 55 4c 4c 20 0d 0a 00 5b         ULL ...[
  11c4d0:	 49 6e 66 6f 5d 20 5b 76         Info] [v
  11c4d8:	 6d 20 73 66 63 5d 76 6d         m sfc]vm
  11c4e0:	 20 3a 20 30 78 25 78 20          : 0x%x 
  11c4e8:	 30 78 25 78 0a 0d 0a 00         0x%x....
  11c4f0:	 5b 49 6e 66 6f 5d 20 5b         [Info] [
  11c4f8:	 76 6d 20 73 66 63 5d 66         vm sfc]f
  11c500:	 6c 61 73 68 20 69 64 20         lash id 
  11c508:	 3a 20 30 78 25 78 0a 0d         : 0x%x..
  11c510:	 0a 00 5b 49 6e 66 6f 5d         ..[Info]
  11c518:	 20 5b 76 6d 20 73 66 63          [vm sfc
  11c520:	 5d 66 6c 61 73 68 20 73         ]flash s
  11c528:	 69 7a 65 20 3a 20 30 78         ize : 0x
  11c530:	 25 78 0a 0d 0a 00 5b 49         %x....[I
  11c538:	 6e 66 6f 5d 20 5b 76 6d         nfo] [vm
  11c540:	 20 73 66 63 5d 73 66 63          sfc]sfc
  11c548:	 20 72 65 61 64 20 25 64          read %d
  11c550:	 0a 0d 0a 00 5b 49 6e 66         ....[Inf
  11c558:	 6f 5d 20 5b 76 6d 20 73         o] [vm s
  11c560:	 66 63 5d 73 74 61 74 75         fc]statu
  11c568:	 73 5f 72 65 67 31 20 3d         s_reg1 =
  11c570:	 20 30 78 25 78 20 20 73          0x%x  s
  11c578:	 72 31 20 3d 20 30 78 25         r1 = 0x%
  11c580:	 78 20 20 20 73 74 61 74         x   stat
  11c588:	 75 73 5f 72 65 67 32 20         us_reg2 
  11c590:	 20 3d 20 30 78 25 78 20          = 0x%x 
  11c598:	 20 73 72 32 20 3d 20 30          sr2 = 0
  11c5a0:	 78 25 78 0a 0d 0a 00 5b         x%x....[
  11c5a8:	 49 6e 66 6f 5d 20 5b 76         Info] [v
  11c5b0:	 6d 20 73 66 63 5d 66 69         m sfc]fi
  11c5b8:	 6e 64 5f 69 6e 72 66 6c         nd_inrfl
  11c5c0:	 61 73 68 5f 77 70 20 61         ash_wp a
  11c5c8:	 72 67 20 73 75 63 63 21         rg succ!
  11c5d0:	 0a 0d 0a 00 5b 49 6e 66         ....[Inf
  11c5d8:	 6f 5d 20 5b 76 6d 20 73         o] [vm s
  11c5e0:	 66 63 5d 53 65 74 20 77         fc]Set w
  11c5e8:	 72 69 74 65 20 70 72 6f         rite pro
  11c5f0:	 74 65 63 74 20 73 75 63         tect suc
  11c5f8:	 63 2c 20 30 78 30 2d 3e         c, 0x0->
  11c600:	 30 78 25 78 21 0a 0d 0a         0x%x!...
  11c608:	 00 3c 45 72 72 6f 72 3e         .<Error>
  11c610:	 20 5b 76 6d 20 73 66 63          [vm sfc
  11c618:	 5d 53 65 74 20 77 72 69         ]Set wri
  11c620:	 74 65 20 70 72 6f 74 65         te prote
  11c628:	 63 74 20 66 61 69 6c 21         ct fail!
  11c630:	 0a 0d 0a 00 55 53 42 00         ....USB.
  11c638:	 3c 45 72 72 6f 72 3e 20         <Error> 
  11c640:	 5b 57 4b 55 50 5d 41 53         [WKUP]AS
  11c648:	 53 45 52 54 3a 20 6a 20         SERT: j 
  11c650:	 3c 20 41 52 52 41 59 5f         < ARRAY_
  11c658:	 53 49 5a 45 28 50 41 5f         SIZE(PA_
  11c660:	 76 61 6c 69 64 29 20 49         valid) I
  11c668:	 6e 76 61 6c 69 64 20 49         nvalid I
  11c670:	 2f 4f 20 3a 20 25 63 20         /O : %c 
  11c678:	 2d 20 25 64 0d 0a 00 3c         - %d...<
  11c680:	 45 72 72 6f 72 3e 20 5b         Error> [
  11c688:	 57 4b 55 50 5d 41 53 53         WKUP]ASS
  11c690:	 45 52 54 3a 20 6a 20 3c         ERT: j <
  11c698:	 20 41 52 52 41 59 5f 53          ARRAY_S
  11c6a0:	 49 5a 45 28 50 42 5f 76         IZE(PB_v
  11c6a8:	 61 6c 69 64 29 20 49 6e         alid) In
  11c6b0:	 76 61 6c 69 64 20 49 2f         valid I/
  11c6b8:	 4f 20 3a 20 25 63 20 2d         O : %c -
  11c6c0:	 20 25 64 0d 0a 00 3c 45          %d...<E
  11c6c8:	 72 72 6f 72 3e 20 5b 57         rror> [W
  11c6d0:	 4b 55 50 5d 41 53 53 45         KUP]ASSE
  11c6d8:	 52 54 3a 20 6a 20 3c 20         RT: j < 
  11c6e0:	 41 52 52 41 59 5f 53 49         ARRAY_SI
  11c6e8:	 5a 45 28 50 44 5f 76 61         ZE(PD_va
  11c6f0:	 6c 69 64 29 20 49 6e 76         lid) Inv
  11c6f8:	 61 6c 69 64 20 49 2f 4f         alid I/O
  11c700:	 20 3a 20 25 63 20 2d 20          : %c - 
  11c708:	 25 64 0d 0a 00 3c 45 72         %d...<Er
  11c710:	 72 6f 72 3e 20 5b 57 4b         ror> [WK
  11c718:	 55 50 5d 41 53 53 45 52         UP]ASSER
  11c720:	 54 3a 20 30 20 49 6e 76         T: 0 Inv
  11c728:	 61 6c 69 64 20 49 2f 4f         alid I/O
  11c730:	 20 3a 20 25 73 20 2d 20          : %s - 
  11c738:	 25 64 0d 0a 00 3c 45 72         %d...<Er
  11c740:	 72 6f 72 3e 20 5b 57 4b         ror> [WK
  11c748:	 55 50 5d 41 53 53 45 52         UP]ASSER
  11c750:	 54 3a 20 30 20 49 6e 76         T: 0 Inv
  11c758:	 61 6c 69 64 20 49 2f 4f         alid I/O
  11c760:	 20 3a 20 25 63 20 2d 20          : %c - 
  11c768:	 25 64 0d 0a 00 5b 49 6e         %d...[In
  11c770:	 66 6f 5d 20 5b 50 4d 55         fo] [PMU
  11c778:	 5d 6e 6f 20 70 6f 77 65         ]no powe
  11c780:	 72 20 6d 65 6d 21 21 21         r mem!!!
  11c788:	 0d 0a 00 42 54 20 4f 53         ...BT OS
  11c790:	 43 00 4c 52 43 00 3c 45         C.LRC.<E
  11c798:	 72 72 6f 72 3e 20 5b 50         rror> [P
  11c7a0:	 4d 55 5d 41 53 53 45 52         MU]ASSER
  11c7a8:	 54 3a 20 30 20 74 69 6d         T: 0 tim
  11c7b0:	 65 72 30 20 69 73 20 72         er0 is r
  11c7b8:	 75 6e 6e 69 6e 67 0d 0a         unning..
  11c7c0:	 00 5b 49 6e 66 6f 5d 20         .[Info] 
  11c7c8:	 5b 50 4d 55 5d 63 2d 50         [PMU]c-P
  11c7d0:	 52 44 20 3a 20 25 64 0d         RD : %d.
  11c7d8:	 0a 00 5b 49 6e 66 6f 5d         ..[Info]
  11c7e0:	 20 5b 50 4d 55 5d 63 2d          [PMU]c-
  11c7e8:	 52 43 56 20 3a 20 25 64         RCV : %d
  11c7f0:	 0d 0a 00 3c 45 72 72 6f         ...<Erro
  11c7f8:	 72 3e 20 5b 50 4d 55 5d         r> [PMU]
  11c800:	 41 53 53 45 52 54 3a 20         ASSERT: 
  11c808:	 5f 5f 74 68 69 73 2d 3e         __this->
  11c810:	 66 61 74 61 6c 5f 65 72         fatal_er
  11c818:	 72 6f 72 20 3d 3d 20 30         ror == 0
  11c820:	 20 52 65 63 6f 76 65 72          Recover
  11c828:	 20 54 69 6d 65 20 46 61          Time Fa
  11c830:	 74 61 6c 20 45 72 72 6f         tal Erro
  11c838:	 72 20 3d 20 30 78 25 78         r = 0x%x
  11c840:	 0d 0a 00 3c 45 72 72 6f         ...<Erro
  11c848:	 72 3e 20 5b 50 4d 55 5d         r> [PMU]
  11c850:	 41 53 53 45 52 54 3a 20         ASSERT: 
  11c858:	 70 6f 77 65 72 20 21 3d         power !=
  11c860:	 20 4e 55 4c 4c 20 73 79          NULL sy
  11c868:	 73 20 67 65 74 20 70 6f         s get po
  11c870:	 77 65 72 20 65 72 72 6f         wer erro
  11c878:	 72 0d 0a 00 5b 49 6e 66         r...[Inf
  11c880:	 6f 5d 20 5b 50 4d 55 5d         o] [PMU]
  11c888:	 2d 2d 45 6e 74 65 72 20         --Enter 
  11c890:	 50 6f 77 65 72 20 6f 66         Power of
  11c898:	 66 28 53 6f 66 74 29 0d         f(Soft).
  11c8a0:	 0a 00 5b 49 6e 66 6f 5d         ..[Info]
  11c8a8:	 20 5b 50 4d 55 5d 56 44          [PMU]VD
  11c8b0:	 44 49 4f 20 4b 45 45 50         DIO KEEP
  11c8b8:	 20 3a 20 25 64 0d 0a 00          : %d...
  11c8c0:	 5b 49 6e 66 6f 5d 20 5b         [Info] [
  11c8c8:	 50 4d 55 5d 56 44 43 31         PMU]VDC1
  11c8d0:	 33 20 4b 45 45 50 20 3a         3 KEEP :
  11c8d8:	 20 25 64 0d 0a 00 5b 49          %d...[I
  11c8e0:	 6e 66 6f 5d 20 5b 50 4d         nfo] [PM
  11c8e8:	 55 5d 53 50 49 20 62 6f         U]SPI bo
  11c8f0:	 6f 74 20 70 6f 72 74 20         ot port 
  11c8f8:	 3a 20 30 78 25 78 0d 0a         : 0x%x..
  11c900:	 00 5b 49 6e 66 6f 5d 20         .[Info] 
  11c908:	 5b 50 4d 55 5d 50 4f 57         [PMU]POW
  11c910:	 45 52 5f 4f 53 43 5f 49         ER_OSC_I
  11c918:	 4e 46 4f 3a 20 25 73 20         NFO: %s 
  11c920:	 2d 20 25 30 38 64 0d 0a         - %08d..
  11c928:	 00 5b 49 6e 66 6f 5d 20         .[Info] 
  11c930:	 5b 50 4d 55 5d 44 65 6c         [PMU]Del
  11c938:	 61 79 20 6e 20 2a 20 75         ay n * u
  11c940:	 53 3a 20 25 30 38 64 20         S: %08d 
  11c948:	 2f 20 25 30 38 64 0d 0a         / %08d..
  11c950:	 00 5b 49 6e 66 6f 5d 20         .[Info] 
  11c958:	 5b 50 4d 55 5d 50 72 65         [PMU]Pre
  11c960:	 70 61 72 65 20 3a 20 25         pare : %
  11c968:	 64 28 75 73 29 20 2f 20         d(us) / 
  11c970:	 52 65 63 6f 76 65 72 20         Recover 
  11c978:	 25 64 28 75 73 29 20 2f         %d(us) /
  11c980:	 20 25 64 28 75 73 29 0d          %d(us).
  11c988:	 0a 00 5b 49 6e 66 6f 5d         ..[Info]
  11c990:	 20 5b 50 4d 55 5d 4c 6f          [PMU]Lo
  11c998:	 77 20 70 6f 77 65 72 20         w power 
  11c9a0:	 54 70 72 70 20 3a 20 30         Tprp : 0
  11c9a8:	 78 25 78 20 2f 20 54 63         x%x / Tc
  11c9b0:	 6b 65 20 3a 20 30 78 25         ke : 0x%
  11c9b8:	 78 0d 0a 00 5b 49 6e 66         x...[Inf
  11c9c0:	 6f 5d 20 5b 50 4d 55 5d         o] [PMU]
  11c9c8:	 4c 6f 77 20 70 6f 77 65         Low powe
  11c9d0:	 72 20 52 65 73 65 72 76         r Reserv
  11c9d8:	 65 20 74 69 6d 65 3a 20         e time: 
  11c9e0:	 30 78 25 78 20 28 74 69         0x%x (ti
  11c9e8:	 63 6b 29 20 2f 20 25 64         ck) / %d
  11c9f0:	 28 75 73 29 0d 0a 00 5b         (us)...[
  11c9f8:	 49 6e 66 6f 5d 20 5b 50         Info] [P
  11ca00:	 4d 55 5d 70 6f 77 65 72         MU]power
  11ca08:	 20 56 44 44 49 4f 20 3a          VDDIO :
  11ca10:	 20 25 73 20 2f 20 25 73          %s / %s
  11ca18:	 0d 0a 00 56 44 44 49 4f         ...VDDIO
  11ca20:	 57 5f 56 4f 4c 5f 32 31         W_VOL_21
  11ca28:	 56 00 56 44 44 49 4f 57         V.VDDIOW
  11ca30:	 5f 56 4f 4c 5f 32 34 56         _VOL_24V
  11ca38:	 00 56 44 44 49 4f 57 5f         .VDDIOW_
  11ca40:	 56 4f 4c 5f 32 38 56 00         VOL_28V.
  11ca48:	 56 44 44 49 4f 57 5f 56         VDDIOW_V
  11ca50:	 4f 4c 5f 33 32 56 00 56         OL_32V.V
  11ca58:	 44 44 49 4f 4d 5f 56 4f         DDIOM_VO
  11ca60:	 4c 5f 32 30 56 00 56 44         L_20V.VD
  11ca68:	 44 49 4f 4d 5f 56 4f 4c         DIOM_VOL
  11ca70:	 5f 32 32 56 00 56 44 44         _22V.VDD
  11ca78:	 49 4f 4d 5f 56 4f 4c 5f         IOM_VOL_
  11ca80:	 32 34 56 00 56 44 44 49         24V.VDDI
  11ca88:	 4f 4d 5f 56 4f 4c 5f 32         OM_VOL_2
  11ca90:	 36 56 00 56 44 44 49 4f         6V.VDDIO
  11ca98:	 4d 5f 56 4f 4c 5f 32 38         M_VOL_28
  11caa0:	 56 00 56 44 44 49 4f 4d         V.VDDIOM
  11caa8:	 5f 56 4f 4c 5f 33 30 56         _VOL_30V
  11cab0:	 00 56 44 44 49 4f 4d 5f         .VDDIOM_
  11cab8:	 56 4f 4c 5f 33 32 56 00         VOL_32V.
  11cac0:	 56 44 44 49 4f 4d 5f 56         VDDIOM_V
  11cac8:	 4f 4c 5f 33 36 56 00 5b         OL_36V.[
  11cad0:	 49 6e 66 6f 5d 20 5b 50         Info] [P
  11cad8:	 4d 55 5d 2d 2d 52 65 73         MU]--Res
  11cae0:	 65 74 20 53 6f 75 72 63         et Sourc
  11cae8:	 65 20 3a 20 30 78 25 78         e : 0x%x
  11caf0:	 0d 0a 00 5b 49 6e 66 6f         ...[Info
  11caf8:	 5d 20 5b 50 4d 55 5d 50         ] [PMU]P
  11cb00:	 33 33 20 52 45 53 45 54         33 RESET
  11cb08:	 0d 0a 00 5b 49 6e 66 6f         ...[Info
  11cb10:	 5d 20 5b 50 4d 55 5d 44         ] [PMU]D
  11cb18:	 56 44 44 20 50 4f 52 0d         VDD POR.
  11cb20:	 0a 00 5b 49 6e 66 6f 5d         ..[Info]
  11cb28:	 20 5b 50 4d 55 5d 53 4f          [PMU]SO
  11cb30:	 46 54 52 0d 0a 00 5b 49         FTR...[I
  11cb38:	 6e 66 6f 5d 20 5b 50 4d         nfo] [PM
  11cb40:	 55 5d 50 4c 50 4d 0d 0a         U]PLPM..
  11cb48:	 00 5b 49 6e 66 6f 5d 20         .[Info] 
  11cb50:	 5b 50 4d 55 5d 70 6f 77         [PMU]pow
  11cb58:	 65 72 20 72 65 74 75 72         er retur
  11cb60:	 6e 0d 0a 00 5b 49 6e 66         n...[Inf
  11cb68:	 6f 5d 20 5b 50 4d 55 5d         o] [PMU]
  11cb70:	 2d 2d 50 33 20 52 65 73         --P3 Res
  11cb78:	 65 74 20 53 6f 75 72 63         et Sourc
  11cb80:	 65 20 3a 20 30 78 25 78         e : 0x%x
  11cb88:	 0d 0a 00 5b 49 6e 66 6f         ...[Info
  11cb90:	 5d 20 5b 50 4d 55 5d 56         ] [PMU]V
  11cb98:	 44 44 49 4f 20 50 4f 52         DDIO POR
  11cba0:	 0d 0a 00 5b 49 6e 66 6f         ...[Info
  11cba8:	 5d 20 5b 50 4d 55 5d 56         ] [PMU]V
  11cbb0:	 44 44 49 4f 20 4c 56 44         DDIO LVD
  11cbb8:	 0d 0a 00 5b 49 6e 66 6f         ...[Info
  11cbc0:	 5d 20 5b 50 4d 55 5d 57         ] [PMU]W
  11cbc8:	 44 54 0d 0a 00 5b 49 6e         DT...[In
  11cbd0:	 66 6f 5d 20 5b 50 4d 55         fo] [PMU
  11cbd8:	 5d 56 43 4d 0d 0a 00 5b         ]VCM...[
  11cbe0:	 49 6e 66 6f 5d 20 5b 50         Info] [P
  11cbe8:	 4d 55 5d 4d 43 4c 52 0d         MU]MCLR.
  11cbf0:	 0a 00 5b 49 6e 66 6f 5d         ..[Info]
  11cbf8:	 20 5b 50 4d 55 5d 50 49          [PMU]PI
  11cc00:	 4e 52 0d 0a 00 5b 49 6e         NR...[In
  11cc08:	 66 6f 5d 20 5b 50 4d 55         fo] [PMU
  11cc10:	 5d 53 59 53 20 52 45 53         ]SYS RES
  11cc18:	 45 54 0d 0a 00 5b 49 6e         ET...[In
  11cc20:	 66 6f 5d 20 5b 50 4d 55         fo] [PMU
  11cc28:	 5d 53 4f 46 54 20 52 45         ]SOFT RE
  11cc30:	 53 45 54 0d 0a 00 5b 49         SET...[I
  11cc38:	 6e 66 6f 5d 20 43 50 55         nfo] CPU
  11cc40:	 74 69 63 6b 20 74 69 6d         tick tim
  11cc48:	 65 72 20 69 6e 69 74 20         er init 
  11cc50:	 0a 0d 0a 00 5b 49 6e 66         ....[Inf
  11cc58:	 6f 5d 20 43 50 55 74 69         o] CPUti
  11cc60:	 63 6b 20 74 69 6d 65 72         ck timer
  11cc68:	 20 69 6e 69 74 20 65 6e          init en
  11cc70:	 64 20 0a 0d 0a 00 73 66         d ....sf
  11cc78:	 63 00 3c 45 72 72 6f 72         c.<Error
  11cc80:	 3e 20 5b 66 6c 61 73 68         > [flash
  11cc88:	 5f 77 70 5d 64 65 76 5f         _wp]dev_
  11cc90:	 6f 70 65 6e 20 6e 75 6c         open nul
  11cc98:	 6c 0a 0d 0a 00 3c 45 72         l....<Er
  11cca0:	 72 6f 72 3e 20 5b 66 6c         ror> [fl
  11cca8:	 61 73 68 5f 77 70 5d 76         ash_wp]v
  11ccb0:	 66 73 5f 6d 6f 75 6e 74         fs_mount
  11ccb8:	 20 65 72 72 3a 30 78 25          err:0x%
  11ccc0:	 78 0a 0d 0a 00 2f 64 69         x..../di
  11ccc8:	 72 5f 73 79 73 5f 69 6e         r_sys_in
  11ccd0:	 66 6f 2f 77 70 5f 66 6c         fo/wp_fl
  11ccd8:	 61 73 68 2e 62 69 6e 00         ash.bin.
  11cce0:	 3c 45 72 72 6f 72 3e 20         <Error> 
  11cce8:	 5b 66 6c 61 73 68 5f 77         [flash_w
  11ccf0:	 70 5d 76 66 73 5f 6f 70         p]vfs_op
  11ccf8:	 65 6e 62 79 70 61 74 68         enbypath
  11cd00:	 20 65 72 72 3a 30 78 25          err:0x%
  11cd08:	 78 0a 0d 0a 00 5b 44 65         x....[De
  11cd10:	 62 75 67 5d 20 5b 66 6c         bug] [fl
  11cd18:	 61 73 68 5f 77 70 5d 63         ash_wp]c
  11cd20:	 72 63 3a 30 78 25 78 20         rc:0x%x 
  11cd28:	 30 78 25 78 0a 0d 0a 00         0x%x....
  11cd30:	 3c 45 72 72 6f 72 3e 20         <Error> 
  11cd38:	 5b 66 6c 61 73 68 5f 77         [flash_w
  11cd40:	 70 5d 77 70 5f 68 65 61         p]wp_hea
  11cd48:	 64 20 65 72 72 21 0a 0d         d err!..
  11cd50:	 0a 00 5b 44 65 62 75 67         ..[Debug
  11cd58:	 5d 20 5b 66 6c 61 73 68         ] [flash
  11cd60:	 5f 77 70 5d 63 72 63 3a         _wp]crc:
  11cd68:	 30 78 25 78 20 30 78 25         0x%x 0x%
  11cd70:	 78 0d 0a 00 5b 44 65 62         x...[Deb
  11cd78:	 75 67 5d 20 5b 66 6c 61         ug] [fla
  11cd80:	 73 68 5f 77 70 5d 66 6c         sh_wp]fl
  11cd88:	 61 73 68 20 69 64 3a 30         ash id:0
  11cd90:	 78 25 78 20 30 78 25 78         x%x 0x%x
  11cd98:	 0d 0a 00 5b 44 65 62 75         ...[Debu
  11cda0:	 67 5d 20 5b 66 6c 61 73         g] [flas
  11cda8:	 68 5f 77 70 5d 64 61 74         h_wp]dat
  11cdb0:	 61 5f 63 72 63 3a 30 78         a_crc:0x
  11cdb8:	 25 78 20 30 78 25 78 0d         %x 0x%x.
  11cdc0:	 0a 00 3c 45 72 72 6f 72         ..<Error
  11cdc8:	 3e 20 5b 66 6c 61 73 68         > [flash
  11cdd0:	 5f 77 70 5d 6e 6f 20 6d         _wp]no m
  11cdd8:	 61 74 63 68 20 77 70 5f         atch wp_
  11cde0:	 69 74 65 6d 21 0a 0d 0a         item!...
  11cde8:	 00 5b 49 6e 66 6f 5d 20         .[Info] 
  11cdf0:	 5b 66 6c 61 73 68 5f 77         [flash_w
  11cdf8:	 70 5d 46 69 6e 64 20 77         p]Find w
  11ce00:	 70 20 66 69 6c 65 20 70         p file p
  11ce08:	 61 72 6d 20 66 61 69 6c         arm fail
  11ce10:	 21 0a 0d 0a 00 5b 49 6e         !....[In
  11ce18:	 66 6f 5d 20 5b 6e 6f 72         fo] [nor
  11ce20:	 6d 61 6c 5d 0d 0a 0d 0a         mal]....
  11ce28:	 2d 2d 2d 2d 2d 2d 2d 2d         --------
  11ce30:	 2d 2d 2d 2d 2d 2d 2d 2d         --------
  11ce38:	 2d 2d 2d 2d 2d 2d 2d 2d         --------
  11ce40:	 2d 2d 2d 77 61 74 63 68         ---watch
  11ce48:	 64 6f 67 2d 2d 2d 2d 2d         dog-----
  11ce50:	 2d 2d 2d 2d 2d 2d 2d 2d         --------
  11ce58:	 2d 2d 2d 2d 2d 2d 2d 2d         --------
  11ce60:	 0d 0a 0d 0a 0d 0a 00 5b         .......[
  11ce68:	 49 6e 66 6f 5d 20 5b 6e         Info] [n
  11ce70:	 6f 72 6d 61 6c 5d 52 45         ormal]RE
  11ce78:	 54 53 20 3d 20 25 30 38         TS = %08
  11ce80:	 78 20 0d 0a 0d 0a 00 5b         x .....[
  11ce88:	 49 6e 66 6f 5d 20 5b 6e         Info] [n
  11ce90:	 6f 72 6d 61 6c 5d 52 45         ormal]RE
  11ce98:	 54 49 20 3d 20 25 30 38         TI = %08
  11cea0:	 78 20 0d 0a 0d 0a 00 5b         x .....[
  11cea8:	 49 6e 66 6f 5d 20 5b 6e         Info] [n
  11ceb0:	 6f 72 6d 61 6c 5d 53 50         ormal]SP
  11ceb8:	 20 3d 20 25 30 38 78 20          = %08x 
  11cec0:	 0d 0a 0d 0a 00 5b 49 6e         .....[In
  11cec8:	 66 6f 5d 20 5b 6e 6f 72         fo] [nor
  11ced0:	 6d 61 6c 5d 55 53 50 20         mal]USP 
  11ced8:	 3d 20 25 30 38 78 20 0d         = %08x .
  11cee0:	 0a 0d 0a 00 5b 49 6e 66         ....[Inf
  11cee8:	 6f 5d 20 5b 6e 6f 72 6d         o] [norm
  11cef0:	 61 6c 5d 53 53 50 20 3d         al]SSP =
  11cef8:	 20 25 30 38 78 20 0d 0a          %08x ..
  11cf00:	 0d 0a 00 3c 45 72 72 6f         ...<Erro
  11cf08:	 72 3e 20 5b 73 79 64 66         r> [sydf
  11cf10:	 5d 62 75 69 6c 74 2d 69         ]built-i
  11cf18:	 6e 20 73 79 64 66 5f 6d         n sydf_m
  11cf20:	 6f 75 6e 74 20 66 61 69         ount fai
  11cf28:	 6c 0a 0d 0a 00 3c 45 72         l....<Er
  11cf30:	 72 6f 72 3e 20 5b 73 79         ror> [sy
  11cf38:	 64 66 5d 65 78 74 20 73         df]ext s
  11cf40:	 79 64 66 5f 6d 6f 75 6e         ydf_moun
  11cf48:	 74 20 66 61 69 6c 0a 0d         t fail..
  11cf50:	 0a 00 61 70 70 5f 61 72         ..app_ar
  11cf58:	 65 61 5f 68 65 61 64 00         ea_head.
  11cf60:	 2f 00 5b 49 6e 66 6f 5d         /.[Info]
  11cf68:	 20 5b 73 79 64 66 5d 73          [sydf]s
  11cf70:	 79 64 66 5f 6f 70 65 6e         ydf_open
  11cf78:	 62 79 66 69 6c 65 0a 0d         byfile..
  11cf80:	 0a 00 5b 49 6e 66 6f 5d         ..[Info]
  11cf88:	 20 5b 73 79 64 66 5d 70          [sydf]p
  11cf90:	 66 69 6c 65 20 69 73 20         file is 
  11cf98:	 6e 75 6c 6c 20 0a 0d 0a         null ...
  11cfa0:	 00 5b 49 6e 66 6f 5d 20         .[Info] 
  11cfa8:	 5b 73 79 64 66 5d 70 66         [sydf]pf
  11cfb0:	 69 6c 65 2d 3e 66 73 20         ile->fs 
  11cfb8:	 69 73 20 6e 75 6c 6c 20         is null 
  11cfc0:	 0a 0d 0a 00 5b 49 6e 66         ....[Inf
  11cfc8:	 6f 5d 20 5b 73 79 64 66         o] [sydf
  11cfd0:	 5d 20 66 73 20 74 6f 74         ] fs tot
  11cfd8:	 61 6c 0a 0d 0a 00 5b 49         al....[I
  11cfe0:	 6e 66 6f 5d 20 5b 73 79         nfo] [sy
  11cfe8:	 64 66 5d 20 66 73 20 74         df] fs t
  11cff0:	 6f 74 61 6c 20 41 0a 0d         otal A..
  11cff8:	 0a 00 5b 49 6e 66 6f 5d         ..[Info]
  11d000:	 20 5b 73 79 64 66 5d 20          [sydf] 
  11d008:	 66 73 20 74 6f 74 61 6c         fs total
  11d010:	 20 42 0a 0d 0a 00 5b 49          B....[I
  11d018:	 6e 66 6f 5d 20 5b 6e 6f         nfo] [no
  11d020:	 72 6d 61 6c 5d 70 66 69         rmal]pfi
  11d028:	 6c 65 20 69 73 20 6e 75         le is nu
  11d030:	 6c 6c 20 0a 0d 0a 00 5b         ll ....[
  11d038:	 49 6e 66 6f 5d 20 5b 6e         Info] [n
  11d040:	 6f 72 6d 61 6c 5d 70 66         ormal]pf
  11d048:	 69 6c 65 2d 3e 66 73 20         ile->fs 
  11d050:	 69 73 20 6e 75 6c 6c 20         is null 
  11d058:	 0a 0d 0a 00 3c 45 72 72         ....<Err
  11d060:	 6f 72 3e 20 5b 6e 6f 72         or> [nor
  11d068:	 6d 61 6c 5d 63 72 63 20         mal]crc 
  11d070:	 65 72 72 21 5c 6e 0d 0a         err!\n..
  11d078:	 00 5b 49 6e 66 6f 5d 20         .[Info] 
  11d080:	 5b 6e 6f 72 6d 61 6c 5d         [normal]
  11d088:	 63 72 63 5f 31 36 20 30         crc_16 0
  11d090:	 78 25 78 0d 0a 00 5b 49         x%x...[I
  11d098:	 6e 66 6f 5d 20 5b 6e 6f         nfo] [no
  11d0a0:	 72 6d 61 6c 5d 63 68 65         rmal]che
  11d0a8:	 63 6b 20 30 30 66 73 0a         ck 00fs.
  11d0b0:	 0d 0a 00 5b 49 6e 66 6f         ...[Info
  11d0b8:	 5d 20 5b 6e 6f 72 6d 61         ] [norma
  11d0c0:	 6c 5d 3e 3e 3e 5b 74 65         l]>>>[te
  11d0c8:	 73 74 5d 3a 62 6f 6f 74         st]:boot
  11d0d0:	 73 65 63 74 20 3d 20 25         sect = %
  11d0d8:	 64 0a 0d 0a 00 5b 49 6e         d....[In
  11d0e0:	 66 6f 5d 20 5b 6e 6f 72         fo] [nor
  11d0e8:	 6d 61 6c 5d 20 3a 63 68         mal] :ch
  11d0f0:	 65 63 6b 5f 66 73 0a 0d         eck_fs..
  11d0f8:	 0a 00 5b 49 6e 66 6f 5d         ..[Info]
  11d100:	 20 5b 6e 6f 72 6d 61 6c          [normal
  11d108:	 5d 66 61 74 31 32 20 6f         ]fat12 o
  11d110:	 72 20 31 36 20 6f 72 20         r 16 or 
  11d118:	 33 32 0a 0d 0a 00 5b 49         32....[I
  11d120:	 6e 66 6f 5d 20 5b 6e 6f         nfo] [no
  11d128:	 72 6d 61 6c 5d 63 6b 20         rmal]ck 
  11d130:	 66 61 74 20 30 31 0a 0d         fat 01..
  11d138:	 0a 00 5b 49 6e 66 6f 5d         ..[Info]
  11d140:	 20 5b 6e 6f 72 6d 61 6c          [normal
  11d148:	 5d 63 6b 20 66 61 74 20         ]ck fat 
  11d150:	 30 32 0a 0d 0a 00 5b 49         02....[I
  11d158:	 6e 66 6f 5d 20 5b 6e 6f         nfo] [no
  11d160:	 72 6d 61 6c 5d 63 6b 20         rmal]ck 
  11d168:	 66 61 74 20 30 33 0a 0d         fat 03..
  11d170:	 0a 00 5b 49 6e 66 6f 5d         ..[Info]
  11d178:	 20 5b 6e 6f 72 6d 61 6c          [normal
  11d180:	 5d 63 6b 20 66 61 74 20         ]ck fat 
  11d188:	 30 34 0a 0d 0a 00 5b 49         04....[I
  11d190:	 6e 66 6f 5d 20 5b 6e 6f         nfo] [no
  11d198:	 72 6d 61 6c 5d 66 73 2d         rmal]fs-
  11d1a0:	 3e 77 62 75 66 2e 77 69         >wbuf.wi
  11d1a8:	 6e 20 2d 32 0a 0d 0a 00         n -2....
  11d1b0:	 5b 49 6e 66 6f 5d 20 5b         [Info] [
  11d1b8:	 6e 6f 72 6d 61 6c 5d 63         normal]c
  11d1c0:	 6b 20 66 61 74 20 30 36         k fat 06
  11d1c8:	 0a 0d 0a 00 5b 49 6e 66         ....[Inf
  11d1d0:	 6f 5d 20 5b 6e 6f 72 6d         o] [norm
  11d1d8:	 61 6c 5d 63 6b 20 66 61         al]ck fa
  11d1e0:	 74 20 30 37 0a 0d 0a 00         t 07....
  11d1e8:	 5b 49 6e 66 6f 5d 20 5b         [Info] [
  11d1f0:	 6e 6f 72 6d 61 6c 5d 20         normal] 
  11d1f8:	 3a 20 63 68 65 63 6b 20         : check 
  11d200:	 66 61 74 20 72 65 73 0a         fat res.
  11d208:	 0d 0a 00 5b 49 6e 66 6f         ...[Info
  11d210:	 5d 20 5b 6e 6f 72 6d 61         ] [norma
  11d218:	 6c 5d 66 61 74 62 61 73         l]fatbas
  11d220:	 65 20 3d 20 25 64 2c 20         e = %d, 
  11d228:	 64 69 72 62 61 73 65 20         dirbase 
  11d230:	 3d 20 25 64 2c 20 64 61         = %d, da
  11d238:	 74 61 62 61 73 65 20 3d         tabase =
  11d240:	 20 25 64 0a 0d 0a 00 5b          %d....[
  11d248:	 49 6e 66 6f 5d 20 5b 6e         Info] [n
  11d250:	 6f 72 6d 61 6c 5d 66 61         ormal]fa
  11d258:	 74 31 32 20 6f 72 20 66         t12 or f
  11d260:	 61 74 31 36 20 6f 72 20         at16 or 
  11d268:	 66 61 74 33 32 0a 0d 0a         fat32...
  11d270:	 00 5b 49 6e 66 6f 5d 20         .[Info] 
  11d278:	 5b 6e 6f 72 6d 61 6c 5d         [normal]
  11d280:	 65 72 72 20 30 31 0a 0d         err 01..
  11d288:	 0a 00 5b 49 6e 66 6f 5d         ..[Info]
  11d290:	 20 5b 6e 6f 72 6d 61 6c          [normal
  11d298:	 5d 65 72 72 20 30 32 0a         ]err 02.
  11d2a0:	 0d 0a 00 5b 49 6e 66 6f         ...[Info
  11d2a8:	 5d 20 5b 6e 6f 72 6d 61         ] [norma
  11d2b0:	 6c 5d 66 6f 6c 6c 6f 77         l]follow
  11d2b8:	 5f 70 61 74 68 20 72 65         _path re
  11d2c0:	 74 75 72 6e 20 6e 6f 20         turn no 
  11d2c8:	 66 69 6c 65 0a 0d 0a 00         file....
  11d2d0:	 5b 49 6e 66 6f 5d 20 5b         [Info] [
  11d2d8:	 6e 6f 72 6d 61 6c 5d 66         normal]f
  11d2e0:	 6f 6c 6c 6f 77 5f 70 61         ollow_pa
  11d2e8:	 74 68 20 72 65 74 75 72         th retur
  11d2f0:	 6e 20 6e 6f 20 70 61 74         n no pat
  11d2f8:	 68 0a 0d 0a 00 5b 49 6e         h....[In
  11d300:	 66 6f 5d 20 5b 6e 6f 72         fo] [nor
  11d308:	 6d 61 6c 5d 46 5f 4f 50         mal]F_OP
  11d310:	 45 4e 20 42 0a 0d 0a 00         EN B....
  11d318:	 5b 49 6e 66 6f 5d 20 5b         [Info] [
  11d320:	 6e 6f 72 6d 61 6c 5d 63         normal]c
  11d328:	 72 65 61 74 65 5f 72 65         reate_re
  11d330:	 63 66 69 6c 65 20 3a 20         cfile : 
  11d338:	 0d 0a 00 5b 49 6e 66 6f         ...[Info
  11d340:	 5d 20 5b 6e 6f 72 6d 61         ] [norma
  11d348:	 6c 5d 73 63 61 6e 20 66         l]scan f
  11d350:	 69 6c 65 20 66 61 69 6c         ile fail
  11d358:	 21 21 21 0a 0d 0a 00 5b         !!!....[
  11d360:	 49 6e 66 6f 5d 20 5b 6e         Info] [n
  11d368:	 6f 72 6d 61 6c 5d 73 65         ormal]se
  11d370:	 63 74 6f 72 5f 73 74 61         ctor_sta
  11d378:	 72 74 3a 20 30 78 25 78         rt: 0x%x
  11d380:	 0a 0d 0a 00 5b 49 6e 66         ....[Inf
  11d388:	 6f 5d 20 5b 6e 6f 72 6d         o] [norm
  11d390:	 61 6c 5d 73 65 63 74 6f         al]secto
  11d398:	 72 5f 65 6e 64 20 20 3a         r_end  :
  11d3a0:	 20 30 78 25 78 0a 0d 0a          0x%x...
  11d3a8:	 00 5b 49 6e 66 6f 5d 20         .[Info] 
  11d3b0:	 5b 6e 6f 72 6d 61 6c 5d         [normal]
  11d3b8:	 73 65 63 74 6f 72 5f 62         sector_b
  11d3c0:	 69 74 20 20 3a 20 25 64         it  : %d
  11d3c8:	 0a 0d 0a 00 6e 6f 72 5f         ....nor_
  11d3d0:	 66 69 6c 65 00 5b 49 6e         file.[In
  11d3d8:	 66 6f 5d 20 5b 6e 6f 72         fo] [nor
  11d3e0:	 6d 61 6c 5d 20 6e 6f 72         mal] nor
  11d3e8:	 20 69 6f 63 74 6c 0a 0d          ioctl..
  11d3f0:	 0a 00 5b 49 6e 66 6f 5d         ..[Info]
  11d3f8:	 20 5b 6e 6f 72 6d 61 6c          [normal
  11d400:	 5d 20 66 73 20 74 6f 74         ] fs tot
  11d408:	 61 6c 0a 0d 0a 00 5b 49         al....[I
  11d410:	 6e 66 6f 5d 20 5b 6e 6f         nfo] [no
  11d418:	 72 6d 61 6c 5d 20 66 73         rmal] fs
  11d420:	 20 74 6f 74 61 6c 20 41          total A
  11d428:	 0a 0d 0a 00 5b 49 6e 66         ....[Inf
  11d430:	 6f 5d 20 5b 6e 6f 72 6d         o] [norm
  11d438:	 61 6c 5d 20 66 73 20 74         al] fs t
  11d440:	 6f 74 61 6c 20 42 0a 0d         otal B..
  11d448:	 0a 00 53 65 70 20 32 37         ..Sep 27
  11d450:	 20 32 30 32 33 00 30 38          2023.08
  11d458:	 3a 34 32 3a 35 36 00 5b         :42:56.[
  11d460:	 49 6e 66 6f 5d 20 5b 73         Info] [s
  11d468:	 72 63 5d 73 72 63 5f 6c         rc]src_l
  11d470:	 69 62 2e 61 20 42 75 69         ib.a Bui
  11d478:	 6c 64 20 54 69 6d 65 20         ld Time 
  11d480:	 3a 20 25 73 20 25 73 0a         : %s %s.
  11d488:	 0d 0a 00 5b 49 6e 66 6f         ...[Info
  11d490:	 5d 20 5b 6e 6f 72 6d 61         ] [norma
  11d498:	 6c 5d 20 20 64 65 63 6f         l]  deco
  11d4a0:	 64 65 72 20 6c 6f 6f 70         der loop
  11d4a8:	 0a 0d 0a 00 5b 49 6e 66         ....[Inf
  11d4b0:	 6f 5d 20 5b 6e 6f 72 6d         o] [norm
  11d4b8:	 61 6c 5d 20 20 64 65 63         al]  dec
  11d4c0:	 6f 64 65 72 20 6c 6f 6f         oder loo
  11d4c8:	 70 20 68 61 73 27 6e 74         p has'nt
  11d4d0:	 20 62 75 66 66 0a 0d 0a          buff...
  11d4d8:	 00 3c 45 72 72 6f 72 3e         .<Error>
  11d4e0:	 20 5b 6e 6f 72 6d 61 6c          [normal
  11d4e8:	 5d 53 52 43 5f 44 41 54         ]SRC_DAT
  11d4f0:	 41 20 4d 41 4c 4c 4f 43         A MALLOC
  11d4f8:	 20 45 52 52 21 21 21 0a          ERR!!!.
  11d500:	 0d 0a 00 3c 45 72 72 6f         ...<Erro
  11d508:	 72 3e 20 5b 6e 6f 72 6d         r> [norm
  11d510:	 61 6c 5d 53 52 43 5f 42         al]SRC_B
  11d518:	 55 46 46 20 4d 41 4c 4c         UFF MALL
  11d520:	 4f 43 20 45 52 52 21 21         OC ERR!!
  11d528:	 21 0a 0d 0a 00 5b 49 6e         !....[In
  11d530:	 66 6f 5d 20 5b 6e 6f 72         fo] [nor
  11d538:	 6d 61 6c 5d 73 72 63 20         mal]src 
  11d540:	 69 6e 69 74 20 65 72 72         init err
  11d548:	 0a 0d 0a 00 5b 49 6e 66         ....[Inf
  11d550:	 6f 5d 20 5b 6e 6f 72 6d         o] [norm
  11d558:	 61 6c 5d 73 72 63 20 69         al]src i
  11d560:	 6e 69 74 20 66 61 69 6c         nit fail
  11d568:	 0a 0d 0a 00 5b 49 6e 66         ....[Inf
  11d570:	 6f 5d 20 5b 6e 6f 72 6d         o] [norm
  11d578:	 61 6c 5d 64 65 76 69 63         al]devic
  11d580:	 65 20 6e 75 6c 6c 0a 0d         e null..
  11d588:	 0a 00 5b 49 6e 66 6f 5d         ..[Info]
  11d590:	 20 5b 6e 6f 72 6d 61 6c          [normal
  11d598:	 5d 64 65 76 20 6f 70 65         ]dev ope
  11d5a0:	 6e 20 65 72 72 20 0a 0d         n err ..
  11d5a8:	 0a 00 3c 45 72 72 6f 72         ..<Error
  11d5b0:	 3e 20 5b 6e 6f 72 6d 61         > [norma
  11d5b8:	 6c 5d 41 53 53 45 52 54         l]ASSERT
  11d5c0:	 3a 20 30 20 64 65 76 69         : 0 devi
  11d5c8:	 63 65 3a 20 25 73 20 69         ce: %s i
  11d5d0:	 6e 69 74 5f 65 72 72 3a         nit_err:
  11d5d8:	 20 25 64 0a 0d 0a 00 5b          %d....[
  11d5e0:	 49 6e 66 6f 5d 20 5b 6e         Info] [n
  11d5e8:	 6f 72 6d 61 6c 5d 68 6f         ormal]ho
  11d5f0:	 77 6c 69 6e 67 2d 3e 70         wling->p
  11d5f8:	 61 72 6d 2e 70 73 5f 70         arm.ps_p
  11d600:	 61 72 6d 20 25 64 0a 0d         arm %d..
  11d608:	 0a 00 5b 49 6e 66 6f 5d         ..[Info]
  11d610:	 20 5b 6e 6f 72 6d 61 6c          [normal
  11d618:	 5d 68 6f 77 6c 69 6e 67         ]howling
  11d620:	 2d 3e 70 61 72 6d 2e 66         ->parm.f
  11d628:	 65 5f 70 61 72 6d 20 25         e_parm %
  11d630:	 64 0a 0d 0a 00 5b 49 6e         d....[In
  11d638:	 66 6f 5d 20 5b 6e 6f 72         fo] [nor
  11d640:	 6d 61 6c 5d 68 6f 77 6c         mal]howl
  11d648:	 69 6e 67 2d 3e 70 61 72         ing->par
  11d650:	 6d 2e 65 66 66 65 63 74         m.effect
  11d658:	 5f 76 20 25 64 0a 0d 0a         _v %d...
  11d660:	 00 5b 49 6e 66 6f 5d 20         .[Info] 
  11d668:	 5b 6e 6f 72 6d 61 6c 5d         [normal]
  11d670:	 68 6f 77 6c 69 6e 67 5f         howling_
  11d678:	 68 64 6c 5f 70 74 72 20         hdl_ptr 
  11d680:	 25 78 0a 0d 0a 00 6d 74         %x....mt
  11d688:	 79 00 4d 49 44 00               y.MID.


scale_factor_shift:
  11d68e:	 15 15 15 14 14 14 13 13         ........
  11d696:	 13 12 12 12 11 11 11 10         ........
  11d69e:	 10 10 0f 0f 0f 0e 0e 0e         ........
  11d6a6:	 0d 0d 0d 0c 0c 0c 0b 0b         ........
  11d6ae:	 0b 0a 0a 0a 09 09 09 08         ........
  11d6b6:	 08 08 07 07 07 06 06 06         ........
  11d6be:	 05 05 05 04 04 04 03 03         ........
  11d6c6:	 03 02 02 02 01 01 01 00         ........
  11d6ce:	 00 00                           ..


sf_table:
  11d6d0:	 00 00 20 00 fe 65 19 00         .. ..e..
  11d6d8:	 a2 28 14 00 00 00 10 00         .(......
  11d6e0:	 ff b2 0c 00 51 14 0a 00         ....Q...
  11d6e8:	 00 00 08 00 7f 59 06 00         .....Y..
  11d6f0:	 28 0a 05 00 00 00 04 00         (.......
  11d6f8:	 bf 2c 03 00 14 85 02 00         .,......
  11d700:	 00 00 02 00 5f 96 01 00         ...._...
  11d708:	 8a 42 01 00 00 00 01 00         .B......
  11d710:	 2f cb 00 00 45 a1 00 00         /...E...
  11d718:	 00 80 00 00 97 65 00 00         .....e..
  11d720:	 a2 50 00 00 00 40 00 00         .P...@..
  11d728:	 cb 32 00 00 51 28 00 00         .2..Q(..
  11d730:	 00 20 00 00 65 19 00 00         . ..e...
  11d738:	 28 14 00 00 00 10 00 00         (.......
  11d740:	 b2 0c 00 00 14 0a 00 00         ........
  11d748:	 00 08 00 00 59 06 00 00         ....Y...
  11d750:	 0a 05 00 00 00 04 00 00         ........
  11d758:	 2c 03 00 00 85 02 00 00         ,.......
  11d760:	 00 02 00 00 96 01 00 00         ........
  11d768:	 42 01 00 00 00 01 00 00         B.......
  11d770:	 cb 00 00 00 a1 00 00 00         ........
  11d778:	 80 00 00 00 65 00 00 00         ....e...
  11d780:	 50 00 00 00 40 00 00 00         P...@...
  11d788:	 32 00 00 00 28 00 00 00         2...(...
  11d790:	 20 00 00 00 19 00 00 00          .......
  11d798:	 14 00 00 00 10 00 00 00         ........
  11d7a0:	 0c 00 00 00 0a 00 00 00         ........
  11d7a8:	 08 00 00 00 06 00 00 00         ........
  11d7b0:	 05 00 00 00 04 00 00 00         ........
  11d7b8:	 03 00 00 00 02 00 00 00         ........
  11d7c0:	 02 00 00 00 01 00 00 00         ........
  11d7c8:	 01 00 00 00                     ....


f1a_cos_maskrom_tab:
  11d7cc:	 00 00 00 00                     ....


scale_factor_table:
  11d7d0:	 00 00 40 00 fd cb 32 00         ..@...2.
  11d7d8:	 45 51 28 00 00 00 20 00         EQ(... .
  11d7e0:	 fe 65 19 00 a2 28 14 00         .e...(..
  11d7e8:	 00 00 10 00 ff b2 0c 00         ........
  11d7f0:	 51 14 0a 00 00 00 08 00         Q.......
  11d7f8:	 7f 59 06 00 28 0a 05 00         .Y..(...
  11d800:	 00 00 04 00 bf 2c 03 00         .....,..
  11d808:	 14 85 02 00 00 00 02 00         ........
  11d810:	 5f 96 01 00 8a 42 01 00         _....B..
  11d818:	 00 00 01 00 2f cb 00 00         ..../...
  11d820:	 45 a1 00 00 00 80 00 00         E.......
  11d828:	 97 65 00 00 a2 50 00 00         .e...P..
  11d830:	 00 40 00 00 cb 32 00 00         .@...2..
  11d838:	 51 28 00 00 00 20 00 00         Q(... ..
  11d840:	 65 19 00 00 28 14 00 00         e...(...
  11d848:	 00 10 00 00 b2 0c 00 00         ........
  11d850:	 14 0a 00 00 00 08 00 00         ........
  11d858:	 59 06 00 00 0a 05 00 00         Y.......
  11d860:	 00 04 00 00 2c 03 00 00         ....,...
  11d868:	 85 02 00 00 00 02 00 00         ........
  11d870:	 96 01 00 00 42 01 00 00         ....B...
  11d878:	 00 01 00 00 cb 00 00 00         ........
  11d880:	 a1 00 00 00 80 00 00 00         ........
  11d888:	 65 00 00 00 50 00 00 00         e...P...
  11d890:	 40 00 00 00 32 00 00 00         @...2...
  11d898:	 28 00 00 00 20 00 00 00         (... ...
  11d8a0:	 19 00 00 00 14 00 00 00         ........
  11d8a8:	 10 00 00 00 0c 00 00 00         ........
  11d8b0:	 0a 00 00 00 08 00 00 00         ........
  11d8b8:	 06 00 00 00 05 00 00 00         ........
  11d8c0:	 04 00 00 00 03 00 00 00         ........
  11d8c8:	 02 00 00 00 00 00 00 00         ........


adc_clk_div:
  11d8d0:	 01 06 0c 18 30 48 60 80         ....0H`.


expAprx.iexp_coeff:
  11d8d8:	 89 88 88 00 ab aa aa 0a         ........


cosAprx.coeff:
  11d8e0:	 ab aa 0a 00 00 00 80 ff         ........


pnpr_tab:
  11d8e8:	 f6 ff f7 ff 09 00 0a 00         ........


pll_clock_tab0:
  11d8f0:	 00 00 00 00 00 d8 b8 05         ........
  11d8f8:	 00 d0 12 13 00 38 9c 1c         .....8..


pll_clock_tab1:
  11d900:	 00 00 00 00 c0 b0 60 06         ......`.
  11d908:	 40 74 2a 08 00 b0 71 0b         @t*...q.


Channal_Prog_Tab:
  11d910:	 00 0a 16 18 20 28 38 40         .... (8@
  11d918:	 74 80 0e 2e 49 69 6f 7c         t...Iio|


PA_valid:
  11d920:	 00 01 02 03 04 05 06 07         ........
  11d928:	 08 09 0a 0b 0c 0d 0e 0f         ........
  11d930:	 80 3e 00 00 c0 5d 00 00         .>...]..
  11d938:	 40 1f 00 00 e0 2e 00 00         @.......


phpr_tab:
  11d940:	 00 00 00 3f 00 00 00 40         ...?...@
  11d948:	 00 00 40 40 00 00 80 40         ..@@...@


phpr_tab_inv:
  11d950:	 00 00 00 40 00 00 00 3f         ...@...?
  11d958:	 ab aa aa 3e 00 00 80 3e         ...>...>


cs:
  11d960:	 e1 36 6e 38 c7 3c ef 3e         .6n8.<.>
  11d968:	 b7 3f f2 3f fe 3f 00 40         .?.?.?.@


ca:
  11d970:	 13 df cf e1 f2 eb 5c f4         ......\.
  11d978:	 f2 f9 61 fd 17 ff c3 ff         ..a.....


indexTable:
  11d980:	 ff ff ff ff 02 04 06 08         ........
  11d988:	 ff ff ff ff 02 04 06 08         ........


mp2_ff_log2_tab:
  11d990:	 00 00 01 01 02 02 02 02         ........
  11d998:	 03 03 03 03 03 03 03 03         ........


div_taba:
  11d9a0:	 01 03 05 07                     ....


div_tabb:
  11d9a4:	 01 02 04 08                     ....


sflen_table:
  11d9a8:	 00 00 00 01 00 02 00 03         ........
  11d9b0:	 03 00 01 01 01 02 01 03         ........
  11d9b8:	 02 01 02 02 02 03 03 01         ........
  11d9c0:	 03 02 03 03 04 02 04 03         ........


_ctype_b:
  11d9c8:	 00 00 00 00 00 00 00 00         ........
  11d9d0:	 00 00 00 00 00 00 00 00         ........
  11d9d8:	 00 00 00 00 00 00 00 00         ........
  11d9e0:	 00 00 00 00 00 00 00 00         ........
  11d9e8:	 00 00 00 00 00 00 00 00         ........
  11d9f0:	 00 00 00 00 00 00 00 00         ........
  11d9f8:	 00 00 00 00 00 00 00 00         ........
  11da00:	 00 00 00 00 00 00 00 00         ........
  11da08:	 00 00 00 00 00 00 00 00         ........
  11da10:	 00 00 00 00 00 00 00 00         ........
  11da18:	 00 00 00 00 00 00 00 00         ........
  11da20:	 00 00 00 00 00 00 00 00         ........
  11da28:	 00 00 00 00 00 00 00 00         ........
  11da30:	 00 00 00 00 00 00 00 00         ........
  11da38:	 00 00 00 00 00 00 00 00         ........
  11da40:	 00 00 00 00 00 00 00 00         ........
  11da48:	 20 20 20 20 20 20 20 20                 
  11da50:	 20 28 28 28 28 28 20 20          (((((  
  11da58:	 20 20 20 20 20 20 20 20                 
  11da60:	 20 20 20 20 20 20 20 20                 
  11da68:	 88 10 10 10 10 10 10 10         ........
  11da70:	 10 10 10 10 10 10 10 10         ........
  11da78:	 04 04 04 04 04 04 04 04         ........
  11da80:	 04 04 10 10 10 10 10 10         ........
  11da88:	 10 41 41 41 41 41 41 01         .AAAAAA.
  11da90:	 01 01 01 01 01 01 01 01         ........
  11da98:	 01 01 01 01 01 01 01 01         ........
  11daa0:	 01 01 01 10 10 10 10 10         ........
  11daa8:	 10 42 42 42 42 42 42 02         .BBBBBB.
  11dab0:	 02 02 02 02 02 02 02 02         ........
  11dab8:	 02 02 02 02 02 02 02 02         ........
  11dac0:	 02 02 02 10 10 10 10 20         ....... 
  11dac8:	 00 00 00 00 00 00 00 00         ........
  11dad0:	 00 00 00 00 00 00 00 00         ........
  11dad8:	 00 00 00 00 00 00 00 00         ........
  11dae0:	 00 00 00 00 00 00 00 00         ........
  11dae8:	 00 00 00 00 00 00 00 00         ........
  11daf0:	 00 00 00 00 00 00 00 00         ........
  11daf8:	 00 00 00 00 00 00 00 00         ........
  11db00:	 00 00 00 00 00 00 00 00         ........
  11db08:	 00 00 00 00 00 00 00 00         ........
  11db10:	 00 00 00 00 00 00 00 00         ........
  11db18:	 00 00 00 00 00 00 00 00         ........
  11db20:	 00 00 00 00 00 00 00 00         ........
  11db28:	 00 00 00 00 00 00 00 00         ........
  11db30:	 00 00 00 00 00 00 00 00         ........
  11db38:	 00 00 00 00 00 00 00 00         ........
  11db40:	 00 00 00 00 00 00 00 00         ........


_ctype_:
  11db48:	 00 20 20 20 20 20 20 20         .       
  11db50:	 20 20 28 28 28 28 28 20           ((((( 
  11db58:	 20 20 20 20 20 20 20 20                 
  11db60:	 20 20 20 20 20 20 20 20                 
  11db68:	 20 88 10 10 10 10 10 10          .......
  11db70:	 10 10 10 10 10 10 10 10         ........
  11db78:	 10 04 04 04 04 04 04 04         ........
  11db80:	 04 04 04 10 10 10 10 10         ........
  11db88:	 10 10 41 41 41 41 41 41         ..AAAAAA
  11db90:	 01 01 01 01 01 01 01 01         ........
  11db98:	 01 01 01 01 01 01 01 01         ........
  11dba0:	 01 01 01 01 10 10 10 10         ........
  11dba8:	 10 10 42 42 42 42 42 42         ..BBBBBB
  11dbb0:	 02 02 02 02 02 02 02 02         ........
  11dbb8:	 02 02 02 02 02 02 02 02         ........
  11dbc0:	 02 02 02 02 10 10 10 10         ........
  11dbc8:	 20 00 00 00 00 00 00 00          .......
  11dbd0:	 00 00 00 00 00 00 00 00         ........
  11dbd8:	 00 00 00 00 00 00 00 00         ........
  11dbe0:	 00 00 00 00 00 00 00 00         ........
  11dbe8:	 00 00 00 00 00 00 00 00         ........
  11dbf0:	 00 00 00 00 00 00 00 00         ........
  11dbf8:	 00 00 00 00 00 00 00 00         ........
  11dc00:	 00 00 00 00 00 00 00 00         ........
  11dc08:	 00 00 00 00 00 00 00 00         ........
  11dc10:	 00 00 00 00 00 00 00 00         ........
  11dc18:	 00 00 00 00 00 00 00 00         ........
  11dc20:	 00 00 00 00 00 00 00 00         ........
  11dc28:	 00 00 00 00 00 00 00 00         ........
  11dc30:	 00 00 00 00 00 00 00 00         ........
  11dc38:	 00 00 00 00 00 00 00 00         ........
  11dc40:	 00 00 00 00 00 00 00 00         ........
  11dc48:	 00 00 00 00                     ....


loop_detect_handler_end:
  11dc4c:    76 cc       	cmn r6, r14
  11dc4e:    11           <unknown instruction>
  11dc4f:    00 a4       	r0 = r0 << 4 
  11dc51:    64 11       	ifs (nzcv != 0) goto 200 <sydf_vfs_ops+0xA : 11dd1a >
  11dc53:    00 00       	nop
  11dc55:    00 00       	nop
  11dc57:    00 c3       	testset b[r0]


vfs_ops_begin:
  11dc58:    c3           <unknown instruction>
  11dc59:    c2 11       	ifs (nzcv != 0) goto -124 <_ctype_+0x96 : 11dbde >
  11dc5b:    00 00       	nop
  11dc5d:    00 00       	nop
  11dc5f:    00 0e       	goto -1024 <scale_factor_table+0x90 : 11d860 >
  11dc61:    5f 10       	ifs (nzcv == 0) goto 190 <sydf_vfs_ops+0x10 : 11dd20 >
  11dc63:    00 00       	nop
  11dc65:    00 00       	nop
  11dc67:    00 58       	r0 = b[r0 + 0] 
  11dc69:    60 10       	ifs (nzcv == 0) goto 192 <sydf_vfs_ops+0x1A : 11dd2a >
  11dc6b:    00 00       	nop
  11dc6d:    00 00       	nop
  11dc6f:    00 00       	nop
  11dc71:    00 00       	nop
  11dc73:    00 ca       	r0 += r0 (brev) 
  11dc75:    61 10       	ifs (nzcv == 0) goto 194 <sydf_vfs_ops+0x28 : 11dd38 >
  11dc77:    00 ac       	r0 = r0 << 12 
  11dc79:    62 10       	ifs (nzcv == 0) goto 196 <sydf_vfs_ops+0x2E : 11dd3e >
  11dc7b:    00           <unknown instruction>
  11dc7c:    36 64       	[sp+ -192] = r6 
  11dc7e:    10 00       	idle
  11dc80:    3c 64       	[sp+ -64] = r4 
  11dc82:    10 00       	idle
  11dc84:    00 00       	nop
  11dc86:    00 00       	nop
  11dc88:    74 64       	[sp+ -188] = r4 
  11dc8a:    10 00       	idle
  11dc8c:    00 00       	nop
  11dc8e:    00 00       	nop
  11dc90:    00 00       	nop
  11dc92:    00 00       	nop
  11dc94:    00 00       	nop
  11dc96:    00 00       	nop
  11dc98:    00 00       	nop
  11dc9a:    00 00       	nop
  11dc9c:    7c 64       	[sp+ -60] = r4 
  11dc9e:    10 00       	idle
  11dca0:    fc 64       	[sp+ -52] = r4 
  11dca2:    10 00       	idle
  11dca4:    00 00       	nop
  11dca6:    00 00       	nop
  11dca8:    00 00       	nop
  11dcaa:    00 00       	nop
  11dcac:    00 00       	nop
  11dcae:    00 00       	nop
  11dcb0:    00 00       	nop
  11dcb2:    00 00       	nop


smpl_fat_vfs_ops:
  11dcb4:	 ec ad 11 00 00 00 00 00         ........
  11dcbc:	 0e 66 10 00 8a 68 10 00         .f...h..
  11dcc4:	 00 00 00 00 00 00 00 00         ........
  11dccc:	 00 00 00 00 00 00 00 00         ........
  11dcd4:	 0c 6c 10 00 00 00 00 00         .l......
  11dcdc:	 88 6d 10 00 50 6e 10 00         .m..Pn..
  11dce4:	 54 6e 10 00 00 00 00 00         Tn......
  11dcec:	 00 00 00 00 00 00 00 00         ........
  11dcf4:	 00 00 00 00 00 00 00 00         ........
  11dcfc:	 00 00 00 00 00 00 00 00         ........
  11dd04:	 00 00 00 00 00 00 00 00         ........
  11dd0c:	 00 00 00 00                     ....


sydf_vfs_ops:
  11dd10:	 cd b8 11 00 58 6e 10 00         ....Xn..
  11dd18:	 72 70 10 00 20 73 10 00         rp.. s..
  11dd20:	 22 73 10 00 7a 73 10 00         "s..zs..
  11dd28:	 00 00 00 00 00 00 00 00         ........
  11dd30:	 54 74 10 00 00 00 00 00         Tt......
  11dd38:	 a0 74 10 00 ec 74 10 00         .t...t..
  11dd40:	 fc 74 10 00 00 00 00 00         .t......
  11dd48:	 0c 75 10 00 00 00 00 00         .u......
  11dd50:	 00 00 00 00 24 75 10 00         ....$u..
  11dd58:	 3a 75 10 00 00 00 00 00         :u......
  11dd60:	 00 00 00 00 00 00 00 00         ........
  11dd68:	 a6 75 10 00                     .u..


vfs_ops_end:
  11dd6c:    00 00       	nop
  11dd6e:    00 00       	nop
  11dd70:    00 00       	nop
  11dd72:    00 00       	nop
  11dd74:    00 00       	nop
  11dd76:    00 00       	nop
  11dd78:    00 00       	nop
  11dd7a:    00 00       	nop
  11dd7c:    00 00       	nop
  11dd7e:    00 00       	nop

